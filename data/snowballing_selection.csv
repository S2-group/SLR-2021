ID,Round,Direction,Item Type,Year,Author,Publication Title,DOI,Url,Abstract,Automatic Tags,Title,I1 (!ROS),I2 (!SE),I3 (!English),I4 (<2007),I5 (!Peer reviewed),E1 (only-implementation),E2 (dup previous),E2 (duplicate),E3 (no full-text),Included,,
S04,1,Forward,journalArticle,2019,"Dehnavi, Saeid; Sedaghatbaf, Ali; Salmani, Bahar; Sirjani, Marjan; Kargahi, Mehdi; Khamespanah, Ehsan",Procedia Computer Science,10.1016/j.procs.2019.08.012,https://www.sciencedirect.com/science/article/pii/S1877050919309263,"Robotic technology helps humans in different areas such as manufacturing, health care and education. Due to the ubiquitous revolution, today’s focus is on mobile robots and their applications in a variety of cyber-physical systems. ROS is a wll-known and powerful middleware that facilitates software development for mobile robots. However, this middleware does not support assuring properties such as timeliness and safety of ROS-based software. In this paper we present an integration of Timed Rebeca modeling language with ROS to synthesize verified robotic software. First, a conceptual model of robotic programs is developed using Timed Rebeca. After verifying a set of user-defined correctness properties on this model, it is translated to a ROS program automatically. Experiments on some small-scale case studies illustrates the applicability of the proposed integration method.",Model Checking; Robotics; ROS; Formal Verification; Mobility; Model-Based Design; Timed Rebeca,Towards an Actor-based Approach to Design Verified ROS-based Robotic Programs using Rebeca,,,,,,,,,,YES,Procedia Computer Science,Procedia Computer Science
S09,1,Forward,conferencePaper,2019,"Bardaro, Gianluca; Semprebon, Andrea; Chiatti, Agnese; Matteucci, Matteo",2019 Third IEEE International Conference on Robotic Computing (IRC),10.1109/IRC.2019.00118,,"Modelling complex systems is a common practice and de facto standard across most application domains in engineering. Although it would seem unreasonable - and quite impractical - to build a structure as complex as a bridge without a reference blueprint detailing how to arrange all of its building blocks, in Software Development, and, particularly in the context of Robotics, examples adhering to rigorous modelling routines are still relatively rare to find. Yet, models help understanding complex problems while pinpointing their potential solutions, through abstraction. Further, models aid communication, i.e., the unambiguous exchange of reasoning processes across the involved agents. The complexity of Robotic Software Systems suggests that a widespread application of modelling techniques, from the very initial implementation stages, would (i) ease the definition, engineering and debugging of the related sub-features significantly, and (ii) guide collaborative efforts towards a common standard. To this aim, we presented a toolchain conceived for parsing an input AADL model into a compilable code suite. Keeping the model building and the linkage of the robot application with the ROS environment in the developer's hands, this framework delegates all the remaining tasks to an automated code generator, producing a fully-functioning ROS packages (i.e., already configured and ready for compiling) as output. We first presented the discussed framework, highlighted its related advantages - when compared to the only other similar approach found in the literature -, and used it as an exemplary use case, to prompt broader discussions on the benefits of model-based software development in Robotics.",AADL; Analytical models; Code generation; Computer architecture; Message systems; Modeling; Peer-to-peer computing; Robotics; Robots; ROS; Software packages,From Models to Software Through Automatic Transformations: An AADL to ROS End-to-End Toolchain,,,,,,,,,,YES,2019 Third IEEE International Conference on Robotic Computing (IRC),IRC
S10,1,Forward,conferencePaper,2020,"Wehrmeister, Marco Aurelio",2020 25th IEEE International Conference on Emerging Technologies and Factory Automation (ETFA),10.1109/ETFA46521.2020.9212077,,"This work proposes an approach to generate automatically the embedded software for distributed Cyber-Physical Systems implemented using the Robotic Operating System (ROS) framework. For that, the Aspect-oriented Model Driven Engineering for Real-Time systems (AMoDE-RT) design approach has been extended in order to support the C++ code generation using the semantics and libraries available in ROS framework which is widely used in both academia and industry to implement the embedded software for robotic systems. The system architecture, behavior, requirements and constraints are specified in a UML/MARTE model. The information specified in the high-level model is used as input for a tool that generates a great part of the embedded software for all distributed computing devices. The main goal is to foster the use of Model-Driven Engineering in the context of cyber-physical systems design aiming the rapid prototyping via simulation and also the generation of the actual implementation of the system components. The proposed approach has been validated through a case study that demonstrates the feasibility to implement a ROS/C++ software for industrial systems. The results indicate that the proposed approach can be applied to complex systems comprising a larger number of interacting devices, whereas keeping the high-level of abstraction for system specification in UML/MARTE models.",code generation; embedded software; MARTE; Model-Driven Engineering; Robot Operating System; UML,Generating ROS-based Software for Industrial Cyber-Physical Systems from UML/MARTE,,,,,,,,,,YES,2020 25th IEEE International Conference on Emerging Technologies and Factory Automation (ETFA),ETFA
S102,1,Forward,conferencePaper,2021,"Drumheller, William R.; Conner, David C.",SoutheastCon 2021,10.1109/SoutheastCon45413.2021.9401832,,"The Robot Operating System (ROS) is frequently used to develop complex robotic systems with many interacting software components. While ROS provides several tools for visualizing active ROS deployments, it lacks tools for Model-Based Engineering (MBE) during the development stage, and ROS lacks tools for easily documenting the interfaces and deployed components other than specific configuration and launch files themselves. This paper presents a software tool chain - dubbed CHRIS ROS Modeling - that enables users to document an existing ROS deployment. The information is stored as instances of a simplified metamodel in portable formats. The resulting information serves to document an existing system and will serve as the foundation for future work to develop an integrated MBE system. This paper compares our approach to similar approaches currently in development.",Computational modeling; Documentation; Portable document format; System testing; Tools; US Department of Transportation; Visualization,Documentation and Modeling of ROS Systems,,,,,,,,,,YES,SoutheastCon 2021,SoutheastCon
S103,1,Forward,conferencePaper,2019,"Hammoudeh Garcia, Nadia; Lüdtke, Mathias; Kortik, Sitar; Kahl, Björn; Bordignon, Mirko",2019 Third IEEE International Conference on Robotic Computing (IRC),10.1109/IRC.2019.00060,,"Ten years after its first release, the Robot Operating System (ROS) is arguably the most popular software framework used to program robots. It achieved such status despite its shortcomings compared to alternatives similarly centered on manual programming and, perhaps surprisingly, to model-driven engineering (MDE) approaches. Based on our experience as users and developers of both ROS and MDE tools, we identified possible ways to leverage the accessibility of ROS and its large software ecosystem, while providing quality assurance measures through selected MDE techniques. After describing our vision on how to combine MDE and manually written code, we present the first technical contribution in this pursuit: a family of three metamodels to respectively model ROS nodes, communication interfaces, and systems composed from subsystems. Such metamodels can be used, through the accompanying Eclipse-based tooling made publicly available, to model ROS systems of arbitrary complexity and generate with correctness guarantees the software artifacts for their composition and deployment. Furthermore, they account for specifications on these aspects by the Object Management Group (OMG), in order to be amenable to hybrid systems coupling ROS and other frameworks. We also report on our experience with a large and complex corpus of ROS software used in a commercially deployed robot (the Care-O-bot 4), to explain the rationale of the presented work, including the shortcomings of standard ROS tools and of previous efforts on ROS modeling.",development environments; Manuals; models; Robot kinematics; Robot sensing systems; ROS; Service robots; Software; Tools,Bootstrapping MDE Development from ROS Manual Code - Part 1: Metamodeling,,,,,,,,,,YES,2019 Third IEEE International Conference on Robotic Computing (IRC),IRC
S108,1,Forward,conferencePaper,2020,"Breitenhuber, Guido",2020 Fourth IEEE International Conference on Robotic Computing (IRC),10.1109/IRC.2020.00081,,"Robotics is a highly interdisciplinary field where applications of complex architectures are built to solve challenging problems. Integration of multiple components in this environment continues to be a time-consuming, tedious and error-prone activity. Typical approaches in parallel component development or composition from re-usable components focus on structural and static aspects like ROS message and topic definitions. However, the behavioural part of robot software components is hardly ever specified in sufficient detail. In this work, we tackle this issue by proposing an application-level testing framework for robot software applications that uses a fluent API to describe the expected behaviour of an application or its components. This is a first step towards test-first based development of robot software in order to increase robot software quality.",Automated testing; Computer architecture; Conferences; Robots; ROS; ROS testing; Software quality; Software testing; Testing; Testing frameworks,Towards application level testing of ROS networks,,,,,,,,,,YES,2020 Fourth IEEE International Conference on Robotic Computing (IRC),IRC
S134,1,Forward,conferencePaper,2019,"Okumuş, Fatih; Kocamaz, Adnan Fatih",2019 International Artificial Intelligence and Data Processing Symposium (IDAP),10.1109/IDAP.2019.8875993,,"In Cyber-Physical Systems, logistical activities with automatic guided vehicles (AGV) are indispensable for Industry 4.0 integration. In order to navigate the AGVs to be used in logistics, difficulties such as localization of AGV, mapping the environment, mobile-immobile obstacle avoidance, and optimum task allocation must be overcome. All these operations can be realized with an architecture that provides communication infrastructure and management mechanism in multiple robots. In this publication, cloud-based, ROS-enabled communication and navigation methods for multiple AGVs are proposed. The proposed method was tested and applied successfully in a laboratory environment.",AGV; Cloud computing; cloud robotics; Cyber-physical systems; navigation; Navigation; Robot kinematics; ROS; Service robots; Software; Task analysis,"Testing, Verification and Improvements of Timeliness in ROS Processes",,,,,,,,,,YES,2019 International Artificial Intelligence and Data Processing Symposium (IDAP),IDAP
S16,1,Forward,journalArticle,2021,"Albonico, Michel; Malavolta, Ivano; Pinto, Gustavo; Guzman, Emitza; Chinnappan, Katerina; Lago, Patricia",MSR 2021,,http://arxiv.org/abs/2103.13762,"Robots are becoming more and more commonplace in many industry settings. This successful adoption can be partly attributed to (1) their increasingly affordable cost and (2) the possibility of developing intelligent, software-driven robots. Unfortunately, robotics software consumes significant amounts of energy. Moreover, robots are often battery-driven, meaning that even a small energy improvement can help reduce its energy footprint and increase its autonomy and user experience. In this paper, we study the Robot Operating System (ROS) ecosystem, the de-facto standard for developing and prototyping robotics software. We analyze 527 energy-related data points (including commits, pull-requests, and issues on ROS-related repositories, ROS-related questions on StackOverflow, ROS Discourse, ROS Answers, and the official ROS Wiki). Our results include a quantification of the interest of roboticists on software energy efficiency, 10 recurrent causes, and 14 solutions of energy-related issues, and their implied trade-offs with respect to other quality attributes. Those contributions support roboticists and researchers towards having energy-efficient software in future robotics projects.",Computer Science - Robotics; Computer Science - Software Engineering,Mining Energy-Related Practices in Robotics Software,,,,,,,,,,YES,MSR 2021,MSR
S160,1,Forward,conferencePaper,2020,"Malavolta, Ivano; Lewis, Grace; Schmerl, Bradley; Lago, Patricia; Garlan, David",2020 IEEE/ACM 42nd International Conference on Software Engineering: Software Engineering in Practice (ICSE-SEIP),,,"The Robot Operating System (ROS) is the de-facto standard for robotic software. If on one hand ROS is helping roboticists, e.g., by providing a standardized communication platform, on the other hand ROS-based systems are getting larger and more complex and could benefit from good software architecture practices. This paper presents an observational study aimed at (i) unveiling the state-of the-practice for architecting ROS-based systems and (ii) providing guidance to roboticists about how to properly architect ROS-based systems. To achieve these goals, we (i) build a dataset of 335 GitHub repositories containing real open-source ROS-based systems, (ii) mine the repositories for extracting the state of the practice about how roboticists are architecting them, and (iii) synthesize a catalog of 49 evidence-based guidelines for architecting ROS-based systems. The guidelines have been validated by 77 roboticists working on real-world open-source ROS-based systems.",Computer architecture; Data mining; Documentation; Guidelines; Mining Software Repositories; Open source software; Robotics; Robots; Service robots; Software Architecture,How do you Architect your Robots? State of the Practice and Guidelines for ROS-based Systems,,,,,,,,,,YES,2020 IEEE/ACM 42nd International Conference on Software Engineering: Software Engineering in Practice (ICSE-SEIP),SEIP
S161,1,Forward,book,2021,"Malavolta, Ivano; Chinnappan, Katerina; Swanborn, Stan; Lewis, Grace; Lago, Patricia",,,,,,Mining the ROS ecosystem for Green Architectural Tactics in Robotics and an Empirical Evaluation,,,,,,,,,,YES,,MSR
S164,1,Forward,journalArticle,2021,"Malavolta, Ivano; Lewis, Grace A.; Schmerl, Bradley; Lago, Patricia; Garlan, David",Journal of Systems and Software,10.1016/j.jss.2021.110969,https://linkinghub.elsevier.com/retrieve/pii/S0164121221000662,"Methods: We designed and conducted an observational study where we (i) built a dataset of 335 GitHub repositories containing real open-source ROS-based systems, and (ii) mined the repositories to extract and synthesize quantitative and qualitative findings about how roboticists are architecting ROS-based systems. Results: First, we extracted an empirically-grounded overview of the state of the practice for architecting and documenting ROS-based systems. Second, we synthesized a catalog of 47 architecting guidelines for ROS-based systems. Third, the extracted guidelines were validated by 119 roboticists working on real-world open-source ROS-based systems. Conclusion: Roboticists can use our architecting guidelines for applying good design principles to develop robots that meet quality requirements, and researchers can use our results as evidence-based indications about how real-world ROS systems are architected today, thus inspiring future research contributions.",,Mining guidelines for architecting robotics software,,,,,,,,,,YES,Journal of Systems and Software,JSS
S232,1,Backward,conferencePaper,2012,"Kilgo, Paul; Syriani, Eugene; Anderson, Monica","Simulation, Modeling, and Programming for Autonomous Robots",10.1007/978-3-642-34327-8_14,,"In robotics we are often faced with the problem of repeatedly writing robot drivers for the same devices, but different robot frameworks. In an effort to counter this, a domain specific language for generating robot drivers was developed. However, descriptions tend to get verbose fast and the adopted syntax was difficult for programmers. This paper outlines an attempt to shift away from a textual syntax and toward a visual syntax, instead relying on the textual syntax to communicate the model to other tools. In addition, a formalism for defining ROS nodes is presented and a model transformation for mapping RDIS messages to ROS messages and vice-versa is created.",Concrete Syntax; Model Transformation; Object Management Group; Operational Semantic; Visual Modeling,A Visual Modeling Language for RDIS and ROS Nodes Using AToM3,,,,,,,,,,YES,"Simulation, Modeling, and Programming for Autonomous Robots","Simulation, Modeling, and Programming for Autonomous Robots"
S234,1,Backward,conferencePaper,2016,"Santos, André; Cunha, Alcino; Macedo, Nuno; Lourenço, Cláudio",2016 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS.2016.7759661,,"Robots are being increasingly used in safety-critical contexts, such as transportation and health. The need for flexible behavior in these contexts, due to human interaction factors or unstructured operating environments, led to a transition from hardware- to software-based safety mechanisms in robotic systems, whose reliability and quality is imperative to guarantee. Source code static analysis is a key component in formal software verification. It consists on inspecting code, often using automated tools, to determine a set of relevant properties that are known to influence the occurrence of defects in the final product. This paper presents HAROS, a generic, plug-in-driven, framework to evaluate code quality, through static analysis, in the context of the Robot Operating System (ROS), one of the most widely used robotic middleware. This tool (equipped with plug-ins for computing metrics and conformance to coding standards) was applied to several publicly available ROS repositories, whose results are also reported in the paper, thus providing a first overview of the internal quality of the software being developed in this community.",Context; Measurement; Safety; Service robots; Software; Standards,A framework for quality assessment of ROS repositories,,,,,,,,,,YES,2016 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),IROS
S235,1,Backward,conferencePaper,2019,"Santos, André; Cunha, Alcino; Macedo, Nuno",2019 Third IEEE International Conference on Robotic Computing (IRC),10.1109/IRC.2019.00018,,"The Robot Operating System (ROS) is one of the most popular open source robotic frameworks, and has contributed significantly to the fast development of robotics. Even though ROS provides many ready-made components, a robotic system is inherently complex, in particular regarding the architecture and orchestration of such components. Availability and analysis of a system's architecture at compile time is fundamental to ease comprehension and development of higher-quality software. However, ROS developers have to overcome this complexity relying mostly on testing and runtime visualisers. This work aims to enhance static-time support by proposing, firstly, a metamodel to describe the software architecture of ROS systems (the ROS Computation Graph) and, secondly, model extraction and visualisation tools for such architectural models. The provided tools allow users to specify custom-made queries over these models, enabling the static verification of relevant properties that had to be (manually) checked at runtime before.",Computational modeling; Computer architecture; robotics; Robots; Runtime; Software; software architecture; software quality; static analysis; Tools; Visualization,Static-Time Extraction and Analysis of the ROS Computation Graph,,,,,,,,,,YES,2019 Third IEEE International Conference on Robotic Computing (IRC),IRC
S236,1,Backward,conferencePaper,2017,"Santos, André; Cunha, Alcino; Macedo, Nuno; Arrais, Rafael; dos Santos, Filipe Neves",2017 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS.2017.8206237,,"The Robot Operating System (ROS) is nowadays one of the most popular frameworks for developing robotic applications. To ensure the (much needed) dependability and safety of such applications we forecast an increasing demand for ROS-specific coding standards, static analyzers, and tools alike. Unfortunately, the development of such standards and tools can be hampered by ROS modularity and configurability, namely the substantial number of primitives (and respective variants) that must, in principle, be considered. To quantify the severity of this problem, we have mined a large number of existing ROS packages to understand how its primitives are used in practice, and to determine which combinations of primitives are most popular. This paper presents and discusses the results of this study, and hopefully provides some guidance for future standardization efforts and tool developers.",C++ languages; Robots; Runtime; Software; Standards; Tools,Mining the usage patterns of ROS primitives,,,,,,,,,,YES,2017 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),IROS
S30,1,Forward,conferencePaper,2020,"Carvalho, Renato; Cunha, Alcino; Macedo, Nuno; Santos, André",2020 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS45743.2020.9341085,,"Robots are currently deployed in safety-critical domains but proper techniques to assess the functional safety of their software are yet to be adopted. This is particularly critical in ROS, where highly configurable robots are built by composing third-party modules. To promote adoption, we advocate the use of lightweight formal methods, automatic techniques with minimal user input and intuitive feedback. This paper proposes a technique to automatically verify system-wide safety properties of ROS-based applications at static time. It is based in the formalization of ROS architectural models and node behaviour in Electrum, over which system-wide specifications are subsequently model checked. To automate the analysis, it is deployed as a plug-in for HAROS, a framework for the assessment of ROS software quality aimed at the ROS community. The technique is evaluated in a real robot, AgRob V16, with positive results.",Computer architecture; Intelligent robots; Middleware; Model checking; Safety; Scalability; Software quality,Verification of system-wide safety properties of ROS applications,,,,,,,,,,YES,2020 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),IROS
S349,1,Backward,conferencePaper,2014,"Huang, Jeff; Erdogan, Cansu; Zhang, Yi; Moore, Brandon; Luo, Qingzhou; Sundaresan, Aravind; Rosu, Grigore",Runtime Verification,10.1007/978-3-319-11164-3_20,,"We present ROSRV, a runtime verification framework for robotic applications on top of the Robot Operating System (ROS [8]), a widely used open-source framework for robot software development. ROSRV aims to address the safety and security issues of robots by providing a transparent monitoring infrastructure that intercepts and monitors the commands and messages passing through the system. Safety and security properties can be defined in a formal specification language, and are ensured by automatically generated monitors. ROSRV integrates seamlessly with ROS—no change in ROS nor the application code is needed. ROSRV has been applied and evaluated on a commercial robot.",Access Control Policy; Linear Temporal Logic; Robot Operating System; Runtime Verification; Virtual Machine Monitor,ROSRV: Runtime Verification for Robots,,,,,,,,,,YES,Runtime Verification,International Conference on Runtime Verification RV
S362,1,Backward,conferencePaper,2015,"Curran, William; Thornton, Thomas; Arvey, Benjamin; Smart, William D.",2015 IEEE International Conference on Robotics and Automation (ICRA),10.1109/ICRA.2015.7140071,,"The ROS ecosystem is an interconnected web of packages, nodes and people with no efficient means to compare, assess or visualize them. We develop a set of tools consisting of various metrics, a data visualization web app, and an active monitoring system. With these tools, we measure the current state of the ecosystem as well as determine where the community should direct their efforts. We also encourage the community to provide input on potential applications, additional metrics, and further improvements to address the needs of the ROS ecosystem. We incentivize this input by gamifying community contributions to the infrastructure. Encouraging user-driven improvements to the ROS infrastructure through the use of a leaderboard and friendly competition will advance ROS development and community support far into the future.",Communities; Ecosystems; Measurement; Open source software; Peer-to-peer computing; Robots,Evaluating impact in the ROS ecosystem,,,,,,,,,,YES,2015 IEEE International Conference on Robotics and Automation (ICRA),ICRS
S38,1,Forward,conferencePaper,2021,"Swanborn, Stan; Malavolta, Ivano",2021 IEEE/ACM 43rd International Conference on Software Engineering: Companion Proceedings (ICSE-Companion),10.1109/ICSE-Companion52605.2021.00029,,"Software is becoming the core aspect in robotics development and it is growing in terms of complexity and size. However, roboticists and researchers are struggling in ensuring and even measuring the quality of their software with respect to run-time properties such as energy efficiency and performance.This paper presents Robot Runner, a tool for streamlining the execution of measurement-based experiments involving robotics software. The tool is able to automatically setup, start, resume, and fully replicate user-defined experiments. Thanks to its plugin-based architecture, the tool is fully independent of the number, type, and complexity of the used robots (both real and simulated). GitHub repository – https://github.com/S2-group/robot-runner Youtube video – https://youtu.be/le-SAXI2k1E",Complexity theory; Empirical software engineering; Energy measurement; Robotics software; Robots; ROS; Software; Software engineering; Software measurement; Tools,Robot Runner: A Tool for Automatically Executing Experiments on Robotics Software,,?,,,,,,,,YES,2021 IEEE/ACM 43rd International Conference on Software Engineering: Companion Proceedings (ICSE-Companion),ICSE - DEMOS
S387,1,Backward,conferencePaper,2016,"Maruyama, Yuya; Kato, Shinpei; Azumi, Takuya",Proceedings of the 13th International Conference on Embedded Software,10.1145/2968478.2968502,,"Middleware for robotics development must meet demanding requirements in real-time distributed embedded systems. The Robot Operating System (ROS), open-source middleware, has been widely used for robotics applications. However, the ROS is not suitable for real-time embedded systems because it does not satisfy real-time requirements and only runs on a few OSs. To address this problem, ROS1 will undergo a significant upgrade to ROS2 by utilizing the Data Distribution Service (DDS). DDS is suitable for real-time distributed embedded systems due to its various transport configurations (e.g., deadline and fault-tolerance) and scalability. ROS2 must convert data for DDS and abstract DDS from its users; however, this incurs additional overhead, which is examined in this study. Transport latencies between ROS2 nodes vary depending on the use cases, data size, configurations, and DDS vendors. We conduct proof of concept for DDS approach to ROS and arrange DDS characteristic and guidelines from various evaluations. By highlighting the DDS capabilities, we explore and evaluate the potential and constraints of DDS and ROS2.",data distribution service; embedded; publish/subscribe; quality of service; real-time; robot operating system,Exploring the performance of ROS2,,,,,,,,,,YES,Proceedings of the 13th International Conference on Embedded Software,Proceedings of the 13th International Conference on Embedded Software
S409,1,Backward,conferencePaper,2015,"Estefo, Pablo; Robbes, Romain; Fabry, Johan",2015 34th International Conference of the Chilean Computer Science Society (SCCC),10.1109/SCCC.2015.7416575,,"The middleware for robotics ROS has become the de-facto standard for developing robot applications. Thanks to our experience using ROS we conjectured that the quality of code of ROS is low, yielding a poor user experience for ROS users and posing important barriers to robot software development. In this work we present a first quantification of code quality of the ROS ecosystem through an analysis of code duplication in launchfiles. Our experience led us to believe that these configuration files exhibit a significant amount of code duplication, and this study shows that it is indeed the case. We find that 25% of packages with multiple launchfiles have duplicated code, and that clones are highly similar.",Cloning; Ecosystems; Robot kinematics; Software; Visualization; XML,Code duplication in ROS launchfiles,,,,,,,,,,YES,2015 34th International Conference of the Chilean Computer Science Society (SCCC),SCCC
S431,1,Backward,conferencePaper,2015,"Ernits, Juhan; Halling, Evelin; Kanter, Gert; Vain, Jüri",2015 European Conference on Mobile Robots (ECMR),10.1109/ECMR.2015.7324210,,"We apply model-based testing - a black box testing technology - to improve the state of the art of integration testing of navigation and localisation software for mobile robots built in ROS. Online model-based testing involves building executable models of the requirements and executing them in parallel with the implementation under test (IUT). In the current paper we present an automated approach to generating a model from the topological map that specifies where the robot can move to. In addition, we show how to specify scenarios of interest and how to add human models to the simulated environment according to a specified scenario. We measure the quality of the tests by code coverage, and empirically show that it is possible to achieve increased test coverage by specifying simple scenarios on the automatically generated model of the topological map. The scenarios augmented by adding humans to specified rooms at specified stages of the scenario simulate the changes in the environment caused by humans. Since we test navigation at coordinate and topological level, we report on finding problems related to the topological map.",Adaptation models; Automata; Computational modeling; Robot kinematics; Software; Testing,Model-based integration testing of ROS packages: A mobile robot case study,,,,,,,,,,YES,2015 European Conference on Mobile Robots (ECMR),ECMR
S48,1,Forward,conferencePaper,2021,"Radermacher, Ansgar; Morelli, Matteo; Hussein, Mahmoud; Nouacer, Reda",Proceedings of the 2021 Drone Systems Engineering and Rapid Simulation and Performance Evaluation: Methods and Tools Proceedings,10.1145/3444950.3444956,https://doi.org/10.1145/3444950.3444956,"Drones/UAVs are able to perform air operations that are difficult to carry out by manned aircrafts. Their use brings significant environmental benefits and economic savings while reducing risks to human life. Recently, a number of approaches introduced a support for the development of drone software systems. However, the development of such systems is still largely done following ad-hoc processes without capturing systematically all requirements and constraints, and without a clear architectural vision. Therefore, in this paper, we introduce the Papyrus for Robotics tool. This tool is compliant with the model-driven development approach proposed by the RobMoSys project. The tool distinguishes different stakeholders and artefacts, and has a support for high-level behavior modeling. In addition, due to the nature of the drone domain, safety concerns play an important role. For instance, a drone needs to fly in safe areas only (i.e. geo-caging) or keep a sufficient safety-distance from other drones/flying objects in the space. Thus, the tool has a specific support for safety concerns. To ensure the applicability of our tool, we have used it to perform a case study in the context of the COMP4DRONES project that targets reducing the development cost of drone systems.",Code Generation; Safety; Modeling; ROS2; Drones,Designing Drone Systems with Papyrus for Robotics,,,,,,,,,,YES,Proceedings of the 2021 Drone Systems Engineering and Rapid Simulation and Performance Evaluation: Methods and Tools Proceedings,Proceedings of the 2021 Drone Systems Engineering and Rapid Simulation and Performance Evaluation: Methods and Tools Proceedings
S507,1,Backward,conferencePaper,2017,"Conner, David C.; Willis, Justin",SoutheastCon 2017,10.1109/SECON.2017.7925266,,"This paper describes the Flexible Navigation system that extends the ROS Navigation stack and compatible libraries to separate computation from decision making, and integrates the system with FlexBE - the Flexible Behavior Engine, which provides intuitive supervision with adjustable autonomy. Although the ROS Navigation plugin model offers some customization, many decisions are internal to move_base. In contrast, the Flexible Navigation system separates global planning from local planning and control, and uses a hierarchical finite state machine to coordinate behaviors. The Flexible Navigation system includes Python-based state implementations and ROS nodes derived from the move_base plugin model to provide compatibility with existing libraries as well as future extensibility. The paper concludes with complete system demonstrations in both simulation and hardware using the iRobot Create and Kobuki-based Turtlebot running under ROS Kinetic. The system supports multiple independent robots.",Collaboration; Computer architecture; Libraries; Navigation; Planning; Robot kinematics,Flexible Navigation: Finite state machine-based integrated navigation and control for ROS enabled robots,,,,,,,,,,YES,SoutheastCon 2017,SoutheastCon 2017
S516,1,Backward,conferencePaper,2017,"Jeong, Se-Yeon; Choi, I-Ju; Kim, Yeong-Jin; Shin, Yong-Min; Han, Jeong-Hun; Jung, Goo-Hong; Kim, Kyoung-Gon",Proceedings of the Companion of the 2017 ACM/IEEE International Conference on Human-Robot Interaction,10.1145/3029798.3038437,,"ROS (Robot Operating System) is an open source software framework used for robot control. In this paper, we analyzed and tested 4 vulnerabilities related to ROS authentication scheme insufficiency, ROS Bag, communication vulnerability, and service hijacking. Then, We devised countermeasures against them.",cyber-physical system; robot; ros; security; vulnerability,A Study on ROS Vulnerabilities and Countermeasure,,,,,,,x,,,YES,Proceedings of the Companion of the 2017 ACM/IEEE International Conference on Human-Robot Interaction,Proceedings of the Companion of the 2017 ACM/IEEE International Conference on Human-Robot Interaction
S01,1,Forward,conferencePaper,2020,"Keller, Claas; Mann, Zoltán Ádám",Service-Oriented Computing – ICSOC 2019 Workshops,10.1007/978-3-030-45989-5_4,,"An important feature of service-based and cloud-based systems is their ability to perform self-adaptation. Through self-adaptation, such systems can automatically react to changes and thus ensure the continued satisfaction of their functional and non-functional requirements. Self-adaptation may take non-negligible time (which we term adaptation latency), and during this period the self-adaptive system may exhibit degraded performance or other negative impact. Hence, it is important to understand how long self-adaptations take and what influences the adaptation latency. However, we are not aware of a systematic study of this question in the literature. This paper is a first step in this direction. We present (i) a model of adaptation latency that breaks it down into four components and (ii) a preliminary survey, limited to one conference series and to service-based and cloud-based systems, to analyze information about adaptation latency in the available literature on self-adaptive systems. According to the findings from this preliminary survey, although some components of the adaptation latency are studied in some publications, the whole adaptation delay is seldom considered.",,Towards Understanding Adaptation Latency in Self-adaptive Systems,x,,,,,,,,,NO,Proceedings of the Companion of the 2017 ACM/IEEE International Conference on Human-Robot Interaction,
S02,1,Forward,conferencePaper,2020,"Luo, Yixing; Yu, Yijun; Jin, Zhi; Li, Yao; Ding, Zuohua; Zhou, Yuan; Liu, Yang",2020 IEEE International Conference on Robotics and Automation (ICRA),10.1109/ICRA40945.2020.9197564,,"During flights, an unmanned aerial vehicle (UAV) may not be allowed to move across certain areas due to soft constraints such as privacy restrictions. Current methods on self-adaption focus mostly on motion planning such that the trajectory does not trespass predetermined restricted areas. When the environment is cluttered with uncertain obstacles, however, these motion planning algorithms are not flexible enough to find a trajectory that satisfies additional privacy-preserving requirements within a tight time budget during the flights. In this paper, we propose a privacy risk aware motion planning method through the reconfiguration of privacy-sensitive sensors. It minimises environmental impact by re-configuring the sensor during flight, while still guaranteeing the safety and energy hard constraints such as collision avoidance and timeliness. First, we formulate a model for assessing privacy risks of dynamically detected restricted areas. In case the UAV cannot find a feasible solution to satisfy both hard and soft constraints from the current configuration, our decision making method can then produce an optimal reconfiguration of the privacy-sensitive sensor with a more efficient trajectory. We evaluate the proposal through various simulations with different settings in a virtual environment and also validate the approach through real test flights on DJI Matrice 100 UAV.",Privacy; Unmanned aerial vehicles; Sensors; Trajectory; Cameras; Planning; Safety,Privacy-Aware UAV Flights through Self-Configuring Motion Planning,x,,,,,,,,,NO,,
S03,1,Forward,journalArticle,2021,"Badreddin, Omar; Rahad, Khandoker; Forward, Andrew; Lethbridge, Timothy",The Journal of Object Technology,10.5381/jot.2021.20.2.a1,http://www.jot.fm/contents/issue_2021_02/article1.html,"We present the results of a survey of 248 software practitioners conducted in three phases ten years apart. The goal of the study is to uncover trends in the practice of software design and the adoption patterns of modeling languages such as UML. The ﬁrst phase was conducted in April-December 2007 and included 113 responses. The second phase was conducted in March-November 2017 and included 115 responses. The third phase is a post-survey study was conducted in November 2018 and included additional questionnaires with 20 participants. All survey phases were conducted online, employed identical solicitation mechanisms, and included the same set of questions. The survey results are analyzed within each phase and across phases. We present the results and analysis of the data identifying upward and downward trends in design and modeling practices. The results indicate a signiﬁcant increase in the use of well-deﬁned and formal modeling languages, as well as a marked increase in the adoption of Domain-Speciﬁc Languages. This is also reﬂected in a signiﬁcant increase in the adoption of forward engineering methodologies. A key motivation for this uptake is a concern that programming languages and platforms may become quickly outdated. Unfortunately, there has been a consistent dissatisfaction with modeling tools features, particularly their ability to support effective communication and collaboration. This is mirrored by increasing dissatisfaction with modeling tools usability and learnability. Future projections of this study suggest that diversity in modeling languages and tools is likely to continue to grow, as well as the increase in reliance on models for automated artifacts generation. As such, model and tool interoperability is likely to become an even greater concern for the years to come. The results of this study can help researchers, practitioners, and educators to focus efforts on issues of relevance and signiﬁcance to the profession. Speciﬁcally, this research will advocate to build better software modeling tools and promote modeling to the educators.",,The Evolution of Software Design Practices Over a Decade: A Long Term Study of Practitioners.,x,,,,,,,,,NO,,
S05,1,Forward,conferencePaper,2019,"Ingrand, Felix",2019 Third IEEE International Conference on Robotic Computing (IRC),10.1109/IRC.2019.00059,,"The consequences of autonomous systems software failures can be potentially dramatic. There is no need to darken the picture, but still, it seems unlikely that people, insurance companies and certification agencies will let autonomous systems fly or drive around without requiring their makers and programmers to prove that the most critical parts of the software are robust and reliable. This is already the case for aeronautic, rail transportation, nuclear plants, medical devices, etc. were software must be certified, which possibly involve its formal validation and verification (V&V). Moreover, autonomous systems go further and embed onboard deliberation functions. This is what make them really autonomous, but open new challenges. We propose to consider the overall problem of V&V of autonomous systems software and examine the current situation with respect to the various type of software used. In particular, we point out that the availability of formal models is rather different depending on the type of component considered. We distinguish these different cases and stress the areas where we think we need to focus our efforts as to improve the overall robustness of autonomous systems.",Automobiles; autonomous robots; Autonomous systems; formal methods; Mathematical model; robotics software; Robots; Safety; Software; Task analysis; validation and verification,Recent Trends in Formal Validation and Verification of Autonomous Robots Software,x,,,,,,,,,NO,,
S06,1,Forward,conferencePaper,2019,"PHAM, Hoang Anh; SORIANO, Thierry; NGO, Van Hien",OCEANS 2019 - Marseille,10.1109/OCEANSE.2019.8867198,,"The goal of this study is to realize a component architecture of embedded control systems for coordination of UUV based on a Model Driven Engineering approach. We firstly have studied in end-to-end flow latency and faults for an embedded system of UUV in scenario-case coordinated control of multiple UUVs. A basic declarative model and its instance are then implemented to illustrate a scheduling analysis of the system instance. The abstraction of the complex embedded system is represented in consideration of AADL system, process, and device components. Following on this representation, the run-time composition of all elements, allocate software to hardware resources, and assign values to properties of the elements are detailed for analyzing and creating an instance of coordination system. Specially, it is taken into account for inspecting and developing a controller of low-cost underwater drone such as BlueROV, an open-source platform for a research prototype and educational purposes.",AADL; Computer architecture; embedded control system.; Hardware; MBE approach; Modeling; multiple UUVs; Robot kinematics; Safety; Software,Applying AADL to realize embedded control systems for coordination of multiple low-cost underwater drones,x,,,,,,,,,NO,,
S07,1,Forward,journalArticle,2020,"Arrais, Rafael; Ribeiro, Paulo; Domingos, Henrique; Veiga, Germano",International Journal of Advanced Robotic Systems,10.1177/1729881420910316,https://doi.org/10.1177/1729881420910316,"Motivated by the Fourth Industrial Revolution, there is an ever-increasing need to integrated Cyber-Physical Systems in industrial production environments. To address the demand for flexible robotics in contemporary industrial environments and the necessity to integrate robots and automation equipment in an efficient manner, an effective, bidirectional, reliable and structured data interchange mechanism is required. As an answer to these requirements, this article presents ROBIN, an open-source middleware for achieving interoperability between the Robot Operating System and CODESYS, a softPLC that can run on embedded devices and that supports a variety of fieldbuses and industrial network protocols. The referred middleware was successfully applied and tested in various industrial applications such as battery management systems, motion, robotic manipulator and safety hardware control, and horizontal integration between a mobile manipulator and a conveyor system.",Cyber-Physical Systems; IEC 61131-3; open-source middleware; plug’n’produce; ROS,ROBIN: An open-source middleware for plug‘n’produce of Cyber-Physical Systems,,x,,,,x,,,,NO,,
S08,1,Forward,journalArticle,2021,"Pinto, Matheus Leitzke; Wehrmeister, Marco Aurélio; de Oliveira, André Schneider",Journal of Intelligent & Robotic Systems,10.1007/s10846-020-01301-1,https://doi.org/10.1007/s10846-020-01301-1,"This paper discusses a novel approach to evaluate the real-time performance of computing platforms embedded in robotic systems. The motivation behind this work is the need for the robotic systems to meet their timing constraints, thus requiring time predictable real-time systems. We proposed a benchmark, named the Robotstone, which is an adaptation of a traditional real-time performance benchmark widely known in the real-time systems community. Thus, the presented work makes it easier for a robotic engineer to apply the benchmark in the modern robotics context by filtering out issues that do not matter on the robotics applications and adapting the benchmark’s relevant portions. The Robotstone has a set of experiments related to time-constrained application scenarios usually found in robotic systems. Each experiment defines an application-specific parameter that increases at every iteration until the system overloads. The real-time performance is then evaluated through the breakdown point, i.e., the system configuration in the application scenario when any functional or timing constraint is not met. The proposed toolset has been evaluated on two distinct platforms representing a class of embedded computing systems usually employed in robotic systems. Obtained results demonstrate the applicability of the Robotstone benchmark for a quick assessment of computing systems’ real-time performance often required on initial development stages of a robotic system.",,Real-Time Performance Evaluation for Robotics,x,,,,,,,,,NO,,
S100,1,Forward,journalArticle,2021,"Santos, André; Cunha, Alcino; Macedo, Nuno",arXiv:2103.01603 [cs],,http://arxiv.org/abs/2103.01603,"This tool paper presents the High-Assurance ROS (HAROS) framework. HAROS is a framework for the analysis and quality improvement of robotics software developed using the popular Robot Operating System (ROS). It builds on a static analysis foundation to automatically extract models from the source code. Such models are later used to enable other sorts of analyses, such as Model Checking, Runtime Verification, and Property-based Testing. It has been applied to multiple real-world examples, helping developers find and correct various issues.",Computer Science - Robotics; Computer Science - Software Engineering; D.2.1; D.2.4; D.2.5; D.2.8; D.2.9,The High-Assurance ROS Framework,,,,,x,,,,,NO,,
S101,1,Forward,journalArticle,2021,"de Araújo Silva, Edson; Valentin, Eduardo; Carvalho, Jose Reginaldo Hughes; da Silva Barreto, Raimundo",Journal of Computer Languages,10.1016/j.cola.2020.101021,https://www.sciencedirect.com/science/article/pii/S2590118420300812,"Robots are complex to develop due to the diversity of hardware, software components and the absence of common standards. To deal with these problems, Model-Driven Engineering (MDE) is used to systematize the software development. This work aims to provide a comprehensive overview of existing model-based approaches in robotics. We present a classification of the 63 papers selected comparing past expectations with present achievements, and showing that the self-adaptation of robots has been poorly explored. With advances in machine learning, there has been an increase in the possibilities of using model-based approaches aiming at greater autonomy of robotic software.",Domain-specific language; Model-Driven Engineering; Robotics,A survey of Model Driven Engineering in robotics,x,,,,,,,,,NO,,
S104,1,Forward,conferencePaper,2019,"Pichler, Marc; Dieber, Bernhard; Pinzger, Martin",2019 Third IEEE International Conference on Robotic Computing (IRC),10.1109/IRC.2019.00020,,"Since its beginnings ten years ago, the Robot Operating System (ROS) has created a huge community of developers and researchers and is now the most widespread open-source framework for robotics development. It is used in research, prototyping but also in commercial products and supports a wide range of robotic platforms, sensors and highlevel data processing functions. While for a research platform, quality of the software developed with it is typically of lower importance, ROS is gradually moving towards industrial applications making software quality a premier topic. In this paper, we want to gain insights on how ROS is used in practice, how high the quality of the ROS packages and applications is, and where potential pitfalls in the use of ROS lie. To achieve this, we have analyzed several thousands of open-source ROS packages found on GitHub and Bitbucket for their quality and their interdependencies. Our results include packages on the rosdistro index and, more importantly, packages that are not. From our results we show common issues in ROS-applications, quality implications, and also which packages of what quality are particularly popular.",dependency analysis; Indexes; Open source software; repository quality; ros; Service robots; software quality; Software quality; Tools,Can I Depend on you? Mapping the Dependency and Quality Landscape of ROS Packages,,,,,,,,x,,NO,,
S105,1,Forward,conferencePaper,2021,"Afzal, Afsoon; Katz, Deborah S.; Le Goues, Claire; Timperley, Christopher S.","2021 14th IEEE Conference on Software Testing, Verification and Validation (ICST)",10.1109/ICST49551.2021.00036,,"Robotics simulation plays an important role in the design, development, and verification and validation of robotics systems. Simulation represents a potentially cheaper, safer, and more reliable alternative to the widely used practice of manual field testing, and introduces valuable opportunities for extensive test automation. The goal of this paper is to develop a principled understanding of the ways robotics developers use simulation in their testing processes and the challenges they face in doing so. This understanding can guide the improvement of simulators and testing techniques for modern robotics development.To that end, we conduct a survey of 82 robotics developers from a diversity of backgrounds, addressing the current capabilities and limits of simulation in practice. We find that simulation is used by 84% of our participants for testing, and that many participants want to use simulation as part of their test automation. Using qualitative and quantitative research methods, we identify 10 high-level challenges that impede developers from using simulation for manual and automated testing and in general. These challenges include the gap between simulation and reality, a lack of reproducibility, and considerable resource costs associated with simulation. Finally, we outline ways in which simulators can be improved for use as a means of verification and validation and ways that the software engineering community can contribute to these improvements.",Automation; empirical study; Manuals; practitioner survey; Reliability; Reproducibility of results; robotics simulation challenges; robotics testing; Robots; simulation testing; Software testing; testing challenges; Tools,Simulation for Robotics Test Automation: Developer Perspectives,x,,,,,,,,,NO,,
S106,1,Forward,journalArticle,2020,"Bose, Aparna",,10.18419/opus-10965,http://elib.uni-stuttgart.de/handle/11682/10982,"Previous work has shown that Property-based Testing (PBT) can be successfully applied to testing synchronous software. For example, it has been demonstrated that PBT can be applied to testing cloud services, web services and telecoms software. But less research has been carried out to evaluate this approach to testing asynchronous code as in automotive software. In the work presented in this Master thesis, the data generation feature of PBT is exploited to test the functionality of a software module based on the AUTOSAR Adaptive Platform.  Properties are defined considering the system as a black-box targeting its functionality on an abstract level. First, we apply stateless properties to test a single functionality and thereby find the communication delay needed to incorporate in our testing at system level. Later, we implement a test infrastructure based on stateful properties using the Python tool Hypothesis for the demonstration of research based on PBT. The testing framework is interfaced with the runtime environment to integrate the former with the system being tested. The test inputs generated in this approach are evaluated for their effectiveness and efficiency in testing the software module under test. Finally, experts in the testing field have been interviewed to draw comparisons between PBT and traditional methods of testing.",,Property-based testing : evaluating its applicability and effectiveness for AUTOSAR basic software,x,,,,,,,,,NO,,
S107,1,Forward,journalArticle,,"Rodrigues, Célio Gil Gouveia",,,,"In this thesis, we present a property-based testing framework for assessing the correctness of ERC-20 contracts. In general, property-based testing automatically derives test cases and their inputs according to a model of correctness for the software under test, seeking falsifying examples for the violated model as witnesses of deviant behavior, and then, in a process known as shrinking, reducing their complexity or length towards edge cases that facilitate human understanding. This approach is undertaken for ERC-20 smart contracts, resorting to Brownie, a Python-based development and testing framework for Ethereum smart contracts that incorporates the Hypothesis engine for property-based testing. Using Brownie, we express the ERC-20 model and a few common extensions to it as rule-based state machines. We conduct an evaluation of this approach over 10 ERC-20 contracts written in the Solidity language, including 8 real-world contracts and the 2 reference implementations of ERC-20.",,Property-based testing of ERC-20 smart contracts,,,,x,x,,,,,NO,,
S109,1,Forward,journalArticle,,"Boucherit, Ammar; Castro, Laura M; Hasan, Osman; Khababa, Abdallah",,,,"Given the catastrophic damage that bugs in critical systems can inflict on human life and its socio-economic environment, the use of rigorous analysis techniques while developing such systems is getting more and more important especially with the increasingly growing complexity of their architecture. However, the aforementioned growing complexity of such systems architecture leads to many scalability issues for the existing formal specification and verification approaches. This paper presents a novel and scalable formal development approach for critical system software architectures. In particular, our proposal is based on rewriting logic and combines both model checking and property-based testing techniques to bridge the gap between these complementary techniques, and hence overcome the drawbacks of previous attempts to ensure the absence of undesired or unexpected behaviour in the specification and implementation of a critical system.",,Towards a hybrid formal analysis technique for safety-critical software architectures,,,,x,x,,,,,NO,,
S11,1,Forward,journalArticle,2021,"De Marchi, Mirco; Lumpp, Francesco; Martini, Enrico; Boldo, Michele; Aldegheri, Stefano; Bombieri, Nicola",Journal of Low Power Electronics and Applications,10.3390/jlpea11020024,https://www.mdpi.com/2079-9268/11/2/24,"Many modern programmable embedded devices contain CPUs and a GPU that share the same system memory on a single die. Such a unified memory architecture (UMA) allows programmers to implement different communication models between CPU and the integrated GPU (iGPU). Although the simpler model guarantees implicit synchronization at the cost of performance, the more advanced model allows, through the zero-copy paradigm, the explicit data copying between CPU and iGPU to be eliminated with the benefit of significantly improving performance and energy savings. On the other hand, the robot operating system (ROS) has become a de-facto reference standard for developing robotic applications. It allows for application re-use and the easy integration of software blocks in complex cyber-physical systems. Although ROS compliance is strongly required for SW portability and reuse, it can lead to performance loss and elude the benefits of the zero-copy communication. In this article we present efficient techniques to implement CPU–iGPU communication by guaranteeing compliance to the ROS standard. We show how key features of each communication model are maintained and the corresponding overhead involved by the ROS compliancy.",CPU–iGPU communication; CUDA; cyber-physical systems; ROS,Efficient ROS-Compliant CPU-iGPU Communication on Embedded Platforms,,x,,,,,,,,NO,,
S110,1,Forward,conferencePaper,2020,"Ghzouli, Razan; Berger, Thorsten; Johnsen, Einar Broch; Dragule, Swaib; Wąsowski, Andrzej",Proceedings of the 13th ACM SIGPLAN International Conference on Software Language Engineering,10.1145/3426425.3426942,https://doi.org/10.1145/3426425.3426942,"Autonomous robots combine a variety of skills to form increasingly complex behaviors called missions. While the skills are often programmed at a relatively low level of abstraction, their coordination is architecturally separated and often expressed in higher-level languages or frameworks. Recently, the language of Behavior Trees gained attention among roboticists for this reason. Originally designed for computer games to model autonomous actors, Behavior Trees offer an extensible tree-based representation of missions. However, even though, several implementations of the language are in use, little is known about its usage and scope in the real world. How do behavior trees relate to traditional languages for describing behavior? How are behavior tree concepts used in applications? What are the benefits of using them? We present a study of the key language concepts in Behavior Trees and their use in real-world robotic applications. We identify behavior tree languages and compare their semantics to the most well-known behavior modeling languages: state and activity diagrams. We mine open source repositories for robotics applications that use the language and analyze this usage. We find that Behavior Trees are a pragmatic language, not fully specified, allowing projects to extend it even for just one model. Behavior trees clearly resemble the models-at-runtime paradigm. We contribute a dataset of real-world behavior models, hoping to inspire the community to use and further develop this language, associated tools, and analysis techniques.",behavior trees; empirical study; robotics applications,Behavior trees in action: a study of robotics applications,x,,,,,,,,,NO,,
S111,1,Forward,journalArticle,2021,"Santos, Marcela G. dos; Petrillo, Fabio",arXiv:2102.12520 [cs],,http://arxiv.org/abs/2102.12520,"Robots are being applied in a vast range of fields, leading researchers and practitioners to write tasks more complex than in the past. The robot software complexity increases the difficulty of engineering the robot's software components with quality requirements. Researchers and practitioners have applied software engineering (SE) approaches and robotic domains to address this issue in the last two decades. This study aims to identify, classify and evaluate the current state-of-the-art Software Engineering for Robotic Systems (SERS). We systematically selected and analyzed 50 primary studies extracted from an automated search on Scopus digital library and manual search on the two editions of the RoSE workshop. We present three main contributions. Firstly, we provide an analysis from three following perspectives: demographics of publication, SE areas applied in robotics domains, and RSE findings. Secondly, we show a catalogue of research studies that apply software engineering techniques in the robotic domain, classified with the SWEBOK guide. We have identified 5 of 15 software engineering areas from the SWEBOK guide applied explicitly in robotic domains. The majority of the studies focused on the development phase (design, models and methods and construction). Testing and quality software areas have little coverage in SERS. Finally, we identify research opportunities and gaps in software engineering for robotic systems for future studies.",Computer Science - Robotics; Computer Science - Software Engineering,Software Engineering for Robotic Systems:a systematic mapping study,,,,,x,,,,,NO,,
S112,1,Forward,journalArticle,,"Askarpour, Mehrnoosh; Tsigkanos, Christos; Menghi, Claudio; Calinescu, Radu; Pelliccione, Patrizio; García, Sergio; Caldas, Ricardo; von Oertzen, Tim J. von; Wimmer, Manuel; Berardinelli, Luca; Rossi, Matteo; Bersani, Marcello M.; Rodrigues, Gabriel S.",,,https://orbilu.uni.lu/handle/10993/46656,,,RoboMAX: Robotic Mission Adaptation eXemplars,,,,x,x,,,,,NO,,
S113,1,Forward,thesis,2020,"Pfeiffer, Sammy",,,https://opus.lib.uts.edu.au/handle/10453/149347,"Robotics technologies have the potential to change the way we live for the better by reducing the difficulty of, helping with, or completely automating tasks. Robotics competitions such as RoboCup aim to push the field forward while providing an environment for participants to acquire important skills and knowledge. Most participants in these competitions are university teams with members from different backgrounds and levels of expertise, using different types of robots. These diverse teams must develop large and complex software stacks to accomplish their respective competitions’ objectives.  This thesis aims to improve the software development process for these teams in regards to the development experience and competition outcomes. This will help push forward the robotics field and, consequently, our quality of life.  The available literature about software development methodologies for non-professional teams in robotics competitions is currently limited. The objectives of this thesis include enlarging the available knowledge in this domain and creating a practical set of guidelines that improve the software development experience and outcomes for robotics competitions. In order to do this, the software development methodology of the UTS Unleashed! team was analyzed over three consecutive years of participation in the RoboCup@Home Social Standard Platform League from the point of view of the development lead. Additionally, expert feedback was gathered to analyze, discuss, and compare the software development methodology of other teams and experts in the RoboCup League.  The research methodologies used in this thesis are Action Research, to explore UTS Unleashed!’s case study, and Grounded Theory, to analyze expert feedback gathered from a workshop and survey of members of the RoboCup community.  To the author’s knowledge, this thesis presents the first longitudinal case study on a competitive team participating over multiple years in a robotics competition. Moreover, with the team under study achieving victory in their third year of participation. Furthermore, it is the first work showcasing expert feedback on a RoboCup teams’ software development process from the RoboCup community.  This thesis concludes with a set of guidelines for software development practices for teams participating in robotic competitions. These guidelines offer insights and advice to improve competition team software development experiences and outcomes.",,Code for Success: Software Development for Robotics Competitions,,,,,x,,,,,NO,,
S114,1,Forward,journalArticle,2021,"Santos, Marcela G. dos; Petrillo, Fabio",arXiv:2104.11351 [cs],,http://arxiv.org/abs/2104.11351,"Industrial robots are important machines applied in numerous modern industries that execute repetitive tasks with high accuracy, replacing or supporting dangerous jobs. In this kind of system, with increased complexity in which cost is related to the time the system keeps working, the system must operate with a minimum number of failures. In other words, a quality aspect important in industry is reliability. We hypothesize that Automated Acceptance Testing improves reliability for industrial robot program. We present the research question, the motivation for this study, our hypothesis and future research efforts.",Computer Science - Robotics; Computer Science - Software Engineering,Towards Automated Acceptance testing for industrial robots,,,,,x,,,,,NO,,
S115,1,Forward,journalArticle,2021,"Dragule, Swaib; Berger, Thorsten; Menghi, Claudio; Pelliccione, Patrizio",Software and Systems Modeling,10.1007/s10270-020-00854-x,https://doi.org/10.1007/s10270-020-00854-x,"Mobile robots are becoming increasingly important in society. Fulfilling complex missions in different contexts and environments, robots are promising instruments to support our everyday live. As such, the task of defining the robot’s mission is moving from professional developers and roboticists to the end-users. However, with the current state-of-the-art, defining missions is non-trivial and typically requires dedicated programming skills. Since end-users usually lack such skills, many commercial robots are nowadays equipped with environments and domain-specific languages tailored for end-users. As such, the software support for defining missions is becoming an increasingly relevant criterion when buying or choosing robots. Improving these environments and languages for specifying missions toward simplicity and flexibility is crucial. To this end, we need to improve our empirical understanding of the current state-of-the-art of such languages and their environments. In this paper, we contribute in this direction. We present a survey of 30 mission specification environments for mobile robots that come with a visual and end-user-oriented language. We explore the design space of these languages and their environments, identify their concepts, and organize them as features in a feature model. We believe that our results are valuable to practitioners and researchers designing the next generation of mission specification languages in the vibrant domain of mobile robots.",,A survey on the design space of end-user-oriented languages for specifying robotic missions,x,,,,,,,,,NO,,
S116,1,Forward,journalArticle,2021,"Ionescu, Tudor B.",Robotics,10.3390/robotics10010003,https://www.mdpi.com/2218-6581/10/1/3,"A novel approach to generic (or generalized) robot programming and a novel simplified, block-based programming environment, called &ldquo;Assembly&rdquo;, are introduced. The approach leverages the newest graphical user interface automation tools and techniques to generate programs in various proprietary robot programming environments by emulating user interactions in those environments. The &ldquo;Assembly&rdquo; tool is used to generate robot-independent intermediary program models, which are translated into robot-specific programs using a graphical user interface automation toolchain. The generalizability of the approach to list, tree, and block-based programming is assessed using three different robot programming environments, two of which are proprietary. The results of this evaluation suggest that the proposed approach is feasible for an entire range of programming models and thus enables the generation of programs in various proprietary robot programming environments. In educational settings, the automated generation of programs fosters learning different robot programming models by example. For experts, the proposed approach provides a means for generating program (or task) templates, which can be adjusted to the needs of the application at hand on the shop floor.",block-based programming; generic robot programming; graphical programming; GUI automation; robotic process automation,Leveraging Graphical User Interface Automation for Generic Robot Programming,x,x,,,,,,,,NO,,
S117,1,Forward,journalArticle,,"García, Sergio; Strüber, Daniel; Brugali, Davide; Berger, Thorsten; Pelliccione, Patrizio",,,,"We present our paper published in the proceedings of the ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering 2020. Robots that support humans by performing useful tasks (a.k.a., service robots) are booming worldwide. In contrast to industrial robots, the development of service robots comes with severe software engineering challenges, since they require high levels of robustness and autonomy to operate in highly heterogeneous environments. As a domain with critical safety implications, service robotics faces a need for sound software development practices. In this paper, we present the first large-scale empirical study to assess the state of the art and practice of robotics software engineering. We conducted 18 semi-structured interviews with industrial practitioners working in 15 companies from 9 different countries and a survey with 156 respondents (from 26 countries) from the robotics domain. Our results provide a comprehensive picture of (i) the practices applied by robotics industrial and academic practitioners, including processes, paradigms, languages, tools, frameworks, and reuse practices, (ii) the distinguishing characteristics of robotics software engineering, and (iii) recurrent challenges usually faced, together with adopted solutions. The paper concludes by discussing observations, derived hypotheses, and proposed actions for researchers and practitioners.",,Robotics Software Engineering: A Perspective from the Service Robotics Domain (Summary),,,,x,x,,,,,NO,,
S118,1,Forward,journalArticle,,"Afzal, Afsoon",,,,,,Automated Testing of Robotic and Cyberphysical Systems,,,,x,x,,,,,NO,,
S119,1,Forward,journalArticle,2021,"Dragule, Swaib; Berger, Thorsten; Menghi, Claudio; Pelliccione, Patrizio",Software and Systems Modeling,10.1007/s10270-020-00854-x,http://link.springer.com/10.1007/s10270-020-00854-x,"Mobile robots are becoming increasingly important in society. Fulﬁlling complex missions in different contexts and environments, robots are promising instruments to support our everyday live. As such, the task of deﬁning the robot’s mission is moving from professional developers and roboticists to the end-users. However, with the current state-of-the-art, deﬁning missions is non-trivial and typically requires dedicated programming skills. Since end-users usually lack such skills, many commercial robots are nowadays equipped with environments and domain-speciﬁc languages tailored for end-users. As such, the software support for deﬁning missions is becoming an increasingly relevant criterion when buying or choosing robots. Improving these environments and languages for specifying missions toward simplicity and ﬂexibility is crucial. To this end, we need to improve our empirical understanding of the current state-of-the-art of such languages and their environments. In this paper, we contribute in this direction. We present a survey of 30 mission speciﬁcation environments for mobile robots that come with a visual and end-user-oriented language. We explore the design space of these languages and their environments, identify their concepts, and organize them as features in a feature model. We believe that our results are valuable to practitioners and researchers designing the next generation of mission speciﬁcation languages in the vibrant domain of mobile robots.",,A survey on the design space of end-user-oriented languages for specifying robotic missions,,,,,,,,x,,NO,,
S12,1,Forward,conferencePaper,2020,"Cheng, Betty H. C.; Clark, Robert Jared; Fleck, Jonathon Emil; Langford, Michael Austin; McKinley, Philip K.",Proceedings of the 23rd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems,10.1145/3365438.3410952,https://doi.org/10.1145/3365438.3410952,"Cyber-physical systems that implement self-adaptive behavior, such as autonomous robots, need to ensure that requirements remain satisfied across run-time adaptations. The Robot Operating System (ROS), a middleware infrastructure for robotic systems, is widely used in both research and industrial applications. However, ROS itself does not assure self-adaptive behavior. This paper introduces AC-ROS, which fills this gap by using assurance case models at run time to manage the self-adaptive operation of ROS-based systems. Assurance cases provide structured arguments that a system satisfies requirements and can be specified graphically with Goal Structuring Notation (GSN) models. AC-ROS uses GSN models to instantiate a ROS-based MAPE-K framework, which in turn uses these models at run time to assure system behavior adheres to requirements across adaptations. For this study, AC-ROS is implemented and tested on EvoRally, a 1:5-scale autonomous vehicle.",assurance case; cyber-physical systems; digital twin; goal structuring notation; robot operating system; self-adaptive systems,AC-ROS: assurance case driven adaptation for the robot operating system,,,,,,,,,,,,
S120,1,Forward,journalArticle,2019,"Delgado, Raimarius; Park, Jaeho; Choi, Byoung Wook",Electronics,10.3390/electronics8020223,https://www.mdpi.com/2079-9292/8/2/223,"This paper presents design details adopting open embedded systems (OES) as real-time controllers in industrial distributed control systems. OES minimize development cost and enhance portability while addressing widely known shortcomings of their proprietary counterparts. These shortcomings include the black box method of distribution which hinders integration to more complex systems. However, OES are highly dependent on the compatibility of each software components and essential benchmarking is required to ensure that the system can satisfy hard real-time constraints. To address these issues and the notion that OES will find broader distributed control applications, we provide detailed procedures in realizing OES based on an open source real-time operating system on various low-cost open embedded platforms. Their performance was evaluated and compared in terms of periodicity and schedulability, task synchronization, and interrupt response time, which are crucial metrics to determine stability and reliability of real-time controllers. Practical implementations, including the modernization of a multi-axis industrial robot controller, are described clearly to serve as a comprehensive reference on the integration of OES in industrial distributed control systems.",industrial distributed control systems; open embedded systems; real-time controller; real-time operating systems; Xenomai,Open Embedded Real-time Controllers for Industrial Distributed Control Systems,x,,,,,,,,,NO,,
S121,1,Forward,journalArticle,2019,"Delgado, Raimarius; Choi, Byoung Wook",Electronics,10.3390/electronics8030317,https://www.mdpi.com/2079-9292/8/3/317,"This paper proposes a real-time embedded system for joint space control of omnidirectional mobile robots. Actuators driving an omnidirectional mobile robot are connected in a line topology which requires synchronization to move simultaneously in translation and rotation. We employ EtherCAT, a real-time Ethernet network, to control servo controllers for the mobile robot. The first part of this study focuses on the design of a low-cost embedded system utilizing an open-source EtherCAT master. Although satisfying real-time constraints is critical, a desired trajectory on the center of the mobile robot should be decomposed into the joint space to drive the servo controllers. For the center of the robot, a convolution-based path planner and a corresponding joint space control algorithm are presented considering its physical limits. To avoid obstacles that introduce geometric constraints on the curved path, a trajectory generation algorithm considering high curvature turning points is adapted for an omnidirectional mobile robot. Tracking a high curvature path increases mathematical complexity, which requires precise synchronization between the actuators of the mobile robot. An improvement of the distributed clock&mdash;the synchronization mechanism of EtherCAT for slaves&mdash;is presented and applied to the joint controllers of the mobile robot. The local time of the EtherCAT master is dynamically adjusted according to the drift of the reference slave, which minimizes the synchronization error between each joint. Experiments are conducted on our own developed four-wheeled omnidirectional mobile robot. The experiment results confirm that the proposed system is very effective in real-time control applications for precise motion control of the robot even for tracking high curvature paths.",EtherCAT; network-oriented system; real-time embedded controller; synchronous joint space motion; Xenomai,Network-Oriented Real-Time Embedded System Considering Synchronous Joint Space Motion for an Omnidirectional Mobile Robot,x,,,,,,,,,NO,,
S122,1,Forward,journalArticle,2019,"Park, Jaeho; Choi, Byoung Wook",Electronics,10.3390/electronics8091025,https://www.mdpi.com/2079-9292/8/9/1025,"In this paper, we present the detailed design and implementation procedures for an advanced driver assistance system (ADAS) based on an open source automotive open system architecture (AUTOSAR). Due to the increasing software complexity of ADAS, portability, component interoperability, and maintenance are becoming essential development factors. AUTOSAR satisfies these demands by defining system architecture standards. Although commercial distributions of AUTOSAR are well established, accessibility is a huge concern as they come with very expensive licensing fees. Open source AUTOSAR addresses this issue and can also minimize the overall cost of development. However, the development procedure has not been well established and could be difficult for engineers. The contribution of this paper is divided into two main parts: First, we provide the complete details on developing a collision warning system using an open source AUTOSAR. This includes the simplified basic concepts of AUTOSAR, which we have organized for easier understanding. Also, we present an improvement of the existing AUTOSAR development methodology focusing on defining the underlying tools at each development stage with clarity. Second, as the performance of open source software has not been proven and requires benchmarking to ensure the stability of the system, we propose various evaluation methods measuring the real-time performance of tasks and the overall latency of the communication stack. These performance metrics are relevant to confirm whether the entire system has deterministic behavior and responsiveness. The evaluation results can help developers to improve the overall safety of the vehicular system. Experiments are conducted on an AUTOSAR evaluation kit integrated with our self-developed collision warning system. The procedures and evaluation methods are applicable not only on detecting obstacles but other variants of ADAS and are very useful in integrating open source AUTOSAR to various vehicular applications.",ADAS; AUTOSAR; design methodology; open source; performance evaluation,Design and Implementation Procedure for an Advanced Driver Assistance System Based on an Open Source AUTOSAR,x,,,,,,,,,NO,,
S123,1,Forward,conferencePaper,2019,"Lee, Moonyoung; Heo, Yujin; Cho, Saihim; Park, Hyunsub; Oh, Jun-Ho",2019 19th International Conference on Advanced Robotics (ICAR),10.1109/ICAR46387.2019.8981593,,"This paper discusses the development of robot motion generation interface between a real-time software architecture and a non-real-time robot operating system. In order for robots to execute intelligent manipulation or navigation, close integration of high-level perception and low-level control is required. However, many available open-source perception modules are developed in ROS, which operates on Linux OS that don't guarantee RT performance. This can lead to non-deterministic responses and stability problems that can adversely affect robot control. As a result, many robotic systems devote RTOS for low-level motion control. Similarly, the humanoid robot platform developed at KAIST, Hubo, utilizes a custom real-time software framework called PODO. Although PODO provides easy interface for motion generation, it lacks interface to high-level frameworks such as ROS. As such, we present a new motion generation interface between ROS and PODO that enables users to generate motion trajectories through standard ROS messages while leveraging a real-time motion controller. With the proposed communication interface, we demonstrate series of manipulator tasks on the actual wheeled humanoid platform, M-Hubo. The overall communication interface responsiveness was at most 27 milliseconds.",,Motion Generation Interface of ROS to PODO Software Framework for Wheeled Humanoid Robot,,x,,,,,,,,NO,,
S124,1,Forward,journalArticle,2020,"Park, Jaeho; Delgado, Raimarius; Choi, Byoung Wook",IEEE Access,10.1109/ACCESS.2020.3018122,,"Due to its ease of use and flexibility, the robot operating system (ROS) is increasingly becoming the most popular middleware for robot applications, even in multiagent systems. Since ROS 1.0 does not satisfy real-time requirements, ROS 2.0 was developed, and it improved the communication stack with the real-time data distribution service (DDS) protocol. However, the actual performance level to be expected is still unknown and can largely depend on the operating system and the kernel being used, the DDS distribution, and the overall software load of the system. In this article, we present an empirical study that evaluates the real-time performance of ROS 2.0 in both the system and communication software layers. In the system layer, the deterministic behavior of the ROS 2.0 nodes is thoroughly observed with regard to whether the tasks are schedulable and can function within the specified temporal deadline. In the communication layer, special attention is devoted to the rate of data loss and the overall latency of messages between nodes. Experiments are performed in various working conditions; for example, the system load is increased to define the real-time performance of the tasks. For reference, the results are compared with the those from the traditional ROS variation. Moreover, we implement a multiagent service robot system to verify the suitability of ROS 2.0 for real-world applications. Our results show that the application of ROS 2.0 is more suitable than that of ROS 1.0 in terms of real-time performance.",Multi-agent system; Navigation; performance evaluation; Performance evaluation; real-time operating systems; Real-time systems; Robot kinematics; robot operating system; Software; Task analysis,Real-Time Characteristics of ROS 2.0 in Multiagent Robot Systems: An Empirical Study,,,,,,,,,,NO,,
S125,1,Forward,journalArticle,2021,"Muñoz, Milton; Guevara, Remigio; González, Santiago; Jiménez, Juan Carlos","Journal of Applied Science, Engineering, Technology, and Education",10.35877/454RI.asci159,http://jurnal.ahmar.id/index.php/asci/article/view/159,"This paper presents and evaluates a continuous recording system designed for a low-cost seismic station. The architecture has three main blocks. An accelerometer sensor based on MEMS technology (Microelectromechanical Systems), an SBC platform (Single Board Computer) with embedded Linux and a microcontroller device. In particular, the microcontroller represents the central component which operates as an intermediate agent to manage the communication between the accelerometer and the SBC block. This strategy allows the system for data acquisition in real time. On the other hand, the SBC platform is used for storing and processing data as well as in order to configure the remote communication with the station. This proposal is intended as a robust solution for structural health monitoring (i.e. in order to characterize the response of an infrastructure before, during and after a seismic event). The paper details the communication scheme between the system components, which has been minutely designed to ensure the samples are collected without information loss. Furthermore, for the experimental evaluation the station was located in the facilities on a relevant infrastructure, specifically a hydroelectric dam. The system operation was compared and verified with respect to a certified accelerograph station. Results prove that the continuous recording system operates successfully and allows for detecting seismic events according to requirements of structural health applications (i.e. detects events with a frequency of vibration less than 100 Hz). Specifically, through the system implemented it was possible to characterize the effect of a seismic event of 4 MD reported by the regional seismology network and with epicenter located about 30 Km of the hydroelectric dam. Particularly, the vibration frequencies detected on the infrastructure are in the range of 13 Hz and 29 Hz. Regarding the station performance, results from experiments reveals an average CPU load of 51%, consequently the processes configured on the SBC platform do not involve an overload. Finally, the average energy consumption of the station is close to 2.4 W, therefore autonomy provided by the backup system is aroud of 10 hours. 		 	                                                                                                                                                                                                                   1   CITATION                                         1           Total citation                                        1           Recent citation                                                      n/a           Field Citation Ratio                                        n/a           Relative Citation Ratio",Data acquisition system; Internet of Things; real time processing; single board computer; structural health monitoring,Reliable Data Acquisition System for a Low-Cost Accelerograph Applied to Structural Health Monitoring,x,,,,,,,,,NO,,
S126,1,Forward,journalArticle,2020,"Delgado, Raimarius; Park, Jaeho; Lee, Cheonho; Choi, Byoung Wook",Applied Sciences,10.3390/app10082796,https://www.mdpi.com/2076-3417/10/8/2796,"Android is gaining popularity as the operating system of embedded systems and recent demands of its application on industrial control are steadily increasing. However, its feasibility is still in question due to two major drawbacks: safety and security. In particular, ensuring the safe operation of industrial control systems requires the system to be governed by stringent temporal constraints and should satisfy real-time requirements. In this sense, we explore the real-time characteristics of Xenomai to guarantee strict temporal deadlines, and provide a viable method integrating Android processes to real-time tasks. Security is another issue that affects safety due to the increased connectivity in industrial systems provoking a higher risk of cyber and hardware attacks. Herein, we adopted a hardware copy protection chip and enforced administrative security policies in the booting process and the Android application layer. These policies ensure that the developed system is protected from physical tampering and unwanted Android applications. The articulacy of the administrative policies is demonstrated through experiments. The developed embedded system is connected to an industrial EtherCAT motion device network exhibiting operability on an actual industrial application. Real-time performance was evaluated in terms of schedulability and responsiveness, which are critical in determining the safety and reliability of the control system.",android; industrial control systems; policy oriented security; real-time; safety,Safe and Policy Oriented Secure Android-Based Industrial Embedded Control System,x,,,,,,,,,NO,,
S127,1,Forward,book,2021,"Sarkar, Sampreet; Lejeune, Erwin; Lebastard, Vincent; Queudet, Audrey",,,,"Predictability is of uppermost importance in safety-critical systems, where timing behaviors have a high impact on a system's correctness and sustainability. With autonomous systems performing tasks whose criticality increases by the day (i.e., autonomous robots, vehicles, drones), it becomes necessary for robotics tools to allow room for real-time wrappers, toolboxes and built-in methods for accurate timing analysis. ROS (Robot Operating System) is becoming the standard in robotics programming, providing standardized core of functions. However, it was initially not written having real-time systems requirements in mind. ROS2 proposes built-in real-time capabilities for safety-critical systems. This paper focuses on comparing the impact of both the underlying operating system (General-Purpose Operating System vs Real Time Operating System) and the hardware platform (Desktop vs Embedded) on the performance of ROS2.",,Real-time Jitter Measurements under ROS2: the Inverted Pendulum case,,,,,x,,,,,NO,,
S128,1,Forward,journalArticle,2020,"Zhang, Xiaojun; Zhao, Jian; Zhang, Minglu; Liu, Xiaoyu",Sensors,10.3390/s20154187,https://www.mdpi.com/1424-8220/20/15/4187,"Increasing requirements for the safety of human-robot interaction and the cost-effectiveness of collision detection rapidly promote the development of collision detection technology without torque sensors. To address nonlinear disturbance factors in collision detection that may cause unstable or even incorrect detection, this paper proposed a research strategy that considered the friction as the disturbance term in manipulator motion for the collision detection. The manipulator joint disturbance model was established based on the LuGre dynamic friction model, and the external torque observer was designed based on the generalized momentum. Then, the friction measurement was realized using the external torque observer, and the model parameters were identified through the genetic algorithm. The collision detection can be reduced errors after the friction model by compensating the disturbance and can be applicable to variable working conditions. Finally, the accuracy of the constructed disturbance model and the performance of the proposed collision detection method were validated by the experimental studies.",collision detection; human-robot interaction; momentum observer; nonlinear disturbance; parameter identification,Disturbance Recognition and Collision Detection of Manipulator Based on Momentum Observer,x,,,,,,,,,NO,,
S129,1,Forward,conferencePaper,2020,"Yang, Yuqing; Azumi, Takuya",2020 IEEE International Conference on Embedded Software and Systems (ICESS),10.1109/ICESS49830.2020.9301530,,"With the recent developments in robotics research, autonomous robot systems have grown rapidly to meet the increasing demands. The Robot Operating System (ROS) is commonly used for building autonomous robot systems. Due to the high latency in communication, ROS has been upgraded to ROS 2 using the Data Distribution Service (DDS) as a transport system. In ROS 2, an Executor concept was introduced to support execution management and ensure real-time performance. However, it is difficult to improve the real-time performance of ROS 2. A real-time executor called the Callback-group-level Executor has been developed in micro-ROS. In this paper, the Callback-grouplevel Executor was used to replace the standard rclcpp Executor in ROS 2, and explore the resulting performance. Using the pingpong test bench, the potential and constraints of the real-time executor on ROS 2 were also examined and evaluated.",Autonomous robots; Libraries; Message systems; Middleware; Operating systems; Real-time systems; Standards,Exploring Real-Time Executor on ROS 2,,x,,,,,,,,NO,,
S13,1,Forward,conferencePaper,2019,"von Zabiensky, Florian; Kreutzer, Michael; Bienhaus, Diethelm",Intelligent Human Systems Integration 2019,10.1007/978-3-030-11051-2_81,,"Electronic Travel Aids (ETAs) are devices that support people who are blind or visual impaired in tasks as obstacle detection/avoidance or navigation. ETAs consist of sensing, processing and presentation components. Many research projects develop new kinds of ETAs, introducing new presentation or sensing components. An optimal ETA should be a distributed system where each component is a communicating node. In this work we propose an MDD workflow to develop distributed ETAs. This workflow uses AADL to describe the system, its components and their communication. This supports an easy exchange of a component in its system model. So, research projects, for new presentation devices or presentation components, only have to change the node they are working on instead of developing a whole new system. Automatic code generation assures that the newly developed ETA component fits into the system.",AADL; Development workflow; Electronic travel aids; MDD; ROS 2,A Model Driven Development Approach Using AADL and Code Generation to Develop Modular Distributed Electronic Travel Aid Devices,,,,,,x,,,,NO,,
S130,1,Forward,journalArticle,2020,"Chen, Xuebing",Journal of Physics: Conference Series,10.1088/1742-6596/1453/1/012100,https://doi.org/10.1088/1742-6596/1453/1/012100,"In order to solve the real-time problem of Linux system for loongson3A, the real-time enhancement design of Linux kernel is carried out by using the idea of PREEMPT_RT patch, the performance analysis support based on ftrace tool is improved, and the real-time optimization method based on reserved core scheduling is proposed. The real-time performance of the system is tested from four aspects: context switching, interrupt response, scheduling latency and network latency. Five context switching methods are proposed, including active switching, priority preemptive switching, semaphores, message queuing and signal distribution latency. A test method based on the internal timer of the PCI board is designed. The test results show that the maximum latency of real-time Linux system based on Loongson3A3000 is less than 30us, the reserved core scheduling latency is the minimum, and the maximum jitter of network communication latency is less than 120us. In conclusion, the system based on loongson3A3000 can meet the demand for hard real-time applications at millisecond level.",,Research on Linux Real-time and performance Evaluation for Loongson 3A3000 processor,x,,,,,,,,,NO,,
S131,1,Forward,journalArticle,2021,"Adam, George K.; Petrellis, Nikos; Doulos, Lambros T.",Electronics,10.3390/electronics10111331,https://www.mdpi.com/2079-9292/10/11/1331,"This work investigates the real-time performance of Linux kernels and distributions with a PREEMPT_RT real-time patch on ARM-based embedded devices. Experimental measurements, which are mainly based on heuristic methods, provide novel insights into Linux real-time performance on ARM-based embedded devices (e.g., BeagleBoard and RaspberryPi). Evaluations of the Linux real-time performance are based on specific real-time software measurement modules, developed for this purpose, and the use of a standard benchmark tool, cyclictest. Software modules were designed upon the introduction of a new response task model, an innovative aspect of this work. Measurements include the latency of response tasks at user and kernel space, the response on the execution of periodic tasks, the maximum sustained frequency and general latency performance metrics. The results show that in such systems the PREEMPT_RT patch provides more improved real-time performance than the default Linux kernels. The latencies and particularly the worst-case latencies are reduced with real-time support, thus making such devices running Linux with PREEMPT_RT more appropriate for use in time-sensitive embedded control systems and applications. Furthermore, the proposed performance measurements approach and evaluation methodology could be applied and deployed on other Linux-based real-time platforms.",embedded devices; performance measurements; PREEMPT_RT; real-time operating systems; response latency,Performance Assessment of Linux Kernels with PREEMPT_RT on ARM-Based Embedded Devices,x,,,,,,,,,NO,,
S132,1,Forward,journalArticle,2020,"Delgado, Raimarius; Choi, Byoung Wook",IEEE Access,10.1109/ACCESS.2020.3029858,,"Multicore processors are gaining popularity in various domains because of their potential for maximizing system throughput of average-case tasks. In real-time systems, where processes and tasks are governed by stringent temporal constraints, the worst-case timings should be considered, and migration to multicore processors leads to additional difficulties. Resource sharing between the cores introduces timing overheads, which affect the worst-case timings and schedulability of the entire system. In this article, we provide new insights into the performance of the real-time extensions of Linux, namely, Xenomai and RT-Preempt, for a homogeneous multicore processor. First, complete details on leveraging both real-time extensions are presented. We identify various multicore deployments and discuss their trade-offs, as established through the experimental evaluation of the scheduling latency. Then, we propose a statistical method based on a variation of chi-square test to determine the best multicore deployment. The unexpected effects of interfering loads, such as CPU, memory, and network operations, on the real-time performance, are considered. Feasibility of the best multicore deployment is verified through the analysis of its periodicity and deterministic response times in a pre-emptive multitasking environment. This research is the first of its kind and will serve as a useful guideline for developing real-time applications on multicore processors.",Kernel; Linux; Multicore architecture; Multicore processing; Processor scheduling; real-time; Real-time systems; RT-preempt; statistical selection; Task analysis; Time factors; Xenomai,New Insights Into the Real-Time Performance of a Multicore Processor,x,,,,,,,,,NO,,
S133,1,Forward,conferencePaper,2020,"García, Sergio; Strüber, Daniel; Brugali, Davide; Berger, Thorsten; Pelliccione, Patrizio",Proceedings of the 28th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering,10.1145/3368089.3409743,https://doi.org/10.1145/3368089.3409743,"Robots that support humans by performing useful tasks (a.k.a., service robots) are booming worldwide. In contrast to industrial robots, the development of service robots comes with severe software engineering challenges, since they require high levels of robustness and autonomy to operate in highly heterogeneous environments. As a domain with critical safety implications, service robotics faces a need for sound software development practices. In this paper, we present the first large-scale empirical study to assess the state of the art and practice of robotics software engineering. We conducted 18 semi-structured interviews with industrial practitioners working in 15 companies from 9 different countries and a survey with 156 respondents from 26 countries from the robotics domain. Our results provide a comprehensive picture of (i) the practices applied by robotics industrial and academic practitioners, including processes, paradigms, languages, tools, frameworks, and reuse practices, (ii) the distinguishing characteristics of robotics software engineering, and (iii) recurrent challenges usually faced, together with adopted solutions. The paper concludes by discussing observations, derived hypotheses, and proposed actions for researchers and practitioners.",interviews; online survey; robotics software engineering,Robotics software engineering: a perspective from the service robotics domain,,,,,,,,,,,,
S135,1,Forward,conferencePaper,2020,"Malavolta, Ivano; Lewis, Grace; Schmerl, Bradley; Lago, Patricia; Garlan, David",2020 IEEE/ACM 42nd International Conference on Software Engineering: Software Engineering in Practice (ICSE-SEIP),,,"The Robot Operating System (ROS) is the de-facto standard for robotic software. If on one hand ROS is helping roboticists, e.g., by providing a standardized communication platform, on the other hand ROS-based systems are getting larger and more complex and could benefit from good software architecture practices. This paper presents an observational study aimed at (i) unveiling the state-of the-practice for architecting ROS-based systems and (ii) providing guidance to roboticists about how to properly architect ROS-based systems. To achieve these goals, we (i) build a dataset of 335 GitHub repositories containing real open-source ROS-based systems, (ii) mine the repositories for extracting the state of the practice about how roboticists are architecting them, and (iii) synthesize a catalog of 49 evidence-based guidelines for architecting ROS-based systems. The guidelines have been validated by 77 roboticists working on real-world open-source ROS-based systems.",Computer architecture; Data mining; Documentation; Guidelines; Mining Software Repositories; Open source software; Robotics; Robots; Service robots; Software Architecture,How do you Architect your Robots? State of the Practice and Guidelines for ROS-based Systems,,,,,,,,x,,NO,,
S136,1,Forward,journalArticle,2021,"Albonico, Michel; Malavolta, Ivano; Pinto, Gustavo; Guzman, Emitza; Chinnappan, Katerina; Lago, Patricia",arXiv:2103.13762 [cs],,http://arxiv.org/abs/2103.13762,"Robots are becoming more and more commonplace in many industry settings. This successful adoption can be partly attributed to (1) their increasingly affordable cost and (2) the possibility of developing intelligent, software-driven robots. Unfortunately, robotics software consumes significant amounts of energy. Moreover, robots are often battery-driven, meaning that even a small energy improvement can help reduce its energy footprint and increase its autonomy and user experience. In this paper, we study the Robot Operating System (ROS) ecosystem, the de-facto standard for developing and prototyping robotics software. We analyze 527 energy-related data points (including commits, pull-requests, and issues on ROS-related repositories, ROS-related questions on StackOverflow, ROS Discourse, ROS Answers, and the official ROS Wiki). Our results include a quantification of the interest of roboticists on software energy efficiency, 10 recurrent causes, and 14 solutions of energy-related issues, and their implied trade-offs with respect to other quality attributes. Those contributions support roboticists and researchers towards having energy-efficient software in future robotics projects.",Computer Science - Robotics; Computer Science - Software Engineering,Mining Energy-Related Practices in Robotics Software,,,,,,,,x,,NO,,
S137,1,Forward,book,2021,"Malavolta, Ivano; Chinnappan, Katerina; Swanborn, Stan; Lewis, Grace; Lago, Patricia",,,,,,Mining the ROS ecosystem for Green Architectural Tactics in Robotics and an Empirical Evaluation,,,,,,,,x,,NO,,
S138,1,Forward,conferencePaper,2020,"Kolak, Sophia; Afzal, Afsoon; Le Goues, Claire; Hilton, Michael; Timperley, Christopher Steven",2020 IEEE International Conference on Software Maintenance and Evolution (ICSME),10.1109/ICSME46990.2020.00048,,"Over the past eleven years, the Robot Operating System (ROS), has grown from a small research project into the most popular framework for robotics development. Composed of packages released on the Rosdistro package manager, ROS aims to simplify development by providing reusable libraries, tools and conventions for building a robot. Still, developing a complete robot is a difficult task that involves bridging many technical disciplines. Experts who create computer vision packages, for instance, may need to rely on software designed by mechanical engineers to implement motor control. As building a robot requires domain expertise in software, mechanical, and electrical engineering, as well as artificial intelligence and robotics, ROS faces knowledge based barriers to collaboration.In this paper, we examine how the necessity of domain specific knowledge impacts the open source collaboration model. We create a comprehensive corpus of package metadata and dependencies over three years in the ROS ecosystem, analyze how collaboration is structured, and study the dependency network evolution. We find that the most widely used ROS packages belong to a small cluster of foundational working groups (FWGs), each organized around a different domain in robotics. We show that the FWGs are growing at a slower rate than the rest of the ecosystem, in terms of their membership and number of packages, yet the number of dependencies on FWGs is increasing at a faster rate. In addition, we mined all ROS packages on GitHub, and showed that 82% rely exclusively on functionality provided by FWGs. Finally, we investigate these highly influential groups and describe the unique model of collaboration they support in ROS.",Buildings; collaboration; Collaboration; Ecosystems; robot operating system; robotics software; Robots; software ecosystem; software evolution; Software maintenance; Task analysis; Tools,It Takes a Village to Build a Robot: An Empirical Study of The ROS Ecosystem,,,,,,,,,,,,
S139,1,Forward,journalArticle,2021,"Zhang, Jingbin; Ma, Meng; Wang, Ping; Sun, Xiao-dong",Journal of Systems Architecture,10.1016/j.sysarc.2021.102098,https://www.sciencedirect.com/science/article/pii/S1383762121000795,"As the core layer of the Internet of Things (IoT), middleware bridges the gap between applications and devices to resolve many common IoT issues and enhancing application development. Consequently, developing suitable middleware is the main challenge that covers functionality and required quality to combine heterogeneous hardware and software as the integrated system in the IoT. This survey discusses IoT middleware requirements and challenges, and presents the current state of research in this domain. A technical taxonomy is presented for the IoT middleware according to the abstract and processing approach of data. We focus on discovering similarities and differences by making comparisons and appropriateness studies. Besides, this survey discusses three enabling techniques in detail to present analytically the current research trends on the IoT middleware. In the end, we summarize open issues in IoT middleware. This survey aims to provide guidance for the development and research of middleware in the IoT paradigm.",Context-aware computing; Internet of Things; Knowledge discovery; Middleware; Self-adaptation,"Middleware for the Internet of Things: A survey on requirements, enabling technologies, and solutions",x,,,,,,,,,NO,,
S14,1,Forward,journalArticle,2020,"Akiki, Pierre A.; Akiki, Paul A.; Bandara, Arosha K.; Yu, Yijun",Science of Computer Programming,10.1016/j.scico.2020.102534,https://www.sciencedirect.com/science/article/pii/S0167642320301428,"Empowering end-users to program robots is becoming more significant. Introducing software engineering principles into end-user programming could improve the quality of the developed software applications. For example, model-driven development improves technology independence and adaptive systems act upon changes in their context of use. However, end-users need to apply such principles in a non-daunting manner and without incurring a steep learning curve. This paper presents EUD-MARS that aims to provide end-users with a simple approach for developing model-driven adaptive robotics software. End-users include people like hobbyists and students who are not professional programmers but are interested in programming robots. EUD-MARS supports robots like hobby drones and educational humanoids that are available for end-users. It offers a tool for software developers and another one for end-users. We evaluated EUD-MARS from three perspectives. First, we used EUD-MARS to program different types of robots and assessed its visual programming language against existing design principles. Second, we asked software developers to use EUD-MARS to configure robots and obtained their feedback on strengths and points for improvement. Third, we observed how end-users explain and develop EUD-MARS programs, and obtained their feedback mainly on understandability, ease of programming, and desirability. These evaluations yielded positive indications of EUD-MARS.",Adaptive; End-user development; Model-driven; Robots; Visual languages and environments,EUD-MARS: End-user development of model-driven adaptive robotics software systems,,,,,,,,,,,,
S140,1,Forward,journalArticle,2020,"Quadrini, Walter; Negri, Elisa; Fumagalli, Luca",Procedia Manufacturing,10.1016/j.promfg.2020.02.055,https://www.sciencedirect.com/science/article/pii/S2351978920306193,"The recent digitalization of manufacturing companies, driven by ""Industry 4.0"" guidelines, introduces a series of challenges and opportunities both for enterprise and research environments. In this perspective, a debated subject is the interfacing of hardware, because logistic challenges and production assets are moving towards the adoption of Internet-of-Things-based Cyber-Physical Systems (CPS), whose flexibility allows to rethink control architectures that are traditionally based on ISA 95 and IEC 62264 formalized hierarchies. More versatile architectures also pave the way to the so-called horizontal integration. This work focuses on intra-logistics, aiming at defining a simple architecture enabling CPS assets’ monitoring and control. This allows the development of an open platform that enables an easy and simultaneous connection of multi-vendor hardware, overcoming the current legacy systems’ gap of requiring a significant effort to do so. The architecture is then substantiated by the development of a component interfacing Automated Guided Vehicles (AGV) and managing their navigation thanks to a Fleet Management System (FMS), which is back fed by the same AGVs.",AGV; CPS; FIWARE; Fleet Management System; modular architecture; open architecture; Robot Operating System; ROS Type your keywords here; separated by semicolons,Open Interfaces for Connecting Automated Guided Vehicles to a Fleet Management System,x,,,,,,,,,NO,,
S141,1,Forward,journalArticle,,"Dragule, Swaib; Gonzalo, Sergio García; Berger, Thorsten; Pelliccione, Patrizio",,,,,,Languages for Specifying Missions of Robotic Applications,,,,x,x,,,,,NO,,
S142,1,Forward,journalArticle,2021,"Jafarzadeh, Mohsen; Brooks, Stephen; Yu, Shimeng; Prabhakaran, Balakrishnan; Tadesse, Yonas",Robotics and Autonomous Systems,10.1016/j.robot.2020.103536,https://www.sciencedirect.com/science/article/pii/S0921889019306323,"Currently, most social robots interact with their surroundings and humans through sensors that are integral parts of the robots, which limits the usability of the sensors, human–robot interaction, and interchangeability. A wearable sensor garment that fits many robots is needed in many applications. This article presents an affordable wearable sensor vest, and an open-source software architecture with the Internet of Things (IoT) for social humanoid robots. The vest consists of touch, temperature, gesture, distance, vision sensors, and a wireless communication module. The IoT feature allows the robot to interact with humans locally and over the Internet. The designed architecture works for any social robot that has a general-purpose graphics processing unit (GPGPU), I2C/SPI buses, Internet connection, and the Robotics Operating System (ROS). The modular design of this architecture enables developers to easily add/remove/update complex behaviors. The proposed software architecture provides IoT technology, GPGPU nodes, I2C and SPI bus mangers, audio-visual interaction nodes (speech to text, text to speech, and image understanding), and isolation between behavior nodes and other nodes. The proposed IoT solution consists of related nodes in the robot, a RESTful web service, and user interfaces. We used the HTTP protocol as a means of two-way communication with the social robot over the Internet. Developers can easily edit or add nodes in C, C++, and Python programming languages. Our architecture can be used for designing more sophisticated behaviors for social humanoid robots.",GPGPU; Human–robot interaction; Internet of Things; Senor vest; Social robot; Software architecture,"A wearable sensor vest for social humanoid robots with GPGPU, IoT, and modular software architecture",x,,,,,,,,,NO,,
S143,1,Forward,conferencePaper,2021,"Kapić, Zinaid; Crnkić, Aladin; Jaćimović, Vladimir; Mijajlović, Nevena",2021 20th International Symposium INFOTEH-JAHORINA (INFOTEH),10.1109/INFOTEH51037.2021.9400663,,"The paper analyzes the rotation averaging problem as a minimization problem for a potential function of the corresponding gradient system. This dynamical system is one generalization of the famous Kuramoto model on special orthogonal group SO(3), which is known as the non-Abelian Kuramoto model. We have proposed a novel method for finding weighted and unweighted rotation average. In order to verify the correctness of our algorithms, we have compared the simulation results with geometric and projected average using real and random data sets. In particular, we have discovered that our method gives approximately the same results as geometric average.",3D rotations; Approximation algorithms; Dynamical systems; Heuristic algorithms; Noise measurement; non-Abelian Kuramoto model; rotation averaging; Simulation; special orthogonal group; Three-dimensional displays; Writing,A new dynamical model for solving rotation averaging problem,x,,,,,,,,,NO,,
S144,1,Forward,conferencePaper,2019,"Vorapojpisut, Supachai; Lhongpol, Matus; Amornlikitsin, Ratchagree; Phuapaiboon, Tienake","2019 4th International Conference on Control, Robotics and Cybernetics (CRC)",10.1109/CRC.2019.00020,,"This paper presents how to construct an augmented environment for a robot controller software. First, a multiagent software architecture based on the Robot Operating System (ROS) platform is purposed as a framework to superimpose real-world, virtual and software environments. Then, key settings in the ROS framework that affect the robot-environment interaction are discussed. To resolve such issues, message aggregation/dissemination in the proposed framework are implemented using the Simulink-based time-triggered architecture. Finally, a collision detection problem is demonstrated a built robot interacts with the proposed augmented environment.","augmented environment, Robot Operating System, multi-agent structure, time-triggered architecture; Collision avoidance; Robot sensing systems; Software packages; Testing",A Robot Augmented Environment Based on ROS Multi-Agent Structure,,x,,,,,,,,NO,,
S145,1,Forward,journalArticle,2020,"Ionescu, Tudor",Robotics,10.3390/robotics10010003,,"A novel approach to generic (or generalized) robot programming and a novel simplified, block-based programming environment, called “Assembly”, are introduced. The approach leverages the newest graphical user interface automation tools and techniques to generate programs in various proprietary robot programming environments by emulating user interactions in those environments. The “Assembly” tool is used to generate robot-independent intermediary program models, which are translated into robot-specific programs using a graphical user interface automation toolchain. The generalizability of the approach to list, tree, and block-based programming is assessed using three different robot programming environments, two of which are proprietary. The results of this evaluation suggest that the proposed approach is feasible for an entire range of programming models and thus enables the generation of programs in various proprietary robot programming environments. In educational settings, the automated generation of programs fosters learning different robot programming models by example. For experts, the proposed approach provides a means for generating program (or task) templates, which can be adjusted to the needs of the application at hand on the shop floor.",,Leveraging Graphical User Interface Automation for Generic Robot Programming,,,,,,,,x,,NO,,
S146,1,Forward,conferencePaper,2020,"Mao, Xinjun; Huang, Hao; Wang, Shuo",2020 27th Asia-Pacific Software Engineering Conference (APSEC),10.1109/APSEC51365.2020.00018,,"Software engineering for autonomous robot (SE4AR) is an emerging interdisciplinary field with the aims to support the development, running and evolution of software systems for autonomous robot - a safety and mission critical cyber-physical system. Such field has recently gained increasing attentions from both academia and industry and made rapid progresses in the past years. However, many challenges pose on the SE4AR due to the specific features and complexities of autonomous robot software (ARS) and several open problems should be tackled in the future researches. This paper aims to present a comprehensive investigation on the researches and practices of SE4AR. Our contributions are three-fold as follows: an in-depth analysis on the development challenges, a systematic review on the current progresses, and an open discussion of weaknesses in current researches and opportunities in future researches.",autonomous robot software; Autonomous robots; Complexity theory; cyber-physical system; Industries; Service robots; software engineering; Software engineering; Software systems; Systematics,"Software Engineering for Autonomous Robot: Challenges, Progresses and Opportunities",,,,,,,,x,,NO,,
S147,1,Forward,conferencePaper,2020,"Longinos-Garrido, M.; Tolentino-Medrano, N. A.; Guerrero-Castellanos, J. F.; Castañeda-Camacho, J.; Álvarez-González, R.","2020 6th International Conference on Event-Based Control, Communication, and Signal Processing (EBCCSP)",10.1109/EBCCSP51266.2020.9291347,,"This work presents a Gazebo Simulation of a Multiagent system conformed by Omnidirectional (3,0) mobile robots. The model consists of integrating a collaborative control that allows agents to achieve consensus and avoid collisions among them and against obstacles. The control strategy for the communication and agreement is event-based to adapt the simulation to the asynchronous behavior of this type of system, while the collision avoidance is in continuous time. The implementation is carried out relying on ROS and MATLAB/Simulink tools to implement the vehicle model and allow the exchange of information between agents. A virtual leader is introduced to provide the agents with a reference and a trajectory to follow.",(30) Omnidirectional mobile robot; Collision avoidance; Cooperative control; CPS; Event-triggered control; Gazebo; Mathematical model; Mobile robots; Multi-Agent systems; Robot kinematics; Robot sensing systems; ROS; Vehicle dynamics; Wheels,Event-triggered coordination of omnidirectional robots over Gazebo,,x,,,,,,,,NO,,
S148,1,Forward,conferencePaper,2021,"Guerra-Zubiaga, David; Strickland, Jay; Kamperman, Kevin; McHale, Ryan; Nasajpour-Esfahani, Navid",,10.1115/IMECE2020-23336,https://asmedigitalcollection.asme.org/IMECE/proceedings/IMECE2020/84492/V02BT02A008/1098944,,,Improved Process Control Using Hybrid Industrial Internet of Things Network Topology,x,,,,,,,,,NO,,
S149,1,Forward,conferencePaper,2020,"Rivera, Sean; Iannillo, Antonio Ken; Lagraa, Sofiane; Joly, Clément; State, Radu",2020 25th International Conference on Engineering of Complex Computer Systems (ICECCS),10.1109/ICECCS51672.2020.00029,,"In this paper, we leverage the newly integrated extended Berkely Packet Filters (eBPF) and eXpress Data Path (XDP) to build ROS-FM, a high-performance inline network-monitoring framework for ROS. We extend the framework with a security policy enforcement tool and distributed data visualization tool for ROS1 and ROS2 systems. We compare the overhead of this framework against the generic ROS monitoring tools, and we test the policy enforcement against existing ROS penetration testing tools to evaluate their effectiveness. We find that the network monitoring framework and the associated visualization tools outperform the existing ROS monitoring tools for all robots with more than 10 running processes and that the monitoring tool uses only 4% of the overhead of the generic tools for robots with 80 processes. We further demonstrate the effectiveness of the security tool against common attacks in both ROS1 and ROS2.",Data visualization; eBPF; Monitoring; Penetration testing; Robots; ROS; Security; Tools; XDP,ROS-FM: Fast Monitoring for the Robotic Operating System(ROS),,x,,,,,,,,NO,,
S15,1,Forward,conferencePaper,2019,"Ernst, Neil; Kazman, Rick; Bianco, Philip",2019 IEEE International Conference on Software Architecture Companion (ICSA-C),10.1109/ICSA-C.2019.00023,,"Early visions of component-based software development have been realized, with software projects now composed mostly of other peoples code. However, the challenge of selecting the best components, with speed and confidence in the result, has only become more difficult. Previous work has focused on systematic approaches to component selection, but in continuous-* and agile settings, the increase in confidence from being systematic is not worth the cost of delay. In this emerging ideas paper, we present early results on work to balance speed with confidence in component selection. Our idea is to define a scorecard for components based on high-level quality attribute indicators, project health measures, and a context-specific aggregation function for producing a single yes/no decision for integrators. We present preliminary results showing how this scorecard approach works on computer vision components.",Computer vision; Measurement; Security; Software; Software engineering; Stakeholders; Tools,"Component Comparison, Evaluation, and Selection: A Continuous Approach",x,,,,,,,,,NO,,
S150,1,Forward,journalArticle,2021,"Zhang, Xing; Liu, Lei; Liu, Yan-Jun",IET Control Theory & Applications,10.1049/cth2.12107,https://ietresearch.onlinelibrary.wiley.com/doi/abs/10.1049/cth2.12107,"This paper proposes an adaptive fuzzy fault-tolerant control method about seat active suspension systems. The significant indexes of seat active suspension system are ride comfort and safety. Considering the actuator failure of seat active suspension system, the problems of passengers' ride comfort and safety are better solved. Two adaptive laws are designed to solve the two unknown coefficients in the actuator fault of the seat active suspension system. The fuzzy logic systems are applied to approximate the unknown terms in the system, and an adaptive fuzzy fault-tolerant controller is designed by using the backstepping method. In the closed-loop systems, all signals are bounded which is proved through Lyapunov stability theory. Finally, two different road surface disturbances are considered in the simulation, which proves the effectiveness of the proposed method.",,Adaptive fuzzy fault-tolerant control of seat active suspension systems with actuator fault,x,,,,,,,,,NO,,
S151,1,Forward,journalArticle,2021,"Malavolta, Ivano; Lewis, Grace A.; Schmerl, Bradley; Lago, Patricia; Garlan, David",Journal of Systems and Software,10.1016/j.jss.2021.110969,https://linkinghub.elsevier.com/retrieve/pii/S0164121221000662,"Methods: We designed and conducted an observational study where we (i) built a dataset of 335 GitHub repositories containing real open-source ROS-based systems, and (ii) mined the repositories to extract and synthesize quantitative and qualitative findings about how roboticists are architecting ROS-based systems. Results: First, we extracted an empirically-grounded overview of the state of the practice for architecting and documenting ROS-based systems. Second, we synthesized a catalog of 47 architecting guidelines for ROS-based systems. Third, the extracted guidelines were validated by 119 roboticists working on real-world open-source ROS-based systems. Conclusion: Roboticists can use our architecting guidelines for applying good design principles to develop robots that meet quality requirements, and researchers can use our results as evidence-based indications about how real-world ROS systems are architected today, thus inspiring future research contributions.",,Mining guidelines for architecting robotics software,,,,,,,,x,,NO,,
S152,1,Forward,conferencePaper,2019,"Fabry, Johan","Proceedings of the Conference Companion of the 3rd International Conference on Art, Science, and Engineering of Programming",10.1145/3328433.3328457,https://doi.org/10.1145/3328433.3328457,"A key argument in favor of live programming languages and environments is that a better programming experience is achieved through maximizing feedback to the programmer. Intuitively, this is a compelling argument, but looking at validations of live programming languages and environments, the results are not encouraging at all. This essay concerns the question whether it is possible to validate that live programming is faster, or more correct, or that programmers have a better development experience. I provide a critical review of validations of live programming and talk about my own experience with such a user study. The goal of this text is to contrast the intuition with the scientific validation, such that we, as a community, can ask ourselves the question of whether we can validate the arguments in favor of live programming, and if so, how.",live programming; user studies; validation,The meager validation of live programming,x,,,,,,,,,NO,,
S153,1,Forward,journalArticle,2020,"Bagherzadeh, Mojtaba; Jahed, Karim; Combemale, Benoit; Dingel, Juergen",Software and Systems Modeling,10.1007/s10270-020-00829-y,https://doi.org/10.1007/s10270-020-00829-y,"Live modeling has been recognized as an important technique to edit behavioral models while being executed and helps in better understanding the impact of a design choice. In the context of model-driven development, models can be executed by interpretation or by the translation of models into existing programming languages, often by code generation. This work is concerned with the support of live modeling in the context of state machine models when they are executed by code generation. To this end, we propose an approach that is completely independent of any live programming support offered by the target language. This independence is achieved with the help of a model transformation which equips the model with support for features which are required for live modeling. A subsequent code generation then produces a self-reflective program that allows changes to the model elements at runtime (through synchronization of design and runtime models). We have applied the approach in the context of UML-RT and created a prototype (Live-UMLRT) that provides a full set of services for live modeling of UML-RT state machines such as re-execution, adding/removing states and transitions, and adding/removing action code. We have evaluated the prototype on several use cases. The evaluation shows that (1) generation of a self-reflective and model instrumentation can be carried out with reasonable performance, and (2) our approach can apply model changes to the running execution faster than the standard approach that depends on the live programming support of the target language.",,Live modeling in the context of state machine models and code generation,x,,,,,,,,,NO,,
S154,1,Forward,conferencePaper,2019,"Opfer, Stephan; Jakob, Stefan; Jahl, Alexander; Geihs, Kurt",KI 2019: Advances in Artificial Intelligence,10.1007/978-3-030-30179-8_22,,"We present a new version of ALICA - “A Language for Interactive Cooperative Agents”. The ALICA framework is a highly reactive multi-agent framework and comprises three components for working with multi-agent plans: a specification language, an execution engine, and a graphical modelling tool. The framework automatically coordinates teams, allocates tasks to team members, and compensates execution failures in a fully distributed manner. In a major redesign, we extended the description language and re-implemented the execution engine and graphical modelling tool. As a result, the second version of ALICA encompasses fewer dependencies, is domain independent, and adaptable to different environments.",Dynamic coordination; Multi-agent systems; Robotic teams,ALICA 2.0 - Domain-Independent Teamwork,x,,,,,,,,,NO,,
S155,1,Forward,journalArticle,2020,"Kubelka, Juraj",,,http://repositorio.uchile.cl/handle/2250/176714,"Repositorio académico de la Universidad de Chile. Tesis, artículos y libros publicados en formato digital con distintos niveles de acceso",,Programming and discussing in live programming environments,,,,,x,,,,,NO,,
S156,1,Forward,journalArticle,2020,"Araya, Campusano; Enrique, Miguel",,,http://repositorio.uchile.cl/handle/2250/175437,"Repositorio académico de la Universidad de Chile. Tesis, artículos y libros publicados en formato digital con distintos niveles de acceso",,Mapping state machines to developers' mental model: fast understanding of robotic behaviors in the real world,,,,,x,,,,,NO,,
S157,1,Forward,journalArticle,2021,"Ramírez, Carlos Alejandro Ruíz; Quintero, Diana María Montoya; Builes, Jovani Alberto Jiménez",Investigación e Innovación en Ingenierías,,https://dialnet.unirioja.es/servlet/articulo?codigo=7799068,"Autorías: Carlos Alejandro Ruíz Ramírez, Diana María Montoya Quintero, Jovani Alberto Jiménez Builes. Localización: Investigación e Innovación en Ingenierías. Nº. 1, 2021. Artículo de Revista en Dialnet.",,Un Ambiente visual integrado de desarrollo para el aprendizaje de programación en robótica,,,x,,x,,,,,NO,,
S158,1,Forward,book,2008,"Moraleda, Rodrigo Andrés Paredes",,,,"La Búsqueda por Similaridad consiste en encontrar los elementos de un conjunto que son semejantes a un objeto de consulta dado de acuerdo a algún criterio. Cuando la semejanza se expresa mediante una métrica, el problema es llamado Búsqueda en Espacios Métricos. En esta tesis se presentan nuevas metodologías para resolver este problema que utilizan grafos G(V,E) para representar la base de datos métrica. En G, el conjunto V corresponde a los objetos del espacio métrico, y E a un pequeño subconjunto de arcos de V × V, cuyos pesos se calculan de acuerdo a la métrica del espacio en cuestión. En particular, se estudian los grafos de k vecinos más cercanos (knngs). El knng es un grafo con pesos que conecta cada nodo de V —o equivalentemente, cada objeto del espacio métrico — con sus k vecinos más cercanos. Los knngs tienen muchas otras aplicaciones más allá de su utilidad para búsqueda en espacios métricos. Se desarrollan algoritmos tanto para construir knngs en espacios métricos generales como para utilizarlos en búsqueda por similitud. Estos resultados permiten usar un grafo para indexar un espacio métrico requiriendo una cantidad moderada de memoria, con un",,Grafos para Búsqueda en Espacios Métricos,,,x,,x,,,,,NO,,
S159,1,Forward,book,2021,"Fitzek, Frank H. P.; Li, Shu-Chen; Speidel, Stefanie; Strufe, Thorsten; Simsek, Meryem; Reisslein, Martin",,,,"Tactile Internet with Human-in-the-Loop describes the change from the current Internet, which focuses on the democratization of information independent of location or time, to the Tactile Internet, which democratizes skills to promote equity that is independent of age, gender, sociocultural background or physical limitations. The book promotes the concept of the Tactile Internet for remote closed-loop human-machine interaction and describes the main challenges and key technologies. Current standardization activities in the field for IEEE and IETF are also described, making this book an ideal resource for researchers, graduate students, and industry R&D engineers in communications engineering, electronic engineering, and computer engineering.Provides a comprehensive reference that addresses all aspects of the Tactile Internet – technologies, engineering challenges, use cases and standardsWritten by leading researchers in the fieldPresents current standardizations surrounding the IETF and the IEEEContains use cases that illustrate practical applications",Computers / Networking / General; Technology & Engineering / Telecommunications,Tactile Internet: with Human-in-the-Loop,,,,,x,,,,,NO,,
S162,1,Forward,journalArticle,2021,"Santos, Marcela G. dos; Petrillo, Fabio",arXiv:2102.12520 [cs],,http://arxiv.org/abs/2102.12520,"Robots are being applied in a vast range of fields, leading researchers and practitioners to write tasks more complex than in the past. The robot software complexity increases the difficulty of engineering the robot's software components with quality requirements. Researchers and practitioners have applied software engineering (SE) approaches and robotic domains to address this issue in the last two decades. This study aims to identify, classify and evaluate the current state-of-the-art Software Engineering for Robotic Systems (SERS). We systematically selected and analyzed 50 primary studies extracted from an automated search on Scopus digital library and manual search on the two editions of the RoSE workshop. We present three main contributions. Firstly, we provide an analysis from three following perspectives: demographics of publication, SE areas applied in robotics domains, and RSE findings. Secondly, we show a catalogue of research studies that apply software engineering techniques in the robotic domain, classified with the SWEBOK guide. We have identified 5 of 15 software engineering areas from the SWEBOK guide applied explicitly in robotic domains. The majority of the studies focused on the development phase (design, models and methods and construction). Testing and quality software areas have little coverage in SERS. Finally, we identify research opportunities and gaps in software engineering for robotic systems for future studies.",Computer Science - Robotics; Computer Science - Software Engineering,Software Engineering for Robotic Systems:a systematic mapping study,,,,,x,,,x,,NO,,
S163,1,Forward,journalArticle,2021,"Santos, André; Cunha, Alcino; Macedo, Nuno",arXiv:2103.01603 [cs],,http://arxiv.org/abs/2103.01603,"This tool paper presents the High-Assurance ROS (HAROS) framework. HAROS is a framework for the analysis and quality improvement of robotics software developed using the popular Robot Operating System (ROS). It builds on a static analysis foundation to automatically extract models from the source code. Such models are later used to enable other sorts of analyses, such as Model Checking, Runtime Verification, and Property-based Testing. It has been applied to multiple real-world examples, helping developers find and correct various issues.",Computer Science - Robotics; Computer Science - Software Engineering; D.2.1; D.2.4; D.2.5; D.2.8; D.2.9,The High-Assurance ROS Framework,,,,,x,,,x,,NO,,
S165,1,Forward,book,2021,"Malavolta, Ivano; Chinnappan, Katerina; Swanborn, Stan; Lewis, Grace; Lago, Patricia",,,,,,Mining the ROS ecosystem for Green Architectural Tactics in Robotics and an Empirical Evaluation,,,,,,,,x,,NO,,
S166,1,Forward,journalArticle,2021,"Albonico, Michel; Malavolta, Ivano; Pinto, Gustavo; Guzman, Emitza; Chinnappan, Katerina; Lago, Patricia",arXiv:2103.13762 [cs],,http://arxiv.org/abs/2103.13762,"Robots are becoming more and more commonplace in many industry settings. This successful adoption can be partly attributed to (1) their increasingly affordable cost and (2) the possibility of developing intelligent, software-driven robots. Unfortunately, robotics software consumes significant amounts of energy. Moreover, robots are often battery-driven, meaning that even a small energy improvement can help reduce its energy footprint and increase its autonomy and user experience. In this paper, we study the Robot Operating System (ROS) ecosystem, the de-facto standard for developing and prototyping robotics software. We analyze 527 energy-related data points (including commits, pull-requests, and issues on ROS-related repositories, ROS-related questions on StackOverflow, ROS Discourse, ROS Answers, and the official ROS Wiki). Our results include a quantification of the interest of roboticists on software energy efficiency, 10 recurrent causes, and 14 solutions of energy-related issues, and their implied trade-offs with respect to other quality attributes. Those contributions support roboticists and researchers towards having energy-efficient software in future robotics projects.",Computer Science - Robotics; Computer Science - Software Engineering,Mining Energy-Related Practices in Robotics Software,,,,,,,,x,,NO,,
S167,1,Forward,thesis,2020,"Wang, Shengye",,,https://escholarship.org/uc/item/2gp1k05k,"Current service robots perform flawless demos under close human supervision, but they often fail when working autonomously in long-term deployments. This dissertation studies the failures in long-term autonomous service robots and proposes methods to improve their reliability.We built TritonBot, a receptionist and tour-guide robot, as a realistic example to discover the failure modes of a long-term autonomous service robot. TritonBot recognizes people's faces, talks to people, and shows people the labs and facilities in a university building. We deployed TritonBot for hundreds of hours to identify failure modes and common issues on service robots.Following the experience from TritonBot, we designed two reliability engineering methods to improve the robustness of service robots. First, we found software encapsulation and dynamic orchestration streamline development workflows and avoid resource contention in service robots. Software encapsulation allows the developers to pack software into self-contained containers and simplify development workflows, and dynamic orchestration schedules the components on demand to avoid CPU/memory resource contention. We developed Rorg, a Linux container-based scheme to manage software components on service robots. Second, we found simulating a broad spectrum of rare failures at system level exposes design flaws and improves the robustness of service robots. Design errors in robotics are challenging to discover due to the need for extensive and resource-demanding testing. Broad-spectrum system-level failure injection exposes both software- and hardware-related design flaws and assists developers in reproducing rare failures, verifying the fixes, and testing the robustness of a robot system. We implemented RoboVac, an extensible and convenient fault injection framework that works at the system level and covers many failure patterns seen in long-term autonomous service robot deployments.After working with TritonBot for two years and implementing reliability engineering methods, we concluded a few design principles for a long-term autonomous service robot at different levels in the system hierarchy. These design principles guide robust and reliable long-term autonomous service robot designs.We use a set of automated tools, engineering methods, and design principles to build service robots that are available 24x7, and we call it ""Reliability Engineering for Long-term Deployment of Autonomous Service Robots.""",,Reliability Engineering for Long-term Deployment of Autonomous Service Robots,,,,,x,,,,,NO,,
S168,1,Forward,journalArticle,2021,"Santos, Marcela G. dos; Petrillo, Fabio",arXiv:2102.12520 [cs],,http://arxiv.org/abs/2102.12520,"Robots are being applied in a vast range of fields, leading researchers and practitioners to write tasks more complex than in the past. The robot software complexity increases the difficulty of engineering the robot's software components with quality requirements. Researchers and practitioners have applied software engineering (SE) approaches and robotic domains to address this issue in the last two decades. This study aims to identify, classify and evaluate the current state-of-the-art Software Engineering for Robotic Systems (SERS). We systematically selected and analyzed 50 primary studies extracted from an automated search on Scopus digital library and manual search on the two editions of the RoSE workshop. We present three main contributions. Firstly, we provide an analysis from three following perspectives: demographics of publication, SE areas applied in robotics domains, and RSE findings. Secondly, we show a catalogue of research studies that apply software engineering techniques in the robotic domain, classified with the SWEBOK guide. We have identified 5 of 15 software engineering areas from the SWEBOK guide applied explicitly in robotic domains. The majority of the studies focused on the development phase (design, models and methods and construction). Testing and quality software areas have little coverage in SERS. Finally, we identify research opportunities and gaps in software engineering for robotic systems for future studies.",Computer Science - Robotics; Computer Science - Software Engineering,Software Engineering for Robotic Systems:a systematic mapping study,,,,,x,,,x,,NO,,
S169,1,Forward,journalArticle,2020,"Ernesto, Apolinário Ferreira",,,http://comum.rcaap.pt/handle/10400.26/33701,"O Veículo de Sup erfície Escola Naval (VentSupEN) é um pro jeto do Centro  de Investigação Naval (CINAV) que visa a construção de um Veículo Não Tripulado de Sup erfície (Unmanned Surface Vehicle, USV), capaz de op erar em qualquer  ambiente marítimo.  O VentSupEN terá atuadores (motores) e diversos sensores tanto para recolha de dados ambientais como para indicar a sua p osição. Os referidos sensores  necessitam de tro car dados entre si. Para tal, é necessário um canal de comunica-  ção (Middleware) entre o sistema op erativo e as aplicaçõ es que interligam diferentes  subsistemas comp ostos p or sensores e atuadores.  O presente estudo ap oia-se em três ob jetivos principais: i. estudo dos Middlewares desenvolvidos p ela comunidade internacional; ii. prop or uma arquitetura  de software; iii. desenvolver drivers para os sensores existentes no veículo.  Assim, foram realizados estudos sobre diversos Middlewares, p or forma a  identificar qual seria o mais adequado a instalar no computador de b ordo, com recurso a uma ab ordagem teórica. De seguida, é prop osta a arquitetura de software  com base nos sensores existentes, b em como outros sensores estudados em disserta-  çõ es relacionadas com o desenvolvimento do veículo. Como prova de conceito foram  desenvolvidos mó dulos para os drivers de sistema de lo calização global (Global Position System, GPS), unidade de medida inercial (Inertial Measurement Unit, IMU)  e para o sistema de comunicação. Ap ós implementação, realizaram-se testes que  consistem em: comunicação com a estação de comando e controlo (C2), gestão do  planeamento e do estado dos sensores.",,Pro jecto Vent-Sup,,,,,x,,,,,NO,,
S17,1,Forward,conferencePaper,2020,"Wąsowski, Andrzej",Proceedings of the 14th International Working Conference on Variability Modelling of Software-Intensive Systems,10.1145/3377024.3377712,https://doi.org/10.1145/3377024.3377712,"For years, the software reuse community (including the variability community) has used cost reduction as the main argument for software reuse. Software reuse methods are often contrasted with cloning[9]. We commonly hear that already when a piece of code, a subsystem or a product, would be copied three times, it pays off to manage a single generalized reusable artifact [8]. Evolving software from cloned to integrated variants is seen as a maturation [2].",dependency bugs; evolution; robot operating system; software reuse; technical debt,"Dependency bugs: the dark side of variability, reuse and modularity",x,,,,,,,,,NO,,
S170,1,Forward,journalArticle,2021,"Santos, Marcela G. dos; Petrillo, Fabio",arXiv:2102.12520 [cs],,http://arxiv.org/abs/2102.12520,"Robots are being applied in a vast range of fields, leading researchers and practitioners to write tasks more complex than in the past. The robot software complexity increases the difficulty of engineering the robot's software components with quality requirements. Researchers and practitioners have applied software engineering (SE) approaches and robotic domains to address this issue in the last two decades. This study aims to identify, classify and evaluate the current state-of-the-art Software Engineering for Robotic Systems (SERS). We systematically selected and analyzed 50 primary studies extracted from an automated search on Scopus digital library and manual search on the two editions of the RoSE workshop. We present three main contributions. Firstly, we provide an analysis from three following perspectives: demographics of publication, SE areas applied in robotics domains, and RSE findings. Secondly, we show a catalogue of research studies that apply software engineering techniques in the robotic domain, classified with the SWEBOK guide. We have identified 5 of 15 software engineering areas from the SWEBOK guide applied explicitly in robotic domains. The majority of the studies focused on the development phase (design, models and methods and construction). Testing and quality software areas have little coverage in SERS. Finally, we identify research opportunities and gaps in software engineering for robotic systems for future studies.",Computer Science - Robotics; Computer Science - Software Engineering,Software Engineering for Robotic Systems:a systematic mapping study,,,,,x,,,x,,NO,,
S171,1,Forward,book,2021,"Ingrand, Félix",,,https://hal.laas.fr/hal-02927311,"Autonomous robots may be one day allowed to fly or to drive around in large numbers, but this will require their makers and programmers to show that the most critical parts of their software are robust and reliable. Moreover, autonomous robots embed onboard deliberation functions. This is what makes them autonomous but opens for new challenges. There are many approaches to consider for the V&V of AR software, e.g. write high-level specifications and derive them in correct implementations, deploy and develop new or modified V&V formalisms to program robotics components, etc. One should note that learned models aside, most models used in deliberation functions are already amenable to formal V&V. Thus, we rather focus on the functional level components or modules and propose an approach that relies on an existing robotics specification and implementation framework (GenoM), in which we harness existing well known formal V&V frameworks (UPPAAL, BIP, FIACRE-TINA). GenoM was originally developed by roboticists and software engineers, who wanted to clearly and precisely specify how a reusable, portable, middleware independent, functional component should be specified and implemented. As a result, GenoM has a rigorous specification, a clear semantics of the implementation and it provides a template mechanism to synthesize code that opens the door to automatic formal-model synthesis and formal V&V (offline and online). This bottom-up approach, which starts from components implementation, is more modest than the top-down ones which aim at a larger and more global view of the problem. Yet, it gives encouraging results on real implementations on which one can build more complex high-level properties to be then verified and validated offline but also with online monitors.",,Verification of Autonomous Robots: A Roboticist’s Bottom-Up Approach,,,,,x,,,,,NO,,
S172,1,Forward,conferencePaper,2019,"Wehrmeister, Marco",Anais Estendidos do Simpósio Brasileiro de Engenharia de Sistemas Computacionais (SBESC),10.5753/sbesc_estendido.2019.8633,https://sol.sbc.org.br/index.php/sbesc_estendido/article/view/8633,Resumo 					Este trabalho apresenta uma abordagem para a geração de código fonte para sistemas embarcados usandos em robôs a partir de modelos UML anotados com o perfil MARTE. O código fonte gerado utiliza a semântica e as bibliotecas disponíveis no Robot Operating System (ROS) que é amplamente utilizado no projeto e implementação de robôs tanto no meio industrial como no acadêmico. O objetivo principal deste trabalho é a aplicação de técnicas de engenharia guiada por modelos (MDE) no projeto de robôs visando a prototipação rápida de robôs através de simuladores e também a implementação real deles. O trabalho foi validado através de um estudo de caso que mostra a viabilidade da proposta na implementação de um robô simples. Os resultados fornecem indicativos que a abordagem pode ser aplicada em sistemas mais complexos que envolvem multiplos robôs que interagem para realizar tarefas em ambientes industriais.,,Geração de Código para Robôs implementados com ROS a partir de modelos UML/MARTE,,,x,,,,,,,NO,,
S173,1,Forward,journalArticle,2020,"Ionescu, Tudor",Robotics,10.3390/robotics10010003,,"A novel approach to generic (or generalized) robot programming and a novel simplified, block-based programming environment, called “Assembly”, are introduced. The approach leverages the newest graphical user interface automation tools and techniques to generate programs in various proprietary robot programming environments by emulating user interactions in those environments. The “Assembly” tool is used to generate robot-independent intermediary program models, which are translated into robot-specific programs using a graphical user interface automation toolchain. The generalizability of the approach to list, tree, and block-based programming is assessed using three different robot programming environments, two of which are proprietary. The results of this evaluation suggest that the proposed approach is feasible for an entire range of programming models and thus enables the generation of programs in various proprietary robot programming environments. In educational settings, the automated generation of programs fosters learning different robot programming models by example. For experts, the proposed approach provides a means for generating program (or task) templates, which can be adjusted to the needs of the application at hand on the shop floor.",,Leveraging Graphical User Interface Automation for Generic Robot Programming,,,,,,,,x,,NO,,
S174,1,Forward,journalArticle,2020,"Mayoral-Vilches, Víctor; Abad-Fernández, Irati; Pinzger, Martin; Rass, Stefan; Dieber, Bernhard; Cunha, Alcino; Rodríguez-Lera, Francisco J.; Lacava, Giovanni; Marotta, Angelica; Martinelli, Fabio; Gil-Uriarte, Endika",arXiv:2010.07759 [cs],,http://arxiv.org/abs/2010.07759,"The reuse of technologies and inherent complexity of most robotic systems is increasingly leading to robots with wide attack surfaces and a variety of potential vulnerabilities. Given their growing presence in public environments, security research is increasingly becoming more important than in any other area, specially due to the safety implications that robot vulnerabilities could cause on humans. We argue that security triage in robotics is still immature and that new tools must be developed to accelerate the testing-triage-exploitation cycle, necessary for prioritizing and accelerating the mitigation of flaws. The present work tackles the current lack of offensive cybersecurity research in robotics by presenting a toolbox and the results obtained with it through several use cases conducted over a year period. We propose a modular and composable toolbox for robot cybersecurity: alurity. By ensuring that both roboticists and security researchers working on a project have a common, consistent and easily reproducible development environment, alurity aims to facilitate the cybersecurity research and the collaboration across teams.",Computer Science - Robotics,"alurity, a toolbox for robot cybersecurity",,,,,x,,,,,NO,,
S175,1,Backward,conferencePaper,2000,"Coste-Maniere, E.; Simmons, R.",Proceedings 2000 ICRA. Millennium Conference. IEEE International Conference on Robotics and Automation. Symposia Proceedings (Cat. No.00CH37065),10.1109/ROBOT.2000.844041,,"Architectures form the backbone of complete robotic systems. The right choice of architecture can go a long way in facilitating the specification, implementation and validation of robotic systems. Conversely, of course, the wrong choice can make one's life miserable. We present some of the needs of robotic systems, describe some general classes of robot architectures, and discuss how different architectural styles can help in addressing those needs. The paper, like the field itself, is somewhat preliminary, yet it is hoped that it will provide guidance for those who use, or develop, robot architectures.",Application software; Computer architecture; Medical robotics; Navigation; Remotely operated vehicles; Road vehicles; Robot kinematics; Spine; Surges; World Wide Web,"Architecture, the backbone of robotic systems",,,,x,,,,,,NO,,
S176,1,Backward,conferencePaper,2019,"Hoppenstedt, Burkhard; Witte, Thomas; Ruof, Jona; Kammerer, Klaus; Tichy, Matthias; Reichert, Manfred; Pryss, Rüdiger","Augmented Reality, Virtual Reality, and Computer Graphics",10.1007/978-3-030-25999-0_4,,"Debugging and monitoring robotic applications is a very intricate and error-prone task. To this end, we propose a mixed-reality approach to facilitate this process along a concrete scenario. We connected the Microsoft HoloLens smart glass to the Robot Operating System (ROS), which is used to control robots, and visualize arbitrary flight data of a quadrocopter. Hereby, we display holograms correctly in the real world based on a conversion of the internal tracking coordinates into coordinates provided by a motion capturing system. Moreover, we describe the synchronization process of the internal tracking with the motion capturing. Altogether, the combination of the HoloLens and the external tracking system shows promising preliminary results. Moreover, our approach can be extended to directly manipulate source code through its mixed-reality visualization and offers new interaction methods to debug and develop robotic applications.",3D trajectories; Mixed Reality; Quadrocopter; Robot Operating System,Debugging Quadrocopter Trajectories in Mixed Reality,,x,,,,,,,,NO,,
S177,1,Backward,journalArticle,1996,"Ierusalimschy, Roberto; Figueiredo, Luiz Henrique de; Filho, Waldemar Celes",Software: Practice and Experience,10.1002/(SICI)1097-024X(199606)26:6<635::AID-SPE26>3.0.CO;2-P,,"This paper describes Lua, a language for extending applications. Lua combines procedural features with powerful data description facilities, by using a simple, yet powerful, mechanism of tables . This mechanism implements the concepts of records, arrays and recursive data types (pointers), and adds some object-oriented facilities, such as methods with dynamic dispatching. Lua presents a mechanism of fallbacks that allows programmers to extend the semantics of the language in some unconventional ways. As a noteworthy example, fallbacks allow the user to add different kinds of inheritance to the language. Currently, Lua is being extensively used in production for several tasks, including user configuration, general-purpose data-entry, description of user interfaces, storage of structured graphical metafiles, and generic attribute configuration for finite element meshes.",end-user programming; extension languages; programming languages,Lua—An Extensible Extension Language,,,,x,,,,,,NO,,
S178,1,Backward,conferencePaper,2009,"Pot, E.; Monceaux, J.; Gelin, R.; Maisonnier, B.",RO-MAN 2009 - The 18th IEEE International Symposium on Robot and Human Interactive Communication,10.1109/ROMAN.2009.5326209,,"In this paper, we present Choregraphe: a graphical environment developed by Aldebaran Robotics for programming its humanoid robot, Nao. Choregraphe is a very powerful tool that allows macroscopic connection of high level behaviors to easily develop complex software for this 25 degrees of freedom robot. But it offers as well the ability to perform fine tuning of complex joint or Cartesian motions. At the lowest level, Choregraphe allows programming in Python.",Human robot interaction; Humanoid robots; Man machine systems; Microcomputers; Mobile robots; Programming environments; Prototypes; Robot programming; Software prototyping; Software tools,Choregraphe: a graphical tool for humanoid robot programming,x,,,,,,,,,NO,,
S179,1,Backward,conferencePaper,2013,"Rossano, Gregory F.; Martinez, Carlos; Hedelind, Mikael; Murphy, Steve; Fuhlbrigge, Thomas A.",2013 IEEE International Conference on Automation Science and Engineering (CASE),10.1109/CoASE.2013.6654035,,"One of the key challenges for industrial robotics is the high level of expertise and effort required to program a robust, production-quality robot system. In most cases, a highly trained specialist is required to setup a system, which drives up the installation costs. Standard text-based methods for programming robots oftentimes result in programs that are difficult to maintain due to their complex program structure and editing methods. This is a major issue in today's manufacturing environment where product changeover is often measured in months. This paper identifies some of the major difficulties in creating robot programs, distinguishing between creating and maintaining the logical program structure and creating robot paths. Next it describes several recent attempts to simplify industrial robot programming, focusing on those two aspects. This paper then analyzes the applicability, strengths and weakness of various approaches assessing them in light of novice, intermediate and advanced users. Lastly, some recommendations are given for further development in this area of simplifying industrial robot programming.",Robot programming; Robot sensing systems; Service robots; Solid modeling; Welding,Easy robot programming concepts: An industrial perspective,x,,,,,,,,,NO,,
S18,1,Forward,journalArticle,2019,"Luckcuck, Matt; Farrell, Marie; Dennis, Louise A.; Dixon, Clare; Fisher, Michael",ACM Computing Surveys,10.1145/3342355,https://doi.org/10.1145/3342355,"Autonomous robotic systems are complex, hybrid, and often safety critical; this makes their formal specification and verification uniquely challenging. Though commonly used, testing and simulation alone are insufficient to ensure the correctness of, or provide sufficient evidence for the certification of, autonomous robotics. Formal methods for autonomous robotics have received some attention in the literature, but no resource provides a current overview. This article systematically surveys the state of the art in formal specification and verification for autonomous robotics. Specially, it identifies and categorizes the challenges posed by, the formalisms aimed at, and the formal approaches for the specification and verification of autonomous robotics.",autonomous robotics; formal methods; formal specification; Formal verification,Formal Specification and Verification of Autonomous Robotic Systems: A Survey,,,,,,,,,,,,
S180,1,Backward,conferencePaper,1997,"Wilcox, E. M.; Atwood, J. W.; Burnett, M. M.; Cadiz, J. J.; Cook, C. R.",Proceedings of the ACM SIGCHI Conference on Human factors in computing systems,10.1145/258549.258721,,"Continuous visual feedback is becoming a common feature in direct-manipulation programming systems of all klnds—from demonstrational macro builders to spreadsheet packages to visual programming languages featuring direct manipulation. But does continuous visual feedback actually help in the domain of programming? There has been little investigation of this question, and what evidence there is from related domains points in conflicting directions. To advance what is known about this issue, we conducted an empirical study to determine whether the inclusion of continuous visual feedback into a direct-manipulation programming system helps with one particular task: debugging. Our results were that although continuous visual feedback did not significantly help with debugging in general, it did significantly help with debugging in some circumstances. Our results also indicate three factors that may help determine those circumstances.",,Does continuous visual feedback aid debugging in direct-manipulation programming systems?,,,,x,,,,,,NO,,
S181,1,Backward,conferencePaper,2017,"Adam, Kai; Hölldobler, Katrin; Rumpe, Bernhard; Wortmann, Andreas",2017 First IEEE International Conference on Robotic Computing (IRC),10.1109/IRC.2017.16,,"Robotics has adopted modeling with architecture description languages (ADLs). This introduces a gap when reusing solutions encoded in middleware modules. Existing ADL modeling in robotics focuses on domain challenges instead of tool modularity, hence customizing an ADL tool to generate solutions conforming to a specific middleware (e.g., ROS) is challenging. This could produce a multitude of incompatible 'vendor-locked' tool chains and hamper reuse in robotics software engineering. We propose a modular architecture modeling method that rests on the separation of model processing, model transformation, and code generation. This facilitates translating architecture models into modules compatible to the middleware of choice. We present this method using the extensible tool chain of MontiArcAutomaton, which enables translating software architecture models gradually into middleware modules using exchangeable model-to-model and model-to-text transformations. Employing architecture modeling with modular tool chains enables combining the benefits of ADLs with the solutions encoded in popular middlewares and ultimately facilitates robotics software engineering.",Architecture Description Languages; Computer architecture; Connectors; Generators; Machine-to-machine communications; Middleware; Model Transformation; Modularity; Robots; Tools,Engineering Robotics Software Architectures with Exchangeable Model Transformations,x,,,,,,,,,NO,,
S182,1,Backward,bookSection,2011,"Palop, Jorge J.; Mucke, Lennart; Roberson, Erik D.",Alzheimer's Disease and Frontotemporal Dementia: Methods and Protocols,,,"High levels of Aβ impair neuronal function at least in part by disrupting normal synaptic transmission and causing dysfunction of neural networks. This network dysfunction includes abnormal synchronization of neuronal activity resulting in epileptiform activity. Over time, this aberrant network activity can lead to the depletion of calcium-dependent proteins, such as calbindin, Fos, and Arc, and compensatory inhibitory remodeling of hippocampal circuits, including GABAergic sprouting and ectopic expression of the inhibitory neuropeptide Y (NPY) in dentate granule cells. Here we present detailed protocols for detecting and quantifying these alterations in mouse models of Alzheimer’s disease (AD) by immunohistochemistry. These methods are useful as surrogate measures for detecting chronic aberrant network activity in models of AD and epilepsy. In addition, since we have found that the severity of these changes relates to the degree of Aβ-dependent cognitive impairments, the protocols are useful for quantifying biomarkers of cognitive impairment in mouse models of AD.",Alzheimer’s disease; Arc; Aβ; Biomarkers; Calbindin; Dentate gyrus; Ectopic expression; Epilepsy; Excitability; Excitatory; Fos; GABA; GABAergic sprouting; Granule cell; Hilus; Hippocampus; Immediate early gene; Immunohistochemistry; Inhibitory; Mossy fiber; Neuronal activity; Neuropeptide Y; NPY; Seizure,Quantifying Biomarkers of Cognitive Dysfunction and Neuronal Network Hyperexcitability in Mouse Models of Alzheimer’s Disease: Depletion of Calcium-Dependent Proteins and Inhibitory Hippocampal Remodeling,,,,,x,,,,,NO,,
S183,1,Backward,journalArticle,2009,"Brugali, Davide; Scandurra, Patrizia",IEEE Robotics Automation Magazine,10.1109/MRA.2009.934837,,"This article is the first of a two-part series intended as an introduction to component-based software engineering (CBSE) in robotics. In this tutorial, we regard a component as a piece of software that implements robotic functionality (e.g., path planning). The focus of this article is on design principles and implementation guidelines that enable the development of reusable and maintainable software-building blocks, which can be assembled to build robotic applications.",Algorithms; Application software; architecture; component; Libraries; Path planning; reuse; Robotic assembly; Software engineering; Software maintenance; Software systems; Tutorials,Component-based robotic engineering (Part I) [Tutorial],x,,,,,,,,,NO,,
S184,1,Backward,conferencePaper,2001,"Bruyninckx, H.",Proceedings 2001 ICRA. IEEE International Conference on Robotics and Automation (Cat. No.01CH37164),10.1109/ROBOT.2001.933002,,"This paper introduces the OROCOS project that aims at becoming a general-purpose and open robot control software package. OROCOS follows the open source development model that has been proven to work in many other general-purpose software packages, such as Linux, Apache, Perl or LATEX. The paper focuses on the long-term vision of this start-up project, motivates which strategic and innovative design decisions are to be taken (a CORBA-like component architecture being the most important one), and lists other projects on which OROCOS could build. The success of OROCOS depends critically on how many researchers and engineers can be motivated to contribute code, documentation and feedback to the project.",Communication standards; Computer industry; Consumer electronics; Industrial electronics; Linux; Manufacturing industries; Open source software; Robot control; Service robots; Software packages,Open robot control software: the OROCOS project,,,,x,,,,,,NO,,
S185,1,Backward,conferencePaper,2013,"Bruyninckx, Herman; Klotzbücher, Markus; Hochgeschwender, Nico; Kraetzschmar, Gerhard; Gherardi, Luca; Brugali, Davide",Proceedings of the 28th Annual ACM Symposium on Applied Computing,10.1145/2480362.2480693,,"Because robotic systems get more complex all the time, developers around the world have, during the last decade, created component-based software frameworks (Orocos, Open-RTM, ROS, OPRoS, SmartSoft) to support the development and reuse of ""large grained"" pieces of robotics software. This paper introduces the BRICS Component Model (BCM) to provide robotics developers with a set of guidelines, metamodels and tools for structuring as much as possible the development of, both, individual components and component-based architectures, using one or more of the aforementioned software frameworks at the same time, without introducing any framework- or application-specific details. The BCM is built upon two complementary paradigms: the ""5Cs"" (separation of concerns between the development aspects of Computation, Communication, Coordination, Configuration and Composition) and the meta-modeling approach from Model-Driven Engineering.",component models; reusable software; robotics; software architectures,The BRICS component model: a model-based development paradigm for complex robotics software systems,x,,,,,,,,,NO,,
S186,1,Backward,conferencePaper,2014,"Bubeck, Alexander; Weisshardt, Florian; Verl, Alexander",ISR/Robotik 2014; 41st International Symposium on Robotics,,,Software integration is still a challenging and time consuming task and therefore a major part of the development of industrial and domestic service robot applications. The presented toolchain BRIDE is able to streamline this process by the separation of user roles and the separation of developer concerns of software components to ensure a frame-work independent implementation. The impact of the BRIDE toolchain in the development process is demonstrated in a case study on the SyncMM mobile manipulation control framework.,,BRIDE - A toolchain for framework-independent development of industrial service robot applications,,,,,x,,,,,NO,,
S187,1,Backward,conferencePaper,2012,"Dhouib, Saadia; Kchir, Selma; Stinckwich, Serge; Ziadi, Tewfik; Ziane, Mikal","Simulation, Modeling, and Programming for Autonomous Robots",10.1007/978-3-642-34327-8_16,,"A large number of robotic software have been developed but cannot or can hardly interoperate with each other because of their dependencies on specific hardware or software platform is hard-wired into the code. Consequently, robotic software is hard and expensive to develop because there is little opportunity of reuse and because low-level details must be taken into account in early phases. Moreover, robotic experts can hardly develop their application without programming knowledge or the help of programming experts and robotic software is difficult to adapt to hardware or target-platform changes. In this paper we report on the development of RobotML, a Robotic Modeling Language that eases the design of robotic applications, their simulation and their deployment to multiple target execution platforms.",Domain-Specific Languages; Generative Programming; MDE; robotic application,"RobotML, a Domain-Specific Language to Design, Simulate and Deploy Robotic Applications",x,,,,,,,,,NO,,
S188,1,Backward,journalArticle,2008,"Hugues, Jerome; Zalila, Bechir; Pautet, Laurent; Kordon, Fabrice",ACM Transactions on Embedded Computing Systems,10.1145/1376804.1376810,,"Building distributed deal-time embedded systems requires a stringent methodology, from early requirement capture to full implementation. However, there is a strong link between the requirements and the final implementation (e.g., scheduling and resource dimensioning). Therefore, a rapid prototyping process based on automation of tedious and error-prone tasks (analysis and code generation) is required to speed up the development cycle. In this article, we show how the AADL (Architecture Analysis and Design Language), which appeared in late 2004, helps solve these issues thanks to a dedicated tool suite. We then detail the prototyping process and its current implementation: Ocarina.",AADL; distributed; DRE; embedded; Ocarina; PolyORB-HI; real-time,From the prototype to the final embedded system using the Ocarina AADL tool suite,x,,,,,,,,,NO,,
S189,1,Backward,conferencePaper,2015,"Magyar, Gergely; Sinčák, Peter; Krizsán, Zoltán",Emergent Trends in Robotics and Intelligent Systems,10.1007/978-3-319-10783-7_13,,"Developing a robot system is a hard task and it requires a special programming knowledge. Moreover, the development and the operation of every robot system needs common tasks such as state management, communication among parts, synchronization, etc. Several software platforms were introduced for supporting these, hence the researcher and developer can concentrate the novel ideas. This document gives an overview of various robotic middleware. Strictly defined, robotic middleware serves for realizing the communication between various software components. In a wider sense, they are helping the process of development of robotic applications. The document contains descriptions of systems such as Robot Operating System (ROS), RT-Middleware, OPRoS and Orocos. The report also contains a comparison of the above-listed.",Common Object Request Broker Architecture; Composite Component; Object Request Broker; Robot System; Robotic Application,Comparison Study of Robotic Middleware for Robotic Applications,x,,,,,,,,,NO,,
S19,1,Forward,conferencePaper,2018,"Foughali, Mohammed; Berthomieu, Bernard; Dal Zilio, Silvano; Hladik, Pierre-Emmanuel; Ingrand, Félix; Mallet, Anthony",2018 IEEE/ACM 6th International FME Workshop on Formal Methods in Software Engineering (FormaliSE),,,"Software constitutes a major part of the development of robotic and autonomous systems and is critical to their successful deployment in our everyday life. Robotic software must thus run and perform as specified. Since most of these systems are used in a hard real-time context, the schedulability of their tasks is a crucial property. In this work, we propose to use formal methods to check whether the tasks of a robotic application are schedulable with respect to a given hardware platform. For this, we automatically translate functional components specified in GenoM into FIACRE, a formal language for timed systems. The generated models integrate realistic real-time schedulers based on the FCFS and the SJF cooperative policies. We use then the model-checker TINA to assert schedulability properties. We carry out experiments on a real robotic system, namely a quadcopter flight controller. We demonstrate that, on its actual hardware, schedulability properties can be formally expressed and verified. We give examples on how we can check other important behavioral and timed properties on the same synthesized models.",Bioinformatics; Formal verification; Genomics; Hardware; Petri nets; Real time; Real-time systems; Robotics; Robots; Scheduling; Software; Software engineering; Task analysis,Formal Verification of Complex Robotic Systems on Resource-Constrained Platforms,,,,,x,,,,,NO,,
S190,1,Backward,conferencePaper,2014,"Ortiz, Francisco J.; Alonso, Diego; Rosique, Francisca; Sánchez-Ledesma, Francisco; Pastor, Juan A.","Simulation, Modeling, and Programming for Autonomous Robots",10.1007/978-3-319-11900-7_29,,"This paper describes a Component-Based Meta-Model (WCOMM) and framework (FraCC) as part of a complete Model-Driven Software Development process and toolchain: C-Forge. The approach given in the design of WCOMM and FraCC is presented highlighting the differences with other similar approaches. To illustrate the use of C-Forge, the development of a control architecture for the robots in project MISSION is presented.",component-based robotic framework; MDSD; toolchain,A Component-Based Meta-Model and Framework in the Model Driven Toolchain C-Forge,x,,,,,,,,,NO,,
S191,1,Backward,journalArticle,2014,"Aitken, Jonathan M.; Veres, Sandor M.; Judge, Mark",IFAC Proceedings Volumes,10.3182/20140824-6-ZA-1003.02531,,"This paper lays down the foundations of developing a reconfigurable control system within the Robot Operating System (ROS) for autonomous robots. The essential components of robots are programmed under a ROS system. A formal model is defined as a tripartite graph to represent the robots functional architecture. ROS systems are then generalised to component libraries for any ROS architecture and an abstract model as a “system graph” is introduced. Orthogonality of a library and a system graph is defined and redundancy levels of robot components are studied for maintaining full functionality of the robot by automated reconfiguration in face of hardware malfunction. This allows AI planning tools, such as Planning Domain Definition Language (PDDL), to compute permissible reconfigurations. We present an example of a pair of robotic arms which requires reconfiguration of the underlying control system in order to retain the capability to carry out a task.",Adaptation; Autonomous control; Computer-aided control system design; Reconfigurable control; Robot arms,Adaptation of System Configuration under the Robot Operating System,,x,,,,,,,,NO,,
S192,1,Backward,conferencePaper,2018,"Bardaro, Gianluca; Semprebon, Andrea; Matteucci, Matteo",Proceedings of the 1st International Workshop on Robotics Software Engineering,10.1145/3196558.3196560,,"Designing a robotic application is a challenging task. It requires a vertical expertise spanning various fields, starting from hardware and low-level communication to high-level architectural solution for distributed applications. Today a single expert cannot undertake the entire effort of creating a robust and reliable robotic application. The current landscape of robotics middlewares, ROS in primis, does not offer a solution for this problem yet; developers are expected to be both architectural designers and domain experts. In our previous works we used the Architecture Analysis and Description Language to define a model-based approach for robot development, in an effort to separate the competences of software engineers and robotics experts, and to simplify the merge of software artifacts created by the two categories of developers. In this work we present a practical use-case, i.e., an autonomous wheelchair, and how we used a combination of model-based developed and automatic code generation to completely re-design and re-implement an existing architecture originally written by hand.",AADL; code generation; model-based; robotics; ROS,A use case in model-based robot development using AADL and ROS,,,,,,,,,,,,
S193,1,Backward,conferencePaper,2010,"Baresi, Luciano; Pasquale, Liliana; Spoletini, Paola",2010 18th IEEE International Requirements Engineering Conference,10.1109/RE.2010.25,,"Self-adaptation is imposing as a key characteristic of many modern software systems to tackle their complexity and cope with the many environments in which they can operate. Self-adaptation is a requirement per-se, but it also impacts the other (conventional) requirements of the system; all these new and old requirements must be elicited and represented in a coherent and homogenous way. This paper presents FLAGS, an innovative goal model that generalizes the KAOS model, adds adaptive goals to embed adaptation countermeasures, and fosters self-adaptation by considering requirements as live, runtime entities. FLAGS also distinguishes between crisp goals, whose satisfaction is boolean, and fuzzy goals, whose satisfaction is represented through fuzzy constraints. Adaptation countermeasures are triggered by violated goals and the goal model is modified accordingly to maintain a coherent view of the system and enforce adaptation directives on the running system. The main elements of the approach are demonstrated through an example application.",Adaptation model; Energy consumption; Fuzzy Goals; Goals; Green products; KAOS; Powders; Runtime; Self-Adaptation; Semantics; Washing machines,Fuzzy Goals for Requirements-Driven Adaptation,x,,,,,,,,,NO,,
S194,1,Backward,journalArticle,2019,"Bencomo, Nelly; Götz, Sebastian; Song, Hui",Software & Systems Modeling,10.1007/s10270-018-00712-x,,"More than a decade ago, the research topic models@run.time was coined. Since then, the research area has received increasing attention. Given the prolific results during these years, the current outcomes need to be sorted and classified. Furthermore, many gaps need to be categorized in order to further develop the research topic by experts of the research area but also newcomers. Accordingly, the paper discusses the principles and requirements of models@run.time and the state of the art of the research line. To make the discussion more concrete, a taxonomy is defined and used to compare the main approaches and research outcomes in the area during the last decade and including ancestor research initiatives. We identified and classified 275 papers on models@run.time, which allowed us to identify the underlying research gaps and to elaborate on the corresponding research challenges. Finally, we also facilitate sustainability of the survey over time by offering tool support to add, correct and visualize data.",,Models@run.time: a guided tour of the state of the art and research challenges,x,,,,,,,,,NO,,
S195,1,Backward,conferencePaper,2020,"Cheng, Betty H. C.; Clark, Robert Jared; Fleck, Jonathon Emil; Langford, Michael Austin; McKinley, Philip K.",Proceedings of the 23rd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems,10.1145/3365438.3410952,,"Cyber-physical systems that implement self-adaptive behavior, such as autonomous robots, need to ensure that requirements remain satisfied across run-time adaptations. The Robot Operating System (ROS), a middleware infrastructure for robotic systems, is widely used in both research and industrial applications. However, ROS itself does not assure self-adaptive behavior. This paper introduces AC-ROS, which fills this gap by using assurance case models at run time to manage the self-adaptive operation of ROS-based systems. Assurance cases provide structured arguments that a system satisfies requirements and can be specified graphically with Goal Structuring Notation (GSN) models. AC-ROS uses GSN models to instantiate a ROS-based MAPE-K framework, which in turn uses these models at run time to assure system behavior adheres to requirements across adaptations. For this study, AC-ROS is implemented and tested on EvoRally, a 1:5-scale autonomous vehicle.",assurance case; cyber-physical systems; digital twin; goal structuring notation; robot operating system; self-adaptive systems,AC-ROS: assurance case driven adaptation for the robot operating system,,,,,,,,,,,,
S196,1,Backward,conferencePaper,2009,"Borde, Etienne; Haik, Gregory; Pautet, Laurent",Automation Test in Europe Conference Exhibition 2009 Design,10.1109/DATE.2009.5090838,,"Designing reconfigurable yet critical embedded and complex systems (i.e. systems composed of different subsystems) requires making these systems adaptable while guaranteeing that they operate with respect to predefined safety properties. When it comes to complex systems, component-based software engineering methods provide solutions to master this complexity (ldquodivide to conquerrdquo). In addition, architecture description languages provide solutions to design and analyze critical and reconfigurable embedded systems. In this paper we propose a methodology that combines the benefits of these two approaches by leaning on both AADL and Lightweigth CCM standards. This methodology is materialized through a complete design process and an associated framework, MyCCM-HI, dedicated to designing reconfigurable, critical, and complex embedded systems.",Architecture description languages; Component architectures; Embedded software; Embedded system; Mission critical systems; Process design; Software architecture; Software design; Software engineering; Software safety,Mode-based reconfiguration of critical software component architectures,x,,,,,,,,,NO,,
S197,1,Backward,journalArticle,2012,"Calinescu, Radu; Ghezzi, Carlo; Kwiatkowska, Marta; Mirandola, Raffaela",Communications of the ACM,10.1145/2330667.2330686,,Continually verify self-adaptation decisions taken by critical software in response to changes in the operating environment.,,Self-adaptive software needs quantitative verification at runtime,x,,,,,,,,,NO,,
S198,1,Backward,journalArticle,2018,"Calinescu, Radu; Weyns, Danny; Gerasimou, Simos; Iftikhar, Muhammad Usman; Habli, Ibrahim; Kelly, Tim",IEEE Transactions on Software Engineering,10.1109/TSE.2017.2738640,,"Building on concepts drawn from control theory, self-adaptive software handles environmental and internal uncertainties by dynamically adjusting its architecture and parameters in response to events such as workload changes and component failures. Self-adaptive software is increasingly expected to meet strict functional and non-functional requirements in applications from areas as diverse as manufacturing, healthcare and finance. To address this need, we introduce a methodology for the systematic ENgineering of TRUstworthy Self-adaptive sofTware (ENTRUST). ENTRUST uses a combination of (1) design-time and runtime modelling and verification, and (2) industry-adopted assurance processes to develop trustworthy self-adaptive software and assurance cases arguing the suitability of the software for its intended application. To evaluate the effectiveness of our methodology, we present a tool-supported instance of ENTRUST and its use to develop proof-of-concept self-adaptive software for embedded and service-based systems from the oceanic monitoring and e-finance domains, respectively. The experimental results show that ENTRUST can be used to engineer self-adaptive software systems in different application domains and to generate dynamic assurance cases for these systems.",Adaptive systems; assurance cases; assurance evidence; Computer architecture; Control systems; Monitoring; Runtime; Self-adaptive software systems; software engineering methodology; Software systems,Engineering Trustworthy Self-Adaptive Software with Dynamic Assurance Cases,x,,,,,,,,,NO,,
S199,1,Backward,conferencePaper,2020,"Cheng, Betty H. C.; Clark, Robert Jared; Fleck, Jonathon Emil; Langford, Michael Austin; McKinley, Philip K.",Proceedings of the 23rd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems,10.1145/3365438.3410952,,"Cyber-physical systems that implement self-adaptive behavior, such as autonomous robots, need to ensure that requirements remain satisfied across run-time adaptations. The Robot Operating System (ROS), a middleware infrastructure for robotic systems, is widely used in both research and industrial applications. However, ROS itself does not assure self-adaptive behavior. This paper introduces AC-ROS, which fills this gap by using assurance case models at run time to manage the self-adaptive operation of ROS-based systems. Assurance cases provide structured arguments that a system satisfies requirements and can be specified graphically with Goal Structuring Notation (GSN) models. AC-ROS uses GSN models to instantiate a ROS-based MAPE-K framework, which in turn uses these models at run time to assure system behavior adheres to requirements across adaptations. For this study, AC-ROS is implemented and tested on EvoRally, a 1:5-scale autonomous vehicle.",assurance case; cyber-physical systems; digital twin; goal structuring notation; robot operating system; self-adaptive systems,AC-ROS: assurance case driven adaptation for the robot operating system,,,,,,,,,,,,
S20,1,Forward,conferencePaper,2000,"Broy, M.",Proceedings International Symposium on Multimedia Software Engineering,10.1109/MMSE.2000.897190,,"Message sequence charts (MSCs) are a technique to describe patterns of interaction between the components of interactive distributed systems by specific diagrams. In this paper, we suggest a semantic model for MSCs in terms of stream processing functions. This formalization allows us to use MSCs as an intuitively clear specification technique for the components of a system with a precisely defined meaning.",Concrete; Cost accounting; Design engineering; Flow graphs; Information processing; Jacobian matrices; Software systems; Systems engineering and theory; Tin; Unified modeling language,The essence of message sequence charts,,,,x,,,,,,NO,,
S200,1,Backward,journalArticle,2015,"Cashmore, Michael; Fox, Maria; Long, Derek; Magazzeni, Daniele; Ridder, Bram; Carrera, Arnau; Palomeras, Narcis; Hurtos, Natalia; Carreras, Marc",Proceedings of the International Conference on Automated Planning and Scheduling,,,,AUV,ROSPlan: Planning in the Robot Operating System,,,,,x,,,,,NO,,
S201,1,Backward,bookSection,2014,"Cheng, Betty H. C.; Eder, Kerstin I.; Gogolla, Martin; Grunske, Lars; Litoiu, Marin; Müller, Hausi A.; Pelliccione, Patrizio; Perini, Anna; Qureshi, Nauman A.; Rumpe, Bernhard; Schneider, Daniel; Trollmann, Frank; Villegas, Norha M.","Models@run.time: Foundations, Applications, and Roadmaps",,,"A self-adaptive software system modifies its behavior at runtime in response to changes within the system or in its execution environment. The fulfillment of the system requirements needs to be guaranteed even in the presence of adverse conditions and adaptations. Thus, a key challenge for self-adaptive software systems is assurance. Traditionally, confidence in the correctness of a system is gained through a variety of activities and processes performed at development time, such as design analysis and testing. In the presence of self-adaptation, however, some of the assurance tasks may need to be performed at runtime. This need calls for the development of techniques that enable continuous assurance throughout the software life cycle. Fundamental to the development of runtime assurance techniques is research into the use of models at runtime (M@RT). This chapter explores the state of the art for using M@RT to address the assurance of self-adaptive software systems. It defines what information can be captured by M@RT, specifically for the purpose of assurance, and puts this definition into the context of existing work. We then outline key research challenges for assurance at runtime and characterize assurance methods. The chapter concludes with an exploration of selected application areas where M@RT could provide significant benefits beyond existing assurance techniques for adaptive systems.",Ambient Assist Live; Autonomic Computing; Goal Model; Model Check; Target System,Using Models at Runtime to Address Assurance for Self-Adaptive Systems,,,,,x,,,,,NO,,
S202,1,Backward,conferencePaper,2006,"Cheng, Shang-Wen; Garlan, David; Schmerl, Bradley",Proceedings of the 2006 international workshop on Self-adaptation and self-managing systems,10.1145/1137677.1137679,,"In the world of autonomic computing, the ultimate aim is to automate human tasks in system management to achieve high-level stakeholder objectives. One common approach is to capture and represent human expertise in a form executable by a computer. Techniques to capture such expertise in programs, scripts, or rule sets are effective to an extent. However, they are often incapable of expressing the necessary adaptation expertise and emulating the subtleties of trade-offs in high-level decision making. In this paper, we propose a new language of adaptation that is sufficiently expressive to capture the subtleties of choice, deriving its ontology from system administration tasks and its underlying formalism from utility theory.",choice; preference; repair language; self-adaptation; strategy; tactic; trade-off; utility,Architecture-based self-adaptation in the presence of multiple objectives,,,,x,,,,,,NO,,
S203,1,Backward,conferencePaper,2012,"Denney, Ewen; Pai, Ganesh; Pohl, Josef","Computer Safety, Reliability, and Security",10.1007/978-3-642-33675-1_2,,"We present AdvoCATE, an Assurance Case Automation ToolsEt, to support the automated construction and assessment of safety cases. In addition to manual creation and editing, it has a growing suite of automated features. In this paper, we highlight its capabilities for (i) inclusion of specific metadata, (ii) translation to and from various formats, including those of other widely used safety case tools, (iii) composition, with auto-generated safety case fragments, and (iv) computation of safety case metrics which, we believe, will provide a transparent, quantitative basis for assessment of the state of a safety case as it evolves. The tool primarily supports the Goal Structuring Notation (GSN), is compliant with the GSN Community Standard Version 1, and the Object Modeling Group Argumentation Metamodel (OMG ARM).",Assurance cases; Formal methods; Metrics; Safety cases; Safety management; Safety process; Safety toolset,AdvoCATE: An Assurance Case Automation Toolset,x,,,,,,,,,NO,,
S204,1,Backward,conferencePaper,2020,"Cheng, Betty H. C.; Clark, Robert Jared; Fleck, Jonathon Emil; Langford, Michael Austin; McKinley, Philip K.",Proceedings of the 23rd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems,10.1145/3365438.3410952,,"Cyber-physical systems that implement self-adaptive behavior, such as autonomous robots, need to ensure that requirements remain satisfied across run-time adaptations. The Robot Operating System (ROS), a middleware infrastructure for robotic systems, is widely used in both research and industrial applications. However, ROS itself does not assure self-adaptive behavior. This paper introduces AC-ROS, which fills this gap by using assurance case models at run time to manage the self-adaptive operation of ROS-based systems. Assurance cases provide structured arguments that a system satisfies requirements and can be specified graphically with Goal Structuring Notation (GSN) models. AC-ROS uses GSN models to instantiate a ROS-based MAPE-K framework, which in turn uses these models at run time to assure system behavior adheres to requirements across adaptations. For this study, AC-ROS is implemented and tested on EvoRally, a 1:5-scale autonomous vehicle.",assurance case; cyber-physical systems; digital twin; goal structuring notation; robot operating system; self-adaptive systems,AC-ROS: assurance case driven adaptation for the robot operating system,,,,,,,,,,,,
S205,1,Backward,journalArticle,2012,"Filieri, Antonio; Ghezzi, Carlo; Tamburrelli, Giordano",Formal Aspects of Computing,10.1007/s00165-011-0207-2,,"Modern software systems are increasingly requested to be adaptive to changes in the environment in which they are embedded. Moreover, adaptation often needs to be performed automatically, through self-managed reactions enacted by the application at run time. Off-line, human-driven changes should be requested only if self-adaptation cannot be achieved successfully. To support this kind of autonomic behavior, software systems must be empowered by a rich run-time support that can monitor the relevant phenomena of the surrounding environment to detect changes, analyze the data collected to understand the possible consequences of changes, reason about the ability of the application to continue to provide the required service, and finally react if an adaptation is needed. This paper focuses on non-functional requirements, which constitute an essential component of the quality that modern software systems need to exhibit. Although the proposed approach is quite general, it is mainly exemplified in the paper in the context of service-oriented systems, where the quality of service (QoS) is regulated by contractual obligations between the application provider and its clients. We analyze the case where an application, exported as a service, is built as a composition of other services. Non-functional requirements—such as reliability and performance—heavily depend on the environment in which the application is embedded. Thus changes in the environment may ultimately adversely affect QoS satisfaction. We illustrate an approach and support tools that enable a holistic view of the design and run-time management of adaptive software systems. The approach is based on formal (probabilistic) models that are used at design time to reason about dependability of the application in quantitative terms. Models continue to exist at run time to enable continuous verification and detection of changes that require adaptation.",,A formal approach to adaptive software: continuous assurance of non-functional requirements,x,,,,,,,,,NO,,
S206,1,Backward,journalArticle,2019,"Goldfain, Brian; Drews, Paul; You, Changxi; Barulic, Matthew; Velev, Orlin; Tsiotras, Panagiotis; Rehg, James M.",IEEE Control Systems Magazine,10.1109/MCS.2018.2876958,,"The technical challenge of creating a self-driving vehicle remains an open problem despite significant advancements from universities, car manufacturers, and technology companies. Full autonomy, known as level 5 (see ""Society of Automotive Engineers Levels of Driving Automation""), is defined as full-time performance by an automated driving system of all aspects of the dynamic driving task under all roadway and environmental conditions that can be managed by a human driver. It is estimated that level 5 autonomous vehicles on public roads will help eliminate more than 90% [1] of the 35,000 annual traffic fatalities caused by human error in the United States [2]; reduce commute time, road congestion, and pollution; and increase driving resource utilization [3].",Autonomous automobiles; Autonomous vehicles; Task analysis; Vehicle dynamics; Vehicular ad hoc networks; Wireless sensor networks,AutoRally: An Open Platform for Aggressive Autonomous Driving,x,,,,,,,,,NO,,
S207,1,Backward,bookSection,2016,"Pavlatos, C.; Vita, V.",Electricity Distribution: Intelligent Solutions for Electricity Transmission and Distribution Networks,,,"This chapter presents an Attribute Grammar capable of modelling power system signals. Primitive pattern selection, linguistic representation, and pattern grammar formulation are the sub problems of tackled. The recognition of power system waveforms and to the measurement of its parameters is proven to easily be handled using syntactic pattern recognition techniques. Attribute grammars are used as the model for the pattern grammar because of their descriptive power, which is due to their ability to handle syntactic as well as semantic information. In order the functionality of the proposed system to be tested, a software implementation has been developed using waveforms and data provided by the Independent Power Transmission Operator (IPTO) in Greece. The proposed methodology will be applied to the implementation of an efficient protective relay that would efficiently prevent safety problems and economic losses caused by faults presented in power systems.",Attribute Grammars (AG); Grammar Patterns; Power System Signals; Relay Protection; Syntactic Pattern Recognition Techniques,Linguistic Representation of Power System Signals,,,,,x,,,,,NO,,
S208,1,Backward,conferencePaper,2013,"Hochgeschwender, Nico; Gherardi, Luca; Shakhirmardanov, Azamat; Kraetzschmar, Gerhard K.; Brugali, Davide; Bruyninckx, Herman",2013 IEEE/RSJ International Conference on Intelligent Robots and Systems,10.1109/IROS.2013.6696915,,Deploying a complex robot software architecture on real robot systems and getting it to run reliably is a challenging task. We argue that software deployment decisions should be separated as much as possible from the core development of software functionalities. This will make the developed software more independent of a particular hardware architecture (and thus more reusable) and allow it to be deployed more flexibly on a wider variety of robot platforms. This paper presents a domain-specific language (DSL) which supports this idea and demonstrates how the DSL is used in a model-driven engineering-based development process. A practical example of applying the DSL to the development of an application for the KUKA youBot platform is given.,Computational modeling; Computer architecture; Data models; Navigation; Service robots; Software,A model-based approach to software deployment in robotics,x,,,,,,,,,NO,,
S209,1,Backward,conferencePaper,2004,"Kelly, Tim; Weaver, Rob",Proc. of Dependable Systems and Networks 2004 Workshop on Assurance Cases,,,"In Europe, over recent years, the responsibility for ensuring system safety has shifted onto the developers and operators to construct and present well reasoned arguments that their systems achieve acceptable levels of safety. These arguments (together with supporting evidence) are typically referred to as a “safety case”. This paper describes the role and purpose of a safety case. Safety arguments within safety cases are often poorly communicated. This paper presents a technique called GSN (Goal Structuring Notation) that is increasingly being used in safety-critical industries to improve the structure, rigor, and clarity of safety arguments. The paper also describes a number of extensions, based upon GSN, which can be used to assist the maintenance, construction, reuse and assessment of safety cases. The aim of this paper is to describe the current industrial use and research into GSN such that its applicability to other types of Assurance Case, in addition to safety cases, can also be considered. 1.",,The Goal Structuring Notation – A Safety Argument Notation,,,,x,x,,,,,NO,,
S21,1,Forward,conferencePaper,2019,"Foughali, Mohammed; Ingrand, Félix; Seceleanu, Cristina",Model Checking Software,10.1007/978-3-030-30923-7_7,,"Failure of robotic software may cause catastrophic damages. In order to establish a higher level of trust in robotic systems, formal methods are often proposed. However, their applicability to the functional layer of robots remains limited because of the informal nature of specifications, their complexity and size. In this paper, we formalize the robotic framework Open image in new window and automatically translate its components to UPPAAL-SMC, a real-time statistical model checker. We apply our approach to verify properties of interest on a real-world autonomous drone navigation that does not scale with regular UPPAAL.",,Statistical Model Checking of Complex Robotic Systems,x,,,,,,,,,NO,,
S210,1,Backward,journalArticle,2003,"Kephart, J.O.; Chess, D.M.",Computer,10.1109/MC.2003.1160055,,"A 2001 IBM manifesto observed that a looming software complexity crisis -caused by applications and environments that number into the tens of millions of lines of code - threatened to halt progress in computing. The manifesto noted the almost impossible difficulty of managing current and planned computing systems, which require integrating several heterogeneous environments into corporate-wide computing systems that extend into the Internet. Autonomic computing, perhaps the most attractive approach to solving this problem, creates systems that can manage themselves when given high-level objectives from administrators. Systems manage themselves according to an administrator's goals. New components integrate as effortlessly as a new cell establishes itself in the human body. These ideas are not science fiction, but elements of the grand challenge to create self-managing computing systems.",Biology computing; Computer industry; Computer vision; Crisis management; Environmental management; Humans; Internet; LAN interconnection; Pervasive computing; Technological innovation,The vision of autonomic computing,,,,x,,,,,,NO,,
S211,1,Backward,journalArticle,2007,"Kephart, Jeffrey O.; Das, Rajarshi",IEEE Internet Computing,10.1109/MIC.2007.2,,"Self-management in accordance with high-level objectives that users can specify is a hallmark of autonomic computing systems. The authors advocate utility functions as a principled, practical, and general way of representing such objectives. In an effort to bring the promise of utility-based frameworks to the marketplace, they describe how they've implemented them in two commercial products so as to achieve efficient resource allocation in a prototype data center. They also address several challenges to commercialization stemming from the need to reconcile the two products' fundamentally different types of objectives",Artificial intelligence; autonomic computing; Commercialization; Computer vision; Control system synthesis; Design optimization; Distributed computing; Humans; Proposals; Prototypes; Resource management; utility functions,Achieving Self-Management via Utility Functions,x,,,,,,,,,NO,,
S212,1,Backward,conferencePaper,2004,"Koenig, N.; Howard, A.",2004 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS) (IEEE Cat. No.04CH37566),10.1109/IROS.2004.1389727,,"Simulators have played a critical role in robotics research as tools for quick and efficient testing of new concepts, strategies, and algorithms. To date, most simulators have been restricted to 2D worlds, and few have matured to the point where they are both highly capable and easily adaptable. Gazebo is designed to fill this niche by creating a 3D dynamic multi-robot environment capable of recreating the complex worlds that would be encountered by the next generation of mobile robots. Its open source status, fine grained control, and high fidelity place Gazebo in a unique position to become more than just a stepping stone between the drawing board and real hardware: data visualization, simulation of remote environments, and even reverse engineering of blackbox systems are all possible applications. Gazebo is developed in cooperation with the Player and Stage projects (Gerkey, B. P., et al., July 2003), (Gerkey, B. P., et al., May 2001), (Vaughan, R. T., et al., Oct. 2003), and is available from http://playerstage.sourceforge.net/gazebo/ gazebo.html.",Computational modeling; Educational robots; Friction; Mobile robots; Open source software; Packaging; Robot sensing systems; Service robots; Testing; Vehicle dynamics,"Design and use paradigms for Gazebo, an open-source multi-robot simulator",,,,x,,,,,,NO,,
S213,1,Backward,journalArticle,2018,"Koulamas, Christos; Kalogeras, Athanasios",Computer,10.1109/MC.2018.2876181,,A digital twin is a virtual representation that serves as the real-time digital counterpart of a physical object or process and addresses every instance for its total life cycle.,Computational modeling; Computer architecture; Cyber-physical systems; Data models; Internet of Things; Real-time systems,Cyber-Physical Systems and Digital Twins in the Industrial Internet of Things [Cyber-Physical Systems],x,,,,,,,,,NO,,
S214,1,Backward,journalArticle,1990,"Kramer, J.; Magee, J.",IEEE Transactions on Software Engineering,10.1109/32.60317,,"A model for dynamic change management which separates structural concerns from component application concerns is presented. This separation of concerns permits the formulation of general structural rules for change at the configuration level without the need to consider application state, and the specification of application component actions without prior knowledge of the actual structural changes which may be introduced. In addition, the changes can be applied in such a way so as to leave the modified system in a consistent state, and cause no disturbance to the unaffected part of the operational system. The model is applied to an example problem, 'evolving philosophers'. The principles of this model have been implemented and tested in the Conic environment for distributed systems.<>",Application software; Computer industry; Functional programming; Humans; Software systems; System testing,The evolving philosophers problem: dynamic change management,,,,x,,,,,,NO,,
S215,1,Backward,conferencePaper,2013,"Langari, Zarrin; Maibaum, Tom",2013 1st International Workshop on Assurance Cases for Software-Intensive Systems (ASSURE),10.1109/ASSURE.2013.6614263,,"In this article, we address safety cases as special cases of the more general class of assurance cases, which were developed as an extension to the concept of safety case. Related to the development and use of safety cases, there remain challenges, such as their size, readability, and identifying fallacious reasoning used in arguments. Some of these challenges are reviewed in the current article and followed by a review of challenges for the assessment of safety cases by regulators.",Context; Hazards; Regulators; Software; Standards; Systematics,Safety cases: A review of challenges,x,,,,,,,,,NO,,
S216,1,Backward,conferencePaper,2018,"Lin, Chung-Ling; Shen, Wuwei; Drager, Steven; Cheng, Betty",2018 IEEE/ACM 40th International Conference on Software Engineering: New Ideas and Emerging Technologies Results (ICSE-NIER),,,"Evaluation of assurance cases typically requires certifiers' domain knowledge and experience, and, as such, most software certification has been conducted manually. Given the advancement in uncertainty theories and software traceability, we envision that these technologies can synergistically be combined and leveraged to offer some degree of automation to improve the certifiers' capability to perform software certification. To this end, we present a novel confidence calculation framework that 1) applies the Dempster-Shafer theory as a mathematical model to calculate the confidence between a parent claim and its children claims; and 2) uses the vector space model to evaluate the confidence for the evidence items using traceability information. A fragment of an assurance case (expressed in the goal-structuring notation - GSN) for the coupled tank system is used to illustrate our new framework.",Certification; Context modeling; Dempster-Shafer theory; Government; Liquids; Safety; Software; Software Certification; Software Traceability; Uncertainty; Vector Space Model (VSM),Measure Confidence of Assurance Cases in Safety-Critical Domains,,,,,x,,,,,NO,,
S217,1,Backward,conferencePaper,2018,"Maksimov, Mike; Fung, Nick L. S.; Kokaly, Sahar; Chechik, Marsha","Computer Safety, Reliability, and Security",10.1007/978-3-319-99229-7_6,,"In regulated safety-critical domains, such as the aerospace and nuclear domains, certification bodies often require systems to undergo a stringent safety assessment procedure to show their compliance to one or more safety standards. Assurance cases are an emerging way of communicating safety of a safety-critical system in a structured and comprehensive manner. Due to the significant complexity of the required materials, software tools are often used as a practical way of constructing assurance cases. This paper presents the first, to the best of our knowledge, systematic review of assurance case tools. Specifically, we provide a comprehensive list of assurance case tools developed over the past 20 years and an analysis of their functionalities.",Assurance case; Systematic literature review; Tools,Two Decades of Assurance Case Tools: A Survey,x,,,,,,,,,NO,,
S218,1,Backward,conferencePaper,2019,"Masaba, Kizito; Li, Alberto Quattrini",2019 International Symposium on Multi-Robot and Multi-Agent Systems (MRS),10.1109/MRS.2019.8901094,,"Simulation plays a critical role in robotics as it allows verification and it provides evaluations of robot software before real world deployment [1]. One prevalent limitation of robotic simulators that support the Robot Operating System, ROS [2] - a de facto standard for developing robotic software - is the absence of communication simulators. This poses a serious challenge in testing software for multi-robot systems (MRS) that use explicit communication, hence limiting the development of this technology. Figure 1 illustrates the problem tackled in this paper.",Benchmark testing; Computational modeling; Multi-robot systems; Robot kinematics; Software; Tools,ROS-CBT: Communication Benchmarking Tool for the Robot Operating System: Extended Abstract,,,,,,,,,x,NO,,
S219,1,Backward,conferencePaper,2015,"Moreno, Gabriel A.; Cámara, Javier; Garlan, David; Schmerl, Bradley",Proceedings of the 2015 10th Joint Meeting on Foundations of Software Engineering,10.1145/2786805.2786853,,"Self-adaptive systems tend to be reactive and myopic, adapting in response to changes without anticipating what the subsequent adaptation needs will be. Adapting reactively can result in inefficiencies due to the system performing a suboptimal sequence of adaptations. Furthermore, when adaptations have latency, and take some time to produce their effect, they have to be started with sufficient lead time so that they complete by the time their effect is needed. Proactive latency-aware adaptation addresses these issues by making adaptation decisions with a look-ahead horizon and taking adaptation latency into account. In this paper we present an approach for proactive latency-aware adaptation under uncertainty that uses probabilistic model checking for adaptation decisions. The key idea is to use a formal model of the adaptive system in which the adaptation decision is left underspecified through nondeterminism, and have the model checker resolve the nondeterministic choices so that the accumulated utility over the horizon is maximized. The adaptation decision is optimal over the horizon, and takes into account the inherent uncertainty of the environment predictions needed for looking ahead. Our results show that the decision based on a look-ahead horizon, and the factoring of both tactic latency and environment uncertainty, considerably improve the effectiveness of adaptation decisions.",Latency-aware; proactive; probabilistic model checking; self-adaptation,Proactive self-adaptation under uncertainty: a probabilistic model checking approach,x,,,,,,,,,NO,,
S22,1,Forward,conferencePaper,2019,"Ingrand, Felix",2019 Third IEEE International Conference on Robotic Computing (IRC),10.1109/IRC.2019.00059,,"The consequences of autonomous systems software failures can be potentially dramatic. There is no need to darken the picture, but still, it seems unlikely that people, insurance companies and certification agencies will let autonomous systems fly or drive around without requiring their makers and programmers to prove that the most critical parts of the software are robust and reliable. This is already the case for aeronautic, rail transportation, nuclear plants, medical devices, etc. were software must be certified, which possibly involve its formal validation and verification (V&V). Moreover, autonomous systems go further and embed onboard deliberation functions. This is what make them really autonomous, but open new challenges. We propose to consider the overall problem of V&V of autonomous systems software and examine the current situation with respect to the various type of software used. In particular, we point out that the availability of formal models is rather different depending on the type of component considered. We distinguish these different cases and stress the areas where we think we need to focus our efforts as to improve the overall robustness of autonomous systems.",Automobiles; autonomous robots; Autonomous systems; formal methods; Mathematical model; robotics software; Robots; Safety; Software; Task analysis; validation and verification,Recent Trends in Formal Validation and Verification of Autonomous Robots Software,x,,,,,,,,,NO,,
S220,1,Backward,conferencePaper,2011,"Ramirez, Andres J.; Cheng, Betty H. C.",Model Driven Engineering Languages and Systems,10.1007/978-3-642-24485-8_37,,"Utility functions can be used to monitor requirements of a dynamically adaptive system (DAS). More specifically, a utility function maps monitoring information to a scalar value proportional to how well a requirement is satisfied. Utility functions may be manually elicited by requirements engineers, or indirectly inferred through statistical regression techniques. This paper presents a goal-based requirements model-driven approach for automatically deriving state-, metric-, and fuzzy logic-based utility functions for RELAXed goal models. State- and fuzzy logic-based utility functions are responsible for detecting requirements violations, and metric-based utility functions are used to detect conditions conducive to a requirements violation. We demonstrate the proposed approach by applying it to the goal model of an intelligent vehicle system (IVS) and use the derived utility functions to monitor the IVS under different environmental conditions at run time.",Adaptive Cruise Control; Distance Sensor; Lead Vehicle; Requirement Engineer; Utility Function,Automatic Derivation of Utility Functions for Monitoring Software Requirements,x,,,,,,,,,NO,,
S221,1,Backward,conferencePaper,2004,"Walsh, W.E.; Tesauro, G.; Kephart, J.O.; Das, R.","International Conference on Autonomic Computing, 2004. Proceedings.",10.1109/ICAC.2004.1301349,,"Utility functions provide a natural and advantageous framework for achieving self-optimization in distributed autonomic computing systems. We present a distributed architecture, implemented in a realistic prototype data center, that demonstrates how utility functions can enable a collection of autonomic elements to continually optimize the use of computational resources in a dynamic, heterogeneous environment. Broadly, the architecture is a two-level structure of independent autonomic elements that supports flexibility, modularity, and self-management. Individual autonomic elements manage application resource usage to optimize local service-level utility functions, and a global arbiter allocates resources among application environments based on resource-level utility functions obtained from the managers of the applications. We present empirical data that demonstrate the effectiveness of our utility function scheme in handling realistic, fluctuating Web-based transactional workloads running on a Linux cluster.",Artificial intelligence; Computer architecture; Distributed computing; Drives; Environmental economics; Environmental management; Humans; Linux; Prototypes; Resource management,Utility functions in autonomic systems,,,,x,,,,,,NO,,
S222,1,Backward,conferencePaper,2012,"Weyns, Danny; Iftikhar, M. Usman; de la Iglesia, Didac Gil; Ahmad, Tanvir",Proceedings of the Fifth International C* Conference on Computer Science and Software Engineering,10.1145/2347583.2347592,,"One major challenge in self-adaptive systems is to assure the required quality properties. Formal methods provide the means to rigorously specify and reason about the behaviors of self-adaptive systems, both at design time and runtime. To the best of our knowledge, no systematic study has been performed on the use of formal methods in self-adaptive systems. As a result, there is no clear view on what methods have been used to verify self-adaptive systems, and what support these methods offer to software developers. As such insight is important for researchers and engineers, we performed a systematic literature review covering 12 main software engineering venues and 4 journals, resulting in 75 papers used for data collection. The study shows that the attention for self-adaptive software systems is gradually increasing, but the number of studies that employ formal methods remains low. The main focus of formalization is on modeling and reasoning. Model checking and theorem proving have gained limited attention. The main concerns of interest in formalization of self-adaptation are efficiency/performance and reliability. Important adaptation concerns, such as security and scalability, are hardly considered. To verify the concerns of interest, a set of new properties are defined, such as interference freedom, responsiveness, mismatch, and loss-tolerance. A relevant part of the studies use formal methods at runtime, but the use is limited to modeling and analysis. Formal methods can be applied to other runtime activities of self-adaptation, and there is a need for light-weight tools to support runtime verification.",self-adaptive systems; systematic literature review,A survey of formal methods in self-adaptive systems,x,,,,,,,,,NO,,
S223,1,Backward,journalArticle,2012,"Weyns, Danny; Malek, Sam; Andersson, Jesper",ACM Transactions on Autonomous and Adaptive Systems,10.1145/2168260.2168268,,"The challenges of pervasive and mobile computing environments, which are highly dynamic and unpredictable, have motivated the development of self-adaptive software systems. Although noteworthy successes have been achieved on many fronts, the construction of such systems remains significantly more challenging than traditional systems. We argue this is partially because researchers and practitioners have been struggling with the lack of a precise vocabulary for describing and reasoning about the key architectural characteristics of self-adaptive systems. Further exacerbating the situation is the fact that existing frameworks and guidelines do not provide an encompassing perspective of the different types of concerns in this setting. In this article, we present a comprehensive reference model, entitled FOrmal Reference Model for Self-adaptation (FORMS), that targets both issues. FORMS provides rigor in the manner such systems can be described and reasoned about. It consists of a small number of formally specified modeling elements that correspond to the key concerns in the design of self-adaptive software systems, and a set of relationships that guide their composition. We demonstrate FORMS's ability to precisely describe and reason about the architectural characteristics of distributed self-adaptive software systems through its application to several existing systems. FORMS's expressive power gives it a potential for documenting reusable architectural solutions (e.g., architectural patterns) to commonly encountered problems in this area.",autonomic computing; Formal methods; self-adaptation,FORMS: Unifying reference model for formal specification of distributed self-adaptive systems,x,,,,,,,,,NO,,
S224,1,Backward,conferencePaper,2009,"Whittle, Jon; Sawyer, Pete; Bencomo, Nelly; Cheng, Betty H.C.; Bruel, Jean-Michel",2009 17th IEEE International Requirements Engineering Conference,10.1109/RE.2009.36,,"Self-adaptive systems have the capability to autonomously modify their behaviour at run-time in response to changes in their environment. Self-adaptation is particularly necessary for applications that must run continuously, even under adverse conditions and changing requirements; sample domains include automotive systems, telecommunications, and environmental monitoring systems. While a few techniques have been developed to support the monitoring and analysis of requirements for adaptive systems, limited attention has been paid to the actual creation and specification of requirements of self-adaptive systems. As a result, self-adaptivity is often constructed in an ad-hoc manner. In this paper, we argue that a more rigorous treatment of requirements explicitly relating to self-adaptivity is needed and that, in particular, requirements languages for self-adaptive systems should include explicit constructs for specifying and dealing with the uncertainty inherent in self-adaptive systems. We present RELAX, a new requirements language for self-adaptive systems and illustrate it using examples from the smart home domain.",Adaptive systems; Automotive engineering; Biomedical monitoring; Computer science; Condition monitoring; Humans; requirements; Runtime environment; self-adaptation; Smart homes; uncertainty; Uncertainty; USA Councils,RELAX: Incorporating Uncertainty into the Specification of Self-Adaptive Systems,x,,,,,,,,,NO,,
S225,1,Backward,conferencePaper,2009,"Zhang, Ji; Goldsby, Heather J.; Cheng, Betty H.C.",Proceedings of the 8th ACM international conference on Aspect-oriented software development,10.1145/1509239.1509262,,"Cyber-physical systems increasingly rely on dynamically adaptive programs to respond to changes in their physical environment; examples include ecosystem monitoring and disaster relief systems. These systems are considered high-assurance since errors during execution could result in injury, loss of life, environmental impact, and/or financial loss. In order to facilitate the development and verification of dynamically adaptive systems, we separate functional concerns from adaptive concerns. Specifically, we model a dynamically adaptive program as a collection of (non-adaptive) steady-state programs and a set of adaptations that realize transitions among steady state programs in response to environmental changes. We use Linear Temporal Logic (LTL) to specify properties of the non-adaptive portions of the system, and we use A-LTL (an adapt-operator extension toLTL) to concisely specify properties that hold during the adaptation process. Model checking offers an attractive approach to automatically analyzing models for adherence to formal properties and thus providing assurance. However, currently, model checkers are unable to verify properties specified using A-LTL. Moreover, as the number of steady-state programs and adaptations increase, the verification costs (in terms of space and time) potentially become unwieldy. To address these issues, we propose a modular model checking approach to verifying that a formal model of an adaptive program satisfies its requirements specified in LTL and A-LTL, respectively.",autonomic computing; dynamic adaptation; formal specification; global invariants; modular model checking; reliability; verification,Modular verification of dynamically adaptive systems,x,,,,,,,,,NO,,
S226,1,Backward,conferencePaper,2006,"Zhang, Ji; Cheng, Betty H. C.",Proceedings of the 28th international conference on Software engineering,10.1145/1134285.1134337,,"Increasingly, software should dynamically adapt its behavior at run-time in response to changing conditions in the supporting computing and communication infrastructure, and in the surrounding physical environment. In order for an adaptive program to be trusted, it is important to have mechanisms to ensure that the program functions correctly during and after adaptations. Adaptive programs are generally more difficult to specify, verify, and validate due to their high complexity. Particularly, when involving multi-threaded adaptations, the program behavior is the result of the collaborative behavior of multiple threads and software components. This paper introduces an approach to create formal models for the behavior of adaptive programs. Our approach separates the adaptation behavior and non-adaptive behavior specifications of adaptive programs, making the models easier to specify and more amenable to automated analysis and visual inspection. We introduce a process to construct adaptation models, automatically generate adaptive programs from the models, and verify and validate the models. We illustrate our approach through the development of an adaptive GSM-oriented audio streaming protocol for a mobile computing application.",autonomic computing; dynamic adaptation; formal specification; global invariants; reliability; verification,Model-based development of dynamically adaptive software,,,,x,,,,,,NO,,
S227,1,Backward,conferencePaper,2019,"Hammoudeh Garcia, Nadia; Lüdtke, Mathias; Kortik, Sitar; Kahl, Björn; Bordignon, Mirko",2019 Third IEEE International Conference on Robotic Computing (IRC),10.1109/IRC.2019.00060,,"Ten years after its first release, the Robot Operating System (ROS) is arguably the most popular software framework used to program robots. It achieved such status despite its shortcomings compared to alternatives similarly centered on manual programming and, perhaps surprisingly, to model-driven engineering (MDE) approaches. Based on our experience as users and developers of both ROS and MDE tools, we identified possible ways to leverage the accessibility of ROS and its large software ecosystem, while providing quality assurance measures through selected MDE techniques. After describing our vision on how to combine MDE and manually written code, we present the first technical contribution in this pursuit: a family of three metamodels to respectively model ROS nodes, communication interfaces, and systems composed from subsystems. Such metamodels can be used, through the accompanying Eclipse-based tooling made publicly available, to model ROS systems of arbitrary complexity and generate with correctness guarantees the software artifacts for their composition and deployment. Furthermore, they account for specifications on these aspects by the Object Management Group (OMG), in order to be amenable to hybrid systems coupling ROS and other frameworks. We also report on our experience with a large and complex corpus of ROS software used in a commercially deployed robot (the Care-O-bot 4), to explain the rationale of the presented work, including the shortcomings of standard ROS tools and of previous efforts on ROS modeling.",development environments; Manuals; models; Robot kinematics; Robot sensing systems; ROS; Service robots; Software; Tools,Bootstrapping MDE Development from ROS Manual Code - Part 1: Metamodeling,,,,,,,,x,,NO,,
S228,1,Backward,journalArticle,2016,"Hagele, Martin",IEEE Robotics Automation Magazine,10.1109/MRA.2015.2512741,,"Be it big, heavy robots in production, service robots in such areas as agriculture or logistics, or vacuum-/window-cleaning robots for private use: in nearly every segment of the robotics market, 2014 saw significant growth in both unit sales and revenues. These results come from ""World Robotics Statistics 2015,"" published by the International Federation of Robotics (IFR). The Fraunhofer Institute of Manufacturing Engineering and Automation IPA edited the part on service robotics.",Automation; Automotive engineering; Industries; Logistics; Mobile communication; Service robots,Robots Conquer the World [Turning Point],x,,,,,,,,,NO,,
S229,1,Backward,conferencePaper,2014,"Gherardi, Luca; Hunziker, Dominique; Mohanarajah, Gajamohan",2014 IEEE 7th International Conference on Cloud Computing,10.1109/CLOUD.2014.104,,"The computational requirements of the increasingly sophisticated algorithms used in today's robotics software applications have outpaced the onboard processors of the average robot. Furthermore, the development and configuration of these applications are difficult tasks that require expertise in diverse domains, including software engineering, control engineering, and computer vision. As a solution to these problems, this paper extends and integrates our previous works, which are based on two promising techniques: Cloud Robotics and Software Product Lines. Cloud Robotics provides a powerful and scalable environment to offload the computationally expensive algorithms resulting in low-cost processors and light-weight robots. Software Product Lines allow the end user to deploy and configure complex robotics applications without dealing with low-level problems such as configuring algorithms and designing architectures. This paper discusses the proposed method in depth, and demonstrates its advantages with a case study.",Cloud computing; Cloud Computing; Computational modeling; Computer architecture; Containers; Robotics; Robots; Software as a service; Software Product Lines,A Software Product Line Approach for Configuring Cloud Robotics Applications,x,,,,,,,,,NO,,
S23,1,Forward,journalArticle,2019,"López, Joaquín; Santana-Alonso, Alejandro; Díaz-Cacho Medina, Miguel",Sensors,10.3390/s19224965,https://www.mdpi.com/1424-8220/19/22/4965,"One of the main challenges in verifying robotic systems is its asynchronous interaction with an unstructured environment, observed by imperfect sensors. Autonomous robot systems usually require some language to support task-level control. This paper presents an effective approach to apply formal verification methods for that kind of language. A main contribution of this method is to avoid modeling the robotic system with a specific formalism. The approach translates the task-level control models into a Petri net (PN) based representation. This is used to define new methods to analyze some task properties such as liveness, deadlock-freeness and terminability. The approach has been applied to the Task Description Language (TDL) and it is illustrated by experiments. The final goal is to create new tools within the application development environment to include formal verification as part of the normal software development cycle. The TDL to PN translator uses the Petri Net Markup Language (PNML) as its file format. This format permits interoperability with other Petri net tools that can also be used to analyze the PNs.",autonomous robot system; formal verification; task description language; task-level programming,Formal Verification for Task Description Languages. A Petri Net Approach,x,,,,,,,,,NO,,
S230,1,Backward,journalArticle,2018,"Brugali, Davide; Hochgeschwender, Nico",International Journal of Semantic Computing,10.1142/S1793351X18400056,,"Control systems for autonomous robots are concurrent, distributed, embedded, real-time and data intensive software systems. A real-world robot control system is composed of tens of software components. For each component providing robotic functionality, tens of different implementations may be available. The difficult challenge in robotic system engineering consists in selecting a coherent set of components, which provide the functionality required by the application requirements, taking into account their mutual dependencies. This challenge is exacerbated by the fact that robotics system integrators and application developers are usually not specifically trained in software engineering. In various application domains, software product line (SPL) development has proven to be the most effective approach to face this kind of challenges. In a previous paper [D. Brugali and N. Hochgeschwender, Managing the functional variability of robotic perception systems, in First IEEE Int. Conf. Robotic Computing, 2017, pp. 277–283.] we have presented a model-based approach to the development of SPL for robotic perception systems, which integrates two modeling technologies developed by the authors: The HyperFlex toolkit [L. Gherardi and D. Brugali, Modeling and reusing robotic software architectures: The HyperFlex toolchain, in IEEE Int. Conf. Robotics and Automation, 2014, pp. 6414–6420.] and the Robot Perception Specification Language (RPSL) [N. Hochgeschwender, S. Schneider, H. Voos and G. K. Kraetzschmar, Declarative specification of robot perception architectures, in 4th Int. Conf. Simulation, Modeling, and Programming for Autonomous Robots, 2014, pp. 291–302.]. This paper extends our previous work by illustrating the entire development process of an SPL for robot perception systems with a real case study.",,Software Product Line Engineering for Robotic Perception Systems,x,,,,,,,,,NO,,
S231,1,Backward,conferencePaper,2008,"Ando, Noriaki; Suehiro, Takashi; Kotoku, Tetsuo","Simulation, Modeling, and Programming for Autonomous Robots",10.1007/978-3-540-89076-8_12,,"This paper proposes the RT-Middleware for robot system integration. “RT” means “Robot Technology” which is applied not only to industrial field but also to nonindustrial field such as human daily life support systems. We have studied modularization of RT elements and have developed software platform RT-Middleware which promotes application of RT in various field. Robotic system development methodology and our RT-Middleware concepts is discussed. The RT-Component which is a basic madular unit of RT-Middleware based system integration is derived from this discussion. A methodology of system development with RT-Components, and a framework to make component are shown.",Common Object Request Broker Architecture; Execution Context; Service Port; Software Platform; Subscription Type,A Software Platform for Component Based RT-System Development: OpenRTM-Aist,x,,,,,,,,,NO,,
S233,1,Backward,conferencePaper,1999,"Schlegel, C.; Worz, R.",Proceedings 1999 IEEE/RSJ International Conference on Intelligent Robots and Systems. Human and Environment Friendly Robots with High Intelligence and Emotional Quotients (Cat. No.99CH36289),10.1109/IROS.1999.811709,,"Presents the software framework SMARTSOFT to implement sensorimotor systems. SMARTSOFT not only contains software components to support a modularized implementation but also structural rules and templates. These ensure that the implementation of modules is conforming with an overall multilayer system architecture. Since the provided structures allow the exact specification of the external behavior of modules in terms of interfaces and dependencies, the interaction with a symbolic task execution layer is explicitly supported. SMARTSOFT significantly eases the implementation and integration of new modules into a complex sensorimotor system which for example provides the opportunity even to compare and reuse different modules on a mobile platform. SMARTSOFT has already proven its usefulness within the collaborative research center (SFB 527) ""Integration of Symbolic and Subsymbolic Information Processing in Adaptive Sensorimotor Systems"".",Adaptive systems; Computer architecture; Design methodology; Information processing; Middleware; Object oriented modeling; Object oriented programming; Robots; Software design; Software systems,The software framework SMARTSOFT for implementing sensorimotor systems,,,,x,,,,,,NO,,
S237,1,Backward,journalArticle,2015,"Agüero, Carlos E.; Koenig, Nate; Chen, Ian; Boyer, Hugo; Peters, Steven; Hsu, John; Gerkey, Brian; Paepcke, Steffi; Rivero, Jose L.; Manzo, Justin; Krotkov, Eric; Pratt, Gill",IEEE Transactions on Automation Science and Engineering,10.1109/TASE.2014.2368997,,"This paper presents the software framework established to facilitate cloud-hosted robot simulation. The framework addresses the challenges associated with conducting a task-oriented and real-time robot competition, the Defense Advanced Research Projects Agency (DARPA) Virtual Robotics Challenge (VRC), designed to mimic reality. The core of the framework is the Gazebo simulator, a platform to simulate robots, objects, and environments, as well as the enhancements made for the VRC to maintain a high fidelity simulation using a high degree of freedom and multisensor robot. The other major component used is the CloudSim tool, designed to enhance the automation of robotics simulation using existing cloud technologies. The results from the VRC and a discussion are also detailed in this work. Note to Practitioners - Advances in robot simulation, cloud hosted infrastructure, and web technology have made it possible to accurately and efficiently simulate complex robots and environments on remote servers while providing realistic data streams for human-in-the-loop robot control. This paper presents the software and hardware frameworks established to facilitate cloud-hosted robot simulation, and addresses the challenges associated with conducting a task-oriented robot competition designed to mimic reality. The competition that spurred this innovation was the VRC, a precursor to the DARPA Robotics Challenge, in which teams from around the world utilized custom human-robot interfaces and control code to solve disaster response-related tasks in simulation. Winners of the VRC received both funding and access to Atlas, a humanoid robot developed by Boston Dynamics. The Gazebo simulator, an open source and high fidelity robot simulator, was improved upon to met the needs of the VRC competition. Additionally, CloudSim was created to act as an interface between users and the cloud-hosted simulations. As a result of this work, we have achieved automated deployment of cloud resources for robotic simulations, near real-time simulation performance, and simulation accuracy that closely mimics real hardware. These tools have been released under open source licenses and are freely available, and can be used to help reduce robot and algorithm design and development time, and increase robot software robustness.",Cloud robotics; Computational modeling; Computer architecture; Computers; real-time robot simulation; Real-time systems; Robot sensing systems; robotic disaster response; Servers,Inside the Virtual Robotics Challenge: Simulating Real-Time Robotic Disaster Response,x,,,,,,,,,NO,,
S238,1,Backward,bookSection,2009,"Balakirsky, S.; Carpin, S.; Dimitoglou, G.; Balaguer, B.",Performance Evaluation and Benchmarking of Intelligent Systems,,,"From a theoretical perspective, one may easily argue (as we will in this chapter) that simulation accelerates the algorithm development cycle. However, in practice many in the robotics development community share the sentiment that “Simulation is doomed to succeed” (Brooks, R., Matarić, M., Robot Learning, Kluwer Academic Press, Hingham, MA, 1993, p. 209). This comes in large part from the fact that many simulation systems are brittle; they do a fair-to-good job of simulating the expected, and fail to simulate the unexpected. It is the authors’ belief that a simulation system is only as good as its models, and that deficiencies in these models lead to the majority of these failures. This chapter will attempt to address these deficiencies by presenting a systematic methodology with examples for the development of both simulated mobility models and sensor models for use with one of today’s leading simulation engines. Techniques for using simulation for algorithm development leading to real-robot implementation will be presented, as well as opportunities for involvement in international robotics competitions based on these techniques.",Automate Guide Vehicle; Global Position System; Global Position System Receiver; Robotic Platform; Simulation Platform,From Simulation to Real Robots with Predictable Results: Methods and Examples,,,,,x,,,,,NO,,
S239,1,Backward,bookSection,1993,"Brooks, Rodney A.; Mataric, Maja J.",Robot Learning,,,"The weaknesses of existing learning techniques, and the variety of knowledge necessary to make a robot perform efficiently in the real world, suggest that many concurrent, complementary, and redundant learning methods are necessary. We propose a division of learning styles into four main types based on the amount of built-in structure and the type of information being learned. Using this classification, we discuss the effectiveness of various learning methodologies when applied in a real robot context.",Mobile Robot; Physical Robot; Real Robot; Reinforcement Learning; Robot Learning,"Real Robots, Real Learning Problems",,,,x,x,,,,,NO,,
S24,1,Forward,conferencePaper,2017,"Li, Xinxin; Wang, Rui; Jiang, Yu; Guan, Yong; Li, Xiaojuan; Song, Xiaoyu",2017 22nd International Conference on Engineering of Complex Computer Systems (ICECCS),10.1109/ICECCS.2017.17,,"Robot control systems are complex cyber-physical systems which are difficult to develop. In this paper, we present a formal model-based automatic code synthesis method which can generate executable C++ code running on the world-wide used Robot Operating System (ROS). The internal interaction behaviors of robot systems are modeled as a network of timed automata. The safety requirements and specifications related to the model are formalized as CTL formulas and verified by Uppaal. We design a code synthesis method to generate the executable C++ code from the verified model. Compared to existing code generators based on timed automata, our method supports more complex structures and advanced features such as timer and committed location, and provides the important abstraction and mapping of ROS instructions, which realize the seamless connection between the generated code and ROS. A case study of grasping a cup by a robot with seven degrees of freedom manipulator is conducted and the generated codes are successfully applied to a ROS development environment.",Automata; Automatic code synthesis; C++ languages; Formal model; Generators; Manipulators; Robot system; Tools; Unified modeling language; Verification,Formal Modeling and Automatic Code Synthesis for Robot System,,,,,,,,,,,,
S240,1,Backward,journalArticle,2006,"Dunbabin, Matthew; Corke, Peter",Journal of Field Robotics,10.1002/rob.20132,,"This paper describes the development of a system to automate the digging cycle of an electric rope shovel, a machine which is widely used in open-pit mining. Achieving optimal digging performance requires path planning strategies to ensure dipper (bucket) filling, as well as methods to detect when to disengage the dipper from the bank. To this end, techniques to detect and avert dipper stall, and the online estimation of dipper “full-ness,” are described along with in-field experimental results using a one-seventh scale-model electric rope shovel. Over 100 autonomous excavation cycles, in a variety of digging conditions, resulted in cycle times consistent with a human operator, but with lower overall motor loading. © 2006 Wiley Periodicals, Inc.",,Autonomous excavation using a rope shovel,,,,x,,,,,,NO,,
S241,1,Backward,conferencePaper,2014,"Hsu, John M.; Peters, Steven C.","Simulation, Modeling, and Programming for Autonomous Robots",10.1007/978-3-319-11900-7_4,,"The DARPA Virtual Robotics Challenge (VRC) [1] was a cloud-based robotic simulation competition. Teams competed by writing control software for a humanoid robot to perform disaster response tasks in real-time simulation. Simulating the physics and sensors of a humanoid robot in real-time presented challenges related to the trade-off between simulation accuracy and computational time. The Projected Gauss-Seidel (PGS) iterative solver was chosen for its performance and robustness, but it lacks the accuracy and the fidelity required for reliable simulation of task-level behaviors. This paper presents the modeling decisions and algorithmic improvements made to the Open Dynamics Engine (ODE) physics solver that improved PGS accuracy and fidelity without sacrificing its real-time simulation performance in the VRC. These improvements allowed for stable simulation regardless of user input during the VRC, and supported reliable contact dynamics during VRC tasks without violating the near real-time requirement.",Contact Constraint; Defense Advance Research Project Agency; Humanoid Robot; Linear Complementarity Problem; Rigid Body,Extending Open Dynamics Engine for the DARPA Virtual Robotics Challenge,x,,,,,,,,,NO,,
S242,1,Backward,journalArticle,2008,"Kyriacou, T.; Nehmzow, U.; Iglesias, R.; Billings, S. A.",Robotics and Autonomous Systems,10.1016/j.robot.2008.01.005,,"Robot simulators are useful tools for developing robot behaviour. They provide a fast and efficient means for testing robot control code at the convenience of the office desk. In all but the simplest cases though, due to complexities of physical systems modelled in the simulator, there are considerable differences between the behaviour of the robot in the simulator and that in the real world environment. In this paper we present a novel method to create a robot simulator using real sensor data. Logged sensor data are used to construct a mathematically explicit model (in the form of a NARMAX polynomial) of the robot’s environment. The advantage of such a transparent model –in contrast to opaque modelling methods such as artificial neural networks –is that it can be analysed to characterise the modelled system, using established mathematical methods. In this paper we compare the behaviour of the robot running a particular task in both the simulator and the real-world using qualitative and quantitative measures including statistical methods to investigate the faithfulness of the simulator.",Quantitative assessment of computer simulations; Robot modelling; Robot simulation; System identification for simulation,Accurate robot simulation through system identification,x,,,,,,,,,NO,,
S243,1,Backward,journalArticle,2015,"Murphy, Robin R.",Journal of Field Robotics,10.1002/rob.21578,,The DARPA Robotics Challenge trials offer insights into how the robotics community approaches the design of intelligent systems and the role of supervision and simulation. A survey of the teams suggests that the design process may be hampered by the lack of a recognized canon of intelligent design principles and references and by the underrepresentation of artificial intelligence experts on the teams. The teams generally approached supervision and simulation as a fine-grained execution approval activity rather than as task rehearsal for the entire action sequence.,,Meta-analysis of Autonomy at the DARPA Robotics Challenge Trials,x,,,,,,,,,NO,,
S244,1,Backward,conferencePaper,2017,"Ore, John-Paul; Detweiler, Carrick; Elbaum, Sebastian",Proceedings of the 26th ACM SIGSOFT International Symposium on Software Testing and Analysis,10.1145/3092703.3092722,,"Systems interacting with the physical world operate on quantities measured with physical units. When unit operations in a program are inconsistent with the physical units' rules, those systems may suffer. Existing approaches to support unit consistency in programs can impose an unacceptable burden on developers. In this paper, we present a lightweight static analysis approach focused on physical unit inconsistency detection that requires no end-user program annotation, modification, or migration. It does so by capitalizing on existing shared libraries that handle standardized physical units, common in the cyber-physical domain, to link class attributes of shared libraries to physical units. Then, leveraging rules from dimensional analysis, the approach propagates and infers units in programs that use these shared libraries, and detects inconsistent unit usage. We implement and evaluate the approach in a tool, analyzing 213 open-source systems containing +900,000 LOC, finding inconsistencies in 11% of them, with an 87% true positive rate for a class of inconsistencies detected with high confidence. An initial survey of robot system developers finds that the unit inconsistencies detected by our tool are 'problematic', and we investigate how and when these inconsistencies occur.",dimensional analysis; physical units; program analysis; robotic systems; static analysis; type checking; unit consistency,Lightweight detection of physical unit inconsistencies without program annotations,x,,,,,,,,,NO,,
S245,1,Backward,conferencePaper,2017,"Ore, John-Paul; Detweiler, Carrick; Elbaum, Sebastian",Proceedings of the 26th ACM SIGSOFT International Symposium on Software Testing and Analysis,10.1145/3092703.3098219,,"Systems that interact with the physical world use software that represents and manipulates physical quantities. To operate correctly, these systems must obey the rules of how quantities with physical units can be combined, compared, and manipulated. Incorrectly manipulating physical quantities can cause faults that go undetected by the type system, likely manifesting later as incorrect behavior. Existing approaches for inconsistency detection require code annotation, physical unit libraries, or specialized programming languages. We introduce Phriky-Units, a static analysis tool that detects physical unit inconsistencies in robotic software without developer annotations. It does so by capitalizing on existing shared libraries that handle standardized physical units, common in the cyber-physical domain, to link class attributes of shared libraries to physical units. In this work, we describe how Phriky-Units works, provide details of the implementation, and explain how Phriky-Units can be used. Finally we present a summary of an empirical evaluation showing it has an 87% true positive rate for a class of inconsistencies we detect with high-confidence.",dimensional analysis; physical units; program analysis; robotic systems; static analysis; type checking; unit consistency,"Phriky-units: a lightweight, annotation-free physical unit inconsistency detection tool",x,,,,,,,,,NO,,
S246,1,Backward,conferencePaper,2013,"Rohmer, Eric; Singh, Surya P. N.; Freese, Marc",2013 IEEE/RSJ International Conference on Intelligent Robots and Systems,10.1109/IROS.2013.6696520,,"From exploring planets to cleaning homes, the reach and versatility of robotics is vast. The integration of actuation, sensing and control makes robotics systems powerful, but complicates their simulation. This paper introduces a versatile, scalable, yet powerful general-purpose robot simulation framework called V-REP. The paper discusses the utility of a portable and flexible simulation framework that allows for direct incorporation of various control techniques. This renders simulations and simulation models more accessible to a general-public, by reducing the simulation model deployment complexity. It also increases productivity by offering built-in and ready-to-use functionalities, as well as a multitude of programming approaches. This allows for a multitude of applications including rapid algorithm development, system verification, rapid prototyping, and deployment for cases such as safety/remote monitoring, training and education, hardware control, and factory automation simulation.",Computational modeling; Hardware; Joints; Load modeling; Robots; Sensors; Shape,V-REP: A versatile and scalable robot simulation framework,x,,,,,,,,,NO,,
S247,1,Backward,conferencePaper,2012,"Todorov, Emanuel; Erez, Tom; Tassa, Yuval",2012 IEEE/RSJ International Conference on Intelligent Robots and Systems,10.1109/IROS.2012.6386109,,"We describe a new physics engine tailored to model-based control. Multi-joint dynamics are represented in generalized coordinates and computed via recursive algorithms. Contact responses are computed via efficient new algorithms we have developed, based on the modern velocity-stepping approach which avoids the difficulties with spring-dampers. Models are specified using either a high-level C++ API or an intuitive XML file format. A built-in compiler transforms the user model into an optimized data structure used for runtime computation. The engine can compute both forward and inverse dynamics. The latter are well-defined even in the presence of contacts and equality constraints. The model can include tendon wrapping as well as actuator activation states (e.g. pneumatic cylinders or muscles). To facilitate optimal control applications and in particular sampling and finite differencing, the dynamics can be evaluated for different states and controls in parallel. Around 400,000 dynamics evaluations per second are possible on a 12-core machine, for a 3D homanoid with 18 dofs and 6 active contacts. We have already used the engine in a number of control applications. It will soon be made publicly available.",Computational modeling; Dynamics; Engines; Heuristic algorithms; Mathematical model; Optimization,MuJoCo: A physics engine for model-based control,x,,,,,,,,,NO,,
S248,1,Backward,journalArticle,2008,"Žlajpah, Leon",Mathematics and Computers in Simulation,10.1016/j.matcom.2008.02.017,,"Simulation has been recognized as an important research tool since the beginning of the 20th century. However, the “good times” for simulation started with the development of computers and now the simulation is a powerful visualization, planning, and strategic tool in different areas of research and development. The simulation has also a very important role in robotics. Different tools are used for the analysis of kinematics and dynamics of robotic manipulators, for off-line programming, to design different control algorithms, to design mechanical structure of robots, to design robotic cells and production lines, etc. In the paper an overview of the simulation in robotics is given and some topics like: how simulation makes things easier, advantages and backdraws of the simulation in robotics, virtual and real world, are pointed out. The scope of the lecture is the role of the simulation, simulation in different fields of robotics, integrated environment for dynamic simulation of robot manipulators, the simulation of robot manipulators in MATLAB/Simulink (a case study), and simulation and visualization of robot systems using general dynamic engines and graphic languages.",Modelling; Multi-body dynamics; Robot systems; Simulation; Visualization,Simulation in robotics,x,,,,,,,,,NO,,
S249,1,Backward,conferencePaper,2015,"Xiang, Jian; Knight, John; Sullivan, Kevin","Computer Safety, Reliability, and Security",10.1007/978-3-319-24255-2_34,,"Software systems sense and affect real world objects and processes in order to realize important real-world systems. For these systems to function correctly, such software should obey constraints inherited from the real world. Typically, neither important characteristics of real-world entities nor the relationships between such entities and their machine-world representations are specified explicitly in code, and important opportunities for detecting errors due to mismatches are lost. To address this problem we introduce real-world types to document in software both relevant characteristics of real-world entities and the relationships between real-world entities and machine-level representations. These constructs support specification and automated static detection of such mismatches in programs written in ordinary languages. We present a prototype implementation of our approach for Java and case studies in which previously unrecognized real-world type errors in several real systems were detected.",Dependability; Real-world types; Static analysis,Real-World Types and Their Application,x,,,,,,,,,NO,,
S25,1,Forward,conferencePaper,2020,"Kempa, Brian; Zhang, Pei; Jones, Phillip H.; Zambreno, Joseph; Rozier, Kristin Yvonne",Formal Modeling and Analysis of Timed Systems,10.1007/978-3-030-57628-8_12,,"Robonaut2 (R2) is a humanoid robot onboard the International Space Station (ISS), performing specialized tasks in collaboration with astronauts. After deployment, R2 developed an unexpected emergent behavior. R2’s inability to distinguish between knee-joint faults (e.g., due to sensor drift versus violated environmental assumptions) began triggering safety-preserving freezes-in-place in the confined space of the ISS, preventing further motion until a ground-control operator determines the root-cause and initiates proper corrective action. Runtime verification (RV) algorithms can efficiently disambiguate the temporal signatures of different faults in real-time. However, no previous RV engine can operate within the limited available resources and specialized platform constraints of R2’s hardware architecture. An attempt to deploy the only runtime verification engine designed for embedded flight systems, R2U2, failed due to resource constraints. We present a significant redesign of the core R2U2 algorithms to adapt to severe resource and certification constraints and prove their correctness. We further define an optimization enabled by our new algorithms and implement the new version of R2U2. We encode specifications describing real-life faults occurring onboard Robonaut2 using Mission-time Linear Temporal Logic (MLTL) and detail our process of specification debugging, validation, and refinement. We deployed this new version of R2U2 on Robonaut2, demonstrating successful real-time fault disambiguation and mitigation triggering of R2’s knee-joint faults without false positives.",MLTL; Online runtime verification; R2U2; Steam-based runtime verification; Temporal logic specification,Embedding Online Runtime Verification for Fault Disambiguation on Robonaut2,x,,,,,,,,,NO,,
S250,1,Backward,conferencePaper,2014,"Tedrake, R.; Fallon, M.; Karumanchi, S.; Kuindersma, S.; Antone, M.; Schneider, T.; Howard, T.; Walter, M.; Dai, H.; Deits, R.; Fleder, M.; Fourie, D.; Hammoud, R.; Hemachandra, S.; Ilardi, P.; Perez-D'Arpino, C.; Pillai, S.; Valenzuela, A.; Cantu, C.; Dolan, C.; Evans, I.; Jorgensen, S.; Kristeller, J.; Shah, J. A.; Iagnemma, K.; Teller, S.",2014 IEEE International Conference on Robotics and Automation (ICRA),10.1109/ICRA.2014.6907140,,,,A summary of team MIT's approach to the virtual robotics challenge,x,,,,,,,,,NO,,
S251,1,Backward,journalArticle,2019,"Aldrich, Jonathan; Garlan, David; Kaestner, Christian; Le Goues, Claire; Mohseni-Kabir, Anahita; Ruchkin, Ivan; Samuel, Selva; Schmerl, Bradley; Timperley, Christopher Steven; Veloso, Manuela; Voysey, Ian; Biswas, Joydeep; Guha, Arjun; Holtz, Jarrett; Camara, Javier; Jamshidi, Pooyan",IEEE Software,10.1109/MS.2018.2885058,,"We developed model-based adaptation, an approach that leverages models of software and its environment to enable automated adaptation. The goal of our approach is to build long-lasting software systems that can effectively adapt to changes in their environment.",Adaptation models; Biological system modeling; Robot sensing systems; Robots; Software development; Task analysis,Model-Based Adaptation for Robotics Software,,,,,,,,,,,,
S252,1,Backward,conferencePaper,2014,"Anaya, Ivan Dario Paez; Simko, Viliam; Bourcier, Johann; Plouzeau, Noël; Jézéquel, Jean-Marc",Proceedings of the 9th International Symposium on Software Engineering for Adaptive and Self-Managing Systems,10.1145/2593929.2593941,,"Engineering self-adaptive software in unpredictable environments such as pervasive systems, where network's ability, remaining battery power and environmental conditions may vary over the lifetime of the system is a very challenging task. Many current software engineering approaches leverage run-time architectural models to ease the design of the autonomic control loop of these self-adaptive systems. While these approaches perform well in reacting to various evolutions of the runtime environment, implementations based on reactive paradigms have a limited ability to anticipate problems, leading to transient unavailability of the system, useless costly adaptations, or resources waste. In this paper, we follow a proactive self-adaptation approach that aims at overcoming the limitation of reactive approaches. Based on predictive analysis of internal and external context information, our approach regulates new architecture reconfigurations and deploys them using models at runtime. We have evaluated our approach on a case study where we combined hourly temperature readings provided by National Climatic Data Center (NCDC) with fire reports from Moderate Resolution Imaging Spectroradiometer (MODIS) and simulated the behavior of multiple systems. The results confirm that our proactive approach outperforms a typical reactive system in scenarios with seasonal behavior.",pervasive systems; predictive analytics; proactive adaptation; Self-adaptation,A prediction-driven adaptation approach for self-adaptive sensor networks,x,,,,,,,,,NO,,
S253,1,Backward,conferencePaper,2004,"Andova, Suzana; Hermanns, Holger; Katoen, Joost-Pieter",Formal Modeling and Analysis of Timed Systems,10.1007/978-3-540-40903-8_8,,"This paper presents a model-checking approach for analyzing discrete-time Markov reward models. For this purpose, the temporal logic probabilistic CTL is extended with reward constraints. This allows to formulate complex measures – involving expected as well as accumulated rewards – in a precise and succinct way. Algorithms to efficiently analyze such formulae are introduced. The approach is illustrated by model-checking a probabilistic cost model of the IPv4 zeroconf protocol for distributed address assignment in ad-hoc networks.",Atomic Proposition; Model Check; Path Graph; Reward Structure; Strongly Connect Component,Discrete-Time Rewards Model-Checked,,,,x,,,,,,NO,,
S254,1,Backward,journalArticle,2017,"Biedenkapp, Andre; Lindauer, Marius; Eggensperger, Katharina; Hutter, Frank; Fawcett, Chris; Hoos, Holger",Proceedings of the AAAI Conference on Artificial Intelligence,,,,Performance Prediction,Efficient Parameter Importance Analysis via Ablation with Surrogates,,,,,x,,,,,NO,,
S255,1,Backward,conferencePaper,2006,"Becker, Steffen; Grunske, Lars; Mirandola, Raffaela; Overhage, Sven",Architecting Systems with Trustworthy Components,10.1007/11786160_10,,"Performance predictions of component assemblies and the ability of obtaining system-level performance properties from these predictions are a crucial success factor when building trustworthy component-based systems. In order to achieve this goal, a collection of methods and tools to capture and analyze the performance of software systems has been developed. These methods and tools aim at helping software engineers by providing them with the capability to understand design trade-offs, optimize their design by identifying performance inhibitors, or predict a system’s performance within a specified deployment environment. In this paper, we analyze the applicability of various performance prediction methods for the development of component-based systems and contrast their inherent strengths and weaknesses in different engineering problem scenarios. In so doing, we establish a basis to select an appropriate prediction method and to provide recommendations for future research activities, which could significantly improve the performance prediction of component-based systems.",External Service; Performance Prediction; Performance Prediction Model; Software Component; Software Development Process,Performance Prediction of Component-Based Systems,,,,x,,,,,,NO,,
S256,1,Backward,journalArticle,2004,"Balsamo, S.; Di Marco, A.; Inverardi, P.; Simeoni, M.",IEEE Transactions on Software Engineering,10.1109/TSE.2004.9,,"Over the last decade, a lot of research has been directed toward integrating performance analysis into the software development process. Traditional software development methods focus on software correctness, introducing performance issues later in the development process. This approach does not take into account the fact that performance problems may require considerable changes in design, for example, at the software architecture level, or even worse at the requirement analysis level. Several approaches were proposed in order to address early software performance analysis. Although some of them have been successfully applied, we are still far from seeing performance analysis integrated into ordinary software development. In this paper, we present a comprehensive review of recent research in the field of model-based performance prediction at software development time in order to assess the maturity of the field and point out promising research directions.",Automation; Availability; integrated environments.; Performance analysis; performance modeling and prediction; Predictive models; Programming; Runtime; Software architecture; Software performance; Software systems; Software verification; System software,Model-based performance prediction in software development: a survey,,,,x,,,,,,NO,,
S257,1,Backward,conferencePaper,2015,"Braberman, Victor; D'Ippolito, Nicolas; Kramer, Jeff; Sykes, Daniel; Uchitel, Sebastian",Proceedings of the 1st International Workshop on Control Theory for Software Engineering,10.1145/2804337.2804339,,"An architectural approach to self-adaptive systems involves runtime change of system configuration (i.e., the system's components, their bindings and operational parameters) and behaviour update (i.e., component orchestration). Thus, dynamic reconfiguration and discrete event control theory are at the heart of architectural adaptation. Although controlling configuration and behaviour at runtime has been discussed and applied to architectural adaptation, architectures for self-adaptive systems often compound these two aspects reducing the potential for adaptability. In this paper we propose a reference architecture that allows for coordinated yet transparent and independent adaptation of system configuration and behaviour.",Self-adaptive Systems; Software Architecture,MORPH: a reference architecture for configuration and behaviour self-adaptation,x,,,,,,,,,NO,,
S258,1,Backward,journalArticle,2012,"Calinescu, Radu; Ghezzi, Carlo; Kwiatkowska, Marta; Mirandola, Raffaela",Communications of the ACM,10.1145/2330667.2330686,,Continually verify self-adaptation decisions taken by critical software in response to changes in the operating environment.,,Self-adaptive software needs quantitative verification at runtime,x,,,,,,,,,NO,,
S259,1,Backward,journalArticle,2011,"Calinescu, Radu; Grunske, Lars; Kwiatkowska, Marta; Mirandola, Raffaela; Tamburrelli, Giordano",IEEE Transactions on Software Engineering,10.1109/TSE.2010.92,,"Service-based systems that are dynamically composed at runtime to provide complex, adaptive functionality are currently one of the main development paradigms in software engineering. However, the Quality of Service (QoS) delivered by these systems remains an important concern, and needs to be managed in an equally adaptive and predictable way. To address this need, we introduce a novel, tool-supported framework for the development of adaptive service-based systems called QoSMOS (QoS Management and Optimization of Service-based systems). QoSMOS can be used to develop service-based systems that achieve their QoS requirements through dynamically adapting to changes in the system state, environment, and workload. QoSMOS service-based systems translate high-level QoS requirements specified by their administrators into probabilistic temporal logic formulae, which are then formally and automatically analyzed to identify and enforce optimal system configurations. The QoSMOS self-adaptation mechanism can handle reliability and performance-related QoS requirements, and can be integrated into newly developed solutions or legacy systems. The effectiveness and scalability of the approach are validated using simulations and a set of experiments based on an implementation of an adaptive service-based system for remote medical assistance.",adaptive systems.; Analytical models; Markov processes; Optimization; Probabilistic logic; QoS management; QoS optimization; Quality of service; Scattering; Service-oriented software engineering; Unified modeling language,Dynamic QoS Management and Optimization in Service-Based Systems,x,,,,,,,,,NO,,
S26,1,Forward,conferencePaper,2019,"Guerrero-Higueras, Ángel Manuel; Rodríguez-Lera, Francisco J.; Martín-Rico, Francisco; Balsa-Comerón, Jesús; Matellán-Olivera, Vicente",Advances in Physical Agents,10.1007/978-3-319-99885-5_17,,"Service robots sometimes behave in unexpected ways and may put economic interests or human safety in risk. This can be accepted in research environments, but it is not going to be tolerated in everyday use of robots. In addition, regulations for the deployment of autonomous robots (from home assistants to autonomous cars) are increasing. These regulations will require at some point systems that could be audited and that implement facilities for forensic analysis. In this paper, we propose that these systems have to be integrated in the development frameworks of robotics software as a mandatory component. We present two design alternatives for the de facto standard for service robotics (ROS: Robotic Operating System) to enforce safety and security rules based on a customizable black-box-like component.",Accountability; Autonomous; Black-box; Forensic; Safety; Security,Accountability in Mobile Service Robots,x,,,,,,,,,NO,,
S260,1,Backward,conferencePaper,2015,"Cámara, Javier; Garlan, David; Schmerl, Bradley; Pandey, Ashutosh",Proceedings of the 30th Annual ACM Symposium on Applied Computing,10.1145/2695664.2695680,,"Architecture-based approaches to self-adaptation rely on architectural descriptions to reason about the best way of adapting the structure and behavior of software-intensive systems at runtime, either by choosing among a set of predefined adaptation strategies, or by automatically generating adaptation plans. Predefined strategy selection has a low computational overhead and facilitates dealing with uncertainty (e.g., by accounting explicitly for contingencies derived from unexpected outcomes of actions), but requires additional designer effort regarding the specification of strategies and is unable to guarantee optimal solutions. In contrast, runtime plan generation is able to explore a richer solution space and provide optimal solutions in some cases, but is more limited when dealing with uncertainty, and in-curs higher computational overheads. In this paper, we propose an approach to optimal adaptation plan generation for architecture-based self-adaptation via model checking of stochastic multiplayer games (SMGs). Our approach enables: (i) trade-off analysis among different qualities by means of utility functions and preferences, and (ii) explicit modeling of uncertainty in the outcome of adaptation actions and the behavior of the environment. Basing on the concepts embodied in the Rainbow framework for self-adaptation, we illustrate our approach in Znn.com, a case study that reproduces the infrastructure for a news website.",planning; probabilistic model checking; self-adaptation,Optimal planning for architecture-based self-adaptation via model checking of stochastic games,x,,,,,,,,,NO,,
S261,1,Backward,journalArticle,2016,"Cámara, Javier; Lopes, Antónia; Garlan, David; Schmerl, Bradley",Science of Computer Programming,10.1016/j.scico.2015.12.006,,"Self-adaptive systems have the ability to adapt their behavior to dynamic operating conditions. In reaction to changes in the environment, these systems determine the appropriate corrective actions based in part on information about which action will have the best impact on the system. Existing models used to describe the impact of adaptations are either unable to capture the underlying uncertainty and variability of such dynamic environments, or are not compositional and described at a level of abstraction too low to scale in terms of specification effort required for non-trivial systems. In this paper, we address these shortcomings by describing an approach to the specification of impact models based on architectural system descriptions, which at the same time allows us to represent both variability and uncertainty in the outcome of adaptations, hence improving the selection of the best corrective action. The core of our approach is a language equipped with a formal semantics defined in terms of Discrete Time Markov Chains that enables us to describe both the impact of adaptation tactics, as well as the assumptions about the environment. To validate our approach, we show how employing our language can improve the accuracy of predictions used for decision-making in the Rainbow framework for architecture-based self-adaptation.",Environment model; Impact model; Self-adaptive systems; Uncertainty; Variability,Adaptation impact and environment models for architecture-based self-adaptive systems,x,,,,,,,,,NO,,
S262,1,Backward,conferencePaper,2015,"Cámara, Javier; Moreno, Gabriel; Garlan, David",2015 IEEE/ACM 10th International Symposium on Software Engineering for Adaptive and Self-Managing Systems,10.1109/SEAMS.2015.14,,"Self-adaptive systems overcome many of the limitations of human supervision in complex software-intensive systems by endowing them with the ability to automatically adapt their structure and behavior in the presence of runtime changes. However, adaptation in some classes of systems (e.g., Safety-critical) can benefit by receiving information from humans (e.g., Acting as sophisticated sensors, decision-makers), or by involving them as system-level effectors to execute adaptations (e.g., When automation is not possible, or as a fallback mechanism). However, human participants are influenced by factors external to the system (e.g., Training level, fatigue) that affect the likelihood of success when they perform a task, its duration, or even if they are willing to perform it in the first place. Without careful consideration of these factors, it is unclear how to decide when to involve humans in adaptation, and in which way. In this paper, we investigate how the explicit modeling of human participants can provide a better insight into the trade-offs of involving humans in adaptation. We contribute a formal framework to reason about human involvement in self-adaptation, focusing on the role of human participants as actors (i.e., Effectors) during the execution stage of adaptation. The approach consists of: (i) a language to express adaptation models that capture factors affecting human behavior and its interactions with the system, and (ii) a formalization of these adaptation models as stochastic multiplayer games (SMGs) that can be used to analyze human-system-environment interactions. We illustrate our approach in an adaptive industrial middleware used to monitor and manage sensor networks in renewable energy production plants.",Adaptation models; Architecture-based self-adaptation; Context; Databases; Human-in-the-loop; Performance evaluation; Probabilistic model checking; Sensors; Servers; Stochastic Multiplayer Games; Uncertainty,Reasoning about Human Participation in Self-Adaptive Systems,x,,,,,,,,,NO,,
S263,1,Backward,journalArticle,2016,"Cámara, Javier; Moreno, Gabriel A.; Garlan, David; Schmerl, Bradley",ACM Transactions on Autonomous and Adaptive Systems,10.1145/2774222,,"Self-adaptive systems must decide which adaptations to apply and when. In reactive approaches, adaptations are chosen and executed after some issue in the system has been detected (e.g., unforeseen attacks or failures). In proactive approaches, predictions are used to prepare the system for some future event (e.g., traffic spikes during holidays). In both cases, the choice of adaptation is based on the estimated impact it will have on the system. Current decision-making approaches assume that the impact will be instantaneous, whereas it is common that adaptations take time to produce their impact. Ignoring this latency is problematic because adaptations may not achieve their effect in time for a predicted event. Furthermore, lower impact but quicker adaptations may be ignored altogether, even if over time the accrued impact is actually higher. In this article, we introduce a novel approach to choosing adaptations that considers these latencies. To show how this improves adaptation decisions, we use a two-pronged approach: (i) model checking of Stochastic Multiplayer Games (SMGs) enables us to understand best- and worst-case scenarios of optimal latency-aware and non-latency-aware adaptation without the need to develop specific adaptation algorithms. However, since SMGs do not provide an algorithm to make choices at runtime, we propose a (ii) latency-aware adaptation algorithm to make decisions at runtime. Simulations are used to explore more detailed adaptation behavior and to check if the performance of the algorithm falls within the bounds predicted by SMGs. Our results show that latency awareness improves adaptation outcomes and also allows a larger set of adaptations to be exploited.",Latency; latency-aware; Proactive adaptation; stochastic multiplayer games,Analyzing Latency-Aware Self-Adaptation Using Stochastic Games and Simulations,x,,,,,,,,,NO,,
S264,1,Backward,journalArticle,2012,"Cheng, Shang-Wen; Garlan, David",Journal of Systems and Software,10.1016/j.jss.2012.02.060,,"Requirements for high availability in computing systems today demand that systems be self-adaptive to maintain expected qualities-of-service in the presence of system faults, variable environmental conditions, and changing user requirements. Autonomic computing tackles the challenge of automating tasks that humans would otherwise have to perform to achieve this goal. However, existing approaches to autonomic computing lack the ability to capture routine human repair tasks in a way that takes into account the business context humans use in selecting an appropriate form of adaptation, while dealing with timing delays and uncertainties in outcome of repair actions. In this article, we present Stitch, a language for representing repair strategies within the context of an architecture-based self-adaptation framework. Stitch supports the explicit representation of repair decision trees together with the ability to express business objectives, allowing a self-adaptive system to select a strategy that has optimal utility in a given context, even in the presence of potential timing delays and outcome uncertainty.",Rainbow; Self-adaptation; Strategy; Tactic; Uncertainty; Utility,Stitch: A language for architecture-based self-adaptation,x,,,,,,,,,NO,,
S265,1,Backward,conferencePaper,2011,"Ehlers, Jens; van Hoorn, Andre; Waller, Jan; Hasselbring, Wilhelm",Proceedings of the 8th ACM international conference on Autonomic computing,10.1145/1998582.1998628,,"Autonomic computing components and services require continuous monitoring capabilities for collecting and analyzing data of runtime behavior. Particularly for software systems, a trade-off between monitoring coverage and performance overhead is necessary. In this paper, we propose an approach for localizing performance anomalies in software systems employing self-adaptive monitoring. Time series analysis of operation response times, incorporating architectural information about the diagnosed software system, is employed for anomaly localization. Comprising quality of service data, such as response times, resource utilization, and anomaly scores, OCL-based monitoring rules specify the adaptive monitoring coverage. This enables to zoom into a system's or component's internal realization in order to locate root causes of software failures and to prevent failures by early fault determination and correction. The approach has been implemented as part of the Kieker monitoring and analysis framework. The evaluation presented in this paper focuses on monitoring overhead, response time forecasts, and the anomaly detection process.",adaptive monitoring; anomaly detection; failure diagnosis,Self-adaptive software system monitoring for performance anomaly localization,x,,,,,,,,,NO,,
S266,1,Backward,conferencePaper,2010,"Elkhodary, Ahmed; Esfahani, Naeem; Malek, Sam",Proceedings of the eighteenth ACM SIGSOFT international symposium on Foundations of software engineering,10.1145/1882291.1882296,,"Self-adaptive software systems are capable of adjusting their behavior at run-time to achieve certain objectives. Such systems typically employ analytical models specified at design-time to assess their characteristics at run-time and make the appropriate adaptation decisions. However, prior to system's deployment, engineers often cannot foresee the changes in the environment, requirements, and system's operational profile. Therefore, any analytical model used in this setting relies on underlying assumptions that if not held at run-time make the analysis and hence the adaptation decisions inaccurate. We present and evaluate FeatUre-oriented Self-adaptatION (FUSION) framework, which aims to solve this problem by learning the impact of adaptation decisions on the system's goals. The framework (1) allows for automatic online fine-tuning of the adaptation logic to unanticipated conditions, (2) reduces the upfront effort required for building such systems, and (3) makes the run-time analysis of such systems very efficient.",feature-orientation; learning; qos analysis; self-adaptation,FUSION: a framework for engineering self-tuning self-adaptive software systems,x,,,,,,,,,NO,,
S267,1,Backward,conferencePaper,2009,"Epifani, Ilenia; Ghezzi, Carlo; Mirandola, Raffaela; Tamburrelli, Giordano",2009 IEEE 31st International Conference on Software Engineering,10.1109/ICSE.2009.5070513,,"Models can help software engineers to reason about design-time decisions before implementing a system. This paper focuses on models that deal with non-functional properties, such as reliability and performance. To build such models, one must rely on numerical estimates of various parameters provided by domain experts or extracted by other similar systems. Unfortunately, estimates are seldom correct. In addition, in dynamic environments, the value of parameters may change over time. We discuss an approach that addresses these issues by keeping models alive at run time and feeding a Bayesian estimator with data collected from the running system, which produces updated parameters. The updated model provides an increasingly better representation of the system. By analyzing the updated model at run time, it is possible to detect or predict if a desired property is, or will be, violated by the running implementation. Requirement violations may trigger automatic reconfigurations or recovery actions aimed at guaranteeing the desired goals. We illustrate a working framework supporting our methodology and apply it to an example in which a Web service orchestrated composition is modeled through a discrete time Markov chain. Numerical simulations show the effectiveness of the approach.",Adaptation model; Bayesian methods; Data mining; Design engineering; Numerical simulation; Parameter estimation; Predictive models; Reliability engineering; Runtime; Web services,Model evolution by run-time parameter adaptation,x,,,,,,,,,NO,,
S268,1,Backward,journalArticle,2013,"Esfahani, Naeem; Elkhodary, Ahmed; Malek, Sam",IEEE Transactions on Software Engineering,10.1109/TSE.2013.37,,"Self-adaptive software systems are capable of adjusting their behavior at runtime to achieve certain functional or quality-of-service goals. Often a representation that reflects the internal structure of the managed system is used to reason about its characteristics and make the appropriate adaptation decisions. However, runtime conditions can radically change the internal structure in ways that were not accounted for during their design. As a result, unanticipated changes at runtime that violate the assumptions made about the internal structure of the system could degrade the accuracy of the adaptation decisions. We present an approach for engineering self-adaptive software systems that brings about two innovations: 1) a feature-oriented approach for representing engineers' knowledge of adaptation choices that are deemed practical, and 2) an online learning-based approach for assessing and reasoning about adaptation decisions that does not require an explicit representation of the internal structure of the managed software system. Engineers' knowledge, represented in feature-models, adds structure to learning, which in turn makes online learning feasible. We present an empirical evaluation of the framework using a real-world self-adaptive software system. Results demonstrate the framework's ability to accurately learn the changing dynamics of the system while achieving efficient analysis and adaptation.",Adaptation models; Authentication; autonomic computing; feature-orientation; machine learning; Measurement; Quality of service; Runtime; Self-adaptive software; Software systems,A Learning-Based Framework for Engineering Feature-Oriented Self-Adaptive Software Systems,x,,,,,,,,,NO,,
S269,1,Backward,conferencePaper,2015,"Filieri, Antonio; Hoffmann, Henry; Maggio, Martina",Proceedings of the 2015 10th Joint Meeting on Foundations of Software Engineering,10.1145/2786805.2786833,,"While software is becoming more complex everyday, the requirements on its behavior are not getting any easier to satisfy. An application should offer a certain quality of service, adapt to the current environmental conditions and withstand runtime variations that were simply unpredictable during the design phase. To tackle this complexity, control theory has been proposed as a technique for managing software's dynamic behavior, obviating the need for human intervention. Control-theoretical solutions, however, are either tailored for the specific application or do not handle the complexity of multiple interacting components and multiple goals. In this paper, we develop an automated control synthesis methodology that takes, as input, the configurable software components (or knobs) and the goals to be achieved. Our approach automatically constructs a control system that manages the specified knobs and guarantees the goals are met. These claims are backed up by experimental studies on three different software applications, where we show how the proposed automated approach handles the complexity of multiple knobs and objectives.",Adaptive software; control theory; dynamic systems; non-functional requirements; run-time verification,Automated multi-objective control for self-adaptive software design,x,,,,,,,,,NO,,
S27,1,Forward,conferencePaper,2019,"Pichler, Marc; Dieber, Bernhard; Pinzger, Martin",2019 Third IEEE International Conference on Robotic Computing (IRC),10.1109/IRC.2019.00020,,"Since its beginnings ten years ago, the Robot Operating System (ROS) has created a huge community of developers and researchers and is now the most widespread open-source framework for robotics development. It is used in research, prototyping but also in commercial products and supports a wide range of robotic platforms, sensors and highlevel data processing functions. While for a research platform, quality of the software developed with it is typically of lower importance, ROS is gradually moving towards industrial applications making software quality a premier topic. In this paper, we want to gain insights on how ROS is used in practice, how high the quality of the ROS packages and applications is, and where potential pitfalls in the use of ROS lie. To achieve this, we have analyzed several thousands of open-source ROS packages found on GitHub and Bitbucket for their quality and their interdependencies. Our results include packages on the rosdistro index and, more importantly, packages that are not. From our results we show common issues in ROS-applications, quality implications, and also which packages of what quality are particularly popular.",dependency analysis; Indexes; Open source software; repository quality; ros; Service robots; software quality; Software quality; Tools,Can I Depend on you? Mapping the Dependency and Quality Landscape of ROS Packages,,x,,,,,,,,NO,,
S270,1,Backward,conferencePaper,2015,"Filieri, Antonio; Hoffmann, Henry; Maggio, Martina",Proceedings of the 2015 10th Joint Meeting on Foundations of Software Engineering,10.1145/2786805.2786833,,"While software is becoming more complex everyday, the requirements on its behavior are not getting any easier to satisfy. An application should offer a certain quality of service, adapt to the current environmental conditions and withstand runtime variations that were simply unpredictable during the design phase. To tackle this complexity, control theory has been proposed as a technique for managing software's dynamic behavior, obviating the need for human intervention. Control-theoretical solutions, however, are either tailored for the specific application or do not handle the complexity of multiple interacting components and multiple goals. In this paper, we develop an automated control synthesis methodology that takes, as input, the configurable software components (or knobs) and the goals to be achieved. Our approach automatically constructs a control system that manages the specified knobs and guarantees the goals are met. These claims are backed up by experimental studies on three different software applications, where we show how the proposed automated approach handles the complexity of multiple knobs and objectives.",Adaptive software; control theory; dynamic systems; non-functional requirements; run-time verification,Automated multi-objective control for self-adaptive software design,x,,,,,,,,,NO,,
S271,1,Backward,conferencePaper,2015,"Filieri, Antonio; Hoffmann, Henry; Maggio, Martina",Proceedings of the 2015 10th Joint Meeting on Foundations of Software Engineering,10.1145/2786805.2786833,,"While software is becoming more complex everyday, the requirements on its behavior are not getting any easier to satisfy. An application should offer a certain quality of service, adapt to the current environmental conditions and withstand runtime variations that were simply unpredictable during the design phase. To tackle this complexity, control theory has been proposed as a technique for managing software's dynamic behavior, obviating the need for human intervention. Control-theoretical solutions, however, are either tailored for the specific application or do not handle the complexity of multiple interacting components and multiple goals. In this paper, we develop an automated control synthesis methodology that takes, as input, the configurable software components (or knobs) and the goals to be achieved. Our approach automatically constructs a control system that manages the specified knobs and guarantees the goals are met. These claims are backed up by experimental studies on three different software applications, where we show how the proposed automated approach handles the complexity of multiple knobs and objectives.",Adaptive software; control theory; dynamic systems; non-functional requirements; run-time verification,Automated multi-objective control for self-adaptive software design,x,,,,,,,,,NO,,
S272,1,Backward,conferencePaper,2015,"Filieri, Antonio; Hoffmann, Henry; Maggio, Martina",Proceedings of the 2015 10th Joint Meeting on Foundations of Software Engineering,10.1145/2786805.2786833,,"While software is becoming more complex everyday, the requirements on its behavior are not getting any easier to satisfy. An application should offer a certain quality of service, adapt to the current environmental conditions and withstand runtime variations that were simply unpredictable during the design phase. To tackle this complexity, control theory has been proposed as a technique for managing software's dynamic behavior, obviating the need for human intervention. Control-theoretical solutions, however, are either tailored for the specific application or do not handle the complexity of multiple interacting components and multiple goals. In this paper, we develop an automated control synthesis methodology that takes, as input, the configurable software components (or knobs) and the goals to be achieved. Our approach automatically constructs a control system that manages the specified knobs and guarantees the goals are met. These claims are backed up by experimental studies on three different software applications, where we show how the proposed automated approach handles the complexity of multiple knobs and objectives.",Adaptive software; control theory; dynamic systems; non-functional requirements; run-time verification,Automated multi-objective control for self-adaptive software design,x,,,,,,,,,NO,,
S273,1,Backward,journalArticle,2017,"Filieri, Antonio; Maggio, Martina; Angelopoulos, Konstantinos; D’ippolito, Nicolás; Gerostathopoulos, Ilias; Hempel, Andreas Berndt; Hoffmann, Henry; Jamshidi, Pooyan; Kalyvianaki, Evangelia; Klein, Cristian; Krikava, Filip; Misailovic, Sasa; Papadopoulos, Alessandro V.; Ray, Suprio; Sharifloo, Amir M.; Shevtsov, Stepan; Ujma, Mateusz; Vogel, Thomas",ACM Transactions on Autonomous and Adaptive Systems,10.1145/3024188,,"The pervasiveness and growing complexity of software systems are challenging software engineering to design systems that can adapt their behavior to withstand unpredictable, uncertain, and continuously changing execution environments. Control theoretical adaptation mechanisms have received growing interest from the software engineering community in the last few years for their mathematical grounding, allowing formal guarantees on the behavior of the controlled systems. However, most of these mechanisms are tailored to specific applications and can hardly be generalized into broadly applicable software design and development processes. This article discusses a reference control design process, from goal identification to the verification and validation of the controlled system. A taxonomy of the main control strategies is introduced, analyzing their applicability to software adaptation for both functional and nonfunctional goals. A brief extract on how to deal with uncertainty complements the discussion. Finally, the article highlights a set of open challenges, both for the software engineering and the control theory research communities.",control theory; formal methods; non-functional properties; Self-adaptive software,Control Strategies for Self-Adaptive Software Systems,x,,,,,,,,,NO,,
S274,1,Backward,journalArticle,2004,"Garlan, D.; Cheng, S.-W.; Huang, A.-C.; Schmerl, B.; Steenkiste, P.",Computer,10.1109/MC.2004.175,,"While attractive in principle, architecture-based self-adaptation raises a number of research and engineering challenges. First, the ability to handle a wide variety of systems must be addressed. Second, the need to reduce costs in adding external control to a system must be addressed. Our rainbow framework attempts to address both problems. By adopting an architecture-based approach, it provides reusable infrastructure together with mechanisms for specializing that infrastructure to the needs of specific systems. The specialization mechanisms let the developer of self-adaptation capabilities choose what aspects of the system to model and monitor, what conditions should trigger adaptation, and how to adapt the system.",Computer architecture; Computer interfaces; Computer languages; Control systems; Costs; Environmental management; Monitoring; Protocols; Software architecture; Software systems,Rainbow: architecture-based self-adaptation with reusable infrastructure,,,,x,,,,,,NO,,
S275,1,Backward,conferencePaper,2007,"Gomaa, Hassan; Hussein, Mohamed",International Workshop on Software Engineering for Adaptive and Self-Managing Systems (SEAMS '07),10.1109/SEAMS.2007.13,,"This paper describes a modeling approach to software design and adaptation, in particular the design of evolutionary and dynamically reconfigurable software architectures. The different versions of an evolutionary system are considered a software product line, with each version of the system a product line member. After implementation, the model co-exists with the system and evolves with it. The software architecture is built out of architectural patterns. For each software architectural pattern, there is a corresponding software reconfiguration pattern, which describes how the software architecture can be dynamically adapted.",Adaptive systems; Application software; Computer architecture; Programming; Software architecture; Software design; Software engineering; Software maintenance; System testing; Unified modeling language,Model-Based Software Design and Adaptation,x,,,,,,,,,NO,,
S276,1,Backward,conferencePaper,2013,"Guo, Jianmei; Czarnecki, Krzysztof; Apel, Sven; Siegmund, Norbert; Wąsowski, Andrzej",2013 28th IEEE/ACM International Conference on Automated Software Engineering (ASE),10.1109/ASE.2013.6693089,,"Configurable software systems allow stakeholders to derive program variants by selecting features. Understanding the correlation between feature selections and performance is important for stakeholders to be able to derive a program variant that meets their requirements. A major challenge in practice is to accurately predict performance based on a small sample of measured variants, especially when features interact. We propose a variability-aware approach to performance prediction via statistical learning. The approach works progressively with random samples, without additional effort to detect feature interactions. Empirical results on six real-world case studies demonstrate an average of 94% prediction accuracy based on small random samples. Furthermore, we investigate why the approach works by a comparative analysis of performance distributions. Finally, we compare our approach to an existing technique and guide users to choose one or the other in practice.",Accuracy; Correlation; Feature extraction; Measurement; Predictive models; Silicon; Software systems,Variability-aware performance prediction: A statistical learning approach,x,,,,,,,,,NO,,
S277,1,Backward,journalArticle,2011,"Happe, Jens; Koziolek, Heiko; Reussner, Ralf",IEEE Software,10.1109/MS.2011.25,,"Component-based software engineering (CBSE) poses challenges for predicting and evaluating software performance but also offers several advantages. Software performance engineering can benefit from CBSE ideas and concepts. The MediaStore, a fictional system, demonstrates how to achieve compositional reasoning about software performance.",component-based software architecture; Computer architecture; Predictive models; quality assessment; Resource management; Servers; Software performance; software performance engineering; Throughput,Facilitating Performance Predictions Using Software Components,x,,,,,,,,,NO,,
S278,1,Backward,conferencePaper,2015,"Henard, Christopher; Papadakis, Mike; Harman, Mark; Le Traon, Yves",2015 IEEE/ACM 37th IEEE International Conference on Software Engineering,10.1109/ICSE.2015.69,,"Software Product Line (SPL) feature selection involves the optimization of multiple objectives in a large and highly constrained search space. We introduce SATIBEA, that augments multi-objective search-based optimization with constraint solving to address this problem, evaluating it on five large real-world SPLs, ranging from 1,244 to 6,888 features with respect to three different solution quality indicators and two diversity metrics. The results indicate that SATIBEA statistically significantly outperforms the current state-of-the-art (p <; 0.01) for all five SPLs on all three quality indicators and with maximal effect size (Ȃ12 = 1.0). We also present results that demonstrate the importance of combining constraint solving with search-based optimization and the significant improvement SATIBEA produces over pure constraint solving. Finally, we demonstrate the scalability of SATIBEA: within less than half an hour, it finds thousands of constraint-satisfying optimized software products, even for the largest SPL considered in the literature to date.",Filtering algorithms; Frequency modulation; Measurement; Optimization; Search problems; Software; Software product lines,Combining Multi-Objective Search and Constraint Solving for Configuring Large Software Product Lines,x,,,,,,,,,NO,,
S279,1,Backward,journalArticle,2017,"Huber, Nikolaus; Brosig, Fabian; Spinner, Simon; Kounev, Samuel; Bähr, Manuel",IEEE Transactions on Software Engineering,10.1109/TSE.2016.2613863,,"Modern IT systems have increasingly distributed and dynamic architectures providing flexibility to adapt to changes in the environment and thus enabling higher resource efficiency. However, these benefits come at the cost of higher system complexity and dynamics. Thus, engineering systems that manage their end-to-end application performance and resource efficiency in an autonomic manner is a challenge. In this article, we present a holistic model-based approach for self-aware performance and resource management leveraging the Descartes Modeling Language (DML), an architecture-level modeling language for online performance and resource management. We propose a novel online performance prediction process that dynamically tailors the model solving depending on the requirements regarding accuracy and overhead. Using these prediction capabilities, we implement a generic model-based control loop for proactive system adaptation. We evaluate our model-based approach in the context of two representative case studies showing that with the proposed methods, significant resource efficiency gains can be achieved while maintaining performance requirements. These results represent the first end-to-end validation of our approach, demonstrating its potential for self-aware performance and resource management in the context of modern IT systems and infrastructures.",adaptation; Adaptation models; Autonomic; Computer architecture; Dynamic scheduling; efficiency; model-based; modeling language; performance; Predictive models; Resource management; self-aware; Software; Unified modeling language,Model-Based Self-Aware Performance and Resource Management Using the Descartes Modeling Language,x,,,,,,,,,NO,,
S28,1,Forward,conferencePaper,2020,"Askarpour, Mehrnoosh; Menghi, Claudio; Belli, Gabriele; Bersani, Marcello M.; Pelliccione, Patrizio",Proceedings of the 8th International Conference on Formal Methods in Software Engineering,10.1145/3372020.3391561,https://doi.org/10.1145/3372020.3391561,"In the context of robotic software, the selection of an appropriate planner is one of the most crucial software engineering decisions. Robot planners aim at computing plans (i.e., blueprint of actions) to accomplish a complex mission. While many planners have been proposed in the robotics literature, they are usually evaluated on showcase examples, making hard to understand whether they can be effectively (re)used for realising complex missions, with heterogeneous robots, and in real-world scenarios. In this paper we propose ENFORCE, a framework which allows wrapping FM-based planners into comprehensive software engineering tools, and considers complex robotic missions. ENFORCE relies on (i) realistic maps (e.g, fire escape maps) that describe the environment in which the robots are deployed; (ii) temporal logic for mission specification; and (iii) Uppaal model checker to compute plans that satisfy mission specifications. We evaluated ENFORCE by analyzing how it supports computing plans in real case scenarios, and by evaluating the generated plans in simulated and real environments. The results show that while ENFORCE is adequate for handling single-robot applications, the state explosion still represents a major barrier for reusing existing planners in multi-robot applications.",Formal Methods; Model Checking; Planning; Robotics; Temporal Logic; Timed Automaton; Uppaal,Mind the gap: Robotic Mission Planning Meets Software Engineering,,,,,,,,,,,,
S280,1,Backward,journalArticle,2003,"Baysal, Ergün; Peker, Hüseyin; Yalinkiliç, Mustafa Kemal; Temiz, Ali",Bioresource Technology,10.1016/S0960-8524(03)00028-2,,"Spawn running, pin head and fruit body formation, and mushroom yield of oyster mushroom (Pleurotus ostreatus) on waste paper supplemented with peat, chicken manure and husk rice (90+10; 80+20 w:w) were studied. The fastest spawn running (mycelia development) (15.8 days), pin head formation (21.4 days) and fruit body formation (25.6 days), and the highest yield (350.2 gr) were realized with the substrate composed of 20% rice husk in weight. In general, increasing the ratio of rice husk within the substrate accelerated spawn running, pin head and fruit body formation, and resulted in increased mushroom yields, while more peat and chicken manure had a negative effect on growing.",Oyster mushroom; Rice husk; Spawn running; Waste paper; Yield,Cultivation of oyster mushroom on waste paper with some added supplementary materials,,,,x,,,,,,NO,,
S281,1,Backward,conferencePaper,2016,"Jamshidi, Pooyan; Casale, Giuliano","2016 IEEE 24th International Symposium on Modeling, Analysis and Simulation of Computer and Telecommunication Systems (MASCOTS)",10.1109/MASCOTS.2016.17,,"Finding optimal configurations for Stream Processing Systems (SPS) is a challenging problem due to the large number of parameters that can influence their performance and the lack of analytical models to anticipate the effect of a change. To tackle this issue, we consider tuning methods where an experimenter is given a limited budget of experiments and needs to carefully allocate this budget to find optimal configurations. We propose in this setting Bayesian Optimization for Configuration Optimization (BO4CO), an auto-tuning algorithm that leverages Gaussian Processes (GPs) to iteratively capture posterior distributions of the configuration spaces and sequentially drive the experimentation. Validation based on Apache Storm demonstrates that our approach locates optimal configurations within a limited experimental budget, with an improvement of SPS performance typically of at least an order of magnitude compared to existing configuration algorithms.",Auto-tuning; Bayes methods; Bayesian Optimization; Benchmark testing; Big Data; DevOps; Machine Learning; Optimization; Performance Tuning; Radiation detectors; Response surface methodology; Software Performance Engineering; Software Variability; Stream Processing System; Topology; Tuning,An Uncertainty-Aware Approach to Optimal Configuration of Stream Processing Systems,x,,,,,,,,,NO,,
S282,1,Backward,journalArticle,2016,"Jamshidi, Pooyan; Pahl, Claus; Mendonça, Nabor C.",IEEE Cloud Computing,10.1109/MCC.2016.66,,"Elasticity allows a cloud system to maintain an optimal user experience by automatically acquiring and releasing resources. Autoscaling-adding or removing resources automatically on the fly-involves specifying threshold-based rules to implement elasticity policies. However, the elasticity rules must be specified through quantitative values, which requires cloud resource management knowledge and expertise. Furthermore, existing approaches don't explicitly deal with uncertainty in cloud-based software, where noise and unexpected events are common. The authors propose a control-theoretic approach that manages the behavior of a cloud environment as a dynamic system. They integrate a fuzzy cloud controller with an online learning mechanism, putting forward a framework that takes the human out of the dynamic adaptation loop and can cope with various sources of uncertainty in the cloud.",autonomic cloud controller; cloud computing; Cloud computing; control theory; Control theory; Elasticity; fuzzy logic; machine learning; Monitoring; Pragmatics; Time factors; uncertainty; Uncertainty,Managing Uncertainty in Autonomic Cloud Elasticity Controllers,x,,,,,,,,,NO,,
S283,1,Backward,conferencePaper,2018,"Jamshidi, Pooyan; Velez, Miguel; Kästner, Christian; Siegmund, Norbert",Proceedings of the 2018 26th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering,10.1145/3236024.3236074,,"Most software systems provide options that allow users to tailor the system in terms of functionality and qualities. The increased flexibility raises challenges for understanding the configuration space and the effects of options and their interactions on performance and other non-functional properties. To identify how options and interactions affect the performance of a system, several sampling and learning strategies have been recently proposed. However, existing approaches usually assume a fixed environment (hardware, workload, software release) such that learning has to be repeated once the environment changes. Repeating learning and measurement for each environment is expensive and often practically infeasible. Instead, we pursue a strategy that transfers knowledge across environments but sidesteps heavyweight and expensive transfer-learning strategies. Based on empirical insights about common relationships regarding (i) influential options, (ii) their interactions, and (iii) their performance distributions, our approach, L2S (Learning to Sample), selects better samples in the target environment based on information from the source environment. It progressively shrinks and adaptively concentrates on interesting regions of the configuration space. With both synthetic benchmarks and several real systems, we demonstrate that L2S outperforms state of the art performance learning and transfer-learning approaches in terms of measurement effort and learning accuracy.",configurable systems; Software performance; transfer learning,Learning to sample: exploiting similarities across environments to learn performance models for configurable systems,x,,,,,,,,,NO,,
S284,1,Backward,conferencePaper,2017,"Jamshidi, Pooyan; Velez, Miguel; Kästner, Christian; Siegmund, Norbert; Kawthekar, Prasad",2017 IEEE/ACM 12th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS),10.1109/SEAMS.2017.11,,"Modern software systems are built to be used in dynamic environments using configuration capabilities to adapt to changes and external uncertainties. In a self-adaptation context, we are often interested in reasoning about the performance of the systems under different configurations. Usually, we learn a black-box model based on real measurements to predict the performance of the system given a specific configuration. However, as modern systems become more complex, there are many configuration parameters that may interact and we end up learning an exponentially large configuration space. Naturally, this does not scale when relying on real measurements in the actual changing environment. We propose a different solution: Instead of taking the measurements from the real system, we learn the model using samples from other sources, such as simulators that approximate performance of the real system at low cost. We define a cost model that transform the traditional view of model learning into a multi-objective problem that not only takes into account model accuracy but also measurements effort as well. We evaluate our cost-aware transfer learning solution using real-world configurable software including (i) a robotic system, (ii) 3 different stream processing applications, and (iii) a NoSQL database system. The experimental results demonstrate that our approach can achieve (a) a high prediction accuracy, as well as (b) a high model reliability.",Cognition; Highly configurable software; machine learning; Mobile robots; Predictive models; Reliability; Robot sensing systems; self-adaptive system; self-optimization; Software; transfer learning,Transfer Learning for Improving Model Predictions in Highly Configurable Software,x,,,,,,,,,NO,,
S285,1,Backward,journalArticle,2003,"Kephart, J.O.; Chess, D.M.",Computer,10.1109/MC.2003.1160055,,"A 2001 IBM manifesto observed that a looming software complexity crisis -caused by applications and environments that number into the tens of millions of lines of code - threatened to halt progress in computing. The manifesto noted the almost impossible difficulty of managing current and planned computing systems, which require integrating several heterogeneous environments into corporate-wide computing systems that extend into the Internet. Autonomic computing, perhaps the most attractive approach to solving this problem, creates systems that can manage themselves when given high-level objectives from administrators. Systems manage themselves according to an administrator's goals. New components integrate as effortlessly as a new cell establishes itself in the human body. These ideas are not science fiction, but elements of the grand challenge to create self-managing computing systems.",Biology computing; Computer industry; Computer vision; Crisis management; Environmental management; Humans; Internet; LAN interconnection; Pervasive computing; Technological innovation,The vision of autonomic computing,,,,x,,,,,,NO,,
S286,1,Backward,conferencePaper,2007,"Kramer, Jeff; Magee, Jeff",Future of Software Engineering (FOSE '07),10.1109/FOSE.2007.19,,"Self-management is put forward as one of the means by which we could provide systems that are scalable, support dynamic composition and rigorous analysis, and are flexible and robust in the presence of change. In this paper, we focus on architectural approaches to self-management, not because the language-level or network-level approaches are uninteresting or less promising, but because we believe that the architectural level seems to provide the required level of abstraction and generality to deal with the challenges posed. A self-managed software architecture is one in which components automatically configure their interaction in a way that is compatible with an overall architectural specification and achieves the goals of the system. The objective is to minimise the degree of explicit management necessary for construction and subsequent evolution whilst preserving the architectural properties implied by its specification. This paper discusses some of the current promising work and presents an outline three-layer reference model as a context in which to articulate some of the main outstanding research challenges.",Adaptive systems; Books; Computer networks; Concurrent computing; Design engineering; Educational institutions; Software architecture; Software design; Software engineering; Software systems,Self-Managed Systems: an Architectural Challenge,x,,,,,,,,,NO,,
S287,1,Backward,conferencePaper,2011,"Kwiatkowska, Marta; Norman, Gethin; Parker, David",Computer Aided Verification,10.1007/978-3-642-22110-1_47,,"This paper describes a major new release of the PRISM probabilistic model checker, adding, in particular, quantitative verification of (priced) probabilistic timed automata. These model systems exhibiting probabilistic, nondeterministic and real-time characteristics. In many application domains, all three aspects are essential; this includes, for example, embedded controllers in automotive or avionic systems, wireless communication protocols such as Bluetooth or Zigbee, and randomised security protocols. PRISM, which is open-source, also contains several new components that are of independent use. These include: an extensible toolkit for building, verifying and refining abstractions of probabilistic models; an explicit-state probabilistic model checking library; a discrete-event simulation engine for statistical model checking; support for generation of optimal adversaries/strategies; and a benchmark suite.",,PRISM 4.0: Verification of Probabilistic Real-Time Systems,x,,,,,,,,,NO,,
S288,1,Backward,journalArticle,2017,"Lacerda, Bruno; Parker, David; Hawes, Nick",Proceedings of the International Conference on Automated Planning and Scheduling,,,,,Multi-Objective Policy Generation for Mobile Robots under Probabilistic Time-Bounded Guarantees,,,,,x,,,,,NO,,
S289,1,Backward,conferencePaper,2015,"Moreno, Gabriel A.; Cámara, Javier; Garlan, David; Schmerl, Bradley",Proceedings of the 2015 10th Joint Meeting on Foundations of Software Engineering,10.1145/2786805.2786853,,"Self-adaptive systems tend to be reactive and myopic, adapting in response to changes without anticipating what the subsequent adaptation needs will be. Adapting reactively can result in inefficiencies due to the system performing a suboptimal sequence of adaptations. Furthermore, when adaptations have latency, and take some time to produce their effect, they have to be started with sufficient lead time so that they complete by the time their effect is needed. Proactive latency-aware adaptation addresses these issues by making adaptation decisions with a look-ahead horizon and taking adaptation latency into account. In this paper we present an approach for proactive latency-aware adaptation under uncertainty that uses probabilistic model checking for adaptation decisions. The key idea is to use a formal model of the adaptive system in which the adaptation decision is left underspecified through nondeterminism, and have the model checker resolve the nondeterministic choices so that the accumulated utility over the horizon is maximized. The adaptation decision is optimal over the horizon, and takes into account the inherent uncertainty of the environment predictions needed for looking ahead. Our results show that the decision based on a look-ahead horizon, and the factoring of both tactic latency and environment uncertainty, considerably improve the effectiveness of adaptation decisions.",Latency-aware; proactive; probabilistic model checking; self-adaptation,Proactive self-adaptation under uncertainty: a probabilistic model checking approach,x,,,,,,,,,NO,,
S29,1,Forward,journalArticle,2021,"Cardoso, Rafael C.; Ferrando, Angelo; Briola, Daniela; Menghi, Claudio; Ahlbrecht, Tobias",Journal of Sensor and Actuator Networks,10.3390/jsan10020033,https://www.mdpi.com/2224-2708/10/2/33,"Multi-agent systems, robotics and software engineering are large and active research areas with many applications in academia and industry. The First Workshop on Agents and Robots for reliable Engineered Autonomy (AREA), organised the first time in 2020, aims at encouraging cross-disciplinary collaborations and exchange of ideas among researchers working in these research areas. This paper presents a perspective of the organisers that aims at highlighting the latest research trends, future directions, challenges, and open problems. It also includes feedback from the discussions held during the AREA workshop. The goal of this perspective is to provide a high-level view of current research trends for researchers that aim at working in the intersection of these research areas.",human–agent interaction; multi-agent systems; robotics; software engineering; verification and validation,Agents and Robots for Reliable Engineered Autonomy:A Perspective from the Organisers of AREA 2020,x,,,,,,,,,NO,,
S290,1,Backward,journalArticle,2009,"Morin, Brice; Barais, Olivier; Jezequel, Jean-Marc; Fleurey, Franck; Solberg, Arnor",Computer,10.1109/MC.2009.327,,"Today's society increasingly depends on software systems deployed in large companies, banks, airports, and so on. These systems must be available 24/7 and continuously adapt to varying environmental conditions and requirements. Such dynamically adaptive systems exhibit degrees of variability that depend on user needs and runtime fluctuations in their contexts. The paper presents an approach for specifying and executing dynamically adaptive software systems that combines model-driven and aspect-oriented techniques to help engineers tame the complexity of such systems while offering a high degree of automation and validation.",Adaptive systems; Airports; Aspect-oriented modeling; Automation; Dynamically adaptive systems; Fluctuations; Model-driven engineering; Runtime; Runtime modeling; Software engineering; Software systems,Models@ Run.time to Support Dynamic Adaptation,x,,,,,,,,,NO,,
S291,1,Backward,journalArticle,2018,"Nair, Vivek; Menzies, Tim; Siegmund, Norbert; Apel, Sven",Automated Software Engineering,10.1007/s10515-017-0225-2,,"Despite the huge spread and economical importance of configurable software systems, there is unsatisfactory support in utilizing the full potential of these systems with respect to finding performance-optimal configurations. Prior work on predicting the performance of software configurations suffered from either (a) requiring far too many sample configurations or (b) large variances in their predictions. Both these problems can be avoided using the WHAT spectral learner. WHAT’s innovation is the use of the spectrum (eigenvalues) of the distance matrix between the configurations of a configurable software system, to perform dimensionality reduction. Within that reduced configuration space, many closely associated configurations can be studied by executing only a few sample configurations. For the subject systems studied here, a few dozen samples yield accurate and stable predictors—less than 10% prediction error, with a standard deviation of less than 2%. When compared to the state of the art, WHAT (a) requires 2–10 times fewer samples to achieve similar prediction accuracies, and (b) its predictions are more stable (i.e., have lower standard deviation). Furthermore, we demonstrate that predictive models generated by WHAT can be used by optimizers to discover system configurations that closely approach the optimal performance.",,Faster discovery of faster system configurations with spectral learning,x,,,,,,,,,NO,,
S292,1,Backward,conferencePaper,2007,"Osogami, Takayuki; Kato, Sei",Proceedings of the 2007 ACM SIGMETRICS international conference on Measurement and modeling of computer systems,10.1145/1254882.1254899,,"The performance of a Web system can be greatly improved by tuning its configuration parameters. However, finding the optimal configuration has been a time-consuming task due to the long measurement time needed to evaluate the performance of a given configuration. We propose an algorithm, which we refer to as Quick Optimization via Guessing (QOG), that quickly selects one of nearly best configurations with high probability. The key ideas in QOG are (i) the measurement of a configuration is terminated as soon as the configuration is found to be suboptimal, and (ii) the performance of a configuration is guessed at based on the measured similar configurations, so that the better configurations are more likely to be measured before the others. If the performance of a good configuration has been measured, a poor configuration will be quickly found to be suboptimal with short measurement time. We apply QOG to optimizing the configuration of a real Web system, and find that QOG can drastically reduce the total measurement time needed to select the best configuration. Our experiments also illuminate several interesting properties of QOG specifically when it is applied to optimizing Web systems.",configuration parameters; performance optimization; ranking and selection; regression; web system,Optimizing system configurations quickly by guessing at the performance,x,,,,,,,,,NO,,
S293,1,Backward,conferencePaper,2018,"Rodrigues, Arthur; Diniz Caldas, Ricardo; Nunes Rodrigues, Genaína; Vogel, Thomas; Pelliccione, Patrizio",2018 IEEE/ACM 13th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS),,,"The assurance of real-time properties is prone to context variability. Providing such assurance at design time would require to check all the possible context and system variations or to predict which one will be actually used. Both cases are not viable in practice since there are too many possibilities to foresee. Moreover, the knowledge required to fully provide the assurance for self-adaptive systems is only available at runtime and therefore difficult to predict at early development stages. Despite all the efforts on assurances for self-adaptive systems at design or runtime, there is still a gap on verifying and validating real-time constraints accounting for context variability. To fill this gap, we propose a method to provide assurance of self-adaptive systems, at design-and runtime, with special focus on real-time constraints. We combine off-line requirements elicitation and model checking with on-line data collection and data mining to guarantee the system's goals, both functional and non-functional, with fine tuning of the adaptation policies towards the optimization of quality attributes. We experimentally evaluate our method on a simulated prototype of a Body Sensor Network system (BSN) implemented in OpenDaVINCI. The results of the validation are promising and show that our method is effective in providing evidence that support the provision of assurance.",assurance evidence; Context modeling; data mining; Data mining; goal oriented; learning approach; Model checking; real time systems; Real-time systems; Runtime; Self adaptive systems; Sensors; Synthetic aperture sonar,A Learning Approach to Enhance Assurances for Real-Time Self-Adaptive Systems,,,,,x,,,,,NO,,
S294,1,Backward,journalArticle,1991,"Roecker, Ellen B.",Technometrics,10.1080/00401706.1991.10484873,,"Strategies are compared for development of a linear regression model and the subsequent assessment of its predictive ability. Simulations were performed as a designed experiment over a range of data structures. Approaches using a forward selection of variables resulted in slightly smaller prediction errors and less biased estimators of predictive accuracy than all possible subsets selection but often did not improve on the full model. Random and balanced data splitting resulted in increased prediction errors and estimators with large mean squared error. To maximize predictive accuracy while retaining a reliable estimate of that accuracy, it is recommended that the entire sample usually he used for model development and assessment.",,Prediction Error and Its Estimation for Subset-Selected Models,,,,x,,,,,,NO,,
S295,1,Backward,conferencePaper,2015,"Siegmund, Norbert; Grebhahn, Alexander; Apel, Sven; Kästner, Christian",Proceedings of the 2015 10th Joint Meeting on Foundations of Software Engineering,10.1145/2786805.2786845,,"Almost every complex software system today is configurable. While configurability has many benefits, it challenges performance prediction, optimization, and debugging. Often, the influences of individual configuration options on performance are unknown. Worse, configuration options may interact, giving rise to a configuration space of possibly exponential size. Addressing this challenge, we propose an approach that derives a performance-influence model for a given configurable system, describing all relevant influences of configuration options and their interactions. Our approach combines machine-learning and sampling heuristics in a novel way. It improves over standard techniques in that it (1) represents influences of options and their interactions explicitly (which eases debugging), (2) smoothly integrates binary and numeric configuration options for the first time, (3) incorporates domain knowledge, if available (which eases learning and increases accuracy), (4) considers complex constraints among options, and (5) systematically reduces the solution space to a tractable size. A series of experiments demonstrates the feasibility of our approach in terms of the accuracy of the models learned as well as the accuracy of the performance predictions one can make with them.",machine learning; Performance-influence models; sampling,Performance-influence models for highly configurable systems,x,,,,,,,,,NO,,
S296,1,Backward,conferencePaper,2015,"Siegmund, Janet; Siegmund, Norbert; Apel, Sven",2015 IEEE/ACM 37th IEEE International Conference on Software Engineering,10.1109/ICSE.2015.24,,"Empirical methods have grown common in software engineering, but there is no consensus on how to apply them properly. Is practical relevance key? Do internally valid studies have any value? Should we replicate more to address the tradeoff between internal and external validity? We asked the community how empirical research should take place in software engineering, with a focus on the tradeoff between internal and external validity and replication, complemented with a literature review about the status of empirical research in software engineering. We found that the opinions differ considerably, and that there is no consensus in the community when to focus on internal or external validity and how to conduct and review replications.",Bibliographies; Computer languages; Context; Guidelines; History; Software engineering; Standards,Views on Internal and External Validity in Empirical Software Engineering,x,,,,,,,,,NO,,
S297,1,Backward,conferencePaper,2016,"Weyns, Danny; Iftikhar, Usman","Proceeding Models at Runtime, Würzburg 2016",10.1109/ICAC.2016.67,,"© 2016 IEEE. Modern software systems are subject to uncertainties, such as dynamics in the availability of resources or changes of system goals. Self-adaptation enables a system to reason about runtime models to adapt itself and realises its goals under uncertainties. Our focus is on providing guarantees for adaption goals. A prominent approach to provide such guarantees is automated verification of a stochastic model that encodes up-to-date knowledge of the system and relevant qualities. The verification results allow selecting an adaption option that satisfies the goals. There are two issues with this state of the art approach: i) changing goals at runtime (a challenging type of uncertainty) is difficult, and ii) exhaustive verification suffers from the state space explosion problem. In this paper, we propose a novel modular approach for decision making in self-adaptive systems that combines distinct models for each relevant quality with runtime simulation of the models. Distinct models support on the fly changes of goals. Simulation enables efficient decision making to select an adaptation option that satisfies the system goals. The tradeoff is that simulation results can only provide guarantees with a certain level of accuracy. We demonstrate the benefits and tradeoffs of the approach for a service-based telecare system.",,Model-based Simulation at Runtime for Self-adaptive Systems,x,,,,,,,,,NO,,
S298,1,Backward,conferencePaper,2015,"Wu, Fan; Weimer, Westley; Harman, Mark; Jia, Yue; Krinke, Jens",Proceedings of the 2015 Annual Conference on Genetic and Evolutionary Computation,10.1145/2739480.2754648,,"We introduce a mutation-based approach to automatically discover and expose `deep' (previously unavailable) parameters that affect a program's runtime costs. These discovered parameters, together with existing (`shallow') parameters, form a search space that we tune using search-based optimisation in a bi-objective formulation that optimises both time and memory consumption. We implemented our approach and evaluated it on four real-world programs. The results show that we can improve execution time by 12\% or achieve a 21\% memory consumption reduction in the best cases. In three subjects, our deep parameter tuning results in a significant improvement over the baseline of shallow parameter tuning, demonstrating the potential value of our deep parameter extraction approach.",memory allocation; parameter exposure; parameter tuning,Deep Parameter Optimisation,x,,,,,,,,,NO,,
S299,1,Backward,conferencePaper,2007,"Woodside, Murray; Franks, Greg; Petriu, Dorina C.",Future of Software Engineering (FOSE '07),10.1109/FOSE.2007.32,,"Performance is a pervasive quality of software systems; everything affects it, from the software itself to all underlying layers, such as operating system, middleware, hardware, communication networks, etc. Software Performance Engineering encompasses efforts to describe and improve performance, with two distinct approaches: an early-cycle predictive model-based approach, and a late-cycle measurement-based approach. Current progress and future trends within these two approaches are described, with a tendency (and a need) for them to converge, in order to cover the entire development cycle.",Communication networks; Communication system software; Hardware; Middleware; Operating systems; Predictive models; Software measurement; Software performance; Software quality; Software systems,The Future of Software Performance Engineering,x,,,,,,,,,NO,,
S300,1,Backward,conferencePaper,2003,"Ye, Tao; Kalyanaraman, Shivkumar",Proceedings of the 2003 ACM SIGMETRICS international conference on Measurement and modeling of computer systems,10.1145/781027.781052,,"Parameter configuration is a common procedure used in large-scale network protocols to support multiple operational goals. It can be formulated as a black-box optimization problem and solved with an efficient search algorithm. This paper proposes a new heuristic search algorithm, Recursive Random Search(RRS), for large-scale network parameter optimization. The RRS algorithm is based on the initial high-efficiency feature of random sampling and it attempts to maintain this high efficiency by constantly ""restarting"" random sampling with adjusted sample spaces. Besides the high efficiency, the RRS algorithm is robust to the effect of random noise and trivial parameters in the objective function because of its root in random sampling. These features are very important for the efficient optimization of network protocol configuration. The performance of RRS is demonstrated with the tests on a suite of benchmark functions. The algorithm has been applied to the configuration of several network protocols, such as RED, OSPF and BGP. One example application in OSPF routing algorithm is presented.",black-box optimization; global optimization; network management; random sampling,A recursive random search algorithm for large-scale network parameter configuration,,,,x,,,,,,NO,,
S301,1,Backward,conferencePaper,2004,"Xi, Bowei; Liu, Zhen; Raghavachari, Mukund; Xia, Cathy H.; Zhang, Li",Proceedings of the 13th international conference on World Wide Web,10.1145/988672.988711,,"The overwhelming success of the Web as a mechanism for facilitating information retrieval and for conducting business transactions has ledto an increase in the deployment of complex enterprise applications. These applications typically run on Web Application Servers, which assume the burden of managing many tasks, such as concurrency, memory management, database access, etc., required by these applications. The performance of an Application Server depends heavily on appropriate configuration. Configuration is a difficult and error-prone task dueto the large number of configuration parameters and complex interactions between them. We formulate the problem of finding an optimal configuration for a given application as a black-box optimization problem. We propose a smart hill-climbing algorithm using ideas of importance sampling and Latin Hypercube Sampling (LHS). The algorithm is efficient in both searching and random sampling. It consists of estimating a local function, and then, hill-climbing in the steepest descent direction. The algorithm also learns from past searches and restarts in a smart and selective fashion using the idea of importance sampling. We have carried out extensive experiments with an on-line brokerage application running in a WebSphere environment. Empirical results demonstrate that our algorithm is more efficient than and superior to traditional heuristic methods.",automatic tuning; gradient method; importance sampling; simulated annealing; system configuration,A smart hill-climbing algorithm for application server configuration,,,,x,,,,,,NO,,
S302,1,Backward,conferencePaper,2013,"Yigitbasi, Nezih; Willke, Theodore L.; Liao, Guangdeng; Epema, Dick","2013 IEEE 21st International Symposium on Modelling, Analysis and Simulation of Computer and Telecommunication Systems",10.1109/MASCOTS.2013.9,,"MapReduce, which is the de facto programming model for large-scale distributed data processing, and its most popular implementation Hadoop have enjoyed widespread adoption in industry during the past few years. Unfortunately, from a performance point of view getting the most out of Hadoop is still a big challenge due to the large number of configuration parameters. Currently these parameters are tuned manually by trial and error, which is ineffective due to the large parameter space and the complex interactions among the parameters. Even worse, the parameters have to be re-tuned for different MapReduce applications and clusters. To make the parameter tuning process more effective, in this paper we explore machine learning-based performance models that we use to auto-tune the configuration parameters. To this end, we first evaluate several machine learning models with diverse MapReduce applications and cluster configurations, and we show that support vector regression model (SVR) has good accuracy and is also computationally efficient. We further assess our auto-tuning approach, which uses the SVR performance model, against the Starfish auto tuner, which uses a cost-based performance model. Our findings reveal that our auto-tuning approach can provide comparable or in some cases better performance improvements than Starfish with a smaller number of parameters. Finally, we propose and discuss a complete and practical end-to-end auto-tuning flow that combines our machine learning-based performance models with smart search algorithms for the effective training of the models and the effective exploration of the parameter space.",Accuracy; Benchmark testing; big data; Computational modeling; Data models; distributed systems; hadoop; performance modeling; Training; Training data; Tuning,Towards Machine Learning-Based Auto-tuning of MapReduce,x,,,,,,,,,NO,,
S303,1,Backward,conferencePaper,2012,"Zeller, Marc; Prehofer, Christian",2012 7th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS),10.1109/SEAMS.2012.6224393,,"In this work, we consider runtime adaptation in networked embedded systems with tight real-time constraints. For such systems, we aim to adapt the placement of software components on networked hardware components at runtime without violating real-time constraints. We develop constraints for such an adaptation process and show the applicability to networked embedded systems like automotive in-vehicle networks. Then, we analyze two approaches for finding solutions in the resulting search space for adaptations, one based on planning algorithms and the other based on constraint solving. While planning approaches start from the current configuration and aim to find a migration sequence and a valid configuration, constraint solving approaches first find solutions and then check for a possible migration sequence. Based on simulations for the automotive domain, we show that approaches based on planning algorithms scale poorly, while constraint solving approaches can find solutions effectively.",Automotive engineering; Control systems; Embedded systems; Hardware; networked embedded systems; planning; Runtime; runtime adaptation; Timing,"Timing constraints for runtime adaptation in real-time, networked embedded systems",x,,,,,,,,,NO,,
S304,1,Backward,conferencePaper,2015,"Zhang, Yi; Guo, Jianmei; Blais, Eric; Czarnecki, Krzysztof",2015 30th IEEE/ACM International Conference on Automated Software Engineering (ASE),10.1109/ASE.2015.15,,"Understanding how performance varies across a large number of variants of a configurable software system is important for helping stakeholders to choose a desirable variant. Given a software system with n optional features, measuring all its 2n possible configurations to determine their performances is usually infeasible. Thus, various techniques have been proposed to predict software performances based on a small sample of measured configurations. We propose a novel algorithm based on Fourier transform that is able to make predictions of any configurable software system with theoretical guarantees of accuracy and confidence level specified by the user, while using minimum number of samples up to a constant factor. Empirical results on the case studies constructed from real-world configurable systems demonstrate the effectiveness of our algorithm.",Algorithm design and analysis; Boolean functions; Estimation; Fourier transforms; Prediction algorithms; Software algorithms; Software systems,Performance Prediction of Configurable Software Systems by Fourier Learning (T),x,,,,,,,,,NO,,
S305,1,Backward,conferencePaper,2007,"Zheng, Wei; Bianchini, Ricardo; Nguyen, Thu D.",Proceedings of the 2nd ACM SIGOPS/EuroSys European Conference on Computer Systems 2007,10.1145/1272996.1273020,,"Recent research has found that operators frequently misconfigure Internet services, causing various availability and performance problems. In this paper, we propose a software infrastructure that eliminates several types of misconfiguration by automating the generation of configuration files in Internet services, even as the services evolve. The infrastructure comprises a custom scripting language, configuration file templates, communicating runtime monitors, and heuristic algorithms to detect dependencies between configuration parameters and select ideal configurations. To demonstrate our infrastructure experimentally, we apply it to a realistic online auction service. Our results show that the infrastructure can simplify operation significantly while eliminating 58% of the misconfigurations found in a previous study of the same service. Furthermore, our results show that the infrastructure can efficiently determine the configuration parameters that lead to high performance as the service evolves through a hardware upgrade and the scheduled maintenance of a few nodes.",configuration; internet services; manageability; operator mistakes,Automatic configuration of internet services,x,,,,,,,,,NO,,
S306,1,Backward,conferencePaper,2017,"Jamshidi, Pooyan; Siegmund, Norbert; Velez, Miguel; Kästner, Christian; Patel, Akshay; Agarwal, Yuvraj",2017 32nd IEEE/ACM International Conference on Automated Software Engineering (ASE),10.1109/ASE.2017.8115661,,"Modern software systems provide many configuration options which significantly influence their non-functional properties. To understand and predict the effect of configuration options, several sampling and learning strategies have been proposed, albeit often with significant cost to cover the highly dimensional configuration space. Recently, transfer learning has been applied to reduce the effort of constructing performance models by transferring knowledge about performance behavior across environments. While this line of research is promising to learn more accurate models at a lower cost, it is unclear why and when transfer learning works for performance modeling. To shed light on when it is beneficial to apply transfer learning, we conducted an empirical study on four popular software systems, varying software configurations and environmental conditions, such as hardware, workload, and software versions, to identify the key knowledge pieces that can be exploited for transfer learning. Our results show that in small environmental changes (e.g., homogeneous workload change), by applying a linear transformation to the performance model, we can understand the performance behavior of the target environment, while for severe environmental changes (e.g., drastic workload change) we can transfer only knowledge that makes sampling more efficient, e.g., by reducing the dimensionality of the configuration space.",Analytical models; Hardware; Mobile communication; Performance analysis; Predictive models; Reliability; Software systems; transfer learning,Transfer learning for performance modeling of configurable systems: An exploratory analysis,x,,,,,,,,,NO,,
S307,1,Backward,conferencePaper,2017,"Melicher, Darya; Shi, Yangqingwei; Potanin, Alex; Aldrich, Jonathan",31st European Conference on Object-Oriented Programming (ECOOP 2017),10.4230/LIPIcs.ECOOP.2017.20,,,authority; capabilities; Language-based security; modules,A Capability-Based Module System for Authority Control,x,,,,,,,,,NO,,
S308,1,Backward,conferencePaper,2018,"Ruchkin, Ivan; Sunshine, Joshua; Iraci, Grant; Schmerl, Bradley; Garlan, David",Formal Methods,10.1007/978-3-319-95582-7_10,,"Design and verification of modern systems requires diverse models, which often come from a variety of disciplines, and it is challenging to manage their heterogeneity – especially in the case of cyber-physical systems. To check consistency between models, recent approaches map these models to flexible static abstractions, such as architectural views. This model integration approach, however, comes at a cost of reduced expressiveness because complex behaviors of the models are abstracted away. As a result, it may be impossible to automatically verify important behavioral properties across multiple models, leaving systems vulnerable to subtle bugs. This paper introduces the Integration Property Language (IPL) that improves integration expressiveness using modular verification of properties that depend on detailed behavioral semantics while retaining the ability for static system-wide reasoning. We prove that the verification algorithm is sound and analyze its termination conditions. Furthermore, we perform a case study on a mobile robot to demonstrate IPL is practically useful and evaluate its performance.",,IPL: An Integration Property Language for Multi-model Cyber-physical Systems,x,,,,,,,,,NO,,
S309,1,Backward,conferencePaper,2018,"Timperley, Christopher Steven; Afzal, Afsoon; Katz, Deborah S.; Hernandez, Jam Marcos; Le Goues, Claire","2018 IEEE 11th International Conference on Software Testing, Verification and Validation (ICST)",10.1109/ICST.2018.00040,,"Robotics and autonomy systems are becoming increasingly important, moving from specialised factory domains to increasingly general and consumer-focused applications. As such systems grow ubiquitous, there is a commensurate need to protect against potentially catastrophic harm. System-level testing in simulation is a particularly promising approach for assuring robotics systems, allowing for more extensive testing in realistic scenarios and seeking bugs that may not manifest at the unit-level. Ideally, such testing could find critical bugs well before expensive field-testing is required. However, simulations can only model coarse environmental abstractions, contributing to a common perception that robotics bugs can only be found in live deployment. To address this gap, we conduct an empirical study on bugs that have been fixed in the widely used, open-source ArduPilot system. We identify bug-fixing commits by exploiting commenting conventions in the version-control history. We provide a quantitative and qualitative evaluation of the bugs, focusing on characterising how the bugs are triggered and how they can be detected, with a goal of identifying how they can be best identified in simulation, well before field testing. To our surprise, we find that the majority of bugs manifest under simple conditions that can be easily reproduced in software-based simulation. Conversely, we find that system configurations and forms of input play an important role in triggering bugs. We use these results to inform a novel framework for testing for these and other bugs in simulation, consistently and reproducibly. These contributions can inform the construction of techniques for automated testing of robotics systems, with the goal of finding bugs early and cheaply, without incurring the costs of physically testing for bugs in live systems.",ardupilot; automated testing; Autonomous systems; autonomous vehicles; Computer bugs; dataset; empirical study; History; repository mining; Robot kinematics; robotics; simulation; Software; testing; Testing,Crashing Simulated Planes is Cheap: Can Simulation Detect Robotics Bugs Early?,x,,,,,,,,,NO,,
S31,1,Forward,conferencePaper,2020,"Ashraf, Ameena K; D’Souza, Meenakshi; Jetley, Raoul",2020 IEEE 16th International Conference on Automation Science and Engineering (CASE),10.1109/CASE48305.2020.9217031,,"Industrial robots are used in manufacturing industries for tasks that can be automated and work with a controller within a tightly integrated real-time platform. Since they work with humans and other robots, they are safety critical in nature, making testing and verification important tasks in their software development life cycle. We propose coverage criteria for white-box testing of programs that automate tasks of industrial robots and develop a test case generation framework to automatically generate test cases achieving the coverage criteria. A proto-type of our framework has been developed for Rapid, a proprietary programming language for ABB's industrial robots. Our coverage criteria and framework can be applied to other similar programming languages for industrial robots too, requiring very little customization.",Computer languages; Robot kinematics; Robot sensing systems; Service robots; Testing; Tools,Can I Depend on you? Mapping the Dependency and Quality Landscape of ROS Packages,,,,,,,,x,,NO,,
S310,1,Backward,conferencePaper,2018,"Mohseni-Kabir, Anahita; Veloso, Manuela",Proceedings of the Twenty-Seventh International Joint Conference on Artificial Intelligence,10.24963/ijcai.2018/686,,"While mobile robots reliably perform each service task by accurately localizing and safely navigating avoiding obstacles, they do not respond in any other way to their surroundings. We can make the robots more responsive to their environment by equipping them with models of multiple tasks and a way to interrupt a speciﬁc task and switch to another task based on observations. However the challenges of a multiple task model approach include selecting a task model to execute based on observations and having a potentially large set of observations associated with the set of all individual task models. We present a novel two-step solution. First, our approach leverages the tasks’ policies and an abstract representation of their states, and learns which task should be executed at each given world state. Secondly, the algorithm uses the learned tasks and identiﬁes the observation stimuli that trigger the interruption of one task and the switch to another task. We show that our solution using the switching stimuli compares favorably to the naive approach of learning a combined model for all the tasks. Moreover, leveraging the stimuli signiﬁcantly decreases the amount of sensory input processing during the execution of tasks.",,Robot Task Interruption by Learning to Switch Among Multiple Models,x,,,,,,,,,NO,,
S311,1,Backward,bookSection,2004,"Bengtsson, Johan; Yi, Wang",Lectures on Concurrency and Petri Nets: Advances in Petri Nets,,,"This chapter is to provide a tutorial and pointers to results and related work on timed automata with a focus on semantical and algorithmic aspects of verification tools. We present the concrete and abstract semantics of timed automata (based on transition rules, regions and zones), decision problems, and algorithms for verification. A detailed description on DBM (Difference Bound Matrices) is included, which is the central data structure behind several verification tools for timed systems. As an example, we give a brief introduction to the tool Uppaal.",Canonical Form; Commit Location; Operational Semantic; Reachability Analysis; Symbolic State,"Timed Automata: Semantics, Algorithms and Tools",,,,x,x,,,,,NO,,
S312,1,Backward,conferencePaper,2007,"Berry, Gérard",Next Generation Design and Verification Methodologies for Distributed Embedded Control Systems,10.1007/978-1-4020-6254-4_2,,"We describe the SCADE synchronous approach to model-based embedded software design, validation, and implementation for avionics, automotive, railway, and industry applications. SCADE specifications are based on block-diagrams and hierarchical state-machine graphical models with rigorous formal specifications. The SCADE KCG compiler is certified at the highest level of avionics certification, which suppresses the need for generated code unit testing. The SCADE tool has support for visual animation, test-suite coverage analysis, and formal verification. It has gateways to many other tools ranging from system-level specification to performance analysis.",Discrete Control; Logical Concurrency; Requirement Management Tool; State Machine; Synchronous Language,SCADE: Synchronous Design and Validation of Embedded Control Software,x,,,,,,,,,NO,,
S313,1,Backward,conferencePaper,2005,"Burmester, Sven; Giese, Holger; Schäfer, Wilhelm",Model Driven Architecture – Foundations and Applications,10.1007/11581741_4,,"The model-driven software development for hard real-time systems promotes the usage of the platform independent model as major design artifact. It is used to develop the software logic at a high level of abstraction and enables analysis like for example model checking of critical model properties. Ideally, starting with the platform independent model, the platform specific model serves only as an intermediate artifact which is derived automatically, and will finally result in a set of threads whose implementations guarantee the behavior, specified in the platform independent model. However, the current MDA approaches and tools for hard real-time software do not provide this ideal: While some of the MDA approaches could in principle support this vision, most approaches simply do not support an appropriate specification of time constraints in the platform independent model which have to be respected in the platform specific model or in the code. This is also true for UML models and UML State Machines in particular. Our approach overcomes those UML specific limitations by firstly proposing a syntactic extension and semantic definition of UML State Machines which provides enough details to synthesize an appropriate platform specific model that can be mapped to code for hard real-time systems automatically. Secondly, a new partitioning algorithm is outlined, which calculates an appropriate mapping onto a platform specific model by means of real-time threads with their scheduling parameters which can be straight forward transformed to code for the hard real-time system.",Main Thread; Model Check; Model Drive Architecture; Time Guard,Model-Driven Architecture for Hard Real-Time Systems: From Platform Independent Models to Code,,,,x,,,,,,NO,,
S314,1,Backward,conferencePaper,2014,"Jiang, Yu; Zhang, Hehua; Zhang, Huafeng; Zhao, Xinyan; Liu, Han; Sun, Chengnian; Song, Xiaoyu; Gu, Ming; Sun, Jiaguang",Proceedings of the 22nd ACM SIGSOFT International Symposium on Foundations of Software Engineering,10.1145/2635868.2661664,,"The key challenges of the model-driven approach to designing multi-clocked embedded systems are three-fold: (1) how to model local synchronous components and asynchronous communication between components in a single framework, (2) how to ensure the correctness of the model, and (3) how to maintain the consistency between the model and the implementation of the system. In this paper, we present Tsmart, a self-contained toolkit to address these three challenges. Tsmart seamlessly integrates (1) a graphical editor to facilitate the modeling of the complex behaviors and structures in an embedded system, (2) a simulator for interactive graphical simulation to understand and debug the system model, (3) a verication engine to verify the correctness of the system design, and (4) a synthesis engine to automatically generate ecient executable VHDL code from the model. The toolkit has been successfully applied to designing the main control system of a train communication controller, and the system has already been deployed and in operation. The evaluation of Tsmart on this real industrial application demonstrates the eectiveness and the potential of the toolkit.",graphical simulation; multi-clocked embedded system; program synthesis; veri- fication,"Tsmart-GalsBlock: a toolkit for modeling, validation, and synthesis of multi-clocked embedded systems",x,,,,,,,,,NO,,
S315,1,Backward,journalArticle,2015,"Jiang, Yu; Zhang, Hehua; Li, Zonghui; Deng, Yangdong; Song, Xiaoyu; Gu, Ming; Sun, Jiaguang",IEEE Transactions on Industrial Electronics,10.1109/TIE.2014.2316234,,"Today's system-on-chip and distributed systems are commonly equipped with multiple clocks. The key challenge in designing such systems is that two situations have to be captured and evaluated in a single framework. The first is the heterogeneous control-oriented and data-oriented behaviors within one clock domain, and the second is the asynchronous communications between two clock domains. In this paper, we propose to use timed automata and synchronous dataflow to model the dynamic behaviors of the multiclock train-control system, and a multiprocessor architecture for the implementation from our model to the real system. Data-oriented behaviors are captured by synchronous dataflow, control-oriented behaviors are captured by timed automata, and asynchronous communications of the interclock domain can be modeled as an interface timed automaton or a synchronous dataflow module. The behaviors of synchronous dataflow are interpreted by some equivalent timed automata to maintain the semantic consistency of the mixed model. Then, various functional properties that are important to guarantee the correctness of the system can be simulated and verified within the framework. We apply the framework to the design of a control system described in the standard IEC 61 375 and several bugs are detected. The bugs in the standard have been fixed, and the new version has been implemented and used in the real-world subway communication control system.",Asynchronous communication; Automata; Clocks; Control systems; Control-oriented behavior; data-oriented behavior; Embedded systems; multiclock; Standards; Synchronization; synchronous dataflow; timed automata; train-control embedded system,Design and Optimization of Multiclocked Embedded Systems Using Formal Techniques,x,,,,,,,,,NO,,
S316,1,Backward,conferencePaper,2004,"Amnell, Tobias; Fersman, Elena; Mokrushin, Leonid; Pettersson, Paul; Yi, Wang",Formal Modeling and Analysis of Timed Systems,10.1007/978-3-540-40903-8_6,,"Times is a tool suite designed mainly for symbolic schedulability analysis and synthesis of executable code with predictable behaviours for real-time systems. Given a system design model consisting of (1) a set of application tasks whose executions may be required to meet mixed timing, precedence, and resource constraints, (2) a network of timed automata describing the task arrival patterns and (3) a preemptive or non-preemptive scheduling policy, Times will generate a scheduler, and calculate the worst case response times for the tasks. The design model may be further validated using a model checker e.g. UPPAAL and then compiled to executable C-code using the Times compiler. In this paper, we present the design and main features of Times including a summary of theoretical results behind the tool. Times can be downloaded at www.timestool.com.",Executable Code; Precedence Constraint; Schedulability Analysis; Schedule Policy; Sporadic Task,TIMES: A Tool for Schedulability Analysis and Code Generation of Real-Time Systems,,,,x,,,,,,NO,,
S317,1,Backward,conferencePaper,2004,"Quottrup, M.M.; Bak, T.; Zamanabadi, R.I.","IEEE International Conference on Robotics and Automation, 2004. Proceedings. ICRA '04. 2004",10.1109/ROBOT.2004.1302413,,"This paper describes how a network of interacting timed automata can be used to model, analyze, and verify motion planning problems in a scenario with multiple robotic vehicles. The method presupposes an infrastructure of robots with feedback controllers obeying simple restriction on a planar grid. The automata formalism merely presents a high-level model of environment, robots and control, but allows composition and formal symbolic reasoning about coordinated solutions. Composition is achieved through synchronization, and the verification software UPPAAL is used for a symbolic verification against specification requirements formulated in computational tree logic (CTL). In this way, all feasible trajectories that satisfy specifications and which moves the robots from a set of initial positions to a set of desired goal positions may be algorithmically analyzed. The trajectories can then subsequently be used as a high-level motion plan for the robots. This paper reports on the timed automata framework, results of two verification experiments, promise of the approach, and gives a perspective for future research.",Adaptive control; Automata; Automatic control; Logic; Motion analysis; Motion planning; Robot control; Robot kinematics; Robotics and automation; Vehicles,Multi-robot planning : a timed automata approach,,,,x,,,,,,NO,,
S318,1,Backward,conferencePaper,2016,"Yang, Yixiao; Jiang, Yu; Gu, Ming; Sun, Jiaguang",Proceedings of the 31st IEEE/ACM International Conference on Automated Software Engineering,10.1145/2970276.2970293,,"Simulink Stateflow is widely used for the model-driven development of software. However, the increasing demand of rigorous verification for safety critical applications brings new challenge to the Simulink Stateflow because of the lack of formal semantics. In this paper, we present STU, a self-contained toolkit to bridge the Simulink Stateflow and a well-defined rigorous verification. The tool translates the Simulink Stateflow into the Uppaal timed automata for verification. Compared to existing work, more advanced and complex modeling features in Stateflow such as the event stack, conditional action and timer are supported. Then, with the strong verification power of Uppaal, we can not only find design defects that are missed by the Simulink Design Verifier, but also check more important temporal properties. The evaluation on artificial examples and real industrial applications demonstrates the effectiveness.",Simulink Stateflow; Uppaal Timed Automaton; Verification,Verifying simulink stateflow model: timed automata approach,x,,,,,,,,,NO,,
S319,1,Backward,conferencePaper,2008,"Wehrmeister, Marco A.; Freitas, Edison P.; Pereira, Carlos E.; Rammig, Franz",2008 11th IEEE International Symposium on Object and Component-Oriented Real-Time Distributed Computing (ISORC),10.1109/ISORC.2008.67,,"Model-driven design (MDD) can be perceived in the recent literature as an option to deal with the increasing complexity of the design of distributed embedded real-time systems (DERTS). This paper reports some results of a research project aiming to support a MDD approach, which applies concepts of the aspect-oriented (AO) paradigm in order to improve the treatment of non-functional requirements (NFR) in the design of DERTS. A tool named GenERTiCA, which generates source code from UML diagrams and also weaves aspect adaptations, has been developed to support such MDD/AO approach. This paper presents results regarding the use of GenERTiCA to generate code and implement aspects (from a high-level framework of aspect) for the RT-FemtoJava platform, a RTSJ-based and optimized Java platform for DERTS.",Aspect-Orientation; Code Generation; Distributed computing; Distributed Real-Time Embedded Systems; Embedded system; Hardware; Java; Object oriented modeling; Real time systems; Skeleton; Software performance; UML modeling; Unified modeling language; Weaving,GenERTiCA: A Tool for Code Generation and Aspects Weaving,x,,,,,,,,,NO,,
S32,1,Forward,conferencePaper,2020,"Askarpour, Mehrnoosh; Lestingi, Livia; Buran, Federico; Rossi, Matteo; Vicentini, Federico",2020 IEEE International Conference on Human-Machine Systems (ICHMS),10.1109/ICHMS49158.2020.9209450,,"In human-robot collaboration (HRC), humans and robots share the same workspace while executing hybrid tasks. Their close proximity imposes higher possibility of contacts that could potentially be dangerous. Hence, physical safety and risk analysis become of utmost importance during system design.In this paper, we propose a tool-supported interactive technique that facilitates the design of safe HRC systems for designers by performing iterative risk analysis and suggesting risk reduction measures (RRMs) to mitigate unsafe physical contacts.",Collaboration; Hazards; Human Robot collaboration; Physical Safety; Risk analysis; Risk Assessment; Risk Reduction measure; Robots; Tools; Unified modeling language,Model-driven Risk Analysis for the Design of Safe Collaborative Robotic Applications,x,,,,,,,,,NO,,
S320,1,Backward,journalArticle,2004,"Zhang, Yuefeng",IEEE Software,10.1109/MS.2004.1331307,,"A new software development process called test-driven modeling applies the Extreme Programming test-driven paradigm in a model-driven development environment. (The basis of this article is a project in Motorola's iDEN division that is extending and migrating a large legacy telecommunication system to new platforms using TDM.) This process involves automatic testing through simulation and using executable models as living software system architecture documents. In TDM, we use the same message sequence charts (MSCs) for both system analysis (or design documents) and unit test cases. Similarly, we use the same high-level modeling diagrams for both automatic code generation and living software architecture documents to guide the system's detailed implementation in later phases. Practical results show that developers can effectively apply TDM to large projects with high productivity and quality in terms of the number of code defects.",automatic code generation; Automatic programming; Automatic testing; Computer architecture; extreme programming; model-driven development; Productivity; Software architecture; Software systems; Software testing; System testing; test-driven development; Text analysis; Time division multiplexing,Test-driven modeling for model-driven development,,,,x,,,,,,NO,,
S321,1,Backward,journalArticle,2003,"Gorton, I.; Liu, A.; Brebner, P.",Computer,10.1109/MC.2003.1185217,,"The adoption of commercial off-the-shelf middleware products across the software industry has gathered significant momentum. While COTS middleware products demonstrably solve many problems, their adoption and use are by no means straightforward. Competition among products that apparently offer identical services complicates the COTS middleware selection process, especially when competing products provide different implementations of standards-based technologies, such as CORBA and Java 2 Enterprise Edition. The article discusses the Middleware Technology Evaluation project, which represents a significant attempt to provide rigorously derived, in-depth evaluations of technology for use by middleware product adopters.",Application software; Business; Computer industry; Containers; Costs; Java; Laboratories; Middleware; Packaging; Testing,Rigorous evaluation of COTS middleware technology,,,,x,,,,,,NO,,
S322,1,Backward,conferencePaper,2016,"Ishio, Takashi; Kula, Raula Gaikovina; Kanda, Tetsuya; German, Daniel M.; Inoue, Katsuro",2016 IEEE/ACM 13th Working Conference on Mining Software Repositories (MSR),,,"A software product is often dependent on a large number of third-party components.To assess potential risks, such as security vulnerabilities and license violations, a list of components and their versions in a product is important for release engineers and security analysts.Since such a list is not always available, a code comparison technique named Software Bertillonage has been proposed to test whether a product likely includes a copy of a particular component or not.Although the technique can extract candidates of reused components, a user still has to manually identify the original components among the candidates.In this paper, we propose a method to automatically select the most likely origin of components reused in a product, based on an assumption that a product tends to include an entire copy of a component rather than a partial copy.More concretely, given a Java product and a repository of jar files of existing components, our method selects jar files that can provide Java classes to the product in a greedy manner.To compare the method with the existing technique, we have conducted an evaluation using randomly created jar files including up to 1,000 components.The Software Bertillonage technique reports many candidates; the precision and recall are 0.357 and 0.993, respectively.Our method reports a list of original components whose precision and recall are 0.998 and 0.997.",Cloning; Java; Libraries; Licenses; origin analysis; reverse engineering; Security; Software reusability; Software reuse,Software Ingredients: Detection of Third-Party Component Reuse in Java Software Release,,,,,x,,,,,NO,,
S323,1,Backward,journalArticle,2016,"Dietrich, Jens; Jezek, Kamil; Brada, Premek",Empirical Software Engineering,10.1007/s10664-015-9389-1,,"Real-world programs are neither monolithic nor static—they are constructed using platform and third party libraries, and both programs and libraries continuously evolve in response to change pressure. In case of the Java language, rules defined in the Java Language and Java Virtual Machine Specifications define when library evolution is safe. These rules distinguish between three types of compatibility—binary, source and behavioural. We claim that some of these rules are counter intuitive and not well-understood by many developers. We present the results of a survey where we quizzed developers about their understanding of the various types of compatibility. 414 developers responded to our survey. We find that while most programmers are familiar with the rules of source compatibility, they generally lack knowledge about the rules of binary and behavioural compatibility. This can be problematic when organisations switch from integration builds to technologies that require dynamic linking, such as OSGi. We have assessed the gravity of the problem by studying how often linkage-related problems are referenced in issue tracking systems, and find that they are common.",,"What Java developers know about compatibility, and why this matters",x,,,,,,,,,NO,,
S324,1,Backward,conferencePaper,2014,"Abal, Iago; Brabrand, Claus; Wasowski, Andrzej",Proceedings of the 29th ACM/IEEE international conference on Automated software engineering,10.1145/2642937.2642990,,"Feature-sensitive verification pursues effective analysis of the exponentially many variants of a program family. However, researchers lack examples of concrete bugs induced by variability, occurring in real large-scale systems. Such a collection of bugs is a requirement for goal-oriented research, serving to evaluate tool implementations of feature-sensitive analyses by testing them on real bugs. We present a qualitative study of 42 variability bugs collected from bug-fixing commits to the Linux kernel repository. We analyze each of the bugs, and record the results in a database. In addition, we provide self-contained simplified C99 versions of the bugs, facilitating understanding and tool evaluation. Our study provides insights into the nature and occurrence of variability bugs in a large C software system, and shows in what ways variability affects and increases the complexity of software bugs.",bugs; feature interactions; linux; software variability,42 variability bugs in the linux kernel: a qualitative analysis,x,,,,,,,,,NO,,
S325,1,Backward,journalArticle,2018,"Black, Paul E.",Journal of Research of the National Institute of Standards and Technology,10.6028/jres.123.005,,"The Software Assurance Reference Dataset (SARD) is a growing collection of over             170 000 programs with precisely located bugs. The programs are in C, C++, Java, PHP, and             C# and cover more than 150 classes of weaknesses, such as SQL injection, cross-site             scripting (XSS), buffer overflow, and use of a broken cryptographic algorithm. Most are             automatically generated synthetic programs, each a few pages of code long, but there are             also over 7000 full-sized applications. In addition, SARD has production code and has             hundreds of cases written by hand. The code is typical quality. It is neither pristine             nor obfuscated. Many cases have corresponding “good” cases, in which weaknesses are             fixed, to test for false positives.",,A Software Assurance Reference Dataset: Thousands of Programs With Known Bugs,x,,,,,,,,,NO,,
S326,1,Backward,conferencePaper,2010,"D'Ambros, Marco; Bacchelli, Alberto; Lanza, Michele",2010 10th International Conference on Quality Software,10.1109/QSIC.2010.58,,"The presence of design flaws in a software system has a negative impact on the quality of the software, as they indicate violations of design practices and principles, which make a software system harder to understand, maintain, and evolve. Software defects are tangible effects of poor software quality. In this paper we study the relationship between software defects and a number of design flaws. We found that, while some design flaws are more frequent, none of them can be considered more harmful with respect to software defects. We also analyzed the correlation between the introduction of new flaws and the generation of defects.",Computer bugs; Correlation; Couplings; Data mining; Joining processes; Software defects; Software quality and design; Software systems,On the Impact of Design Flaws on Software Defects,x,,,,,,,,,NO,,
S327,1,Backward,journalArticle,2015,"Doychev, Goran; Köpf, Boris; Mauborgne, Laurent; Reineke, Jan",ACM Transactions on Information and System Security,10.1145/2756550,,"We present CacheAudit, a versatile framework for the automatic, static analysis of cache side channels. CacheAudit takes as input a program binary and a cache configuration and derives formal, quantitative security guarantees for a comprehensive set of side-channel adversaries, namely, those based on observing cache states, traces of hits and misses, and execution times. Our technical contributions include novel abstractions to efficiently compute precise overapproximations of the possible side-channel observations for each of these adversaries. These approximations then yield upper bounds on the amount of information that is revealed. In case studies, we apply CacheAudit to binary executables of algorithms for sorting and encryption, including the AES implementation from the PolarSSL library, and the reference implementations of the finalists of the eSTREAM stream cipher competition. The results we obtain exhibit the influence of cache size, line size, associativity, replacement policy, and coding style on the security of the executables and include the first formal proofs of security for implementations with countermeasures such as preloading and data-independent memory access patterns.",caches; Side-channel attacks,CacheAudit: A Tool for the Static Analysis of Cache Side Channels,x,,,,,,,,,NO,,
S328,1,Backward,conferencePaper,2018,"Fan, Lingling; Su, Ting; Chen, Sen; Meng, Guozhu; Liu, Yang; Xu, Lihua; Pu, Geguang; Su, Zhendong",2018 IEEE/ACM 40th International Conference on Software Engineering (ICSE),10.1145/3180155.3180222,,"Mobile apps have become ubiquitous. For app developers, it is a key priority to ensure their apps' correctness and reliability. However, many apps still suffer from occasional to frequent crashes, weakening their competitive edge. Large-scale, deep analyses of the characteristics of real-world app crashes can provide useful insights to guide developers, or help improve testing and analysis tools. However, such studies do not exist - this paper fills this gap. Over a four-month long effort, we have collected 16,245 unique exception traces from 2,486 open-source Android apps, and observed that framework-specific exceptions account for the majority of these crashes. We then extensively investigated the 8,243 framework-specific exceptions (which took six person-months): (1) identifying their characteristics (e.g., manifestation locations, common fault categories), (2) evaluating their manifestation via state-of-the-art bug detection techniques, and (3) reviewing their fixes. Besides the insights they provide, these findings motivate and enable follow-up research on mobile apps, such as bug detection, fault localization and patch generation. In addition, to demonstrate the utility of our findings, we have optimized Stoat, a dynamic testing tool, and implemented ExLocator, an exception localization tool, for Android apps. Stoat is able to quickly uncover three previously-unknown, confirmed/fixed crashes in Gmail and Google+; ExLocator is capable of precisely locating the root causes of identified exceptions in real-world apps. Our substantial dataset is made publicly available to share with and benefit the community.",Androids; Computer bugs; Empirical study; Google; Humanoid robots; mobile app bugs; static analysis; testing; Testing; Tools,Large-Scale Analysis of Framework-Specific Exceptions in Android Apps,x,,,,,,,,,NO,,
S329,1,Backward,conferencePaper,2017,"Di Franco, Anthony; Guo, Hui; Rubio-González, Cindy",2017 32nd IEEE/ACM International Conference on Automated Software Engineering (ASE),10.1109/ASE.2017.8115662,,"Numerical software is used in a wide variety of applications including safety-critical systems, which have stringent correctness requirements, and whose failures have catastrophic consequences that endanger human life. Numerical bugs are known to be particularly difficult to diagnose and fix, largely due to the use of approximate representations of numbers such as floating point. Understanding the characteristics of numerical bugs is the first step to combat them more effectively. In this paper, we present the first comprehensive study of real-world numerical bugs. Specifically, we identify and carefully examine 269 numerical bugs from five widely-used numerical software libraries: NumPy, SciPy, LAPACK, GNU Scientific Library, and Elemental. We propose a categorization of numerical bugs, and discuss their frequency, symptoms and fixes. Our study opens new directions in the areas of program analysis, testing, and automated program repair of numerical software, and provides a collection of real-world numerical bugs.",Computer bugs; Libraries; Maintenance engineering; Roundoff errors; Semantics; Software; Tools,A comprehensive study of real-world numerical bug characteristics,x,,,,,,,,,NO,,
S33,1,Forward,conferencePaper,2020,"Lestingi, Livia; Askarpour, Mehrnoosh; Bersani, Marcello M.; Rossi, Matteo",Software Engineering and Formal Methods,10.1007/978-3-030-58768-0_17,,"We present a model-driven approach for the creation of formally verified scenarios involving human-robot interaction in healthcare settings. The work offers an innovative take on the application of formal methods to human modeling, as it incorporates physiology-related aspects. The model, based on the formalism of Hybrid Automata, includes a stochastic component to capture the variability of human behavior, which makes it suitable for Statistical Model Checking. The toolchain is meant to be accessible to a wide range of professional figures. Therefore, we have laid out a user-friendly representation format for the scenario, from which the full formal model is automatically generated and verified through the Uppaal tool. The outcome is an estimation of the probability of success of the mission, based on which the user can refine the model if the result is not satisfactory.",Healthcare robotics; Human-robot interaction; Model-driven approach; Service robots; Statistical Model Checking,Formal Verification of Human-Robot Interaction in Healthcare Scenarios,x,,,,,,,,,NO,,
S330,1,Backward,conferencePaper,2007,"Hovemeyer, David; Pugh, William",Proceedings of the 7th ACM SIGPLAN-SIGSOFT workshop on Program analysis for software tools and engineering,10.1145/1251535.1251537,,"In the summer of 2006, the FindBugs project was challenged to improve the null pointer analysis in FindBugs so that we could find more null pointer bugs. In particular, we were challenged to try to do as well as a publicly available analysis by Reasoning, Inc on version 4.1.24 of Apache Tomcat. Reasoning's report is a result of running their own static analysis tool and using manual auditing to remove false positives. Reasoning reported a total of 9 null pointer warnings in Tomcat 4.1.24, of which only 2 were reported by FindBugs 1.0. While we wanted to improve the analysis in FindBugs, we wanted to retain our current low level of false positives. As of result of the work presented in this paper, FindBugs now reports 4 of the 9 warnings in Tomcat, shows that one of the warnings reported by Reasoning is a false positive, and classifies the remaining 4 as being dependent on the feasibility of a particular path, which cannot be easier ascertained by a local examination of the source code. Moreover, we found 24 additional null pointer bugs in Tomcat that had been missed by Reasoning, and overall doubled the number of null pointer bugs found by FindBugs while improving the quality and significance of reported defects.",bug patterns; bugs; FindBugs; Java; null pointers; software quality; static analysis,"Finding more null pointer bugs, but not too many",x,,,,,,,,,NO,,
S331,1,Backward,journalArticle,2012,"Godefroid, Patrice; Levin, Michael Y.; Molnar, David",Communications of the ACM,10.1145/2093548.2093564,,SAGE has had a remarkable impact at Microsoft.,,SAGE: whitebox fuzzing for security testing,x,,,,,,,,,NO,,
S332,1,Backward,conferencePaper,2018,"Kate, Sayali; Ore, John-Paul; Zhang, Xiangyu; Elbaum, Sebastian; Xu, Zhaogui",Proceedings of the 2018 26th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering,10.1145/3236024.3236035,,"Program variables used in robotic and cyber-physical systems often have implicit physical units that cannot be determined from their variable types. Inferring an abstract physical unit type for variables and checking their physical unit type consistency is of particular importance for validating the correctness of such systems. For instance, a variable with the unit of ‘meter’ should not be assigned to another variable with the unit of ‘degree-per-second’. Existing solutions have various limitations such as requiring developers to annotate variables with physical units and only handling variables that are directly or transitively used in popular robotic libraries with known physical unit information. We observe that there are a lot of physical unit hints in these softwares such as variable names and specific forms of expressions. These hints have uncertainty as developers may not respect conventions. We propose to model them with probability distributions and conduct probabilistic inference. At the end, our technique produces a unit distribution for each variable. Unit inconsistencies can then be detected using the highly probable unit assignments. Experimental results on 30 programs show that our technique can infer units for 159.3% more variables compared to the state-of-the-art with more than 88.7% true positives, and inconsistencies detection on 90 programs shows that our technique reports 103.3% more inconsistencies with 85.3% true positives.",abstract type inference; dimensional analysis; physical units; probabilistic inference; robotic systems; static analysis; unit consistency,Phys: probabilistic physical unit assignment and inconsistency detection,x,,,,,,,,,NO,,
S333,1,Backward,conferencePaper,2014,"Kerzazi, Noureddine; Khomh, Foutse; Adams, Bram",2014 IEEE International Conference on Software Maintenance and Evolution,10.1109/ICSME.2014.26,,"To detect integration errors as quickly as possible, organizations use automated build systems. Such systems ensure that (1) the developers are able to integrate their parts into an executable whole, (2) the testers are able to test the built system, (3) and the release engineers are able to leverage the generated build to produce the upcoming release. The flipside of automated builds is that any incorrect change can break the build, and hence testing and releasing, and (even worse) block other developers from continuing their work, delaying the project even further. To measure the impact of such build breakage, this empirical study analyzes 3,214 builds produced in a large software company over a period of 6 months. We found a high ratio of build breakage (17.9%), and also quantified the cost of such build breakage as more than 336.18 man-hours. Interviews with 28 software engineers from the company helped to understand the circumstances under which builds are broken and the effects of build breakages on the collaboration and coordination of teams. We quantitatively investigated the main factors impacting build breakage and found that build failures correlate with the number of simultaneous contributors on branches, the type of work items performed on a branch, and the roles played by the stakeholders of the builds (for example developers vs. Integrators).",Automated Builds; Collaboration; Companies; Context; Data Mining; Empirical Software Engineering; Interviews; Software; Software Quality; Statistical analysis,Why Do Automated Builds Break? An Empirical Study,x,,,,,,,,,NO,,
S334,1,Backward,conferencePaper,2010,"Sahoo, Swarup Kumar; Criswell, John; Adve, Vikram",2010 ACM/IEEE 32nd International Conference on Software Engineering,10.1145/1806799.1806870,,"Reproducing bug symptoms is a prerequisite for performing automatic bug diagnosis. Do bugs have characteristics that ease or hinder automatic bug diagnosis? In this paper, we conduct a thorough empirical study of several key characteristics of bugs that affect reproducibility at the production site. We examine randomly selected bug reports of six server applications and consider their implications on automatic bug diagnosis tools. Our results are promising. From the study, we find that nearly 82% of bug symptoms can be reproduced deterministically by re-running with the same set of inputs at the production site. We further find that very few input requests are needed to reproduce most failures; in fact, just one input request after session establishment suffices to reproduce the failure in nearly 77% of the cases. We describe the implications of the results on reproducing software failures and designing automated diagnosis tools for production runs.",bug characteristics; bug reports; Computer bugs; Databases; network servers; Production; Protocols; Reliability; Servers; Software; testing,An empirical study of reported bugs in server software with implications for automated bug diagnosis,x,,,,,,,,,NO,,
S335,1,Backward,conferencePaper,2016,"Miné, Antoine; Mauborgne, Laurent; Rival, Xavier; Feret, Jerome; Cousot, Patrick; Kästner, Daniel; Wilhelm, Stephan; Ferdinand, Christian",8th European Congress on Embedded Real Time Software and Systems (ERTS 2016),,,"We present an extension of Astrée to concurrent C software. Astrée is a sound static analyzer for run-time errors previously limited to sequential C software. Our extension employs a scalable abstraction which covers all possible thread interleavings, and soundly reports all run-time errors and data races: when the analyzer does not report any alarm, the program is proven free from those classes of errors. We show how this extension is able to support a variety of operating systems (such as POSIX threads, ARINC 653, OSEK/AUTOSAR) and report on experimental results obtained on concurrent software from different domains, including large industrial software.",,Taking Static Analysis to the Next Level: Proving the Absence of Run-Time Errors and Data Races with Astrée,,,,,x,,,,,NO,,
S336,1,Backward,conferencePaper,2015,"Neron, Pierre; Tolmach, Andrew; Visser, Eelco; Wachsmuth, Guido",Programming Languages and Systems,10.1007/978-3-662-46669-8_9,,"We describe a language-independent theory for name binding and resolution, suitable for programming languages with complex scoping rules including both lexical scoping and modules. We formulate name resolution as a two-stage problem. First a language-independent scope graph is constructed using language-specific rules from an abstract syntax tree. Then references in the scope graph are resolved to corresponding declarations using a language-independent resolution process. We introduce a resolution calculus as a concise, declarative, and languageindependent specification of name resolution. We develop a resolution algorithm that is sound and complete with respect to the calculus. Based on the resolution calculus we develop language-independent definitions of α-equivalence and rename refactoring. We illustrate the approach using a small example language with modules. In addition, we show how our approach provides a model for a range of name binding patterns in existing languages.",Abstract Syntax Tree; Binding Pattern; Code Completion; Resolution Algorithm; Visibility Policy,A Theory of Name Resolution,x,,,,,,,,,NO,,
S337,1,Backward,conferencePaper,2012,"Pfeiffer, Rolf-Helge; Wąsowski, Andrzej",Model Driven Engineering Languages and Systems,10.1007/978-3-642-33666-9_12,,"Contemporary software systems combine many artifacts specified in various modeling and programming languages, domainspecific and general purpose as well. Since multi-language systems are so widespread, working on them calls for tools with cross-language support mechanisms such as (1) visualization, (2) static checking, (3) navigation, and (4) refactoring of cross-language relations. We investigate whether these four mechanisms indeed improve efficiency and quality of development of multi-language systems. We run a controlled experiment in which 22 participants perform typical software evolution tasks on the JTrac web application using a prototype tool implementing these mechanisms. The results speak clearly for integration of cross-language support mechanisms into software development tools, and justify research on automatic inference, manipulation and handling of cross-language relations.",Error Marker; Experienced Developer; Java Code; Source Code; Static Check,Cross-Language Support Mechanisms Significantly Aid Software Development,x,,,,,,,,,NO,,
S338,1,Backward,conferencePaper,2018,"Ratti, Nisha; Kaur, Parminder",Advances in Computer and Computational Sciences,10.1007/978-981-10-3773-3_33,,"Component-based approach has been used for programming widely. Some problems creep up as softwares are developed using commercial-off-the-shelf components (COTS). Important issues related to component-based development has been addressed in this paper. As COTS components are used for developing software, there is a problem of coupling and cohesion. Another problem to be handled is to track the changes made in the source code during the development. Different available tools for the same purposes are studied and analysed. It is found that there is a need to design a tool which can manage all the already discussed problems in an efficient manner. The proposed tool will try to give the solution in order to manage the configuration of the system efficiently.",Code dependencies; Component; Component-Based systems; Configuration management; Version control system,A Conceptual Framework for Analysing the Source Code Dependencies,x,,,,,,,,,NO,,
S339,1,Backward,journalArticle,2005,"Rescorla, E.",IEEE Security Privacy,10.1109/MSP.2005.17,,"Despite the large amount of effort that goes toward finding and patching security holes, the available data does not show a clear improvement in software quality as a result. This article aims to measure the effect of vulnerability finding. Any attempt to measure this kind of effect is inherently rough, depending as it does on imperfect data and several simplifying assumptions. Because I'm looking for evidence of usefulness, where possible, I bias such assumptions in favor of a positive result - explicitly calling out those assumptions biased in the opposite direction. Thus, the analysis in this article represents the best-case scenario, consistent with the data and my ability to analyze it, for the vulnerability finding's usefulness",blackhat; Computer security; Costs; Data privacy; Data security; Information security; Large-scale systems; Packaging; software patches; Software quality; Solid modeling; vulnerability disclosure; whitehat,Is finding security holes a good idea?,,,,x,,,,,,NO,,
S34,1,Forward,journalArticle,2019,"Amaya, Acosta; Alonso, Gustavo",,,https://repositorio.unal.edu.co/handle/unal/76863,"Una de las tareas fundamentales que debe poder ejecutar un robot móvil es la navegación autónoma de su entorno de trabajo, para lo que se requiere de un modelo del entorno o mapa y un método para estimar la localización en éste. Sin embargo son numerosas las situaciones en las que no se dispone, a priori, de una representación del entorno, por ejemplo en labores de búsqueda, rescate, exploración planetaria, exploración oceánica y minería subterránea.  En tales circunstancias se deberán resolver de manera simultánea ambos problemas, la localización y el mapeo. En efecto, la estimación de la localización requiere de un mapa, y a su vez, para elaborar un mapa es necesario establecer una localización con relación a un modelo. La solución simultánea de estos dos problemas se conoce en robótica como SLAM (Simultaneous Localization and Mapping).  Desde su formulación hace más de treinta años, la comunidad científica vinculada a la robótica ha invertido esfuerzo y energía en la solución del SLAM. En la actualidad se considera un componente fundamental de los sistemas robóticos, permitiéndoles realizar tareas más complejas y por tanto, otorgándoles mayores niveles de autonomía.  Si bien el SLAM bidimensional para entornos interiores de pequeña escala se  considera un problema resuelto con el que se obtienen resultados consistentes, una vez se extiende a la estimación y reconstrucción tridimensional o a entornos de grandes dimensiones, nuevos retos de investigación surgen de inmediato.  Para el caso particular del SLAM tridimensional con sensores visuales, algunos de los nuevos problemas que deben ser resueltos son: mayor complejidad y costo computacional debido al gran volumen de datos a procesar, errores debidos a la baja resolución de los sensores, cambios de iluminación en el entorno, superficies con falta de textura e imágenes borrosas por movimientos ápidos de la cámara.  En esta tesis se adelanta un estudio sistemático y riguroso del SLAM, desde su formulación y métodos de solución, hasta la evaluación de algunos de los algoritmos SLAM de código abierto más recientes. De manera particular se aborda el problema del SLAM monocular en tiempo real y se conducen experimentos en entornos interiores con un sistema robótico especialmente diseñado para tal fin. Las principales contribuciones de este trabajo son:   - El estudio sistemático y exhaustivo del SLAM, desde su formulación hasta los métodos de solución más representativos (Capítulo 2).  - La formulación de un método de evaluación de los algoritmos SLAM con base en dos métricas (MeC y MoC) que consideran la calidad de los mapas producidos (Capítulo 3).  - El diseño y construcción de un sistema robótico totalmente compatible con ROS (Robot Operating System) para la validación experimental conducida en esta tesis y la investigación y desarrollo de aplicaciones (Capítulo 3).  - El estudio riguroso de los algoritmos visual SLAM que hacen parte del estado del arte actual y, de manera particular, los métodos relativos a los problemas fM (Structure from Motion) y el SLAM monocular en tiempo real (Capítulos 4 y 5).",,SLAM Monocular en tiempo real,,,x,,x,,,,,NO,,
S340,1,Backward,conferencePaper,2017,"Santos, André; Cunha, Alcino; Macedo, Nuno; Arrais, Rafael; dos Santos, Filipe Neves",2017 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS.2017.8206237,,"The Robot Operating System (ROS) is nowadays one of the most popular frameworks for developing robotic applications. To ensure the (much needed) dependability and safety of such applications we forecast an increasing demand for ROS-specific coding standards, static analyzers, and tools alike. Unfortunately, the development of such standards and tools can be hampered by ROS modularity and configurability, namely the substantial number of primitives (and respective variants) that must, in principle, be considered. To quantify the severity of this problem, we have mined a large number of existing ROS packages to understand how its primitives are used in practice, and to determine which combinations of primitives are most popular. This paper presents and discusses the results of this study, and hopefully provides some guidance for future standardization efforts and tool developers.",C++ languages; Robots; Runtime; Software; Standards; Tools,Mining the usage patterns of ROS primitives,,,,,,,,x,,NO,,
S341,1,Backward,conferencePaper,2015,"Vasilescu, Bogdan; Yu, Yue; Wang, Huaimin; Devanbu, Premkumar; Filkov, Vladimir",Proceedings of the 2015 10th Joint Meeting on Foundations of Software Engineering,10.1145/2786805.2786850,,"Software processes comprise many steps; coding is followed by building, integration testing, system testing, deployment, operations, among others. Software process integration and automation have been areas of key concern in software engineering, ever since the pioneering work of Osterweil; market pressures for Agility, and open, decentralized, software development have provided additional pressures for progress in this area. But do these innovations actually help projects? Given the numerous confounding factors that can influence project performance, it can be a challenge to discern the effects of process integration and automation. Software project ecosystems such as GitHub provide a new opportunity in this regard: one can readily find large numbers of projects in various stages of process integration and automation, and gather data on various influencing factors as well as productivity and quality outcomes. In this paper we use large, historical data on process metrics and outcomes in GitHub projects to discern the effects of one specific innovation in process automation: continuous integration. Our main finding is that continuous integration improves the productivity of project teams, who can integrate more outside contributions, without an observable diminishment in code quality.",Continuous integration; GitHub; pull requests,Quality and productivity outcomes relating to continuous integration in GitHub,x,,,,,,,,,NO,,
S342,1,Backward,conferencePaper,2016,"Santos, André; Cunha, Alcino; Macedo, Nuno; Lourenço, Cláudio",2016 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS.2016.7759661,,"Robots are being increasingly used in safety-critical contexts, such as transportation and health. The need for flexible behavior in these contexts, due to human interaction factors or unstructured operating environments, led to a transition from hardware- to software-based safety mechanisms in robotic systems, whose reliability and quality is imperative to guarantee. Source code static analysis is a key component in formal software verification. It consists on inspecting code, often using automated tools, to determine a set of relevant properties that are known to influence the occurrence of defects in the final product. This paper presents HAROS, a generic, plug-in-driven, framework to evaluate code quality, through static analysis, in the context of the Robot Operating System (ROS), one of the most widely used robotic middleware. This tool (equipped with plug-ins for computing metrics and conformance to coding standards) was applied to several publicly available ROS repositories, whose results are also reported in the paper, thus providing a first overview of the internal quality of the software being developed in this community.",Context; Measurement; Safety; Service robots; Software; Standards,A framework for quality assessment of ROS repositories,,,,,,,,x,,NO,,
S343,1,Backward,journalArticle,2010,"Zhang, Hongyu; Kim, Sunghun",IEEE Software,10.1109/MS.2010.66,,"Quality control charts, especially c-charts, can help monitor software quality evolution for defects over time. c-charts of the Eclipse and Gnome systems showed that for systems experiencing active maintenance and updates, quality evolution is complicated and dynamic. The authors identify six quality evolution patterns and describe their implications. Quality assurance teams can use c-charts and patterns to monitor quality evolution and prioritize their efforts.",maintenance management; Monitoring; Quality assurance; Quality control; quality evolution; software engineering; software quality; Software quality; software quality assurance; statistical process control,Monitoring Software Quality Evolution for Defects,x,,,,,,,,,NO,,
S344,1,Backward,journalArticle,2003,"Zhao, Luyin; Elbaum, Sebastian",Journal of Systems and Software,10.1016/S0164-1212(02)00064-X,,"The open source development model has defied traditional software development practices by generating widely accepted products (e.g., Linux, Apache, Perl) while following unconventional principles such as the distribution of free source code and massive user participation. Those achievements have initiated and supported many declarations about the potential of the open source model to accelerate the development of reliable software. However, the pronouncements in favor or against this model have been usually argumentative, lacking of empirical evidence to support either position. Our work uses a survey to overcome those limitations. The study explores how software quality assurance is performed under the open source model, how it differs from more traditional software development models, and whether some of those differences could translate into practical advantages given the right circumstances. The findings indicate that open source has certainly introduced a new dimension in large-scale distributed software development. However, we also discovered that the potential of open source might not be exploitable under all scenarios. Furthermore, we found that many of the open source quality assurance activities are still evolving.",Open source; Quality assurance; Software development models; Survey,Quality assurance under the open source development model,,,,x,,,,,,NO,,
S345,1,Backward,conferencePaper,2014,"Adam, Sorin; Larsen, Morten; Jensen, Kjeld; Schultz, Ulrik Pagh","Simulation, Modeling, and Programming for Autonomous Robots",10.1007/978-3-319-11900-7_18,,"Safety is a key challenge in robotics, in particular for mobile robots operating in an open and unpredictable environment. To address the safety challenge, various software-based approaches have been proposed, but none of them provide a clearly specified and isolated safety layer. In this paper, we propose that safety-critical concerns regarding the robot software be explicitly declared separately from the main program, in terms of externally observable properties of the software. Concretely, we use a Domain-Specific Language (DSL) to declaratively specify a set of safety-related rules that the software must obey, as well as corresponding corrective actions that trigger when rules are violated. Our prototype DSL is integrated with ROS, is shown to be capable of specifying safety-related constraints, and is experimentally demonstrated to enforce safety behaviour in existing robot software. We believe our approach could be extended to other fields to similarly simplify safety certification.",Hardware Fault; Mobile Robot; Safety Rule; Test Node; Velocity Command,Towards Rule-Based Dynamic Safety Monitoring for Mobile Robots,x,,,,,,,,,NO,,
S346,1,Backward,conferencePaper,2015,"Anand, Abhishek; Knepper, Ross",Interactive Theorem Proving,10.1007/978-3-319-22102-1_3,,"We present ROSCoq, a framework for developing certified Coq programs for robots. ROSCoq subsystems communicate using messages, as they do in the Robot Operating System (ROS). We extend the logic of events to enable holistic reasoning about the cyber-physical behavior of robotic systems. The behavior of the physical world (e.g. Newton’s laws) and associated devices (e.g. sensors, actuators) are specified axiomatically. For reasoning about physics we use and extend CoRN’s theory of constructive real analysis. Instead of floating points, our Coq programs use CoRN’s exact, yet fast computations on reals, thus enabling accurate reasoning about such computations.As an application, we specify the behavior of an iRobot Create. Our specification captures many real world imperfections. We write a Coq program which receives requests to navigate to specific positions and computes appropriate commands for the robot. We prove correctness properties about this system. Using the ROSCoq shim, we ran the program on the robot and provide even experimental evidence of correctness.",Cyber-physical Systems (CPS); Hardware Agents; iRobot Create; Representable Real Numbers; Robot Operating System (ROS),ROSCoq: Robots Powered by Constructive Reals,x,,,,,,,,,NO,,
S347,1,Backward,bookSection,2004,"Behrmann, Gerd; David, Alexandre; Larsen, Kim G.","Formal Methods for the Design of Real-Time Systems: International School on Formal Methods for the Design of Computer, Communication, and Software Systems, Bertinora, Italy, September 13-18, 2004, Revised Lectures",,,"This is a tutorial paper on the tool Uppaal. Its goal is to be a short introduction on the flavor of timed automata implemented in the tool, to present its interface, and to explain how to use the tool. The contribution of the paper is to provide reference examples and modeling patterns.",Critical Section; Integer Variable; Liveness Property; Reachable State; Safety Property,A Tutorial on Uppaal,,,,x,x,,,,,NO,,
S348,1,Backward,journalArticle,2004,"Barbuti, Roberto; Tesei, Luca",Acta Informatica,10.1007/s00236-003-0135-6,,"We propose an extension to the formalism of timed automata by allowing urgent transitions. An urgent transition is a transition which must be taken within a ﬁxed time interval from its enabling time and it has higher priority than other non-urgent transitions enabled in the same state. We give a set of rules formally describing the behavior of urgent transitions and we show that, from a language theoretic point of view, the addition of urgency does not improve the expressive power of timed automata. From a speciﬁcation point of view, the use of urgent transitions allows shorter and clear speciﬁcations of behaviors involving urgency and priority. We use timed automata with urgent transitions for specifying a multicast protocol for mobile computing.",,Timed automata with urgent transitions,,,,x,,,,,,NO,,
S35,1,Forward,conferencePaper,2020,"Pittou, Maria; Rahonis, George",Coordination Models and Languages,10.1007/978-3-030-50029-0_18,,"We study formal modelling of architectures applied on parametric component-based systems consisting of an unknown number of instances of each component. Architecture modelling is achieved by means of logics. We introduce an extended propositional interaction logic and investigate its first-order level which serves as a formal language for the interactions of parametric systems. Our logic effectively describes the execution order of interactions which is a main feature in several important architectures. We state the decidability of equivalence, satisfiability, and validity of first-order extended interaction logic formulas, and provide several examples of formulas describing well-known architectures.",Architecture modelling; First-order extended interaction logic; Parametric component-based systems,Architecture Modelling of Parametric Component-Based Systems,x,,,,,,,,,NO,,
S350,1,Backward,conferencePaper,2011,"Cowley, Anthony; Taylor, Camillo J.",2011 IEEE/RSJ International Conference on Intelligent Robots and Systems,10.1109/IROS.2011.6095028,,"The management of finite resources is central to many robot behaviors. Some robotic systems must maintain invariants regarding the disposition of feet for balancing, others have grippers for manipulating their environments, while yet others must respect strict rules governing the usage of objects in the environment. Yet the specifics of such resource management responsibilities are almost universally locked behind opaque controllers whose lack of type information greatly impedes rigorous static analysis. We present an application of dependent type theory and linear logic for the static analysis of robot behavior programs that manage both robot and environment state, with a worked assembly task example. This approach offers static, formal guarantees with respect to safety requirements attached to primitive actions, as well as introspection of expected state at each step of a scripted sequence of actions allowing for the automatic generation of dynamic, sensor-based, runtime verification of successful execution.",Assembly; Context; Grippers; Manipulators; Robot kinematics; Writing,Towards language-based verification of robot behaviors,x,,,,,,,,,NO,,
S351,1,Backward,conferencePaper,2011,"Weißmann, Markus; Bedenk, Stefan; Buckl, Christian; Knoll, Alois",Model Checking Software,10.1007/978-3-642-22306-8_11,,"Modern production plants are highly automated complex systems consisting of several robots and other working machines. Errors leading to damage and stop of production are extremely expensive and must be avoided by all means. Hence, the state of practice is to test control programs in advance which implies high effort and comes with high costs. To increase the confidence into the control systems and to reduce the necessary effort, this paper proposes to use model checking to verify certain properties. It presents a compiler that can transform industrial robot programs into PROMELA models. Since the statements of the robot programming language can not be mapped directly into PROMELA statements, we apply compiler optimization techniques to close the semantic gap. In case of a specification violation the trace is mapped to the original context so that the robot programmer can reconstruct the problem. As a case study we applied the tool to verify the absence of collisions and deadlocks. We were able to detect one deadlock in a car-body welding station with 9 robots, correct the program and verify the correctness of the resulting system.",abstract interpretation; distributed systems; industrial robots; model checking,Model Checking Industrial Robot Systems,x,,,,,,,,,NO,,
S352,1,Backward,journalArticle,2016,"Webster, Matt; Dixon, Clare; Fisher, Michael; Salem, Maha; Saunders, Joe; Koay, Kheng Lee; Dautenhahn, Kerstin; Saez-Pons, Joan",IEEE Transactions on Human-Machine Systems,10.1109/THMS.2015.2425139,,"It is essential for robots working in close proximity to people to be both safe and trustworthy. We present a case study on formal verification for a high-level planner/scheduler for the Care-O-bot, an autonomous personal robotic assistant. We describe how a model of the Care-O-bot and its environment was developed using Brahms, a multiagent workflow language. Formal verification was then carried out by automatically translating this model to the input language of an existing model checker. Four sample properties based on system requirements were verified. We then refined the environment model three times to increase its accuracy and the persuasiveness of the formal verification results. The first refinement uses a user activity log based on real-life experiments, but is deterministic. The second refinement uses the activities from the user activity log nondeterministically. The third refinement uses “conjoined activities” based on an observation that many user activities can overlap. The four samples properties were verified for each refinement of the environment model. Finally, we discuss the approach of environment model refinement with respect to this case study.",Autonomous systems; formal verification; human–robot teams; model checking; Navigation; Robot sensing systems; robotics; Software; TV; Watches,Toward Reliable Autonomous Robotic Assistants Through Formal Verification: A Case Study,x,,,,,,,,,NO,,
S353,1,Backward,journalArticle,2019,"Aldrich, Jonathan; Garlan, David; Kaestner, Christian; Le Goues, Claire; Mohseni-Kabir, Anahita; Ruchkin, Ivan; Samuel, Selva; Schmerl, Bradley; Timperley, Christopher Steven; Veloso, Manuela; Voysey, Ian; Biswas, Joydeep; Guha, Arjun; Holtz, Jarrett; Camara, Javier; Jamshidi, Pooyan",IEEE Software,10.1109/MS.2018.2885058,,"We developed model-based adaptation, an approach that leverages models of software and its environment to enable automated adaptation. The goal of our approach is to build long-lasting software systems that can effectively adapt to changes in their environment.",Adaptation models; Biological system modeling; Robot sensing systems; Robots; Software development; Task analysis,Model-Based Adaptation for Robotics Software,,,,,,,,,,,,
S354,1,Backward,conferencePaper,2018,"Alkadhi, Rana; Nonnenmacher, Manuel; Guzman, Emitza; Bruegge, Bernd","2018 IEEE 25th International Conference on Software Analysis, Evolution and Reengineering (SANER)",10.1109/SANER.2018.8330223,,"Developers make various decisions during software development. The rationale behind these decisions is of great importance during software evolution of long living software systems. However, current practices for documenting rationale often fall short and rationale remains hidden in the heads of developers or embedded in development artifacts. Further challenges are faced for capturing rationale in OSS projects; in which developers are geographically distributed and rely mostly on written communication channels to support and coordinate their activities. In this paper, we present an empirical study to understand how OSS developers discuss rationale in IRC channels and explore the possibility of automatic extraction of rationale elements by analyzing IRC messages of development teams. To achieve this, we manually analyzed 7,500 messages of three large OSS projects and identified all fine-grained elements of rationale. We evaluated various machine learning algorithms for automatically detecting and classifying rationale in IRC messages. Our results show that 1) rationale is discussed on average in 25% of IRC messages, 2) code committers contributed on average 54% of the discussed rationale, and 3) machine learning algorithms can detect rationale with 0.76 precision and 0.79 recall, and classify messages into finer-grained rationale elements with an average of 0.45 precision and 0.43 recall.",Data collection; Documentation; History; Machine learning algorithms; Software systems; Taxonomy,How do developers discuss rationale?,x,,,,,,,,,NO,,
S355,1,Backward,conferencePaper,2017,"Bhat, Manoj; Shumaiev, Klym; Biesdorf, Andreas; Hohenstein, Uwe; Matthes, Florian",Software Architecture,10.1007/978-3-319-65831-5_10,,"The need to explicitly document design decisions has been emphasized both in research and in industry. To address design concerns, software architects and developers implicitly capture design decisions in tools such as issue management systems. These design decisions are not explicitly labeled and are not integrated with the architecture knowledge management tools. Automatically extracting design decisions will aid architectural knowledge management tools to learn from the past decisions and to guide architects while making decisions in similar context. In this paper, we propose a two-phase supervised machine learning based approach to first, automatically detect design decisions from issues and second, to automatically classify the identified design decisions into different decision categories. We have manually analyzed and labeled more than 1,500 issues from two large open source repositories and have used this dataset for generating the machine learning models. We have made the dataset publicly available that will serve as a starting point for researchers to further reference and investigate the design decision detection and classification problem. Our evaluation shows that by using linear support vector machines, we can detect design decisions with 91.29% accuracy and classify them with an accuracy of 82.79%. This provides a quantitative basis for learning from past design decisions to support stakeholders in making better and informed design decisions.",Design decisions; Machine learning; Software architecture,Automatic Extraction of Design Decisions from Issue Management Systems: A Machine Learning Based Approach,x,,,,,,,,,NO,,
S356,1,Backward,bookSection,2007,"Brooks, Alex; Kaupp, Tobias; Makarenko, Alexei; Williams, Stefan; Orebäck, Anders",Software Engineering for Experimental Robotics,,,SummaryThis Chapter describes Orca: an open-source project which applies Component-Based Software Engineering principles to robotics. It provides the means for defining and implementing interfaces such that components developed independently are likely to be inter-operable. In addition it provides a repository of free re-useable components. Orca attempts to be widely applicable by imposing minimal design constraints. This Chapter describes lessons learned while using Orca and steps taken to improve the framework based on those lessons. Improvements revolve around middleware issues and the problems encountered while scaling to larger distributed systems. Results are presented from systems that were implemented.,,Orca: A Component Model and Repository,,,,,x,,,,,NO,,
S357,1,Backward,journalArticle,2009,"Brugali, Davide; Prassler, Erwin",IEEE Robotics Automation Magazine,10.1109/MRA.2009.932127,,"This special issue on software engineering (SE) for robotics captures a snapshot of current research issues and state-of-the-practice in robotic software development, a topic that has recently received increasing attention from the robotics community, thanks to some popular initiatives such as the Microsoft move into robotics.",Application software; Cognitive robotics; Control systems; Intelligent robots; Programming; Robot sensing systems; Robotics and automation; Software engineering; Software reusability; Software systems,Software engineering for robotics [From the Guest Editors],,,,,,,,x,,NO,,
S358,1,Backward,conferencePaper,2010,"Butler, Simon; Wermelinger, Michel; Yu, Yijun; Sharp, Helen",2010 14th European Conference on Software Maintenance and Reengineering,10.1109/CSMR.2010.27,,"Given the importance of identifier names and the value of naming conventions to program comprehension, we speculated in previous work whether a connection exists between the quality of identifier names and software quality. We found that flawed identifiers in Java classes were associated with source code found to be of low quality by static analysis. This paper extends that work in three directions. First, we show that the association also holds at the finer granularity level of Java methods. This in turn makes it possible to, secondly, apply existing method-level quality and readability metrics, and see that flawed identifiers still impact on this richer notion of code quality and comprehension. Third, we check whether the association can be used in a practical way. We adopt techniques used to evaluate medical diagnostic tests in order to identify which particular identifier naming flaws could be used as a light-weight diagnostic of potentially problematic Java source code for maintenance.",Complexity theory; Dictionaries; Guidelines; Java; programming; Readability metrics; Sensitivity; software metrics; software quality,Exploring the Influence of Identifier Names on Code Quality: An Empirical Study,x,,,,,,,,,NO,,
S359,1,Backward,conferencePaper,2017,"Ciccozzi, Federico; Di Ruscio, Davide; Malavolta, Ivano; Pelliccione, Patrizio; Tumova, Jana",2017 IEEE/ACM 39th International Conference on Software Engineering Companion (ICSE-C),10.1109/ICSE-C.2017.167,,"The production of software for robotic systems is often case-specific, without fully following established engineering approaches. Systematic approaches, methods, models, and tools are pivotal for the creation of robotic systems for real-world applications and turn-key solutions. Well-defined (software) engineering approaches are considered the ""make or break"" factor in the development of complex robotic systems. The shift towards well-defined engineering approaches will stimulate component supply-chains and significantly reshape the robotics marketplace. The goal of this technical briefing is to provide an overview on the state of the art and practice concerning solutions and open challenges in the engineering of software required to develop and manage robotic systems. Model-Driven Engineering (MDE) is discussed as a promising technology to raise the level of abstraction, promote reuse, facilitate integration, boost automation and promote early analysis in such a complex domain.",Automation; Model driven engineering; Model-Driven Engineering; Robot sensing systems; Robotics; Software engineering; Software Engineering; Systematics,Engineering the software of robotic systems,,,,,,,,,,,,
S36,1,Forward,conferencePaper,2020,"Karyoti, Vagia; Paraponiari, Paulina",Coordination Models and Languages,10.1007/978-3-030-50029-0_19,,"We introduce a weighted propositional configuration logic over a product valuation monoid. Our logic is intended to serve as a specification language for software architectures with quantitative features such as the average of all interactions’ costs of the architecture and the maximum cost among all costs occurring most frequently within a specific number of components in an architecture. We provide formulas of our logic which describe well-known architectures equipped with quantitative characteristics. Moreover, we prove an efficient construction of a full normal form which leads to decidability of equivalence of formulas in this logic.",Configuration logics; Product valuation monoids; Quantitative features; Software architectures; Weighted configuration logics,Weighted PCL over Product Valuation Monoids,x,,,,,,,,,NO,,
S360,1,Backward,conferencePaper,2003,"Clements, P.; Garlan, D.; Little, R.; Nord, R.; Stafford, J.","25th International Conference on Software Engineering, 2003. Proceedings.",10.1109/ICSE.2003.1201264,,"This lecture maps the concepts and templates explored in this tutorial with well-known architectural prescriptions, including the 4+1 approach of the Rational Unified Process, the Siemens Four Views approach, and the ANSI/IEEE-1471-2000 recommended best practice for documenting architectures for software-intensive systems. The lecture concludes by re-capping the highlights of the tutorial, and asking for feedback.",Computer architecture; Computer science; Design engineering; Documentation; Machine vision; Pattern recognition; Programming; Robustness; Software architecture; Software engineering,Documenting software architectures: views and beyond,,,,x,,,,,,NO,,
S361,1,Backward,conferencePaper,2011,"Cruzes, Daniela S.; Dyba, Tore",2011 International Symposium on Empirical Software Engineering and Measurement,10.1109/ESEM.2011.36,,"Thematic analysis is an approach that is often used for identifying, analyzing, and reporting patterns (themes) within data in primary qualitative research. 'Thematic synthesis' draws on the principles of thematic analysis and identifies the recurring themes or issues from multiple studies, interprets and explains these themes, and draws conclusions in systematic reviews. This paper conceptualizes the thematic synthesis approach in software engineering as a scientific inquiry involving five steps that parallel those of primary research. The process and outcome associated with each step are described and illustrated with examples from systematic reviews in software engineering.",Context; Data mining; Encoding; evidence-based and empirical software engineering; Organizations; research synthesis; secondary research; Software; Software engineering; systematic review; Systematics,Recommended Steps for Thematic Synthesis in Software Engineering,x,,,,,,,,,NO,,
S363,1,Backward,journalArticle,2019,"Estefo, Pablo; Simmonds, Jocelyn; Robbes, Romain; Fabry, Johan",Journal of Systems and Software,10.1016/j.jss.2019.02.024,,"ROS, the Robot Operating System, offers a core set of software for operating robots that can be extended by creating or using existing packages, making it possible to write robotic software that can be reused on different hardware platforms. With thousands of packages available per stable distribution, encapsulating algorithms, sensor drivers, etc., it is the de facto middleware for robotics. Like any software ecosystem, ROS must evolve in order to keep meeting the requirements of its users. In practice, packages may end up being abandoned between releases: no one may be available to update a package, or newer packages offer similar functionality. As such, we wanted to identify and understand the evolution challenges faced by the ROS ecosystem. In this article, we report our findings after interviewing 19 ROS developers in depth, followed by a focus group (4 participants) and an online survey of 119 ROS community members. We specifically focused on the issues surrounding package reuse and how to contribute to existing packages. To conclude, we discuss the implications of our findings, and propose five recommendations for overcoming the identified issues, with the goal of improving the health of the ROS ecosystem.",Package management; Robot Operating System; Software ecosystems,The Robot Operating System: Package reuse and community dynamics,,,,,,,,,,,,
S364,1,Backward,journalArticle,2018,"Harrison, William; Downs, Anthony; Schlenoff, Craig",AI Magazine,10.1609/aimag.v39i4.2795,,,,The Agile Robotics for Industrial Automation Competition,x,,,,,,,,,NO,,
S365,1,Backward,conferencePaper,2017,"Hofmeister, Johannes; Siegmund, Janet; Holt, Daniel V.","2017 IEEE 24th International Conference on Software Analysis, Evolution and Reengineering (SANER)",10.1109/SANER.2017.7884623,,"Developers spend the majority of their time comprehending code, a process in which identifier names play a key role. Although many identifier naming styles exist, they often lack an empirical basis and it is not quite clear whether short or long identifier names facilitate comprehension. In this paper, we investigate the effect of different identifier naming styles (letters, abbreviations, words) on program comprehension, and whether these effects arise because of their length or their semantics. We conducted an experimental study with 72 professional C# developers, who looked for defects in source-code snippets. We used a within-subjects design, such that each developer saw all three versions of identifier naming styles and we measured the time it took them to find a defect. We found that words lead to, on average, 19% faster comprehension speed compared to letters and abbreviations, but we did not find a significant difference in speed between letters and abbreviations. The results of our study suggest that defects in code are more difficult to detect when code contains only letters and abbreviations. Words as identifier names facilitate program comprehension and can help to save costs and improve software quality.",C# languages; Context; Psychology; Semantics; Software quality; Syntactics; Time measurement,Shorter identifier names take longer to comprehend,x,,,,,,,,,NO,,
S366,1,Backward,conferencePaper,2019,"Ingrand, Felix",2019 Third IEEE International Conference on Robotic Computing (IRC),10.1109/IRC.2019.00059,,"The consequences of autonomous systems software failures can be potentially dramatic. There is no need to darken the picture, but still, it seems unlikely that people, insurance companies and certification agencies will let autonomous systems fly or drive around without requiring their makers and programmers to prove that the most critical parts of the software are robust and reliable. This is already the case for aeronautic, rail transportation, nuclear plants, medical devices, etc. were software must be certified, which possibly involve its formal validation and verification (V&V). Moreover, autonomous systems go further and embed onboard deliberation functions. This is what make them really autonomous, but open new challenges. We propose to consider the overall problem of V&V of autonomous systems software and examine the current situation with respect to the various type of software used. In particular, we point out that the availability of formal models is rather different depending on the type of component considered. We distinguish these different cases and stress the areas where we think we need to focus our efforts as to improve the overall robustness of autonomous systems.",Automobiles; autonomous robots; Autonomous systems; formal methods; Mathematical model; robotics software; Robots; Safety; Software; Task analysis; validation and verification,Recent Trends in Formal Validation and Verification of Autonomous Robots Software,,,,,,,,x,,NO,,
S367,1,Backward,conferencePaper,2019,"Jamshidi, Pooyan; Cámara, Javier; Schmerl, Bradley; Käestner, Christian; Garlan, David",2019 IEEE/ACM 14th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS),10.1109/SEAMS.2019.00015,,"Modern cyber-physical systems (e.g., robotics systems) are typically composed of physical and software components, the characteristics of which are likely to change over time. Assumptions about parts of the system made at design time may not hold at run time, especially when a system is deployed for long periods (e.g., over decades). Self-adaptation is designed to find reconfigurations of systems to handle such run-time inconsistencies. Planners can be used to find and enact optimal reconfigurations in such an evolving context. However, for systems that are highly configurable, such planning becomes intractable due to the size of the adaptation space. To overcome this challenge, in this paper we explore an approach that (a) uses machine learning to find Pareto-optimal configurations without needing to explore every configuration and (b) restricts the search space to such configurations to make planning tractable. We explore this in the context of robot missions that need to consider task timeliness and energy consumption. An independent evaluation shows that our approach results in high-quality adaptation plans in uncertain and adversarial environments.","Adaptation models; Energy consumption; Machine learning; Machine learning, artificial intelligence, quantitative planning, self-adaptive systems, robotics systems; Planning; Robot sensing systems; Software",Machine Learning Meets Quantitative Planning: Enabling Self-Adaptation in Autonomous Robots,,,,,,,,,,,,
S368,1,Backward,journalArticle,2016,"Kalliamvakou, Eirini; Gousios, Georgios; Blincoe, Kelly; Singer, Leif; German, Daniel M.; Damian, Daniela",Empirical Software Engineering,10.1007/s10664-015-9393-5,,"With over 10 million git repositories, GitHub is becoming one of the most important sources of software artifacts on the Internet. Researchers mine the information stored in GitHub’s event logs to understand how its users employ the site to collaborate on software, but so far there have been no studies describing the quality and properties of the available GitHub data. We document the results of an empirical study aimed at understanding the characteristics of the repositories and users in GitHub; we see how users take advantage of GitHub’s main features and how their activity is tracked on GitHub and related datasets to point out misalignment between the real and mined data. Our results indicate that while GitHub is a rich source of data on software development, mining GitHub for research purposes should take various potential perils into consideration. For example, we show that the majority of the projects are personal and inactive, and that almost 40 % of all pull requests do not appear as merged even though they were. Also, approximately half of GitHub’s registered users do not have public activity, while the activity of GitHub users in repositories is not always easy to pinpoint. We use our identified perils to see if they can pose validity threats; we review selected papers from the MSR 2014 Mining Challenge and see if there are potential impacts to consider. We provide a set of recommendations for software engineering researchers on how to approach the data in GitHub.",,An in-depth study of the promises and perils of mining GitHub,x,,,,,,,,,NO,,
S369,1,Backward,conferencePaper,2018,"Le, Duc Minh; Link, Daniel; Shahbazian, Arman; Medvidovic, Nenad",2018 IEEE International Conference on Software Architecture (ICSA),10.1109/ICSA.2018.00027,,"Architecture is the set of principal design decisions about a software system. In practice, new architectural decisions are added and existing ones reversed or modified throughout a system's lifetime. Frequently, these decisions deviate from the architect's well-considered intent, and software systems regularly exhibit increased architectural decay as they evolve. The manifestations of such ill-considered design decisions are seen as “architectural smells”. To date, there has been no in-depth study of the characteristics or trends involving this phenomenon. Instead, when referring to architectural smells and their negative effects, both researchers and practitioners had to rely on folklore and their personal, inherently limited experience. In this paper, we report on the systematic step we have taken in investigating the nature and impact of architectural smells. We have selected a set of representative architectural smells from literature and analyzed their instances in 421 versions from 8 open-source software systems. We have (1) developed algorithms to automatically detect instances of multiple architectural smell types, and (2) analyzed relationships between the detected smells and the lists of issues reported in the systems' respective issue trackers. Our study shows that architectural smells have tangible negative consequences in the form of implementation issues as well as code commits requiring increased maintenance effort throughout a system's lifetime.",Architectural-Decay; Architectural-Smells; Computer architecture; Connectors; Couplings; Detection algorithms; Implementation-Issues; Software architecture; Software systems; Software-Maintenance,An Empirical Study of Architectural Decay in Open-Source Software,x,,,,,,,,,NO,,
S37,1,Forward,journalArticle,2020,"Pittou, Maria; Rahonis, George",arXiv:1905.05607 [cs],,http://arxiv.org/abs/1905.05607,"The design of complex software systems usually lies in multiple coordinating components with an unknown number of instances. For such systems a main challenge is modelling efficiently their architecture that determines the topology and the interaction principles among the components. To achieve well-founded design there is need to address the quantitative aspects of software architectures. In this paper we study the modelling problem of software architectures applied on parametric weighted component-based systems where the parameter is the number of instances of each component. For this, we introduce a weighted first-order extended interaction logic over a commutative semiring in order to serve as a modelling language for parametric quantitative architectures. We prove that the equivalence problem of formulas of that logic is decidable in the class (of subsemirings) of skew fields. Moreover, we show that our weighted logic can efficiently describe well-known parametric architectures with quantitative characteristics.",Computer Science - Logic in Computer Science,Modelling architectures of parametric weighted component-based systems,,,,,x,,,,,NO,,
S370,1,Backward,conferencePaper,2014,"Mirakhorli, Mehdi; Fakhry, Ahmed; Grechko, Artem; Wieloch, Matteusz; Cleland-Huang, Jane",Proceedings of the 22nd ACM SIGSOFT International Symposium on Foundations of Software Engineering,10.1145/2635868.2661671,,"The quality of a software architecture is largely dependent upon the underlying architectural decisions at the framework, tactic, and pattern levels. Decisions to adopt certain solutions determine the extent to which desired qualities such as security, availability, and performance are achieved in the delivered system. In this tool demo, we present our Eclipse plug-in named Archie as a solution for maintaining architectural qualities in the design and code despite long-term maintenance and evolution activities. Archie detects architectural tactics such as heartbeat, resource pooling, and role-based access control (RBAC) in the source code of a project; constructs traceability links between the tactics, design models, rationales and source code; and then uses these to monitor the environment for architecturally significant changes and to keep developers informed of underlying design decisions and their associated rationales.",Architecture; Degradation; Patterns; Tactics,"Archie: a tool for detecting, monitoring, and preserving architecturally significant code",x,,,,,,,,,NO,,
S371,1,Backward,conferencePaper,2015,"Mirakhorli, Mehdi; Cleland-Huang, Jane",2015 IEEE/ACM 12th Working Conference on Mining Software Repositories,10.1109/MSR.2015.44,,"Architectural qualities such as reliability, performance, and security, are often realized in a software system through the adoption of tactical design decisions such as the decision to use redundant processes, a heartbeat monitor, or a specific authentication mechanism. Such decisions are critical for delivering a system that meets its quality requirements. Despite the stability of high-level decisions, our analysis has shown that tactic-related classes tend to be modified more frequently than other classes and are therefore stronger predictors of change than traditional Object-Oriented coupling and cohesion metrics. In this paper we present the results from this initial study, including an analysis of why tactic-related classes are changed, and a discussion of the implications of these findings for maintaining architectural quality over the lifetime of a software system.",Complexity theory; Computer bugs; Heart beat; Measurement; Reliability; Software; Software engineering,"Modifications, Tweaks, and Bug Fixes in Architectural Tactics",x,,,,,,,,,NO,,
S372,1,Backward,conferencePaper,2019,"Pichler, Marc; Dieber, Bernhard; Pinzger, Martin",2019 Third IEEE International Conference on Robotic Computing (IRC),10.1109/IRC.2019.00020,,"Since its beginnings ten years ago, the Robot Operating System (ROS) has created a huge community of developers and researchers and is now the most widespread open-source framework for robotics development. It is used in research, prototyping but also in commercial products and supports a wide range of robotic platforms, sensors and highlevel data processing functions. While for a research platform, quality of the software developed with it is typically of lower importance, ROS is gradually moving towards industrial applications making software quality a premier topic. In this paper, we want to gain insights on how ROS is used in practice, how high the quality of the ROS packages and applications is, and where potential pitfalls in the use of ROS lie. To achieve this, we have analyzed several thousands of open-source ROS packages found on GitHub and Bitbucket for their quality and their interdependencies. Our results include packages on the rosdistro index and, more importantly, packages that are not. From our results we show common issues in ROS-applications, quality implications, and also which packages of what quality are particularly popular.",dependency analysis; Indexes; Open source software; repository quality; ros; Service robots; software quality; Software quality; Tools,Can I Depend on you? Mapping the Dependency and Quality Landscape of ROS Packages,,,,,,,,x,,NO,,
S373,1,Backward,conferencePaper,2012,"Purandare, Rahul; Darsie, Javier; Elbaum, Sebastian; Dwyer, Matthew B.",2012 IEEE/RSJ International Conference on Intelligent Robots and Systems,10.1109/IROS.2012.6385719,,"Modern robotics systems rely on distributed event-based frameworks to facilitate the assembly of software out of collections of reusable components. These frameworks express component dependencies in data that encode event publish-subscribe relations. This loosely coupled architecture makes it difficult for developers to understand the dependencies and to predict the impacts of a change to a component as the components grow in number and complexity. Moreover, this encoding of dependencies renders traditional techniques for analyzing component dependencies inapplicable, because the dependencies are bound by communication channels rather than data. In this work, we present a program analysis technique that automatically extracts a model of component dependencies from distributed system source code. This model identifies not only the temporal dependencies among components, but also the conditions under which those dependencies are realized. We have implemented the analysis and applied it to systems developed in ROS. The resulting models are succinct and precise, which suggests that programmers will find them comprehensible, and they can be used to document important global dependencies in a system, to compare different versions to identify the impacts of component changes, and to help locate errors.",Analytical models; Complexity theory; Computer architecture; Grammar; Robots; Software; Torso,Extracting conditional component dependence for distributed robotic systems,x,,,,,,,,,NO,,
S374,1,Backward,conferencePaper,2019,"Santos, André; Cunha, Alcino; Macedo, Nuno",2019 Third IEEE International Conference on Robotic Computing (IRC),10.1109/IRC.2019.00018,,"The Robot Operating System (ROS) is one of the most popular open source robotic frameworks, and has contributed significantly to the fast development of robotics. Even though ROS provides many ready-made components, a robotic system is inherently complex, in particular regarding the architecture and orchestration of such components. Availability and analysis of a system's architecture at compile time is fundamental to ease comprehension and development of higher-quality software. However, ROS developers have to overcome this complexity relying mostly on testing and runtime visualisers. This work aims to enhance static-time support by proposing, firstly, a metamodel to describe the software architecture of ROS systems (the ROS Computation Graph) and, secondly, model extraction and visualisation tools for such architectural models. The provided tools allow users to specify custom-made queries over these models, enabling the static verification of relevant properties that had to be (manually) checked at runtime before.",Computational modeling; Computer architecture; robotics; Robots; Runtime; Software; software architecture; software quality; static analysis; Tools; Visualization,Static-Time Extraction and Analysis of the ROS Computation Graph,,,,,,,,x,,NO,,
S375,1,Backward,conferencePaper,2013,"van der Ven, Jan Salvador; Bosch, Jan",Software Architecture,10.1007/978-3-642-39031-9_15,,"Software architects are often forced to make design decisions based on limited information. In this paper, we present an approach that allows software architects to study information about design decisions made by hundreds or more software architects by automatically analyzing the version management data of large open-source repositories. The contribution is, first, that it develops a conceptual model to reason about the automatic derivation of specifically medium level architectural design decisions. Second, we show that it is indeed possible to derive these design decisions automatically from open source projects. This provides a basis for statistical and quantitative reasoning about software architecture design decisions that allows software architects to make better-informed decisions.",Architectural Knowledge; Architecture; Components; Design Decisions; Open Source Projects,Making the Right Decision: Supporting Architects with Design Decision Data,x,,,,,,,,,NO,,
S376,1,Backward,conferencePaper,2018,"Soliman, Mohamed; Rekaby Salama, Amr; Galster, Matthias; Zimmermann, Olaf; Riebisch, Matthias",2018 IEEE International Conference on Software Architecture (ICSA),10.1109/ICSA.2018.00028,,"To make good architecture design decisions, developers need to know suitable architecture solution alternatives. However, with the rapid and continuous increase of solution alternatives (e.g. technologies, patterns, tactics), it is challenging to acquire architecture knowledge and to ensure that this knowledge is up to date. Our goal is to improve how architects search for architecturally relevant information in online developer communities. We developed a new search approach for architecturally relevant information using Stack Overflow as an example of an online developer community. Our search approach differs from a conventional keyword-based search in that it considers semantic information of architecturally relevant concepts in Stack Overflow. We also implemented the search approach as a web-based search engine. To show the effectiveness of the search approach compared to a conventional keyword-based search, we conducted an experiment with 16 practitioners. To ensure realism of the experiment, tasks given to practitioners are based on real scenarios identified in interviews with a different set of practitioners. The experiment showed that the new search approach outperforms a conventional keyword based search.",Business; Computer architecture; developer communities; Electronic mail; Information Retrieval; Ontologies; Search problems; Semantics; software architecture; software architecture knowledge; Stack Overflow; Text Classification,Improving the Search for Architecture Knowledge in Online Developer Communities,x,,,,,,,,,NO,,
S377,1,Backward,conferencePaper,2018,"Witte, Thomas; Tichy, Matthias",2018 IEEE/ACM 1st International Workshop on Robotics Software Engineering (RoSE),,,"Context: The software architecture of complex robot systems is usually divided into components. The software is then the configuration and combination of those components and their connectors. Objective: In the Robot Operating System (ROS), this architectural configuration, the ROS node graph, is partly defined in code and created at run-time. The static information about the architecture in the configuration is limited and checking the consistency at development time is not possible. The full software has to be manually executed to check the consistency and debug configuration errors. Method: We propose an approach and a corresponding tool to analyze ROS nodes and their launch files to check consistency and issue warnings if potential problems are detected. The approach uses both static analysis of the launch files as well as dynamic analysis of individual ROS nodes to reconstruct the node graph without executing the whole launch configuration. The nodes are executed in a sandbox to prevent side effects and enable the integration of the analysis tool, e.g., into automated testing systems. Results: The evaluation on internal and publicly available ROS projects shows that we are able to reconstruct the complete architecture of the system if the nodes implement a common lifecycle. Conclusion: The approach enables ROS developers to avoid creating incompatible architectures and check consistency already at development time. The approach can be extended to also monitor architectural consistency at run time.",Computer architecture; dynamic analysis; Peer-to-peer computing; Prototypes; Robots; ROS; roslaunch; Software architecture; software architecture description; Testing; Tools,Checking Consistency of Robot Software Architectures in ROS,,,,,x,,,,,NO,,
S378,1,Backward,journalArticle,1986,"Basili, Victor R.; Selby, Richard W.; Hutchens, David H.",IEEE Transactions on Software Engineering,10.1109/TSE.1986.6312975,,"A framework is presented for analyzing most of the experimental work performed in software engineering over the past several years. The framework of experimentation consists of four categories corresponding to phases of the experimentation process: definition, planning, operation, and interpretation. A variety of experiments are described within the framework and their contribution to the software engineering discipline is discussed. Some recommendations for the application of the experimental process in software engineering are included.",Controlled experiment; data collection and analysis; Debugging; Educational institutions; empirical study; experimental design; Measurement; Programming; Software; Software engineering; software metrics; software technology measurement and evaluation; Testing,Experimentation in software engineering,,,,x,,,,,,NO,,
S379,1,Backward,conferencePaper,2011,"Cornu, Alexandre; Derrien, Steven; Lavenier, Dominique","Reconfigurable Computing: Architectures, Tools and Applications",10.1007/978-3-642-19475-7_8,,Designing FPGA-based accelerators is a difficult and time-consuming task which can be softened by the emergence of new generations of High Level Synthesis Tools. This paper describes how the ImpulseC C-to-hardware compiler tool has been used to develop efficient hardware for a known genomic sequence alignment algorithms and reports HLL designs performance outperforming traditional hand written optimized HDL implementations.,FPGA; Hardware Accelerator; High Level Synthesis Tool; ImpulseC,HLS Tools for FPGA: Faster Development with Better Performance,x,,,,,,,,,NO,,
S380,1,Backward,conferencePaper,2017,"Oezkan, M. Akif; Reiche, Oliver; Hannig, Frank; Teich, Juergen",FSP 2017; Fourth International Workshop on FPGAs for Software Programmers,,,"Field Programmable Gate Arrays (FPGAs) are proved to be among the most suitable architectures for image processing applications. However, accelerating algorithms using FPGAs is a time-consuming task and needs expertise. Whereas the recent advancements in High-Level Synthesis (HLS) promise to solve this problem, today's HLS tools require apt hardware descriptions of algorithms to be able to provide favorable implementations. A solution is developing highly parameterizable and optimized HLS libraries for the fundamental image processing components. Another solution is providing a higher level of abstraction in the form of a Domain-Specific Language (DSL) and a corresponding efficient back end for hardware design. In this paper, we provide a highly efficient and parameterizable C++ library for image processing applications, which would be the cornerstone for both approaches. In our library, nodes of a stream-based data flow graph can be described as C++ objects for specified functions, and the whole application can be efficiently parallelized just by defining a global constant as the parallelization factor. Moreover, the key hardware design elements, i. e., line buffers and sliding windows with different border handling patterns, can be utilized individually to ease the design of more complicated applications.",,A Highly Efficient and Comprehensive Image Processing Library for C++-based High-Level Synthesis,,,,,x,,,,,NO,,
S381,1,Backward,conferencePaper,2016,"Choi, Jongsok; Lian, Ruo Long; Brown, Stephen; Anderson, Jason","2016 IEEE 27th International Conference on Application-specific Systems, Architectures and Processors (ASAP)",10.1109/ASAP.2016.7760775,,"High-level synthesis (HLS) is increasingly becoming a mainstream design methodology for FPGAs. Whereas its previous applications were mostly limited to research and simple designs, it is now being used to tape-out real-world chips in production [1]. Advances in compiler and HLS research continue to improve the quality of HLS-generated hardware. Despite this, the ease-of-use of HLS tools remains a hurdle to its broad uptake, particularly by engineers without hardware skills. To this end, we propose using a well-known software technique to infer streaming parallel hardware in HLS. Specifically, we use the producer-consumer pattern, commonly used in multi-threaded programming, to infer the generation of hardware that can exploit both pipeline and spatial parallelism on FPGAs. Our proposed methodology allows one to create a design in software, using only standard software methodologies, that cannot only synthesize to streaming hardware, but also model the generated hardware more accurately than existing solutions from other state-of-the-art C-based HLS tools. We use four different real-world benchmarks to illustrate the use of our methodology, and how it can create circuits that are either pipelined, or pipelined and replicated, all from software. For comparison, we also use a commercial HLS tool to synthesize one of the benchmarks, and show that our methodology can produce competitive results to that of the commercial tool.",Field programmable gate arrays; Hardware; Instruction sets; Parallel processing; Pipelines; Standards,A unified software approach to specify pipeline and spatial parallelism in FPGA hardware,x,,,,,,,,,NO,,
S382,1,Backward,conferencePaper,2018,"Omidian, Hossein; Ivanov, Nick; Lemieux, Guy G.F.",2018 International Conference on Field-Programmable Technology (FPT),10.1109/FPT.2018.00056,,"This paper presents an FPGA-based overlay for accelerating computer vision applications written in OpenVX. A software programmer simply writes an application using the standard OpenVX API. The OpenVX overlay consists of an architecture and a runtime system that runs any OpenVX application, unmodified, in an accelerated manner on an FPGA. The architecture uses a Soft Vector Processor (SVP) for general acceleration, and a library of Vector Custom Instructions (VCIs) to further accelerate specific OpenVX kernels in the FPGA fabric. The VCIs are predesigned in advance by a skilled FPGA designer. The runtime system analyzes the OpenVX computational graph and selects some kernel nodes to be executed by VCIs, with the remaining kernel nodes to be executed by the SVP. In making the selection, the runtime system uses an optimization algorithm and relies upon bitstream relocation and bitstream merging to fit multiple VCIs into a single, fixedsize Partially Reconfigurable Region (PRR). The optimization algorithm must select the VCIs that satisfy the area constraint of the PRR and give the best overall application acceleration. For example, on a Canny-blur OpenVX application, an 8-lane SVP achieves speedup of 5.3 over the hard ARM Cortex-A9. Selecting some nodes as VCIs provides another 3.5 times speedup, for an overall speedup of 18.5. The overlay enables OpenVX programmers with no FPGA design knowledge to accelerate their application.",Acceleration; Computer Vision; Field programmable gate arrays; FPGA Overlay; FPGAs; Kernel; Libraries; OpenVX; Partial Reconfiguration; Runtime; Soft Vector Processor; Throughput,An Accelerated OpenVX Overlay for Pure Software Programmers,x,,,,,,,,,NO,,
S383,1,Backward,conferencePaper,2018,"Lam, Herman; Ojika, David",2018 International Conference on High Performance Computing Simulation (HPCS),10.1109/HPCS.2018.00094,,"In recent times, AI and deep learning have witnessed explosive growth in almost every subject involving data. Complex data analyses problems that took prolonged periods, or required laborious manual effort, are now being tackled through AI and deep-learning techniques with unprecedented accuracy. Machine learning (ML) using Convolutional Neural Networks (CNNs) has shown great promise for such applications. However, traditional CPU-based sequential computing no longer can meet the requirements of mission- critical applications which are compute-intensive and require low latency. Heterogeneous computing (HGC), with CPUs integrated with accelerators such as GPUs and FPGAs, offers unique capabilities to accelerate CNNs. In this presentation, we will focus on using FPGA-based reconfigurable computing to accelerate various aspects of CNN. We will begin with the current state of the art in using FPGAs for CNN acceleration, followed by the related R&D activities (outlined below) in the SHREC* Center at the University of Florida, based on which we will discuss the opportunities in heterogeneous computing for machine learning.",Acceleration; Data models; Engines; Field programmable gate arrays; Training,Research Opportunities in Heterogeneous Computing for Machine Learning,x,,,,,,,,,NO,,
S384,1,Backward,conferencePaper,2017,"Zhang, Jialiang; Li, Jing",Proceedings of the 2017 ACM/SIGDA International Symposium on Field-Programmable Gate Arrays,10.1145/3020078.3021698,,"OpenCL FPGA has recently gained great popularity with emerging needs for workload acceleration such as Convolutional Neural Network (CNN), which is the most popular deep learning architecture in the domain of computer vision. While OpenCL enhances the code portability and programmability of FPGA, it comes at the expense of performance. The key challenge is to optimize the OpenCL kernels to efficiently utilize the flexible hardware resources in FPGA. Simply optimizing the OpenCL kernel code through various compiler options turns out insufficient to achieve desirable performance for both compute-intensive and data-intensive workloads such as convolutional neural networks. In this paper, we first propose an analytical performance model and apply it to perform an in-depth analysis on the resource requirement of CNN classifier kernels and available resources on modern FPGAs. We identify that the key performance bottleneck is the on-chip memory bandwidth. We propose a new kernel design to effectively address such bandwidth limitation and to provide an optimal balance between computation, on-chip, and off-chip memory access. As a case study, we further apply these techniques to design a CNN accelerator based on the VGG model. Finally, we evaluate the performance of our CNN accelerator using an Altera Arria 10 GX1150 board. We achieve 866 Gop/s floating point performance at 370MHz working frequency and 1.79 Top/s 16-bit fixed-point performance at 385MHz. To the best of our knowledge, our implementation achieves the best power efficiency and performance density compared to existing work.",convolutional neural networks; fpga; hardware accelerator; opencl,Improving the Performance of OpenCL-based FPGA Accelerator for Convolutional Neural Network,x,,,,,,,,,NO,,
S385,1,Backward,conferencePaper,2017,"Sugata, Yuhei; Ohkawa, Takeshi; Ootsu, Kanemitsu; Yokota, Takashi",Proceedings of the 8th International Symposium on Highly Efficient Accelerators and Reconfigurable Technologies,10.1145/3120895.3120904,,"Intelligent robots demand complex information processing such as SLAM (Simultaneous Localization and Mapping) and DNN (Deep Neural Network). FPGA (Field Programmable Gate Array) is expected to accelerate these applications with high energy efficiency. Introducing FPGA into robots is difficult due to its high development costs. In order to introduce FPGA easily to a system on ROS (Robot Operating System) development platform, ROS-compliant FPGA Component has been proposed. However, large communication latency between ROS components is a severe problem. This research aims to reduce the latency by implementing Publish/Subscribe messaging of ROS as hardware. Based on result of network packets analysis in ROS system, we propose a method of implementing a Hardware ROS-compliant FPGA Component. It is done by separating registration part (XMLRPC) and data communication part (TCPROS) of Publish/Subscribe messaging. Evaluation result shows that the proposed Hardware ROS-compliant FPGA component can reduce delay time of Publish/Subscribe messaging even with small amount of hardware.",component-oriented development; FPGA; robot; ROS,Acceleration of Publish/Subscribe Messaging in ROS-compliant FPGA Component,,,,,,,,,,NO,,
S386,1,Backward,conferencePaper,2013,"Winterstein, Felix; Bayliss, Samuel; Constantinides, George A.",2013 International Conference on Field-Programmable Technology (FPT),10.1109/FPT.2013.6718388,,"High-level synthesis promises a significant shortening of the FPGA design cycle when compared with design entry using register transfer level (RTL) languages. Recent evaluations report that C-to-RTL flows can produce results with a quality close to hand-crafted designs [1]. Algorithms which use dynamic, pointer-based data structures, which are common in software, remain difficult to implement well. In this paper, we describe a comparative case study using Xilinx Vivado HLS as an exemplary state-of-the-art high-level synthesis tool. Our test cases are two alternative algorithms for the same compute-intensive machine learning technique (clustering) with significantly different computational properties. We compare a data-flow centric implementation to a recursive tree traversal implementation which incorporates complex data-dependent control flow and makes use of pointer-linked data structures and dynamic memory allocation. The outcome of this case study is twofold: We confirm similar performance between the hand-written and automatically generated RTL designs for the first test case. The second case reveals a degradation in latency by a factor greater than 30× if the source code is not altered prior to high-level synthesis. We identify the reasons for this shortcoming and present code transformations that narrow the performance gap to a factor of four. We generalise our source-to-source transformations whose automation motivates research directions to improve high-level synthesis of dynamic data structures in the future.",Algorithm design and analysis; Clustering algorithms; Data structures; Dynamic scheduling; Heuristic algorithms; Pipeline processing; Resource management,High-level synthesis of dynamic data structures: A case study using Vivado HLS,x,,,,,,,,,NO,,
S388,1,Backward,conferencePaper,2003,"Pardo-Castellote, G.","23rd International Conference on Distributed Computing Systems Workshops, 2003. Proceedings.",10.1109/ICDCSW.2003.1203555,,"The OMG Data-Distribution Service (DDS) is an emerging specification for publish-subscribe data-distribution systems. The purpose of the specification is to provide a common application-level interface that clearly defines the data-distribution service. The specification describes the service using UML, thus providing a platform-independent model that can then be mapped into a variety of concrete platforms and programming languages. The OMG DDS attempts to unify the common practice of several existing implementations [2, 5] enumerating and providing formal definitions for the QoS (Quality of Service) settings that can be used to configure the service. This paper introduces the OMG DDS specification, describes the main aspects of the model, QoS settings, and gives examples of the communication scenarios it supports.",Application software; Computer languages; Concrete; Distributed computing; Middleware; Publish-subscribe; Quality of service; Real time systems; Technological innovation; Unified modeling language,OMG Data-Distribution Service: architectural overview,,,,x,,,,,,NO,,
S389,1,Backward,bookSection,2016,"Bihlmaier, Andreas; Hadlich, Matthias; Wörn, Heinz",Robot Operating System (ROS): The Complete Reference (Volume 1),,,"This tutorial chapter gives an introduction to Advanced ROS Network Introspection (ARNI), which was released as a solution for monitoring large ROS-based robotic installations. In the spirit of infrastructure monitoring (like Nagios), we generate metadata about all hosts, nodes, topics and connections, in order to monitor and specify the state of distributed robot software based on ROS. ARNI provides a more in-depth view of what is going on within the ROS computation graph out of the box. Any existing ROS node and host can be introspected without prior modification or recompilation. This extends from live network properties to host and node specific ones by running an additional node on each host of the ROS network. Furthermore, it is possible to define reference values for the state of all ROS components based on their metadata attributes. Subsequently, ARNI provides a mechanism to take countermeasures on detection of a violated specification. All features are modular and can be used without modifying existing ROS software. ARNI was written for ROS Indigo and this tutorial has been tested on Ubuntu Trusty (14.04). A link to the source code repository together with complementary information is available at http://wiki.ros.org/arni.",Introspection; Monitoring; Reliability; Safety,Advanced ROS Network Introspection (ARNI),,,,,x,,,,,NO,,
S39,1,Forward,journalArticle,2021,"Malavolta, Ivano; Lewis, Grace A.; Schmerl, Bradley; Lago, Patricia; Garlan, David",Journal of Systems and Software,10.1016/j.jss.2021.110969,https://linkinghub.elsevier.com/retrieve/pii/S0164121221000662,"Methods: We designed and conducted an observational study where we (i) built a dataset of 335 GitHub repositories containing real open-source ROS-based systems, and (ii) mined the repositories to extract and synthesize quantitative and qualitative findings about how roboticists are architecting ROS-based systems. Results: First, we extracted an empirically-grounded overview of the state of the practice for architecting and documenting ROS-based systems. Second, we synthesized a catalog of 47 architecting guidelines for ROS-based systems. Third, the extracted guidelines were validated by 119 roboticists working on real-world open-source ROS-based systems. Conclusion: Roboticists can use our architecting guidelines for applying good design principles to develop robots that meet quality requirements, and researchers can use our results as evidence-based indications about how real-world ROS systems are architected today, thus inspiring future research contributions.",,Mining guidelines for architecting robotics software,,,,,,,,x,,NO,,
S390,1,Backward,bookSection,2016,"Brugali, Davide; Gherardi, Luca",Robot Operating System (ROS): The Complete Reference (Volume 1),,,"A huge corpus of open source robotic software libraries is available on ROS repositories that can be reused to develop a large variety of robot control systems. The difficult challenge consists in selecting and integrating a coherent set of components that provide the required functionality taking into account their mutual dependencies and architectural mismatches. The HyperFlex approach presented in this chapter enables the explicit representation of robot system architectures, functional variability, and application requirements as software models that can be manipulated by a system configuration engine.",Model driven engineering; Robotics; Software variability,HyperFlex: A Model Driven Toolchain for Designing and Configuring Software Control Systems for Autonomous Robots,,,,,x,,,,,NO,,
S391,1,Backward,bookSection,2017,"Hoogervorst, Robin; Trouwborst, Cees; Kamphuis, Alex; Fumagalli, Matteo",Robot Operating System (ROS): The Complete Reference  (Volume 2),,,"This chapter introduces the open-source software VIKI. VIKI is a software package that eases the configuration of complex robotic systems and behavior by providing an easy way to collect existing ROS packages and nodes into modules that provide coherent functionalities. This abstraction layer allows users to develop behaviors in the form of a collection of interconnected modules. A GUI allows the user to develop ROS-based software architectures by simple drag-and-drop of VIKI modules, thus providing a visual overview of the setup as well as ease of reconfiguration. When a setup has been created, VIKI generates a roslaunch file by using the information of this configuration, as well as the information from the module definitions, which is then launched automatically. Distributed capabilities are also guaranteed as VIKI enables the explicit configuration of roslaunch features in its interface. In order to show the potential of VIKI, the chapter is organised in the form of a tutorial which provides a technical overview of the software, installation instructions as well as three use-cases with increased difficulty. VIKI functions alongside your ROS installation, and only uses ROS as a runtime dependency.",Abstraction layer; Educational; GUI; Modularity; ROS; Software architecture,VIKI—More Than a GUI for ROS,,,,,x,,,,,NO,,
S392,1,Backward,journalArticle,2010,"Cousins, Steve; Gerkey, Brian; Conley, Ken; Garage, Willow",IEEE Robotics Automation Magazine,10.1109/MRA.2010.936956,,"Robot operating system (ROS) is designed to promote code sharing and enable the development of open-source robotics commons. Sharing code will help the robotics community to progress faster by letting the researchers in the community replicate and extend the results of other research groups. ROS makes it easy to find the software and integrate it into robot systems. This article discusses about how sharing is facilitated by ros.org Web site. ROS contains the software stacks for everything, from building blocks such as controllers and filters to applications. ROS is making it possible for researchers around the world to work together to advance robotics.",Acceleration; Computer architecture; Filters; Hardware; Open source software; Operating systems; Packaging; Robots; Software packages; Technological innovation,Sharing Software with ROS [ROS Topics],,x,,,,,,,,NO,,
S393,1,Backward,journalArticle,2000,"Medvidovic, N.; Taylor, R.N.",IEEE Transactions on Software Engineering,10.1109/32.825767,,"Software architectures shift the focus of developers from lines-of-code to coarser-grained architectural elements and their overall interconnection structure. Architecture description languages (ADLs) have been proposed as modeling notations to support architecture-based development. There is, however, little consensus in the research community on what is an ADL, what aspects of an architecture should be modeled in an ADL, and which of several possible ADLs is best suited for a particular problem. Furthermore, the distinction is rarely made between ADLs on one hand and formal specification, module interconnection, simulation and programming languages on the other. This paper attempts to provide an answer to these questions. It motivates and presents a definition and a classification framework for ADLs. The utility of the definition is demonstrated by using it to differentiate ADLs from other modeling notations. The framework is used to classify and compare several existing ADLs, enabling us, in the process, to identify key properties of ADLs. The comparison highlights areas where existing ADLs provide extensive support and those in which they are deficient, suggesting a research agenda for the future.",Application software; Architecture description languages; Computer architecture; Computer languages; Computer science; Computer Society; Connectors; Formal specifications; LAN interconnection; Software architecture,A classification and comparison framework for software architecture description languages,,,,x,,,,,,NO,,
S394,1,Backward,book,,"Holz, Dirk; Behnke, Sven",,,,"the BSD license—libraries and tools that aid software de-velopers in creating applications for robots. In the easiest case, creating a useful application breaks down to connecting",,1rxDeveloper: GUI-Aided Software Developmemt in ROS,,,,x,x,,,,,NO,,
S395,1,Backward,conferencePaper,2015,"Narayanamoorthy, Aditya; Li, Renjun; Huang, Zhiyong","2015 IEEE 7th International Conference on Cybernetics and Intelligent Systems (CIS) and IEEE Conference on Robotics, Automation and Mechatronics (RAM)",10.1109/ICCIS.2015.7274563,,"Visual programming is widely used to allow users to create programs by manipulating program elements graphically rather than by specifying them textually. It is intuitive and effective. However, it has only just begun to be used in robotic programming. For example, in the Robot Operating System (ROS) - a popular framework used for developing robotic applications - in order to run multiple modules together, a ROS launch file needs to be created and used. The files are in XML format and are difficult to write and understand for nontechnical users. To address this problem, in this paper, we propose a visual programming software tool that helps in the creation and visualization of these ROS launch files. This tool enables non-experienced operators to program a robot at a modular level. The tool is one among a set of software tools in the Robot Application Development and Operating Environment (RADOE), which aims to ease the development of robot applications in ROS.",Launch File; Programming profession; Robotics; Robots; ROS; Software tools; Visual Programming; Visualization; XML,Creating ROS launch files using a visual programming interface,,x,,,,,,,,NO,,
S396,1,Backward,conferencePaper,2018,"Alami, Adam; Dittrich, Yvonne; Wasowski, Andrzej",2018 IEEE/ACM 11th International Workshop on Cooperative and Human Aspects of Software Engineering (CHASE),,,"ROS (Robot Operating System) is an open source community in robotics that is developing standard robotics operating system facilities such as hardware abstraction, low-level device control, communication middleware, and a wide range of software components for robotics functionality. This paper studies the quality assurance practices of the ROS community. We use qualitative methods to understand how ideology, priorities of the community, culture, sustainability, complexity, and adaptability of the community affect the implementation of quality assurance practices. Our analysis suggests that software engineering practices require social and cultural alignment and adaptation to the community particularities to achieve seamless implementation in open source environments. This alignment should be incorporated into the design and implementation of quality assurance practices in open source communities.",Computer bugs; Open Source Software; OSS Community; Quality assurance; Quality Assurance; Software; Software engineering; Standards; Sustainable development; Testing,Influencers of Quality Assurance in an Open Source Community,,,,,x,,,,,NO,,
S397,1,Backward,conferencePaper,2016,"Wittern, Erik; Suter, Philippe; Rajagopalan, Shriram",Proceedings of the 13th International Conference on Mining Software Repositories,10.1145/2901739.2901743,,"The node package manager (npm) serves as the frontend to a large repository of JavaScript-based software packages, which foster the development of currently huge amounts of server-side Node. js and client-side JavaScript applications. In a span of 6 years since its inception, npm has grown to become one of the largest software ecosystems, hosting more than 230, 000 packages, with hundreds of millions of package installations every week. In this paper, we examine the npm ecosystem from two complementary perspectives: 1) we look at package descriptions, the dependencies among them, and download metrics, and 2) we look at the use of npm packages in publicly available applications hosted on GitHub. In both perspectives, we consider historical data, providing us with a unique view on the evolution of the ecosystem. We present analyses that provide insights into the ecosystem's growth and activity, into conflicting measures of package popularity, and into the adoption of package versions over time. These insights help understand the evolution of npm, design better package recommendation engines, and can help developers understand how their packages are being used.",JavaScript; Node.js; software ecosystem analysis,A look at the dynamics of the JavaScript package ecosystem,x,,,,,,,,,NO,,
S398,1,Backward,conferencePaper,2013,"German, Daniel M.; Adams, Bram; Hassan, Ahmed E.",2013 17th European Conference on Software Maintenance and Reengineering,10.1109/CSMR.2013.33,,"Software ecosystems form the heart of modern companies' collaboration strategies with end users, open source developers and other companies. An ecosystem consists of a core platform and a halo of user contributions that provide value to a company or project. In order to sustain the level and number of high-quality contributions, it is crucial for companies and contributors to understand how ecosystems tend to evolve and can be maintained successfully over time. As a first step, this paper explores the evolution characteristics of the statistical computing project GNU R, which is a successful, end-user programming ecosystem. We find that the ecosystem of user-contributed R packages has been growing steadily since R's conception, at a significantly faster rate than core packages, yet each individual package remains stable in size. We also identified differences in the way user-contributed and core packages are able to attract an active community of users.",Communities; Companies; Documentation; Ecosystems; Electronic mail; Evolution; Programming; R; Software; Software ecosystems,The Evolution of the R Software Ecosystem,x,,,,,,,,,NO,,
S399,1,Backward,conferencePaper,2018,"Valiev, Marat; Vasilescu, Bogdan; Herbsleb, James",Proceedings of the 2018 26th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering,10.1145/3236024.3236062,,"Open-source projects do not exist in a vacuum. They benefit from reusing other projects and themselves are being reused by others, creating complex networks of interdependencies, i.e., software ecosystems. Therefore, the sustainability of projects comprising ecosystems may no longer by determined solely by factors internal to the project, but rather by the ecosystem context as well. In this paper we report on a mixed-methods study of ecosystem-level factors affecting the sustainability of open-source Python projects. Quantitatively, using historical data from 46,547 projects in the PyPI ecosystem, we modeled the chances of project development entering a period of dormancy (limited activity) as a function of the projects' position in their dependency networks, organizational support, and other factors. Qualitatively, we triangulated the revealed effects and further expanded on our models through interviews with project maintainers. Results show that the number of project ties and the relative position in the dependency network have significant impact on sustained project activity, with nuanced effects early in a project's life cycle and later on.",Open Source; Software ecosystems; Survival modeling,Ecosystem-level determinants of sustained activity in open-source projects: a case study of the PyPI ecosystem,x,,,,,,,,,NO,,
S40,1,Forward,conferencePaper,2021,"Eisoldt, Marc; Hinderink, Steffen; Tassemeier, Marco; Flottmann, Marcel; Vana, Juri; Wiemann, Thomas; Gaal, Julian; Rothmann, Marc; Porrmann, Mario",Proceedings of the 2021 Drone Systems Engineering and Rapid Simulation and Performance Evaluation: Methods and Tools Proceedings,10.1145/3444950.3444959,https://doi.org/10.1145/3444950.3444959,"In this paper, we present an approach to integrate reconfigurable SoCs into the well known Robot Operating System (ROS). Our method allows to implement hardware-accelerated algorithms on FPGA and integrate them directly into the ROS ecosystem. This allows to combine the established and well tested ROS infrastructure together with low-power hardware acceleration. As a proof-of-concept for this novel integration, we ported an existing path-following algorithm onto an FPGA and tested it on an unmanned ground vehicle (UGV).",FPGA; Path Detection; ROS; SoC; UAV; UGV,ReconfROS: Running ROS on Reconfigurable SoCs,,x,,,,,,,,NO,,
S400,1,Backward,journalArticle,2019,"Decan, Alexandre; Mens, Tom; Grosjean, Philippe",Empirical Software Engineering,10.1007/s10664-017-9589-y,,"Nearly every popular programming language comes with one or more package managers. The software packages distributed by such package managers form large software ecosystems. These packaging ecosystems contain a large number of package releases that are updated regularly and that have many dependencies to other package releases. While packaging ecosystems are extremely useful for their respective communities of developers, they face challenges related to their scale, complexity, and rate of evolution. Typical problems are backward incompatible package updates, and the risk of (transitively) depending on packages that have become obsolete or inactive. This manuscript uses the libraries.io dataset to carry out a quantitative empirical analysis of the similarities and differences between the evolution of package dependency networks for seven packaging ecosystems of varying sizes and ages: Cargo for Rust, CPAN for Perl, CRAN for R, npm for JavaScript, NuGet for the .NET platform, Packagist for PHP, and RubyGems for Ruby. We propose novel metrics to capture the growth, changeability, reusability and fragility of these dependency networks, and use these metrics to analyze and compare their evolution. We observe that the dependency networks tend to grow over time, both in size and in number of package updates, while a minority of packages are responsible for most of the package updates. The majority of packages depend on other packages, but only a small proportion of packages accounts for most of the reverse dependencies. We observe a high proportion of “fragile” packages due to a high and increasing number of transitive dependencies. These findings are instrumental for assessing the quality of a package dependency network, and improving it through dependency management tools and imposed policies.",,An empirical comparison of dependency network evolution in seven software packaging ecosystems,x,,,,,,,,,NO,,
S401,1,Backward,conferencePaper,2018,"Decan, Alexandre; Mens, Tom; Constantinou, Eleni",Proceedings of the 15th International Conference on Mining Software Repositories,10.1145/3196398.3196401,,"Security vulnerabilities are among the most pressing problems in open source software package libraries. It may take a long time to discover and fix vulnerabilities in packages. In addition, vulnerabilities may propagate to dependent packages, making them vulnerable too. This paper presents an empirical study of nearly 400 security reports over a 6-year period in the npm dependency network containing over 610k JavaScript packages. Taking into account the severity of vulnerabilities, we analyse how and when these vulnerabilities are discovered and fixed, and to which extent they affect other packages in the packaging ecosystem in presence of dependency constraints. We report our findings and provide guidelines for package maintainers and tool developers to improve the process of dealing with security issues.",dependency network; security vulnerability; semantic versioning; software ecosystem; software repository mining,On the impact of security vulnerabilities in the npm package dependency network,x,,,,,,,,,NO,,
S402,1,Backward,conferencePaper,2011,"Kabbedijk, Jaap; Jansen, Slinger",Software Business,10.1007/978-3-642-21544-5_5,,"Software products are part of a larger network of products, suppliers and partners, called a software ecosystem, working together in order to provide functionality for the users and generate profit for the vendors. Not much is known about the characteristics and relationships within such a software ecosystem. This paper presents an overview of the open source Ruby ecosystem and lists its elements, characteristics, descriptives, roles, cliques and relationships. Data is gathered using the Git decentralized source code management system and is analyzed using social network and statistical analysis techniques. Our analysis shows that the Ruby ecosystem exists out of a couple very distinctive roles developers fulfil. It also shows that within the Ruby ecosystem only a small ‘core’ of approximately 10% of all developers and gems (Ruby packages) are dominant within the ecosystem. At this point in time it appears that the rails community would benefit from motivating current developers to work together more, instead of supporting new developers or gems in order to get a healthy ecosystem.",ecosystem governance; exploratory case study; Ruby; software ecosystem,Steering Insight: An Exploration of the Ruby Software Ecosystem,x,,,,,,,,,NO,,
S403,1,Backward,journalArticle,2008,"Vaughan, Richard",Swarm Intelligence,10.1007/s11721-008-0014-4,,"Stage is a C++ software library that simulates multiple mobile robots. Stage version 2, as the simulation backend for the Player/Stage system, may be the most commonly used robot simulator in research and university teaching today. Development of Stage version 3 has focused on improving scalability, usability, and portability. This paper examines Stage’s scalability.",,Massively multi-robot simulation in stage,x,,,,,,,,,NO,,
S404,1,Backward,conferencePaper,2016,"Plakidas, Konstantinos; Stevanetic, Srdjan; Schall, Daniel; Ionescu, Tudor B.; Zdun, Uwe",Proceedings of the 20th International Systems and Software Product Line Conference,10.1145/2934466.2934488,,"In this work we advance the understanding of software eco-systems research by examining the structure and evolution of the R statistical computing open-source ecosystem. Our research attempts to shed light on the following intriguing question: what makes software ecosystems successful? The approach we follow is to perform a quantitative analysis of the R ecosystem. R is a well-established and popular ecosystem, whose community and marketplace are steadily growing. We assess and quantify the ecosystem throughout its history, and derive metrics on its core software components, the marketplace as well as its community. We use our insights to make observations that are applicable to ecosystems in general, validate existing theories from the literature, and propose a predictive model for the evolution of software packages. Our results show that the success of the ecosystem relies on a strong commitment by a small core of users who support a large and growing community.",empirical study; predictive model; R; software ecosystems,How do software ecosystems evolve? a quantitative assessment of the r ecosystem.,x,,,,,,,,,NO,,
S405,1,Backward,conferencePaper,2015,"Cosentino, Valerio; Izquierdo, Javier Luis Cánovas; Cabot, Jordi","2015 IEEE 22nd International Conference on Software Analysis, Evolution, and Reengineering (SANER)",10.1109/SANER.2015.7081864,,"Software development projects face a lot of risks (requirements inflation, poor scheduling, technical problems, etc.). Underestimating those risks may put in danger the project success. One of the most critical risks is the employee turnover, that is the risk of key personnel leaving the project. A good indicator to evaluate this risk is to measure the concentration of information in individual developers. This is also popularly known as the bus factor (“number of key developers who would need to be incapacitated, i.e. hit by a bus, to make a project unable to proceed”). Despite the simplicity of the concept, calculating the actual bus factor for specific projects can quickly turn into an error-prone and time-consuming activity as soon as the size of the project and development team increase. In order to help project managers to assess the bus factor of their projects, in this paper we present a tool that, given a Git-based repository, automatically measures the bus factor for any file, directory and branch in the repository and for the project itself. You can also simulate with the tool what would happen to the project (e.g., which files would become orphans) if one or more developers disappeared.",Companies; Measurement; Personnel; Risk management; Software; Tuners; Visualization,Assessing the bus factor of Git repositories,x,,,,,,,,,NO,,
S406,1,Backward,conferencePaper,2004,"Capiluppi, A.; Morisio, M.; Ramil, J.F.","Proceedings. 12th IEEE International Workshop on Program Comprehension, 2004.",10.1109/WPC.2004.1311059,,"Software evolution empirical studies are made possible only when data is available and easily collectable. Open source software provides a good opportunity for observing software products in various phases of their evolution, growth and maturity. One of the aspects that have not been analyzed yet through empirical studies is the relation that exists between code components growth and the evolving code structure. In this paper, we look at the growth of code elements by measuring the total number of files per release and also by visualizing the folder structure as a tree. Both, the number of files and the shape of the folder tree structure offer proxies to study the evolving complexity of the system. In this study, a number of hypotheses about the evolutionary patterns in the size of files and folders, in the folder tree structure, reflecting common assumptions on software engineering and open source are tested against empirical data reflecting the evolution of the ARLA system. We also relate some of the observed patterns to the arrival rate of new developers. Results show that the number of code components (files and folders) over releases can be interpreted as a linear trend with a superimposed ripple. We also describe the more apparent characteristics of the evolution of the folder tree structure. Furthermore, we observe that the average size of files and folders tends to stabilize over releases. The cumulative number of people who have been involved as developers of the system follows a trend which resembles that of the size in files over releases, suggesting that the latter could provide a good indicator for rate of work and productivity. There was no apparent relation between the arrival rate of developers and the changes observed in the code structure.",Computer aided software engineering,Structural evolution of an open source system: a case study,,,,x,,,,,,NO,,
S407,1,Backward,conferencePaper,2017,"Nassif, Mathieu; Robillard, Martin P.",2017 IEEE International Conference on Software Maintenance and Evolution (ICSME),10.1109/ICSME.2017.64,,"In large software projects, tacit knowledge of the system is threatened by developer turnover. When a developer leaves the project, their knowledge may be lost if the other developers do not understand the design decisions made by the leaving developer. Understanding the source code written by leaving developers thus becomes a burden for their successors. In a previous paper, Rigby et al. reported on a case study of turnover-induced knowledge loss in two large projects, Chromium and a project at Avaya, using risk evaluation methods usually applied to financial systems. They found that the two projects were susceptible to large knowledge losses that are more than three times the average loss. We report on a replication of their study on the Chromium project, as well as seven other large and medium-sized open source projects. We also extended theirwork by studying two variations of the knowledge loss metric, as well as the location and persistence of abandoned files. We found that all projects had a similar knowledge loss probability distribution, but extreme knowledge loss can be more severe than those originally discovered in Chromium and the project at Avaya. We also found that, in the systems under study, abandoned files often remained in the system for long periods.",Adaptation models; Chromium; Developer Turnover; History; Knowledge Distribution; Loss measurement; Mining Software Repository; Probability distribution; Quantitative Risk Management; Replication study; Software,Revisiting Turnover-Induced Knowledge Loss in Software Projects,x,,,,,,,,,NO,,
S408,1,Backward,conferencePaper,2016,"Rigby, Peter C.; Zhu, Yue Cai; Donadelli, Samuel M.; Mockus, Audris",2016 IEEE/ACM 38th International Conference on Software Engineering (ICSE),10.1145/2884781.2884851,,"The utility of source code, as of other knowledge artifacts, is predicated on the existence of individuals skilled enough to derive value by using or improving it. Developers leaving a software project deprive the project of the knowledge of the decisions they have made. Previous research shows that the survivors and newcomers maintaining abandoned code have reduced productivity and are more likely to make mistakes. We focus on quantifying the extent of abandoned source files and adapt methods from financial risk analysis to assess the susceptibility of the project to developer turnover. In particular, we measure the historical loss distribution and find (1) that projects are susceptible to losses that are more than three times larger than the expected loss. Using historical simulations we find (2) that projects are susceptible to large losses that are over five times larger than the expected loss. We use Monte Carlo simulations of disaster loss scenarios and find (3) that simplistic estimates of the `truck factor' exaggerate the potential for loss. To mitigate loss from developer turnover, we modify Cataldo et al's coordination requirements matrices. We find (4) that we can recommend the correct successor 34% to 48% of the time. We also find that having successors reduces the expected loss by as much as 15%. Our approach helps large projects assess the risk of turnover thereby making risk more transparent and manageable.",Adaptation models; Knowledge Distribution; Loss measurement; Mining Software Repositories; Monte Carlo methods; Productivity; Quantitative Risk Management; Risk management; Software; Software engineering; Successors; Truck Factor; Turnover,Quantifying and Mitigating Turnover-Induced Knowledge Loss: Case Studies of Chrome and a Project at Avaya,x,,,,,,,,,NO,,
S41,1,Forward,conferencePaper,2020,"Lienen, Christian; Platzner, Marco; Rinner, Bernhard",2020 International Conference on Field-Programmable Technology (ICFPT),10.1109/ICFPT51103.2020.00046,,"Mobile robotics applications process large amounts of data in real-time and require compute platforms that provide high performance and energy-efficiency. FPGAs are well-suited for many of these applications, but there is a reluctance in the robotics community to use hardware acceleration due to increased design complexity and a lack of consistent programming models across the software/hardware boundary. In this paper we present ReconROS, a framework that integrates the widely-used robot operating system (ROS) with ReconOS, which features multithreaded programming of hardware and software threads for reconfigurable computers. This unique combination gives ROS2 developers the flexibility to transparently accelerate parts of their robotics applications in hardware. We elaborate on the architecture and the design flow for ReconROS and report on a set of experiments that underline the feasibility and flexibility of our approach.",Computers; Energy efficiency; FPGA; Instruction sets; Operating systems; Programming; Real-time systems; ReconOS; Robotics; ROS2; Software,ReconROS: Flexible Hardware Acceleration for ROS2 Applications,,x,,,,,,,,NO,,
S410,1,Backward,journalArticle,2010,"Samoladas, Ioannis; Angelis, Lefteris; Stamelos, Ioannis",Information and Software Technology,10.1016/j.infsof.2010.05.001,,"Context Open source (FLOSS) project survivability is an important piece of information for many open source stakeholders. Coordinators of open source projects would like to know the chances for the survival of the projects they coordinate. Companies are also interested in knowing how viable a project is in order to either participate or invest in it, and volunteers want to contribute to vivid projects. Objective The purpose of this article is the application of survival analysis techniques for estimating the future development of a FLOSS project. Method In order to apply such approach, duration data regarding FLOSS projects from the FLOSSMETRICS (This work was partially supported by the European Community’s Sixth Framework Program under the Contract FP6-033982) database were collected. Such database contains metadata for thousands of FLOSS projects, derived from various forges. Subsequently, survival analysis methods were employed to predict the survivability of the projects, i.e. their probability of continuation in the future, by examining their duration, combined with other project characteristics such as their application domain and number of committers. Results It was shown how probability of termination or continuation may be calculated and how a prediction model may be built to upraise project future. In addition, the benefit of adding more committers to FLOSS projects was quantified. Conclusion Analysis results demonstrate the usefulness of the proposed framework for assessing the survival probability of a FLOSS project.",Open source software; Prediction; Survival analysis,Survival analysis on the duration of open source projects,x,,,,,,,,,NO,,
S411,1,Backward,conferencePaper,2017,"Coelho, Jailton; Valente, Marco Tulio",Proceedings of the 2017 11th Joint Meeting on Foundations of Software Engineering,10.1145/3106237.3106246,,"Open source is experiencing a renaissance period, due to the appearance of modern platforms and workflows for developing and maintaining public code. As a result, developers are creating open source software at speeds never seen before. Consequently, these projects are also facing unprecedented mortality rates. To better understand the reasons for the failure of modern open source projects, this paper describes the results of a survey with the maintainers of 104 popular GitHub systems that have been deprecated. We provide a set of nine reasons for the failure of these open source projects. We also show that some maintenance practices---specifically the adoption of contributing guidelines and continuous integration---have an important association with a project failure or success. Finally, we discuss and reveal the principal strategies developers have tried to overcome the failure of the studied projects.",GitHub; Open Source Software; Project failure,Why modern open source projects fail,x,,,,,,,,,NO,,
S412,1,Backward,conferencePaper,2016,"Decan, Alexandre; Mens, Tom; Claes, Maelick",Proccedings of the 10th European Conference on Software Architecture Workshops,10.1145/2993412.3003382,,"Package-based software ecosystems are composed of thousands of interdependent software packages. Many empirical studies have focused on software packages belonging to a single software ecosystem, and suggest to generalise the results to more ecosystems. We claim that such a generalisation is not always possible, because the technical structure of software ecosystems can be very different, even if these ecosystems belong to the same domain. We confirm this claim through a study of three big and popular package-based programming language ecosystems: R's CRAN archive network, Python's PyPI distribution, and JavaScript's NPM package manager. We study and compare the structure of their package dependency graphs and reveal some important differences that may make it difficult to generalise the findings of one ecosystem to another one.",component dependency graph; JavaScript; Python; R; software distribution; software ecosystem,On the topology of package dependency networks: a comparison of three programming language ecosystems,x,,,,,,,,,NO,,
S413,1,Backward,conferencePaper,2017,"Constantinou, Eleni; Mens, Tom","2017 IEEE 24th International Conference on Software Analysis, Evolution and Reengineering (SANER)",10.1109/SANER.2017.7884607,,"The evolution dynamics of a software ecosystem depend on the activity of the developer community contributing to projects within it. Both social and technical changes affect an ecosystem's evolution and the research community has been investigating the impact of these modifications over the last few years. Existing studies mainly focus on temporary modifications, often ignoring the effect of permanent changes on the software ecosystem. We present an empirical study of the magnitude and effect of permanent modifications in both the social and technical parts of a software ecosystem. More precisely, we measure permanent changes with regard to the ecosystem's projects, contributors and source code files and present our findings concerning the effect of these modifications. We study the Ruby ecosystem in GitHub over a nine-year period by carrying out a socio-technical analysis of the co-evolution of a large number of base projects and their forks. This analysis involves both the source code developed for these projects as well as the developers having contributed to them. We discuss our findings with respect to the ecosystem evolution according to three different viewpoints: (1) the base projects, (2) the forks and (3) the entire ecosystem containing both the base projects and forks. Our findings show an increased growth in both the technical and social aspects of the Ruby ecosystem until early 2014, followed by an increased contributor and project abandonment rate. We show the effect of permanent modifications in the ecosystem evolution and provide preliminary evidence of contributors migrating to other ecosystems when leaving the Ruby ecosystem.",Collaboration; Computer languages; Ecosystems; GitHub; Measurement; Registers; Ruby; Socio-Technical Analysis; Software; Software Ecosystem; Software engineering; Software Evolution,Socio-technical evolution of the Ruby ecosystem in GitHub,x,,,,,,,,,NO,,
S414,1,Backward,conferencePaper,2014,"Ramaswamy, Arunkumar; Monsuez, Bruno; Tapus, Adriana",Proceedings of the 6th International Workshop on Modeling in Software Engineering,10.1145/2593770.2593781,,"Recently, there is an encouraging trend in adopting model-driven engineering approaches for software development in robotics research. In this paper, currently available model-driven techniques in robotics are analyzed with respect to the domain-specific requirements. A conceptual overview of our software development approach called 'Self Adaptive Framework for Robotic Systems (SafeRobots)' is explained and we also try to position our approach within this model ecosystem.",Model-driven software development; Robotics,Model-driven software development approaches in robotics research,,,,,,,,,,,,
S415,1,Backward,conferencePaper,2013,"Bruyninckx, Herman; Klotzbücher, Markus; Hochgeschwender, Nico; Kraetzschmar, Gerhard; Gherardi, Luca; Brugali, Davide",Proceedings of the 28th Annual ACM Symposium on Applied Computing,10.1145/2480362.2480693,,"Because robotic systems get more complex all the time, developers around the world have, during the last decade, created component-based software frameworks (Orocos, Open-RTM, ROS, OPRoS, SmartSoft) to support the development and reuse of ""large grained"" pieces of robotics software. This paper introduces the BRICS Component Model (BCM) to provide robotics developers with a set of guidelines, metamodels and tools for structuring as much as possible the development of, both, individual components and component-based architectures, using one or more of the aforementioned software frameworks at the same time, without introducing any framework- or application-specific details. The BCM is built upon two complementary paradigms: the ""5Cs"" (separation of concerns between the development aspects of Computation, Communication, Coordination, Configuration and Composition) and the meta-modeling approach from Model-Driven Engineering.",component models; reusable software; robotics; software architectures,The BRICS component model: a model-based development paradigm for complex robotics software systems,x,,,,,,,,,NO,,
S416,1,Backward,conferencePaper,2003,"Gerkey, Brian P.; Vaughan, Richard T.; Howard, Andrew",In Proceedings of the 11th International Conference on Advanced Robotics,,,"This paper describes the Player/Stage software tools applied to multi-robot, distributed-robot and sensor network systems. Player is a robot device server that provides network transparent robot control. Player seeks to constrain controller design as little as possible; it is device independent, non-locking and language- and style-neutral. Stage is a lightweight, highly configurable robot simulator that supports large populations. Player/Stage is a community Free Software project. Current usage of Player and Stage is reviewed, and some interesting research opportunities opened up by this infrastructure are identified. 1",,The Player/Stage Project: Tools for Multi-Robot and Distributed Sensor Systems,,,,x,x,,,,,NO,,
S417,1,Backward,conferencePaper,2009,"Schlegel, Christian; Hassler, Thomas; Lotz, Alex; Steck, Andreas",2009 International Conference on Advanced Robotics,,,"Engineering the software development process in robotics is one of the basic necessities towards industrial-strength service robotic systems. A major challenge is to make the step from code-driven to model-driven systems. This is essential to replace hand-crafted single-unit systems by systems composed out of components with explicitly stated properties. Furthermore, this fosters reuse by separating robotics knowledge from short-cycled implementational technologies. Altogether, this is one but important step towards ldquoablerdquo robots. This paper reports on a practical approach to gain more insights into how a model-driven software approach can be applied to robotics systems.",Aerospace electronics; Automotive engineering; Computer industry; Computer science; Design engineering; Programming; Robotics and automation; Service robots; Software engineering; Software systems,Robotic software systems: From code-driven to model-driven designs,,,,,x,,,,,NO,,
S418,1,Backward,conferencePaper,2012,"Choi, In-Sung; Choi, Jong-Suk",Intelligent Robotics and Applications,10.1007/978-3-642-33515-0_61,,"This paper presents a robust formation control method independent on noise of compass sensor. There are various formation control method for multi-robot system. These methods offer great way to keep the (d,φ)-formation. In real environment, however, heading angle of each robot is affected by noise of compass sensor. Because of this reason, follower can’t keep exact formation. In this paper, we suggest formation control method that uses PID controller to resolve this problem. And we also prove that PID controller is effect to reduce position error.",Formation Control; Leader-Following; Multi-agent robot; PID controller,Leader-Follower Formation Control Using PID Controller,x,,,,,,,,,NO,,
S419,1,Backward,journalArticle,2018,"Lavigne, Emilien; Guillou, Goulven; Babau, Jean-Philippe",IFAC-PapersOnLine,10.1016/j.ifacol.2018.06.242,,"Racing sailboats are becoming more and more complex systems, especially with the increasing interest in total 3D attitude control. In such competitive context, realistic simulation appears as a key point for new developments. This paper presents AVS, a framework dedicated to sailboat simulation, integrating both requirements of a generic simulation framework and domain-specific aspects. The AVS framework provides a collection of models and tools to design, generate and evaluate racing sailboat simulations. Tools are also provided to integrate heterogeneous wind sources in simulation. Thanks to component-based approach, different simulation scenarios can be considered by adding or configuring components. Two simulation examples illustrate the AVS framework agility to evaluate sailing boat control law.",Cyber-physical systems; Model-Driven Engineering; Simulation,"AVS, a model-based racing sailboat simulator: application to wind integration",x,,,,,,,,,NO,,
S42,1,Forward,conferencePaper,2019,"Santos, André; Cunha, Alcino; Macedo, Nuno",2019 Third IEEE International Conference on Robotic Computing (IRC),10.1109/IRC.2019.00018,,"The Robot Operating System (ROS) is one of the most popular open source robotic frameworks, and has contributed significantly to the fast development of robotics. Even though ROS provides many ready-made components, a robotic system is inherently complex, in particular regarding the architecture and orchestration of such components. Availability and analysis of a system's architecture at compile time is fundamental to ease comprehension and development of higher-quality software. However, ROS developers have to overcome this complexity relying mostly on testing and runtime visualisers. This work aims to enhance static-time support by proposing, firstly, a metamodel to describe the software architecture of ROS systems (the ROS Computation Graph) and, secondly, model extraction and visualisation tools for such architectural models. The provided tools allow users to specify custom-made queries over these models, enabling the static verification of relevant properties that had to be (manually) checked at runtime before.",Computational modeling; Computer architecture; robotics; Robots; Runtime; Software; software architecture; software quality; static analysis; Tools; Visualization,Static-Time Extraction and Analysis of the ROS Computation Graph,,,,,,,,x,,NO,,
S420,1,Backward,conferencePaper,2016,"Sanchez-Lopez, Jose Luis; Suárez Fernández, Ramón A.; Bavle, Hriday; Sampedro, Carlos; Molina, Martin; Pestana, Jesus; Campoy, Pascual",2016 International Conference on Unmanned Aircraft Systems (ICUAS),10.1109/ICUAS.2016.7502591,,"To simplify the usage of the Unmanned Aerial Systems (UAS), extending their use to a great number of applications, fully autonomous operation is needed. There are many open-source architecture frameworks for UAS that claim the autonomous operation of UAS, but they still have two main open issues: (1) level of autonomy, being in most of the cases limited and (2) versatility, being most of them designed specifically for some applications or aerial platforms. As a response to these needs and issues, this paper presents Aerostack, a system architecture and open-source multi-purpose software framework for autonomous multi-UAS operation. To provide higher degrees of autonomy, Aerostack's system architecture integrates state of the art concepts of intelligent, cognitive and social robotics, based on five layers: reactive, executive, deliberative, reflective, and social. To be a highly versatile practical solution, Aerostack's open-source software framework includes the main components to execute the architecture for fully autonomous missions of swarms of UAS; a collection of ready-to-use and flight proven modular components that can be reused by the users and developers; and compatibility with five well known aerial platforms, as well as a high number of sensors. Aerostack has been validated during three years by its successful use on many research projects, international competitions and exhibitions. To corroborate this fact, this paper also presents Aerostack carrying out a fictional fully autonomous indoors search and rescue mission.",Computer architecture; Feature extraction; Hardware; Robot sensing systems; Software,AEROSTACK: An architecture and open-source software framework for aerial robotics,x,,,,,,,,,NO,,
S421,1,Backward,journalArticle,2005,"Astrom, K.J.; Klein, R.E.; Lennartsson, A.",IEEE Control Systems Magazine,10.1109/MCS.2005.1499389,,"In this paper, the dynamics of bicycles is analyzed from the perspective of control. Models of different complexity are presented, starting with simple ones and ending with more realistic models generated from multibody software. Models that capture essential behavior such as self-stabilization as well as models that demonstrate difficulties with rear wheel steering are considered. Experiences using bicycles in control education along with suggestions for fun and thought-provoking experiments with proven student attraction are presented. Finally, bicycles and clinical programs designed for children with disabilities are described.",Bicycles; Books; Education; Educational products; Educational programs; Equations; Lagrangian functions; Motorcycles; Tires; Wheels,Bicycle dynamics and control: adapted bicycles for education and research,,,,x,,,,,,NO,,
S422,1,Backward,journalArticle,2012,"Hemingway, Graham; Neema, Himanshu; Nine, Harmon; Sztipanovits, Janos; Karsai, Gabor",SIMULATION,10.1177/0037549711401950,,"Virtual evaluation of complex command and control concepts demands the use of heterogeneous simulation environments. Development challenges include how to integrate multiple simulation engines with varying semantics and how to integrate simulation models and manage the complex interactions between them. While existing simulation frameworks may provide many of the required run-time services needed to coordinate among multiple simulation engines, they lack an overarching integration approach that connects and relates the interoperability of heterogeneous domain models and their interactions. This paper outlines some of the challenges encountered in developing a command and control simulation environment and discusses our use of the Generic Modeling Environment tool suite to create a model-based integration approach that allows for rapid synthesis of complex high-level architecture-based simulation environments.",distributed simulation; domain-specific modeling language; heterogeneous simulation; high-level architecture; model-based integration; multi-paradigm modeling,Rapid synthesis of high-level architecture-based heterogeneous simulation: a model-based integration approach,x,,,,,,,,,NO,,
S423,1,Backward,conferencePaper,2011,"Whitsitt, Sean; Sprinkle, Jonathan",2011 18th IEEE International Conference and Workshops on Engineering of Computer-Based Systems,10.1109/ECBS.2011.17,,"The Joint Architecture for Unmanned Systems (JAUS) is a standard for sensing, control, and computational communication of components for unmanned systems. This paper presents a modeling environment capable of producing a domain-specific prototype of the software necessary for inter-computer communications. A metamodel is used to provide the domain-specific modeling language to model both the messages used in JAUS, and the shell interfaces for components that transmit and receive those messages. The produced artifacts are C and C++ code that can be used in unmanned systems and simulations of such systems, including tests that validate the structure and behavior of the generated code. The generated code is compatible with standard JAUS implementations, and is validated using the Open JAUS open source API and framework. Future work describes the second spiral of features and behaviors (currently in the design phase). The case study and test environment for the software generated by this project is an autonomous ground vehicle, modeled on a Ford Escape Hybrid that is used in laboratory experiments.",Arrays; Autonomous vehicles; Code generation; Computational modeling; Computers; JAUS; Metamodeling; Model-based design; Software; Solid modeling; Testing; Unmanned systems; Vehicles,Message Modeling for the Joint Architecture for Unmanned Systems (JAUS),x,,,,,,,,,NO,,
S424,1,Backward,conferencePaper,2012,"Whitsitt, Sean; Sprinkle, Jonathan",2012 IEEE 51st IEEE Conference on Decision and Control (CDC),10.1109/CDC.2012.6426049,,"Trajectory-following controllers for autonomous ground vehicles must carefully consider the possibility of vehicle instability. Previous approaches have provided a reference velocity along with a trajectory to follow, and a supervisory controller selects low velocity if turns are anticipated. However, such an approach is not robust across different vehicle platforms, and does not take into account passenger comfort. This paper provides a controller and design methodology to couple an existing trajectory controller with a speed limiting controller, where the speed-limiting controller is created based on user driving data. The result is a controller that can be optimized using a set of linearized controllers, and which is also demonstrated to remain below the velocity/turnrate thresholds established by human drivers: a conservative approximation for stability thresholds to prevent rollovers and skidding. Analysis is performed on data gathered using velocities between 0–18 m/s gathered in driving on surface streets as well as maneuvers in an open area, to demonstrate the validity of the thresholds in various conditions.",IEEE Xplore; Portable document format,A passenger comfort controller for an autonomous ground vehicle,x,,,,,,,,,NO,,
S425,1,Backward,conferencePaper,2013,"Whitsitt, Sean; Sprinkle, Jonathan",2013 20th IEEE International Conference and Workshops on Engineering of Computer Based Systems (ECBS),10.1109/ECBS.2013.16,,"In the template design method, an algorithm is defined in abstract terms. The template can then be used to create various subclasses to override that abstract behavior. This paper discusses a way in which the template method can be extended to the generation of software artifacts from models. Specifically, this new method will be an amalgam of techniques for applying template design concepts to modeling. This extended method is referred to as the skeleton method and has two major sub- methodologies that compose it. First, skeleton files are created to represent the end artifacts of the modeling language. Second, an interpreter template can be constructed from which language interpreters can be derived. As such, the modeling language can be easily extended to generate software for new programming languages or for new third party middleware. This paper presents two modeling languages which use the skeleton method for model based development.",Algorithm design and analysis; Buildings; Design methodology; Design Methods; Model Based Development; Skeleton; Software; Software algorithms; Templates; Unified modeling language,Model Based Development with the Skeleton Design Method,x,,,,,,,,,NO,,
S426,1,Backward,conferencePaper,2017,"Aichernig, Bernhard K.; Marcovic, Silvio; Schumi, Richard","2017 IEEE International Conference on Software Testing, Verification and Validation Workshops (ICSTW)",10.1109/ICSTW.2017.62,,"Previous work has demonstrated that property-based testing (PBT) is a flexible random testing technique that facilitates the generation of complex form data. For example, it has been shown that PBT can be applied to web-service applications that require various inputs for web-forms. We want to exploit this data generation feature of PBT and combine it with an external test-case generator that can generate test cases via model-based mutation testing. PBT already supports the generation of test cases from stateful models, but it is limited, because it normally only considers the current state during exploration of the model. We want to give the tester more control on how to produce meaningful operation sequences for test cases. By integrating an external test-case generator into a PBT tool, we produce a smaller set of test cases that meet certain coverage criteria. This also reduces the test execution time. We demonstrate our approach with a simple example of an external generator for regular expressions and perform an industrial case study, where we integrate an existing model-based mutation testing generator.",Business; business rules; Data models; external test-case generators; FsCheck; Generators; model-based mutation testing; MoMut; Object oriented modeling; Power capacitors; property-based testing; QuickCheck; test-case generation; Testing; Unified modeling language; web-service application,Property-Based Testing with External Test-Case Generators,x,,,,,,,,,NO,,
S427,1,Backward,conferencePaper,2006,"Arts, Thomas; Hughes, John; Johansson, Joakim; Wiger, Ulf",Proceedings of the 2006 ACM SIGPLAN  workshop on Erlang,10.1145/1159789.1159792,,"We present a case study in which a novel testing tool, Quviq QuickCheck, is used to test an industrial implementation of the Megaco protocol. We considered positive and negative testing and we used our developed specification to test an old version in order to estimate how useful QuickCheck could potentially be when used early in development.The results of the case study indicate that, by using Quviq QuickCheck, we would have been able to detect faults early in the development.We detected faults that had not been detected by other testing techniques. We found unclarities in the specifications and potential faults when the software is used in a different setting. The results are considered promising enough to Ericsson that they are investing in an even larger case study, this time from the beginning of the development of a new product.",property based testing; test automation,Testing telecoms software with quviq QuickCheck,,,,x,,,,,,NO,,
S428,1,Backward,conferencePaper,2014,"Bihlmaier, Andreas; Wörn, Heinz","Simulation, Modeling, and Programming for Autonomous Robots",10.1007/978-3-319-11900-7_22,,"We introduce Robot Unit Testing (RUT) as a methodology to bring modern testing methods into robotics. Through RUT the range of robotics software that can be automatically tested is extended beyond current practice. A robotics simulator is used to bridge the gap between well automated tests that only check a robot’s software and time consuming, inherently manual tests on robots of alloy and circuits. An in-depth realization of RUT is shown, which is based on the Robot Operating System (ROS) framework and the Gazebo simulator due to their prominence in robotics research and inherent suitability for the RUT methodology.",,Robot Unit Testing,x,,,,,,,,,NO,,
S429,1,Backward,conferencePaper,2011,"Bohren, Jonathan; Rusu, Radu Bogdan; Gil Jones, E.; Marder-Eppstein, Eitan; Pantofaru, Caroline; Wise, Melonee; Mösenlechner, Lorenz; Meeussen, Wim; Holzer, Stefan",2011 IEEE International Conference on Robotics and Automation,10.1109/ICRA.2011.5980058,,"As autonomous personal robots come of age, we expect certain applications to be executed with a high degree of repeatability and robustness. In order to explore these applications and their challenges, we need tools and strategies that allow us to develop them rapidly. Serving drinks (i.e., locating, fetching, and delivering), is one such application with well-defined environments for operation, requirements for human interfacing, and metrics for successful completion. In this paper we present our experiences and results while building an autonomous robotic assistant using the PR21 platform and ROS2. The system integrates several new components that are built on top of the PR2's current capabilities. Perception components include dynamic obstacle identification, mechanisms for identifying the refrigerator, types of drinks, and human faces. Planning components include navigation, arm motion planning with goal and path constraints, and grasping modules. One of the main contributions of this paper is a new task-level executive system, SMACH, based on hierarchical concurrent state machines, which controls the overall behavior of the system. We provide in-depth discussions on the solutions that we found in accomplishing our goal, and the implementation strategies that let us achieve them.",Cameras; Grasping; Navigation; Planning; Robot sensing systems; Three dimensional displays,Towards autonomous robotic butlers: Lessons learned with the PR2,x,,,,,,,,,NO,,
S43,1,Forward,conferencePaper,2020,"Mao, Xinjun; Huang, Hao; Wang, Shuo",2020 27th Asia-Pacific Software Engineering Conference (APSEC),10.1109/APSEC51365.2020.00018,,"Software engineering for autonomous robot (SE4AR) is an emerging interdisciplinary field with the aims to support the development, running and evolution of software systems for autonomous robot - a safety and mission critical cyber-physical system. Such field has recently gained increasing attentions from both academia and industry and made rapid progresses in the past years. However, many challenges pose on the SE4AR due to the specific features and complexities of autonomous robot software (ARS) and several open problems should be tackled in the future researches. This paper aims to present a comprehensive investigation on the researches and practices of SE4AR. Our contributions are three-fold as follows: an in-depth analysis on the development challenges, a systematic review on the current progresses, and an open discussion of weaknesses in current researches and opportunities in future researches.",autonomous robot software; Autonomous robots; Complexity theory; cyber-physical system; Industries; Service robots; software engineering; Software engineering; Software systems; Systematics,"Software Engineering for Autonomous Robot: Challenges, Progresses and Opportunities",x,,,,,,,,,NO,,
S430,1,Backward,conferencePaper,2000,"Claessen, Koen",In Proc. ACM SIGPLAN Haskell Workshop,,,We describe how to embed a simple typed functional logic programming language in Haskell. The embedding is a natural extension of the Prolog embedding by Seres and Spivey [16]. To get full static typing we need to use the Haskell extensions of quanti ed types and the ST-monad. 1,,Typed Logical Variables in Haskell,,,,x,x,,,,,NO,,
S432,1,Backward,journalArticle,1997,"Fink, George; Bishop, Matt",ACM SIGSOFT Software Engineering Notes,10.1145/263244.263267,,The goal of software testing analysis is to validate that an implementation satisfies its specifications. Many errors in software are caused by generalizable flaws in the source code. Property-based testing assures that a given program is free of specified generic flaws. Property-based testing uses property specifications and a data-flow analysis of the program to guide evaluation of test executions for correctness and completeness.,,Property-based testing: a new approach to testing for assurance,,,,x,,,,,,NO,,
S433,1,Backward,conferencePaper,2006,"Michlmayr, A.; Fenkam, P.; Dustdar, S.",26th IEEE International Conference on Distributed Computing Systems Workshops (ICDCSW'06),10.1109/ICDCSW.2006.103,,"Testing remains the most applied verification method for software systems. Typically, the behavior of such systems is evaluated against their informal or formal specifications. In this paper, we consider an architecture-driven approach to software testing. We support the argument that, in many cases, the difficulties in testing can be alleviated by optimizing the test methodology to leverage the architecture of the application under test. To support this claim, we present a test framework for publish/subscribe applications. This paper evaluates our initial steps in this regard. We focus on the design of our framework, and illustrate how to accomplish unit testing of publish/subscribe applications against LTL specifications, considering a real-world application as example.",Application software; Automatic testing; Computer architecture; Formal specifications; Java; Optimization methods; Software quality; Software systems; Software testing; System testing,Specification-Based Unit Testing of Publish/Subscribe Applications,,,,x,,,,,,NO,,
S434,1,Backward,conferencePaper,2020,"García, Sergio; Strüber, Daniel; Brugali, Davide; Berger, Thorsten; Pelliccione, Patrizio",Proceedings of the 28th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering,10.1145/3368089.3409743,,"Robots that support humans by performing useful tasks (a.k.a., service robots) are booming worldwide. In contrast to industrial robots, the development of service robots comes with severe software engineering challenges, since they require high levels of robustness and autonomy to operate in highly heterogeneous environments. As a domain with critical safety implications, service robotics faces a need for sound software development practices. In this paper, we present the first large-scale empirical study to assess the state of the art and practice of robotics software engineering. We conducted 18 semi-structured interviews with industrial practitioners working in 15 companies from 9 different countries and a survey with 156 respondents from 26 countries from the robotics domain. Our results provide a comprehensive picture of (i) the practices applied by robotics industrial and academic practitioners, including processes, paradigms, languages, tools, frameworks, and reuse practices, (ii) the distinguishing characteristics of robotics software engineering, and (iii) recurrent challenges usually faced, together with adopted solutions. The paper concludes by discussing observations, derived hypotheses, and proposed actions for researchers and practitioners.",interviews; online survey; robotics software engineering,Robotics software engineering: a perspective from the service robotics domain,,,,,,,,,,,,
S435,1,Backward,journalArticle,2016,"Ahmad, Aakash; Babar, Muhammad Ali",Journal of Systems and Software,10.1016/j.jss.2016.08.039,,"Context Several research efforts have been targeted to support architecture centric development and evolution of software for robotic systems for the last two decades. Objective We aimed to systematically identify and classify the existing solutions, research progress and directions that influence architecture-driven modeling, development and evolution of robotic software. Research Method We have used Systematic Mapping Study (SMS) method for identifying and analyzing 56 peer-reviewed papers. Our review has (i) taxonomically classified the existing research and (ii) systematically mapped the solutions, frameworks, notations and evaluation methods to highlight the role of software architecture in robotic systems. Results and Conclusions We have identified eight themes that support architectural solutions to enable (i) operations, (ii) evolution and (iii) development specific activities of robotic software. The research in this area has progressed from object-oriented to component-based and now to service-driven robotics representing different architectural models that emerged overtime. An emerging solution is cloud robotics that exploits the foundations of service-driven architectures to support an interconnected web of robots. The results of this SMS facilitate knowledge transfer – benefiting researchers and practitioners – focused on exploiting software architecture to model, develop and evolve robotic systems.",Evidence-based software engineering; Robotic systems; Software architecture; Software architecture for robotics; Systematic mapping study,Software architectures for robotic systems: A systematic mapping study,,,,,,,,,,,,
S436,1,Backward,conferencePaper,2007,"Duala-Ekoko, Ekwa; Robillard, Martin P.",29th International Conference on Software Engineering (ICSE'07),10.1109/ICSE.2007.90,,"Code clones are generally considered harmful in software development, and the predominant approach is to try to eliminate them through refactoring. However, recent research has provided evidence that it may not always be practical, feasible, or cost-effective to eliminate certain clone groups. We propose a technique for tracking clones in evolving software. Our technique relies on the concept of abstract clone region descriptors (CRD), which describe clone regions within methods in a robust way that is independent from the exact text of the clone region or its location in a file. We present our definition of CRDs, and describe a complete clone tracking system capable of producing CRDs from the output of a clone detection tool, notify developers of modifications to clone regions, and support the simultaneous editing of clone regions. We report on two experiments and a case study conducted to assess the performance and usefulness of our approach.",Cloning; Computer languages; Computer science; Logic programming; Monitoring; Programming profession; Q factor; Robustness; Software systems; Writing,Tracking Code Clones in Evolving Software,x,,,,,,,,,NO,,
S437,1,Backward,journalArticle,2016,"Witze, Alexandra",Nature,10.1038/nature.2016.19835,,,,Software error doomed Japanese Hitomi spacecraft,x,,,,,,,,,NO,,
S438,1,Backward,journalArticle,2019,"Bozhinoski, Darko; Di Ruscio, Davide; Malavolta, Ivano; Pelliccione, Patrizio; Crnkovic, Ivica",Journal of Systems and Software,10.1016/j.jss.2019.02.021,,"Robotic research is making huge progress. However, existing solutions are facing a number of challenges preventing them from being used in our everyday tasks: (i) robots operate in unknown environments, (ii) robots collaborate with each other and even with humans, and (iii) robots shall never injure people or create damages. Researchers are targeting those challenges from various perspectives, producing a fragmented research landscape. We aim at providing a comprehensive and replicable picture of the state of the art from a software engineering perspective on existing solutions aiming at managing safety for mobile robotic systems. We apply the systematic mapping methodology on an initial set of 1274 potentially relevant research papers, we selected 58 primary studies and analyzed them according to a systematically-defined classification framework. This work contributes with (i) a classification framework for methods or techniques for managing safety when dealing with the software of mobile robotic systems (MSRs), (ii) a map of current software methods or techniques for software safety for MRSs, (iii) an elaboration on emerging challenges and implications for future research, and (iv) a replication package for independent replication and verification of this study. Our results confirm that generally existing solutions are not yet ready to be used in everyday life. There is the need of turn-key solutions ready to deal with all the challenges mentioned above.",Safety for mobile robots; Software; Systematic mapping study,Safety for mobile robotic systems: A systematic mapping study from a software engineering perspective,,,,,,,,,,,,
S439,1,Backward,journalArticle,2015,"Brugali, Davide",IEEE Robotics Automation Magazine,10.1109/MRA.2015.2452201,,"A model is an abstract representation of a real system or phenomenon [1]. The idea of a model is to capture important properties of reality and to eglect irrelevant details. The properties that are relevant and that can be neglected depend on the purpose of creating a model. A model can make a particular system or phenomenon easier to understand, quantify, visualize, simulate, or predict.",Analytical models; Atmospheric modeling; Ports (Computers); Robot sensing systems; Software development; Tutorials; Unified modeling language,"Model-Driven Software Engineering in Robotics: Models Are Designed to Use the Relevant Things, Thereby Reducing the Complexity and Cost in the Field of Robotics",x,,,,,,,,,NO,,
S44,1,Forward,journalArticle,,"Afzal, Afsoon",,,,,,Automated Testing of Robotic and Cyberphysical Systems,,,,x,x,,,,,NO,,
S440,1,Backward,bookSection,2007,"Brugali, Davide; Agah, Arvin; MacDonald, Bruce; Nesnas, Issa A. D.; Smart, William D.",Software Engineering for Experimental Robotics,,,"Domain Engineering is a set of activities aiming at developing reusable artifacts within a domain. The term domain is used to denote or group a set of systems or functional areas within systems, that exhibit similar functionality.",,Trends in Robot Software Domain Engineering,,,,,x,,,,,NO,,
S441,1,Backward,conferencePaper,2012,"Brugali, Davide; Gherardi, Luca; Biziak, A.; Luzzana, Andrea; Zakharov, Alexey","Simulation, Modeling, and Programming for Autonomous Robots",10.1007/978-3-642-34327-8_33,,"State of the art in robot software development mostly relies on class library reuse and only to a limited extent to component-based design. In the BRICS project we have defined a software development process that is based on the two most recent and promising approaches to software reuse, i.e. Software Product Line (SPL) and Model-Driven Engineering (MDE). The aim of this paper is to illustrate the whole software development process that we have defined for developing flexible and reusable component-based robotics libraries, to exemplify it with the case study of robust navigation functionality, and to present the software tools that we have developed for supporting the proposed process.",Obstacle Avoidance; Software Development Process; Software Product Line; Software Reuse; Variation Point,A Reuse-Oriented Development Process for Component-Based Robotic Systems,x,,,,,,,,,NO,,
S442,1,Backward,conferencePaper,2005,"Brugali, D.; Reggiani, M.","IRI -2005 IEEE International Conference on Information Reuse and Integration, Conf, 2005.",10.1109/IRI-05.2005.1506537,,"A robot is a physical device that interacts with the external world through sensors and actuators, and carries out tasks autonomously in unstructured, dynamic, partially observable, and uncertain environments. Software applications are the medium to embody intelligence in the robot. Today, most of the research and development of software for robotic systems is based on proprietary design architectures invented from scratch each time. As robots have started to become commodities, a more stability-oriented software development approach is needed. This paper formulates the problem of developing stable software systems in the robotics domain, analyses issues that make the problem hard, and identifies challenges the robotics community has to face in order to build stable software systems.",Application software; Computer architecture; Intelligent actuators; Intelligent robots; Intelligent sensors; Programming; Research and development; Robot sensing systems; Software systems; Stability,Software stability in the robotics domain: issues and challenges,,,,x,,,,,,NO,,
S443,1,Backward,journalArticle,2017,"Bures, Tomas; Weyns, Danny; Schmer, Bradley; Tovar, Eduardo; Boden, Eric; Gabor, Thomas; Gerostathopoulos, Ilias; Gupta, Pragya; Kang, Eunsuk; Knauss, Alessia; Patel, Pankesh; Rashid, Awais; Ruchkin, Ivan; Sukkerd, Roykrong; Tsigkanos, Christos",ACM SIGSOFT Software Engineering Notes,10.1145/3089649.3089656,,"Smart Cyber--Physical Systems (sCPS) are modern CPS systems that are engineered to seamlessly integrate a large number of computation and physical components; they need to control entities in their environment in a smart and collective way to achieve a high degree of effectiveness and efficiency. At the same time, these systems are supposed to be safe and secure, deal with environment dynamicity and uncertainty, cope with external threats, and optimize their behavior to achieve the best possible outcome. This ""smartness"" typically stems from highly cooperative behavior, self--awareness, self--adaptation, and selfoptimization. Most of the ""smartness"" is implemented in software, which makes the software one of the most complex and most critical constituents of sCPS. As the specifics of sCPS render traditional software engineering approaches not directly applicable, new and innovative approaches to software engineering of sCPS need to be sought. This paper reports on the results of the Second International Workshop on Software Engineering for Smart Cyber--Physical Systems (SEsCPS 2016), which specifically focuses on challenges and promising solutions in the area of software engineering for sCPS.",cyber-physical systems; Software engineering,Software Engineering for Smart Cyber-Physical Systems: Challenges and Promising Solutions,x,,,,,,,,,NO,,
S444,1,Backward,conferencePaper,2003,"Bruyninckx, H.; Soetens, P.; Koninckx, B.",2003 IEEE International Conference on Robotics and Automation (Cat. No.03CH37422),10.1109/ROBOT.2003.1242011,,"This paper describes the current state, and the ongoing developments, of the hard real-time motion control core, of the OROCOS project (Open Robot Control Software). This core is a component-based, distributed and configurable software framework. The presentation discusses both the design and the current implementation. The design separates the structure of the control system from its functionality. Its hard real-time core provides a generic control structure, with plug-in facilities for customization.",Application software; Computer architecture; Control systems; Mechanical engineering; Motion control; Programmable control; Real time systems; Robot control; Signal generators; Signal processing,The real-time motion control core of the Orocos project,,,,x,,,,,,NO,,
S445,1,Backward,journalArticle,1990,"Corbin, Juliet M.; Strauss, Anselm",Qualitative Sociology,10.1007/BF00988593,,"Using grounded theory as an example, this paper examines three methodological questions that are generally applicable to all qualitative methods. How should the usual scientific canons be reinterpreted for qualitative research? How should researchers report the procedures and canons used in their research? What evaluative criteria should be used in judging the research products? We propose that the criteria should be adapted to fit the procedures of the method. We demonstrate how this can be done for grounded theory and suggest criteria for evaluating studies following this approach. We argue that other qualitative researchers might be similarly specific about their procedures and evaluative criteria.",,"Grounded theory research: Procedures, canons, and evaluative criteria",,,,x,,,,,,NO,,
S446,1,Backward,conferencePaper,2019,"García, Sergio; Strüber, Daniel; Brugali, Davide; Di Fava, Alessandro; Schillinger, Philipp; Pelliccione, Patrizio; Berger, Thorsten",Proceedings of the 13th International Workshop on Variability Modelling of Software-Intensive Systems,10.1145/3302333.3302350,,"Sensing, planning, controlling, and reasoning, are human-like capabilities that can be artificially replicated in an autonomous robot. Such a robot implements data structures and algorithms devised on a large spectrum of theories, from probability theory, mechanics, and control theory to ethology, economy, and cognitive sciences. Software plays a key role in the development of robotic systems, as it is the medium to embody intelligence in the machine. During the last years, however, software development is increasingly becoming the bottleneck of robotic systems engineering due to three factors: (a) the software development is mostly based on community efforts and it is not coordinated by key stakeholders; (b) robotic technologies are characterized by a high variability that makes reuse of software a challenging practice; and (c) robotics developers are usually not specifically trained in software engineering. In this paper, we illustrate our experiences from EU, academic, and industrial projects in identifying, modeling, and managing variability in the domain of service robots. We hope to raise awareness for the specific variability challenges in robotics software engineering and to inspire other researchers to advance this field.",,Variability Modeling of Service Robots: Experiences and Challenges,x,,,,,,,,,NO,,
S447,1,Backward,journalArticle,2017,"Ingrand, Félix; Ghallab, Malik",Artificial Intelligence,10.1016/j.artint.2014.11.003,,"Autonomous robots facing a diversity of open environments and performing a variety of tasks and interactions need explicit deliberation in order to fulfill their missions. Deliberation is meant to endow a robotic system with extended, more adaptable and robust functionalities, as well as reduce its deployment cost. The ambition of this survey is to present a global overview of deliberation functions in robotics and to discuss the state of the art in this area. The following five deliberation functions are identified and analyzed: planning, acting, monitoring, observing, and learning. The paper introduces a global perspective on these deliberation functions and discusses their main characteristics, design choices and constraints. The reviewed contributions are discussed with respect to this perspective. The survey focuses as much as possible on papers with a clear robotics content and with a concern on integrating several deliberation functions.",Acting; Deliberation; Learning; Monitoring; Observing; Planning; Robotics,Deliberation for autonomous robots: A survey,x,,,,,,,,,NO,,
S448,1,Backward,journalArticle,2019,"Frazier, Rachel M.; Carter-Templeton, Heather; Wyatt, Tami H.; Wu, Lin","CIN: Computers, Informatics, Nursing",10.1097/CIN.0000000000000538,,"The purpose of this study was to describe the current evidence found through a patent search about robotics used to assist nurses in providing care. The authors used a modified seven-step strategy of searching patents according to the US Patent and Trademark Office guidelines. The nursing robotic search was performed in four databases including the US Patent and Trademark Office issued patent database, the US Patent and Trademark Office published patent application database, the European Patent Office database, and Relecura. Keywords reflecting the scope of the term “robot” were defined for the purposes of this specific search. This broad search yielded large numbers of patents germane to nursing care. These results were narrowed using keywords and the Cooperative Patent Classification schemes to determine relevance, ensure rigor, and capture the most relevant results. This review of patents suggests robots for nursing care are proliferating. The opportunity for robotics in nursing is emerging in industry. Although nursing will likely benefit from robotics, we must determine the appropriate place to include robots in nursing care delivery.",,Current Trends in Robotics in Nursing Patents—A Glimpse Into Emerging Innovations,x,,,,,,,,,NO,,
S449,1,Backward,conferencePaper,2020,"Danchul, Alexander",Cyber-Physical Systems and Control,10.1007/978-3-030-34983-7_72,,"A conceptual model of the system architecture description extended in comparison with the standard ISO/IEC/IEEE 42010:2011 is considered. Based on the analysis of the text of the “Digital economy of the Russian Federation” Programme, elements of its architectural description associated with the relations of different concepts are constructed. An architectural configurator for the description of the programme is proposed. The main relations, tables of which should be compiled and analyzed when using this configurator, are specified.",Architecture description; Architecture of system; Digital economy,The “Digital Economy of the Russian Federation” Programme: An Analysis Based on Architecture Description,x,,,,,,,,,NO,,
S45,1,Forward,conferencePaper,2019,"EL Baccouri, Hamza; Guillou, Goulven; Babau, Jean-Philippe",2019 ACM/IEEE 22nd International Conference on Model Driven Engineering Languages and Systems Companion (MODELS-C),10.1109/MODELS-C.2019.00087,,"Cyber-physical systems evolving in uncertain environment endure fluctuating dynamics during their lifetime. Variations can be related to environment evolution, physical damages and component failures occurring after deployment. In such a variable context, controlling systems towards safety and system performances is challenging. In particular, controller definition and tuning (finding optimal control parameters) are key points of the development process. Determining optimal control parameters and the boundaries of a controller is a challenging process due to the multiplicity of contexts to be considered during the tuning phase. The challenge is here to identify good control parameters for the different contexts, considering multiple variation points. In this paper, we use a combination of model-driven simulation and dimensionality reduction techniques to define adequate control settings, considering multidimensional inputs defined by hardware and environmental parameters (the context). First, we define criteria of evaluation based on user quality of control requirements. Then, we apply feature selection algorithms to identify contextual parameters that have a significant impact on performances of the controller. Considering only selected parameters, we finally carry out a clustering aiming at identifying for context domains an optimal control parameters setting. To evaluate the proposed approach, we apply it to a proportional controller used in the context of a leader/follower application. The experiment shows effectiveness in the identification of optimal control parameters setting of the controller, for different contexts. The obtained results are then used to adapt the values of the controller parameters depending of environmental context.","software testing and tuning, continuous controller, dimensionality reduction, model-driven simulation",A Model-Driven Approach to Automate Tuning of Continuous Controller Parameters,x,,,,,,,,,NO,,
S450,1,Backward,bookSection,2016,"Kortenkamp, David; Simmons, Reid; Brugali, Davide",Springer Handbook of Robotics,,,"Robot software systems tend to be complex. This complexity is due, in large part, to the need to control diverse sensors and actuators in real time, in the face of significant uncertainty and noise. Robot systems must work to achieve tasks while monitoring for, and reacting to, unexpected situations. Doing all this concurrently and asynchronously adds immensely to system complexity.The use of a well-conceived architecture, together with programming tools that support the architecture, can often help to manage that complexity. Currently, there is no single architecture that is best for all applications – different architectures have different advantages and disadvantages. It is important to understand those strengths and weaknesses when choosing an architectural approach for a given application.This chapter presents various approaches to architecting robotic systems. It starts by defining terms and setting the context, including a recounting of the historical developments in the area of robot architectures. The chapter then discusses in more depth the major types of architectural components in use today – behavioral control (Chap. 13), executives, and task planners (Chap. 14) – along with commonly used techniques for interconnecting connecting those components. Throughout, emphasis will be placed on programming tools and environments that support these architectures. A case study is then presented, followed by a brief discussion of further reading.",Architectural Style; Common Object Request Broker Architecture; Interprocess Communication; Robot System; Unify Modeling Language,Robotic Systems Architectures and Programming,,,,,x,,,,,NO,,
S451,1,Backward,journalArticle,2006,"Metta, Giorgio; Fitzpatrick, Paul; Natale, Lorenzo",International Journal of Advanced Robotic Systems,10.5772/5761,,"We describe YARP, Yet Another Robot Platform, an open-source project that encapsulates lessons from our experience in building humanoid robots. The goal of YARP is to minimize the effort devoted to infrastructure-level software development by facilitating code reuse, modularity and so maximize research-level development and collaboration. Humanoid robotics is a “bleeding edge” field of research, with constant flux in sensors, actuators, and processors. Code reuse and maintenance is therefore a significant challenge. We describe the main problems we faced and the solutions we adopted. In short, the main features of YARP include support for inter-process communication, image processing as well as a class hierarchy to ease code reuse across different hardware platforms. YARP is currently used and tested on Windows, Linux and QNX6 which are common operating systems used in robotics.",humanoid robotics; interprocess communication; software platform,YARP: Yet Another Robot Platform,,,,x,,,,,,NO,,
S452,1,Backward,journalArticle,2020,"Pelliccione, Patrizio; Knauss, Eric; Ågren, S. Magnus; Heldal, Rogardt; Bergenhem, Carl; Vinel, Alexey; Brunnegård, Oliver",Science of Computer Programming,10.1016/j.scico.2020.102414,,"The automotive domain is rapidly changing in the last years. Among the different challenges OEMs (i.e. the vehicle manufacturers) are facing, vehicles are evolving into systems of systems. In fact, over the last years vehicles have evolved from disconnected and “blind” systems to systems that are (i) able to sense the surrounding environment and (ii) connected with other vehicles, the city, pedestrians, cyclists, etc. Future transportation systems can be seen as a System of Systems (SoS). In an SoS, constituent systems, i.e. the units that compose an SoS, can act as standalone systems, but their cooperation enables new emerging and promising scenarios. While this trend creates new opportunities, it also poses a risk to compromise key qualities such as safety, security, and privacy. In this paper we focus on the automotive domain and we investigate how to engineer and architect cars in order to build them as constituents of future transportation systems. Our contribution is an architectural viewpoint for System of Systems, which we demonstrate based on an automotive example. Moreover, we contribute a functional reference architecture for cars as constituents of an SoS. This reference architecture can be considered as an imprinting for the implementations that would be devised in specific projects and contexts. We also point out the necessity for a collaboration among different OEMs and with other relevant stakeholders, such as road authorities and smart cities, to properly engineer systems of systems composed of cars, trucks, roads, pedestrians, etc. This work is realized in the context of two Swedish projects coordinated by Volvo Cars and involving some universities and research centers in Sweden and many suppliers of the OEM, including Autoliv, Arccore, Combitech, Cybercom, Knowit, Prevas, ÅF-Technology, Semcom, and Qamcom.",Architecture framework; Automotive; Software architecture; Software engineering; Systems of systems,Beyond connected cars: A systems of systems perspective,x,,,,,,,,,NO,,
S453,1,Backward,journalArticle,2017,"Pelliccione, Patrizio; Knauss, Eric; Heldal, Rogardt; Magnus Ågren, S.; Mallozzi, Piergiuseppe; Alminger, Anders; Borgentun, Daniel",Journal of Systems Architecture,10.1016/j.sysarc.2017.02.005,,"The automotive domain is living an extremely challenging historical moment shocked by many emerging business and technological needs. Electrification, autonomous driving, and connected cars are some of the driving needs in this changing world. Increasingly, vehicles are becoming software-intensive complex systems and most of the innovation within the automotive industry is based on electronics and software. Modern vehicles can have over 100 Electronic Control Units (ECUs), which are small computers, together executing gigabytes of software. ECUs are connected to each other through several networks within the car, and the car is increasingly connected with the outside world. These novelties ask for a change on how the software is engineered and produced and for a disruptive renovation of the electrical and software architecture of the car. In this paper we describe the current investigation of Volvo Cars to create an architecture framework able to cope with the complexity and needs of present and future vehicles. Specifically, we present scenarios that describe demands for the architectural framework and introduce three new viewpoints that need to be taken into account for future architectural decisions: Continuous Integration and Deployment, Ecosystem and Transparency, and car as a constituent of a System of Systems. Our results are based on a series of focus groups with experts in automotive engineering and architecture from different companies and universities.",Architecture framework; Automotive domain; Automotive ecosystem; Continuous integration and deployment; Software architecture; Systems of Systems,Automotive Architecture Framework: The experience of Volvo Cars,x,,,,,,,,,NO,,
S454,1,Backward,journalArticle,2012,"Pulli, Kari; Baksheev, Anatoly; Kornyakov, Kirill; Eruhimov, Victor",Communications of the ACM,10.1145/2184319.2184337,,Mobile computer-vision technology will soon become as ubiquitous as touch interfaces.,,Real-time computer vision with OpenCV,x,,,,,,,,,NO,,
S455,1,Backward,bookSection,2007,"Schlegel, Christian",Software Engineering for Experimental Robotics,,,A component based software engineering approach does not per se ensure that independently developed components finally fit together. The reason is that general purpose component based approaches still provide far too much freedom with respect to defining and implementing component interfaces. There is always a gap from a general purpose software component approach towards reusable and easily composable components in a specific application domain.,,Communication Patterns as Key Towards Component Interoperability,,,,,x,,,,,NO,,
S456,1,Backward,journalArticle,2011,"Steck, Andreas; Lotz, Alex; Schlegel, Christian",ACM SIGPLAN Notices,10.1145/2189751.2047875,,"The development of service robots has gained more and more attention over the last years. A major challenge on the way towards industrial-strength service robotic systems is to make the step from code-driven to model-driven engineering. In this work we propose to put models into the focus of the whole life-cycle of robotic systems covering design-time as well as run-time. We describe how to explicate parameters, properties and resource information in the models at design-time and how to take these information into account by the run-time system of the robot to support its decision making process. We underpin our work by an exhaustive real-world example which is completely developed with our tools.",component based software engineering; model-driven engineering; run-time model usage; service robotics,Model-driven engineering and run-time model-usage in service robotics,x,,,,,,,,,NO,,
S457,1,Backward,journalArticle,2002,"Utz, H.; Sablatnog, S.; Enderle, S.; Kraetzschmar, G.",IEEE Transactions on Robotics and Automation,10.1109/TRA.2002.802930,,"Developing software for mobile robot applications is a tedious and error-prone task. Modern mobile robot systems are distributed systems, and their designs exhibit large heterogeneity in terms of hardware, operating systems, communications protocols, and programming languages. Vendor-provided programming environments have not kept pace with recent developments in software technology. Also, standardized modules for certain robot functionalities are beginning to emerge. Furthermore, the seamless integration of mobile robot applications into enterprise information processing systems is mostly an open problem. We suggest the construction and use of object-oriented robot middleware to make the development of mobile robot applications easier and faster, and to foster portability and maintainability of robot software. With Miro, we present such a middleware, which meets the aforementioned requirements and has been ported to three different mobile platforms with little effort. Miro also provides generic abstract services like localization or behavior engines, which can be applied on different robot platforms with virtually no modifications.",Application software; Computer languages; Hardware; Middleware; Mobile communication; Mobile robots; Operating systems; Programming environments; Protocols; Software maintenance,Miro - middleware for mobile robot applications,,,,x,,,,,,NO,,
S458,1,Backward,conferencePaper,2017,"Van Tendeloo, Yentl; Vangheluwe, Hans",2017 Winter Simulation Conference (WSC),10.1109/WSC.2017.8247845,,"Multi-Paradigm Modelling (MPM) has been proposed to tackle the complexities found in Cyber-Physical Systems. MPM advocates the explicit modelling of all pertinent parts and aspects of complex systems. It adresses and integrates three orthogonal dimensions: multi-abstraction modelling, concerned with the (refinement, generalization, ...) relationships between models; multi-formalism modelling, concerned with the (multi-view, multi-component, ...) coupling of and transformation between models described in different formalisms; explicitly modelling the often complex, concurrent workflows. Current modelling, analysis and simulation tools support only isolated parts of MPM. The core methods and techniques enabling MPM are modelling language engineering, model operations (such as transformation and simulation), and workflow modelling. This paper delves into each enabler, presenting its relation to MPM and how it is supported in our prototype tool: the Modelverse. An automotive power window example is used to illustrate the Modelverse's capabilities. All aspects are explicitly modelled and enacted with a Formalism Transformation Graph + Process Model (FTG+PM).",Complexity theory; Computational modeling; Mathematical model; Petri nets; Process control; Safety; Tools,The Modelverse: A tool for Multi-Paradigm Modelling and simulation,x,,,,,,,,,NO,,
S459,1,Backward,conferencePaper,2017,"Aagela, Hamza; Al-Nesf, Maha; Holmes, Violeta",2017 23rd International Conference on Automation and Computing (ICAC),10.23919/IConAC.2017.8082023,,"The developers of path planning algorithms and localization have significantly improved the usability of the robot those days. By using software such as a Gmapping, the robot will be able to create a map of the surrounding area. This research utilizes the 3D sensor Asus_xtion_ pro to create an indoor map using SLAM and create 3D models for surrounding objects with a Turtlebot robot. In the first case, we used the Turtlebot to generate an indoor map of the robotic lab room using the Gmapping ROS packet. In the second case, we used the robot to create 3D models for the surrounding objects in the room. We used the Raspberry Pi 3 as a replacement of the laptop that was used to control the Turtlebot. The same implementation of the first and second tasks have been repeated to compare the performance. The Raspberry Pi accomplishes the given tasks successfully; however, there is some delay due to the different on the CPU power. Finally, the low cost proposed solution is capable of running ROS based SLAM algorithm and using the point on cloud to create 3D models. In addition, the use of Raspberry Pi allows the robot save considerable amount of power in contrast with the use of a normal laptop.",3D; Asus_Xtion_pro; component; mapping; Mobile robots; Raspberry Pi; Robot kinematics; Robot sensing systems; Robotic; ROS; Software; Three-dimensional displays; Turtlebot II,An Asus_xtion_probased indoor MAPPING using a Raspberry Pi with Turtlebot robot Turtlebot robot,x,,,,,,,,,NO,,
S46,1,Forward,conferencePaper,2020,"EL Baccouri, Hamza; Guillou, Goulven; Babau, Jean-Philippe",2020 IEEE 18th International Conference on Embedded and Ubiquitous Computing (EUC),10.1109/EUC50751.2020.00008,,"Cyber-physical systems evolving in uncertain environment endure fluctuating dynamics during their lifetime. In such a variable context, controlling systems towards safety and system performances is challenging. In particular, controller tuning (finding optimal control parameters) is a challenging process due to the multiplicity of contexts to be considered. In this paper, we use a combination of model-driven simulation, dimensionality reduction, clustering and prediction techniques to define adequate control parameter settings. First, we propose to explore the controller behavior by simulating different configurations, a configuration is defined by a context (controlled process, environment, sensors, actuators) and a control parameters setting. From simulation results, a discretization is performed by binning the evaluation of quality of control. Then, we apply feature selection algorithms to identify contextual parameters that have a significant impact on performances of the controller. Considering only selected parameters, we finally carry out a clustering aiming at identifying for context domains an optimal control parameter setting. The approach is iterative to define the boundaries of the controller for a given context domain. For non simulated contexts, we propose a prediction module based on regression techniques.To evaluate the proposed approach, we compare it with classical control theory and we apply it to a proportional controller used for a leader/follower application. The experiment shows effectiveness in the identification of control parameters setting for different contexts.",Feature extraction; Predictive models; Tuning; Optimal control; Process control; Cyber-physical systems; Iterative methods,An Iterative Approach to Automate the Tuning of Continuous Controller Parameters,x,,,,,,,,,NO,,
S460,1,Backward,journalArticle,2016,"Ahmad, Aakash; Babar, Muhammad Ali",Journal of Systems and Software,10.1016/j.jss.2016.08.039,,"Context Several research efforts have been targeted to support architecture centric development and evolution of software for robotic systems for the last two decades. Objective We aimed to systematically identify and classify the existing solutions, research progress and directions that influence architecture-driven modeling, development and evolution of robotic software. Research Method We have used Systematic Mapping Study (SMS) method for identifying and analyzing 56 peer-reviewed papers. Our review has (i) taxonomically classified the existing research and (ii) systematically mapped the solutions, frameworks, notations and evaluation methods to highlight the role of software architecture in robotic systems. Results and Conclusions We have identified eight themes that support architectural solutions to enable (i) operations, (ii) evolution and (iii) development specific activities of robotic software. The research in this area has progressed from object-oriented to component-based and now to service-driven robotics representing different architectural models that emerged overtime. An emerging solution is cloud robotics that exploits the foundations of service-driven architectures to support an interconnected web of robots. The results of this SMS facilitate knowledge transfer – benefiting researchers and practitioners – focused on exploiting software architecture to model, develop and evolve robotic systems.",Evidence-based software engineering; Robotic systems; Software architecture; Software architecture for robotics; Systematic mapping study,Software architectures for robotic systems: A systematic mapping study,,,,,,,,,,,,
S461,1,Backward,journalArticle,2015,"Alho, Pekka; Mattila, Jouni",Journal of Systems and Software,10.1016/j.jss.2015.03.041,,"Cyber-physical systems (CPSs) are open and interconnected embedded systems that control or interact with physical processes. Failures in CPSs can lead to loss of production time, damage to the equipment and environment, or loss of life, meaning that dependability and resilience are key properties for their design. However, existing fault tolerance and safety approaches are inadequate for complex, networked and dynamic CPSs. Service-orientation, on the other hand, is generally considered to be a robust architectural style, but there is a limited amount of research on fault tolerance of service-oriented architecture (SOA), especially on distributed real-time systems. We propose an approach that utilizes the loosely coupled nature of services to implement fault tolerance using a middleware-based real-time SOA (RTSOA) for CPSs. The approach, based on the concepts of fault isolation and recovery at the service level, is empirically evaluated using a demanding bilateral teleoperation (remote handling) application. The empirical evaluation demonstrates that RTSOA supports real-time fault detection and recovery, use of services as a unit of fault isolation, and it provides capability to implement fault tolerance patterns flexibly and without significant overhead.",Dependability; Resilience; RTSOA,Service-oriented approach to fault tolerance in CPSs,x,,,,,,,,,NO,,
S462,1,Backward,journalArticle,2015,"Anistratov, Pavel; Golobokov, Yuriy; Pavlov, Vadim",Procedia Computer Science,10.1016/j.procs.2015.11.062,,"A new hardware-software complex for digital control of a pulse power supply system was de- veloped for the tokamak T-15 upgrade. Special controller software provides implementation of flexible digital control of semiconductor converters. For most functions it is required that the software should keep control loop timing accurately. The complex software runs under the Linux operating system. To turn it into a real-time system open-source Xenomai framework was used. To test the framework applicability for the tasks of power sources control a research of a test system executing the basic functions of a real system was conducted. The required cycle was accomplished by separation of important tasks into real-time threads while using previously developed program code and libraries, which were already tested in the real system for non-real-time task without significant changes.",control system; power supply control; real-time control; tokamak,Hardware-software Complex Prototyping for the Pulse Power Supply Control System of Tokamak T-15,x,,,,,,,,,NO,,
S463,1,Backward,journalArticle,2006,"Beck, D.; Brand, H.; Karagiannis, C.; Rauth, C.",IEEE Transactions on Nuclear Science,10.1109/TNS.2006.873532,,"For the first time, an object oriented approach is used together with LabVIEW RT. This real-time variant of the well known graphical programming language is based on the PharLap OS. This allows for two different scenarios. First, existing object oriented LabVIEW code developed for MS Windows and Linux platforms can be reused on a real-time platform, next to a time-critical loop with high priority. The reusability of existing code drastically reduces the development time for complex data acquisition and control systems, based on PXI or cPCI platforms. Second, small PAC systems like the FieldPoint series from National Instruments have limited CPU power and memory. However, dedicated classes allow the usage of an object oriented approach and serve to integrate such sub-systems to larger SCADA systems.",Computer languages; Control systems; Hardware; LabVIEW; Maintenance; object oriented methods; Object oriented programming; Personnel; Programmable control; real time systems; Real time systems; safety; Safety; SCADA systems; vacuum control,The first approach to object oriented programming for LabVIEW real-time targets,,,,x,,,,,,NO,,
S464,1,Backward,conferencePaper,2015,"Chianese, Angelo; Piccialli, Francesco; Riccio, Giuseppe",Computer Science and its Applications,10.1007/978-3-662-45402-2_60,,"This paper presents an intelligent multisensor framework based on the BeableBone Black platform, a complete open hardware and software embedded computer; the challenge is to create a multi-purpose hierarchical network composed by smart nodes able to gain and manage heterogeneous data and spaces according to the Internet of Things paradigm. Thanks to several expansion modules, the designed nodes can become an instrument for monitoring, preservation and protection of several environments. As a proof of the proposed framework we conducted a first prototypal experimentation within the Cultural Heritage domain; in detail we deployed the system in an art exhibition within the Maschio Angioino Castle, Naples, Italy.",Internet of Things; Pervasive Computing; Smart Environment,Designing a Smart Multisensor Framework Based on Beaglebone Black Board,x,,,,,,,,,NO,,
S465,1,Backward,journalArticle,2017,"Chitta, Sachin; Marder-Eppstein, Eitan; Meeussen, Wim; Pradeep, Vijay; Tsouroukdissian, Adolfo Rodríguez; Bohren, Jonathan; Coleman, David; Magyar, Bence; Raiola, Gennaro; Lüdtke, Mathias; Perdomo, Enrique Fernandez",Journal of Open Source Software,10.21105/joss.00456,,"Chitta et al, (2017), ros_control: A generic and simple control framework for ROS, Journal of Open Source Software, 2(20), 456, doi:10.21105/joss.00456",,ros_control: A generic and simple control framework for ROS,,x,,,,,,,,NO,,
S466,1,Backward,journalArticle,2011,"Cereia, Marco; Bertolotti, Ivan Cibrario; Scanzio, Stefano",IEEE Transactions on Industrial Informatics,10.1109/TII.2011.2166777,,"The adoption of open-source operating systems for the execution of real-time applications is gaining popularity, even in the networked control systems domain, due to cost and flexibility reasons. However, as opposed to their commercial counterparts, the actual performance level to be expected from them is still little known and may often depend on the kind of real-time extension being used, its configuration, and the overall software load of the system, including best-effort components. In this paper, an open-source EtherCAT master supported by a popular real-time extension for Linux, the RT Patch, is thoroughly evaluated with long-term measurements, which build confidence on the suitability of the proposed approach for real-world applications. Special attention is devoted to the unexpected, adverse effect that some best-effort components, for instance, graphics applications, may have on the overall real-time characteristics of the system. For reference, the proposed approach is also compared with RTAI, a more traditional and well-known real-time extension for Linux already in use for demanding applications.",Embedded systems; Industrial control; Industrial control systems; Linux; Open source hardware; open-source operating systems; Operating systems; Real time systems; real-time and embedded systems,Performance of a Real-Time EtherCAT Master Under Linux,x,,,,,,,,,NO,,
S467,1,Backward,journalArticle,2009,"Choi, Byoung Wook; Shin, Dong Gwan; Park, Jeong Ho; Yi, Soo Yeong; Gerald, Seet",Intelligent Service Robotics,10.1007/s11370-009-0040-0,,"This paper describes the implementation of a dual-kernel software architecture, based on standard Linux and real-time embedded Linux, for real-time control of service robots in ubiquitous sensor network environments. Mobile robots are used in active service for the assisted living of elderly people, monitoring their mental and physiological data with wireless sensor nodes. The data collected from sensor nodes are routed back to a sink node through multi-hop communication. The moving sink node installed on the main controller of the robot collects data and transmits it to the main controller. To be able to handle emergency situations, the robot needs to satisfy real-time requirements when processing the data collected, and invoking tasks to execute. This paper realizes a multi-hop sensor network and proposes real-time software architecture based on Xenomai. The real-time tasks were implemented, with priority, to rapidly respond to urgent sensor data. In order to validate the deterministic response of the proposed system, the performance measurements for the delay in handling the sensed data transmission and the trajectory control with a feedback loop were evaluated on the non real-time standard Linux.",,Real-time control architecture using Xenomai for intelligent service robots in USN environments,x,,,,,,,,,NO,,
S468,1,Backward,journalArticle,2015,"Dantam, Neil T.; Lofaro, Daniel M.; Hereid, Ayonga; Oh, Paul Y.; Ames, Aaron D.; Stilman, Mike",IEEE Robotics Automation Magazine,10.1109/MRA.2014.2356937,,"Correct real-time software is vital for robots in safety-critical roles such as service and disaster response. These systems depend on software for locomotion, navigation, manipulation, and even seemingly innocuous tasks such as safely regulating battery voltage. A multiprocess software design increases robustness by isolating errors to a single process, allowing the rest of the system to continue operation. This approach also assists with modularity and concurrency. For real-time tasks, such as dynamic balance and force control of manipulators, it is critical to communicate the latest data sample with minimum latency. There are many communication approaches intended for both general-purpose and real-time needs [9], [13], [15], [17], [19]. Typical methods focus on reliable communication or network transparency and accept a tradeoff of increased message latency or the potential to discard newer data. By focusing instead on the specific case of real-time communication on a single host, we reduce communication latency and guarantee access to the latest sample. We present a new interprocess communication (IPC) library, Ach which addresses this need, and discuss its application for real-time multiprocess control on three humanoid robots (Figure 1). (Ach is available at http://www.golems.org/projects/ach.html. The name Ach comes from the common abbreviation for the motor neurotransmitter Acetylcholine and the computer networking term ACK.).",Disasters; Emergency services; Mobile robots; Real-time systems; Safety; Software development,The Ach Library: A New Framework for Real-Time Communication,x,,,,,,,,,NO,,
S469,1,Backward,journalArticle,2016,"Oliveira, Daniel Bristot de; Oliveira, Romulo Silva de",Software: Practice and Experience,10.1002/spe.2333,,"In the theory of real-time scheduling, tasks are described by mathematical variables, which are used in analytical models in order to prove schedulability of the system. On real-time Linux, tasks are computer programs, and Linux developers try to lower the latencies caused by the Linux kernel, trying to achieve faster response for the highest-priority task. Although both seek temporal correctness, they use different abstractions, which end up separating these efforts in two different worlds, making it hard for the Linux practitioners to understand and apply the formally proved models to the Linux kernel and for theoretical researchers to apply the restrictions imposed by Linux for the theoretical models. This paper traces a parallel between the theory of response-time analysis and the abstractions used in the Linux kernel. The contribution of this paper is threefold. We first identify the PREEMPT RT Linux kernel mechanisms that impact the timing of real-time tasks and map these impacts to the main abstractions used by the real-time scheduling theory. Then, we describe a customized trace tool, based on the existing trace infrastructure of the Linux kernel, that allows the measurement of the delays associated with the main abstractions of the real-time scheduling theory. Finally, we use this customized trace tool to characterize the timing lines resulting from the behavior of the PREEMPT RT Linux kernel. Copyright © 2015 John Wiley & Sons, Ltd.",Ftrace; Linux; PREEMPT RT; real time; response-time analysis; trace,Timing analysis of the PREEMPT RT Linux kernel,x,,,,,,,,,NO,,
S47,1,Forward,journalArticle,2021,"Abraham, Sophia; Carmichael, Zachariah; Banerjee, Sreya; VidalMata, Rosaura; Agrawal, Ankit; Islam, Md Nafee Al; Scheirer, Walter; Cleland-Huang, Jane",arXiv:2103.15053 [cs],,http://arxiv.org/abs/2103.15053,"Computer vision approaches are widely used by autonomous robotic systems to sense the world around them and to guide their decision making as they perform diverse tasks such as collision avoidance, search and rescue, and object manipulation. High accuracy is critical, particularly for Human-on-the-loop (HoTL) systems where decisions are made autonomously by the system, and humans play only a supervisory role. Failures of the vision model can lead to erroneous decisions with potentially life or death consequences. In this paper, we propose a solution based upon adaptive autonomy levels, whereby the system detects loss of reliability of these models and responds by temporarily lowering its own autonomy levels and increasing engagement of the human in the decision-making process. Our solution is applicable for vision-based tasks in which humans have time to react and provide guidance. When implemented, our approach would estimate the reliability of the vision task by considering uncertainty in its model, and by performing covariate analysis to determine when the current operating environment is ill-matched to the model's training data. We provide examples from DroneResponse, in which small Unmanned Aerial Systems are deployed for Emergency Response missions, and show how the vision model's reliability would be used in addition to confidence scores to drive and specify the behavior and adaptation of the system's autonomy. This workshop paper outlines our proposed approach and describes open challenges at the intersection of Computer Vision and Software Engineering for the safe and reliable deployment of vision models in the decision making of autonomous systems.",Computer Science - Software Engineering; Computer Science - Computer Vision and Pattern Recognition,Adaptive Autonomy in Human-on-the-Loop Vision-Based Robotics Systems,,,,,x,,,,,NO,,
S470,1,Backward,webpage,,,GitLab,,,"Xenomai 3 ""Cobalt"" real-time core, user interfaces and utilities",,Finding_Spurious_Relaxes · Wiki · xenomai / xenomai,,,,x,x,,,,,NO,,
S471,1,Backward,journalArticle,2019,"Delgado, Raimarius; You, Bum-Jae; Choi, Byoung Wook",Journal of Systems and Software,10.1016/j.jss.2019.01.052,,"This paper proposes a real-time (RT) control architecture based on Xenomai, an RT embedded Linux, to control a service robot along with non-real-time (NRT) robot operating system (ROS) packages. Most software, including device drivers and ROS, are developed to operate under the standard Linux kernel that does not provide RT guarantees. Standard Linux system calls in an RT context stimulates mode switching, resulting in non-deterministic responses and stability problems such as priority inversion and kernel panic. This paper overcomes such issues through a communication interface between RT and NRT tasks, termed cross-domain datagram protocol. The proposed architecture supports priority-based scheduling of multiple tasks while exposing an interface compatible with the original ROS packages. Moreover, it enables standard device driver operation inside RT tasks without developing RT device drivers that requires significant amount of development time. Feasibility is proven by implementation on a Raspberry Pi 3, a low-cost open embedded hardware platform, and conducted various experiments to analyze its performance and applied it to a service robot using ROS navigation packages. The results indicate that the proposed architecture can effectively provide an RT environment without stability issues when utilizing ROS packages and standard device drivers.",Cross-domain datagram protocol; Real-time control architecture; Robot operating system; Service mobile robots; Xenomai,Real-time control architecture based on Xenomai using ROS packages for a service robot,,,,,,,,,,,,
S472,1,Backward,journalArticle,2013,"Erwinski, Krystian; Paprocki, Marcin; Grzesiak, Lech M.; Karwowski, Kazimierz; Wawrzak, Andrzej",IEEE Transactions on Industrial Electronics,10.1109/TIE.2012.2206348,,"In computerized numerical control (CNC) systems, the communication bus between the controller and axis servo drives must offer high bandwidth, noise immunity, and time determinism. More and more CNC systems use real-time Ethernet protocols such as Ethernet Powerlink (EPL). Many modern controllers are closed costly hardware-based solutions. In this paper, the implementation of EPL communication bus in a PC-based CNC system is presented. The CNC system includes a PC, a software CNC controller running under Linux Real-Time Application Interface real-time operating system and servo drives communicating via EPL. The EPL stack was implemented as a real-time kernel module. Due to software-only implementation, this system is a cost-effective solution for a broad range of applications in machine control. All software systems are based on GNU General Public License or Berkeley Software Distribution licenses. Necessary modifications to the EPL stack, Linux configurations, computer basic input/output system, and motherboard configurations were presented. Experimental results of EPL communication cycle jitter on three different PCs were presented. The results confirm good performance of the presented system.",Computer numerical control; Computerized numerical control (CNC); enhanced machine controller; Ethernet networks; Ethernet Powerlink (EPL); Linux; real-time application interface (RTAI) Linux; Real-time systems; Servomotors,Application of Ethernet Powerlink for Communication in a Linux RTAI Open CNC system,x,,,,,,,,,NO,,
S473,1,Backward,journalArticle,2014,"Ferdoush, Sheikh; Li, Xinrong",Procedia Computer Science,10.1016/j.procs.2014.07.059,,"With over a decade of intensive research and development, wireless sensor network technology has been emerging as a viable solution to many innovative applications. In this paper, we describe a wireless sensor network system that we have developed using open-source hardware platforms, Arduino and Raspberry Pi. The system is low-cost and highly scalable both in terms of the type of sensors and the number of sensor nodes, which makes it well suited for a wide variety of applications related to environmental monitoring. Overall system architecture and the design of hardware and software components are presented in details in this paper. Some sample deployment and measurement results are also presented to demonstrate the usefulness of the system.",Arduino; environmental monitoring; Raspberry Pi; wireless sensor network; ZigBee.,Wireless Sensor Network System Design Using Raspberry Pi and Arduino for Environmental Monitoring Applications,x,,,,,,,,,NO,,
S474,1,Backward,conferencePaper,2011,"Grepl, Robert",2011 IEEE International Conference on Mechatronics,10.1109/ICMECH.2011.5971238,,"The simulation modeling and the control of real plant are two-very often separated-fields of mechatronic practice, research and education. The deep gap between simulation world of controlled system and practical implementation in e.g. embedded hardware can be bridged through the use of special hardware and software directly in MATLAB/Simulink environment. This paper presents the review of available tools with respect to their usability, sampling rate capability, the necessary software needs and also the financial requirements. Most of approaches require the C code generation using Real-Time Workshop. However e.g. the Real-Time Toolbox works directly with normal mode of Simulink which can be especially recommended for the educational applications. The paper briefly describes several case studies where undergraduate students can deal with real educational models without previous knowledge of the real-time systems. The list of available hardware and software tools is not complete but includes all important approaches: low cost general purpose I/O card with/without C code generation, high-performance hardware for comfort rapid prototyping or hardware-in-the-loop simulation and code generation for embedded targets (16 or 32bit microcontrollers or DSP).",Electronic mail; Mathematical model; MATLAB; Mobile communication; Read only memory; Rotors,Real-Time Control Prototyping in MATLAB/Simulink: Review of tools for research and education in mechatronics,x,,,,,,,,,NO,,
S475,1,Backward,conferencePaper,2011,"Grepl, Robert",2011 IEEE International Conference on Mechatronics,10.1109/ICMECH.2011.5971238,,"The simulation modeling and the control of real plant are two-very often separated-fields of mechatronic practice, research and education. The deep gap between simulation world of controlled system and practical implementation in e.g. embedded hardware can be bridged through the use of special hardware and software directly in MATLAB/Simulink environment. This paper presents the review of available tools with respect to their usability, sampling rate capability, the necessary software needs and also the financial requirements. Most of approaches require the C code generation using Real-Time Workshop. However e.g. the Real-Time Toolbox works directly with normal mode of Simulink which can be especially recommended for the educational applications. The paper briefly describes several case studies where undergraduate students can deal with real educational models without previous knowledge of the real-time systems. The list of available hardware and software tools is not complete but includes all important approaches: low cost general purpose I/O card with/without C code generation, high-performance hardware for comfort rapid prototyping or hardware-in-the-loop simulation and code generation for embedded targets (16 or 32bit microcontrollers or DSP).",Electronic mail; Mathematical model; MATLAB; Mobile communication; Read only memory; Rotors,Real-Time Control Prototyping in MATLAB/Simulink: Review of tools for research and education in mechatronics,x,,,,,,,,,NO,,
S476,1,Backward,conferencePaper,2016,"Hasegawa, Ryo; Yawata, Naofumi; Ando, Noriaki; Nishio, Nobuhiko; Azumi, Takuya",2016 IEEE 19th International Symposium on Real-Time Distributed Computing (ISORC),10.1109/ISORC.2016.37,,"Robot technologies, such as robot technology middleware (RTM) that is a component-oriented platform, are popular. However, RTM does not ensure stable real-time processing in common object request broker architecture. In this paper, a collaboration framework of RTM and TOPPERS embedded component system (TECS) is proposed to address this problem. TECS, a system that satisfies real-time processing requirements, is employed to enhance real-time processing in the proposed framework. To implement the collaboration of RTM and TECS, we have adopted remote procedure call and one-way communication. In addition, extending a generator enables the generation of robot technology components from TECS components. We have evaluated the processor cycle counts of the proposed framework in comparison with those of a conventional method. In addition, we evaluated the execution time of serial communication and a motor application using the proposed framework. The evaluation results show that the proposed framework is functionally employed in a hard real-time system. Furthermore, we evaluated the amount of code generated by the proposed framework. The evaluation results reveal that the code generated by the proposed framework is reusable and can enhance productivity.",Brushless motors; Computer architecture; Motor drives; Ports (Computers); Real-time systems; Robot sensing systems,RTM-TECS: Collaboration Framework for Robot Technology Middleware and Embedded Component System,x,,,,,,,,,NO,,
S477,1,Backward,journalArticle,2002,"Henriksson, Dan; Cervin, Anton; Årzén, Karl-Erik",IFAC Proceedings Volumes,10.3182/20020721-6-ES-1901.00975,,"The paper presents TrueTime, a Matlab/Simulink-based simulator for real-time control systems. TrueTime makes it possible to simulate the temporal behavior of multi-tasking real-time kernels containing controller tasks and to study the effects of CPU and network scheduling on control performance. The simulated real-time kernel is event-driven and can handle external interrupts as well as fine-grained details such as context switches. Arbitrary scheduling policies may be defined, and the control tasks may be implemented using C functions, M functions, or Simulink block diagrams. A number of examples that illustrate the use of TrueTime are presented.",Event-based simulation; Feedback scheduling; Real-time control systems; Realtime kernel; Shared resources,TRUETIME: SIMULATION OF CONTROL LOOPS UNDER SHARED COMPUTER RESOURCES,,,,x,,,,,,NO,,
S478,1,Backward,conferencePaper,2013,"Honegger, Dominik; Meier, Lorenz; Tanskanen, Petri; Pollefeys, Marc",2013 IEEE International Conference on Robotics and Automation,10.1109/ICRA.2013.6630805,,"Robust velocity and position estimation at high update rates is crucial for mobile robot navigation. In recent years optical flow sensors based on computer mouse hardware chips have been shown to perform well on micro air vehicles. Since they require more light than present in typical indoor and outdoor low-light conditions, their practical use is limited. We present an open source and open hardware design 1 of an optical flow sensor based on a machine vision CMOS image sensor for indoor and outdoor applications with very high light sensitivity. Optical flow is estimated on an ARM Cortex M4 microcontroller in real-time at 250 Hz update rate. Angular rate compensation with a gyroscope and distance scaling using a ultrasonic sensor are performed onboard. The system is designed for further extension and adaption and shown in-flight on a micro air vehicle.",CMOS integrated circuits; Computer vision; Image motion analysis; Microcontrollers; Optical design; Optical imaging; Optical sensors,An open source and open hardware embedded metric optical flow CMOS camera for indoor and outdoor applications,x,,,,,,,,,NO,,
S479,1,Backward,journalArticle,2016,"Kaliński, Krzysztof J.; Mazur, Michał",Mechatronics,10.1016/j.mechatronics.2016.01.006,,"In practice, the problem of motion control of the wheeled mobile robots is often neglected. Wheeled mobile robots are strongly nonlinear systems and restricted by non-holonomic constraints. Motion control of such systems is not trivial task and usage of non-optimal control signals can lead to deterioration of the overall robot system's performance. In case of autonomous application of the mobile robots all parts of its control system should work perfectly. The paper presents the theory and application of the optimal control method at the energy performance index towards motion control of the two-wheeled mobile robot during the realisation of complex, dynamically created trajectories. With the use of the proposed control method the two-wheeled mobile robot can realise effectively the desired trajectory, which is generated ad-hoc by the navigation system of the robot. Thus the proposed method can be used for motion control of autonomous or semi-autonomous wheeled mobile robots. The presented results of both computer simulations and experiments indicate that the proposed method works effectively from the point of view of the motion control of two-wheeled mobile robot. Movement of the mobile robot appeared reliable and predictable during all the tests.",Dynamics; Motion control; Nonlinear systems; Wheeled robots,Optimal control at energy performance index of the mobile robots following dynamically created trajectories,x,,,,,,,,,NO,,
S480,1,Backward,journalArticle,2010,"Li, Juncao; Pilkington, Nicholas T.; Xie, Fei; Liu, Qiang",Journal of Systems and Software,10.1016/j.jss.2009.09.043,,"In the state-of-the-art hardware/software (HW/SW) co-design of embedded systems, there is a lack of sufficient support for architectural specifications across HW/SW boundaries. Such an architectural specification ought to capture both hardware and software components and their interactions, and facilitate effective design exploitation of HW/SW trade-offs and scalable HW/SW co-verification. In this paper, we present the embedded architecture description language (EADL). EADL is based on a component model for embedded systems that unifies hardware and software components. EADL does not dictate execution and interface semantics of hardware and software components while supporting flexible platform-oriented semantics instantiation. EADL supports concise representation of embedded system architectures and also formulation of architectural patterns of embedded systems. Besides facilitating design reuse, architectural patterns also facilitate verification reuse via association of property templates with these patterns. Effectiveness of EADL has been demonstrated by its successful application in integrating component-based co-design, co-simulation, co-verification, and co-synthesis.",Architectural patterns; Co-simulation; Co-synthesis; Co-verification; Components; Embedded architecture description language; Hardware/software co-design; Platform; Verification reuse,Embedded architecture description language,x,,,,,,,,,NO,,
S481,1,Backward,journalArticle,2007,"Lu, Bin; Wu, Xin; Figueroa, Hernan; Monti, Antonello",IEEE Transactions on Industrial Electronics,10.1109/TIE.2007.892253,,"Hardware-in-the-loop (HIL) testing is increasingly recognized as an effective approach in the design of power electronics controls. A high-performance real-time simulation environment is necessary to obtain high-fidelity results in HIL simulations. This paper presents the detailed implementation of a very-low-cost multisolver hard real-time simulation environment, namely the real-time extension of the virtual test bed (VTB-RT). VTB-RT is implemented completely from open-source software and off-the-shelf hardware. Using VTB-RT, this paper proposes an efficient real-time HIL testing approach for control designs in power electronics applications. VTB-RT enables the natural coupling between the simulation environment and the hardware under test and, thus, makes virtual power exchange in HIL simulation possible. For validation purposes, the proposed real-time HIL testing approach is applied in two well-known power electronics application examples, namely a boost converter and an H-bridge inverter with their respective control systems, representing a very-low-cost and a relatively advanced hardware setup, respectively. The consistency of the experimental results with the theoretical results proves the applicability of VTB-RT and the proposed testing approach. Finally, the most recent research progresses in VTB-RT are summarized",Application software; Control design; Distributed simulation; Electronic equipment testing; field-programmable gate array (FPGA); Hardware; hardware-in-the-loop (HIL); Inverters; Open source software; power electronics; Power electronics; Power markets; Real time systems; real-time simulation (RTS); System testing; virtual test bed (VTB),A Low-Cost Real-Time Hardware-in-the-Loop Testing Approach of Power Electronics Controls,x,,,,,,,,,NO,,
S482,1,Backward,conferencePaper,2016,"Maruyama, Yuya; Kato, Shinpei; Azumi, Takuya",Proceedings of the 13th International Conference on Embedded Software,10.1145/2968478.2968502,,"Middleware for robotics development must meet demanding requirements in real-time distributed embedded systems. The Robot Operating System (ROS), open-source middleware, has been widely used for robotics applications. However, the ROS is not suitable for real-time embedded systems because it does not satisfy real-time requirements and only runs on a few OSs. To address this problem, ROS1 will undergo a significant upgrade to ROS2 by utilizing the Data Distribution Service (DDS). DDS is suitable for real-time distributed embedded systems due to its various transport configurations (e.g., deadline and fault-tolerance) and scalability. ROS2 must convert data for DDS and abstract DDS from its users; however, this incurs additional overhead, which is examined in this study. Transport latencies between ROS2 nodes vary depending on the use cases, data size, configurations, and DDS vendors. We conduct proof of concept for DDS approach to ROS and arrange DDS characteristic and guidelines from various evaluations. By highlighting the DDS capabilities, we explore and evaluate the potential and constraints of DDS and ROS2.",data distribution service; embedded; publish/subscribe; quality of service; real-time; robot operating system,Exploring the performance of ROS2,,,,,,,,x,,NO,,
S483,1,Backward,conferencePaper,2015,"Burlet, Gregory; Hindle, Abram",2015 IEEE/ACM 12th Working Conference on Mining Software Repositories,10.1109/MSR.2015.34,,"Computer musicians are a community of end-user programmers who often use visual programming languages such as Max/MSP or Pure Data to realize their musical compositions. This research study conducts a multifaceted analysis of the software development practices of computer musicians when programming in these visual music-oriented languages. A statistical analysis of project metadata harvested from software repositories hosted on GitHub reveals that in comparison to the general population of software developers, computer musicians' repositories have less commits, less frequent commits, more commits on weekends, yet similar numbers of bug reports and similar numbers of contributing authors. Analysis of source code in these repositories reveals that the vast majority of code can be reconstructed from duplicate fragments. Finally, these results are corroborated by a survey of computer musicians and interviews with individuals in this end-user community. Based on this analysis and feedback from computer musicians we find that there are many avenues where software engineering can be applied to help aid this community of end-user programmers.",Cloning; Communities; Computer languages; computer music; Computers; end user; Music; Software; visual programming; Visualization,An Empirical Study of End-User Programmers in the Computer Music Community,x,,,,,,,,,NO,,
S484,1,Backward,conferencePaper,2017,"Coelho, Jailton; Valente, Marco Tulio",Proceedings of the 2017 11th Joint Meeting on Foundations of Software Engineering,10.1145/3106237.3106246,,"Open source is experiencing a renaissance period, due to the appearance of modern platforms and workflows for developing and maintaining public code. As a result, developers are creating open source software at speeds never seen before. Consequently, these projects are also facing unprecedented mortality rates. To better understand the reasons for the failure of modern open source projects, this paper describes the results of a survey with the maintainers of 104 popular GitHub systems that have been deprecated. We provide a set of nine reasons for the failure of these open source projects. We also show that some maintenance practices---specifically the adoption of contributing guidelines and continuous integration---have an important association with a project failure or success. Finally, we discuss and reveal the principal strategies developers have tried to overcome the failure of the studied projects.",GitHub; Open Source Software; Project failure,Why modern open source projects fail,,,,,,,,x,,NO,,
S485,1,Backward,conferencePaper,2017,"Dal Sasso, Tommaso; Mocci, Andrea; Lanza, Michele; Mastrodicasa, Ebrisa","2017 IEEE 24th International Conference on Software Analysis, Evolution and Reengineering (SANER)",10.1109/SANER.2017.7884627,,"Software development, like any prolonged and intellectually demanding activity, can negatively affect the motivation of developers. This is especially true in specific areas of software engineering, such as requirements engineering, test-driven development, bug reporting and fixing, where the creative aspects of programming fall short. The developers' engagement might progressively degrade, potentially impacting their work's quality. Gamification, the use of game elements and game design techniques in non-game contexts, is hailed as a means to boost the motivation of people for a wide range of rote activities. Indeed, well-designed games deeply involve gamers in a positive loop of production, feedback, and reward, eliciting desirable feelings like happiness and collaboration. The question we investigate is how the seemingly frivolous context of games and gamification can be ported to the technically challenging and sober domain of software engineering. Our investigation starts with a review of the state of the art of gamification, supported by a motivating scenario to expose how gamification elements can be integrated in software engineering. We provide a set of basic building blocks to apply gamification techniques, present a conceptual framework to do so, illustrated in two usage contexts, and critically discuss our findings.",Collaboration; Computer bugs; Context; Games; Psychology; Software engineering; Systematics,How to gamify software engineering,x,,,,,,,,,NO,,
S486,1,Backward,journalArticle,2008,"Fitzpatrick, Paul; Metta, Giorgio; Natale, Lorenzo",Robotics and Autonomous Systems,10.1016/j.robot.2007.09.014,,"Robot projects are often evolutionary dead ends, with the software and hardware they produce disappearing without trace afterwards. In humanoid robotics, a small field with an avid appetite for novel devices, we experience a great deal of “churn” of this nature. In this paper, we explore how best to make our projects stable and long-lasting, without compromising our ability to constantly change our sensors, actuators, processors and networks. We also look at how to encourage the propagation and evolution of hardware designs, so that we can start to build up a “gene-pool” of material to draw upon for new projects. We advance on two fronts, software and hardware. For some time, we have been developing and using the YARP robot software architecture [Giorgio Metta, Paul Fitzpatrick, Lorenzo Natale, YARP: Yet another robot platform, International Journal on Advanced Robotics Systems 3 (2006) 43–48], which helps organize communication between sensors, processors, and actuators so that loose coupling is encouraged, making gradual system evolution much easier. YARP includes a model of communication that is transport-neutral, so that data flow is decoupled from the details of the underlying networks and protocols in use. Importantly for the long term, YARP is designed to play well with other architectures. Device drivers written for YARP can be ripped out and used without any “middleware”. On the network, basic interoperation is possible with a few lines of code in any language with a socket library, and maximally efficient interoperation can be achieved by following documented protocols. These features are not normally the first things that end-users look for when starting a project, but they are crucial for longevity. We emphasize the strategic utility of the Free Software social contract [B. Perens, The open source definition, in: Chris DiBona, Sam Ockman, Mark Stone (Eds.), Open Sources: Voices from the Open Source Revolution, O’Reilly and Associates, Cambridge, MA, 1999] to software development for small communities with idiosyncratic requirements. We also work to expand our community by releasing the design of our ICub humanoid [N.G. Tsagarakis, G. Metta, G. Sandini, D. Vernon, R. Beira, F. Becchi, L. Righetti, J. Santos-Victor, A.J. Ijspeert, M.C. Carrozza, D.G. Caldwell, iCub — The design and realization of an open humanoid platform for cognitive and neuroscience research, Journal of Advanced Robotics 21 (10) (2007) 1151–1175] under a free and open licence, and funding development using this platform.",Device drivers; Free software; Humanoid robotics; ICub humanoid; YARP,Towards long-lived robot genes,x,,,,,,,,,NO,,
S487,1,Backward,journalArticle,2016,"Gasparic, Marko; Janes, Andrea",Journal of Systems and Software,10.1016/j.jss.2015.11.036,,"A recommendation system for software engineering (RSSE) is a software application that provides information items estimated to be valuable for a software engineering task in a given context. Present the results of a systematic literature review to reveal the typical functionality offered by existing RSSEs, research gaps, and possible research directions. We evaluated 46 papers studying the benefits, the data requirements, the information and recommendation types, and the effort requirements of RSSE systems. We include papers describing tools that support source code related development published between 2003 and 2013. The results show that RSSEs typically visualize source code artifacts. They aim to improve system quality, make the development process more efficient and less expensive, lower developer’s cognitive load, and help developers to make better decisions. They mainly support reuse actions and debugging, implementation, and maintenance phases. The majority of the systems are reactive. Unexploited opportunities lie in the development of recommender systems outside the source code domain. Furthermore, current RSSE systems use very limited context information and rely on simple models. Context-adapted and proactive behavior could improve the acceptance of RSSE systems in practice.",Recommendation system for software engineering; Systematic literature review,What recommendation systems for software engineering recommend: A systematic literature review,x,,,,,,,,,NO,,
S488,1,Backward,conferencePaper,2013,"Grant, Scott; Betts, Buddy",2013 10th Working Conference on Mining Software Repositories (MSR),10.1109/MSR.2013.6624007,,"Stack Overflow, a question and answer Web site, uses a reward system called badges to publicly reward users for their contributions to the community. Badges are used alongside a reputation score to reward positive behaviour by relating a user's site identity with their perceived expertise and respect in the community. A greater number of badges associated with a user profile in some way indicates a higher level of authority, leading to a natural incentive for users to attempt to achieve as many badges as possible. In this study, we examine the publicly available logs for Stack Overflow to examine three of these badges in detail. We look at the effect of one badge in context on an individual user level and at the global scope of three related badges across all users by mining user behaviour around the time that the badge is awarded. This analysis supports the claim that badges can be used to influence user behaviour by demonstrating one instance of an increase in user activity related to a badge immediately before it is awarded when compared to the period afterwards.",Awards activities; Bars; Communities; Data mining; Games; History; Silver,Encouraging user behaviour with achievements: An empirical study,x,,,,,,,,,NO,,
S489,1,Backward,conferencePaper,2016,"Hermans, Felienne; Aivaloglou, Efthimia",2016 IEEE 24th International Conference on Program Comprehension (ICPC),10.1109/ICPC.2016.7503706,,"Recently, block-based programming languages like Alice, Scratch and Blockly have become popular tools for programming education. There is substantial research showing that block-based languages are suitable for early programming education. But can block-based programs be smelly too? And does that matter to learners? In this paper we explore the code smells metaphor in the context of block-based programming language Scratch. We conduct a controlled experiment with 61 novice Scratch programmers, in which we divided the novices into three groups. One third receive a non-smelly program, while the other groups receive a program suffering from the Duplication or the Long Method smell respectively. All subjects then perform the same comprehension tasks on their program, after which we measure their time and correctness. The results of the experiment show that code smell indeed influence performance: subjects working on the program exhibiting code smells perform significantly worse, but the smells did not affect the time subjects needed. Investigating different types of tasks in more detail, we find that Long Method mainly decreases system understanding, while Duplication decreases the ease with which subjects modify Scratch programs.",Computer languages; Education; Games; Programming profession; Sprites (computer),Do code smells hamper novice programming? A controlled experiment on Scratch programs,x,,,,,,,,,NO,,
S49,1,Forward,conferencePaper,2015,"McKeever, Kennon; Zeleke, Yegeta; Bunting, Matt; Sprinkle, Jonathan",Proceedings of the Workshop on Domain-Specific Modeling,10.1145/2846696.2846706,https://doi.org/10.1145/2846696.2846706,"Autonomous vehicles and other robotics systems are frequently implemented using a general-purpose programming language such as C++, and prototyped using domain-specific tool such as MATLAB/Simulink, and LabVIEW. Such an approach is not efficient when programming primitive motions of autonomous vehicles when considering important safety constraints, and when promoting the broad access to robotic systems through involvement of students and aspiring students who do not know conventional low-level programming languages. Aside from general-purpose programming languages, there are languages that are specifically designed to model autonomous vehicles, such as SHIFT, but these languages are typically for simulation purposes only. This experience report discusses the creation of a domain-specific language that allows for faster programming of autonomous vehicles while ensuring valid constraints will be met. This language generates code for multiple controllers that will operate alternatively to allow for fast and effective programming of vehicle trajectories using primitive motions. In addition to improving coding efficiency and reducing the number of programming errors, the language adds a level of abstraction so that autonomous vehicle behaviors may be generated by people with little knowledge of low-level details of the car's operation. Furthermore, this language ensures safe operation of the vehicle by enforcing a set of user-definable constraints on the output path. A main set of constraints that are applied to every generated path have been specifically chosen to enforce safe switching between controllers and prevent the planning of unsafe actions. A novel application of the language is its ability to permit users to add specific constraints for a particular path; these constraints are checked for validity after the main constraint check is performed.",Cyber-Physical Systems; Autonomous Systems; Metamodeling,Experience report: constraint-based modeling of autonomous vehicle trajectories,x,,,,,,,,,NO,,
S490,1,Backward,conferencePaper,2013,"Hermans, Felienne; Sedee, Ben; Pinzger, Martin; van Deursen, Arie",2013 35th International Conference on Software Engineering (ICSE),10.1109/ICSE.2013.6606575,,"Spreadsheets are widely used in industry: it is estimated that end-user programmers outnumber programmers by a factor 5. However, spreadsheets are error-prone, numerous companies have lost money because of spreadsheet errors. One of the causes for spreadsheet problems is the prevalence of copy-pasting. In this paper, we study this cloning in spreadsheets. Based on existing text-based clone detection algorithms, we have developed an algorithm to detect data clones in spreadsheets: formulas whose values are copied as plain text in a different location. To evaluate the usefulness of the proposed approach, we conducted two evaluations. A quantitative evaluation in which we analyzed the EUSES corpus and a qualitative evaluation consisting of two case studies. The results of the evaluation clearly indicate that 1) data clones are common, 2) data clones pose threats to spreadsheet quality and 3) our approach supports users in finding and resolving data clones.",Algorithm design and analysis; clone detection; Cloning; Clustering algorithms; code smells; Companies; Data visualization; Detection algorithms; Educational institutions; spreadsheet smells; spreadsheets,Data clone detection and visualization in spreadsheets,x,,,,,,,,,NO,,
S491,1,Backward,conferencePaper,2013,"Khondhu, Jymit; Capiluppi, Andrea; Stol, Klaas-Jan",Open Source Software: Quality Verification,10.1007/978-3-642-38928-3_5,,"Open Source Software (OSS) proponents suggest that when developers lose interest in their project, their last duty is to “hand it off to a competent successor.” However, the mechanisms of such a hand-off are not clear, or widely known among OSS developers. As a result, many OSS projects, after a certain long period of evolution, stop evolving, in fact becoming “inactive” or “abandoned” projects. This paper presents an analysis of the population of projects contained within one of the largest OSS repositories available (SourceForge.net), in order to describe how projects abandoned by their developers can be identified, and to discuss the attributes and characteristics of these inactive projects. In particular, the paper attempts to differentiate projects that experienced maintainability issues from those that are inactive for other reasons, in order to be able to correlate common characteristics to the “failure” of these projects.",Inactive Projects; Maintainability Index; Open Source,Is It All Lost? A Study of Inactive Open Source Projects,x,,,,,,,,,NO,,
S492,1,Backward,conferencePaper,2013,"Liekna, Aleksis; Lavendelis, Egons; Nikitenko, Agris",Distributed Computing and Artificial Intelligence,10.1007/978-3-319-00551-5_70,,"This paper presents a case-study regarding development challenges of multi-agent system for multi-robot system management based on our previous research of the given topic. During the development and implementation of multi-agent system prototype using JADE platform, several implementation challenges regarding messaging system were faced. These challenges may negatively impact system maintenance, burden system evolution and also cause performance issues. The latter is of special importance in the context of multi-robot systems that operate under real-time constraints. In this paper we adopt our previous research as a case study and share challenges faced during prototype multi-robot system development. We believe that potential drawbacks and pitfalls of multi-agent system development such as challenges identified in this paper should be considered with great care especially when applying multi-agent systems to real-time constrained applications such as multi-robot systems.",Behaviour Based Agents; Development Challenges; Multi-Robot Systems; Real Time Agent Applications,Challenges in Development of Real Time Multi-Robot System Using Behaviour Based Agents,x,,,,,,,,,NO,,
S493,1,Backward,journalArticle,2010,"Lungu, Mircea; Lanza, Michele; Gîrba, Tudor; Robbes, Romain",Science of Computer Programming,10.1016/j.scico.2009.09.004,,"Software evolution research has focused mostly on analyzing the evolution of single software systems. However, it is rarely the case that a project exists as standalone, independent of others. Rather, projects exist in parallel within larger contexts in companies, research groups or even the open-source communities. We call these contexts software ecosystems. In this paper, we present the Small Project Observatory, a prototype tool which aims to support the analysis of software ecosystems through interactive visualization and exploration. We present a case study of exploring an ecosystem using our tool, we describe the architecture of the tool, and we distill lessons learned during the tool-building experience.",Maintenance; Reverse engineering; Software ecosystems; Software evolution; Software visualization,The Small Project Observatory: Visualizing software ecosystems,x,,,,,,,,,NO,,
S494,1,Backward,conferencePaper,2014,"Murphy-Hill, Emerson; Zimmermann, Thomas; Nagappan, Nachiappan",Proceedings of the 36th International Conference on Software Engineering,10.1145/2568225.2568226,,"Video games make up an important part of the software industry, yet the software engineering community rarely studies video games. This imbalance is a problem if video game development differs from general software development, as some game experts suggest. In this paper we describe a study with 14 interviewees and 364 survey respondents. The study elicited substantial differences between video game development and other software development. For example, in game development, “cowboy coders” are necessary to cope with the continuous interplay between creative desires and technical constraints. Consequently, game developers are hesitant to use automated testing because of these tests’ rapid obsolescence in the face of shifting creative desires of game designers. These differences between game and non-game development have implications for research, industry, and practice. For instance, as a starting point for impacting game development, researchers could create testing tools that enable game developers to create tests that assert flexible behavior with little up-front investment.",games; practices; Software engineering,"Cowboys, ankle sprains, and keepers of quality: how is video game development different from software development?",x,,,,,,,,,NO,,
S495,1,Backward,conferencePaper,2017,"Robles, Gregorio; Moreno-León, Jesús; Aivaloglou, Efthimia; Hermans, Felienne",2017 IEEE 11th International Workshop on Software Clones (IWSC),10.1109/IWSC.2017.7880506,,"Computer programming is being introduced in schools worldwide as part of a movement that promotes Computational Thinking (CT) skills among young learners. In general, learners use visual, block-based programming languages to acquire these skills, with Scratch being one of the most popular ones. Similar to professional developers, learners also copy and paste their code, resulting in duplication. In this paper we present the findings of correlating the assessment of the CT skills of learners with the presence of software clones in over 230,000 projects obtained from the Scratch platform. Specifically, we investigate i) if software cloning is an extended practice in Scratch projects, ii) if the presence of code cloning is independent of the programming mastery of learners, iii) if code cloning can be found more frequently in Scratch projects that require specific skills (as parallelism or logical thinking), and iv) if learners who have the skills to avoid software cloning really do so. The results show that i) software cloning can be commonly found in Scratch projects, that ii) it becomes more frequent as learners work on projects that require advanced skills, that iii) no CT dimension is to be found more related to the absence of software clones than others, and iv) that learners -even if they potentially know how to avoid cloning- still copy and paste frequently. The insights from this paper could be used by educators and learners to determine when it is pedagogically more effective to address software cloning, by educational programming platform developers to adapt their systems, and by learning assessment tools to provide better evaluations.",Cloning; Parallel processing; Programming profession; Software; Sprites (computer); Visualization,Software clones in scratch projects: on the presence of copy-and-paste in computational thinking learning,x,,,,,,,,,NO,,
S496,1,Backward,conferencePaper,2016,"Steinmacher, Igor; Conte, Tayana Uchoa; Treude, Christoph; Gerosa, Marco Aurélio",Proceedings of the 38th International Conference on Software Engineering,10.1145/2884781.2884806,,"Community-based Open Source Software (OSS) projects are usually self-organized and dynamic, receiving contributions from distributed volunteers. Newcomer are important to the survival, long-term success, and continuity of these communities. However, newcomers face many barriers when making their first contribution to an OSS project, leading in many cases to dropouts. Therefore, a major challenge for OSS projects is to provide ways to support newcomers during their first contribution. In this paper, we propose and evaluate FLOSScoach, a portal created to support newcomers to OSS projects. FLOSScoach was designed based on a conceptual model of barriers created in our previous work. To evaluate the portal, we conducted a study with 65 students, relying on qualitative data from diaries, self-efficacy questionnaires, and the Technology Acceptance Model. The results indicate that FLOSScoach played an important role in guiding newcomers and in lowering barriers related to the orientation and contribution process, whereas it was not effective in lowering technical barriers. We also found that FLOSScoach is useful, easy to use, and increased newcomers' confidence to contribute. Our results can help project maintainers on deciding the points that need more attention in order to help OSS project newcomers overcome entry barriers.",barriers; beginners; joining process; newbies; newcomers; novices; obstacles; onboarding; open source software,Overcoming open source project entry barriers with a portal for newcomers,x,,,,,,,,,NO,,
S497,1,Backward,journalArticle,2013,"Stolee, Kathryn T.; Elbaum, Sebastian; Sarma, Anita",Information and Software Technology,10.1016/j.infsof.2012.10.004,,"Context End-user programmers are numerous, write software that matters to an increasingly large number of users, and face software engineering challenges that are similar to their professionals counterparts. Yet, we know little about how these end-user programmers create and share artifacts in repositories as part of a community. Objective This work aims to gain a better understanding of end-user programmer communities, the characteristics of artifacts in community repositories, and how authors evolve over time. Method An artifact-based analysis of 32,000 mashups from the Yahoo! Pipes repository was performed. The popularity, configurability, complexity, and diversity of the artifacts were measured. Additionally, for the most prolific authors, we explore their submission trends over time. Results Similar to other online communities, there is great deal of attrition but authors who persevere tend to improve over time, creating pipes that are more configurable, diverse, complex, and popular. We also discovered, however, that end-user programmers do not effectively reuse existing programs, submit pipes that are highly similar to others already in the repository, and in most cases do not have an awareness of the community or the richness of artifacts that exist in repositories. Conclusion There is a need for better end-user programmer support in several stages of the software lifecycle, including development, maintenance, search, and program understanding. Without such support, the community repositories will continue to be cluttered with highly-similar artifacts and authors may not be able to take full advantage of the community resources.",Artifact repositories; Community analysis; Diversity analysis; End-user programmers; Web mashups,Discovering how end-user programmers and their communities use public repositories: A study on Yahoo! Pipes,x,,,,,,,,,NO,,
S498,1,Backward,conferencePaper,2014,"Vasilescu, Bogdan",Companion Proceedings of the 36th International Conference on Software Engineering,10.1145/2591062.2591091,,"Software engineering is inherently a collaborative venture. In open-source software (OSS) development, such collaborations almost always span geographies and cultures. Because of the decentralised and self-directed nature of OSS as well as the social diversity inherent to OSS communities, the success of an OSS project depends to a large extent on the social aspects of distributed collaboration and achieving coordination over distance. The goal of this dissertation research is to raise our understanding of how human aspects (e.g., gender or cultural diversity), gamification and social media (e.g., participation in social environments such as Stack Overflow or GitHub) impact distributed collaboration in OSS.",Collaborative software engineering; open source,"Human aspects, gamification, and social media in collaborative software engineering",x,,,,,,,,,NO,,
S499,1,Backward,conferencePaper,2016,"Washburn, Michael; Sathiyanarayanan, Pavithra; Nagappan, Meiyappan; Zimmermann, Thomas; Bird, Christian",Proceedings of the 38th International Conference on Software Engineering Companion,10.1145/2889160.2889253,,"In game development, software teams often conduct postmortems to reflect on what went well and what went wrong in a project. The postmortems are shared publicly on gaming sites or at developer conferences. In this paper, we present an analysis of 155 postmortems published on the gaming site Gamasutra.com. We identify characteristics of game development, link the characteristics to positive and negative experiences in the postmortems and distill a set of best practices and pitfalls for game development.",games; postmortems; qualitative analysis,What went right and what went wrong: an analysis of 155 postmortems from game development,x,,,,,,,,,NO,,
S50,1,Forward,journalArticle,2018,"Bhadani, Rahul Kumar; Sprinkle, Jonathan; Bunting, Matthew",Electronic Proceedings in Theoretical Computer Science,10.4204/EPTCS.269.4,http://arxiv.org/abs/1804.04347,"This paper presents the CAT Vehicle (Cognitive and Autonomous Test Vehicle) Testbed: a research testbed comprised of a distributed simulation-based autonomous vehicle, with straightforward transition to hardware in the loop testing and execution, to support research in autonomous driving technology. The evolution of autonomous driving technology from active safety features and advanced driving assistance systems to full sensor-guided autonomous driving requires testing of every possible scenario. However, researchers who want to demonstrate new results on a physical platform face difficult challenges, if they do not have access to a robotic platform in their own labs. Thus, there is a need for a research testbed where simulation-based results can be rapidly validated through hardware in the loop simulation, in order to test the software on board the physical platform. The CAT Vehicle Testbed offers such a testbed that can mimic dynamics of a real vehicle in simulation and then seamlessly transition to reproduction of use cases with hardware. The simulator utilizes the Robot Operating System (ROS) with a physics-based vehicle model, including simulated sensors and actuators with configurable parameters. The testbed allows multi-vehicle simulation to support vehicle to vehicle interaction. Our testbed also facilitates logging and capturing of the data in the real time that can be played back to examine particular scenarios or use cases, and for regression testing. As part of the demonstration of feasibility, we present a brief description of the CAT Vehicle Challenge, in which student researchers from all over the globe were able to reproduce their simulation results with fewer than 2 days of interfacing with the physical platform.",Computer Science - Software Engineering; Electrical Engineering and Systems Science - Systems and Control; Computer Science - Robotics,The CAT Vehicle Testbed: A Simulator with Hardware in the Loop for Autonomous Vehicle Applications,x,,,,,,,,,NO,,
S500,1,Backward,journalArticle,2013,"Pratt, Gill; Manzo, Justin",IEEE Robotics Automation Magazine,10.1109/MRA.2013.2255424,,,,The DARPA Robotics Challenge [Competitions],x,,,,,,,,,NO,,
S501,1,Backward,bookSection,2013,"Falcone, Yliès; Havelund, Klaus; Reger, Giles",Engineering Dependable Software Systems,,,"This tutorial presents an overview of the field referred as to runtime verification. Runtime Verification is the study of algorithms, data structures, and tools focused on analyzing executions of system. The performed analysis aims at improving the confidence in systems behavior, either by improving program understanding, or by checking conformance to specifications or algorithms. This chapter focuses specifically on checking execution traces against requirements formalized in terms of monitors. It is first shown on examples how such monitors can be written using aspect-oriented programming, exemplified by ASPECTJ. Subsequently four monitoring systems are illustrated on the same examples. The systems cover such formalisms as regular expressions, temporal logics, state machines, and rule-based programming, as well as the distinction between external and internal DSLs.",,A tutorial on runtime verification,,,,,x,,,,,NO,,
S502,1,Backward,journalArticle,2018,"Wang, Rui; Wei, Yingxia; Song, Houbing; Jiang, Yu; Guan, Yong; Song, Xiaoyu; Li, Xiaojuan",IEEE Transactions on Industrial Informatics,10.1109/TII.2017.2788901,,"Robot systems have been widely used in industry and also play an important role in human social life. Safety critical applications usually demand rigorously formal verification to ensure correctness. But for the increasing complexity of dynamic environments and applications, it is not easy to build a comprehensive model for the traditional offline verification. In this paper, we propose RobotRV, the first data-centered real-time verification approach for the robot system. Within this approach, a domain-specific language named RoboticSpec is designed to specify the complex application scenario of the robot system, the data packets transmitted in the robot system, and the safety critical temporal properties. Then, we develop an engine to automatically translate the RoboticSpec model into a real-time verifier. The generated verifier serves as an independent plug-in component for the runtime verification of concerned temporal properties. We applied the proposed approach to a real robot system. As presented in experiment results, our method detected potential failures, and improved the safety of robot system.",Collision avoidance; real-time data; Real-time systems; robot system; Runtime; runtime verification; Safety; Service robots; Testing,From Offline Towards Real-Time Verification for Robot Systems,x,,,,,,,,,NO,,
S503,1,Backward,journalArticle,2005,"Pettersson, Ola",Robotics and Autonomous Systems,10.1016/j.robot.2005.09.004,,"Research on execution monitoring in its own is still not very common within the field of robotics and autonomous systems. It is more common that researchers interested in control architectures or execution planning include monitoring as a small part of their work when they realize that it is needed. On the other hand, execution monitoring has been a well studied topic within industrial control, although control theorists seldom use this term. Instead they refer to the problem of fault detection and isolation (FDI). This survey will use the knowledge and terminology from industrial control in order to classify different execution monitoring approaches applied to robotics. The survey is particularly focused on autonomous mobile robotics.",Autonomous systems; Diagnosis; Execution monitoring; Fault detection and isolation; Robotics,Execution monitoring in robotics: A survey,,,,x,,,,,,NO,,
S504,1,Backward,conferencePaper,2015,"Geravand, Milad; Rampeltshammer, Wolfgang; Peer, Angelika",2015 IEEE International Conference on Rehabilitation Robotics (ICORR),10.1109/ICORR.2015.7281314,,Mobility assistance robots can provide physical and balance support in order to prevent falls of elderly or patients. In this paper we propose a fall prevention approach for a mobility assistance robot equipped with a pair of actuated arms. The algorithm evaluates the user's Extrapolated Center of Mass (XCOM) and determines required supportive forces to be provided to the user in order to prevent user falls. We further present how the required forces are realized by the robot. Performance of the proposed approach is tested in experiments by a mobility assistance robot supporting subjects provoking falls in different directions.,Computational modeling; Foot; Force; Legged locomotion; Manipulators; Robot sensing systems,Control of mobility assistive robot for human fall prevention,x,,,,,,,,,NO,,
S505,1,Backward,conferencePaper,2017,"Park, Daehyung; Kim, Hokeun; Hoshi, Yuuna; Erickson, Zackory; Kapusta, Ariel; Kemp, Charles C.",2017 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS.2017.8206437,,"Activities of daily living (ADLs) are important for quality of life. Robotic assistance offers the opportunity for people with disabilities to perform ADLs on their own. However, when a complex semi-autonomous system provides real-world assistance, occasional anomalies are likely to occur. Robots that can detect, classify and respond appropriately to common anomalies have the potential to provide more effective and safer assistance. We introduce a multimodal execution monitor to detect and classify anomalous executions when robots operate near humans. Our system builds on our past work on multimodal anomaly detection. Our new monitor classifies the type and cause of common anomalies using an artificial neural network. We implemented and evaluated our execution monitor in the context of robot-assisted feeding with a general-purpose mobile manipulator. In our evaluations, our monitor outperformed baseline methods from the literature. It succeeded in detecting 12 common anomalies from 8 able-bodied participants with 83% accuracy and classifying the types and causes of the detected anomalies with 90% and 81% accuracies, respectively. We then performed an in-home evaluation with Henry Evans, a person with severe quadriplegia. With our system, Henry successfully fed himself while the monitor detected, classified the types, and classified the causes of anomalies with 86%, 90%, and 54% accuracy, respectively.",Detectors; Feature extraction; Hidden Markov models; Monitoring; Robot sensing systems,A multimodal execution monitor with anomaly classification for robot-assisted feeding,x,,,,,,,,,NO,,
S506,1,Backward,conferencePaper,2006,"Bauer, Andreas; Leucker, Martin; Schallhart, Christian",FSTTCS 2006: Foundations of Software Technology and Theoretical Computer Science,10.1007/11944836_25,,"This paper presents a construction for runtime monitors that check real-time properties expressed in timed LTL (TLTL). Due to D’Souza’s results, TLTL can be considered a natural extension of LTL towards real-time. Moreover, a typical obstacle in runtime verification is solved both for untimed and timed formulae, in that standard models of linear temporal logic are infinite traces, whereas in runtime verification only finite system behaviours are at hand. Therefore, a 3-valued semantics (true, false, inconclusive) for LTL and TLTL on finite traces is defined that resembles the infinite trace semantics in a suitable and intuitive manner. Then, the paper describes how to construct, given a (T)LTL formula, a deterministic monitor with three output symbols that reads a finite trace and yields its according 3-valued (T)LTL semantics. Notably, the monitor rejects a trace as early as possible, in that any minimal bad prefix results in false as a return value.",,Monitoring of Real-Time Properties,,,,x,,,,,,NO,,
S508,1,Backward,journalArticle,2015,"Stentz, Anthony; Herman, Herman; Kelly, Alonzo; Meyhofer, Eric; Haynes, G. Clark; Stager, David; Zajac, Brian; Bagnell, J. Andrew; Brindza, Jordan; Dellin, Christopher; George, Michael; Gonzalez-Mora, Jose; Hyde, Sean; Jones, Morgan; Laverne, Michel; Likhachev, Maxim; Lister, Levi; Powers, Matt; Ramos, Oscar; Ray, Justin; Rice, David; Scheifflee, Justin; Sidki, Raumi; Srinivasa, Siddhartha; Strabala, Kyle; Tardif, Jean-Philippe; Valois, Jean-Sebastien; Weghe, J. Michael Vande; Wagner, Michael; Wellington, Carl",Journal of Field Robotics,10.1002/rob.21569,,"We have developed the CHIMP (CMU Highly Intelligent Mobile Platform) robot as a platform for executing complex tasks in dangerous, degraded, human-engineered environments. CHIMP has a near-human form factor, work-envelope, strength, and dexterity to work effectively in these environments. It avoids the need for complex control by maintaining static rather than dynamic stability. Utilizing various sensors embedded in the robot's head, CHIMP generates full three-dimensional representations of its environment and transmits these models to a human operator to achieve latency-free situational awareness. This awareness is used to visualize the robot within its environment and preview candidate free-space motions. Operators using CHIMP are able to select between task, workspace, and joint space control modes to trade between speed and generality. Thus, they are able to perform remote tasks quickly, confidently, and reliably, due to the overall design of the robot and software. CHIMP's hardware was designed, built, and tested over 15 months leading up to the DARPA Robotics Challenge. The software was developed in parallel using surrogate hardware and simulation tools. Over a six-week span prior to the DRC Trials, the software was ported to the robot, the system was debugged, and the tasks were practiced continuously. Given the aggressive schedule leading to the DRC Trials, development of CHIMP focused primarily on manipulation tasks. Nonetheless, our team finished 3rd out of 16. With an upcoming year to develop new software for CHIMP, we look forward to improving the robot's capability and increasing its speed to compete in the DRC Finals.",,"CHIMP, the CMU Highly Intelligent Mobile Platform",x,,,,,,,,,NO,,
S509,1,Backward,journalArticle,2017,"Romay, Alberto; Kohlbrecher, Stefan; Stumpf, Alexander; von Stryk, Oskar; Maniatopoulos, Spyros; Kress-Gazit, Hadas; Schillinger, Philipp; Conner, David C.",Journal of Field Robotics,10.1002/rob.21671,,"Team ViGIR and Team Hector participated in the DARPA Robotics Challenge (DRC) Finals, held June 2015 in Pomona, California, along with 21 other teams from around the world. Both teams competed using the same high-level software, in conjunction with independently developed low-level software specific to their humanoid robots. On the basis of previous work on operator-centric manipulation control at the level of affordances, we developed an approach that allows one or more human operators to share control authority with a high-level behavior controller. This collaborative autonomy decreases the completion time of manipulation tasks, increases the reliability of the human-robot team, and allows the operators to adjust the robotic system's autonomy on-the-fly. This article discusses the technical challenges we faced and overcame during our efforts to allow the human operators to interact with the robotic system at a higher level of abstraction and share control authority with it. We introduce and evaluate the proposed approach in the context of our two teams' participation in the DRC Finals. We also present additional, systematic experiments conducted in the lab afterward. Finally, we present a discussion about the lessons learned while transitioning between operator-centered manipulation control and behavior-centered manipulation control during competition.",,Collaborative Autonomy between High-level Behaviors and Human Operators for Remote Manipulation Tasks using Different Humanoid Robots,x,,,,,,,,,NO,,
S51,1,Forward,conferencePaper,2017,"Olson, Elizabeth A.; Risso, Nathalie; Johnson, Adam M.; Sprinkle, Jonathan","2017 CHILEAN Conference on Electrical, Electronics Engineering, Information and Communication Technologies (CHILECON)",10.1109/CHILECON.2017.8229692,,"This paper presents preliminary results on the development of a vision-based controller with a smart phone in the loop for autonomous vehicles. Our approach involves the use of the low cost vision sensors available on a smart phone to implement speed control for a lead-follower application, under stop-and-go traffic conditions. The controller uses fuzzy logic to determine commands based on estimated car position and speed with respect to the target vehicle being followed. We define constraints for system parameters associated with the minimum resolution and distance required for the controller to operate efficiently. The proposed design was successfully demonstrated on the University of Arizona CAT Vehicle by having it identify and follow a chosen human-driven lead vehicle.",Image color analysis; Smart phones; Robotics; Cameras; Automobiles; Cyber-physical systems; Autonomous vehicles; Fuzzy logic; Lead,Fuzzy control of an autonomous car using a smart phone,x,,,,,,,,,NO,,
S510,1,Backward,conferencePaper,2011,"Zaman, Safdar; Slany, Wolfgang; Steinbauer, Gerald","2011 Saudi International Electronics, Communications and Photonics Conference (SIECPC)",10.1109/SIECPC.2011.5876943,,"The Robot Operating System (ROS) provides operating system-like services to operate robots. Mapping, localization, and autonomous navigation in an indoor environment are popular issues in the field of autonomous robots. Autonomous navigation in a dynamic environment is not only challenging but also uncovers many indoor environmental factors which affect the process of mapping and navigation. The presented work describes how a ROS-based control system is used with a Pioneer 3-DX robot for indoor mapping, localization, and autonomous navigation. Mapping of different challenging environments is presented in this work. Moreover, some factors associated with indoor environments that can affect mapping, localization, and automatic navigation, are also presented. For experiments, three environments (one artificial and two real) have been tested. Some implementation was done in C and Python.",Collision avoidance; Lasers; Navigation; Robot sensing systems; Servers,"ROS-based mapping, localization and autonomous navigation using a Pioneer 3-DX robot and their relevant issues",x,,,,,,,,,NO,,
S511,1,Backward,journalArticle,2012,"Zhang, Zhengyou",IEEE MultiMedia,10.1109/MMUL.2012.24,,"Recent advances in 3D depth cameras such as Microsoft Kinect sensors (www.xbox.com/en-US/kinect) have created many opportunities for multimedia computing. The Kinect sensor lets the computer directly sense the third dimension (depth) of the players and the environment. It also understands when users talk, knows who they are when they walk up to it, and can interpret their movements and translate them into a format that developers can use to build new experiences. While the Kinect sensor incorporates several advanced sensing hardware, this article focuses on the vision aspect of the Kinect sensor and its impact beyond the gaming industry.",Cameras; computer vision; Games; human-computer interaction; Microsoft Kinect; motion capture; multimedia; Sensors; Three dimensional displays; Video recording,Microsoft Kinect Sensor and Its Effect,x,,,,,,,,,NO,,
S512,1,Backward,conferencePaper,2015,"Boudjit, K.; Larbes, C.","2015 12th International Conference on Informatics in Control, Automation and Robotics (ICINCO)",,,"Nowadays, there are many robotic applications being developed to do tasks autonomously without any interactions or commands from human. Therefore, developing a system which enables a robot to do surveillance such as detection and tracking of a moving object will lead us to more advanced tasks carried out by robots in the future. AR.Drone is a flying robot platform that is able to take role as UAV (unmanned aerial vehicle). usage of computer vision algorithm, such as Hough transform makes it possible for such system to be implemented on AR.Drone. In this research, the developed algorithm is able to detect and track an object with certain shape, then the algorithm is successfully implemented on AR.Drone quadcopter for detection and tracking.",Ar.Drone; Cameras; Computer vision; Flight Autonomous; Hough Transform; Object detection; Robot sensing systems; Target tracking; The Quadrotor; Tracking,Detection and implementation autonomous target tracking with a Quadrotor AR.Drone,,,,,x,,,,,NO,,
S513,1,Backward,conferencePaper,2016,"Koubâa, Anis; Sriti, Mohamed-Foued; Javed, Yasir; Alajlan, Maram; Qureshi, Basit; Ellouze, Fatma; Mahmoud, Abdelrahman",2016 International Conference on Autonomous Robot Systems and Competitions (ICARSC),10.1109/ICARSC.2016.66,,"This paper presents the design of an assistive mobile robot to support people in their everyday activities in office and home environments. The contribution of this paper consists in the design of a modular component-based software architecture that provides different abstraction layers on top of Robot Operating System (ROS) to make easier the design and development of service robots with ROS. The first abstraction layer is the COROS framework composed of complementary software subsystems providing different interfaces between ROS and the client applications. The second abstraction layer is the integration of Web services into ROS to allow client applications to seamlessly and transparently interact with the robot while hiding all implementation details. The proposed software architecture was validated through a experimental prototype of Turtlebot deployed in University campus. Furthermore, we outline the challenges incurred during experimentation and focus on lessons learned throughout the implementation and deployment.",Computer architecture; Robot sensing systems; Service robots; Web services,Turtlebot at Office: A Service-Oriented Software Architecture for Personal Assistant Robots Using ROS,,x,,,,,,,,NO,,
S514,1,Backward,journalArticle,2012,"Alexander, Brandon; Hsiao, Kaijen; Jenkins, Chad; Suay, Bener; Toris, Russell",IEEE Robotics Automation Magazine,10.1109/MRA.2012.2221235,,,,Robot Web Tools [ROS Topics],,x,,,,,,,,NO,,
S515,1,Backward,journalArticle,2017,"Dieber, Bernhard; Breiling, Benjamin; Taurer, Sebastian; Kacianka, Severin; Rass, Stefan; Schartner, Peter",Robotics and Autonomous Systems,10.1016/j.robot.2017.09.017,,"Future robotic systems will be situated in highly networked environments where they communicate with industrial control systems, cloud services or other systems at remote locations. In this trend of strong digitization of industrial systems (also sometimes referred to as Industry 4.0), cyber attacks are an increasing threat to the integrity of the robotic systems at the core of this new development. It is expected, that the Robot Operating System (ROS) will play an important role in robotics outside of pure research-oriented scenarios. ROS however has significant security issues which need to be addressed before such products should reach mass markets. In this paper we present the most common vulnerabilities of ROS, attack vectors to exploit those and several approaches to secure ROS and similar systems. We show how to secure ROS on an application level and describe a solution which is integrated directly into the ROS core. Our proposed solution has been implemented and tested with recent versions of ROS, and adds security to all communication channels without being invasive to the system kernel itself.",Industry 4.0; Robotics; ROS; Security,Security for the Robot Operating System,,x,,,,,,,,NO,,
S517,1,Backward,journalArticle,2009,"Leucker, Martin; Schallhart, Christian",The Journal of Logic and Algebraic Programming,10.1016/j.jlap.2008.08.004,,"In this paper, a brief account of the field of runtime verification is given. Starting with a definition of runtime verification, a comparison to well-known verification techniques like model checking and testing is provided, and applications in which runtime verification brings out its distinguishing features are pointed out. Moreover, extensions of runtime verification such as monitor-oriented programming, and monitor-based runtime reflection are sketched and their similarities and differences are discussed. Finally, the use of runtime verification for contract enforcement is briefly pointed out.",Assertion checking; Monitoring; Testing; Verification,A brief account of runtime verification,x,,,,,,,,,NO,,
S518,1,Backward,conferencePaper,2017,"Shi, Hao; Dong, Wei; Zhou, Ge; Yin, Liangze","2017 IEEE International Conference on Software Quality, Reliability and Security Companion (QRS-C)",10.1109/QRS-C.2017.66,,"With the increasingly application of discrete control software in automatic control field, the security and reliability of its behavior becomes even more essential. However, the traditional verification methods are of high complexity and poor flexibility, so the lightweight Runtime Verification becomes an alternative. In this paper, aiming at real-time properties in discrete control software, an improved runtime verification framework is pro-posed. According to characteristics of real-time properties, we introduce DT-MTL in specifications to describe these properties, and two algorithms of monitor's generation are proposed. Based on the idea of parametric runtime verification, the framework can be used to automate the monitoring of parameterized real-time properties, which are described by DT-MTL. We carried out experiments on the high speed train control system to prove the validity of the framework.",Automata; Clocks; Control systems; Discrete Control Software; Monitoring; Real-time Property; Real-time systems; Runtime; Runtime Verification; Software,Monitor Synthesis for Parametric MTL Properties in Discrete Control Software,x,,,,,,,,,NO,,
S519,1,Backward,conferencePaper,1977,"Pnueli, Amir",18th Annual Symposium on Foundations of Computer Science (sfcs 1977),10.1109/SFCS.1977.32,,"A unified approach to program verification is suggested, which applies to both sequential and parallel programs. The main proof method suggested is that of temporal reasoning in which the time dependence of events is the basic concept. Two formal systems are presented for providing a basis for temporal reasoning. One forms a formalization of the method of intermittent assertions, while the other is an adaptation of the tense logic system Kb, and is particularly suitable for reasoning about concurrent programs.",Clocks; Logic; Operating systems; Power system modeling; Programming profession; Real time systems; Reasoning about programs; Safety; Stress; System recovery,The temporal logic of programs,,,,x,,,,,,NO,,
S52,1,Forward,conferencePaper,2019,"Zhang, Guojun; Li, Zhiqi; Ni, Fenglei; Liu, Hong",2019 IEEE/ASME International Conference on Advanced Intelligent Mechatronics (AIM),10.1109/AIM.2019.8868488,,"Most Robot Operating System(ROS) were developed under the standard Linux kernel that can't meet the requirements in many robot applications such as robot motion control. To overcome such issues, this paper proposes a real-time ROS control system based on Xenomai, which contains real-time nodes and non-real-time nodes that run separately on different threads. The proposed control framework supports priority-based scheduling of multitasks which is compatible with interfaces of ROS packages. The feasibility of this control framework was proven by implementation on the industrial PC. We used EtherCAT bus as communication between ROS controller and the 7-DoF light-weight robot. We conducted a variety of experiments to test its performance and applied it to a 7-DoF light-weight robot. The experiment results show that our ROS controller can efficiently control robot hardware with high real-time performance of control system.",Task analysis; Kernel; Hardware; Linux; Real-time systems; Robot control,A Real-time Robot Control Framework Using ROS Control for 7-DoF Light-weight Robot*,,x,,,,,,,,NO,,
S520,1,Backward,journalArticle,2011,"Bauer, Andreas; Leucker, Martin; Schallhart, Christian",ACM Transactions on Software Engineering and Methodology,10.1145/2000799.2000800,,"This article studies runtime verification of properties expressed either in lineartime temporal logic (LTL) or timed lineartime temporal logic (TLTL). It classifies runtime verification in identifying its distinguishing features to model checking and testing, respectively. It introduces a three-valued semantics (with truth values true, false, inconclusive) as an adequate interpretation as to whether a partial observation of a running system meets an LTL or TLTL property. For LTL, a conceptually simple monitor generation procedure is given, which is optimal in two respects: First, the size of the generated deterministic monitor is minimal, and, second, the monitor identifies a continuously monitored trace as either satisfying or falsifying a property as early as possible. The feasibility of the developed methodology is demontrated using a collection of real-world temporal logic specifications. Moreover, the presented approach is related to the properties monitorable in general and is compared to existing concepts in the literature. It is shown that the set of monitorable properties does not only encompass the safety and cosafety properties but is strictly larger. For TLTL, the same road map is followed by first defining a three-valued semantics. The corresponding construction of a timed monitor is more involved, yet, as shown, possible.",Assertion checkers; monitors; runtime verification,Runtime Verification for LTL and TLTL,x,,,,,,,,,NO,,
S521,1,Backward,conferencePaper,1998,"Schwendimann, Stefan",Automated Reasoning with Analytic Tableaux and Related Methods,10.1007/3-540-69778-0_28,,"The paper presents a one-pass tableau calculus PLTL T for the propositional linear time logic PLTL. The calculus is correct and complete and unlike in previous decision methods, there is no second phase that checks for the fulfillment of the so-called eventuality formulae. This second phase is performed locally and is incorporated into the rules of the calculus. Derivations in PLTL T are cyclic trees rather than cyclic graphs. When used as a basis for a decision procedure, it has the advantage that only one branch needs to be kept in memory at any one time. It may thus be a suitable starting point for the development of a parallel decision method for PLTL.",Decision Procedure; Linear Temporal Logic; Local Consistency; Propositional Variable; Temporal Logic,A New One-Pass Tableau Calculus for PLTL,,,,x,,,,,,NO,,
S522,1,Backward,journalArticle,1990,"Koymans, Ron",Real-Time Systems,10.1007/BF01995674,,"This paper is motivated by the need for a formal specification method for real-time systems. In these systemsquantitative temporal properties play a dominant role. We first characterize real-time systems by giving a classification of such quantitative temporal properties. Next, we extend the usual models for temporal logic by including a distance function to measure time and analyze what restrictions should be imposed on such a function. Then we introduce appropriate temporal operators to reason about such models by turning qualitative temporal operators into (quantitative) metric temporal operators and show how the usual quantitative temporal properties of real-time systems can be expressed in this metric temporal logic. After we illustrate the application of metric temporal logic to real-time systems by several examples, we end this paper with some conclusions.",,Specifying real-time properties with metric temporal logic,,,,x,,,,,,NO,,
S523,1,Backward,conferencePaper,2013,"Donzé, Alexandre; Ferrère, Thomas; Maler, Oded",Computer Aided Verification,10.1007/978-3-642-39799-8_19,,"Monitoring transient behaviors of real-time systems plays an important role in model-based systems design. Signal Temporal Logic (STL) emerges as a convenient and powerful formalism for continuous and hybrid systems. This paper presents an efficient algorithm for computing the robustness degree in which a piecewise-continuous signal satisfies or violates an STL formula. The algorithm, by leveraging state-of-the-art streaming algorithms from Signal Processing, is linear in the size of the signal and its implementation in the Breach tool is shown to outperform alternative implementations.",,Efficient Robust Monitoring for STL,x,,,,,,,,,NO,,
S524,1,Backward,conferencePaper,2014,"Reinbacher, Thomas; Rozier, Kristin Yvonne; Schumann, Johann",Tools and Algorithms for the Construction and Analysis of Systems,10.1007/978-3-642-54862-8_24,,"We propose a real-time, Realizable, Responsive, Unobtrusive Unit (rt-R2U2) to meet the emerging needs for System Health Management (SHM) of new safety-critical embedded systems like automated vehicles, Unmanned Aerial Systems (UAS), or small satellites. SHM for these systems must be able to handle unexpected situations and adapt specifications quickly during flight testing between closely-timed consecutive missions, not mid-mission, necessitating fast reconfiguration. They must enable more advanced probabilistic reasoning for diagnostics and prognostics while running aboard limited hardware without affecting the certified on-board software. We define and prove correct translations of two real-time projections of Linear Temporal Logic to two types of efficient observer algorithms to continuously assess the status of the system. A synchronous observer yields an instant abstraction of the satisfaction check, whereas an asynchronous observer concretizes this abstraction at a later, a priori known, time. By feeding the system’s real-time status into a statistical reasoning unit, e.g., based on Bayesian networks, we enable advanced health estimation and diagnosis. We experimentally demonstrate our novel framework on real flight data from NASA’s Swift UAS. By on-boarding rt-R2U2 aboard an existing FPGA already built into the standard UAS design and seamlessly intercepting sensor values through read-only observations of the system bus, we avoid system integration problems of software instrumentation or added hardware. The flexibility of our approach with regard to changes in the monitored specification is not due to the reconfigurability offered by FPGAs; it is a benefit of the modularity of our observers and would also be available on non-reconfigurable hardware platforms such as ASICs.",Bayesian Network; Execution Sequence; Field Programmable Gate Array; Linear Temporal Logic; Time Stamp,Temporal-Logic Based Runtime Observer Pairs for System Health Management of Real-Time Systems,x,,,,,,,,,NO,,
S525,1,Backward,conferencePaper,2003,"Diethers, K.; Firley, T.; Kröger, T.; Thomas, U.",In International Conference on Advanced Robotics (icar,,,"We evaluate the usage of skill primitive nets for programming robots, which support hybrid control in a uniform way. This notation gives an easy and intuitive way to switch between position, velocity, and force control for each DOF independently as long as no inherent dependencies are affected. Robot specific restrictions within the work space are an intrinsic problem of the approach to a portable programming interface. We deal with this problem by using the model checker HyTech to analyze a robot program consisting of skill primitives. This analysis verifies nets of skill primitives under consideration of these restrictions.",,A new framework for task oriented sensor based robot programming and verification,,,,x,x,,,,,NO,,
S526,1,Backward,conferencePaper,2013,"Chauhan, Himanshu; Garg, Vijay K.; Natarajan, Aravind; Mittal, Neeraj",2013 IEEE 32nd International Symposium on Reliable Distributed Systems,10.1109/SRDS.2013.19,,"Analyzing a distributed computation is a hard problem in general due to the combinatorial explosion in the size of the state-space with the number of processes in the system. By abstracting the computation, unnecessary state explorations can be avoided. Computation slicing is an approach for abstracting distributed computations with respect to a given predicate. We focus on regular predicates, a family of predicates that covers many commonly used predicates for runtime verification. The existing algorithms for computation slicing are centralized - a single process is responsible for computing the slice in either offline or online manner. In this paper, we present first distributed online algorithm for computing the slice of a distributed computation with respect to a regular predicate. Our algorithm distributes the work and storage requirements across the system, thus reducing the space and computation complexity per process.",Clocks; Computational modeling; Distributed algorithms; Distributed Algorithms; Lattices; Predicate Detection; Runtime; Silicon; Vectors,A Distributed Abstraction Algorithm for Online Predicate Detection,x,,,,,,,,,NO,,
S527,1,Backward,conferencePaper,2007,"Ogale, Vinit A.; Garg, Vijay K.",Distributed Computing,10.1007/978-3-540-75142-7_32,,"We examine the problem of detecting nested temporal predicates given the execution trace of a distributed program. We present a technique that allows efficient detection of a reasonably large class of predicates which we call the Basic Temporal Logic or BTL. Examples of valid BTL predicates are nested temporal predicates based on local variables with arbitrary negations, disjunctions, conjunctions and the possibly (EF or ◊◊\Diamond) and invariant(AG or □◻\Box) temporal operators. We introduce the concept of a basis, a compact representation of all global cuts which satisfy the predicate. We present an algorithm to compute a basis of a computation given any BTL predicate and prove that its time complexity is polynomial with respect to the number of processes and events in the trace although it is not polynomial in the size of the formula. We do not know of any other technique which detects a similar class of predicates with a time complexity that is polynomial in the number of processes and events in the system. We have implemented a predicate detection toolkit based on our algorithm that accepts offline traces from any distributed program.",Atomic Proposition; Execution Trace; Irreducible Element; Predicate Detection; Temporal Logic,Detecting Temporal Logic Predicates on Distributed Computations,x,,,,,,,,,NO,,
S528,1,Backward,conferencePaper,2012,"Bauer, Andreas; Falcone, Yliès",FM 2012: Formal Methods,10.1007/978-3-642-32759-9_10,,"Users wanting to monitor distributed or component-based systems often perceive them as monolithic systems which, seen from the outside, exhibit a uniform behaviour as opposed to many components displaying many local behaviours that together constitute the system’s global behaviour. This level of abstraction is often reasonable, hiding implementation details from users who may want to specify the system’s global behaviour in terms of an LTL formula. However, the problem that arises then is how such a specification can actually be monitored in a distributed system that has no central data collection point, where all the components’ local behaviours are observable. In this case, the LTL specification needs to be decomposed into sub-formulae which, in turn, need to be distributed amongst the components’ locally attached monitors, each of which sees only a distinct part of the global behaviour.The main contribution of this paper is an algorithm for distributing and monitoring LTL formulae, such that satisfaction or violation of specifications can be detected by local monitors alone. We present an implementation and show that our algorithm introduces only a minimum delay in detecting satisfaction/violation of a specification. Moreover, our practical results show that the communication overhead introduced by the local monitors is generally lower than the number of messages that would need to be sent to a central data collection point.",Atomic Proposition; Central Decision; Communication Overhead; Global Sensor; Local Monitor,Decentralised LTL Monitoring,x,,,,,,,,,NO,,
S529,1,Backward,conferencePaper,2004,"Sen, K.; Vardhan, A.; Agha, G.; Rosu, G.",Proceedings. 26th International Conference on Software Engineering,10.1109/ICSE.2004.1317464,,"We describe an efficient decentralized monitoring algorithm that monitors a distributed program's execution to check for violations of safety properties. The monitoring is based on formulae written in PT-DTL, a variant of past time linear temporal logic that we define. PT-DTL is suitable for expressing temporal properties of distributed systems. Specifically, the formulae of PT-DTL are relative to a particular process and are interpreted over a projection of the trace of global states that represents what that process is aware of. A formula relative to one process may refer to other processes' local states through remote expressions and remote formulae. In order to correctly evaluate remote expressions, we introduce the notion of Knowledge Vector and provide an algorithm which keeps a process aware of other processes' local states that can affect the validity of a monitored PT-DTL formula. Both the logic and the monitoring algorithm are illustrated through a number of examples. Finally, we describe our implementation of the algorithm in a tool called DIANA.",Monitoring; Safety,Efficient decentralized monitoring of safety in distributed systems,,,,x,,,,,,NO,,
S53,1,Forward,journalArticle,2020,"Ribeiro, A.Fernando; Lopes, Gil",Current Robotics Reports,10.1007/s43154-020-00002-9,http://link.springer.com/10.1007/s43154-020-00002-9,"Purpose of Review With the growing interest for STEM/STEAM, new robotic platforms are being created with different characteristics, extras, and options. There are so many diverse solutions that it is difficult for a teacher/student to choose the ideal one. This paper intends to provide an analysis of the most common robotic platforms existent on the market. The same is happening regarding robotic events all around the world, with objectives so distinctive, and with complexity from easy to very difficult. This paper also describes some of those events which occur in many countries.",,Learning Robotics: a Review,x,,,,,,,,,NO,,
S530,1,Backward,journalArticle,2005,"Mittal, Neeraj; Garg, Vijay K.",Distributed Computing,10.1007/s00446-004-0117-0,,"Writing correct distributed programs is hard. In spite of extensive testing and debugging, software faults persist even in commercial grade software. Many distributed systems should be able to operate properly even in the presence of software faults. Monitoring the execution of a distributed system, and, on detecting a fault, initiating the appropriate corrective action is an important way to tolerate such faults. This gives rise to the predicate detection problem which requires ﬁnding whether there exists a consistent cut of a given computation that satisﬁes a given global predicate.",,Techniques and applications of computation slicing,,,,x,,,,,,NO,,
S531,1,Backward,journalArticle,2016,"Colombo, Christian; Falcone, Yliès",Formal Methods in System Design,10.1007/s10703-016-0251-x,,"Users wanting to monitor distributed systems often prefer to abstract away the architecture of the system by directly specifying correctness properties on the global system behaviour. To support this abstraction, a compilation of the properties would not only involve the typical choice of monitoring algorithm, but also the organisation of submonitors across the component network. Existing approaches, considered in the context of LTL properties over distributed systems with a global clock, include the so-called orchestration and migration approaches. In the orchestration approach, a central monitor receives the events from all subsystems. In the migration approach, LTL formulae transfer themselves across subsystems to gather local information. We propose a third way of organising submonitors: choreography, where monitors are organised as a tree across the distributed system, and each child feeds intermediate results to its parent. We formalise choreography-based decentralised monitoring by showing how to synthesise a network from an LTL formula, and give a decentralised monitoring algorithm working on top of an LTL network. We prove the algorithm correct and implement it in a benchmark tool. We also report on an empirical investigation comparing these three approaches on several concerns of decentralised monitoring: the delay in reaching a verdict due to communication latency, the number and size of the messages exchanged, and the number of execution steps required to reach the verdict.",,Organising LTL monitors over distributed systems with a global clock,x,,,,,,,,,NO,,
S532,1,Backward,journalArticle,2004,"Avizienis, A.; Laprie, J.-C.; Randell, B.; Landwehr, C.",IEEE Transactions on Dependable and Secure Computing,10.1109/TDSC.2004.2,,"This paper gives the main definitions relating to dependability, a generic concept including a special case of such attributes as reliability, availability, safety, integrity, maintainability, etc. Security brings in concerns for confidentiality, in addition to availability and integrity. Basic definitions are given first. They are then commented upon, and supplemented by additional definitions, which address the threats to dependability and security (faults, errors, failures), their attributes, and the means for their achievement (fault prevention, fault tolerance, fault removal, fault forecasting). The aim is to explicate a set of general concepts, of relevance across a wide range of situations and, therefore, helping communication and cooperation among a number of scientific and technical communities, including ones that are concentrating on particular types of system, of system failures, or of causes of system failures.",attacks; Availability; Books; Communication system security; errors; failures; fault forecasting.; fault removal; fault tolerance; Fault tolerance; faults; Index Terms- Dependability; Maintenance; Safety; security; Standardization; Taxonomy; trust; Uncertainty; vulnerabilities,Basic concepts and taxonomy of dependable and secure computing,,,,x,,,,,,NO,,
S533,1,Backward,journalArticle,2016,"Ding, Bo; Wang, Huaimin; Fan, Zedong; Zhang, Pengfei; Liu, Hui",Robotics and Biomimetics,10.1186/s40638-016-0038-y,,"A primary requirement in distributed robotic software systems is the dissemination of data to all interested collaborative entities in a timely and scalable manner. However, providing such a service in a highly dynamic and resource-limited robotic environment is a challenging task, and existing robot software infrastructure has limitations in this aspect. This paper presents a novel robot software infrastructure, micROS-drt, which supports real-time and scalable data distribution. The solution is based on a loosely coupled data publish-subscribe model with the ability to support various time-related constraints. And to realize this model, a mature data distribution standard, the data distribution service for real-time systems (DDS), is adopted as the foundation of the transport layer of this software infrastructure. By elaborately adapting and encapsulating the capability of the underlying DDS middleware, micROS-drt can meet the requirement of real-time and scalable data distribution in distributed robotic systems. Evaluation results in terms of scalability, latency jitter and transport priority as well as the experiment on real robots validate the effectiveness of this work.",,MicROS-drt: supporting real-time and scalable data distribution in distributed robotic systems,,x,,,,,,,,NO,,
S534,1,Backward,journalArticle,2017,"Liu, Shaoshan; Li, Liyun; Tang, Jie; Wu, Shuang; Gaudiot, Jean-Luc",Synthesis Lectures on Computer Science,10.2200/S00787ED1V01Y201707CSL009,,,,Creating Autonomous Vehicle Systems,x,,,,,,,,,NO,,
S535,1,Backward,conferencePaper,2017,"Moarref, Salar; Kress-Gazit, Hadas",2017 International Symposium on Multi-Robot and Multi-Agent Systems (MRS),10.1109/MRS.2017.8250926,,"Work in swarm robotics typically focuses on the bottom-up design of local rules for individual robots that create emergent swarm behaviors. In this paper, we take a top-down approach and consider the following problem: how can we specify a desired collective behavior and automatically synthesize decentralized controllers that can be distributed over robots to achieve the collective objective in a provably correct way? We propose a formal specification language for the high-level description of swarm behaviors on both swarm and individual levels. We present algorithms for automated synthesis of decentralized controllers and synchronization skeletons that describe how groups of robots must coordinate to satisfy the specification. We demonstrate our algorithms on a case study.",Navigation; Partitioning algorithms; Robot kinematics; Safety; Skeleton; Synchronization,Decentralized control of robotic swarms from high-level temporal logic specifications,x,,,,,,,,,NO,,
S536,1,Backward,conferencePaper,2018,"Althoff, Matthias; Lutz, Sebastian",2018 IEEE Intelligent Vehicles Symposium (IV),10.1109/IVS.2018.8500374,,"It is apparent that one cannot rely solely on physical test drives for ensuring the correct functionality of autonomous vehicles. Since physical test drives are costly and time consuming, it is advantageous to accompany them with computer simulations. However, since most traffic scenarios are not challenging, even simulations are often too time consuming. To address this issue, we present an approach that creates automatically critical driving situations, i.e., situations with a small solution space for avoiding a collision. Our approach combines reachability analysis for determining the size of the solution space with optimization techniques to shrink it. The solution space is reduced by shifting the initial states of traffic participants, demanding an immediate and correct action of the vehicle under test. We demonstrate our approach by automatically increasing the criticality of several initially uncritical situations recorded from real traffic.",Autonomous vehicles; Computational modeling; Optimization; Planning; Space vehicles; Testing; Trajectory,Automatic Generation of Safety-Critical Test Scenarios for Collision Avoidance of Road Vehicles,x,,,,,,,,,NO,,
S537,1,Backward,conferencePaper,2016,"Ben Abdessalem, Raja; Nejati, Shiva; Briand, Lionel C.; Stifter, Thomas",Proceedings of the 31st IEEE/ACM International Conference on Automated Software Engineering,10.1145/2970276.2970311,,"Recent years have seen a proliferation of complex Advanced Driver Assistance Systems (ADAS), in particular, for use in autonomous cars. These systems consist of sensors and cameras as well as image processing and decision support software components. They are meant to help drivers by providing proper warnings or by preventing dangerous situations. In this paper, we focus on the problem of design time testing of ADAS in a simulated environment. We provide a testing approach for ADAS by combining multi-objective search with surrogate models developed based on neural networks. We use multi-objective search to guide testing towards the most critical behaviors of ADAS. Surrogate modeling enables our testing approach to explore a larger part of the input search space within limited computational resources. We characterize the condition under which the multi-objective search algorithm behaves the same with and without surrogate modeling, thus showing the accuracy of our approach. We evaluate our approach by applying it to an industrial ADAS system. Our experiment shows that our approach automatically identifies test cases indicating critical ADAS behaviors. Further, we show that combining our search algorithm with surrogate modeling improves the quality of the generated test cases, especially under tight and realistic computational resources.",Advanced Driver Assistance Systems; Multi-Objective Search Optimization; Neural Networks; Simulation; Surrogate Modeling,Testing advanced driver assistance systems using multi-objective search and neural networks,x,,,,,,,,,NO,,
S538,1,Backward,conferencePaper,2016,"Chen, Mo; Herbert, Sylvia; Tomlin, Claire J.",2016 IEEE 55th Conference on Decision and Control (CDC),10.1109/CDC.2016.7798268,,"With the recent surge of interest in using robotics and automation for civil purposes, providing safety and performance guarantees has become extremely important. In the past, differential games have been successfully used for the analysis of safety-critical systems. In particular, the Hamilton-Jacobi (HJ) formulation of differential games provides a flexible way to compute the reachable set, which can characterize the set of states which lead to either desirable or undesirable configurations, depending on the application. While HJ reachability is applicable to many small practical systems, the curse of dimensionality prevents the direct application of HJ reachability to many larger systems. To address computation complexity issues, various efficient computation methods in the literature have been developed for approximating or exactly computing the solution to HJ partial differential equations, but only when the system dynamics are of specific forms. In this paper, we propose a flexible method to trade off optimality with computation complexity in HJ reachability analysis. To achieve this, we propose to simplify system dynamics by treating state variables as disturbances. We prove that the resulting approximation is conservative in the desired direction, and demonstrate our method using a four-dimensional plane model.",Complexity theory; Couplings; Games; Optimal control; Reachability analysis; Safety; System dynamics,Fast reachable set approximations via state decoupling disturbances,x,,,,,,,,,NO,,
S539,1,Backward,bookSection,1996,"Chirikjian, Gregory S.",Recent Advances in Robot Kinematics,,,"Discrete actuators have a finite number of states, e.g. stepper motors and bistable pneumatic cylinders. Given that the number of distinct configurations attainable by discretely actuated manipulators grows exponentially in the number of actuated degrees of freedom, i.e. K n for n actuators or actuated modules each with K states, brute force representation of discrete manipulator workspaces is not feasible in the highly actuated case. Approximating the workspaces of segments of discrete manipulators as density functions on the Euclidean group (which describes workspace positions and orientations) the whole workspace can be approximated as an n-fold convolution of these functions. A generalization of the Fourier transform (and the convolution theorem) is used in this paper to efficiently compute convolutions and to solve the inverse problem of synthesizing discrete manipulators which have prescribed workspace properties.",Actuate Module; Brute Force; Convolution Product; Discrete Manipulator; Robotic Manipulator,Synthesis of Discretely Actuated Manipulator Workspaces VIA Harmonic Analysis,,,,x,x,,,,,NO,,
S54,1,Forward,conferencePaper,2020,"Ricarte, Guilherme; de Macědo Pinheiro, Lucas; Lanari Bó, Antônio Padilha","2020 Latin American Robotics Symposium (LARS), 2020 Brazilian Symposium on Robotics (SBR) and 2020 Workshop on Robotics in Education (WRE)",10.1109/LARS/SBR/WRE51543.2020.9307157,,"This paper presents a novel software architecture developed for rehabilitation based on Functional Electrical Stimulation (FES). Its main focus lies in enabling healthcare professionals and end-users to monitor and re-configure corresponding control systems through an intuitive graphical interface that presents performance data in time. Furthermore, the system, based on the Robot Operating System (ROS), is designed to allow incorporation of new hardware, which may enable its use in different rehabilitation scenarios. This paper also presents a proof-of-concept case study where this architecture was implemented and tested for a FES-cycling exercise.",Computer architecture; Training; Graphical user interfaces; Sensors; Iron; Tools; Medical services,Intuitive and Modular Software Architecture for Functional Electrical Stimulation Rehabilitation,x,,,,,,,,,NO,,
S540,1,Backward,journalArticle,2008,"Christensen, Anders Lyhne; O’Grady, Rehan; Birattari, Mauro; Dorigo, Marco",Autonomous Robots,10.1007/s10514-007-9060-9,,"In this paper, we study a new approach to fault detection for autonomous robots. Our hypothesis is that hardware faults change the flow of sensory data and the actions performed by the control program. By detecting these changes, the presence of faults can be inferred. In order to test our hypothesis, we collect data from three different tasks performed by real robots. During a number of training runs, we record sensory data from the robots while they are operating normally and after a fault has been injected. We use back-propagation neural networks to synthesize fault detection components based on the data collected in the training runs. We evaluate the performance of the trained fault detectors in terms of number of false positives and time it takes to detect a fault. The results show that good fault detectors can be obtained. We extend the set of possible faults and go on to show that a single fault detector can be trained to detect several faults in both a robot’s sensors and actuators. We show that fault detectors can be synthesized that are robust to variations in the task, and we show how a fault detector can be trained to allow one robot to detect faults that occur in another robot.",,Fault detection in autonomous robots based on fault injection and learning,x,,,,,,,,,NO,,
S541,1,Backward,conferencePaper,2017,"Dosovitskiy, Alexey; Ros, German; Codevilla, Felipe; Lopez, Antonio; Koltun, Vladlen",Conference on Robot Learning,,,"We introduce CARLA, an open-source simulator for autonomous driving research. CARLA has been developed from the ground up to support development, training, and validation of autonomous urban drivin...",,CARLA: An Open Urban Driving Simulator,,,,,x,,,x,,NO,,
S542,1,Backward,journalArticle,2019,"Dreossi, Tommaso; Donzé, Alexandre; Seshia, Sanjit A.",Journal of Automated Reasoning,10.1007/s10817-018-09509-5,,"Cyber-physical systems (CPS), such as automotive systems, are starting to include sophisticated machine learning (ML) components. Their correctness, therefore, depends on properties of the inner ML modules. While learning algorithms aim to generalize from examples, they are only as good as the examples provided, and recent efforts have shown that they can produce inconsistent output under small adversarial perturbations. This raises the question: can the output from learning components lead to a failure of the entire CPS? In this work, we address this question by formulating it as a problem of falsifying signal temporal logic specifications for CPS with ML components. We propose a compositional falsification framework where a temporal logic falsifier and a machine learning analyzer cooperate with the aim of finding falsifying executions of the considered model. The efficacy of the proposed technique is shown on an automatic emergency braking system model with a perception component based on deep neural networks.",,Compositional Falsification of Cyber-Physical Systems with Machine Learning Components,x,,,,,,,,,NO,,
S543,1,Backward,conferencePaper,2019,"Fremont, Daniel J.; Dreossi, Tommaso; Ghosh, Shromona; Yue, Xiangyu; Sangiovanni-Vincentelli, Alberto L.; Seshia, Sanjit A.",Proceedings of the 40th ACM SIGPLAN Conference on Programming Language Design and Implementation,10.1145/3314221.3314633,,"We propose a new probabilistic programming language for the design and analysis of perception systems, especially those based on machine learning. Specifically, we consider the problems of training a perception system to handle rare events, testing its performance under different conditions, and debugging failures. We show how a probabilistic programming language can help address these problems by specifying distributions encoding interesting types of inputs and sampling these to generate specialized training and test sets. More generally, such languages can be used for cyber-physical systems and robotics to write environment models, an essential prerequisite to any formal analysis. In this paper, we focus on systems like autonomous cars and robots, whose environment is a scene, a configuration of physical objects and agents. We design a domain-specific language, Scenic, for describing scenarios that are distributions over scenes. As a probabilistic programming language, Scenic allows assigning distributions to features of the scene, as well as declaratively imposing hard and soft constraints over the scene. We develop specialized techniques for sampling from the resulting distribution, taking advantage of the structure provided by Scenic's domain-specific syntax. Finally, we apply Scenic in a case study on a convolutional neural network designed to detect cars in road images, improving its performance beyond that achieved by state-of-the-art synthetic data generation methods.",automatic test generation; deep learning; fuzz testing; probabilistic programming; scenario description language; synthetic data,Scenic: a language for scenario specification and scene generation,x,,,,,,,,,NO,,
S544,1,Backward,conferencePaper,2019,"Gambi, Alessio; Huynh, Tri; Fraser, Gordon",Proceedings of the 2019 27th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering,10.1145/3338906.3338942,,"Autonomous driving carries the promise to drastically reduce the number of car accidents; however, recently reported fatal crashes involving self-driving cars show that such an important goal is not yet achieved. This calls for better testing of the software controlling self-driving cars, which is difficult because it requires producing challenging driving scenarios. To better test self-driving car soft- ware, we propose to specifically test car crash scenarios, which are critical par excellence. Since real car crashes are difficult to test in field operation, we recreate them as physically accurate simulations in an environment that can be used for testing self-driving car software. To cope with the scarcity of sensory data collected during real car crashes which does not enable a full reproduction, we extract the information to recreate real car crashes from the police reports which document them. Our extensive evaluation, consisting of a user study involving 34 participants and a quantitative analysis of the quality of the generated tests, shows that we can generate accurate simulations of car crashes in a matter of minutes. Compared to tests which implement non critical driving scenarios, our tests effectively stressed the test subject in different ways and exposed several shortcomings in its implementation.",automatic test generation; natural language processing; procedural content generation; self-driving cars,Generating effective test cases for self-driving cars from police reports,x,,,,,,,,,NO,,
S545,1,Backward,conferencePaper,2019,"Gambi, Alessio; Mueller, Marc; Fraser, Gordon",Proceedings of the 28th ACM SIGSOFT International Symposium on Software Testing and Analysis,10.1145/3293882.3330566,,"Self-driving cars rely on software which needs to be thoroughly tested. Testing self-driving car software in real traffic is not only expensive but also dangerous, and has already caused fatalities. Virtual tests, in which self-driving car software is tested in computer simulations, offer a more efficient and safer alternative compared to naturalistic field operational tests. However, creating suitable test scenarios is laborious and difficult. In this paper we combine procedural content generation, a technique commonly employed in modern video games, and search-based testing, a testing technique proven to be effective in many domains, in order to automatically create challenging virtual scenarios for testing self-driving car soft- ware. Our AsFault prototype implements this approach to generate virtual roads for testing lane keeping, one of the defining features of autonomous driving. Evaluation on two different self-driving car software systems demonstrates that AsFault can generate effective virtual road networks that succeed in revealing software failures, which manifest as cars departing their lane. Compared to random testing AsFault was not only more efficient, but also caused up to twice as many lane departures.",automatic test generation; procedural content generation; search-based testing; self-driving cars,Automatically testing self-driving cars with search-based procedural content generation,x,,,,,,,,,NO,,
S546,1,Backward,journalArticle,1986,"Gautier, M.",IFAC Proceedings Volumes,10.1016/S1474-6670(17)59465-3,,"The motion of a robotic mechanical system is described by a set of highly coupled and non linear equations. Dynamic control techniques have been proposed to take into account the exact equations of motion. A major problem to implement these algorithms on real robots is that they need accuracy identification of parameters of the dynamic model. Recently and independently, some papers have the common idea to estimate the inertial parameters by the use of a dynamic model linear whith respect to the inertial parameters. The identification of the inertialparameters are carried out by the use of the standard least squares techniques. This paper presents a study about the efficiency of this technique of estimation especially when the measurements are noisy. An application by simulation will be given on a SCAR A robot by the use of an iterative least squares method.",Dynamic; Identification; Links; Modelling; Parameter estimation; Robots,Identification of Robots Dynamics,,,,x,,,,,,NO,,
S547,1,Backward,journalArticle,2008,"Girard, Antoine; Guernic, Colas Le",IFAC Proceedings Volumes,10.3182/20080706-5-KR-1001.01514,,"This work is concerned with the algorithmic reachability analysis of linear systems with constrained initial states and inputs. In this paper, we present a new approach for the computation of tight polyhedral over-approximations of the reachable sets of a linear system. The main contribution over our previous work is that it makes it possible to consider systems whose sets of initial states and inputs are given by arbitrary compact convex sets represented by their support functions. We first consider the discrete-time setting and then we show how our algorithm can be extended to handle continuous-time linear systems. Finally, the effectiveness of our approach is demonstrated through several examples.",computational methods; linear systems; Reachability analysis; support functions,Efficient Reachability Analysis for Linear Systems using Support Functions,x,,,,,,,,,NO,,
S548,1,Backward,journalArticle,2019,"Guerra, Winter; Tal, Ezra; Murali, Varun; Ryou, Gilhyun; Karaman, Sertac",2019 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS40897.2019.8968116,,"FlightGoggles is a photorealistic sensor simulator for perception-driven robotic vehicles. The key contributions of FlightGoggles are twofold. First, FlightGoggles provides photorealistic exteroceptive sensor simulation using graphics assets generated with photogrammetry. Second, it provides the ability to combine (i) synthetic exteroceptive measurements generated in silico in real time and (ii) vehicle dynamics and proprioceptive measurements generated in motio by vehicle(s) in a motion-capture facility. FlightGoggles is capable of simulating a virtual-reality environment around autonomous vehicle(s). While a vehicle is in flight in the FlightGoggles virtual reality environment, exteroceptive sensors are rendered synthetically in real time while all complex extrinsic dynamics are generated organically through the natural interactions of the vehicle. The FlightGoggles framework allows for researchers to accelerate development by circumventing the need to estimate complex and hard-to-model interactions such as aerodynamics, motor mechanics, battery electrochemistry, and behavior of other agents. The ability to perform vehicle-in-the-loop experiments with photorealistic exteroceptive sensor simulation facilitates novel research directions involving, e.g., fast and agile autonomous flight in obstacle-rich environments, safe human interaction, and flexible sensor selection. FlightGoggles has been utilized as the main test for selecting nine teams that will advance in the AlphaPilot autonomous drone racing challenge. We survey approaches and results from the top AlphaPilot teams, which may be of independent interest.",Computer Science - Robotics,"FlightGoggles: A Modular Framework for Photorealistic Camera, Exteroceptive Sensor, and Dynamics Simulation",x,,,,,,,,,NO,,
S549,1,Backward,conferencePaper,2016,"Huang, WuLing; Wang, Kunfeng; Lv, Yisheng; Zhu, FengHua",2016 IEEE 19th International Conference on Intelligent Transportation Systems (ITSC),10.1109/ITSC.2016.7795548,,"Driving test is critical to the deployment of autonomous vehicles. It is necessary to review the related works since the methodologies summaries are rare, which will help to set up an integrated method for autonomous driving test in different development stages, and help to provide a reliable, quick, safe, low cost and reproducible method and accelerate the development of autonomous vehicle. In this paper, we review the related autonomous driving test works, including autonomous vehicle functional verification, vehicle integrated testing, system validation in different architectures. This review work will be helpful for autonomous vehicle development.",Autonomous vehicles; Computer architecture; Planning; Safety; Sensors; Testing,Autonomous vehicles testing methods review,x,,,,,,,,,NO,,
S55,1,Forward,journalArticle,2020,"Hu, Chi; Dong, Wei; Yang, Yong-hui; Shi, Hao; Deng, Fei",Frontiers of Information Technology & Electronic Engineering,10.1631/FITEE.2000203,https://doi.org/10.1631/FITEE.2000203,"Robotic swarms are usually designed in a bottom-up way, which can make robotic swarms vulnerable to environmental impact. It is particularly true for the widely used control mode of robotic swarms, where it is often the case that neither the correctness of the swarming tasks at the macro level nor the safety of the interaction among agents at the micro level can be guaranteed. To ensure that the behaviors are safe at runtime, it is necessary to take into account the property guard approaches for robotic swarms in uncertain environments. Runtime enforcement is an approach which can guarantee the given properties in system execution and has no scalability issue. Although some runtime enforcement methods have been studied and applied in different domains, they cannot effectively solve the problem of property enforcement on robotic swarm tasks at present. In this paper, an enforcement method is proposed on swarms which should satisfy multi-level properties in uncertain environments. We introduce a macro-micro property enforcing framework with the notion of agent shields and a discrete-time enforcing mechanism called D-time enforcing. To realize this method, a domain specification language and the corresponding enforcer synthesis algorithms are developed. We then apply the approach to enforce the properties of the simulated robotic swarm in the robotflocksim platform. We evaluate and show the effectiveness of the method with experiments on specific unmanned aerial vehicle swarm tasks.",,Decentralized runtime enforcement for robotic swarms,x,,,,,,,,,NO,,
S550,1,Backward,bookSection,2005,"Hwang, Inseok; Stipanović, Dušan M.; Tomlin, Claire J.","Advances in Control, Communication Networks, and Transportation Systems: In Honor of Pravin Varaiya",,,"SummaryThis chapter presents applications of polytopic approximation methods for reachable set computation using dynamic optimization. The problem of computing exact reachable sets can be formulated in terms of a Hamilton-Jacobi partial differential equation (PDE). Numerical solutions which provide convergent approximations of this PDE have computational complexity which is exponential in the continuous variable dimension. Using dynamic optimization and polytopic approximation, computationally efficient algorithms for overapproximative reachability analysis have been developed for linear dynamical systems tikya[1]. In this chapter, we extend these to feedback linearizable nonlinear systems, linear dynamic games, and norm-bounded nonlinear systems. Three illustrative examples are presented.",Convex Polytope; Disturbance Input; Hybrid System; Linear Dynamical System; Protected Zone,Polytopic Approximations of Reachable Sets Applied to Linear Dynamic Games and a Class of Nonlinear Systems,,,,x,x,,,,,NO,,
S551,1,Backward,journalArticle,1996,"Kavraki, L.E.; Svestka, P.; Latombe, J.-C.; Overmars, M.H.",IEEE Transactions on Robotics and Automation,10.1109/70.508439,,"A new motion planning method for robots in static workspaces is presented. This method proceeds in two phases: a learning phase and a query phase. In the learning phase, a probabilistic roadmap is constructed and stored as a graph whose nodes correspond to collision-free configurations and whose edges correspond to feasible paths between these configurations. These paths are computed using a simple and fast local planner. In the query phase, any given start and goal configurations of the robot are connected to two nodes of the roadmap; the roadmap is then searched for a path joining these two nodes. The method is general and easy to implement. It can be applied to virtually any type of holonomic robot. It requires selecting certain parameters (e.g., the duration of the learning phase) whose values depend on the scene, that is the robot and its workspace. But these values turn out to be relatively easy to choose, Increased efficiency can also be achieved by tailoring some components of the method (e.g., the local planner) to the considered robots. In this paper the method is applied to planar articulated robots with many degrees of freedom. Experimental results show that path planning can be done in a fraction of a second on a contemporary workstation (/spl ap/150 MIPS), after learning for relatively short periods of time (a few dozen seconds).",Computer science; Joining processes; Laboratories; Layout; Motion planning; Orbital robotics; Path planning; Robots; Workstations,Probabilistic roadmaps for path planning in high-dimensional configuration spaces,,,,x,,,,,,NO,,
S552,1,Backward,conferencePaper,2016,"Kim, BaekGyu; Jarandikar, Akshay; Shum, Jonathan; Shiraishi, Shinichi; Yamaura, Masahiro",2016 International Conference on Embedded Software (EMSOFT),10.1145/2968478.2968498,,"Vehicle simulators are widely used to test the correctness of vehicle control algorithms. It is important to create a virtual road environment in a way that the vehicle algorithm can be tested under various circumstances that may happen in the real world. However, building such a road environment is typically time consuming and performed in a manual and ad-hoc fashion without having a good notion of coverage criteria. We propose the automatic road network generation for vehicle simulation that is based on Satisfiability Modulo Theories (SMT). We first introduce the curve coverage criteria to characterize the property of horizontal/vertical curves that are required to test advanced safety features such as adaptive cruise control or lane keeping assistance. This criteria includes the number of curves, the distance of adjacent curves and horizontal/vertical curvatures. We propose the road network generation algorithms that utilize the SMT solver to determine a set of 3 dimensional coordinates. This algorithm takes an input of the parametrized constraints formalized from the curve coverage criteria and automatically determines a set of 3D coordinates to generate the road structure. Vehicle simulation engines can then use these coordinates to visualize the road networks, and such road networks are guaranteed to conform to the curve coverage criteria. We developed a plug-in for the Unity3D simulation engine that automates this process and demonstrate the applicability of the generated the road network for the adaptive cruise control testing.",Engines; Interpolation; Roads; Testing; Three-dimensional displays; Vehicles; Visualization,The SMT-based automatic road network generation in vehicle simulation environment,x,,,,,,,,,NO,,
S553,1,Backward,conferencePaper,2006,"Kurzhanskiy, Alex A.; Varaiya, Pravin",Proceedings of the 45th IEEE Conference on Decision and Control,10.1109/CDC.2006.377036,,"Ellipsoidal Toolbox is the first free MATLAB package that implements the operations of ellipsoidal calculus: geometric (Minkowski) sums and differences of ellipsoids, intersections of ellipsoids, and ellipsoids with hyperplanes and polyhedra. The toolbox uses ellipsoidal methods to compute forward and backward reach sets of continuous- and discrete-time piecewise affine systems. Forward and backward reach sets can be also computed for continuous-time piece-wise linear systems with disturbances",Calculus; Control systems; Ellipsoids; Level set; Linear systems; MATLAB; Packaging; Piecewise linear techniques; Reachability analysis; USA Councils,Ellipsoidal Toolbox (ET),,,,x,,,,,,NO,,
S554,1,Backward,conferencePaper,2012,"Liao, Xuehua; Zhu, Zhousen; Yan, Yusong; Lv, Tao",2012 IEEE Symposium on Electrical Electronics Engineering (EEESYM),10.1109/EEESym.2012.6258612,,"Accident reconstruction is not only an important way for responsibility identification or cause analysis in traffic accident but also an important step in study on traffic safety improvement. In this work, a type of physical analysis and an assumption model for traffic accident reconstruction, together with their respective realization methods, were introduced and described; simulation technology in two-vehicle collision accident was investigated; 2-Dimension impact calculation of velocity variations before and after collision was specifically given; computer simulation system was established to analyze and reconstruct impact velocities and vehicle behaviors according to data measured in accident scene; software application in practice was also briefly discussed.",Accident Reconstruction; Educational institutions; OpenGL; Vehicle Crash; Virtual Reality,Traffic accident reconstruction technology research and simulation realization,x,,,,,,,,,NO,,
S555,1,Backward,conferencePaper,2010,"Liebelt, Joerg; Schmid, Cordelia",2010 IEEE Computer Society Conference on Computer Vision and Pattern Recognition,10.1109/CVPR.2010.5539836,,"This paper presents a new approach for multi-view object class detection. Appearance and geometry are treated as separate learning tasks with different training data. Our approach uses a part model which discriminatively learns the object appearance with spatial pyramids from a database of real images, and encodes the 3D geometry of the object class with a generative representation built from a database of synthetic models. The geometric information is linked to the 2D training data and allows to perform an approximate 3D pose estimation for generic object classes. The pose estimation provides an efficient method to evaluate the likelihood of groups of 2D part detections with respect to a full 3D geometry model in order to disambiguate and prune 2D detections and to handle occlusions. In contrast to other methods, neither tedious manual part annotation of training images nor explicit appearance matching between synthetic and real training data is required, which results in high geometric fidelity and in increased flexibility. On the 3D Object Category datasets CAR and BICYCLE, the current state-of-the-art benchmark for 3D object detection, our approach outperforms previously published results for viewpoint estimation.",Bicycles; Detectors; Geometry; Image databases; Image matching; Object detection; Solid modeling; Spatial databases; Technological innovation; Training data,Multi-view object class detection with a 3D geometric model,x,,,,,,,,,NO,,
S556,1,Backward,journalArticle,2011,"Loiacono, Daniele; Cardamone, Luigi; Lanzi, Pier Luca",IEEE Transactions on Computational Intelligence and AI in Games,10.1109/TCIAIG.2011.2163692,,"In this paper, we investigate the application of evolutionary computation to the automatic generation of tracks for high-end racing games. The idea underlying our approach is that diversity is a major source of challenge/interest for racing tracks and, eventually, might play a key role in contributing to the player's fun. In particular, we focus on the diversity of a track in terms of its shape (i.e., the number and the assortment of turns and straights it contains), and in terms of driving experience it provides (i.e., the range of speeds achievable while driving on the track). We define two fitness functions that capture our idea of diversity as the entropy of the track's curvature and speed profiles. We apply both a single-objective and a multiobjective real-coded genetic algorithm (GA) to evolve tracks involving both a wide variety of turns and straights and also a large range of driving speeds. The results we report show that both single-objective and multiobjective approaches can successfully evolve tracks with a high degree of diversity both in terms of shape and achievable speeds.",Encoding; Entropy; Evolutionary computation; Games; genetic algorithms; Genetic algorithms; Humans; multiobjective evolution; procedural content generation; racing games; racing tracks; Shape; Target tracking; TORCS,Automatic Track Generation for High-End Racing Games Using Evolutionary Computation,x,,,,,,,,,NO,,
S557,1,Backward,conferencePaper,2013,"Matinnejad, Reza; Nejati, Shiva; Briand, Lionel; Bruckmann, Thomas; Poull, Claude",Search Based Software Engineering,10.1007/978-3-642-39742-4_12,,"The number and the complexity of software components embedded in today’s vehicles is rapidly increasing. A large group of these components monitor and control the operating conditions of physical devices (e.g., components controlling engines, brakes, and airbags). These controllers are known as continuous controllers. In this paper, we study testing of continuous controllers at the Model-in-Loop (MiL) level where both the controller and the environment are represented by models and connected in a closed feedback loop system. We identify a set of common requirements characterizing the desired behavior of continuous controllers, and develop a search-based technique to automatically generate test cases for these requirements. We evaluated our approach by applying it to a real automotive air compressor module. Our experience shows that our approach automatically generates several test cases for which the MiL level simulations indicate potential violations of the system requirements. Further, not only do our approach generates better test cases faster than random test case generation, but we also achieve better results than test scenarios devised by domain experts.",Controller Property; Exploration Algorithm; Hybrid Automaton; Industry Partner; Random Search,Automated Model-in-the-Loop Testing of Continuous Controllers Using Search,x,,,,,,,,,NO,,
S558,1,Backward,conferencePaper,2011,"Mellinger, Daniel; Kumar, Vijay",2011 IEEE International Conference on Robotics and Automation,10.1109/ICRA.2011.5980409,,"We address the controller design and the trajectory generation for a quadrotor maneuvering in three dimensions in a tightly constrained setting typical of indoor environments. In such settings, it is necessary to allow for significant excursions of the attitude from the hover state and small angle approximations cannot be justified for the roll and pitch. We develop an algorithm that enables the real-time generation of optimal trajectories through a sequence of 3-D positions and yaw angles, while ensuring safe passage through specified corridors and satisfying constraints on velocities, accelerations and inputs. A nonlinear controller ensures the faithful tracking of these trajectories. Experimental results illustrate the application of the method to fast motion (5-10 body lengths/second) in three-dimensional slalom courses.",Acceleration; Aerodynamics; Angular velocity; Force; Optimization; Rotors; Trajectory,Minimum snap trajectory generation and control for quadrotors,x,,,,,,,,,NO,,
S559,1,Backward,journalArticle,2005,"Mitchell, I.M.; Bayen, A.M.; Tomlin, C.J.",IEEE Transactions on Automatic Control,10.1109/TAC.2005.851439,,"We describe and implement an algorithm for computing the set of reachable states of a continuous dynamic game. The algorithm is based on a proof that the reachable set is the zero sublevel set of the viscosity solution of a particular time-dependent Hamilton-Jacobi-Isaacs partial differential equation. While alternative techniques for computing the reachable set have been proposed, the differential game formulation allows treatment of nonlinear systems with inputs and uncertain parameters. Because the time-dependent equation's solution is continuous and defined throughout the state space, methods from the level set literature can be used to generate more accurate approximations than are possible for formulations with potentially discontinuous solutions. A numerical implementation of our formulation is described and has been released on the web. Its correctness is verified through a two vehicle, three dimensional collision avoidance example for which an analytic solution is available.",Aircraft; Collaborative software; Collision avoidance; Computational modeling; Differential games; Hamilton–Jacobi equations; Nonlinear equations; Nonlinear systems; Partial differential equations; reachability; Trajectory; Vehicle dynamics; verification; Viscosity,A time-dependent Hamilton-Jacobi formulation of reachable sets for continuous dynamic games,,,,x,,,,,,NO,,
S56,1,Forward,conferencePaper,2020,"Li, Xuansong; Song, Wei; Zhang, Xiangyu",2020 35th IEEE/ACM International Conference on Automated Software Engineering (ASE),,,"Smart home systems are becoming increasingly popular. Software engineering of such systems hence becomes a prominent challenge. In this engineering paradigm, users are often interested in considering sensor states while they are performing various activities. Existing works have proposed initial efforts on incremental development method for activity-oriented requirements. However, there is no systematic way of ensuring reliability and security of such systems which may be developed by various developers and may execute in a complex environment. Some properties, especially those including timing constraints, need to be satisfied. In this paper, we introduce Actom, a framework for identification of activity-oriented requirements and runtime verification. Actom supports the development of the mapping between activities and required sensor readings (activity-sensor mapping). At runtime, Actom receives results of activity recognition and is able to trigger actuators to provide the required physical conditions for the activities, as determined by the activity-sensor mapping. Moreover, Actom continuously monitors whether activity-sensor mapping holds over a time period during the activity. We also discuss the evaluation plan to demonstrate the effectiveness and efficiency of Actom. The end product will be a systematic framework to facilitate the development of activity-oriented requirements and monitor properties with timing constraints to improve reliability and security.",Monitoring; Runtime; Timing; Security; model-driven development; Systematics; runtime verification; Smart homes; Software reliability,Towards Programming and Verification for Activity-Oriented Smart Home Systems,,,,,x,,,,,NO,,
S560,1,Backward,conferencePaper,2017,"Mullins, Galen E.; Stankiewicz, Paul G.; Gupta, Satyandra K.",2017 IEEE International Conference on Robotics and Automation (ICRA),10.1109/ICRA.2017.7989173,,"We propose a novel method for generating test scenarios for a black box autonomous system that demonstrate critical transitions in its performance modes. In complex environments it is possible for an autonomous system to fail at its assigned mission even if it complies with requirements for all subsystems and throws no faults. This is particularly true when the autonomous system may have to choose between multiple exclusive objectives. The standard approach of testing robustness through fault detection is directly stimulating the system and detecting violations of the system requirements. Our approach differs by instead running the autonomous system through full missions in a simulated environment and measuring performance based on high-level mission criteria. The result is a method of searching for challenging scenarios for an autonomous system under test that exercise a variety of performance modes. We utilize adaptive sampling to intelligently search the state space for test scenarios which exist on the boundary between distinct performance modes. Additionally, using unsupervised clustering techniques we can group scenarios by their performance modes and sort them by those which are most effective at diagnosing changes in the autonomous system's behavior.",Autonomous vehicles; Fault detection; Robustness; Software; Software testing,Automated generation of diverse and challenging scenarios for test and evaluation of autonomous vehicles,x,,,,,,,,,NO,,
S561,1,Backward,conferencePaper,2018,"Sayre-McCord, Thomas; Guerra, Winter; Antonini, Amado; Arneberg, Jasper; Brown, Austin; Cavalheiro, Guilherme; Fang, Yajun; Gorodetsky, Alex; McCoy, Dave; Quilter, Sebastian; Riether, Fabian; Tal, Ezra; Terzioglu, Yunus; Carlone, Luca; Karaman, Sertac",2018 IEEE International Conference on Robotics and Automation (ICRA),10.1109/ICRA.2018.8460692,,"The development of fast, agile micro Unmanned Aerial Vehicles (UAVs) has been limited by (i) on-board computing hardware restrictions, (ii) the lack of sophisticated vision-based perception and vision-in-the-loop control algorithms, and (iii) the absence of development environments where such systems and algorithms can be rapidly and easily designed, implemented, and validated. Here, we first present a new micro UAV platform that integrates high-rate cameras, inertial sensors, and an NVIDIA Jetson Tegra X1 system-on-chip compute module that boasts 256 GPU cores. The UAV mechanics and electronics were designed and built in house, and are described in detail. Second, we present a novel “virtual reality” development environment, in which photorealistically-rendered synthetic on-board camera images are generated in real time while the UAV is in flight. This development environment allows us to rapidly prototype computing and sensing hardware as well as perception and control algorithms, using real physics, real interoceptive sensor data (e.g., from the on-board inertial measurement unit), and synthetic exteroceptive sensor data (e.g., from synthetic cameras). Third, we demonstrate repeated agile maneuvering with closed-loop vision-based perception and control algorithms, which we have developed using this environment.",Cameras; Navigation; Real-time systems; Sensors; Solid modeling; Unmanned aerial vehicles; Visualization,Visual-Inertial Navigation Algorithm Development Using Photorealistic Camera Simulation in the Loop,x,,,,,,,,,NO,,
S562,1,Backward,conferencePaper,2018,"Shah, Shital; Dey, Debadeepta; Lovett, Chris; Kapoor, Ashish",Field and Service Robotics,10.1007/978-3-319-67361-5_40,,"Developing and testing algorithms for autonomous vehicles in real world is an expensive and time consuming process. Also, in order to utilize recent advances in machine intelligence and deep learning we need to collect a large amount of annotated training data in a variety of conditions and environments. We present a new simulator built on Unreal Engine that offers physically and visually realistic simulations for both of these goals. Our simulator includes a physics engine that can operate at a high frequency for real-time hardware-in-the-loop (HITL) simulations with support for popular protocols (e.g. MavLink). The simulator is designed from the ground up to be extensible to accommodate new types of vehicles, hardware platforms and software protocols. In addition, the modular design enables various components to be easily usable independently in other projects. We demonstrate the simulator by first implementing a quadrotor as an autonomous vehicle and then experimentally comparing the software components with real-world flights.",,AirSim: High-Fidelity Visual and Physical Simulation for Autonomous Vehicles,x,,,,,,,,,NO,,
S563,1,Backward,conferencePaper,2016,"Sotiropoulos, Thierry; Guiochet, Guiochet; Ingrand, Ingrand; Waeselynck, Weaselynck",2016 12th European Dependable Computing Conference (EDCC),10.1109/EDCC.2016.14,,"The ability to navigate in diverse and previously unknown environments is a critical service of autonomous robots. We propose a test framework based on MORSE (Modular Open Robots Simulation Engine), and using the generation of virtual 3D worlds to challenge the navigation service. We elaborate on the notion of the difficulty of the generated worlds, which we characterize in terms of mission achievement, mission duration and trajectory curves. We experimentally study our ability to control the difficulty level by means of the generation parameters. We also assess the indeterminism of the navigation and how it evolves depending on the difficulty level. The experimental outcomes provide insights toward the definition of test strategies to further stress the navigation service.",autonomous systems; difficulty; Games; generation; Navigation; Robot sensing systems; simulation; Test; testing; Testing; Three-dimensional displays; Unified modeling language; virtual worlds,Virtual Worlds for Testing Robot Navigation: A Study on the Difficulty Level,x,,,,,,,,,NO,,
S564,1,Backward,conferencePaper,2018,"Yel, Esen; Lin, Tony X.; Bezzo, Nicola",2018 IEEE International Conference on Robotics and Automation (ICRA),10.1109/ICRA.2018.8463205,,"Modern unmanned aerial vehicles (UAVs) rely on constant periodic sensor measurements to detect and avoid obstacles. However, constant checking and replanning are time and energy consuming and are often not necessary especially in situations in which the UAV can safely fly in uncluttered environments without entering unsafe states. Thus, in this paper, we propose a self-triggered framework that leverages reachability analysis to schedule the next time to check sensor measurements and perform replanning while guaranteeing safety under noise and disturbance effects. Further, we relax sensor checking and motion replanning operations by leveraging a risk-based analysis that determines the likelihood to reach undesired states over a certain time horizon. We also propose an online speed adaptation policy based on the planned trajectory curvature to minimize drift from the desired path due to the system dynamics. Finally, we validate the proposed approach with simulations and experiments for a quadrotor UAV motion planning case study in a cluttered environment.",Reachability analysis; Robot sensing systems; Safety; Schedules; Trajectory; Unmanned aerial vehicles,Self-triggered Adaptive Planning and Scheduling of UAV Operations,x,,,,,,,,,NO,,
S565,1,Backward,journalArticle,2004,"Murphy, R.R.",IEEE Robotics Automation Magazine,10.1109/MRA.2004.1337826,,"On September 11, 2001, the Center for Robot-Assisted Search and Rescue (CRASAR) responded within six hours to the World Trade Center (WTC) disaster; this is the first known use of robots for urban search and rescue (USAR). The University of South Florida (USF) was one of the four robot teams, and the only academic institution represented. The USF team participated onsite in the search efforts from 12-21 September 2001, collecting and archiving data on the use of all robots, in addition to actively fielding robots. This article provides an overview of the use of robots for USAR, concentrating on what robots were actually used and why. It describes the roles that the robots played in the response and the impact of the physical environment on the platforms. The quantitative and qualitative performance of the robots are summarized in terms of their components (mobility, sensors, control, communications, and power) and within the larger human-robot system. Lessons learned are offered and a synopsis of the current state of rescue robotics and activities at the CRASAR concludes the article.",Communication system control; Control systems; Fires; Mobile robots; Orbital robotics; Robot kinematics; Robot sensing systems; Robotics and automation; Sensor systems; Space technology,Trial by fire [rescue robots],,,,x,,,,,,NO,,
S566,1,Backward,book,2009,"Tadokoro, Satoshi",,,,"Rescue Robotics presents the most significant findings of the DDT Project on robots and systems for urban search and rescue. This project was launched by the Japanese government in 2002 with the aim of applying a wide variety of robotics technologies to find a solution to the problem of disaster response, especially urban search and rescue in large-scale earthquakes. From 2002 to 2007 more than 100 researchers took part in the DDT Project, coming from a wide spectrum of research and development to make up four research groups: Aerial Robot Systems MU (Mission Unit), Information Infrastructure System MU, In-Rubble Robot System MU, and On-Rubble Robot System MU. This book discusses their development and testing of various robotic systems and technologies such as serpentine robots, traced vehicles, intelligent human interface and data processing, as well as analysing and verifying the results of these experiments. Rescue Robotics will be of interest to researchers and students, but will also prove useful for emergency response personnel. It offers an insight into the state of the art of rescue robotics and its readers will benefit from a knowledge of the advanced technologies involved in this field.",Computers / Artificial Intelligence / General; Computers / User Interfaces; Medical / Allied Health Services / Emergency Medical Services; Medical / Emergency Medicine; Technology & Engineering / Automation; Technology & Engineering / Biomedical; Technology & Engineering / Electrical,Rescue Robotics: DDT Project on Robots and Systems for Urban Search and Rescue,,,,,x,,,,,NO,,
S567,1,Backward,conferencePaper,2019,"Willms, Christian; Houy, Constantin; Rehse, Jana-Rebecca; Fettke, Peter; Kruijff-Korbayová, Ivana","2019 IEEE International Symposium on Safety, Security, and Rescue Robotics (SSRR)",10.1109/SSRR.2019.8848976,,"Mobile robots can provide significant operational advantages in emergency response missions. With increasing autonomy robots need knowledge of the current mission in order to be able to properly contribute to it. We propose to acquire mission knowledge by interpreting the verbal communication among the human response-team members and to use process mining techniques to ground the interpretations in analyses of mission process data and corresponding reference models. We also present a novel concept of mission assistance that uses the acquired mission knowledge to support the first responders' work processes both during and after the mission. The assistance functions include process assistance for the coordination of human-robot team operations; automatic mission documentation generation; and process modeling for first responder training. We describe the architecture of our system and the design and current implementation state of its components: Speech Processing, Mission-Knowledge Management, Process Mining, and Process Assistance. We build on concepts that were evaluated and validated by first responders in a previous project; our extensions have been assessed qualitatively and will be further evaluated in the course of our current project.",Emergency services; Ontologies; Robot kinematics; Semantics; Speech processing; Task analysis,Team communication processing and process analytics for supporting robot-assisted emergency response,x,,,,,,,,,NO,,
S568,1,Backward,journalArticle,2010,"Bohren, Jonathan; Cousins, Steve",IEEE Robotics Automation Magazine,10.1109/MRA.2010.938836,,,,The SMACH High-Level Executive [ROS News],,x,,,,,,,,NO,,
S569,1,Backward,journalArticle,2016,"Campusano, Marina",De Prácticas y Discursos,10.30972/dpd.571213,,"Centrado en las transformaciones del escenario político latinoamericano que evidencian un cambio de ciclo y lo muestran en un viraje hacia la derecha, Francisco López Segrera nos propone, en este nuevo libro digital de CLACSO, recorrer los procesos que atravesaron los gobiernos posneoliberales para comprender el ascenso actual de grupos que identifica como representativos de “nuevas derechas”. Se detendrá así, a lo largo de los cinco capítulos que componen el libro, en los principales rasgos que los caracterizan para ayudarnos a rearmar el escenario político del continente y sus futuras proyecciones. Es importante destacar la trayectoria del autor, quien, más allá de su formación en Estudios Latinoamericanos e Hispánicos, ha estado involucrado en cargos que implicaron tareas en la diplomacia cubana, como así también en la UNESCO, abocado areflexionar en torno a la tarea y responsabilidad de las ciencias sociales para América Latina y el Caribe (ALC). Esas vivencias resalta el autor como presentes y necesarias al momento de encarar el proyecto del libro.",,Francisco López Segrera. América Latina: Crisis del posneoliberalismo y ascenso de la nueva derecha. Buenos Aires: CLACSO. Libro digital. 143 págs. 2016,x,,,,,,,,,NO,,
S57,1,Forward,journalArticle,2021,"Sun, Chen; Deng, Zejian; Chu, Wenbo; Li, Shen; Cao, Dongpu",IEEE Intelligent Transportation Systems Magazine,10.1109/MITS.2021.3070651,,,Monitoring; Task analysis; Testing; Real-time systems; Safety; Autonomous vehicles; Hazards,Acclimatizing the Operational Design Domain for Autonomous Driving Systems,x,,,,,,,,,NO,,
S570,1,Backward,conferencePaper,2012,"Dhouib, Saadia; Kchir, Selma; Stinckwich, Serge; Ziadi, Tewfik; Ziane, Mikal","Simulation, Modeling, and Programming for Autonomous Robots",10.1007/978-3-642-34327-8_16,,"A large number of robotic software have been developed but cannot or can hardly interoperate with each other because of their dependencies on specific hardware or software platform is hard-wired into the code. Consequently, robotic software is hard and expensive to develop because there is little opportunity of reuse and because low-level details must be taken into account in early phases. Moreover, robotic experts can hardly develop their application without programming knowledge or the help of programming experts and robotic software is difficult to adapt to hardware or target-platform changes. In this paper we report on the development of RobotML, a Robotic Modeling Language that eases the design of robotic applications, their simulation and their deployment to multiple target execution platforms.",Domain-Specific Languages; Generative Programming; MDE; robotic application,"RobotML, a Domain-Specific Language to Design, Simulate and Deploy Robotic Applications",x,,,,,,,,,NO,,
S58,1,Forward,journalArticle,2019,"Pereira, Juliana Alves; Martin, Hugo; Acher, Mathieu; Jézéquel, Jean-Marc; Botterweck, Goetz; Ventresque, Anthony",arXiv:1906.03018 [cs],,http://arxiv.org/abs/1906.03018,"Most modern software systems (operating systems like Linux or Android, Web browsers like Firefox or Chrome, video encoders like ffmpeg, x264 or VLC, mobile and cloud applications, etc.) are highly-configurable. Hundreds of configuration options, features, or plugins can be combined, each potentially with distinct functionality and effects on execution time, security, energy consumption, etc. Due to the combinatorial explosion and the cost of executing software, it is quickly impossible to exhaustively explore the whole configuration space. Hence, numerous works have investigated the idea of learning it from a small sample of configurations' measurements. The pattern ""sampling, measuring, learning"" has emerged in the literature, with several practical interests for both software developers and end-users of configurable systems. In this survey, we report on the different application objectives (e.g., performance prediction, configuration optimization, constraint mining), use-cases, targeted software systems and application domains. We review the various strategies employed to gather a representative and cost-effective sample. We describe automated software techniques used to measure functional and non-functional properties of configurations. We classify machine learning algorithms and how they relate to the pursued application. Finally, we also describe how researchers evaluate the quality of the learning process. The findings from this systematic review show that the potential application objective is important; there are a vast number of case studies reported in the literature from the basis of several domains and software systems. Yet, the huge variant space of configurable systems is still challenging and calls to further investigate the synergies between artificial intelligence and software engineering.",Computer Science - Machine Learning; Computer Science - Software Engineering,Learning Software Configuration Spaces: A Systematic Literature Review,,,,,x,,,,,NO,,
S59,1,Forward,conferencePaper,2020,"Alves Pereira, Juliana; Acher, Mathieu; Martin, Hugo; Jézéquel, Jean-Marc",Proceedings of the ACM/SPEC International Conference on Performance Engineering,10.1145/3358960.3379137,https://doi.org/10.1145/3358960.3379137,"Numerous software systems are highly configurable and provide a myriad of configuration options that users can tune to fit their functional and performance requirements (e.g., execution time). Measuring all configurations of a system is the most obvious way to understand the effect of options and their interactions, but is too costly or infeasible in practice. Numerous works thus propose to measure only a few configurations (a sample) to learn and predict the performance of any combination of options' values. A challenging issue is to sample a small and representative set of configurations that leads to a good accuracy of performance prediction models. A recent study devised a new algorithm, called distance-based sampling, that obtains state-of-the-art accurate performance predictions on different subject systems. In this paper, we replicate this study through an in-depth analysis of x264, a popular and configurable video encoder. We systematically measure all 1,152 configurations of x264 with 17 input videos and two quantitative properties (encoding time and encoding size). Our goal is to understand whether there is a dominant sampling strategy over the very same subject system (x264), i.e., whatever the workload and targeted performance properties. The findings from this study show that random sampling leads to more accurate performance models. However, without considering random, there is no single ""dominant"" sampling, instead different strategies perform best on different inputs and non-functional properties, further challenging practitioners and researchers.",configurable systems; machine learning; performance prediction; software product lines,Sampling Effect on Performance Prediction of Configurable Systems: A Case Study,x,,,,,,,,,NO,,
S60,1,Forward,conferencePaper,2019,"Calinescu, Radu; Cámara, Javier; Paterson, Colin",2019 IEEE/ACM 5th International Workshop on Software Engineering for Smart Cyber-Physical Systems (SEsCPS),10.1109/SEsCPS.2019.00008,,"Almost without exception, cyber-physical systems operate alongside, for the benefit of, and supported by humans. Unsurprisingly, disregarding their social aspects during development and operation renders these systems ineffective. In this paper, we explore approaches to modelling and reasoning about the human involvement in socio-cyber-physical systems (SCPS). To provide an unbiased perspective, we describe both the opportunities afforded by the presence of human agents, and the challenges associated with ensuring that their modelling is sufficiently accurate to support decision making during SCPS development and, if applicable, at run-time. Using SCPS examples from emergency management and assisted living, we illustrate how recent advances in stochastic modelling, analysis and synthesis can be used to exploit human observations about the impact of natural and man-made disasters, and to support the efficient provision of assistive care.",Analytical models; assisted living; assurance; autonomous systems; Computational modeling; emergency management; human in the loop; Reliability; self adaptive systems; Sensors; socio cyber physical systems; stochastic model synthesis; stochastic modelling; Stochastic processes; Task analysis; Uncertainty,"Socio-Cyber-Physical Systems: Models, Opportunities, Open Challenges",x,,,,,,,,,NO,,
S61,1,Forward,thesis,2019,"Acher, Mathieu; Martin, Hugo; Pereira, Juliana; Blouin, Arnaud; Jézéquel, Jean-Marc; Khelladi, Djamel; Lesoil, Luc; Barais, Olivier",,,https://hal.inria.fr/hal-02314830,"Linux kernels are used in a wide variety of appliances, many of them having strong requirements on the kernel size due to constraints such as limited memory or instant boot. With more than ten thousands of configuration options to choose from, obtaining a suitable trade off between kernel size and functionality is an extremely hard problem. Developers, contributors, and users actually spend significant effort to document, understand, and eventually tune (combinations of) options for meeting a kernel size. In this paper, we investigate how machine learning can help explain what matters for predicting a given Linux kernel size. Unveiling what matters in such very large configuration space is challenging for two reasons: (1) whatever the time we spend on it, we can only build and measure a tiny fraction of possible kernel configurations; (2) the prediction model should be both accurate and interpretable. We compare different machine learning algorithms and demonstrate the benefits of specific feature encoding and selection methods to learn an accurate model that is fast to compute and simple to interpret. Our results are validated over 95,854 kernel configurations and show that we can achieve low prediction errors over a reduced set of options. We also show that we can extract interpretable information for refining documentation and experts' knowledge of Linux, or even assigning more sensible default values to options.",,Learning Very Large Configuration Spaces: What Matters for Linux Kernel Sizes,,,,,x,,,,,NO,,
S62,1,Forward,conferencePaper,2020,"Malavolta, Ivano; Lewis, Grace; Schmerl, Bradley; Lago, Patricia; Garlan, David",2020 IEEE/ACM 42nd International Conference on Software Engineering: Software Engineering in Practice (ICSE-SEIP),,,"The Robot Operating System (ROS) is the de-facto standard for robotic software. If on one hand ROS is helping roboticists, e.g., by providing a standardized communication platform, on the other hand ROS-based systems are getting larger and more complex and could benefit from good software architecture practices. This paper presents an observational study aimed at (i) unveiling the state-of the-practice for architecting ROS-based systems and (ii) providing guidance to roboticists about how to properly architect ROS-based systems. To achieve these goals, we (i) build a dataset of 335 GitHub repositories containing real open-source ROS-based systems, (ii) mine the repositories for extracting the state of the practice about how roboticists are architecting them, and (iii) synthesize a catalog of 49 evidence-based guidelines for architecting ROS-based systems. The guidelines have been validated by 77 roboticists working on real-world open-source ROS-based systems.",Computer architecture; Data mining; Documentation; Guidelines; Mining Software Repositories; Open source software; Robotics; Robots; Service robots; Software Architecture,How do you Architect your Robots? State of the Practice and Guidelines for ROS-based Systems,,,,,,,,x,,NO,,
S63,1,Forward,conferencePaper,2020,"Palm, Alexander; Metzger, Andreas; Pohl, Klaus",Advanced Information Systems Engineering,10.1007/978-3-030-49435-3_11,,"A self-adaptive information system is capable of maintaining its quality requirements in the presence of dynamic environment changes. To develop a self-adaptive information system, information system engineers have to create self-adaptation logic that encodes when and how the system should adapt itself. However, developing self-adaptation logic may be difficult due to design time uncertainty; e.g., anticipating all potential environment changes at design time is in most cases infeasible. Online reinforcement learning (RL) addresses design time uncertainty by learning the effectiveness of adaptation actions through interactions with the system’s environment at run time, thereby automating the development of self-adaptation logic. Existing online RL approaches for self-adaptive information systems exhibit two shortcomings that limit the degree of automation: they require manually fine-tuning the exploration rate and may require manually quantizing environment states to foster scalability. We introduce an approach to automate the aforementioned manual activities by employing policy-based RL as a fundamentally different type of RL. We demonstrate the feasibility and applicability of our approach using two self-adaptive information system exemplars.",Information system engineering; Reinforcement learning; Self-adaptation,Online Reinforcement Learning for Self-adaptive Information Systems,x,,,,,,,,,NO,,
S64,1,Forward,conferencePaper,2020,"Van Der Donckt, Jeroen; Weyns, Danny; Quin, Federico; Van Der Donckt, Jonas; Michiels, Sam",Proceedings of the IEEE/ACM 15th International Symposium on Software Engineering for Adaptive and Self-Managing Systems,10.1145/3387939.3391605,https://doi.org/10.1145/3387939.3391605,"When a self-adaptive system needs to adapt, it has to analyze the possible options for adaptation, i.e., the adaptation space. For systems with large adaptation spaces, this analysis process can be resource- and time-consuming. One approach to tackle this problem is using machine learning techniques to reduce the adaptation space to only the relevant adaptation options. However, existing approaches only handle threshold goals, while practical systems often need to address also optimization goals. To tackle this limitation, we propose a two-stage learning approach called Deep Learning for Adaptation Space Reduction (DLASeR). DLASeR applies a deep learner first to reduce the adaptation space for the threshold goals and then ranks these options for the optimization goal. A benefit of deep learning is that it does not require feature engineering. Results on two instances of the DeltaIoT artifact (with different sizes of adaptation space) show that DLASeR outperforms a state-of-the-art approach for settings with only threshold goals. The results for settings with both threshold goals and an optimization goal show that DLASeR is effective with a negligible effect on the realization of the adaptation goals. Finally, we observe no noteworthy effect on the effectiveness of DLASeR for larger sizes of adaptation spaces.",adaptation space; deep learning; self-adaptation,Applying deep learning to reduce large adaptation spaces of self-adaptive systems with multiple types of goals,x,,,,,,,,,NO,,
S65,1,Forward,journalArticle,2020,"Chen, Tao; Li, Miqing; Li, Ke; Deb, Kalyanmoy",arXiv:2001.08236 [cs],,http://arxiv.org/abs/2001.08236,"Search-Based Software Engineering (SBSE) is a promising paradigm that exploits the computational search to optimize different processes when engineering complex software systems. Self-adaptive system (SAS) is one category of such complex systems that permits to optimize different functional and non-functional objectives/criteria under changing environments (e.g., requirements and workload), which involves problems that are subject to search. In this regard, over years, there has been a considerable amount of work that investigates SBSE for SASs. In this paper, we provide the first systematic and comprehensive survey exclusively on SBSE for SASs, covering papers in 27 venues from 7 repositories, which eventually leads to several key statistics from the most notable 74 primary studies in this particular field of research. Our results, surprisingly, have revealed five disappointments that are of utmost importance and can result in serve consequences but have been overwhelmingly ignored in existing studies. We provide theoretical and/or experimental evidence to justify our arguments against the disappointments, present suggestions, and highlight the promising research opportunities towards their mitigation. We also elaborate on three other emergent, but currently under-explored opportunities for future work on SBSE for SASs. By mitigating the disappointments revealed in this work, together with the highlighted opportunities, we hope to be able to excite a much more significant growth in this particular research direction.",Computer Science - Artificial Intelligence; Computer Science - Software Engineering,"Search-Based Software Engineering for Self-Adaptive Systems: Survey, Disappointments, Suggestions and Opportunities",,,,,x,,,,,NO,,
S66,1,Forward,conferencePaper,2020,"Keller, Claas; Mann, Zoltán Ádám",Service-Oriented Computing – ICSOC 2019 Workshops,10.1007/978-3-030-45989-5_4,,"An important feature of service-based and cloud-based systems is their ability to perform self-adaptation. Through self-adaptation, such systems can automatically react to changes and thus ensure the continued satisfaction of their functional and non-functional requirements. Self-adaptation may take non-negligible time (which we term adaptation latency), and during this period the self-adaptive system may exhibit degraded performance or other negative impact. Hence, it is important to understand how long self-adaptations take and what influences the adaptation latency. However, we are not aware of a systematic study of this question in the literature. This paper is a first step in this direction. We present (i) a model of adaptation latency that breaks it down into four components and (ii) a preliminary survey, limited to one conference series and to service-based and cloud-based systems, to analyze information about adaptation latency in the available literature on self-adaptive systems. According to the findings from this preliminary survey, although some components of the adaptation latency are studied in some publications, the whole adaptation delay is seldom considered.",,Towards Understanding Adaptation Latency in Self-adaptive Systems,x,,,,,,,,,NO,,
S67,1,Forward,journalArticle,2020,"Metzger, Andreas; Quinton, Clément; Mann, Zoltán Ádám; Baresi, Luciano; Pohl, Klaus",arXiv:1907.09158 [cs],10.1007/978-3-030-65310-1_20,http://arxiv.org/abs/1907.09158,"A self-adaptive system can modify its own structure and behavior at runtime based on its perception of the environment, of itself and of its requirements. To develop a self-adaptive system, software developers codify knowledge about the system and its environment, as well as how adaptation actions impact on the system. However, the codified knowledge may be insufficient due to design time uncertainty, and thus a self-adaptive system may execute adaptation actions that do not have the desired effect. Online learning is an emerging approach to address design time uncertainty by employing machine learning at runtime. Online learning accumulates knowledge at runtime by, for instance, exploring not-yet executed adaptation actions. We address two specific problems with respect to online learning for self-adaptive systems. First, the number of possible adaptation actions can be very large. Existing online learning techniques randomly explore the possible adaptation actions, but this can lead to slow convergence of the learning process. Second, the possible adaptation actions can change as a result of system evolution. Existing online learning techniques are unaware of these changes and thus do not explore new adaptation actions, but explore adaptation actions that are no longer valid. We propose using feature models to give structure to the set of adaptation actions and thereby guide the exploration process during online learning. Experimental results involving four real-world systems suggest that considering the hierarchical structure of feature models may speed up convergence by 7.2% on average. Considering the differences between feature models before and after an evolution step may speed up convergence by 64.6% on average. [...]",Computer Science - Machine Learning; Computer Science - Software Engineering,Feature-Model-Guided Online Learning for Self-Adaptive Systems,,,,,x,,,,,NO,,
S68,1,Forward,conferencePaper,2020,"Cámara, Javier; Muccini, Henry; Vaidhyanathan, Karthik",2020 IEEE International Conference on Software Architecture (ICSA),10.1109/ICSA47634.2020.00010,,"Architecting IoT systems able to guarantee Quality of Service (QoS) levels can be a challenging task due to the inherent uncertainties (induced by changes in e.g., energy availability, network traffic) that they are subject to. Existing work has shown that machine learning (ML) techniques can be effectively used at run time for selecting self-adaptation patterns that can help maintain adequate QoS levels. However, this class of approach suffers from learning bias, which induces accuracy problems that might lead to sub-optimal (or even unfeasible) adaptations in some situations. To overcome this limitation, we propose an approach for proactive self-adaptation which combines ML and formal quantitative verification (probabilistic model checking). In our approach, ML is tasked with selecting the best adaptation pattern for a given scenario, and quantitative verification checks the feasibility of the adaptation decision, preventing the execution of unfeasible adaptations and providing feedback to the ML engine which helps to achieve faster convergence towards optimal decisions. The results of our evaluation show that our approach is able to produce better decisions than ML and quantitative verification used in isolation.","Adaptation models; Data models; Machine learning; Predictive models; Quality of service; Self-Adaptive architectures, proactive adaptation, machine learning, reinforcement learning, Q-learning, quantitative verification, probabilistic model checking, IoT architectures, self-adaptation patterns, software architecture; Sensor systems",Quantitative Verification-Aided Machine Learning: A Tandem Approach for Architecting Self-Adaptive IoT Systems,x,,,,,,,,,NO,,
S69,1,Forward,journalArticle,2020,"Saputri, Theresia Ratih Dewi; Lee, Seok-Won",IEEE Access,10.1109/ACCESS.2020.3036037,,"Context: Self-adaptive systems have been studied in software engineering over the past few decades attempting to address challenges within the field. There is a continuous significant need to fully understand the behavior and characteristics of the systems that operate in dynamic environments. By learning the behavior pattern of the environment, we can avoid unnecessary adaptations imbalance efforts for adaptation. As such, there exist research in the area of machine learning aimed at understanding dynamic environments regarding self-adaptive systems. Objective: This study aims to help software practitioners to address adaptation concerns by performing a systematic literature review that provides a comprehensive overview of using machine learning (ML) in self-adaptive systems. We summarize state-of-the-art Of the ML approaches used to handle self-adaptation to help software engineers in the proper selection of ML techniques based on the adaptation concern. Method: This review examines research published between 2001 and 2019 on ML implementation in self-adaptive systems, focusing on the adaptation aspects and purposes. The review was conducted by analyzing major scientific databases that resulted in 78 primary studies from 315 papers from an automatic search. Result: Finally, this study recommends three future research directions to enhance the application of machine learning in self-adaptive systems.",adaptation; Adaptation models; Bibliographies; machine learning; Machine learning; Market research; self-adaptive systems; Synthetic aperture sonar; Systematic literature review; Systematics; Taxonomy,The Application of Machine Learning in Self-Adaptive Systems: A Systematic Literature Review,x,,,,,,,,,NO,,
S70,1,Forward,conferencePaper,2019,"Palmerino, Jeffrey; Yu, Qi; Desell, Travis; Krutz, Daniel",2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE),10.1109/ASE.2019.00092,,"When self-adaptive systems encounter changes withintheir surrounding environments, they enacttacticsto performnecessary adaptations. For example, a self-adaptive cloud-basedsystem may have a tactic that initiates additional computingresources when response time thresholds are surpassed, or theremay be a tactic to activate a specific security measure when anintrusion is detected. In real-world environments, these tacticsfrequently experiencetactic volatilitywhich is variable behaviorduring the execution of the tactic.Unfortunately, current self-adaptive approaches do not accountfor tactic volatility in their decision-making processes, and merelyassume that tactics do not experience volatility. This limitationcreates uncertainty in the decision-making process and mayadversely impact the system's ability to effectively and efficientlyadapt. Additionally, many processes do not properly account forvolatility that may effect the system's Service Level Agreement(SLA). This can limit the system's ability to act proactively, especially when utilizing tactics that contain latency.To address the challenge of sufficiently accounting for tacticvolatility, we propose aTactic Volatility Aware(TVA) solution.Using Multiple Regression Analysis (MRA), TVA enables self-adaptive systems to accurately estimate the cost and timerequired to execute tactics. TVA also utilizesAutoregressiveIntegrated Moving Average(ARIMA) for time series forecasting, allowing the system to proactively maintain specifications.","Adaptive systems; Artificial Intelligence, Self-Adaptation, Machine Learning; Batteries; Decision making; Servers; Time factors; Tools; Unmanned aerial vehicles",Improving the Decision-Making Process of Self-Adaptive Systems by Accounting for Tactic Volatility,x,,,,,,,,,NO,,
S71,1,Forward,conferencePaper,2020,"Arcaini, Paolo; Mirandola, Raffaela; Riccobene, Elvinia; Scandurra, Patrizia; Arrigoni, Alberto; Bosc, Daniele; Modica, Federico; Pedercini, Rita",Proceedings of the 35th Annual ACM Symposium on Applied Computing,10.1145/3341105.3373925,https://doi.org/10.1145/3341105.3373925,"Smart Home is an exemplar application domain of the Internet of Things (IoT). In particular, smart home automation processes that manage the interactions with the home devices and integrate all their (possibly interfering) services, introduce new challenges and call for modern engineering practices, software platforms, and computational intelligence. A key example is the need to achieve a more efficient integration between design and runtime aspects in the automation process, taking into account that unanticipated situations can occur in the home environment and require a smart home system to deal with them at runtime. In this paper, using an application example, we foresee how to architect future smart home systems in order to endow them with self-adaptation capabilities allowing decentralized control and device interconnection. Namely, we propose to exploit feedback control loop architectures (e.g., composite MAPE feedback loops) to design and manage the home automation processes, as alternative software architectural solutions to those of smart home platforms currently available.",architecture-based self-adaptation; MAPE-K; OpenHAB; smart home platforms; software architecture styles for smart home systems,Smart home platform supporting decentralized adaptive automation control,x,,,,,,,,,NO,,
S72,1,Forward,book,2021,"Landsborough, Jason; Carpenter, Luke; Coronado, Braulio; Fugate, Sunny; Ferguson-Walter, Kimberly; Bruggen, Dirk",,,,,,Towards Self-Adaptive Cyber Deception for Defense,,,,,x,,,,,NO,,
S73,1,Forward,journalArticle,2021,"Muccini, Henry; Vaidhyanathan, Karthik",arXiv:2103.07950 [cs],,http://arxiv.org/abs/2103.07950,"The increasing usage of machine learning (ML) coupled with the software architectural challenges of the modern era has resulted in two broad research areas: i) software architecture for ML-based systems, which focuses on developing architectural techniques for better developing ML-based software systems, and ii) ML for software architectures, which focuses on developing ML techniques to better architect traditional software systems. In this work, we focus on the former side of the spectrum with a goal to highlight the different architecting practices that exist in the current scenario for architecting ML-based software systems. We identify four key areas of software architecture that need the attention of both the ML and software practitioners to better define a standard set of practices for architecting ML-based software systems. We base these areas in light of our experience in architecting an ML-based software system for solving queuing challenges in one of the largest museums in Italy.",Computer Science - Artificial Intelligence; Computer Science - Machine Learning; Computer Science - Software Engineering,Software Architecture for ML-based Systems: What Exists and What Lies Ahead,,,,,x,,,,,NO,,
S74,1,Forward,conferencePaper,2020,"Cámara, Javier; Schmerl, Bradley; Garlan, David",Proceedings of the IEEE/ACM 15th International Symposium on Software Engineering for Adaptive and Self-Managing Systems,10.1145/3387939.3391591,https://doi.org/10.1145/3387939.3391591,"Self-adaptive systems increasingly need to reason about and adapt both structural and behavioral system aspects, such as in mobile service robots, which must reason about missions that they need to achieve and the architecture of the software executing them. Deciding how to best adapt these systems to run time changes is challenging because it entails considering mutual dependencies between the software architecture that the system is running and the outcome of plans for completing tasks, while also considering multiple trade-offs and uncertainties. Considering all these aspects in planning for adaptation often yields large solution spaces which cannot be adequately explored at run time. We address this challenge by proposing a planning approach able to consider the impact of mutual dependencies between software architecture and task planning on the satisfaction of mission goals. The approach is able to reason quantitatively about the outcome of adaptation decisions handling both the reconfiguration of the system's architecture and adaptation of task plans under uncertainty and in a rich trade-off space. Our results show: (i) feasibility of run-time decision-making for self-adaptation in an otherwise intractable solution space by dividing-and-conquering adaptation into architecture reconfiguration and task planning sub-problems, and (ii) improved quality of adaptation decisions with respect to decision making that does not consider dependencies between architecture and task planning.",architecture; assurances; mobile robotics; self-adaptation,Software architecture and task plan co-adaptation for mobile service robots,,,,,,,,,,,,
S75,1,Forward,journalArticle,,"Goel, Shivam; Tatiya, Gyan; Scheutz, Matthias; Sinapov, Jivko",,,,"As researchers are developing methods for detecting and accommodating novelties that will make AI agents more robust to unknown sudden changes in the “open worlds”, there is an increasing need for benchmark environments that allow for the systematic evaluations of the proposed AI techniques. We present “NovelGridworlds”, an OpenAI Gym environment framework for developing and evaluating AI agents that can detect and adapt to unknown sudden novelties in their environments. Based on a rich taxonomy of novelties illustrated in 4 different tasks with 12 novelties in each, we propose evaluation metrics for evaluating both planning systems and learning systems that can handle novelty and illustrate the metrics with results from simulations of both types of AI agents.",,NovelGridworlds: A Benchmark Environment for Detecting and Adapting to Novelties in Open Worlds,,,,x,x,,,,,NO,,
S76,1,Forward,journalArticle,2021,"Gerostathopoulos, Ilias; Vogel, Thomas; Weyns, Danny; Lago, Patricia",arXiv:2103.11481 [cs],,http://arxiv.org/abs/2103.11481,"With the increase of research in self-adaptive systems, there is a need to better understand the way research contributions are evaluated. Such insights will support researchers to better compare new findings when developing new knowledge for the community. However, so far there is no clear overview of how evaluations are performed in self-adaptive systems. To address this gap, we conduct a mapping study. The study focuses on experimental evaluations published in the last decade at the prime venue of research in software engineering for self-adaptive systems -- the International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS). Results point out that specifics of self-adaptive systems require special attention in the experimental process, including the distinction of the managing system (i.e., the target of evaluation) and the managed system, the presence of uncertainties that affect the system behavior and hence need to be taken into account in data analysis, and the potential of managed systems to be reused across experiments, beyond replications. To conclude, we offer a set of suggestions derived from our study that can be used as input to enhance future experiments in self-adaptive systems.",Computer Science - Software Engineering,How do we Evaluate Self-adaptive Software Systems?,,,,,x,,,,,NO,,
S77,1,Forward,report,2020,"Aldrich, Jonathan",,,https://apps.dtic.mil/sti/citations/AD1103553,"The Model-Based Adaptation for Mobile Robotics MARS Defense Advanced Research Projects Agency DARPA Building Resource Adaptive Software Systems BRASS effort demonstrated novel techniques to make mobile robotics software so that it can be more easily adapted to different hardware, tasks, and environments. The approach builds software so flexible that it is able to adapt itself to changing environments over a period of years or even decades. The primary intellectual leverage comes from models formal descriptions of the structure and properties of robotic software, and how these respond to environmental change. Using these models, the developed approach enables robots to automatically explore potential adaptations to the system architecture and code and then choose the adaptation that best meets system objectives in the current environment.",,Building Resource Adaptive Software Systems Model-Based Adaptation for Robotics Software,,,,,x,,,,,NO,,
S78,1,Forward,journalArticle,2021,"Hurtado, Juana Valeria; Londoño, Laura; Valada, Abhinav",Frontiers in Robotics and AI,10.3389/frobt.2021.650325,http://arxiv.org/abs/2101.02647,"The exponentially increasing advances in robotics and machine learning are facilitating the transition of robots from being confined to controlled industrial spaces to performing novel everyday tasks in domestic and urban environments. In order to make the presence of robots safe as well as comfortable for humans, and to facilitate their acceptance in public environments, they are often equipped with social abilities for navigation and interaction. Socially compliant robot navigation is increasingly being learned from human observations or demonstrations. We argue that these techniques that typically aim to mimic human behavior do not guarantee fair behavior. As a consequence, social navigation models can replicate, promote, and amplify societal unfairness such as discrimination and segregation. In this work, we investigate a framework for diminishing bias in social robot navigation models so that robots are equipped with the capability to plan as well as adapt their paths based on both physical and social demands. Our proposed framework consists of two components: \textit{learning} which incorporates social context into the learning process to account for safety and comfort, and \textit{relearning} to detect and correct potentially harmful outcomes before the onset. We provide both technological and societal analysis using three diverse case studies in different social scenarios of interaction. Moreover, we present ethical implications of deploying robots in social environments and propose potential solutions. Through this study, we highlight the importance and advocate for fairness in human-robot interactions in order to promote more equitable social relationships, roles, and dynamics and consequently positively influence our society.",Computer Science - Computer Vision and Pattern Recognition; Computer Science - Machine Learning; Computer Science - Robotics,From Learning to Relearning: A Framework for Diminishing Bias in Social Robot Navigation,x,,,,,,,,,NO,,
S79,1,Forward,journalArticle,2021,"Weyns, Danny; Schmerl, Bradley; Kishida, Masako; Leva, Alberto; Litoiu, Marin; Ozay, Necmiye; Paterson, Colin; Tei, Kenji","arXiv:2103.10847 [cs, eess]",,http://arxiv.org/abs/2103.10847,"Two established approaches to engineer adaptive systems are architecture-based adaptation that uses a Monitor-Analysis-Planning-Executing (MAPE) loop that reasons over architectural models (aka Knowledge) to make adaptation decisions, and control-based adaptation that relies on principles of control theory (CT) to realize adaptation. Recently, we also observe a rapidly growing interest in applying machine learning (ML) to support different adaptation mechanisms. While MAPE and CT have particular characteristics and strengths to be applied independently, in this paper, we are concerned with the question of how these approaches are related with one another and whether combining them and supporting them with ML can produce better adaptive systems. We motivate the combined use of different adaptation approaches using a scenario of a cloud-based enterprise system and illustrate the analysis when combining the different approaches. To conclude, we offer a set of open questions for further research in this interesting area.",Computer Science - Machine Learning; Computer Science - Software Engineering; Electrical Engineering and Systems Science - Systems and Control,"Towards Better Adaptive Systems by Combining MAPE, Control Theory, and Machine Learning",,,,,x,,,,,NO,,
S80,1,Forward,journalArticle,2021,"Cardozo, Nicolás; Dusparic, Ivana",arXiv:2103.06757 [cs],,http://arxiv.org/abs/2103.06757,"Self-adaptive software systems continuously adapt in response to internal and external changes in their execution environment, captured as contexts. The COP paradigm posits a technique for the development of self-adaptive systems, capturing their main characteristics with specialized programming language constructs. COP adaptations are specified as independent modules composed in and out of the base system as contexts are activated and deactivated in response to sensed circumstances from the surrounding environment. However, the definition of adaptations, their contexts and associated specialized behavior, need to be specified at design time. In complex CPS this is intractable due to new unpredicted operating conditions. We propose Auto-COP, a new technique to enable generation of adaptations at run time. Auto-COP uses RL options to build action sequences, based on the previous instances of the system execution. Options are explored in interaction with the environment, and the most suitable options for each context are used to generate adaptations exploiting COP. To validate Auto-COP, we present two case studies exhibiting different system characteristics and application domains: a driving assistant and a robot delivery system. We present examples of Auto-COP code generated at run time, to illustrate the types of circumstances (contexts) requiring adaptation, and the corresponding generated adaptations for each context. We confirm that the generated adaptations exhibit correct system behavior measured by domain-specific performance metrics, while reducing the number of required execution/actuation steps by a factor of two showing that the adaptations are regularly selected by the running system as adaptive behavior is more appropriate than the execution of primitive actions.",Computer Science - Artificial Intelligence; Computer Science - Programming Languages; Computer Science - Software Engineering,Auto-COP: Adaptation Generation in Context-Oriented Programming using Reinforcement Learning Options,,,,,x,,,,,NO,,
S81,1,Forward,conferencePaper,2020,"Caldas, Ricardo Diniz; Rodrigues, Arthur; Gil, Eric Bernd; Rodrigues, Genaína Nunes; Vogel, Thomas; Pelliccione, Patrizio",Proceedings of the IEEE/ACM 15th International Symposium on Software Engineering for Adaptive and Self-Managing Systems,10.1145/3387939.3391595,https://doi.org/10.1145/3387939.3391595,"Control theoretical techniques have been successfully adopted as methods for self-adaptive systems design to provide formal guarantees about the effectiveness and robustness of adaptation mechanisms. However, the computational effort to obtain guarantees poses severe constraints when it comes to dynamic adaptation. In order to solve these limitations, in this paper, we propose a hybrid approach combining software engineering, control theory, and AI to design for software self-adaptation. Our solution proposes a hierarchical and dynamic system manager with performance tuning. Due to the gap between high-level requirements specification and the internal knob behavior of the managed system, a hierarchically composed components architecture seek the separation of concerns towards a dynamic solution. Therefore, a two-layered adaptive manager was designed to satisfy the software requirements with parameters optimization through regression analysis and evolutionary meta-heuristic. The optimization relies on the collection and processing of performance, effectiveness, and robustness metrics w.r.t control theoretical metrics at the offline and online stages. We evaluate our work with a prototype of the Body Sensor Network (BSN) in the healthcare domain, which is largely used as a demonstrator by the community. The BSN was implemented under the Robot Operating System (ROS) architecture, and concerns about the system dependability are taken as adaptation goals. Our results reinforce the necessity of performing well on such a safety-critical domain and contribute with substantial evidence on how hybrid approaches that combine control and AI-based techniques for engineering self-adaptive systems can provide effective adaptation.",control theory; hybrid; optimization; self-adaptive software,A hybrid approach combining control theory and AI for engineering self-adaptive systems,x,,,,,,,,,NO,,
S82,1,Forward,journalArticle,2021,"Malavolta, Ivano; Lewis, Grace A.; Schmerl, Bradley; Lago, Patricia; Garlan, David",Journal of Systems and Software,10.1016/j.jss.2021.110969,https://www.sciencedirect.com/science/article/pii/S0164121221000662,"Context: The Robot Operating System (ROS) is the de-facto standard for robotics software. However, ROS-based systems are getting larger and more complex and could benefit from good software architecture practices. Goal: We aim at (i) unveiling the state-of-the-practice in terms of targeted quality attributes and architecture documentation in ROS-based systems, and (ii) providing empirically-grounded guidance to roboticists about how to properly architect ROS-based systems. Methods: We designed and conducted an observational study where we (i) built a dataset of 335 GitHub repositories containing real open-source ROS-based systems, and (ii) mined the repositories to extract and synthesize quantitative and qualitative findings about how roboticists are architecting ROS-based systems. Results: First, we extracted an empirically-grounded overview of the state of the practice for architecting and documenting ROS-based systems. Second, we synthesized a catalog of 47 architecting guidelines for ROS-based systems. Third, the extracted guidelines were validated by 119 roboticists working on real-world open-source ROS-based systems. Conclusion: Roboticists can use our architecting guidelines for applying good design principles to develop robots that meet quality requirements, and researchers can use our results as evidence-based indications about how real-world ROS systems are architected today, thus inspiring future research contributions.",Robotics; ROS; Software architecture,Mining guidelines for architecting robotics software,,,,,,,,x,,NO,,
S83,1,Forward,journalArticle,2021,"Gheibi, Omid; Weyns, Danny; Quin, Federico",arXiv:2103.10194 [cs],,http://arxiv.org/abs/2103.10194,"Recently, we have been witnessing an increasing use of machine learning methods in self-adaptive systems. Machine learning methods offer a variety of use cases for supporting self-adaptation, e.g., to keep runtime models up to date, reduce large adaptation spaces, or update adaptation rules. Yet, since machine learning methods apply in essence statistical methods, they may have an impact on the decisions made by a self-adaptive system. Given the wide use of formal approaches to provide guarantees for the decisions made by self-adaptive systems, it is important to investigate the impact of applying machine learning methods when such approaches are used. In this paper, we study one particular instance that combines linear regression to reduce the adaptation space of a self-adaptive system with statistical model checking to analyze the resulting adaptation options. We use computational learning theory to determine a theoretical bound on the impact of the machine learning method on the predictions made by the verifier. We illustrate and evaluate the theoretical result using a scenario of the DeltaIoT artifact. To conclude, we look at opportunities for future research in this area.",Computer Science - Machine Learning; Computer Science - Software Engineering,On the Impact of Applying Machine Learning in the Decision-Making of Self-Adaptive Systems,,,,,x,,,,,NO,,
S84,1,Forward,journalArticle,2021,"Gerostathopoulos, Ilias; Plášil, František; Prehofer, Christian; Thomas, Janek; Bischl, Bernd",IEEE Access,10.1109/ACCESS.2021.3071809,,"As modern software-intensive systems become larger, more complex, and more customizable, it is desirable to optimize their functionality by runtime adaptations. However, in most cases it is infeasible to fully model and predict their behavior in advance, which is a classical requirement of runtime self-adaptation. To address this problem, we propose their self-adaptation based on a sequence of online experiments carried out in a production environment. The key idea is to evaluate each experiment by data analysis and determine the next potential experiment via an optimization strategy. The feasibility of the approach is illustrated on a use case devoted to online self-adaptation of traffic navigation where Bayesian optimization, grid search, and local search are employed as the optimization strategies. Furthermore, the cost of the experiments is discussed and three key cost components are examined—time cost, adaptation cost, and endurability cost.",Adaptation models; Automobiles; Experimentation; Large scale integration; Navigation; optimization; Optimization; Routing; Runtime; self-adaptation,Automated Online Experiment-Driven Adaptation–Mechanics and Cost Aspects,x,,,,,,,,,NO,,
S85,1,Forward,conferencePaper,2021,"Bucknall, Alex R.; Fahmy, Suhaib Ahmed",,,https://repository.kaust.edu.sa/handle/10754/666831,"Autonomous systems increasingly rely on on-board computation to avoid the latency overheads of offloading to more powerful remote computing. This requires the integration of hardware accelerators to handle the complex computations demanded by date-intensive sensors. FPGAs offer hardware acceleration with ample flexibility and interfacing capabilities when paired with general purpose processors, with the ability to reconfigure at runtime using partial reconfiguration. Managing dynamic hardware is complex and has been left to designers to address in an ad-hoc manner without first-class integration in autonomous software frameworks. This paper presents an  abstracted runtime for managing adaptation of FPGA accelerators, including partial reconfiguration and parametric changes, that presents as a typical interface used in autonomous software systems. We present a demonstration using the Robot Operating System (ROS), showing negligible latency overhead as a result of the abstraction.",,Runtime Abstraction for Autonomous Adaptive Systems on Reconfigurable Hardware,,,,,x,,,,,NO,,
S86,1,Forward,conferencePaper,2019,"Jamshidi, Pooyan; Cámara, Javier; Schmerl, Bradley; Käestner, Christian; Garlan, David",2019 IEEE/ACM 14th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS),10.1109/SEAMS.2019.00015,,"Modern cyber-physical systems (e.g., robotics systems) are typically composed of physical and software components, the characteristics of which are likely to change over time. Assumptions about parts of the system made at design time may not hold at run time, especially when a system is deployed for long periods (e.g., over decades). Self-adaptation is designed to find reconfigurations of systems to handle such run-time inconsistencies. Planners can be used to find and enact optimal reconfigurations in such an evolving context. However, for systems that are highly configurable, such planning becomes intractable due to the size of the adaptation space. To overcome this challenge, in this paper we explore an approach that (a) uses machine learning to find Pareto-optimal configurations without needing to explore every configuration and (b) restricts the search space to such configurations to make planning tractable. We explore this in the context of robot missions that need to consider task timeliness and energy consumption. An independent evaluation shows that our approach results in high-quality adaptation plans in uncertain and adversarial environments.","Adaptation models; Energy consumption; Machine learning; Machine learning, artificial intelligence, quantitative planning, self-adaptive systems, robotics systems; Planning; Robot sensing systems; Software",Machine Learning Meets Quantitative Planning: Enabling Self-Adaptation in Autonomous Robots,,,,,,,,,,,,
S87,1,Forward,conferencePaper,2018,"Serban, Alexandru Constantin; Poll, Erik; Visser, Joost",2018 IEEE International Conference on Software Architecture Companion (ICSA-C),10.1109/ICSA-C.2018.00040,,"The goal of this paper is to design a functional software architecture for fully autonomous vehicles. Existing literature takes a descriptive approach and presents past experiments with autonomous driving or implementations specific to limited domains (e.g. winning a competition). The architectural solutions are often an after-math of building or evolving an autonomous vehicle and not the result of a clear software development life-cycle. A major issue of this approach is that requirements can not be traced with respect to functional components and several components group most functionality. Therefore, it is often difficult to adopt the proposals. In this paper we take a prescriptive approach starting with requirements from an automotive standard. We use a NIST reference architecture for real-time, intelligent, systems and well established architectural patterns to support the design principles. We further examine the results with respect to the automotive software development life cycle and compliance with automotive safety standards. Lastly, we compare our work with other proposals.",Automation; Autonomous vehicles; Computer architecture; Intelligent vehicles; Proposals; Sensors; Software; Software architecture; Standards,A Standard Driven Software Architecture for Fully Autonomous Vehicles,x,,,,,,,,,NO,,
S88,1,Forward,conferencePaper,2019,"Calinescu, Radu; Cámara, Javier; Paterson, Colin",2019 IEEE/ACM 5th International Workshop on Software Engineering for Smart Cyber-Physical Systems (SEsCPS),10.1109/SEsCPS.2019.00008,,"Almost without exception, cyber-physical systems operate alongside, for the benefit of, and supported by humans. Unsurprisingly, disregarding their social aspects during development and operation renders these systems ineffective. In this paper, we explore approaches to modelling and reasoning about the human involvement in socio-cyber-physical systems (SCPS). To provide an unbiased perspective, we describe both the opportunities afforded by the presence of human agents, and the challenges associated with ensuring that their modelling is sufficiently accurate to support decision making during SCPS development and, if applicable, at run-time. Using SCPS examples from emergency management and assisted living, we illustrate how recent advances in stochastic modelling, analysis and synthesis can be used to exploit human observations about the impact of natural and man-made disasters, and to support the efficient provision of assistive care.",Analytical models; assisted living; assurance; autonomous systems; Computational modeling; emergency management; human in the loop; Reliability; self adaptive systems; Sensors; socio cyber physical systems; stochastic model synthesis; stochastic modelling; Stochastic processes; Task analysis; Uncertainty,"Socio-Cyber-Physical Systems: Models, Opportunities, Open Challenges",,,,,,,,x,,NO,,
S89,1,Forward,conferencePaper,2020,"Malavolta, Ivano; Lewis, Grace; Schmerl, Bradley; Lago, Patricia; Garlan, David",2020 IEEE/ACM 42nd International Conference on Software Engineering: Software Engineering in Practice (ICSE-SEIP),,,"The Robot Operating System (ROS) is the de-facto standard for robotic software. If on one hand ROS is helping roboticists, e.g., by providing a standardized communication platform, on the other hand ROS-based systems are getting larger and more complex and could benefit from good software architecture practices. This paper presents an observational study aimed at (i) unveiling the state-of the-practice for architecting ROS-based systems and (ii) providing guidance to roboticists about how to properly architect ROS-based systems. To achieve these goals, we (i) build a dataset of 335 GitHub repositories containing real open-source ROS-based systems, (ii) mine the repositories for extracting the state of the practice about how roboticists are architecting them, and (iii) synthesize a catalog of 49 evidence-based guidelines for architecting ROS-based systems. The guidelines have been validated by 77 roboticists working on real-world open-source ROS-based systems.",Computer architecture; Data mining; Documentation; Guidelines; Mining Software Repositories; Open source software; Robotics; Robots; Service robots; Software Architecture,How do you Architect your Robots? State of the Practice and Guidelines for ROS-based Systems,,,,,,,,x,,NO,,
S90,1,Forward,journalArticle,2020,"Velez, Miguel; Jamshidi, Pooyan; Sattler, Florian; Siegmund, Norbert; Apel, Sven; Kästner, Christian",Automated Software Engineering,10.1007/s10515-020-00273-8,https://doi.org/10.1007/s10515-020-00273-8,"Stakeholders of configurable systems are often interested in knowing how configuration options influence the performance of a system to facilitate, for example, the debugging and optimization processes of these systems. Several black-box approaches can be used to obtain this information, but they either sample a large number of configurations to make accurate predictions or miss important performance-influencing interactions when sampling few configurations. Furthermore, black-box approaches cannot pinpoint the parts of a system that are responsible for performance differences among configurations. This article proposes ConfigCrusher, a white-box performance analysis that inspects the implementation of a system to guide the performance analysis, exploiting several insights of configurable systems in the process. ConfigCrusher employs a static data-flow analysis to identify how configuration options may influence control-flow statements and instruments code regions, corresponding to these statements, to dynamically analyze the influence of configuration options on the regions’ performance. Our evaluation on 10 configurable systems shows the feasibility of our white-box approach to more efficiently build performance-influence models that are similar to or more accurate than current state of the art approaches. Overall, we showcase the benefits of white-box performance analyses and their potential to outperform black-box approaches and provide additional information for analyzing configurable systems.",,ConfigCrusher: towards white-box performance analysis for configurable systems,x,,,,,,,,,NO,,
S91,1,Forward,journalArticle,2020,"Holtz, Jarrett; Guha, Arjun; Biswas, Joydeep",arXiv:2001.04397 [cs],,http://arxiv.org/abs/2001.04397,"State machines are a common model for robot behaviors. Transition functions often rely on parameterized conditions to model preconditions for the controllers, where the correct values of the parameters depend on factors relating to the environment or the specific robot. In the absence of specific calibration procedures a roboticist must painstakingly adjust the parameters through a series of trial and error experiments. In this process, identifying when the robot has taken an incorrect action, and what should be done is straightforward, but finding the right parameter values can be difficult. We present an alternative approach that we call, interactive SMT-based Robot Transition Repair. During execution we record an execution trace of the transition function, and we ask the roboticist to identify a few instances where the robot has transitioned incorrectly, and what the correct transition should have been. A user supplies these corrections based on the type of error to repair, and an automated analysis of the traces partially evaluates the transition function for each correction. This system of constraints is then formulated as a MaxSMT problem, where the solution is a minimal adjustment to the parameters that satisfies the maximum number of constraints. In order to identify a repair that accurately captures user intentions and generalizes to novel scenarios, solutions are explored by iteratively adding constraints to the MaxSMT problem to yield sets of alternative repairs. We test with state machines from multiple domains including robot soccer and autonomous driving, and we evaluate solver based repair with respect to solver choice and optimization hyperparameters. Our results demonstrate that SRTR can repair a variety of states machines and error types 1) quickly, 2) with small numbers of corrections, while 3) not overcorrecting state machines and harming generalized performance.",Computer Science - Robotics,SMT-based Robot Transition Repair,,,,,x,,,,,NO,,
S92,1,Forward,journalArticle,2020,"Jarrar, Abdessamad; Ait Wakrime, Abderrahim; Balouki, Youssef",Complex Adaptive Systems Modeling,10.1186/s40294-020-0069-7,https://doi.org/10.1186/s40294-020-0069-7,"Complex adaptive systems provide a significant number of concepts such as reaction, interaction, adaptation, and evolution. In general, these concepts are modelled employing different techniques which give an inexplicit vision on the system. Therefore, all concepts must be carefully modelled using the same approach to avoid contradiction and guarantee system homogeneity and correctness. However, developing a computing system that includes all these concepts using the same approach is not an easy task and requires a perfect understanding of the system’s behaviour. In this paper, we contribute as stepwise towards proposing an approach to model the most important concepts of complex adaptive systems while ensuring homogeneity and the correctness of models. For this aim, we present five standard agent-based models formalizing agent properties, reaction, interaction, adaptation, and evolution. These models are adapted to all cases of complex adaptive systems since they include an abstract description of these concepts. To implement our approach formally, we choose the Event-B method due to the strong assurance of bugs’ absence that it guarantees. Besides, it supports horizontal and vertical refinement which facilitates the specification process. Furthermore, the approach of this paper addresses the very abstract level of modelling which expand the use of this approach to other formal methods and tools.",,Formal approach to model complex adaptive computing systems,x,,,,,,,,,NO,,
S93,1,Forward,conferencePaper,2020,"Stevens, Clay; Bagheri, Hamid",2020 IEEE/ACM 42nd International Conference on Software Engineering (ICSE),,,"Self-adaptive systems often employ dynamic programming or similar techniques to select optimal adaptations at run-time. These techniques suffer from the “curse of dimensionality”, increasing the cost of run-time adaptation decisions. We propose a novel approach that improves upon the state-of-the-art proactive self-adaptation techniques to reduce the number of possible adaptations that need be considered for each run-time adaptation decision. The approach, realized in a tool called Thallium, employs a combination of automated formal modeling techniques to (i) analyze a structural model of the system showing which configurations are reachable from other configurations and (ii) compute the utility that can be generated by the optimal adaptation over a bounded horizon in both the best- and worst-case scenarios. It then constructs triangular possibility values using those optimized bounds to automatically compare adjacent adaptations for each configuration, keeping only the alternatives with the best range of potential results. The experimental results corroborate Thallium's ability to significantly reduce the number of states that need to be considered with each adaptation decision, freeing up vital resources at run-time.",Adaptation models; Analytical models; Computational modeling; formal methods; multiobjective optimization; Optimization; run-time adaptation; self-adaptive systems; Software engineering; Thallium; Tools,Reducing Run-Time Adaptation Space via Analysis of Possible Utility Bounds,,,,,x,,,,,NO,,
S94,1,Forward,conferencePaper,2020,"Luo, Yixing; Yu, Yijun; Jin, Zhi; Li, Yao; Ding, Zuohua; Zhou, Yuan; Liu, Yang",2020 IEEE International Conference on Robotics and Automation (ICRA),10.1109/ICRA40945.2020.9197564,,"During flights, an unmanned aerial vehicle (UAV) may not be allowed to move across certain areas due to soft constraints such as privacy restrictions. Current methods on self-adaption focus mostly on motion planning such that the trajectory does not trespass predetermined restricted areas. When the environment is cluttered with uncertain obstacles, however, these motion planning algorithms are not flexible enough to find a trajectory that satisfies additional privacy-preserving requirements within a tight time budget during the flights. In this paper, we propose a privacy risk aware motion planning method through the reconfiguration of privacy-sensitive sensors. It minimises environmental impact by re-configuring the sensor during flight, while still guaranteeing the safety and energy hard constraints such as collision avoidance and timeliness. First, we formulate a model for assessing privacy risks of dynamically detected restricted areas. In case the UAV cannot find a feasible solution to satisfy both hard and soft constraints from the current configuration, our decision making method can then produce an optimal reconfiguration of the privacy-sensitive sensor with a more efficient trajectory. We evaluate the proposal through various simulations with different settings in a virtual environment and also validate the approach through real test flights on DJI Matrice 100 UAV.",Cameras; Planning; Privacy; Safety; Sensors; Trajectory; Unmanned aerial vehicles,Privacy-Aware UAV Flights through Self-Configuring Motion Planning,x,,,,,,,,,NO,,
S95,1,Forward,journalArticle,2021,"Malavolta, Ivano; Lewis, Grace A.; Schmerl, Bradley; Lago, Patricia; Garlan, David",Journal of Systems and Software,10.1016/j.jss.2021.110969,https://www.sciencedirect.com/science/article/pii/S0164121221000662,"Context: The Robot Operating System (ROS) is the de-facto standard for robotics software. However, ROS-based systems are getting larger and more complex and could benefit from good software architecture practices. Goal: We aim at (i) unveiling the state-of-the-practice in terms of targeted quality attributes and architecture documentation in ROS-based systems, and (ii) providing empirically-grounded guidance to roboticists about how to properly architect ROS-based systems. Methods: We designed and conducted an observational study where we (i) built a dataset of 335 GitHub repositories containing real open-source ROS-based systems, and (ii) mined the repositories to extract and synthesize quantitative and qualitative findings about how roboticists are architecting ROS-based systems. Results: First, we extracted an empirically-grounded overview of the state of the practice for architecting and documenting ROS-based systems. Second, we synthesized a catalog of 47 architecting guidelines for ROS-based systems. Third, the extracted guidelines were validated by 119 roboticists working on real-world open-source ROS-based systems. Conclusion: Roboticists can use our architecting guidelines for applying good design principles to develop robots that meet quality requirements, and researchers can use our results as evidence-based indications about how real-world ROS systems are architected today, thus inspiring future research contributions.",Robotics; ROS; Software architecture,Mining guidelines for architecting robotics software,,,,,,,,x,,NO,,
S96,1,Forward,journalArticle,2020,"Corbato, Carlos Hernandez; Bozhinoski, Darko; Oviedo, Mario Garzon; van der Hoorn, Gijs; Garcia, Nadia Hammoudeh; Deshpande, Harshavardhan; Tjerngren, Jon; Wasowski, Andrzej",arXiv:2010.09145 [cs],,http://arxiv.org/abs/2010.09145,"Known attempts to build autonomous robots rely on complex control architectures, often implemented with the Robot Operating System platform (ROS). These architectures need to be dynamically adaptable in order to cope with changing environment conditions, new mission requirements or component failures. The implementation of adaptable architectures is very often ad hoc, quickly gets cumbersome and expensive. We present a structured model-based framework for the adaptation of robot control architectures at run-time to satisfy set quality requirements. We use a formal meta-model to represent the configuration space of control architectures and the corresponding mission requirements. The meta-model is implemented as an OWL ontology with SWRL rules, enabling the use of an off-the-shelf reasoner for diagnostics and adaptation. The method is discussed and evaluated using two case studies of real, ROS-based systems: (i) for an autonomous dual arm mobile manipulator building a pyramid and (ii) a mobile robot navigating in a factory environment.",Computer Science - Robotics; Computer Science - Software Engineering,MROS: Runtime Adaptation For Robot Control Architectures,,,,,x,,,,,NO,,
S97,1,Forward,conferencePaper,2020,"Mao, Xinjun; Huang, Hao; Wang, Shuo",2020 27th Asia-Pacific Software Engineering Conference (APSEC),10.1109/APSEC51365.2020.00018,,"Software engineering for autonomous robot (SE4AR) is an emerging interdisciplinary field with the aims to support the development, running and evolution of software systems for autonomous robot - a safety and mission critical cyber-physical system. Such field has recently gained increasing attentions from both academia and industry and made rapid progresses in the past years. However, many challenges pose on the SE4AR due to the specific features and complexities of autonomous robot software (ARS) and several open problems should be tackled in the future researches. This paper aims to present a comprehensive investigation on the researches and practices of SE4AR. Our contributions are three-fold as follows: an in-depth analysis on the development challenges, a systematic review on the current progresses, and an open discussion of weaknesses in current researches and opportunities in future researches.",autonomous robot software; Autonomous robots; Complexity theory; cyber-physical system; Industries; Service robots; software engineering; Software engineering; Software systems; Systematics,"Software Engineering for Autonomous Robot: Challenges, Progresses and Opportunities",,,,,,,,x,,NO,,
S98,1,Forward,book,2019,"Dehnavi, Saeid; Sedaghatbaf, Ali; Salmani, Bahare; Sirjani, Marjan; Kargahi, Mehdi; Khamespanah, Ehsan",,,,"Robotic technology helps humans in different areas such as manufacturing, health care and education. Due to the ubiquitous revolution, today's focus is on mobile robots and their applications in a variety of cyber-physical systems. There are several powerful robot middlewares, such as ROS and YARP to manage the complexity of robotic software implementation. However, they do not provide support for assuring important properties such as timeliness and safety. We believe that integrating model checking with a robot middleware helps developers design and implement high quality robotic software. By defining a general conceptual model for robotic programs, in this paper we present an integration of Timed Rebeca modeling language (and its model checker) with ROS to automatically synthesize verified ROS-based robotic software. For this integration, first the conceptual model is mapped to a Timed Rebeca model which is used to verify the desired properties on the model. The Timed Rebeca model may be modified several times until the properties are satisfied. Finally, the verified Timed Rebeca model is translated to a ROS program based on a set of mapping rules. Conducting experiments on some small-scale case studies indicate the usefulness and applicability of the proposed integration method.",,ReRebeca : A new framework to design verified ROS-based robotic programs,,,,,x,,,,,NO,,
S99,1,Forward,journalArticle,2020,"Lestingi, Livia; Askarpour, Mehrnoosh; Bersani, Marcello M.; Rossi, Matteo",Electronic Proceedings in Theoretical Computer Science,10.4204/EPTCS.319.2,http://arxiv.org/abs/2007.11738,"Robots are soon going to be deployed in non-industrial environments. Before society can take such a step, it is necessary to endow complex robotic systems with mechanisms that make them reliable enough to operate in situations where the human factor is predominant. This calls for the development of robotic frameworks that can soundly guarantee that a collection of properties are verified at all times during operation. While developing a mission plan, robots should take into account factors such as human physiology. In this paper, we present an example of how a robotic application that involves human interaction can be modeled through hybrid automata, and analyzed by using statistical model-checking. We exploit statistical techniques to determine the probability with which some properties are verified, thus easing the state-space explosion problem. The analysis is performed using the Uppaal tool. In addition, we used Uppaal to run simulations that allowed us to show non-trivial time dynamics that describe the behavior of the real system, including human-related variables. Overall, this process allows developers to gain useful insights into their application and to make decisions about how to improve it to balance efficiency and user satisfaction.",Computer Science - Formal Languages and Automata Theory; Computer Science - Robotics,Statistical Model Checking of Human-Robot Interaction Scenarios,,,,,,,,x,,NO,,
S696,2,forward,conferencePaper,2017,"Wong, Kai Weng; Kress-Gazit, Hadas",2017 First IEEE International Conference on Robotic Computing (IRC),10.1109/IRC.2017.18,,"In this paper we describe a streamlined process for transforming high-level tasks into executable implementations created with the Robot Operating System (ROS). We leverage both the vast availability and functionalities of ROS packages and recent advances in automatically synthesizing provably-correct controllers from high-level specifications. Specifically, we propose a framework for seamless integration of provably-correct controllers with ROS: we automatically detect possible failures related to the mapping between the controller and the ROS nodes connected to the controller, and we automatically provide feedback to the user in the form of suggested changes to the specification when possible faults are detected.",Formal Methods; Linear Temporal Logic (LTL); Monitoring; Operating systems; Process control; Robot kinematics; Robot Mission Planning; Robot Operating System (ROS); Robot sensing systems; Servers,From High-Level Task Specification to Robot Operating System (ROS) Implementation,,,,,,,,,,,YES,
S635,2,forward,conferencePaper,2020,"Fischer-Nielsen, Anders; Fu, Zhoulai; Su, Ting; Wąsowski, Andrzej",2020 IEEE/ACM 42nd International Conference on Software Engineering: Software Engineering in Practice (ICSE-SEIP),,,"A dependency bug is a software fault that manifests itself when accessing an unavailable asset. Dependency bugs are pervasive and we all hate them. This paper presents a case study of dependency bugs in the Robot Operating System (ROS), applying mixed methods: a qualitative investigation of 78 dependency bug reports, a quantitative analysis of 1354 ROS bug reports against 19553 reports in the top 30 GitHub projects, and a design of three dependency linters evaluated on 406 ROS packages.The paper presents a definition and a taxonomy of dependency bugs extracted from data. It describes multiple facets of these bugs and estimates that as many as 15% (!) of all reported bugs are dependency bugs. We show that lightweight tools can find dependency bugs efficiently, although it is challenging to decide which tools to build and difficult to build general tools. We present the research problem to the community, and posit that it should be feasible to eradicate it from software development practice.",bugs; build failures; Computer bugs; empirical software engineering; evolution; integration; Libraries; modularity; Operating systems; Robot kinematics; Robots; ROS; Software development management; Tools,The Forgotten Case of the Dependency Bugs : On the Example of the Robot Operating System,,,,,,,,,,,YES,
S633,2,forward,conferencePaper,2020,"Neto, Tiago; Arrais, Rafael; Sousa, Armando; Santos, André; Veiga, Germano",Robot 2019: Fourth Iberian Robotics Conference,10.1007/978-3-030-35990-4_51,,"Modern industry is shifting towards flexible, advanced robotic systems to meet the increasing demand for custom-made products with low manufacturing costs and to promote a collaborative environment for humans and robots. As a consequence of this industrial revolution, some traditional, mechanical- and hardware-based safety mechanisms are discarded in favour of a safer, more dependable robot software. This work presents a case study of assessing and improving the internal quality of a European research mobile manipulator, operating in a real industrial environment, using modern static analysis tools geared for robotic software. Following an iterative approach, we managed to fix about 90% of the reported issues, resulting in code that is easier to use and maintain.",Mobile manipulator; ROS; Safety; Software static analysis,Applying Software Static Analysis to ROS: The Case Study of the FASTEN European Project,,,,,,,,,,,YES,
S1381,2,bkwd,conferencePaper,2017,"Sharma, Nishant; Elbaum, Sebastian; Detweiler, Carrick",2017 IEEE International Conference on Robotics and Automation (ICRA),10.1109/ICRA.2017.7989240,,"Changes to robotic systems as they are updated or upgraded often affect the flow of control and sensor data. Developers and users spend a significant amount of time tracing the impact of these changes that could otherwise have negative impacts on the robot's performance and behavior. Changes to the rates at which data is published from sensors, controllers, and other parts of the system are particularly subtle and difficult to detect. These rate changes, even if minor (e.g. lowering the frame rate of a camera), can propagate throughout the system and have broad impacts. In this work, we develop and implement an approach to help identify the set of components whose rate may be impacted by a system change. The approach builds on the insight that certain code patterns render component's outgoing data rate independent of the component's incoming data rate. We use that insight to reduce the number of components reported as affected by the change to minimize the number of components that must be reevaluated by the developer. A study of an implementation of the approach on three ROS systems shows that it can reduce the size of the impact set by up to 41% in cases when the changes have broad data impacts. The analysis is performed at compile time and only adds a third more to the compilation time.",Cameras; Publish-subscribe; Publishing; Robot sensing systems; Solids; Tools,Rate impact analysis in robotic systems,,,,,,,,,,,YES,
S1204,2,bkwd,conferencePaper,2017,"Bardaro, Gianluca; Matteucci, Matteo",2017 First IEEE International Conference on Robotic Computing (IRC),10.1109/IRC.2017.59,,"Modern robotic systems are a combination of sophisticated software and hardware components and they offer complex functionalities. While popular middlewares that promote component-level reusability and assist development already exist, there are no established techniques or procedures that use a formal approach to robot system and architecture design yet. This work aims at the long term goal of model-based design and development of complex robot systems (and their software architectures), by surpassing current techniques based on personal expertise, and best practices, in favor of purely model-based approaches. Our contribution tackles the problem from the ground up by proposing a way to model ROS nodes, and robotic architectures in general, using the Architecture Analysis and Design Language (AADL). The result is connected to and based on ROS, but not bound to it. It provides a starting point for the future definition of a general formal framework to describe complex robotic architectures suitable for automatic code generation and system verification.",AADL; Computer architecture; Message systems; Middleware; model-based design; Ports (Computers); Robots; ROS; Unified modeling language,Using AADL to Model and Develop ROS-Based Robotic Application,,?,,,,,,,,,YES,
S999,2,bkwd,conferencePaper,2018,"Mishra, Ruchik; Javed, Arshad","2018 4th International Conference on Control, Automation and Robotics (ICCAR)",10.1109/ICCAR.2018.8384644,,"The substitution of a human factor by an affordable low-cost robotic system has been increasing recently. The reason being, the robot is expected to do less errors than a human does and does not have a will of its own. This paper proposes a service robot platform that is capable of mapping, localizing itself and navigating in an indoor environment and is best suited for structured environment with static obstacles. The approach used for mapping is a ROS package which is a ROS wrapper of Real Time Appearance Based Mapping with the help of a low cost RGB-D camera, the Microsoft Kinect XBOX 360 with a turtlebot robot model for visualization. RTAB-Map takes into account loop closure in real time constraints with a memory management technique which makes the mapping process independent of time and size. Once the mapping is done and the 2D projection of the map is obtained of our real indoor environment of the lab, the simulation of the autonomous navigation of the robot model to the desired location is done on Gazebo. For the navigation to happen successfully, Adaptive Monte Carlo Localization is used for localizing the turtlebot model in the map. The simulation results were visualized using rviz and were found to be satisfactory.",Navigation; Cameras; Robot sensing systems; Peer-to-peer computing; ROS; Three-dimensional displays; indoor navigation; kinect; service robot; turtlebot,ROS based service robot platform,,x,,,,,,,,,NO,
S998,2,bkwd,conferencePaper,2018,"Okumuş, Fatih; Fatih, Adnan",2018 International Conference on Artificial Intelligence and Data Processing (IDAP),10.1109/IDAP.2018.8620865,,"Strengthening the infrastructure of the Internet has made global data access easier and so cloud computing is at the forefront. Cloud technologies are used in the many work area, because they provide big data storage capacity, low computational costs and scalable data management. Cloud robotics, a special form of cloud computing, manages mobile robots with the advantages mentioned above, as well as providing a telepathic agreement mechanism among the robots. This work presents the development of a software platform for managing cloud-based operations such as simultaneous localization and mapping (SLAM), path planning and optimum task distribution for mobile robots. Demonstration software has also been implemented in the study, which provides a simulation environment that allows testing of the developed system. At the end of the study, the cloud software was tested with the demonstration application and the test results were shown.",Cloud computing; Task analysis; Software; Mobile robots; Path planning; SLAM; Cloud robotics; optimum task distribution; path planning; Simultaneous localization and mapping,Exploring the Feasibility of a Multifunctional Software Platform for Cloud Robotics,x,,,,,,,,,,NO,
S997,2,bkwd,conferencePaper,2017,"Abbenseth, Jannik; Lopez, Felipe Garcia; Henkel, Christian; Dörr, Stefan",Proceedings of the Symposium on Applied Computing,10.1145/3019612.3019710,https://doi.org/10.1145/3019612.3019710,"In this paper we address the demand for flexibility and economic efficiency in industrial autonomous guided vehicle (AGV) systems by the use of cloud computing. We propose a cloud-based architecture that moves parts of mapping, localization and path planning tasks to a cloud server. We use a cooperative longterm Simultaneous Localization and Mapping (SLAM) approach which merges environment perception of stationary sensors and mobile robots into a central Holistic Environment Model (HEM). Further, we deploy a hierarchical cooperative path planning approach using Conflict-Based Search (CBS) to find optimal sets of paths which are then provided to the mobile robots. For communication we utilize the Manufacturing Service Bus (MSB) which is a component of the manufacturing cloud platform Virtual Fort Knox (VFK). We demonstrate the feasibility of this approach in a real-life industrial scenario. Additionally, we evaluate the system's communication and the planner for various numbers of agents.",cloud computing; multi-agent systems; cloud robotics; cooperative navigation,Cloud-based cooperative navigation for mobile service robots in dynamic industrial environments,x,,,x,,,,,,,NO,
S996,2,bkwd,conferencePaper,2017,"Singhal, Aniruddha; Pallav, Prasun; Kejriwal, Nishant; Choudhury, Soumyadeep; Kumar, Swagat; Sinha, Rajesh",2017 European Conference on Mobile Robots (ECMR),10.1109/ECMR.2017.8098721,,"In this paper, we provide details of managing a fleet of autonomous mobile robots (AMR) using Rapyuta Cloud Robotics Platform. While the robots are themselves completely autonomous in its motion and obstacle avoidance capability, the target destination for each robot is provided by a global planner which itself may receive goals from an Enterprise Resource Planning (ERP) system. The global planner and the ground vehicles (robots) constitute a multi agent system (MAS) which communicate with each other over a wireless network. The complexities involved, and the corresponding benefits of implementing such a cloud based system is explained by comparing with two other implementations based on the standard distributed computing and communication framework of Robot Operating System (ROS). The working of the complete system is demonstrated through a real world experiment with physical robots in a laboratory setting. Through these implementations, the limitations of the current cloud framework is identified and critical suggestions are made for its improvement which, in turn, forms the future direction for this work.",Cloud computing; Servers; Service robots; Robot Operating System; Operating systems; Fleet Management System; Mobile robots; Cloud Robotics Platform; MAS; Multi-AMR control; Rapyuta,Managing a fleet of autonomous mobile robots (AMR) using cloud robotics platform,,x,,,,,,,,,NO,
S995,2,bkwd,conferencePaper,2018,"Hentout, Abdelfetah; Tiberkak, Allal; Maoudj, Abderraouf; Berkat, Lotfi; Abeb, Abdelkrim",2018 International Conference on Applied Smart Systems (ICASS),10.1109/ICASS.2018.8652034,,"This paper describes the use of the Radio Frequency IDentification (RFID) technology to search for objects (products) by a set of Automated Guided Vehicles (AGV) evolving inside a 2D grid workspace cluttered with static obstacles (warehouse, etc For this aim, a number of RFID tags are deployed in order to be exploited by the robots carrying out their tasks. In addition, an interaction mechanism based on virtual pheromones to control the robots is described. Furthermore, a stigmergic search for objects of interest is presented; this indirect interaction mechanism is used to control the robots moving inside their workspace while spreading and reading pheromones. The simulation results show the effectiveness of the proposed approach and the minimization of the overall number of visited nodes.",Task analysis; Two dimensional displays; Search problems; Robot kinematics; AGV; digital pheromones; RFID tags; RFID-based cyber-physical robotic systems; searching for objects; warehouses,Virtual pheromone-based approach for objects searching in RFID-based cyber-physical robotic systems,x,,,,,,,,,,NO,
S994,2,bkwd,webpage,,,,,https://ieeexplore.ieee.org/abstract/document/8430659/,"This paper proposes a flexible multi-layer and multi-controller architecture for a dynamic navigation in the formation of a group of autonomous vehicles in constrained environments. The main objectives of this architecture are to ensure reliable navigation in the formation of the vehicles and to guarantee the stable and smooth reconfiguration of the fleet shape. A precise review and analysis of the main used leader-follower modeling for the control of a fleet of autonomous vehicles is conducted. After highlighting their advantages and drawbacks, an appropriate leader-follower approach based on deformable shape is proposed. At each sample time, the leader's state (pose and velocity), defined as the main dynamic target, is taken as a reference to guide the overall fleet dynamic. In addition, an analytic formulation of the maximum linear and angular velocities of the leader is proposed in order to guarantee the asymptotic stability of the navigation in formation as well as the fleet reconfiguration phases (between different formation shapes). An important focus of this paper corresponds to the proposition of a reliable strategy for the fleet reconfiguration, according to the environmental context (when, for instance, obstacles are detected). The safety of the fleet is formally demonstrated using an appropriate reconfiguration matrix, which takes into account the vehicles' set-points inter-distances to avoid any inter-vehicles collisions. In addition, an estimation of the formation parameters, according to an authorized minimum distance between the vehicles, is given. Simulations and experiments in different scenarios are performed to demonstrate the flexibility, reliability, and efficiency of the proposed dynamic navigation of a fleet of vehicles in formation.",,Stable and Flexible Multi-Vehicle Navigation Based on Dynamic Inter-Target Distance Matrix,x,,,,,,,,,,NO,
S993,2,bkwd,journalArticle,2019,"Rosenfeld, Avi",Robotica,10.1017/S0263574718001364,https://www.cambridge.org/core/journals/robotica/article/abs/two-adaptive-communication-methods-for-multirobot-collision-avoidance/C4D161990AEDCD0945E940D3B3727D97,"Designers of robotic groups are faced with the formidable task of creating effective coordination architectures that can deal with collisions due to changing environment conditions and hardware failures. Communication between robots is a mechanism that can at times be helpful in such systems, but can also create a time, energy, or computation overhead that reduces performance. In dealing with this issue, different communication schemes have been proposed ranging from those without any explicit communication, localized algorithms, and centralized or global communicative methods. Finding the optimal communication act is typically an intractable problem in real-world problems. As a result, we argue that at times group designers should use computationally bounded team communication approaches. We propose two such approaches: an algorithm selection approach to communication whereby robots choose between a known group of communication schemes and a parameterized communication framework whereby robots can reason about how large a communication radius is needed for a given problem. Both solutions use a novel coordination cost measure, combined coordination costs, to find the appropriate level of communication within such groups. Robots can then use this measure to create adaptive communication approaches that select between communication approaches as needed during task execution. We validated this approach through conducting extensive experiments in a canonical robotic foraging domain and found that robotic groups using these adaptive methods were able to significantly increase their productivity compared to teams that used only one type of communication scheme.",Navigation; Collision avoidance; Multi-robot systems; Control of robotic systems; Robot dynamics,Two Adaptive Communication Methods for Multi-Robot Collision Avoidance,x,,,x,,,,,,,NO,
S992,2,bkwd,conferencePaper,2018,"Fellan, Amina; Schellenberger, Christian; Zimmermann, Marc; Schotten, Hans D.",2018 International Conference on Information and Communication Technology Convergence (ICTC),10.1109/ICTC.2018.8539695,,"Within the context of Industry 4.0, mobile robot systems such as automated guided vehicles (AGVs) and unmanned aerial vehicles (UAVs) are one of the major areas challenging current communication and localization technologies. Due to stringent requirements on latency and reliability, several of the existing solutions are not capable of meeting the performance required by industrial automation applications. Additionally, the disparity in types and applications of unmanned vehicle (UV) calls for more flexible communication technologies in order to address their specific requirements. In this paper, we propose several use cases for UVs within the context of Industry 4.0 and consider their respective requirements. We also identify wireless technologies that support the deployment of UVs as envisioned in Industry 4.0 scenarios.",Automation; Industries; Wireless communication; Reliability; 5G; Long Term Evolution; UAV; AGV; Industry 4.0; Production facilities; factory automation,Enabling Communication Technologies for Automated Unmanned Vehicles in Industry 4.0,x,,,,,,,,,,NO,
S990,2,bkwd,bookSection,2017,"White, Ruffin; Christensen, Henrik",Robot Operating System (ROS): The Complete Reference  (Volume 2),,https://doi.org/10.1007/978-3-319-54927-9_9,"In this tutorial chapter we’ll cover the growing intersection between ROS and Docker, showcasing new development tools and strategies to advance robotic software design and deployment within a ROS/Gazebo context by utilizing advances in Linux containers. Tutorial examples here will focus on robotics software development for education, research, and industry, specifically: constructing repeatable and reproducible environments, leveraging software defined networking, as well as running and shipping portable ROS applications.",Distributed computing; Docker; ROS; Node networking; Portable deployment; Repeatability; Reproducibility,ROS and Docker,,x,,x,,,,,,,NO,
S989,2,bkwd,book,2004,"Hamill, Paul",,,,"Unit test frameworks are a key element of popular development methodologies such as eXtreme Programming (XP) and Agile Development. But unit testing has moved far beyond eXtreme Programming; it is now common in many different types of application development. Unit tests help ensure low-level code correctness, reduce software development cycle time, improve developer productivity, and produce more robust software.Until now, there was little documentation available on unit testing, and most sources addressed specific frameworks and specific languages, rather than explaining the use of unit testing as a language-independent, standalone development methodology. This invaluable new book covers the theory and background of unit test frameworks, offers step-by-step instruction in basic unit test development, provides useful code examples in both Java and C++, and includes details on some of the most commonly used frameworks today from the XUnit family, including JUnit for Java, CppUnit for C++, and NUnit for .NET.Unit Test Frameworks includes clear, concise, and detailed descriptions of:The theory and design of unit test frameworksExamples of unit tests and frameworksDifferent types of unit testsPopular unit test frameworksAnd moreIt also includes the complete source code for CppUnit for C++, and NUnit for .NET.",Computers / Computer Engineering; Computers / Computer Science; Computers / Software Development & Engineering / General; Computers / Languages / General; Computers / Programming / General; Computers / Programming / Algorithms; Computers / Languages / Java; Computers / Programming / Object Oriented; Computers / Languages / C; Computers / Languages / C#,Unit Test Frameworks: Tools for High-Quality Software Development,x,,,x,,,,,,,NO,
S988,2,bkwd,journalArticle,2016,"Qiu, Dong; Li, Bixin; Leung, Hareton",Information and Software Technology,10.1016/j.infsof.2016.01.011,https://www.sciencedirect.com/science/article/pii/S0950584916300027,"Context Application Programming Interfaces (APIs) facilitate the use of programming languages. They define sets of rules and specifications for software programs to interact with. The design of language API is usually artistic, driven by aesthetic concerns and the intuitions of language architects. Despite recent studies on limited scope of API usage, there is a lack of comprehensive, quantitative analyses that explore and seek to understand how real-world source code uses language APIs. Objective This study aims to understand how APIs are employed in practical development and explore their potential applications based on the results of API usage analysis. Method We conduct a large-scale, comprehensive, empirical analysis of the actual usage of APIs on Java, a modern, mature, and widely-used programming language. Our corpus contains over 5000 open-source Java projects, totaling 150 million source lines of code (SLoC). We study the usage of both core (official) API library and third-party (unofficial) API libraries. We resolve project dependencies automatically, generate accurate resolved abstract syntax trees (ASTs), capture used API entities from over 1.5 million ASTs, and measure the usage based on our defined metrics: frequency, popularity and coverage. Results Our study provides detailed quantitative information and yield insight, particularly, (1) confirms the conventional wisdom that the usage of APIs obeys Zipf distribution; (2) demonstrates that core API is not fully used (many classes, methods and fields have never been used); (3) discovers that deprecated API entities (in which some were deprecated long ago) are still widely used; (4) evaluates that the use of current compact profiles is under-utilized; (5) identifies API library coldspots and hotspots. Conclusions Our findings are suggestive of potential applications across language API design, optimization and restriction, API education, library recommendation and compact profile construction.",Java; Empirical study; API usage,Understanding the API usage in Java,X,,,,,,,,,,NO,
S987,2,bkwd,document,,"Cslife, Kent Beck; Gamma, Erich; Zürich, Oti",,,,"Testing is not closely integrated with development. This prevents you from measuring the progress of development- you can’t tell when something starts working or when something stops working. Using JUnit you can cheaply and incrementally build a test suite that will help you measure your progress, spot",,Contents The Problem Example Cookbook,x,,,,,,,,,,NO,
S986,2,bkwd,journalArticle,2005,"Erdogmus, H.; Morisio, M.; Torchiano, M.",IEEE Transactions on Software Engineering,10.1109/TSE.2005.37,,"Test-driven development (TDD) is based on formalizing a piece of functionality as a test, implementing the functionality such that the test passes, and iterating the process. This paper describes a controlled experiment for evaluating an important aspect of TDD: in TDD, programmers write functional tests before the corresponding implementation code. The experiment was conducted with undergraduate students. While the experiment group applied a test-first strategy, the control group applied a more conventional development technique, writing tests after the implementation. Both groups followed an incremental process, adding new features one at a time and regression testing them. We found that test-first students on average wrote more tests and, in turn, students who wrote more tests tended to be more productive. We also observed that the minimum quality increased linearly with the number of programmer tests, independent of the development strategy employed.",Debugging; Feedback; Quality assurance; Software testing; testing strategies; Productivity; Computer Society; Software quality; Writing; Functional programming; Programming profession; coding tools and techniques; Index Terms- General programming techniques; productivity; programming paradigms.; software engineering process; Software Quality/SQA; testing and debugging,On the effectiveness of the test-first approach to programming,x,,,x,,,,,,,NO,
S985,2,bkwd,book,2011,"Adzic, Gojko",,,,"Summary Specification by Example is an emerging practice for creating software based on realistic examples, bridging the communication gap between business stakeholders and the dev teams building the software. In this book, author Gojko Adzic distills interviews with successful teams worldwide, sharing how they specify, develop, and deliver software, without defects, in short iterative delivery cycles.  About the Technology Specification by Example is a collaborative method for specifying requirements and tests. Seven patterns, fully explored in this book, are key to making the method effective. The method has four main benefits: it produces living, reliable documentation; it defines expectations clearly and makes validation efficient; it reduces rework; and, above all, it assures delivery teams and business stakeholders that the software that's built is right for its purpose.  About the Book This book distills from the experience of leading teams worldwide effective ways to specify, test, and deliver software in short, iterative delivery cycles. Case studies in this book range from small web startups to large financial institutions, working in many processes including XP, Scrum, and Kanban.  This book is written for developers, testers, analysts, and business people working together to build great software.  Purchase of the print book comes with an offer of a free PDF, ePub, and Kindle eBook from Manning. Also available is all code from the book.  What's Inside  Common process patterns How to avoid bad practices Fitting SBE in your process 50+ case studies  =============================================== Table of Contents Part 1 Getting started Part 2 Key process patterns Part 3 Case studies  Key benefits Key process patterns Living documentation Initiating the changes Deriving scope from goals Specifying collaboratively Illustrating using examples Refining the specification Automating validation without changing specifications Validating frequently Evolving a documentation system uSwitch RainStor Iowa Student Loan Sabre Airline Solutions ePlan Services Songkick Concluding thoughts",Computers / Software Development & Engineering / General; Computers / Software Development & Engineering / Systems Analysis & Design; Computers / Software Development & Engineering / Project Management; Computers / Software Development & Engineering / Quality Assurance & Testing; Computers / Software Development & Engineering / Tools,Specification by Example: How Successful Teams Deliver the Right Software,x,,,,,,,,,,NO,
S984,2,bkwd,conferencePaper,2011,"Solis, Carlos; Wang, Xiaofeng",2011 37th EUROMICRO Conference on Software Engineering and Advanced Applications,10.1109/SEAA.2011.76,,"Behaviour Driven Development (BDD) has gained increasing attention as an agile development approach in recent years. However, characteristics that constitute the BDD approach are not clearly defined. In this paper, we present a set of main BDD characteristics identified through an analysis of relevant literature and current BDD toolkits. Our study can provide a basis for understanding BDD, as well as for extending the exisiting BDD toolkits or developing new ones.",Programming; Boolean functions; Data structures; Software; Testing; Context; Business; Automated Acceptance Testing; Behaviour Driven Development; Test Driven Development; Ubiquitous Language,A Study of the Characteristics of Behaviour Driven Development,x,,,,,,,,,,NO,
S983,2,bkwd,book,2003,"Beck, Kent",,,,"Clean code that works--now. This is the seeming contradiction that lies behind much of the pain of programming. Test-driven development replies to this contradiction with a paradox--test the program before you write it. A new idea? Not at all. Since the dawn of computing, programmers have been specifying the inputs and outputs before programming precisely. Test-driven development takes this age-old idea, mixes it with modern languages and programming environments, and cooks up a tasty stew guaranteed to satisfy your appetite for clean code that works--now. Developers face complex programming challenges every day, yet they are not always readily prepared to determine the best solution. More often than not, such difficult projects generate a great deal of stress and bad code. To garner the strength and courage needed to surmount seemingly Herculean tasks, programmers should look to test-driven development (TDD), a proven set of techniques that encourage simple designs and test suites that inspire confidence.  By driving development with automated tests and then eliminating duplication, any developer can write reliable, bug-free code no matter what its level of complexity. Moreover, TDD encourages programmers to learn quickly, communicate more clearly, and seek out constructive feedback.  Readers will learn to:  Solve complicated tasks, beginning with the simple and proceeding to the more complex.  Write automated tests before coding.   Grow a design organically by refactoring to add design decisions one at a time.  Create tests for more complicated logic, including reflection and exceptions.  Use patterns to decide what tests to write.  Create tests using xUnit, the architecture at the heart of many programmer-oriented testing tools. This book follows two TDD projects from start to finish, illustrating techniques programmers can use to easily and dramatically increase the quality of their work. The examples are followed by references to the featured TDD patterns and refactorings. With its emphasis on agile methods and fast development strategies, Test-Driven Development is sure to inspire readers to embrace these under-utilized but powerful techniques.  0321146530B10172002",Computers / Software Development & Engineering / General,Test-driven Development: By Example,x,,,x,,,,,,,NO,
S982,2,bkwd,conferencePaper,2018,"Santos, André; Cunha, Alcino; Macedo, Nuno","Proceedings of the 9th ACM SIGSOFT International Workshop on Automating TEST Case Design, Selection, and Evaluation",10.1145/3278186.3278195,https://doi.org/10.1145/3278186.3278195,"The Robot Operating System (ROS) is an open source framework for the development of robotic software, in which a typical system consists of multiple processes communicating under a publisher-subscriber architecture. A great deal of development time goes into orchestration and making sure that the communication interfaces comply with the expected contracts (e.g. receiving a message leads to the publication of another message). Orchestration mistakes are only detected during runtime, stressing the importance of component and integration testing in the verification process. Property-based Testing is fitting in this context, since it is based on the specification of contracts and treats tested components as black boxes, but there is no support for it in ROS. In this paper, we present a first approach towards automatic generation of test scripts for property-based testing of various configurations of a ROS system.",Robot Operating System; Property-based Testing; Software Testing; Test Automation,Property-based testing for the robot operating system,,,,x,,,,,,,NO,
S981,2,bkwd,conferencePaper,2014,"Bihlmaier, Andreas; Wörn, Heinz","Simulation, Modeling, and Programming for Autonomous Robots",10.1007/978-3-319-11900-7_22,,"We introduce Robot Unit Testing (RUT) as a methodology to bring modern testing methods into robotics. Through RUT the range of robotics software that can be automatically tested is extended beyond current practice. A robotics simulator is used to bridge the gap between well automated tests that only check a robot’s software and time consuming, inherently manual tests on robots of alloy and circuits. An in-depth realization of RUT is shown, which is based on the Robot Operating System (ROS) framework and the Gazebo simulator due to their prominence in robotics research and inherent suitability for the RUT methodology.",,Robot Unit Testing,,,,,,,,x,,,NO,
S980,2,bkwd,conferencePaper,2006,"Michlmayr, A.; Fenkam, P.; Dustdar, S.",26th IEEE International Conference on Distributed Computing Systems Workshops (ICDCSW'06),10.1109/ICDCSW.2006.103,,"Testing remains the most applied verification method for software systems. Typically, the behavior of such systems is evaluated against their informal or formal specifications. In this paper, we consider an architecture-driven approach to software testing. We support the argument that, in many cases, the difficulties in testing can be alleviated by optimizing the test methodology to leverage the architecture of the application under test. To support this claim, we present a test framework for publish/subscribe applications. This paper evaluates our initial steps in this regard. We focus on the design of our framework, and illustrate how to accomplish unit testing of publish/subscribe applications against LTL specifications, considering a real-world application as example.",Computer architecture; Automatic testing; System testing; Application software; Java; Software systems; Software testing; Software quality; Formal specifications; Optimization methods,Specification-Based Unit Testing of Publish/Subscribe Applications,x,,,x,,,,,,,NO,
S979,2,bkwd,conferencePaper,2006,"Michlmayr, Anton; Fenkam, Pascal; Dustdar, Schahram",30th Annual International Computer Software and Applications Conference (COMPSAC'06),10.1109/COMPSAC.2006.28,,"The publish/subscribe style is an emerging paradigm for the construction of loosely coupled systems. Yet, the verification of such systems remains difficult. We have constructed a framework called RAY for testing publish/subscribe applications. This framework is implemented as an Eclipse plug-in. In this paper, we present the detailed architecture of RAY, as well as the interaction with its supporting components. In addition to the presented architecture for a testing framework for publish/subscribe applications, the contribution of this paper includes the experience gained during the development of this framework",Computer architecture; System testing; Application software; Java; Software systems; Software testing; Logic; Computer applications; Specification languages; Subscriptions,Architecting a Testing Framework for Publish/Subscribe Applications,x,,,x,,,,,,,NO,
S978,2,bkwd,webpage,2010,"Piel, Éric; González, Alberto; Gross, Hans-Gerhard",Principles and Applications of Distributed Event-Based Systems,,https://www.igi-global.com/chapter/automating-integration-testing-large-scale/www.igi-global.com/chapter/automating-integration-testing-large-scale/44399,Publish/subscribe systems are event-based systems separated into several components which publish and subscribe events that correspond to data types. Testing each component individually is not sufficient for testing the whole system; it also requires testing the integration of those components toget...,,Automating Integration Testing of Large-Scale Publish/Subscribe Systems,x,,,,,,,,,,NO,
S975,2,bkwd,book,2004,"Evans, Eric; Evans, Eric J.",,,,"""Eric Evans has written a fantastic book on how you can make the design of your software match your mental model of the problem domain you are addressing.  ""His book is very compatible with XP. It is not about drawing pictures of a domain; it is about how you think of it, the language you use to talk about it, and how you organize your software to reflect your improving understanding of it. Eric thinks that learning about your problem domain is as likely to happen at the end of your project as at the beginning, and so refactoring is a big part of his technique.  ""The book is a fun read. Eric has lots of interesting stories, and he has a way with words. I see this book as essential reading for software developers--it is a future classic.""  --Ralph Johnson, author of Design Patterns  ""If you don't think you are getting value from your investment in object-oriented programming, this book will tell you what you've forgotten to do. ""Eric Evans convincingly argues for the importance of domain modeling as the central focus of development and provides a solid framework and set of techniques for accomplishing it. This is timeless wisdom, and will hold up long after the methodologies du jour have gone out of fashion.""  --Dave Collins, author of Designing Object-Oriented User Interfaces   ""Eric weaves real-world experience modeling--and building--business applications into a practical, useful book. Written from the perspective of a trusted practitioner, Eric's descriptions of ubiquitous language, the benefits of sharing models with users, object life-cycle management, logical and physical application structuring, and the process and results of deep refactoring are major contributions to our field.""  --Luke Hohmann, author of Beyond Software Architecture   ""This book belongs on the shelf of every thoughtful software developer."" --Kent Beck  ""What Eric has managed to capture is a part of the design process that experienced object designers have always used, but that we have been singularly unsuccessful as a group in conveying to the rest of the industry. We've given away bits and pieces of this knowledge...but we've never organized and systematized the principles of building domain logic. This book is important."" --Kyle Brown, author of Enterprise Java(TM) Programming with IBM(R) WebSphere(R)  The software development community widely acknowledges that domain modeling is central to software design. Through domain models, software developers are able to express rich functionality and translate it into a software implementation that truly serves the needs of its users. But despite its obvious importance, there are few practical resources that explain how to incorporate effective domain modeling into the software development process.  Domain-Driven Design fills that need. This is not a book about specific technologies. It offers readers a systematic approach to domain-driven design, presenting an extensive set of design best practices, experience-based techniques, and fundamental principles that facilitate the development of software projects facing complex domains. Intertwining design and development practice, this book incorporates numerous examples based on actual projects to illustrate the application of domain-driven design to real-world software development.  Readers learn how to use a domain model to make a complex development effort more focused and dynamic. A core of best practices and standard patterns provides a common language for the development team. A shift in emphasis--refactoring not just the code but the model underlying the code--in combination with the frequent iterations of Agile development leads to deeper insight into domains and enhanced communication between domain expert and programmer. Domain-Driven Design then builds on this foundation, and addresses modeling and design for complex systems and larger organizations.Specific topics covered include:   Getting all team members to speak the same language Connecting model and implementation more deeply Sharpening key distinctions in a model Managing the lifecycle of a domain object  Writing domain code that is safe to combine in elaborate ways Making complex code obvious and predictable Formulating a domain vision statement  Distilling the core of a complex domain Digging out implicit concepts needed in the model  Applying analysis patterns  Relating design patterns to the model  Maintaining model integrity in a large system Dealing with coexisting models on the same project Organizing systems with large-scale structures Recognizing and responding to modeling breakthroughs  With this book in hand, object-oriented developers, system analysts, and designers will have the guidance they need to organize and focus their work, create rich and useful domain models, and leverage those models into quality, long-lasting software implementations.",Computers / Software Development & Engineering / General; Computers / Programming / Object Oriented; Computers / Software Development & Engineering / Systems Analysis & Design,Domain-driven Design: Tackling Complexity in the Heart of Software,x,,,,,,,,,,NO,
S974,2,bkwd,conferencePaper,2000,"Coste-Maniere, E.; Simmons, R.",Proceedings 2000 ICRA. Millennium Conference. IEEE International Conference on Robotics and Automation. Symposia Proceedings (Cat. No.00CH37065),10.1109/ROBOT.2000.844041,,"Architectures form the backbone of complete robotic systems. The right choice of architecture can go a long way in facilitating the specification, implementation and validation of robotic systems. Conversely, of course, the wrong choice can make one's life miserable. We present some of the needs of robotic systems, describe some general classes of robot architectures, and discuss how different architectural styles can help in addressing those needs. The paper, like the field itself, is somewhat preliminary, yet it is hoped that it will provide guidance for those who use, or develop, robot architectures.",Computer architecture; Application software; Navigation; Surges; World Wide Web; Robot kinematics; Medical robotics; Remotely operated vehicles; Road vehicles; Spine,"Architecture, the backbone of robotic systems",x,,,,,,,,,,NO,
S972,2,bkwd,conferencePaper,2014,"Bubeck, Alexander; Weisshardt, Florian; Verl, Alexander",ISR/Robotik 2014; 41st International Symposium on Robotics,,,Software integration is still a challenging and time consuming task and therefore a major part of the development of industrial and domestic service robot applications. The presented toolchain BRIDE is able to streamline this process by the separation of user roles and the separation of developer concerns of software components to ensure a frame-work independent implementation. The impact of the BRIDE toolchain in the development process is demonstrated in a case study on the SyncMM mobile manipulation control framework.,,BRIDE - A toolchain for framework-independent development of industrial service robot applications,x,,,x,,,,,,,NO,
S971,2,bkwd,conferencePaper,2019,"Hammoudeh Garcia, Nadia; Lüdtke, Mathias; Kortik, Sitar; Kahl, Björn; Bordignon, Mirko",2019 Third IEEE International Conference on Robotic Computing (IRC),10.1109/IRC.2019.00060,,"Ten years after its first release, the Robot Operating System (ROS) is arguably the most popular software framework used to program robots. It achieved such status despite its shortcomings compared to alternatives similarly centered on manual programming and, perhaps surprisingly, to model-driven engineering (MDE) approaches. Based on our experience as users and developers of both ROS and MDE tools, we identified possible ways to leverage the accessibility of ROS and its large software ecosystem, while providing quality assurance measures through selected MDE techniques. After describing our vision on how to combine MDE and manually written code, we present the first technical contribution in this pursuit: a family of three metamodels to respectively model ROS nodes, communication interfaces, and systems composed from subsystems. Such metamodels can be used, through the accompanying Eclipse-based tooling made publicly available, to model ROS systems of arbitrary complexity and generate with correctness guarantees the software artifacts for their composition and deployment. Furthermore, they account for specifications on these aspects by the Object Management Group (OMG), in order to be amenable to hybrid systems coupling ROS and other frameworks. We also report on our experience with a large and complex corpus of ROS software used in a commercially deployed robot (the Care-O-bot 4), to explain the rationale of the presented work, including the shortcomings of standard ROS tools and of previous efforts on ROS modeling.",Software; Manuals; Robot sensing systems; Tools; Robot kinematics; Service robots; ROS; development environments; models,Bootstrapping MDE Development from ROS Manual Code - Part 1: Metamodeling,,,,x,,,,,x,,NO,
S970,2,bkwd,conferencePaper,2013,"Bruyninckx, Herman; Klotzbücher, Markus; Hochgeschwender, Nico; Kraetzschmar, Gerhard; Gherardi, Luca; Brugali, Davide",Proceedings of the 28th Annual ACM Symposium on Applied Computing,10.1145/2480362.2480693,https://doi.org/10.1145/2480362.2480693,"Because robotic systems get more complex all the time, developers around the world have, during the last decade, created component-based software frameworks (Orocos, Open-RTM, ROS, OPRoS, SmartSoft) to support the development and reuse of ""large grained"" pieces of robotics software. This paper introduces the BRICS Component Model (BCM) to provide robotics developers with a set of guidelines, metamodels and tools for structuring as much as possible the development of, both, individual components and component-based architectures, using one or more of the aforementioned software frameworks at the same time, without introducing any framework- or application-specific details. The BCM is built upon two complementary paradigms: the ""5Cs"" (separation of concerns between the development aspects of Computation, Communication, Coordination, Configuration and Composition) and the meta-modeling approach from Model-Driven Engineering.",robotics; component models; reusable software; software architectures,The BRICS component model: a model-based development paradigm for complex robotics software systems,x,,,x,,,,,,,NO,
S969,2,bkwd,conferencePaper,1999,"Schlegel, C.; Worz, R.",Proceedings 1999 IEEE/RSJ International Conference on Intelligent Robots and Systems. Human and Environment Friendly Robots with High Intelligence and Emotional Quotients (Cat. No.99CH36289),10.1109/IROS.1999.811709,,"Presents the software framework SMARTSOFT to implement sensorimotor systems. SMARTSOFT not only contains software components to support a modularized implementation but also structural rules and templates. These ensure that the implementation of modules is conforming with an overall multilayer system architecture. Since the provided structures allow the exact specification of the external behavior of modules in terms of interfaces and dependencies, the interaction with a symbolic task execution layer is explicitly supported. SMARTSOFT significantly eases the implementation and integration of new modules into a complex sensorimotor system which for example provides the opportunity even to compare and reuse different modules on a mobile platform. SMARTSOFT has already proven its usefulness within the collaborative research center (SFB 527) ""Integration of Symbolic and Subsymbolic Information Processing in Adaptive Sensorimotor Systems"".",Computer architecture; Software systems; Adaptive systems; Object oriented modeling; Information processing; Middleware; Robots; Software design; Design methodology; Object oriented programming,The software framework SMARTSOFT for implementing sensorimotor systems,x,,,,,,,,,,NO,
S968,2,bkwd,conferencePaper,2001,"Bruyninckx, H.",Proceedings 2001 ICRA. IEEE International Conference on Robotics and Automation (Cat. No.01CH37164),10.1109/ROBOT.2001.933002,,"This paper introduces the OROCOS project that aims at becoming a general-purpose and open robot control software package. OROCOS follows the open source development model that has been proven to work in many other general-purpose software packages, such as Linux, Apache, Perl or LATEX. The paper focuses on the long-term vision of this start-up project, motivates which strategic and innovative design decisions are to be taken (a CORBA-like component architecture being the most important one), and lists other projects on which OROCOS could build. The success of OROCOS depends critically on how many researchers and engineers can be motivated to contribute code, documentation and feedback to the project.",Linux; Computer industry; Communication standards; Consumer electronics; Open source software; Service robots; Software packages; Robot control; Industrial electronics; Manufacturing industries,Open robot control software: the OROCOS project,x,,,,,,,,,,NO,
S967,2,bkwd,conferencePaper,2005,"Baillie, J.-C.",2005 IEEE/RSJ International Conference on Intelligent Robots and Systems,10.1109/IROS.2005.1545467,,"The growing diversity and complexity of existing robotic devices like humanoids, animal-like robots or wheeled robots, lead to the development of several incompatible software interfaces to control these robots. We believe that there is a need for a standard which could be universal, powerful and easy to use. The open source project URBI, a universal robotic body interface, aims at providing the ground for such a standard. It is based on a client/server architecture where the server is running on the robot and accessed by the client, on the robot or remotely via TCP/IP. The URBI language is a scripted language used by the client and capable of controlling the joints of the robot or access its sensors, camera, speakers or any accessible part of the machine. We present in this article an introduction to URBI and we describe how URBI differs from currently existing solutions. As an example making use of URBI-specific features, we present a simple perturbative approach to walk pattern generation, with URBI running on a ERS7 Aibo robot.",Humanoid robots; TCPIP; Cameras; Robot sensing systems; Open source software; Natural languages; Computer languages; Robot control; Mobile robots; Robot vision systems; Aibo; Control Architecture and Programming; Human-Robot Interfaces; Programming Language; Standard,URBI: towards a universal robotic low-level programming language,x,,,,,,,,,,NO,
S966,2,bkwd,conferencePaper,2012,"Dhouib, Saadia; Kchir, Selma; Stinckwich, Serge; Ziadi, Tewfik; Ziane, Mikal","Simulation, Modeling, and Programming for Autonomous Robots",10.1007/978-3-642-34327-8_16,,"A large number of robotic software have been developed but cannot or can hardly interoperate with each other because of their dependencies on specific hardware or software platform is hard-wired into the code. Consequently, robotic software is hard and expensive to develop because there is little opportunity of reuse and because low-level details must be taken into account in early phases. Moreover, robotic experts can hardly develop their application without programming knowledge or the help of programming experts and robotic software is difficult to adapt to hardware or target-platform changes. In this paper we report on the development of RobotML, a Robotic Modeling Language that eases the design of robotic applications, their simulation and their deployment to multiple target execution platforms.",MDE; Domain-Specific Languages; Generative Programming; robotic application,"RobotML, a Domain-Specific Language to Design, Simulate and Deploy Robotic Applications",x,,,,,,,,,,NO,
S965,2,bkwd,conferencePaper,2018,"Santos, André; Cunha, Alcino; Macedo, Nuno","Proceedings of the 9th ACM SIGSOFT International Workshop on Automating TEST Case Design, Selection, and Evaluation",10.1145/3278186.3278195,https://doi.org/10.1145/3278186.3278195,"The Robot Operating System (ROS) is an open source framework for the development of robotic software, in which a typical system consists of multiple processes communicating under a publisher-subscriber architecture. A great deal of development time goes into orchestration and making sure that the communication interfaces comply with the expected contracts (e.g. receiving a message leads to the publication of another message). Orchestration mistakes are only detected during runtime, stressing the importance of component and integration testing in the verification process. Property-based Testing is fitting in this context, since it is based on the specification of contracts and treats tested components as black boxes, but there is no support for it in ROS. In this paper, we present a first approach towards automatic generation of test scripts for property-based testing of various configurations of a ROS system.",Robot Operating System; Property-based Testing; Software Testing; Test Automation,Property-based testing for the robot operating system,,,,,,,,,x,,NO,
S964,2,bkwd,conferencePaper,2016,"Santos, André; Cunha, Alcino; Macedo, Nuno; Lourenço, Cláudio",2016 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS.2016.7759661,,"Robots are being increasingly used in safety-critical contexts, such as transportation and health. The need for flexible behavior in these contexts, due to human interaction factors or unstructured operating environments, led to a transition from hardware- to software-based safety mechanisms in robotic systems, whose reliability and quality is imperative to guarantee. Source code static analysis is a key component in formal software verification. It consists on inspecting code, often using automated tools, to determine a set of relevant properties that are known to influence the occurrence of defects in the final product. This paper presents HAROS, a generic, plug-in-driven, framework to evaluate code quality, through static analysis, in the context of the Robot Operating System (ROS), one of the most widely used robotic middleware. This tool (equipped with plug-ins for computing metrics and conformance to coding standards) was applied to several publicly available ROS repositories, whose results are also reported in the paper, thus providing a first overview of the internal quality of the software being developed in this community.",Standards; Software; Measurement; Context; Service robots; Safety,A framework for quality assessment of ROS repositories,,,,,,,,,x,,NO,
S963,2,bkwd,conferencePaper,2018,"Alami, Adam; Dittrich, Yvonne; Wasowski, Andrzej",2018 IEEE/ACM 11th International Workshop on Cooperative and Human Aspects of Software Engineering (CHASE),,,"ROS (Robot Operating System) is an open source community in robotics that is developing standard robotics operating system facilities such as hardware abstraction, low-level device control, communication middleware, and a wide range of software components for robotics functionality. This paper studies the quality assurance practices of the ROS community. We use qualitative methods to understand how ideology, priorities of the community, culture, sustainability, complexity, and adaptability of the community affect the implementation of quality assurance practices. Our analysis suggests that software engineering practices require social and cultural alignment and adaptation to the community particularities to achieve seamless implementation in open source environments. This alignment should be incorporated into the design and implementation of quality assurance practices in open source communities.",Software engineering; Standards; Software; Computer bugs; Quality assurance; Testing; Sustainable development; Open Source Software; OSS Community; Quality Assurance,Influencers of Quality Assurance in an Open Source Community,x,,,,,,,,,,NO,
S962,2,bkwd,conferencePaper,2016,"Hua, Yingbing; Zander, Stefan; Bordignon, Mirko; Hein, Björn",2016 IEEE 21st International Conference on Emerging Technologies and Factory Automation (ETFA),10.1109/ETFA.2016.7733579,,"One of the major investment for applying industrial robots in production resides in the software development, which is an interdisciplinary and heterogeneous engineering process. This paper presents a novel model-driven approach that uses AutomationML as modeling framework and ontological reasoning as inference framework for constructing robotic application using Robot Operating System (ROS). We show how different robotic components can be classified and modeled with AutomationML, how these components can be composed together to a production system, and how the AutomationML models can be processed semantically by utilizing Semantic Web technologies and ontological reasoning. By applying model-to-text transformation techniques, executable ROS code can be generated from the models that foster fast prototyping and the reuse of robotic software.",Software; Ontologies; Semantics; Automation; Unified modeling language; Service robots,From AutomationML to ROS: A model-driven approach for software engineering of industrial robotics using ontological reasoning,,,,x,,,,,x,,NO,
S961,2,bkwd,journalArticle,2017,"Zhang, L.; Merrifield, R.; Deguet, A.; Yang, G.-Z.",,10.1126/scirobotics.aar1868,http://spiral.imperial.ac.uk/handle/10044/1/63072,"From space robot challenges to autonomous driving, industrial assembly, and surgery, the mission of Robot Operating System (ROS) (1) is to power the world’s robots. The open-source robotics middleware (rather than an operating system, as its name suggests) was initially developed 10 years ago on the basis of work at the Stanford Artificial Intelligence Laboratory and additional efforts by the Willow Garage. Since 2013, ROS has been managed by the Open Source Robotics Foundation (OSRF), now called Open Robotics, which supports “the development, distribution, and adoption of open-source software for use in robotics research, education, and product development.” The great flexibility of ROS has promoted code sharing and contributions from researchers covering all major aspects of robotics. ROS helps the robotics community progress faster by sharing solutions to common problems. The development process of a robotic application can be simplified by utilizing ROS modules for sensing, navigation, motion planning, collision detection, and simulation (Fig. 1). For example, in the early years, ROS was adopted for the development of mobile robots such as the PR2 robot, which was built along with ROS by Willow Garage. By using ROS, PR2 can perform household chores such as serving drinks and folding laundry (2). ROS now comes with drivers for a wide range of sensors, simulators, and algorithms for navigation tasks that allow users to focus on their own unique aspects of research rather than worry about mundane component implementation. Support for different hardware manipulators has also been pursued in parallel, with recent efforts on standardizing the application program interfaces via ROS Industrial (ROS-I) and motion-planning tools such as MoveIt. Recently, ROS has been used to build open-source self-driving platforms (e.g., the Baidu Apollo project) that provide comprehensive, secure, and reliable solutions for autonomous vehicles.",,Powering the world's robots - 10 years of ROS,,x,,x,,,x,,,,NO,
S960,2,bkwd,conferencePaper,2016,"Santos, André; Cunha, Alcino; Macedo, Nuno; Lourenço, Cláudio",2016 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS.2016.7759661,,"Robots are being increasingly used in safety-critical contexts, such as transportation and health. The need for flexible behavior in these contexts, due to human interaction factors or unstructured operating environments, led to a transition from hardware- to software-based safety mechanisms in robotic systems, whose reliability and quality is imperative to guarantee. Source code static analysis is a key component in formal software verification. It consists on inspecting code, often using automated tools, to determine a set of relevant properties that are known to influence the occurrence of defects in the final product. This paper presents HAROS, a generic, plug-in-driven, framework to evaluate code quality, through static analysis, in the context of the Robot Operating System (ROS), one of the most widely used robotic middleware. This tool (equipped with plug-ins for computing metrics and conformance to coding standards) was applied to several publicly available ROS repositories, whose results are also reported in the paper, thus providing a first overview of the internal quality of the software being developed in this community.",Standards; Software; Measurement; Context; Service robots; Safety,A framework for quality assessment of ROS repositories,,,,x,,,,,x,,NO,
S959,2,bkwd,conferencePaper,1999,"Nordstrom, G.; Sztipanovits, J.; Karsai, G.; Ledeczi, A.",Proceedings ECBS'99. IEEE Conference and Workshop on Engineering of Computer-Based Systems,10.1109/ECBS.1999.755863,,"Model integrated computing (MIC) is gaining increased attention as an effective and efficient method for developing, maintaining, and evolving large-scale, domain-specific software applications for computer-based systems. MIC is a model-based approach to software development, allowing the synthesis of application programs from models created using customized, domain-specific model integrated program synthesis (MIPS) environments. Until now, these MIPS environments have been handcrafted. Analysis has shown that it is possible to ""model the modeling environment"" by creating a metamodel that specifies both the syntactic and semantic behavior of the desired domain-specific MIPS environment (DSME). Such a metamodel could then be used to synthesize the DSME itself allowing the entire design environment to safely and efficiently evolve in the face of changing domain requirements. This paper discusses the use of the Unified Modeling Language and the Object Constraint Language to specify, such metamodels, and describes a method for incorporating these metamodels into the MultiGraph Architecture, a MIPS creation toolset.",Application software; Software systems; Software maintenance; Unified modeling language; Metamodeling; Tires; Microwave integrated circuits; Electrical capacitance tomography; Identity-based encryption; Tellurium,Metamodeling-rapid design and evolution of domain-specific modeling environments,x,,,x,,,,,,,NO,
S958,2,bkwd,journalArticle,1997,"Sztipanovits, J.; Karsai, G.",Computer,10.1109/2.585163,,"Computers now control many critical systems in our lives, from the brakes on our cars to the avionics control systems on planes. Such computers wed physical systems to software, tightly integrating the two and generating complex component interactions unknown in earlier systems. Thus, it is imperative that we construct software and its associated physical system so they can evolve together. The paper discusses one approach that accomplishes this called model-integrated computing. This works by extending the scope and use of models. It starts by defining the computational processes that a system must perform and develops models that become the backbone for the development of computer-based systems. In this approach, integrated, multiple-view models capture information relevant to the system under design. The paper considers the Multigraph Architecture framework for model-integrated computing developed at Vanderbilt's Measurement and Computing Systems Laboratory.",Software tools; Kernel; Application software; Laboratories; Systems engineering and theory; Software design; Formal specifications; Contacts; Electrical engineering computing; Visual databases,Model-integrated computing,x,,,,,,,,,,NO,
S957,2,bkwd,conferencePaper,2001,"Sprinkle, J.M.; Ledeczi, A.; Karsai, G.; Nordstrom, G.",Proceedings. Eighth Annual IEEE International Conference and Workshop On the Engineering of Computer-Based Systems-ECBS 2001,10.1109/ECBS.2001.922433,,"Model integrated computing (MIC) is an effective and efficient method for developing, maintaining, and evolving large-scale, domain-specific software applications for computer-based systems (CBSs). On a higher level, it is possible to use MIC to develop, maintain, and evolve the meta-level tools (metamodeling environments) themselves, by modeling the metamodeling environment (meta-metamodeling). This paper documents the evolution of one metamodeling environment into another: specifically the design choices of the newer metamodeling environment with regard to the old one, and the solutions to problems that were introduced with the change.",Computer architecture; Ontologies; Metamodeling; Differential equations; Handicapped aids; Microwave integrated circuits,The new metamodeling generation,x,,,,,,,,,,NO,
S956,2,bkwd,journalArticle,1997,"Sztipanovits, J.; Karsai, G.",Computer,10.1109/2.585163,,"Computers now control many critical systems in our lives, from the brakes on our cars to the avionics control systems on planes. Such computers wed physical systems to software, tightly integrating the two and generating complex component interactions unknown in earlier systems. Thus, it is imperative that we construct software and its associated physical system so they can evolve together. The paper discusses one approach that accomplishes this called model-integrated computing. This works by extending the scope and use of models. It starts by defining the computational processes that a system must perform and develops models that become the backbone for the development of computer-based systems. In this approach, integrated, multiple-view models capture information relevant to the system under design. The paper considers the Multigraph Architecture framework for model-integrated computing developed at Vanderbilt's Measurement and Computing Systems Laboratory.",Software tools; Kernel; Application software; Laboratories; Systems engineering and theory; Software design; Formal specifications; Contacts; Electrical engineering computing; Visual databases,Model-integrated computing,x,,,,,,,,,,NO,
S955,2,bkwd,conferencePaper,2020,"Wehrmeister, Marco Aurelio",2020 25th IEEE International Conference on Emerging Technologies and Factory Automation (ETFA),10.1109/ETFA46521.2020.9212077,,"This work proposes an approach to generate automatically the embedded software for distributed Cyber-Physical Systems implemented using the Robotic Operating System (ROS) framework. For that, the Aspect-oriented Model Driven Engineering for Real-Time systems (AMoDE-RT) design approach has been extended in order to support the C++ code generation using the semantics and libraries available in ROS framework which is widely used in both academia and industry to implement the embedded software for robotic systems. The system architecture, behavior, requirements and constraints are specified in a UML/MARTE model. The information specified in the high-level model is used as input for a tool that generates a great part of the embedded software for all distributed computing devices. The main goal is to foster the use of Model-Driven Engineering in the context of cyber-physical systems design aiming the rapid prototyping via simulation and also the generation of the actual implementation of the system components. The proposed approach has been validated through a case study that demonstrates the feasibility to implement a ROS/C++ software for industrial systems. The results indicate that the proposed approach can be applied to complex systems comprising a larger number of interacting devices, whereas keeping the high-level of abstraction for system specification in UML/MARTE models.",UML; code generation; embedded software; MARTE; Model-Driven Engineering; Robot Operating System,Generating ROS-based Software for Industrial Cyber-Physical Systems from UML/MARTE,,,,,,,,,x,,NO,
S954,2,bkwd,conferencePaper,2019,"Hammoudeh Garcia, Nadia; Deval, Ludovic; Lüdtke, Mathias; Santos, Andre; Kahl, Björn; Bordignon, Mirko",2019 ACM/IEEE 22nd International Conference on Model Driven Engineering Languages and Systems (MODELS),10.1109/MODELS.2019.00-11,,"In principle, Model-Driven Engineering (MDE) addresses central aspects of robotics software development. Domain experts could leverage the expressiveness of models; implementation details over different hardware could be handled by automatic code generation. In practice, most evidence points to manual code development as the norm, despite several MDE efforts in robotics. Possible reasons for this disconnect are the wide ranges of applications and target platforms making all-encompassing MDE IDEs hard to develop and maintain, with developers reverting to writing code manually. Acknowledging this, and given the opportunity to leverage a large corpus of open-source software widely adopted by the robotics community, we pursue modeling as a complement, rather than an alternative, to manually written code. Our previous work introduced metamodels to describe components, their interactions, and their resulting composition, as inspired by, but not limited to, the de-facto standard Robot Operating System (ROS). In this paper we put such metamodels into use through two contributions. First, we automate the generation of models from manually written artifacts through extraction from source code and runtime system monitoring. Second, we make available an easy-to-use web infrastructure to perform the extraction, together with a growing database of models so generated. Our aim with this tooling, publicly available both as-a-service and as source code, is to lower the MDE barrier for practitioners and leverage models to 1) improve the understanding of manually written code; 2) perform correctness checks; and 3) systematize the definition and adoption of best practices through large-scale generation of models from existing code. A comprehensive example is provided as a walk-through for robotics software practitioners.",ROS; development environments; models,Bootstrapping MDE Development from ROS Manual Code - Part 2: Model Generation,,,,,,,,,x,,NO,
S953,2,bkwd,conferencePaper,2016,"Awad, Ramez; Heppner, Georg; Roennau, Arne; Bordignon, Mirko",2016 IEEE 21st International Conference on Emerging Technologies and Factory Automation (ETFA),10.1109/ETFA.2016.7733581,,"In this work, the ReApp Engineering Workbench and its underlying semantically enriched app models are presented. The usage of a model, which describes the apps functionality, interfaces and other attributes, allows the utilization of engineering tools for code generation and automated testing. Further, it ensures the compatibility of the generated interfaces, which in turn enhances the reusability of the developed apps in larger applications.",Hardware; Unified modeling language; Biological system modeling; Robot kinematics; Model driven engineering,ROS engineering workbench based on semantically enriched app models for improved reusability,,,,x,,,,,,,NO,
S952,2,bkwd,conferencePaper,2016,"Hua, Yingbing; Zander, Stefan; Bordignon, Mirko; Hein, Björn",2016 IEEE 21st International Conference on Emerging Technologies and Factory Automation (ETFA),10.1109/ETFA.2016.7733579,,"One of the major investment for applying industrial robots in production resides in the software development, which is an interdisciplinary and heterogeneous engineering process. This paper presents a novel model-driven approach that uses AutomationML as modeling framework and ontological reasoning as inference framework for constructing robotic application using Robot Operating System (ROS). We show how different robotic components can be classified and modeled with AutomationML, how these components can be composed together to a production system, and how the AutomationML models can be processed semantically by utilizing Semantic Web technologies and ontological reasoning. By applying model-to-text transformation techniques, executable ROS code can be generated from the models that foster fast prototyping and the reuse of robotic software.",Software; Ontologies; Semantics; Automation; Unified modeling language; Service robots,From AutomationML to ROS: A model-driven approach for software engineering of industrial robotics using ontological reasoning,,,,,,,,,x,,NO,
S951,2,bkwd,journalArticle,2016,"Kumar, Pranav Srinivas; Emfinger, William; Karsai, Gabor; Watkins, Dexter; Gasser, Benjamin; Anilkumar, Amrutur",Electronics,10.3390/electronics5030053,https://www.mdpi.com/2079-9292/5/3/53,"This paper presents the Robot Operating System Model-driven development tool suite, (ROSMOD) an integrated development environment for rapid prototyping component-based software for the Robot Operating System (ROS) middleware. ROSMOD is well suited for the design, development and deployment of large-scale distributed applications on embedded devices. We present the various features of ROSMOD including the modeling language, the graphical user interface, code generators, and deployment infrastructure. We demonstrate the utility of this tool with a real-world case study: an Autonomous Ground Support Equipment (AGSE) robot that was designed and prototyped using ROSMOD for the NASA Student Launch competition, 2014–2015.",robotics; real-time; distributed; embedded; cyber-physical; development; model-driven; rapid; systems,"ROSMOD: A Toolsuite for Modeling, Generating, Deploying, and Managing Distributed Real-time Component-based Software using ROS",,,,,,,,,x,,NO,
S950,2,bkwd,journalArticle,,"Quigley, Morgan; Gerkey, Brian; Conley, Ken; Faust, Josh; Foote, Tully; Leibs, Jeremy; Berger, Eric; Wheeler, Rob; Ng, Andrew",,,,"This paper gives an overview of ROS, an opensource robot operating system. ROS is not an operating system in the traditional sense of process management and scheduling; rather, it provides a structured communications layer above the host operating systems of a heterogenous compute cluster. In this paper, we discuss how ROS relates to existing robot software frameworks, and brieﬂy overview some of the available application software which uses ROS.",,ROS: an open-source Robot Operating System,,x,,,,,,,,,NO,
S949,2,bkwd,book,2015,"Quigley, Morgan; Gerkey, Brian; Smart, William D.",,,,"Want to develop novel robot applications, but don’t know how to write a mapping or object-recognition system? You’re not alone, but you’re certainly not without help. By combining real-world examples with valuable knowledge from the Robot Operating System (ROS) community, this practical book provides a set of motivating recipes for solving specific robotics use cases.Ideal for enthusiasts, from students in robotics clubs to professional robotics scientists and engineers, each recipe describes a complete solution using ROS open source libraries and tools. You’ll learn how to complete tasks described in the recipes, as well as how to configure and recombine components for other tasks. If you’re familiar with Python, you’re ready to go.Learn fundamentals, including key ROS concepts, tools, and patternsProgram robots that perform an increasingly complex set of behaviors, using the powerful packages in ROSSee how to easily add perception and navigation abilities to your robotsIntegrate your own sensors, actuators, software libraries, and even a whole robot into the ROS ecosystemLearn tips and tricks for using ROS tools and community resources, debugging robot behavior, and using C++ in ROS",Computers / Computer Science; Computers / Programming / Open Source; Computers / Languages / Python; TECHNOLOGY & ENGINEERING / Engineering (General),Programming Robots with ROS: A Practical Introduction to the Robot Operating System,,,,,x,,,,,,NO,
S948,2,bkwd,conferencePaper,2021,"Radermacher, Ansgar; Morelli, Matteo; Hussein, Mahmoud; Nouacer, Reda",Proceedings of the 2021 Drone Systems Engineering and Rapid Simulation and Performance Evaluation: Methods and Tools Proceedings,10.1145/3444950.3444956,https://doi.org/10.1145/3444950.3444956,"Drones/UAVs are able to perform air operations that are difficult to carry out by manned aircrafts. Their use brings significant environmental benefits and economic savings while reducing risks to human life. Recently, a number of approaches introduced a support for the development of drone software systems. However, the development of such systems is still largely done following ad-hoc processes without capturing systematically all requirements and constraints, and without a clear architectural vision. Therefore, in this paper, we introduce the Papyrus for Robotics tool. This tool is compliant with the model-driven development approach proposed by the RobMoSys project. The tool distinguishes different stakeholders and artefacts, and has a support for high-level behavior modeling. In addition, due to the nature of the drone domain, safety concerns play an important role. For instance, a drone needs to fly in safe areas only (i.e. geo-caging) or keep a sufficient safety-distance from other drones/flying objects in the space. Thus, the tool has a specific support for safety concerns. To ensure the applicability of our tool, we have used it to perform a case study in the context of the COMP4DRONES project that targets reducing the development cost of drone systems.",Code Generation; Safety; Modeling; ROS2; Drones,Designing Drone Systems with Papyrus for Robotics,,,,,,,,,x,,NO,
S947,2,bkwd,journalArticle,2016,"Stampfer, Dennis; Lotz, Alex; Lutz, Matthias; Schlegel, Christian",Journal of Software Engineering for Robotics (JOSER),,,"Service robots are complex software-intensive systems that need to fulfill a diversity of tasks in open-ended environments. In order to deal with their software complexity, one should make use of the latest software systems engineering principles and tools so that experts and stakeholders can smoothly interact and collaborate. We argue that there is a lack of approaches addressing the overall integration challenge (i.e. systematic composition) in service robotics and efforts for integration are underestimated. To address this, one of the recent trends in service robotics is the use of Model-Driven Software Development (MDSD) approaches and the creation of dedicated Domain-Specific Languages (DSLs). We further argue that isolated DSLs need to be combined and integrated in order to realize a step change in robotics software development. We propose the "" SmartMDSD Toolchain v2 "" as an Integrated Development Environment (IDE) for robotics software development. The SmartMDSD Toolchain combines a set of DSLs and tools in one IDE that guides experts and stakeholders through a formalized development process. We report on our vision of a robotics business ecosystem and our basic principles to address this vision. We give a consistent view on the overall development process and its full support in the SmartMDSD Toolchain v2. Finally, we report on lessons learned during six years of experience in developing tools, methods and DSLs for software development for service robots and conclude with a user study to assess the benefits of the SmartMDSD Toolchain as reported by the users.",,The SmartMDSD Toolchain: An Integrated MDSD Workflow and Integrated Development Environment (IDE) for Robotics Software,x,,,,,,,,,,NO,
S946,2,bkwd,conferencePaper,2019,"Hammoudeh Garcia, Nadia; Deval, Ludovic; Lüdtke, Mathias; Santos, Andre; Kahl, Björn; Bordignon, Mirko",2019 ACM/IEEE 22nd International Conference on Model Driven Engineering Languages and Systems (MODELS),10.1109/MODELS.2019.00-11,,"In principle, Model-Driven Engineering (MDE) addresses central aspects of robotics software development. Domain experts could leverage the expressiveness of models; implementation details over different hardware could be handled by automatic code generation. In practice, most evidence points to manual code development as the norm, despite several MDE efforts in robotics. Possible reasons for this disconnect are the wide ranges of applications and target platforms making all-encompassing MDE IDEs hard to develop and maintain, with developers reverting to writing code manually. Acknowledging this, and given the opportunity to leverage a large corpus of open-source software widely adopted by the robotics community, we pursue modeling as a complement, rather than an alternative, to manually written code. Our previous work introduced metamodels to describe components, their interactions, and their resulting composition, as inspired by, but not limited to, the de-facto standard Robot Operating System (ROS). In this paper we put such metamodels into use through two contributions. First, we automate the generation of models from manually written artifacts through extraction from source code and runtime system monitoring. Second, we make available an easy-to-use web infrastructure to perform the extraction, together with a growing database of models so generated. Our aim with this tooling, publicly available both as-a-service and as source code, is to lower the MDE barrier for practitioners and leverage models to 1) improve the understanding of manually written code; 2) perform correctness checks; and 3) systematize the definition and adoption of best practices through large-scale generation of models from existing code. A comprehensive example is provided as a walk-through for robotics software practitioners.",ROS; development environments; models,Bootstrapping MDE Development from ROS Manual Code - Part 2: Model Generation,,,,,,,,,x,,NO,
S945,2,bkwd,conferencePaper,2021,"Radermacher, Ansgar; Morelli, Matteo; Hussein, Mahmoud; Nouacer, Reda",Proceedings of the 2021 Drone Systems Engineering and Rapid Simulation and Performance Evaluation: Methods and Tools Proceedings,10.1145/3444950.3444956,https://doi.org/10.1145/3444950.3444956,"Drones/UAVs are able to perform air operations that are difficult to carry out by manned aircrafts. Their use brings significant environmental benefits and economic savings while reducing risks to human life. Recently, a number of approaches introduced a support for the development of drone software systems. However, the development of such systems is still largely done following ad-hoc processes without capturing systematically all requirements and constraints, and without a clear architectural vision. Therefore, in this paper, we introduce the Papyrus for Robotics tool. This tool is compliant with the model-driven development approach proposed by the RobMoSys project. The tool distinguishes different stakeholders and artefacts, and has a support for high-level behavior modeling. In addition, due to the nature of the drone domain, safety concerns play an important role. For instance, a drone needs to fly in safe areas only (i.e. geo-caging) or keep a sufficient safety-distance from other drones/flying objects in the space. Thus, the tool has a specific support for safety concerns. To ensure the applicability of our tool, we have used it to perform a case study in the context of the COMP4DRONES project that targets reducing the development cost of drone systems.",Code Generation; Safety; Modeling; ROS2; Drones,Designing Drone Systems with Papyrus for Robotics,,,,,,,,,x,,NO,
S944,2,bkwd,conferencePaper,2021,"Radermacher, Ansgar; Morelli, Matteo; Hussein, Mahmoud; Nouacer, Reda",Proceedings of the 2021 Drone Systems Engineering and Rapid Simulation and Performance Evaluation: Methods and Tools Proceedings,10.1145/3444950.3444956,https://doi.org/10.1145/3444950.3444956,"Drones/UAVs are able to perform air operations that are difficult to carry out by manned aircrafts. Their use brings significant environmental benefits and economic savings while reducing risks to human life. Recently, a number of approaches introduced a support for the development of drone software systems. However, the development of such systems is still largely done following ad-hoc processes without capturing systematically all requirements and constraints, and without a clear architectural vision. Therefore, in this paper, we introduce the Papyrus for Robotics tool. This tool is compliant with the model-driven development approach proposed by the RobMoSys project. The tool distinguishes different stakeholders and artefacts, and has a support for high-level behavior modeling. In addition, due to the nature of the drone domain, safety concerns play an important role. For instance, a drone needs to fly in safe areas only (i.e. geo-caging) or keep a sufficient safety-distance from other drones/flying objects in the space. Thus, the tool has a specific support for safety concerns. To ensure the applicability of our tool, we have used it to perform a case study in the context of the COMP4DRONES project that targets reducing the development cost of drone systems.",Code Generation; Safety; Modeling; ROS2; Drones,Designing Drone Systems with Papyrus for Robotics,,,,,,,,,x,,NO,
S943,2,bkwd,conferencePaper,2021,"Radermacher, Ansgar; Morelli, Matteo; Hussein, Mahmoud; Nouacer, Reda",Proceedings of the 2021 Drone Systems Engineering and Rapid Simulation and Performance Evaluation: Methods and Tools Proceedings,10.1145/3444950.3444956,https://doi.org/10.1145/3444950.3444956,"Drones/UAVs are able to perform air operations that are difficult to carry out by manned aircrafts. Their use brings significant environmental benefits and economic savings while reducing risks to human life. Recently, a number of approaches introduced a support for the development of drone software systems. However, the development of such systems is still largely done following ad-hoc processes without capturing systematically all requirements and constraints, and without a clear architectural vision. Therefore, in this paper, we introduce the Papyrus for Robotics tool. This tool is compliant with the model-driven development approach proposed by the RobMoSys project. The tool distinguishes different stakeholders and artefacts, and has a support for high-level behavior modeling. In addition, due to the nature of the drone domain, safety concerns play an important role. For instance, a drone needs to fly in safe areas only (i.e. geo-caging) or keep a sufficient safety-distance from other drones/flying objects in the space. Thus, the tool has a specific support for safety concerns. To ensure the applicability of our tool, we have used it to perform a case study in the context of the COMP4DRONES project that targets reducing the development cost of drone systems.",Code Generation; Safety; Modeling; ROS2; Drones,Designing Drone Systems with Papyrus for Robotics,,,,,,,,,x,,NO,
S942,2,bkwd,conferencePaper,2021,"Radermacher, Ansgar; Morelli, Matteo; Hussein, Mahmoud; Nouacer, Reda",Proceedings of the 2021 Drone Systems Engineering and Rapid Simulation and Performance Evaluation: Methods and Tools Proceedings,10.1145/3444950.3444956,https://doi.org/10.1145/3444950.3444956,"Drones/UAVs are able to perform air operations that are difficult to carry out by manned aircrafts. Their use brings significant environmental benefits and economic savings while reducing risks to human life. Recently, a number of approaches introduced a support for the development of drone software systems. However, the development of such systems is still largely done following ad-hoc processes without capturing systematically all requirements and constraints, and without a clear architectural vision. Therefore, in this paper, we introduce the Papyrus for Robotics tool. This tool is compliant with the model-driven development approach proposed by the RobMoSys project. The tool distinguishes different stakeholders and artefacts, and has a support for high-level behavior modeling. In addition, due to the nature of the drone domain, safety concerns play an important role. For instance, a drone needs to fly in safe areas only (i.e. geo-caging) or keep a sufficient safety-distance from other drones/flying objects in the space. Thus, the tool has a specific support for safety concerns. To ensure the applicability of our tool, we have used it to perform a case study in the context of the COMP4DRONES project that targets reducing the development cost of drone systems.",Code Generation; Safety; Modeling; ROS2; Drones,Designing Drone Systems with Papyrus for Robotics,,,,,,,,,x,,NO,
S941,2,bkwd,conferencePaper,2021,"Radermacher, Ansgar; Morelli, Matteo; Hussein, Mahmoud; Nouacer, Reda",Proceedings of the 2021 Drone Systems Engineering and Rapid Simulation and Performance Evaluation: Methods and Tools Proceedings,10.1145/3444950.3444956,https://doi.org/10.1145/3444950.3444956,"Drones/UAVs are able to perform air operations that are difficult to carry out by manned aircrafts. Their use brings significant environmental benefits and economic savings while reducing risks to human life. Recently, a number of approaches introduced a support for the development of drone software systems. However, the development of such systems is still largely done following ad-hoc processes without capturing systematically all requirements and constraints, and without a clear architectural vision. Therefore, in this paper, we introduce the Papyrus for Robotics tool. This tool is compliant with the model-driven development approach proposed by the RobMoSys project. The tool distinguishes different stakeholders and artefacts, and has a support for high-level behavior modeling. In addition, due to the nature of the drone domain, safety concerns play an important role. For instance, a drone needs to fly in safe areas only (i.e. geo-caging) or keep a sufficient safety-distance from other drones/flying objects in the space. Thus, the tool has a specific support for safety concerns. To ensure the applicability of our tool, we have used it to perform a case study in the context of the COMP4DRONES project that targets reducing the development cost of drone systems.",Code Generation; Safety; Modeling; ROS2; Drones,Designing Drone Systems with Papyrus for Robotics,,x,,,,,,,,,NO,
S940,2,bkwd,journalArticle,2019,"Zhang, Songchao; Xue, Xinyu; Chen, Chen; Sun, Zhu; Sun, Tao",International Journal of Agricultural and Biological Engineering,10.25165/ijabe.v12i4.4641,http://www.ijabe.org/index.php/ijabe/article/view/4641,"Unmanned aerial vehicle (UAV) has the advantages of good repeatability and high remote sensing (RS) information acquisition efficiency, as an important supplement bridging the gap of high-altitude and ground RS platforms.  A quadrotor UAV was developed for the agricultural RS application in this study.  The control system consists of a main processor and a coprocessor, integrating a three-axis gyroscope, a three-axis accelerometer, an air pressure sensor and a global positioning system (GPS) module.  Engineering trial method (ETM) was used to tune the parameters based on the active disturbance rejection control (ADRC) method.  Also a ground control station (GCS) adapted to the quadrotor was developed realizing autonomously take-off and landing, flight route planning, data recording.  To investigate the performances of the UAV, several flight tests were carried out.  The test results showed that the pitch angle control accuracy error was less than 4°, the flight height control accuracy error was less than 0.86 m, the flight path control accuracy error was less than 1.5 m overall.  Aerial multispectral images were acquired and processed.  The reflected digital number (DN) values obtained from a height of 10-100 m with 10 m interval could be referenced to classify objects.  The normalized-difference-vegetation index (NDVI) values obtained from the aerial multispectral images acquired at 15 m were compared with those obtained by the GreenSeeker (GS) and PSR-1100F.  The maximum error was 20.37% while the minimum error was 1.99%, which demonstrated the developed quadrotor UAV’s satisfactions for low altitude remote sensing practice.  This study provided a low-cost platform for agricultural remote sensing. Keywords: UAV, quadrotor, ADRC, agricultural remote sensing, NDVI, aerial spraying application DOI: 10.25165/j.ijabe.20191204.4641 Citation: Zhang S C, Xue X Y, Chen C, Sun Z, Sun T.  Development of a low-cost quadrotor UAV based on ADRC for agricultural remote sensing.  Int J Agric & Biol Eng, 2019; 12(4): 82–87.",UAV; ADRC; aerial spraying application; agricultural remote sensing; NDVI; quadrotor,Development of a low-cost quadrotor UAV based on ADRC for agricultural remote sensing,,x,,x,,,,,,,NO,
S939,2,bkwd,journalArticle,2016,"Villa, Tommaso Francesco; Salimi, Farhad; Morton, Kye; Morawska, Lidia; Gonzalez, Felipe",Sensors,10.3390/s16122202,https://www.mdpi.com/1424-8220/16/12/2202,"Air quality data collection near pollution sources is difficult, particularly when sites are complex, have physical barriers, or are themselves moving. Small Unmanned Aerial Vehicles (UAVs) offer new approaches to air pollution and atmospheric studies. However, there are a number of critical design decisions which need to be made to enable representative data collection, in particular the location of the air sampler or air sensor intake. The aim of this research was to establish the best mounting point for four gas sensors and a Particle Number Concentration (PNC) monitor, onboard a hexacopter, so to develop a UAV system capable of measuring point source emissions. The research included two different tests: (1) evaluate the air flow behavior of a hexacopter, its downwash and upwash effect, by measuring air speed along three axes to determine the location where the sensors should be mounted; (2) evaluate the use of gas sensors for CO2, CO, NO2 and NO, and the PNC monitor (DISCmini) to assess the efficiency and performance of the UAV based system by measuring emissions from a diesel engine. The air speed behavior map produced by test 1 shows the best mounting point for the sensors to be alongside the UAV. This position is less affected by the propeller downwash effect. Test 2 results demonstrated that the UAV propellers cause a dispersion effect shown by the decrease of gas and PN concentration measured in real time. A Linear Regression model was used to estimate how the sensor position, relative to the UAV center, affects pollutant concentration measurements when the propellers are turned on. This research establishes guidelines on how to develop a UAV system to measure point source emissions. Such research should be undertaken before any UAV system is developed for real world data collection.",air pollution; air quality; downwash effect; hexacopter; optical sensor; particle number concentration monitor; UAV remote gas sensing,Development and Validation of a UAV Based System for Air Pollution Measurements,x,,,,,,,,,,NO,
S938,2,bkwd,conferencePaper,2019,"Takaya, Kenta; Ohta, Hiroshi; Kroumov, Valeri; Shibayama, Keishi; Nakamura, Masanao","2019 23rd International Conference on System Theory, Control and Computing (ICSTCC)",10.1109/ICSTCC.2019.8885596,,"This paper presents a new UAV system for autonomous inspection of electrical energy transmission and distribution networks. The system is based on a quadrotor helicopter equipped with necessary sensors, control computer realizing the autonomous flight control, and cameras for acquiring images of power transmission towers, ground wire as well transmission wires, insulators, and the vegetation under the power line corridor. The proposed inspection method, hardware construction, and developed control software are described in this paper. Experimental results show well the capabilities and the usability of the proposed inspection system. As far as the authors are concerned such a system does not yet exists.",Sensors; Inspection; Cameras; robotics; automotive control systems; Helicopters; industrial applications; Poles and towers; power line inspection; Wires,Development of UAV System for Autonomous Power Line Inspection,x,,,,,,,,,,NO,
S937,2,bkwd,bookSection,,"Ordoukhanian, Edwin; Madni, Azad M.",AIAA SPACE 2016,,https://arc.aiaa.org/doi/abs/10.2514/6.2016-5414,,,Toward Development of Resilient Multi-UAV System-of-Systems,x,,,,,,,,,,NO,
S936,2,bkwd,journalArticle,2017,"Chiang, Kai-Wei; Tsai, Guang-Je; Li, Yu-Hua; El-Sheimy, Naser",IEEE Geoscience and Remote Sensing Letters,10.1109/LGRS.2017.2736013,,"In disaster management, reconstructing the environment and quickly collecting the geospatial data of the impacted areas in a short time are crucial. In this letter, a light detection and ranging (LiDAR)-based unmanned aerial vehicle (UAV) is proposed to complete the reconstruction task. The UAV integrate an inertial navigation system (INS), a global navigation satellite system (GNSS) receiver, and a low-cost LiDAR. An unmanned helicopter is introduced and the multisensor payload architecture for direct georeferencing is designed to improve the capabilities of the vehicle. In addition, a new strategy of iterative closest point algorithm is proposed to solve the registration problems in the sparse and inhomogeneous derived point cloud. The proposed registration algorithm addresses the local minima problem by the use of direct-georeferenced points and the novel hierarchical structure as well as taking the feedback bias into INS/GNSS. The generated point cloud is compared with a more accurate one derived from a high-grade terrestrial LiDAR which uses real flight data. Results indicate that the proposed UAV system achieves meter-level accuracy and reconstructs the environment with dense point cloud.",Navigation; Unmanned aerial vehicles; Payloads; Three-dimensional displays; Direct georeferencing (DG); inertial navigation system and global navigation satellite system (INS/GNSS); iterative closest point (ICP); Iterative closest point algorithm; Laser radar; light detection and ranging (LiDAR); Satellites; unmanned aerial vehicle (UAV),Development of LiDAR-Based UAV System for Environment Reconstruction,x,,,x,,,,,,,NO,
S935,2,bkwd,conferencePaper,2019,"Chakraborty, Swastika; Das, Saurabh; Rai, Nirmal; Patra, Anirban; Dhar, Aritra; Sadhu, Arnav; Gautam, Baishali; Verma, Pooja; Singh, Anindita; Sherpa, Chimila; Karn, Lipika",IGARSS 2019 - 2019 IEEE International Geoscience and Remote Sensing Symposium,10.1109/IGARSS.2019.8900454,,"A reliable and accurate glacial monitoring system is being developed with the help of a UAV and high-resolution camera on board. GPS is another major part of system which will help to collect information on glacier melting using reflectrometry principle and complement the information of aerial view of the lake formed due to glacier melting. The information gathered in that way helps the existing human habitat in the vicinity of the glacial lake from Glacial lake Outburst Flood (GLOF), a serious event of North East Indian Himalayan region. The information gathered in that way and generated warning signal are then transmitted to android application which exploits the data for the real time monitoring of the glacier melting as well as increase of area of the lake formed due to glacier melting.",Monitoring; Smart phones; Real-time systems; Global Positioning System; Zigbee; Payloads; Lakes,Development of UAV Based Glacial Lake Outburst Monitoring System,x,,,,,,,,,,NO,
S934,2,bkwd,journalArticle,2020,"Nouacer, Réda; Hussein, Mahmoud; Espinoza, Huascar; Ouhammou, Yassine; Ladeira, Matheus; Castiñeira, Rodrigo",Microprocessors and Microsystems,10.1016/j.micpro.2020.103142,https://www.sciencedirect.com/science/article/pii/S0141933120303094,"The potential applications for drones, especially those in manned areas or into non-segregated airspace, are currently not possible without the development and validation of certain key enabling technologies: “detect and avoid”, “air traffic management”, “command and control (C2) link”, and “security and cyber resilience”. This issue has a high impact on European innovation as identified by SESAR JU and demands R&D investments and incentives for the convergence of shared technologies and markets. In this paper, we discuss the vision of COMP4DRONES project to complement SESAR JU efforts with a particular focus on safe software and hardware drone architectures. COMP4DRONES will bear a holistically designed ecosystem ranging from application to electronic components. The ecosystem aims at supporting (1) efficient customization and incremental assurance of drone-embedded platforms, (2) safe autonomous decision making concerning individual or cooperative missions, (3) trustworthy drone-to-drone and drone-to- ground communications even in presence of malicious attackers and under the intrinsic platform constraints, and (4) agile and cost-effective design and assurance of drone modules and systems. Lead applications driving ecosystem development and benchmarking on the fields of transport, inspection, logistic, precision agriculture, and parcel delivery will be produced.",Interoperability; Security; Safety; Drones; Automation and Control Systems; Autonomy; Composition,Towards a framework of key technologies for drones,x,,,,,,,,,,NO,
S933,2,bkwd,journalArticle,,"Quigley, Morgan; Gerkey, Brian; Conley, Ken; Faust, Josh; Foote, Tully; Leibs, Jeremy; Berger, Eric; Wheeler, Rob; Ng, Andrew",,,,"This paper gives an overview of ROS, an opensource robot operating system. ROS is not an operating system in the traditional sense of process management and scheduling; rather, it provides a structured communications layer above the host operating systems of a heterogenous compute cluster. In this paper, we discuss how ROS relates to existing robot software frameworks, and brieﬂy overview some of the available application software which uses ROS.",,ROS: an open-source Robot Operating System,,x,,,,,,,,,NO,
S932,2,bkwd,book,2012,"Wohlin, Claes; Runeson, Per; Höst, Martin; Ohlsson, Magnus C.; Regnell, Björn; Wesslén, Anders",,,,"Like other sciences and engineering disciplines, software engineering requires a cycle of model building, experimentation, and learning. Experiments are valuable tools for all software engineers who are involved in evaluating and choosing between different methods, techniques, languages and tools. The purpose of Experimentation in Software Engineering is to introduce students, teachers, researchers, and practitioners to empirical studies in software engineering, using controlled experiments. The introduction to experimentation is provided through a process perspective, and the focus is on the steps that we have to go through to perform an experiment. The book is divided into three parts. The first part provides a background of theories and methods used in experimentation. Part II then devotes one chapter to each of the five experiment steps: scoping, planning, execution, analysis, and result presentation. Part III completes the presentation with two examples. Assignments and statistical material are provided in appendixes. Overall the book provides indispensable information regarding empirical studies in particular for experiments, but also for case studies, systematic literature reviews, and surveys. It is a revision of the authors’ book, which was published in 2000. In addition, substantial new material, e.g. concerning systematic literature reviews and case study research, is introduced. The book is self-contained and it is suitable as a course book in undergraduate or graduate studies where the need for empirical studies in software engineering is stressed. Exercises and assignments are included to combine the more theoretical material with practical aspects. Researchers will also benefit from the book, learning more about how to conduct empirical studies, and likewise practitioners may use it as a “cookbook” when evaluating new methods or techniques before implementing them in their organization.",Computers / Information Technology; Computers / Software Development & Engineering / General; Social Science / Research; Social Science / Methodology,Experimentation in Software Engineering,x,,,,,,,,,,NO,
S931,2,bkwd,conferencePaper,2020,"Swanborn, Stan; Malavolta, Ivano",Proceedings of the 35th IEEE/ACM International Conference on Automated Software Engineering Workshops,10.1145/3417113.3422997,https://doi.org/10.1145/3417113.3422997,"Nowadays, robots are widely used in many areas of our lifes, such as autonomous storage, self-driving vehicles, drones, industrial automation, etc. Energy is a critical factor for robotic systems, especially for mobile robots where energy is a finite resource (e.g., surveillance autonomous rovers). Since software is becoming the central focus of modern robotic systems, it is important to understand how it influences the energy consumption of the entire system. However, there is no systematic study of the state of the art in energy efficiency of robotics software that could guide research or practitioners in finding solutions and tools to develop robotic systems with energy efficiency in mind. The goal of this paper is to present a review of existing research on energy efficiency in robotics software. Specifically, we investigate on (i) the used metrics for energy efficiency, (ii) the application domains within the robotics area covered by research on energy efficiency, (iii) the identified major energy consumers within a robotic system, (iv) how existing approaches are evaluated, (v) the used energy models, (vi) the techniques supporting the development of energy-efficient robotics software, and (vii) which quality attributes tend to be traded off when dealing with energy efficiency in robotics. We also provide a replication package to assess, extend, and/or replicate the study. The results of this work can guide researchers and practitioners in robotics and software engineering in better reasoning and contributing to energy-efficient robotics software.",,Energy efficiency in robotics software: a systematic literature review,x,,,,,,,,,,NO,
S930,2,bkwd,conferencePaper,2020,"Malavolta, Ivano; Lewis, Grace; Schmerl, Bradley; Lago, Patricia; Garlan, David",2020 IEEE/ACM 42nd International Conference on Software Engineering: Software Engineering in Practice (ICSE-SEIP),,,"The Robot Operating System (ROS) is the de-facto standard for robotic software. If on one hand ROS is helping roboticists, e.g., by providing a standardized communication platform, on the other hand ROS-based systems are getting larger and more complex and could benefit from good software architecture practices. This paper presents an observational study aimed at (i) unveiling the state-of the-practice for architecting ROS-based systems and (ii) providing guidance to roboticists about how to properly architect ROS-based systems. To achieve these goals, we (i) build a dataset of 335 GitHub repositories containing real open-source ROS-based systems, (ii) mine the repositories for extracting the state of the practice about how roboticists are architecting them, and (iii) synthesize a catalog of 49 evidence-based guidelines for architecting ROS-based systems. The guidelines have been validated by 77 roboticists working on real-world open-source ROS-based systems.",Computer architecture; Data mining; Documentation; Guidelines; Robotics; Open source software; Software Architecture; Robots; Mining Software Repositories; Service robots,How do you Architect your Robots? State of the Practice and Guidelines for ROS-based Systems,,,,,,,,,x,,NO,
S929,2,bkwd,conferencePaper,2020,"Malavolta, Ivano; Grua, Eoin Martino; Lam, Cheng-Yu; de Vries, Randy; Tan, Franky; Zielinski, Eric; Peters, Michael; Kaandorp, Luuk",Proceedings of the 35th IEEE/ACM International Conference on Automated Software Engineering Workshops,10.1145/3417113.3422184,https://doi.org/10.1145/3417113.3422184,"Conducting measurement-based experiments is fundamental for assessing the quality of Android apps in terms of, e.g., energy consumption, CPU, and memory usage. However, orchestrating such experiments is not trivial as it requires large boilerplate code, careful setup of measurement tools, and the adoption of various empirical best practices scattered across the literature. All together, those factors are slowing down the scientific advancement and harming experiments' replicability in the mobile software engineering area. In this paper we present Android Runner (AR), a framework for automatically executing measurement-based experiments on native and web apps running on Android devices. In AR, an experiment is defined once in a descriptive fashion, and then its execution is fully automatic, customizable, and replicable. AR is implemented in Python and it can be extended with third-party profilers. AR has been used in more than 25 scientific studies primarily targeting performance and energy efficiency.",,A framework for the automatic execution of measurement-based experiments on Android devices,x,,,,,,,,,,NO,
S928,2,bkwd,conferencePaper,2014,"Hindle, Abram; Wilson, Alex; Rasmussen, Kent; Barlow, E. Jed; Campbell, Joshua Charles; Romansky, Stephen",Proceedings of the 11th Working Conference on Mining Software Repositories,10.1145/2597073.2597097,https://doi.org/10.1145/2597073.2597097,"Green Mining is a field of MSR that studies software energy consumption and relies on software performance data. Unfortunately there is a severe lack of publicly available software power use performance data. This means that green mining researchers must generate this data themselves by writing tests, building multiple revisions of a product, and then running these tests multiple times (10+) for each software revision while measuring power use. Then, they must aggregate these measurements to estimate the energy consumed by the tests for each software revision. This is time consuming and is made more difficult by the constraints of mobile devices and their OSes. In this paper we propose, implement, and demonstrate Green Miner: the first dedicated hardware mining software repositories testbed. The Green Miner physically measures the energy consumption of mobile devices (Android phones) and automates the testing of applications, and the reporting of measurements back to developers and researchers. The Green Miner has already produced valuable results for commercial Android application developers, and has been shown to replicate other power studies' results.",Android; Software Energy Consumption; Software Change,GreenMiner: a hardware based mining software repositories software energy consumption framework,x,,,,,,,,,,NO,
S927,2,bkwd,journalArticle,2019,"Estefo, Pablo; Simmonds, Jocelyn; Robbes, Romain; Fabry, Johan",Journal of Systems and Software,10.1016/j.jss.2019.02.024,https://www.sciencedirect.com/science/article/pii/S0164121219300342,"ROS, the Robot Operating System, offers a core set of software for operating robots that can be extended by creating or using existing packages, making it possible to write robotic software that can be reused on different hardware platforms. With thousands of packages available per stable distribution, encapsulating algorithms, sensor drivers, etc., it is the de facto middleware for robotics. Like any software ecosystem, ROS must evolve in order to keep meeting the requirements of its users. In practice, packages may end up being abandoned between releases: no one may be available to update a package, or newer packages offer similar functionality. As such, we wanted to identify and understand the evolution challenges faced by the ROS ecosystem. In this article, we report our findings after interviewing 19 ROS developers in depth, followed by a focus group (4 participants) and an online survey of 119 ROS community members. We specifically focused on the issues surrounding package reuse and how to contribute to existing packages. To conclude, we discuss the implications of our findings, and propose five recommendations for overcoming the identified issues, with the goal of improving the health of the ROS ecosystem.",Robot Operating System; Package management; Software ecosystems,The Robot Operating System: Package reuse and community dynamics,,,,,,,,,x,,NO,
S926,2,bkwd,conferencePaper,2017,"Di Nucci, Dario; Palomba, Fabio; Prota, Antonio; Panichella, Annibale; Zaidman, Andy; De Lucia, Andrea","2017 IEEE 24th International Conference on Software Analysis, Evolution and Reengineering (SANER)",10.1109/SANER.2017.7884613,,"Modeling the power profile of mobile applications is a crucial activity to identify the causes behind energy leaks. To this aim, researchers have proposed hardware-based tools as well as model-based and software-based techniques to approximate the actual energy profile. However, all these solutions present their own advantages and disadvantages. Hardware-based tools are highly precise, but at the same time their use is bound to the acquisition of costly hardware components. Model-based tools require the calibration of parameters needed to correctly create a model on a specific hardware device. Software-based approaches do not need any hardware components, but they rely on battery measurements and, thus, they are hardware-assisted. These tools are cheaper and easier to use than hardware-based tools, but they are believed to be less precise. In this paper, we take a deeper look at the pros and cons of software-based solutions investigating to what extent their measurements depart from hardware-based solutions. To this aim, we propose a software-based tool named PETRA that we compare with the hardware-based MONSOON toolkit on 54 Android apps. The results show that PETRA performs similarly to MONSOON despite not using any sophisticated hardware components. In fact, in all the apps the mean relative error with respect to MONSOON is lower than 0.05. Moreover, for 95% of the analyzed methods the estimation error is within 5% of the actual values measured using the hardware-based toolkit.",Hardware; Estimation; Androids; Humanoid robots; Mobile communication; Energy consumption; Energy measurement; Energy Consumption; Mobile Apps,"Software-based energy profiling of Android apps: Simple, efficient and reliable?",x,,,,,,,,,,NO,
S925,2,bkwd,conferencePaper,2017,"Halder, Raju; Proença, José; Macedo, Nuno; Santos, André",2017 IEEE/ACM 5th International FME Workshop on Formal Methods in Software Engineering (FormaliSE),10.1109/FormaliSE.2017.9,,"Robotic technologies are continuously transforming the domestic and the industrial environments. Recently the Robotic Operating System (ROS), has been widely adopted both by industry and academia, becoming one of the most popular middleware frameworks for developing robot applications. Guaranteeing the correct behaviour of robotic systems is, however, challenging due to their potential for parameterization and heterogeneity. Although different approaches exist, focusing on concrete domain spaces for specific scenarios, no general approach to reason about ROS systems has yet arisen. This paper proposes an approach to model and verify ROS systems using real time properties, focusing on one of the main features of ROS, the communication between nodes. It takes low-level parameters into account, such as queue sizes and timeouts, and uses timed automata as the modelling language. The robot Kobuki is used as a complex case study, over which properties are automatically verified using the UPPAAL model checker, enabling the identification of problematic parameter combinations.",Monitoring; Clocks; Automata; Peer-to-peer computing; Service robots; Safety,Formal Verification of ROS-Based Robotic Applications Using Timed-Automata,,,,,,,,,x,,NO,
S924,2,bkwd,journalArticle,2016,"Webster, Matt; Dixon, Clare; Fisher, Michael; Salem, Maha; Saunders, Joe; Koay, Kheng Lee; Dautenhahn, Kerstin; Saez-Pons, Joan",IEEE Transactions on Human-Machine Systems,10.1109/THMS.2015.2425139,,"It is essential for robots working in close proximity to people to be both safe and trustworthy. We present a case study on formal verification for a high-level planner/scheduler for the Care-O-bot, an autonomous personal robotic assistant. We describe how a model of the Care-O-bot and its environment was developed using Brahms, a multiagent workflow language. Formal verification was then carried out by automatically translating this model to the input language of an existing model checker. Four sample properties based on system requirements were verified. We then refined the environment model three times to increase its accuracy and the persuasiveness of the formal verification results. The first refinement uses a user activity log based on real-life experiments, but is deterministic. The second refinement uses the activities from the user activity log nondeterministically. The third refinement uses “conjoined activities” based on an observation that many user activities can overlap. The four samples properties were verified for each refinement of the environment model. Finally, we discuss the approach of environment model refinement with respect to this case study.",Software; formal verification; Navigation; model checking; Robot sensing systems; robotics; Autonomous systems; human–robot teams; TV; Watches,Toward Reliable Autonomous Robotic Assistants Through Formal Verification: A Case Study,x,,,x,,,,,,,NO,
S923,2,bkwd,conferencePaper,2019,"Muscedere, Bryan J.; Hackman, Robert; Anbarnam, Davood; Atlee, Joanne M.; Davis, Ian J.; Godfrey, Michael W.","2019 IEEE 26th International Conference on Software Analysis, Evolution and Reengineering (SANER)",10.1109/SANER.2019.8668042,,"Modern automotive software systems are large, complex, and feature rich; they can contain over 100 million lines of code, comprising hundreds of features distributed across multiple electronic control units (ECUs), all operating in parallel and communicating over a CAN bus. Because they are safety-critical systems, the problem of possible Feature Interactions (FIs) must be addressed seriously; however, traditional detection approaches using dynamic analyses are unlikely to scale to the size of these systems. We are investigating an approach that detects static source-code patterns that are symptomatic of FIs. The tools report Feature-Interaction warnings, which can be investigated further by engineers to determine if they represent true FIs and if those FIs are problematic. In this paper, we present our preliminary toolchain for FI detection. First, we extract a collection of static “facts” from the source code, such as function calls, variable assignments, and messages between features. Next, we perform relational algebra transformations on this factbase to infer additional “facts” that represent more complicated design information about the code, such as potential information flows and data dependencies; then, the full collection of “facts” is matched against a curated set of patterns for FI symptoms. We present a set of five patterns for FIs in automotive software as well a case study in which we applied our tools to the Autonomoose autonomous-driving software, developed at the University of Waterloo. Our approach identified 1,444 possible FIs in this codebase, of which 10% were classified as being probable interactions worthy of further investigation.",Feature extraction; feature interactions; Analytical models; Software systems; static analysis; Tools; C++ languages; Automotive engineering; relational algebra,Detecting Feature-Interaction Symptoms in Automotive Software using Lightweight Analysis,x,,,x,,,,,,,NO,
S922,2,bkwd,conferencePaper,2017,"Sharma, Nishant; Elbaum, Sebastian; Detweiler, Carrick",2017 IEEE International Conference on Robotics and Automation (ICRA),10.1109/ICRA.2017.7989240,,"Changes to robotic systems as they are updated or upgraded often affect the flow of control and sensor data. Developers and users spend a significant amount of time tracing the impact of these changes that could otherwise have negative impacts on the robot's performance and behavior. Changes to the rates at which data is published from sensors, controllers, and other parts of the system are particularly subtle and difficult to detect. These rate changes, even if minor (e.g. lowering the frame rate of a camera), can propagate throughout the system and have broad impacts. In this work, we develop and implement an approach to help identify the set of components whose rate may be impacted by a system change. The approach builds on the insight that certain code patterns render component's outgoing data rate independent of the component's incoming data rate. We use that insight to reduce the number of components reported as affected by the change to minimize the number of components that must be reevaluated by the developer. A study of an implementation of the approach on three ROS systems shows that it can reduce the size of the impact set by up to 41% in cases when the changes have broad data impacts. The analysis is performed at compile time and only adds a third more to the compilation time.",Solids; Cameras; Robot sensing systems; Tools; Publish-subscribe; Publishing,Rate impact analysis in robotic systems,x,,,,,,,,,,NO,
S921,2,bkwd,webpage,,,,,https://ieeexplore.ieee.org/abstract/document/6385719/?casa_token=lo543kwulUIAAAAA:RKYZXtH90r9WvmxxO5NPXpuhTz2eX0ujB5TWoBMXNmU47ti6nTqJ4rhpu_QY_6fP3TY0SIIvcf8,"Modern robotics systems rely on distributed event-based frameworks to facilitate the assembly of software out of collections of reusable components. These frameworks express component dependencies in data that encode event publish-subscribe relations. This loosely coupled architecture makes it difficult for developers to understand the dependencies and to predict the impacts of a change to a component as the components grow in number and complexity. Moreover, this encoding of dependencies renders traditional techniques for analyzing component dependencies inapplicable, because the dependencies are bound by communication channels rather than data. In this work, we present a program analysis technique that automatically extracts a model of component dependencies from distributed system source code. This model identifies not only the temporal dependencies among components, but also the conditions under which those dependencies are realized. We have implemented the analysis and applied it to systems developed in ROS. The resulting models are succinct and precise, which suggests that programmers will find them comprehensible, and they can be used to document important global dependencies in a system, to compare different versions to identify the impacts of component changes, and to help locate errors.",,Extracting conditional component dependence for distributed robotic systems,,,,,x,,,,,,NO,
S920,2,bkwd,journalArticle,,"Dwyer, B; Avrunin, S; Corbett, James C",,,,"Model checkers and other finite-state verification tools allow developers to detect certain kinds of errors automatically. Nevertheless, the transition of this technology from research to practice has been slow. While there are a number of potential causes for reluctance to adopt such formal methods, we believe that a primary cause is that practitioners are unfamiliar with specification processes, notations, and strategies. In a recent paper, we proposed a pattern-based approach to the presentation, codification and reuse of property specifications for finite-state verification. Since then, we have carried out a survey of available specifications, collecting over 500 examples of property specifications. We found that most are instances of our proposed patterns. Furthermore, we have updated our pattern system to accommodate new patterns and variations of existing patterns encountered in this survey. This paper reports the results of the survey and the current status of our pattern system.",,Patterns in Property Specifications for Finite-State Verification,x,,,,,,,,,,NO,
S919,2,bkwd,conferencePaper,2017,"Ore, John-Paul; Detweiler, Carrick; Elbaum, Sebastian",Proceedings of the 26th ACM SIGSOFT International Symposium on Software Testing and Analysis,10.1145/3092703.3092722,https://doi.org/10.1145/3092703.3092722,"Systems interacting with the physical world operate on quantities measured with physical units. When unit operations in a program are inconsistent with the physical units' rules, those systems may suffer. Existing approaches to support unit consistency in programs can impose an unacceptable burden on developers. In this paper, we present a lightweight static analysis approach focused on physical unit inconsistency detection that requires no end-user program annotation, modification, or migration. It does so by capitalizing on existing shared libraries that handle standardized physical units, common in the cyber-physical domain, to link class attributes of shared libraries to physical units. Then, leveraging rules from dimensional analysis, the approach propagates and infers units in programs that use these shared libraries, and detects inconsistent unit usage. We implement and evaluate the approach in a tool, analyzing 213 open-source systems containing +900,000 LOC, finding inconsistencies in 11% of them, with an 87% true positive rate for a class of inconsistencies detected with high confidence. An initial survey of robot system developers finds that the unit inconsistencies detected by our tool are 'problematic', and we investigate how and when these inconsistencies occur.",static analysis; dimensional analysis; physical units; program analysis; robotic systems; type checking; unit consistency,Lightweight detection of physical unit inconsistencies without program annotations,x,,,,,,,,,,NO,
S918,2,bkwd,conferencePaper,2019,"Santos, André; Cunha, Alcino; Macedo, Nuno",2019 Third IEEE International Conference on Robotic Computing (IRC),10.1109/IRC.2019.00018,,"The Robot Operating System (ROS) is one of the most popular open source robotic frameworks, and has contributed significantly to the fast development of robotics. Even though ROS provides many ready-made components, a robotic system is inherently complex, in particular regarding the architecture and orchestration of such components. Availability and analysis of a system's architecture at compile time is fundamental to ease comprehension and development of higher-quality software. However, ROS developers have to overcome this complexity relying mostly on testing and runtime visualisers. This work aims to enhance static-time support by proposing, firstly, a metamodel to describe the software architecture of ROS systems (the ROS Computation Graph) and, secondly, model extraction and visualisation tools for such architectural models. The provided tools allow users to specify custom-made queries over these models, enabling the static verification of relevant properties that had to be (manually) checked at runtime before.",Computer architecture; Runtime; Software; Computational modeling; software architecture; software quality; Visualization; static analysis; Tools; robotics; Robots,Static-Time Extraction and Analysis of the ROS Computation Graph,,,,,,,,,x,,NO,
S916,2,bkwd,book,2012,"Jackson, Daniel",,,,"In Software Abstractions Daniel Jackson introduces an approach tosoftware design that draws on traditional formal methods but exploits automated tools to find flawsas early as possible. This approach--which Jackson calls ""lightweight formal methods"" or""agile modeling""--takes from formal specification the idea of a precise and expressivenotation based on a tiny core of simple and robust concepts but replaces conventional analysis basedon theorem proving with a fully automated analysis that gives designers immediate feedback. Jacksonhas developed Alloy, a language that captures the essence of software abstractions simply andsuccinctly, using a minimal toolkit of mathematical notions. This revised edition updates the text,examples, and appendixes to be fully compatible with the latest version of Alloy (Alloy 4).The designer can use automated analysis not only to correct errors but also tomake models that are more precise and elegant. This approach, Jackson says, can rescue designersfrom ""the tarpit of implementation technologies"" and return them to thinking deeply aboutunderlying concepts. Software Abstractions introduces the key elements: a logic,which provides the building blocks of the language; a language, which adds a small amount of syntaxto the logic for structuring descriptions; and an analysis, a form of constraint solving that offersboth simulation (generating sample states and executions) and checking (finding counterexamples toclaimed properties).",Computers / Software Development & Engineering / Systems Analysis & Design,"Software Abstractions: Logic, Language, and Analysis",x,,,,,,,,,,NO,
S915,2,bkwd,conferencePaper,2016,"Macedo, Nuno; Brunel, Julien; Chemouil, David; Cunha, Alcino; Kuperberg, Denis",Proceedings of the 2016 24th ACM SIGSOFT International Symposium on Foundations of Software Engineering,10.1145/2950290.2950318,https://doi.org/10.1145/2950290.2950318,"Model-checking is increasingly popular in the early phases of the software development process. To establish the correctness of a software design one must usually verify both structural and behavioral (or temporal) properties. Unfortunately, most specification languages, and accompanying model-checkers, excel only in analyzing either one or the other kind. This limits their ability to verify dynamic systems with rich configurations: systems whose state space is characterized by rich structural properties, but whose evolution is also expected to satisfy certain temporal properties. To address this problem, we first propose Electrum, an extension of the Alloy specification language with temporal logic operators, where both rich configurations and expressive temporal properties can easily be defined. Two alternative model-checking techniques are then proposed, one bounded and the other unbounded, to verify systems expressed in this language, namely to verify that every desirable temporal property holds for every possible configuration.",formal specification language; Model-checking,Lightweight specification and analysis of dynamic systems with rich configurations,x,,,x,,,,,,,NO,
S914,2,bkwd,conferencePaper,2011,"Near, Joseph P.; Milicevic, Aleksandar; Kang, Eunsuk; Jackson, Daniel",Proceedings of the 33rd International Conference on Software Engineering,10.1145/1985793.1985799,https://doi.org/10.1145/1985793.1985799,"A dependability case is an explicit, end-to-end argument, based on concrete evidence, that a system satisfies a critical property. We report on a case study constructing a dependability case for the control software of a medical device. The key novelty of our approach is a lightweight code analysis that generates a list of side conditions that correspond to assumptions to be discharged about the code and the environment in which it executes. This represents an unconventional trade-off between, at one extreme, more ambitious analyses that attempt to discharge all conditions automatically (but which cannot even in principle handle environmental assumptions), and at the other, flow- or context-insensitive analyses that require more user involvement. The results of the analysis suggested a variety of ways in which the dependability of the system might be improved.",code analysis; dependability case; problem frames; property-part diagram; side conditions,A lightweight code analysis and its role in evaluation of a dependability case,x,,,,,,,,,,NO,
S913,2,bkwd,conferencePaper,2020,"Carvalho, Renato; Cunha, Alcino; Macedo, Nuno; Santos, André",2020 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS45743.2020.9341085,,"Robots are currently deployed in safety-critical domains but proper techniques to assess the functional safety of their software are yet to be adopted. This is particularly critical in ROS, where highly configurable robots are built by composing third-party modules. To promote adoption, we advocate the use of lightweight formal methods, automatic techniques with minimal user input and intuitive feedback. This paper proposes a technique to automatically verify system-wide safety properties of ROS-based applications at static time. It is based in the formalization of ROS architectural models and node behaviour in Electrum, over which system-wide specifications are subsequently model checked. To automate the analysis, it is deployed as a plug-in for HAROS, a framework for the assessment of ROS software quality aimed at the ROS community. The technique is evaluated in a real robot, AgRob V16, with positive results.",Computer architecture; Scalability; Model checking; Middleware; Safety; Software quality; Intelligent robots,Verification of system-wide safety properties of ROS applications,,,,,,,,,x,,NO,
S912,2,bkwd,conferencePaper,1995,"Rajkumar, R.; Gagliardi, M.; Sha, Lui",Proceedings Real-Time Technology and Applications Symposium,10.1109/RTTAS.1995.516203,,"Distributed real-time systems are becoming more pervasive in many domains including process control, discrete manufacturing, defense systems, air traffic control, and online monitoring systems in medicine. The construction of such systems, however, is impeded by the lack of simple yet powerful programming models and the lack of efficient, scalable, dependable and analyzable interfaces and their implementations. We argue that these issues need to be resolved with powerful application-level toolkits similar to that provided by ISIS. We consider the inter-process communication requirements which form a fundamental block in the construction of distributed real-time systems. We propose the real-time publisher/subscriber model, a variation of group-based programming and anonymous communication techniques, as a model for distributed real-time inter-process communication which can address issues of programming ease, portability, scalability and analyzability. The model has been used successfully in building a software architecture for building upgradable real-time systems. We provide the programming interface, a detailed design and implementation details of this model along with some preliminary performance benchmarks. The results are encouraging in that the goals we seek look achievable.",Scalability; Monitoring; Impedance; Real time systems; Buildings; Process control; Power system modeling; Air traffic control; Intersymbol interference; Manufacturing processes,The real-time publisher/subscriber inter-process communication model for distributed real-time systems: design and implementation,x,,,x,,,,,,,NO,
S911,2,bkwd,conferencePaper,2008,"Wehrmeister, Marco A.; Freitas, Edison P.; Pereira, Carlos E.; Rammig, Franz",2008 11th IEEE International Symposium on Object and Component-Oriented Real-Time Distributed Computing (ISORC),10.1109/ISORC.2008.67,,"Model-driven design (MDD) can be perceived in the recent literature as an option to deal with the increasing complexity of the design of distributed embedded real-time systems (DERTS). This paper reports some results of a research project aiming to support a MDD approach, which applies concepts of the aspect-oriented (AO) paradigm in order to improve the treatment of non-functional requirements (NFR) in the design of DERTS. A tool named GenERTiCA, which generates source code from UML diagrams and also weaves aspect adaptations, has been developed to support such MDD/AO approach. This paper presents results regarding the use of GenERTiCA to generate code and implement aspects (from a high-level framework of aspect) for the RT-FemtoJava platform, a RTSJ-based and optimized Java platform for DERTS.",Hardware; Java; Distributed computing; Unified modeling language; Embedded system; Software performance; Real time systems; Object oriented modeling; Weaving; Code Generation; Skeleton; Aspect-Orientation; Distributed Real-Time Embedded Systems; UML modeling,GenERTiCA: A Tool for Code Generation and Aspects Weaving,x,,,,,,,,,,NO,
S910,2,bkwd,conferencePaper,2007,"de Freitas, Edison Pignaton; Wehrmeister, Marco Aurélio; Silva, Elias Teodoro; Carvalho, Fabiano Costa; Pereira, Carlos Eduardo; Wagner, Flávio Rech",Early Aspects: Current Challenges and Future Directions,10.1007/978-3-540-76811-1_4,,"Distributed Embedded Real-time Systems (DERTS) have several requirements directly related to characteristics that are difficult to handle when a pure object-oriented method is used for their development. These requirements are called Non-Functional Requirements (NFR) and refer to orthogonal properties, conditions, and restrictions that are spread out over the system. Pure object-oriented methods do not address successfully those concerns, so new technologies, like aspect orientation, are being applied in order to fulfill this gap. This work presents a proposal to use aspect orientation in the analysis and design of DERTS. To support our proposal, we created DERAF (Distributed Embedded Real-time Aspects Framework), an extensible high-level framework (i.e. implementation-independent) to handle NFR of DERTS. DERAF is used together with RT-UML in the design phase, aiming to separate the handling of non-functional from functional requirements in the Model Driven Design of DERTS. A qualitative assessment of DERAF separation of concerns is also presented.",Aspect-Orientation applied to DERTS; Distributed Real-time Embedded Systems; Requirements Specification; Separation of DERT Concerns,DERAF: A High-Level Aspects Framework for Distributed Embedded Real-Time Systems Design,x,,,,,,,,,,NO,
S909,2,bkwd,book,2004,"Filman, Robert E.; Elrad, Tzilla; Clarke, Siobhán; Akşit, Mehmet",,,https://research.utwente.nl/en/publications/aspect-oriented-software-development-2,,,Aspect-Oriented Software Development,x,,,,,,,,,,NO,
S908,2,bkwd,journalArticle,2013,"Binotto, Alécio Pedro Delazari; Wehrmeister, Marco Aurélio; Kuijper, Arjan; Pereira, Carlos Eduardo",Control Engineering Practice,10.1016/j.conengprac.2012.10.001,https://www.sciencedirect.com/science/article/pii/S0967066112002158,"Distributing the workload upon all available Processing Units (PUs) of a high-performance heterogeneous platform (e.g., PCs composed by CPU–GPUs) is a challenging task, since the execution cost of a task on distinct PUs is non-deterministic and affected by parameters not known a priori. This paper presents Sm@rtConfig, a context-aware runtime and tuning system based on a compromise between reducing the execution time of engineering applications and the cost of tasks' scheduling on CPU–GPUs' platforms. Using Model-Driven Engineering and Aspect Oriented Software Development, a high-level specification and implementation for Sm@rtConfig has been created, aiming at improving modularization and reuse in different applications. As case study, the simulation subsystem of a CFD application has been developed using the proposed approach. These system's tasks were designed considering only their functional concerns, whereas scheduling and other non-functional concerns are handled by Sm@rtConfig aspects, improving tasks modularity. Although Sm@rtConfig supports multiple PUs, in this case study, these tasks have been scheduled to execute on an platform composed by one CPU and one GPU. Experimental results show an overall performance gain of 21.77% in comparison to the static assignment of all tasks only to the GPU.",Model-Driven Engineering; Scheduling; Aspect Oriented Software Development; GPUs; Load-balancing; Solvers for linear equations systems,Sm@rtConfig: A context-aware runtime and tuning system using an aspect-oriented approach for data intensive engineering applications,x,,,,,,,,,,NO,
S907,2,bkwd,journalArticle,2018,"Brugali, Davide; Hochgeschwender, Nico",International Journal of Semantic Computing,10.1142/S1793351X18400056,https://www.worldscientific.com/doi/abs/10.1142/S1793351X18400056,"Control systems for autonomous robots are concurrent, distributed, embedded, real-time and data intensive software systems. A real-world robot control system is composed of tens of software components. For each component providing robotic functionality, tens of different implementations may be available. The difficult challenge in robotic system engineering consists in selecting a coherent set of components, which provide the functionality required by the application requirements, taking into account their mutual dependencies. This challenge is exacerbated by the fact that robotics system integrators and application developers are usually not specifically trained in software engineering. In various application domains, software product line (SPL) development has proven to be the most effective approach to face this kind of challenges. In a previous paper [D. Brugali and N. Hochgeschwender, Managing the functional variability of robotic perception systems, in First IEEE Int. Conf. Robotic Computing, 2017, pp. 277–283.] we have presented a model-based approach to the development of SPL for robotic perception systems, which integrates two modeling technologies developed by the authors: The HyperFlex toolkit [L. Gherardi and D. Brugali, Modeling and reusing robotic software architectures: The HyperFlex toolchain, in IEEE Int. Conf. Robotics and Automation, 2014, pp. 6414–6420.] and the Robot Perception Specification Language (RPSL) [N. Hochgeschwender, S. Schneider, H. Voos and G. K. Kraetzschmar, Declarative specification of robot perception architectures, in 4th Int. Conf. Simulation, Modeling, and Programming for Autonomous Robots, 2014, pp. 291–302.]. This paper extends our previous work by illustrating the entire development process of an SPL for robot perception systems with a real case study.",model-driven engineering; software variability; Robot perception,Software Product Line Engineering for Robotic Perception Systems,x,,,,,,,,,,NO,
S905,2,bkwd,journalArticle,2016,"Leite, Marcela; Wehrmeister, Marco Aurélio",Design Automation for Embedded Systems,10.1007/s10617-016-9172-6,http://link.springer.com/10.1007/s10617-016-9172-6,"This paper discusses an approach to generate VHDL descriptions from high-level speciﬁcations, namely UML/MARTE models that include aspect-oriented semantics. Standard UML diagrams describe the handling of functional requirements, whereas crosscutting concerns associated with the non-functional requirements are handled by aspects. UMLto-VHDL transformation is performed automatically by a script-based code generation tool named GenERTiCA. For that, mapping rules scripts deﬁne how to generate VHDL constructs from model elements, including the implementation of aspects adaptations. The generated VHDL description does not require any manual modiﬁcation, in order to be fully synthesized onto a FPGA device. Some case studies have been performed to evaluate the proposed approach, including examples of real systems implemented as a FPGA-based embedded system. Obtained results show an improvement in system design in terms of an increase in system performance as well as a better utilization of FPGA reconﬁgurable resources. Such positive results are related to a better modularization of components achieved by using the proposed high-level approach. These case studies demonstrate the practicability of full translation of platform-independent speciﬁcations into VHDL descriptions.",,System-level design based on UML/MARTE for FPGA-based embedded real-time systems,x,,,,,,,,,,NO,
S904,2,bkwd,conferencePaper,2009,"Wehrmeister, Marco A.; Freitas, Edison P.; Pereira, Carlos E.","Analysis, Architectures and Modelling of Embedded Systems",10.1007/978-3-642-04284-3_4,,"The use of Model-Driven Engineering (MDE) techniques in the domain of distributed embedded real-time systems are gain importance in order to cope with the increasing design complexity of such systems. This paper discusses an infrastructure created to build GenERTiCA, a flexible tool that supports a MDE approach, which uses aspect-oriented concepts to handle non-functional requirements from embedded and real-time systems domain. GenERTiCA generates source code from UML models, and also performs weaving of aspects, which have been specified within the UML model. Additionally, this paper discusses the Distributed Embedded Real-Time Compact Specification (DERCS), a PIM created to support UML-based code generation tools. Some heuristics to transform UML models into DERCS, which have been implemented in GenERTiCA, are also discussed.",UML; code generation; Aspect-Oriented Design (AOD); aspects weaving; distributed embedded real-time systems,An Infrastructure for UML-Based Code Generation Tools,x,,,,,,,,,,NO,
S903,2,bkwd,conferencePaper,2010,"Moreira, Tomás G.; Wehrmeister, Marco A.; Pereira, Carlos E.; Pétin, Jean-François; Levrat, Eric",2010 8th IEEE International Conference on Industrial Informatics,10.1109/INDIN.2010.5549590,,"The design of modern embedded systems becomes more complex every day, due to the increasing amount of components and distinct functionalities incorporated into a single system. To address this situation, projects' abstraction level is continuously raised. In addition, techniques to speed up the code production process have emerged. These new trends lead to an important issue: the development of a consistent engineering process for systems co-design, from the requirements phase to the source code production. In this context, the UML is an interesting option for the embedded systems projects, leading to techniques to generate source code for both hardware and software. Currently, there are some works and commercial tools to generate source code from UML specifications to mainstream languages, such as C++ and Java. However, there are few works addressing the automatic source code generation for VHDL language, which is widely used in the embedded systems development. Thus, this work proposes a methodology to generate automatically VHDL source code from UML specifications. This methodology is supported by the GenERTiCA tool. A use case focused on the use of embedded systems for the maintenance systems is presented in this paper to demonstrate the feasibility of the proposed approach.",Hardware; Unified modeling language; Intelligent sensors; Embedded system; system engineering; Embedded software; Intelligent systems; Embedded systems; Intelligent actuators; Embedded computing; Competitive intelligence; intelligent maintenance; Machine intelligence; UML specification; VHDL code generation,Automatic code generation for embedded systems: From UML specifications to VHDL code,x,,,,,,,,,,NO,
S901,2,bkwd,conferencePaper,2010,"Schlegel, Christian; Steck, Andreas; Brugali, Davide; Knoll, Alois","Simulation, Modeling, and Programming for Autonomous Robots",10.1007/978-3-642-17319-6_31,,"Advanced software engineering is the key factor in the design of future complex cognitive robots. It will decide about their robustness, (run-time) adaptivity, cost-effectiveness and usability.We present a novel overall vision of a model-driven engineering approach for robotics that fuses strategies for robustness by design and robustness by adaptation. It enables rigid definitions of quality-of-service, re-configurability and physics-based simulation as well as for seamless system level integration of disparate technologies and resource awareness.We report on steps towards implementing this idea driven by a first robotics meta-model with first explications of non-functional properties. A model-driven toolchain provides the model transformation and code generation steps. It also provides design time analysis of resource parameters (e.g. schedulability analysis of realtime tasks) as step towards resource awareness in the development of integrated robotic systems.",Resource Awareness; Schedulability Analysis; Online Simulation; Robot Control System; Robotic System,Design Abstraction and Processes in Robotics: From Code-Driven to Model-Driven Engineering,x,,,,,,,,,,NO,
S900,2,bkwd,book,2018,"Joseph, Lentin; Cacace, Jonathan",,,,"Discover best practices and troubleshooting solutions when working on ROSKey FeaturesDevelop complex robotic applications using ROS to interface robot manipulators and mobile robotsGain insight into autonomous navigation in mobile robots and motion planning in robot manipulatorsDiscover best practices and troubleshooting solutionsBook DescriptionIn this day and age, robotics has been gaining a lot of traction in various industries where consistency and perfection matter. Automation is achieved via robotic applications and various platforms that support robotics. The Robot Operating System (ROS) is a modular software platform to develop generic robotic applications. This book focuses on the most stable release of ROS (Kinetic Kame), discusses advanced concepts, and effectively teaches you programming using ROS.We begin with aninformative overview of the ROS framework, which will give you a clear idea of how ROS works. During the course of this book, you’ll learn to build models of complex robots, and simulate and interface the robot using the ROS MoveIt! motion planning library and ROS navigation stacks. Learn to leverage several ROS packages to embrace your robot models.After covering robot manipulation and navigation, you’ll get to grips with the interfacing I/O boards, sensors, and actuators of ROS. Vision sensors are a key component of robots, and an entire chapter is dedicated to the vision sensor and image elaboration, its interface in ROS and programming. You’ll also understand the hardware interface and simulation of complex robots to ROS and ROS Industrial.At the end of this book, you’ll discover the best practices to follow when programming using ROS.What you will learnCreate a robot model with a seven-DOF robotic arm and a differential wheeled mobile robotWork with Gazebo and V-REP robotic simulatorImplement autonomous navigation in differential drive robots using SLAM and AMCL packagesExplore the ROS Pluginlib, ROS nodelets, and Gazebo pluginsInterface I/O boards such as Arduino, robot sensors, and high-end actuatorsSimulate and motion plan an ABB and universal arm using ROS IndustrialExplore the latest version of the ROS frameworkWork with the motion planning of a seven-DOF arm using MoveIt!Who this book is forIf you are a robotics enthusiast or researcher who want to learn more about building robot applications using ROS, this book is for you. In order to learn from this book, you should have a basic knowledge of ROS, GNU/Linux, and C++ programming concepts. The book is also excellent for programmers who want to explore the advanced features of ROS.",Computers / Logic Design; Technology & Engineering / Electronics / General; Computers / Computer Architecture; Computers / Hardware / Chips & Processors; Computers / Operating Systems / Linux,"Mastering ROS for Robotics Programming: Design, build, and simulate complex robots using the Robot Operating System, 2nd Edition",,,,,x,,,,,,NO,
S899,2,bkwd,journalArticle,2013,"Wehrmeister, Marco A.; Pereira, Carlos Eduardo; Rammig, Franz J.",IEEE Transactions on Industrial Informatics,10.1109/TII.2013.2240308,,"Automation and control systems include many “intelligent” automation devices, which are usually implemented as complex embedded systems. New methods and tools are demanded to cope with the increasing design complexity, while keeping the project on schedule. Proper handling of nonfunctional system requirements is a key factor during the design of industrial automation systems, since in some application domains they are as important as (sometimes, more important than) functional requirements. This paper presents a model-driven engineering approach, which combines Unified Modeling Language (UML) and aspect-oriented software development (AOSD) to design real-time and embedded automation systems. The proposed approach allows a smooth transition from the initial phases to implementation by using software tools, comprising the system specification and the automatic generation of source code. By combining UML with model-level aspects and a script-base code generation tool, it enables the use of AOSD during system design and implementation, even though the target platform does not natively support such concepts. Experimental results on using this approach to design real-world examples of automation systems are presented. The results indicate a positive impact on the design of automation systems. The encapsulation of nonfunctional requirements was improved, increasing the reuse of developed artifacts. Generated source code statistics indicate that the proposed approach can generated a fair amount of code per model element.",Software engineering; Automation; Unified modeling language; embedded systems; Real-time systems; code generation; Embedded systems; Aspect-oriented software development (AOSD); automation systems; model-driven engineering (MDE); Unified Modeling Language (UML),Aspect-Oriented Model-Driven Engineering for Embedded Systems Applied to Automation Systems,x,,,,,,,,,,NO,
S898,2,bkwd,conferencePaper,2013,,Proceedings of the 8th International Joint Conference on Software Technologies,10.5220/0004585305480554,http://www.scitepress.org/DigitalLibrary/Link.aspx?doi=10.5220/0004585305480554,,,"Towards Easy Robot Programming - Using DSLs, Code Generators and Software Product Lines:",x,,,,,,,,,,NO,
S897,2,bkwd,journalArticle,2019,"Neis, Paulo; Wehrmeister, Marco A.; Mendes, Marcos F.",IEEE Access,10.1109/ACCESS.2019.2958275,,"This paper presents a survey on Software Engineering techniques for the power systems area. Our goal is to identify tools and techniques that can improve the life cycle management of customized applications for Energy Management Systems (SCADA/EMS), by applying a Model Driven Engineering (MDE) approach. We conducted a systematic literature review of published works related to the design and development of such applications. Two main repositories of publications in the area were used as sources and four search strategies were applied. Several works found are not directed to SCADA/EMS, but are related to other power systems applications. We have collected evidence that such applications are more commonly modeled using concepts specific to the power systems' domain, like control theory, rather than traditional techniques and tools from the software industry, like UML. However, few details about the process of transforming those specifications into software artifacts could be gathered. On the other hand, a few published works mention the MDE approach for power systems related applications, although clear methodology or frameworks applicable to the production of fully functional software are still missing. We have also identified promising technologies that need to be evaluated in order to propose such a framework, like domain specific languages, transformation engines and integration interfaces. The appealing MDE concept of automatically transforming design and specification models into programs and other software artifacts has the potential to facilitate the porting and migration of EMS applications from one platform to others. Ultimately, such an approach may help improving software quality and cutting development costs.",Software engineering; Software; Process control; software engineering; Tools; Energy management; Bibliographies; Model driven engineering; power systems; Power systems; SCADA/EMS,Model Driven Software Engineering of Power Systems Applications: Literature Review and Trends,x,,,,,,,,,,NO,
S896,2,bkwd,journalArticle,2019,"Gobillot, Nicolas; Lesire, Charles; Doose, David",Journal of Intelligent & Robotic Systems,10.1007/s10846-018-0967-5,https://doi.org/10.1007/s10846-018-0967-5,"The integration of autonomous robots in real applications is a challenge. It needs that the behaviour of these robots is proved to be safe. In this paper, we focus on the real-time software embedded on the robot, and that supports the execution of safe and autonomous behaviours. We propose a methodology that goes from the design of component-based software architectures using a Domain Specific Language, to the analysis of the real-time constraints that arise when considering the safety of software applications. This methodology is supported by a code generation toolchain that ensures that the code eventually executed on the robot is consistent with the analysis performed. This methodology is applied on a ground robot exploring an area. Categories (2), (3)",,A Design and Analysis Methodology for Component-Based Real-Time Architectures of Autonomous Systems,x,,,,,,,,,,NO,
S895,2,bkwd,journalArticle,2016,"Estévez, Elisabet; Sánchez-García, Alejandro; Gámez-García, Javier; Gómez-Ortega, Juan; Satorres-Martínez, Silvia",The International Journal of Advanced Manufacturing Technology,10.1007/s00170-015-7396-4,https://link.springer.com/article/10.1007/s00170-015-7396-4,"Currently, industrial robots are decisive in modern production facilities, and in a near future, robots will also become essential in daily life. In fact, the main aim of robotic manipulator relies on the integration of robots into people’s daily. To this purpose, there are a great number of physical devices, such as sensors, actuators, auxiliary elements, tools etc. which can be incorporated into a robot. Although integration, reuse, flexibility and adaptability are crucial characteristics demanded by current robotic applications, there is a lack of standardization in terms of hardware and software platforms, providing incompatible task-specific and non-reusable solutions. Consequently, there is a need for a new engineering methodology to design, implement and execute software systems. This work explores the advantages that model-driven engineering provides for the development of applications for robotic manipulators’ platforms. Specifically, a modelling approach is developed to generate the target code automatically. To validate the proposal, a tool that allows the final code to be generated for most spread communication middlewares in the robotics field is also presented.",,A novel model-driven approach to support development cycle of robotic systems,x,,,,,,,,,,NO,
S894,2,bkwd,conferencePaper,2016,"Wenger, Monika; Eisenmenger, Waldemar; Neugschwandtner, Georg; Schneider, Ben; Zoitl, Alois",2016 IEEE 21st International Conference on Emerging Technologies and Factory Automation (ETFA),10.1109/ETFA.2016.7733559,,"Programming industrial robots requires experts -not only to create the robot applications, but also for changing them later due to different product requirements. Part of the reason for this is that all robot vendors provide their own robot programming language. Due to the language differences, robot applications cannot be reused for different robot types. Often, additional experts are required since one expert is trained only for a special robot type. This makes the use of robots uneconomical for small and medium sized enterprises. The ReApp project addresses this problem by providing a workbench based on ROS (Robot Operating System). A central part of this workbench is the skill and solution modeling tool, which allows the model-based design of robot applications composed of reusable components, and is described in this paper.",Software; OWL; Unified modeling language; Robot kinematics; Service robots; IEC Standards,"A model based engineering tool for ROS component compositioning, configuration and generation of deployment information",,x,,,,,,,,,NO,
S893,2,bkwd,journalArticle,2014,"Wehrmeister, Marco Aurélio; de Freitas, Edison Pignaton; Binotto, Alécio Pedro Delazari; Pereira, Carlos Eduardo",Mechatronics,10.1016/j.mechatronics.2013.12.008,https://www.sciencedirect.com/science/article/pii/S0957415813002420,"Recent advances in technology enable the creation of complex industrial systems comprising mechanical, electrical, and logical – software – components. It is clear that new project techniques are demanded to support the design of such systems. At design phase, it is extremely important to raise abstraction level in earlier stages of product development in order to deal with such a complexity in an efficient way. This paper discusses Model Driven Engineering (MDE) applied to design industrial mechatronics systems. An aspect-oriented MDE approach is presented by means of a real-world case study, comprising requirements engineering up to code generation. An assessment of two well-known high-level paradigms, namely Aspect- and Object-Oriented paradigms, is deeply presented. Their concepts are applied at every design step of an embedded and real-time mechatronics system, specifically for controlling a product assembler industrial cell. The handling of functional and non-functional requirements (at modeling level) using aspects and objects is further emphasized. Both designs are compared using a set of software engineering metrics, which were adapted to be applied at modeling level. Particularly, the achieved results show the suitability of each paradigm for the system specification in terms of reusability quality of model elements. Focused on the generated code for each case study, statistics depicted an improvement in number of lines using aspects.",Code generation; Aspect Oriented Software Development (AOSD); Design automation; Embedded and real-time system; Industrial mechatronics system; Model-Driven Engineering (MDE),Combining aspects and object-orientation in model-driven engineering for distributed industrial mechatronics systems,x,,,,,,,,,,NO,
S892,2,bkwd,conferencePaper,2019,"Hammoudeh Garcia, Nadia; Lüdtke, Mathias; Kortik, Sitar; Kahl, Björn; Bordignon, Mirko",2019 Third IEEE International Conference on Robotic Computing (IRC),10.1109/IRC.2019.00060,,"Ten years after its first release, the Robot Operating System (ROS) is arguably the most popular software framework used to program robots. It achieved such status despite its shortcomings compared to alternatives similarly centered on manual programming and, perhaps surprisingly, to model-driven engineering (MDE) approaches. Based on our experience as users and developers of both ROS and MDE tools, we identified possible ways to leverage the accessibility of ROS and its large software ecosystem, while providing quality assurance measures through selected MDE techniques. After describing our vision on how to combine MDE and manually written code, we present the first technical contribution in this pursuit: a family of three metamodels to respectively model ROS nodes, communication interfaces, and systems composed from subsystems. Such metamodels can be used, through the accompanying Eclipse-based tooling made publicly available, to model ROS systems of arbitrary complexity and generate with correctness guarantees the software artifacts for their composition and deployment. Furthermore, they account for specifications on these aspects by the Object Management Group (OMG), in order to be amenable to hybrid systems coupling ROS and other frameworks. We also report on our experience with a large and complex corpus of ROS software used in a commercially deployed robot (the Care-O-bot 4), to explain the rationale of the presented work, including the shortcomings of standard ROS tools and of previous efforts on ROS modeling.",Software; Manuals; Robot sensing systems; Tools; Robot kinematics; Service robots; ROS; development environments; models,Bootstrapping MDE Development from ROS Manual Code - Part 1: Metamodeling,,,,,,,,,x,,NO,
S891,2,bkwd,conferencePaper,2016,"Adam, Kai; Butting, Arvid; Heim, Robert; Kautz, Oliver; Rumpe, Bernhard; Wortmann, Andreas",Proceedings of the International Workshop on Domain-Specific Modeling,10.1145/3023147.3023151,https://doi.org/10.1145/3023147.3023151,"Robotics currently adopts model-driven engineering focusing software modeling languages. This forces domain experts to employ these languages instead of enabling application of more appropriate DSLs. This ultimately produces monolithic, hardly reusable applications. We present an infrastructure for the development of service robotics applications employing DSLs aimed at domain experts and tailored to domain challenges. It facilitates separation of concerns of participating robotics, domain, and software engineering experts and integrates their models via a component & connector reference architecture and a combined code generation framework. The infrastructure was successfully deployed and evaluated with robotics manufacturers, caregivers, and software engineers in a German hospital. We believe that model-driven engineering with languages tailored to the various stakeholders’ needs can greatly facilitate robotic application engineering.",Code Generation; Domain-Specific Languages; Separation of Concerns; Service Robotics,Model-driven separation of concerns for service robotics,x,,,,,,,,,,NO,
S890,2,bkwd,conferencePaper,2018,"Bardaro, Gianluca; Semprebon, Andrea; Matteucci, Matteo",Proceedings of the 1st International Workshop on Robotics Software Engineering,10.1145/3196558.3196560,https://doi.org/10.1145/3196558.3196560,"Designing a robotic application is a challenging task. It requires a vertical expertise spanning various fields, starting from hardware and low-level communication to high-level architectural solution for distributed applications. Today a single expert cannot undertake the entire effort of creating a robust and reliable robotic application. The current landscape of robotics middlewares, ROS in primis, does not offer a solution for this problem yet; developers are expected to be both architectural designers and domain experts. In our previous works we used the Architecture Analysis and Description Language to define a model-based approach for robot development, in an effort to separate the competences of software engineers and robotics experts, and to simplify the merge of software artifacts created by the two categories of developers. In this work we present a practical use-case, i.e., an autonomous wheelchair, and how we used a combination of model-based developed and automatic code generation to completely re-design and re-implement an existing architecture originally written by hand.",robotics; ROS; AADL; code generation; model-based,A use case in model-based robot development using AADL and ROS,,,,,,,,,x,,NO,
S889,2,bkwd,book,2017,"Lee, Edward Ashford; Seshia, Sanjit A.",,,,"An introduction to the engineering principles of embedded systems, with a focus on modeling, design, and analysis of cyber-physical systems.The most visible use of computers and software is processing information for human consumption. The vast majority of computers in use, however, are much less visible. They run the engine, brakes, seatbelts, airbag, and audio system in your car. They digitally encode your voice and construct a radio signal to send it from your cell phone to a base station. They command robots on a factory floor, power generation in a power plant, processes in a chemical plant, and traffic lights in a city. These less visible computers are called embedded systems, and the software they run is called embedded software. The principal challenges in designing and analyzing embedded systems stem from their interaction with physical processes. This book takes a cyber-physical approach to embedded systems, introducing the engineering concepts underlying embedded systems as a technology and as a subject of study. The focus is on modeling, design, and analysis of cyber-physical systems, which integrate computation, networking, and physical processes. The second edition offers two new chapters, several new exercises, and other improvements. The book can be used as a textbook at the advanced undergraduate or introductory graduate level and as a professional reference for practicing engineers and computer scientists. Readers should have some familiarity with machine structures, computer programming, basic discrete mathematics and algorithms, and signals and systems.",Technology & Engineering / Electrical; Computers / Computer Science,Introduction to Embedded Systems: A Cyber-Physical Systems Approach,x,,,,,,,,,,NO,
S888,2,bkwd,conferencePaper,2018,"Bardaro, Gianluca; Semprebon, Andrea; Matteucci, Matteo",Proceedings of the 1st International Workshop on Robotics Software Engineering,10.1145/3196558.3196560,https://doi.org/10.1145/3196558.3196560,"Designing a robotic application is a challenging task. It requires a vertical expertise spanning various fields, starting from hardware and low-level communication to high-level architectural solution for distributed applications. Today a single expert cannot undertake the entire effort of creating a robust and reliable robotic application. The current landscape of robotics middlewares, ROS in primis, does not offer a solution for this problem yet; developers are expected to be both architectural designers and domain experts. In our previous works we used the Architecture Analysis and Description Language to define a model-based approach for robot development, in an effort to separate the competences of software engineers and robotics experts, and to simplify the merge of software artifacts created by the two categories of developers. In this work we present a practical use-case, i.e., an autonomous wheelchair, and how we used a combination of model-based developed and automatic code generation to completely re-design and re-implement an existing architecture originally written by hand.",robotics; ROS; AADL; code generation; model-based,A use case in model-based robot development using AADL and ROS,,,,,,,,,,,,
S887,2,bkwd,conferencePaper,2012,"Perrotin, Maxime; Conquet, Eric; Delange, Julien; Schiele, André; Tsiodras, Thanassis",SDL 2011: Integrating System and Software Modeling,10.1007/978-3-642-25264-8_4,,"TASTE stands for “The ASSERT Set of Tools for Engineering”, in reference to the European FP6 program where it finds its roots. It consists in an open-source tool-chain dedicated to the development of embedded, real-time systems. TASTE addresses the modelling and deployment of distributed systems containing heterogeneous software and hardware components; it focuses on the automation of tedious, error-prone tasks that usually make complex systems difficult to integrate and validate. TASTE relies on two complementary languages, AADL and ASN.1, that allow to create embedded systems which functional parts are made of C, Ada, SDL, SCADE, Simulink and/or VHDL code.",AADL; ASN.1; MSC; SCADE; SDL; TASTE; VHDL,"TASTE: A Real-Time Software Engineering Tool-Chain Overview, Status, and Future",x,,,,,,,,,,NO,
S886,2,bkwd,book,2019,"Hume, David",,,https://www.degruyter.com/document/doi/10.1515/9783110585575-003/html,Of the Standard of Taste was published in Reading David Hume’s 'Of the Standard of Taste' on page 25.,,Of the Standard of Taste,x,,,x,,,,,,,NO,
S885,2,bkwd,journalArticle,2008,"Hugues, Jerome; Zalila, Bechir; Pautet, Laurent; Kordon, Fabrice",ACM Transactions on Embedded Computing Systems,10.1145/1376804.1376810,https://doi.org/10.1145/1376804.1376810,"Building distributed deal-time embedded systems requires a stringent methodology, from early requirement capture to full implementation. However, there is a strong link between the requirements and the final implementation (e.g., scheduling and resource dimensioning). Therefore, a rapid prototyping process based on automation of tedious and error-prone tasks (analysis and code generation) is required to speed up the development cycle. In this article, we show how the AADL (Architecture Analysis and Design Language), which appeared in late 2004, helps solve these issues thanks to a dedicated tool suite. We then detail the prototyping process and its current implementation: Ocarina.",AADL; real-time; distributed; DRE; embedded; Ocarina; PolyORB-HI,From the prototype to the final embedded system using the Ocarina AADL tool suite,x,,,,,,,,,,NO,
S884,2,bkwd,report,2019,"Feiler, Peter",,,https://apps.dtic.mil/sti/citations/AD1085455,"Eclipse-based Open Source AADL Tool Environment OSATE No cost license under EPL license, Download site osate.org, Issue tracking httpsgithub.comosateosate2issues, Release cycle bi-monthly stable, nightly builds, Reference implementation of core AADL and annex standards, AADL core language V2.2 plus any approved errata, Error Model V2 Annex, ARINC653 Annex, Behavior Annex, Data Modeling Annex, Code Generation Annex, Research prototyping platform, University and industrial research and pilot projects at international level.",,The Open Source AADL Tool Environment (OSATE),x,,,x,,,,,,,NO,
S883,2,bkwd,journalArticle,2006,"Mens, Tom; Van Gorp, Pieter",Electronic Notes in Theoretical Computer Science,10.1016/j.entcs.2005.10.021,https://www.sciencedirect.com/science/article/pii/S1571066106001435,"This article proposes a taxonomy of model transformation, based on the discussions of a working group on model transformation of the Dagstuhl seminar on Language Engineering for Model-Driven Software Development. This taxonomy can be used, among others, to help developers in deciding which model transformation language or tool is best suited to carry out a particular model transformation activity.",taxonomy; MDE; MDD; comparison; model transformation,A Taxonomy of Model Transformation,x,,,x,,,,,,,NO,
S882,2,bkwd,conferencePaper,2013,"Meinecke, Gerrit; Albiez, Jan; Joyeux, Sylvain; Ratmeyer, Volker; Renken, Jens",2013 OCEANS - San Diego,10.23919/OCEANS.2013.6740993,,"The water column as well as the seafloor in under ice environments (sea ice or glaciers) are increasingly interesting for researchers. Exploring these regions needs new technical equipment, which is able to cope with the challenges arising when entering areas covered by ice. There is no escape route to the surface, caverns within the ice and an unknown sea-floor topography makes impact severely on navigation and communication with the deployed systems is complicated. Additionally, the requirements from the researchers to the systems are high (probe sampling, video coverage, sonar images etc.). The HROV system developed at MARUM intends to deal with these problems by applying a hybrid ROV-AUV approach to a underwater vehicle. Within such a hybrid system, the control architecture has to satisfy the needs of a human operator controlling it in ROV mode and the constraints arising from autonomous operation. Resulting from a close cooperation between the DFKI Robotics Innovation Center and MARUM we present within this paper a control architecture which uses OROCOS/ROCK as framework to implement a system which allows seamless and immediate switching between ROV and AUV mode (e.g. in case of fibre rupture) as well as applying an adaptive fault detection and fault response system.",Computer architecture; Runtime; Software; Vehicles; Switches; Rocks,OROCOS based control software of the new developed MARUM hybrid-ROV for under-ice applications,x,,,,,,,,,,NO,
S881,2,bkwd,journalArticle,,"Joyeux, Sylvain",,,,,,Rock: the robot construction kit,x,,,x,,,,,,,NO,
S880,2,bkwd,conferencePaper,2001,"Bruyninckx, H.",Proceedings 2001 ICRA. IEEE International Conference on Robotics and Automation (Cat. No.01CH37164),10.1109/ROBOT.2001.933002,,"This paper introduces the OROCOS project that aims at becoming a general-purpose and open robot control software package. OROCOS follows the open source development model that has been proven to work in many other general-purpose software packages, such as Linux, Apache, Perl or LATEX. The paper focuses on the long-term vision of this start-up project, motivates which strategic and innovative design decisions are to be taken (a CORBA-like component architecture being the most important one), and lists other projects on which OROCOS could build. The success of OROCOS depends critically on how many researchers and engineers can be motivated to contribute code, documentation and feedback to the project.",Linux; Computer industry; Communication standards; Consumer electronics; Open source software; Service robots; Software packages; Robot control; Industrial electronics; Manufacturing industries,Open robot control software: the OROCOS project,x,,,x,,,,,,,NO,
S879,2,bkwd,journalArticle,2017,"Bardaro, Gianluca; Semprebon, Andrea; Matteucci, Matteo",Journal of Software Engineering for Robotics,,,"Modern robotic systems are a combination of sophisticated software and hardware components and they offer complex functionalities. While (few) popular middlewares which promote component-level reusability, and assist development, exist, there are no established techniques or procedures that use a formal approach to robot system and architecture design yet. This work aims at the long term goal of model-based design and development of complex robot systems (and their software architectures), by surpassing current techniques based on personal expertise and best practices in favor of model-based approaches. Our contribution tackles the problem from the ground up by proposing a way to model ROS nodes, and robotic architectures in general, using the Architecture Analysis and Design Language (AADL) and by deriving, from these models, reusable templates to streamline the design of robotic systems and minimize their development time. The result is not bound to ROS, proven by outlining a model also for RoCK, and provides a general formal framework to describe complex robotic architectures suitable for automatic code generation and system verification.",,AADL for robotics: a general approach for system architecture modeling and code generation,x,,,x,,,,,,,NO,
S878,2,bkwd,webpage,,,,,https://apps.dtic.mil/sti/citations/ADA455842,,,The Architecture Analysis & Design Language (AADL): An Introduction,x,,,,,,,,,,NO,
S877,2,bkwd,webpage,,,,,https://ieeexplore.ieee.org/abstract/document/4776814?casa_token=CubNSfoNZXQAAAAA:-aaYDBkqmqnTyjh6YB7M0nVTbVtNV19njTvaRFLzJ11ZfiYf29_GzTcuOxs70d___iobse6G3is,,,The SAE Architecture Analysis & Design Language (AADL) a standard for engineering performance critical systems | IEEE Conference Publication | IEEE Xplore,x,,,,,,,,,,NO,
S876,2,bkwd,journalArticle,,"Quigley, Morgan; Gerkey, Brian; Conley, Ken; Faust, Josh; Foote, Tully; Leibs, Jeremy; Berger, Eric; Wheeler, Rob; Ng, Andrew",,,,"This paper gives an overview of ROS, an opensource robot operating system. ROS is not an operating system in the traditional sense of process management and scheduling; rather, it provides a structured communications layer above the host operating systems of a heterogenous compute cluster. In this paper, we discuss how ROS relates to existing robot software frameworks, and brieﬂy overview some of the available application software which uses ROS.",,ROS: an open-source Robot Operating System,,x,,,,,,,,,NO,
S875,2,bkwd,journalArticle,2019,"Dehnavi, Saeid; Sedaghatbaf, Ali; Salmani, Bahar; Sirjani, Marjan; Kargahi, Mehdi; Khamespanah, Ehsan",Procedia Computer Science,10.1016/j.procs.2019.08.012,https://www.sciencedirect.com/science/article/pii/S1877050919309263,"Robotic technology helps humans in different areas such as manufacturing, health care and education. Due to the ubiquitous revolution, today’s focus is on mobile robots and their applications in a variety of cyber-physical systems. ROS is a wll-known and powerful middleware that facilitates software development for mobile robots. However, this middleware does not support assuring properties such as timeliness and safety of ROS-based software. In this paper we present an integration of Timed Rebeca modeling language with ROS to synthesize verified robotic software. First, a conceptual model of robotic programs is developed using Timed Rebeca. After verifying a set of user-defined correctness properties on this model, it is translated to a ROS program automatically. Experiments on some small-scale case studies illustrates the applicability of the proposed integration method.",Model Checking; Robotics; ROS; Formal Verification; Mobility; Model-Based Design; Timed Rebeca,Towards an Actor-based Approach to Design Verified ROS-based Robotic Programs using Rebeca,,,,x,,,,,x,,NO,
S874,2,bkwd,conferencePaper,2012,"Khamespanah, Ehsan; Sabahi Kaviani, Zeynab; Khosravi, Ramtin; Sirjani, Marjan; Izadi, Mohammad-Javad","Proceedings of the 2nd edition on Programming systems, languages and applications based on actors, agents, and decentralized control abstractions",10.1145/2414639.2414645,https://doi.org/10.1145/2414639.2414645,"""Timed-Rebeca"" is an actor-based modeling language for modeling real-time reactive systems. Its high-level constructs make it more suitable for using it by software practitioners compared to timed-automata based alternatives. Currently, the verification of Timed-Rebeca models is done by converting into timed-automata and using UPPAAL toolset to analyze the model. However, state space explosion and time consumption are the major limitations of using the back-end timed automata model for verification. In this paper, we propose a new approach for direct schedulability checking and deadlock freedom verification of Timed-Rebeca models. The new approach exploits the key feature of Timed-Rebeca, which is encapsulation of concurrent elements. In the proposed method, each state stores the local time of each actor separately, avoiding the need for a global time in the state. This significantly decreases the size of the state space. We prove the bisimilarity of the generated transition system (called floating-time transition system) and the state space generated based on Timed-Rebeca semantics. Also, we provide experimental results showing that the new approach mitigates the state space explosion problem of the former method and allows model-checking of larger problems.",verification; actor model; deadlock; realtime systems; schedulability; timed-rebeca,Timed-rebeca schedulability and deadlock-freedom analysis using floating-time transition system,x,,,x,,,,,,,NO,
S873,2,bkwd,conferencePaper,2008,"Ölveczky, Peter Csaba; Meseguer, José",Tools and Algorithms for the Construction and Analysis of Systems,10.1007/978-3-540-78800-3_23,,"Real-Time Maude is a rewriting-logic-based tool supporting the formal specification and analysis of real-time systems. Our tool emphasizes expressiveness and ease of specification over algorithmic decidability of key properties, and provides a spectrum of analysis methods, including symbolic simulation, and unbounded and time-bounded reachability analysis and LTL model checking. Real-Time Maude has proved well suited to analyze both correctness and performance of large and complex real-time systems, including state-of-the-art schedulers, network protocols, and wireless sensor network algorithms.",Linear Temporal Logic; Model Check; Multicast Protocol; Sensor Node; Wireless Sensor Network,The Real-Time Maude Tool,x,,,x,,,,,,,NO,
S872,2,bkwd,journalArticle,,"Dormoy, François",,,,SCADE Version 6 is both a language and a Safety Critical Development Environment that brings a new Unified Modeling Style that provides a seamless and safe flow from system to software engineering. This flow relies on strong foundations where safety is considered at each step that allows engineers to focus on key issues whilst removing a significant part of the burden of the development process.,,SCADE 6 A Model Based Solution For Safety Critical Software Development,x,,,,,,,,,,NO,
S871,2,bkwd,conferencePaper,1991,"Yi, Wang","Automata, Languages and Programming",10.1007/3-540-54233-7_136,,"This paper shows how to put time into Milner's CCS to model real time systems. In particular, we will develop an expansion theorem for real time concurrency, which is an extension of the expansion theorem of CCS. The essential step made in this work is that a more general form of action prefix, μ@t.P is introduced, where t is a time variable. Intuitively, μ@t.P is an agent which may perform μ and become P[d/t] in doing so, where t is replaced by d, the time delay before μ is actually performed. The original form μ.P of action prefix of CCS is just a simple case of μ@t.P when t does not occur free in P — P does not depend on the time at which μ is performed.",Atomic Action; Controllable Action; Label Transition System; Real Time System; Weak Equivalence,CCS + time = an interleaving model for real time systems,x,,,,,,,,,,NO,
S870,2,bkwd,conferencePaper,2004,"Amnell, Tobias; Fersman, Elena; Mokrushin, Leonid; Pettersson, Paul; Yi, Wang",Formal Modeling and Analysis of Timed Systems,10.1007/978-3-540-40903-8_6,,"Times is a tool suite designed mainly for symbolic schedulability analysis and synthesis of executable code with predictable behaviours for real-time systems. Given a system design model consisting of (1) a set of application tasks whose executions may be required to meet mixed timing, precedence, and resource constraints, (2) a network of timed automata describing the task arrival patterns and (3) a preemptive or non-preemptive scheduling policy, Times will generate a scheduler, and calculate the worst case response times for the tasks. The design model may be further validated using a model checker e.g. UPPAAL and then compiled to executable C-code using the Times compiler. In this paper, we present the design and main features of Times including a summary of theoretical results behind the tool. Times can be downloaded at www.timestool.com.",Executable Code; Precedence Constraint; Schedulability Analysis; Schedule Policy; Sporadic Task,TIMES: A Tool for Schedulability Analysis and Code Generation of Real-Time Systems,x,,,,,,,,,,NO,
S869,2,bkwd,conferencePaper,2017,"Li, Xinxin; Wang, Rui; Jiang, Yu; Guan, Yong; Li, Xiaojuan; Song, Xiaoyu",2017 22nd International Conference on Engineering of Complex Computer Systems (ICECCS),10.1109/ICECCS.2017.17,,"Robot control systems are complex cyber-physical systems which are difficult to develop. In this paper, we present a formal model-based automatic code synthesis method which can generate executable C++ code running on the world-wide used Robot Operating System (ROS). The internal interaction behaviors of robot systems are modeled as a network of timed automata. The safety requirements and specifications related to the model are formalized as CTL formulas and verified by Uppaal. We design a code synthesis method to generate the executable C++ code from the verified model. Compared to existing code generators based on timed automata, our method supports more complex structures and advanced features such as timer and committed location, and provides the important abstraction and mapping of ROS instructions, which realize the seamless connection between the generated code and ROS. A case study of grasping a cup by a robot with seven degrees of freedom manipulator is conducted and the generated codes are successfully applied to a ROS development environment.",Unified modeling language; Generators; Automata; Verification; Tools; Automatic code synthesis; C++ languages; Formal model; Manipulators; Robot system,Formal Modeling and Automatic Code Synthesis for Robot System,,,,,,,,,,,,
S868,2,bkwd,conferencePaper,2016,"Adam, Sorin; Kuhrmann, Marco; Schultz, Ulrik Pagh",2016 IEEE 21st International Conference on Emerging Technologies and Factory Automation (ETFA),10.1109/ETFA.2016.7733545,,"Mobile robots are advanced systems that often need to operate in unstructured environments, which increases software complexity. Many components are key to the overall reliability and safety of a robot, yet reducing the risk of errors by making the software resilient is both complicated and expensive. A commercially successful robot has to remain safe while providing as much as possible from the functionality required; even in the presence of partial failures. In this paper, we propose a flexible approach to improve the reliability of existing robot software, which enables a wide range of strategies for graceful degradation in the presence of partial failures. We use standard virtualization techniques as a means to encapsulate the safety-critical parts and to separate these from the non-critical parts of the system. An automatically generated runtime monitoring component realizes a fast switching between different implementations of the non-critical parts of the system to ensure continuous service delivery even in partial failure situations. We present the overall architecture and insights into a reference implementation, and we demonstrate our approach by simulating software failures for a commercial mobile robot.",Computer architecture; Virtualization; Software; Switches; Robustness; Robots; Safety,Towards a virtual machine approach to resilient and safe mobile robots,x,,,x,,,,,,,NO,
S867,2,bkwd,conferencePaper,2014,"Huang, Jeff; Erdogan, Cansu; Zhang, Yi; Moore, Brandon; Luo, Qingzhou; Sundaresan, Aravind; Rosu, Grigore",Runtime Verification,10.1007/978-3-319-11164-3_20,,"We present ROSRV, a runtime verification framework for robotic applications on top of the Robot Operating System (ROS [8]), a widely used open-source framework for robot software development. ROSRV aims to address the safety and security issues of robots by providing a transparent monitoring infrastructure that intercepts and monitors the commands and messages passing through the system. Safety and security properties can be defined in a formal specification language, and are ensured by automatically generated monitors. ROSRV integrates seamlessly with ROS—no change in ROS nor the application code is needed. ROSRV has been applied and evaluated on a commercial robot.",Linear Temporal Logic; Virtual Machine Monitor; Robot Operating System; Access Control Policy; Runtime Verification,ROSRV: Runtime Verification for Robots,,,,x,,,,,,,NO,
S866,2,bkwd,journalArticle,2016,"Webster, Matt; Dixon, Clare; Fisher, Michael; Salem, Maha; Saunders, Joe; Koay, Kheng Lee; Dautenhahn, Kerstin; Saez-Pons, Joan",IEEE Transactions on Human-Machine Systems,10.1109/THMS.2015.2425139,,"It is essential for robots working in close proximity to people to be both safe and trustworthy. We present a case study on formal verification for a high-level planner/scheduler for the Care-O-bot, an autonomous personal robotic assistant. We describe how a model of the Care-O-bot and its environment was developed using Brahms, a multiagent workflow language. Formal verification was then carried out by automatically translating this model to the input language of an existing model checker. Four sample properties based on system requirements were verified. We then refined the environment model three times to increase its accuracy and the persuasiveness of the formal verification results. The first refinement uses a user activity log based on real-life experiments, but is deterministic. The second refinement uses the activities from the user activity log nondeterministically. The third refinement uses “conjoined activities” based on an observation that many user activities can overlap. The four samples properties were verified for each refinement of the environment model. Finally, we discuss the approach of environment model refinement with respect to this case study.",Software; formal verification; Navigation; model checking; Robot sensing systems; robotics; Autonomous systems; human–robot teams; TV; Watches,Toward Reliable Autonomous Robotic Assistants Through Formal Verification: A Case Study,x,,,x,,,,,,,NO,
S865,2,bkwd,webpage,,,,,https://link.springer.com/article/10.1007/s11721-008-0014-4,,,Massively multi-robot simulation in stage | SpringerLink,x,,,,,,,,,,NO,
S864,2,bkwd,webpage,,,,,https://www.sciencedirect.com/science/article/pii/S0167642316000800,,,PTRebeca: Modeling and analysis of distributed and asynchronous systems - ScienceDirect,x,,,x,,,,,,,NO,
S863,2,bkwd,webpage,,,,,https://www.sciencedirect.com/science/article/pii/S0167642317302423?casa_token=eViE_P742dcAAAAA:5fNxlLZs8xLJo_ZZGA583wN4_1WWfXRhjx2xcavKVWgyzSJQVQ-TDl73hO0psrDMC_qNEvyhkkQ,,,An efficient TCTL model checking algorithm and a reduction technique for verification of timed actor models - ScienceDirect,x,,,,,,,,,,NO,
S862,2,bkwd,conferencePaper,2016,"Khamespanah, Ehsan; Sirjani, Marjan; Viswanathan, Mahesh; Khosravi, Ramtin",Formal Aspects of Component Software,10.1007/978-3-319-28934-2_13,,"The actor model is a concurrent object-based computational model in which event-driven and asynchronously communicating actors are units of concurrency. Actors are widely used in modeling real-time and distributed systems. Floating-Time Transition System (FTTS) is proposed as an alternative semantics for timed actors, and schedulability and deadlock-freedom analysis techniques have been developed for it. The absence of shared variables and blocking send or receive, and the presence of single-threaded actors along with non-preemptive execution of each message server, ensure that the execution of message servers do not interfere with each other. The Floating-Time Transition System semantics exploits this by executing message servers in isolation, and by relaxing the synchronization of progress of time among actors, and thereby has fewer states in the transition system. Considering an actor-based language, we prove a weak bisimulation relation between FTTS and Timed Transition System, which is generally the standard semantic framework for discrete-time systems. Thus, the FTTS semantics preserves event-based branching-time properties. Our experimental results show a significant reduction in the state space for most of the examples we have studied.",Verification; Timed Rebeca; Actor model; Floating Time Transition System; State space reduction; Timed Transition System,Floating Time Transition System: More Efficient Analysis of Timed Actors,x,,,x,,,,,,,NO,
S861,2,bkwd,webpage,,,,,https://content.iospress.com/articles/fundamenta-informaticae/fi63-4-05,,,Modeling and Verification of Reactive Systems using Rebeca - IOS Press,x,,,x,,,,,,,NO,
S860,2,bkwd,journalArticle,2014,"Reynisson, Arni Hermann; Sirjani, Marjan; Aceto, Luca; Cimini, Matteo; Jafari, Ali; Ingolfsdottir, Anna; Sigurdarson, Steinar Hugi",Science of Computer Programming,10.1016/j.scico.2014.01.008,https://www.sciencedirect.com/science/article/pii/S0167642314000239,"In this paper we propose Timed Rebeca as an extension of the Rebeca language that can be used to model distributed and asynchronous systems with timing constraints. Timed Rebeca restricts the modeller to a pure asynchronous actor-based paradigm, where the structure of the model represents the service oriented architecture, while the computational model matches the network infrastructure. The modeller can specify both computational and network delay, and assign deadlines for serving a request. We provide the formal semantics of the language using Structural Operational Semantics, and show its expressiveness by means of examples. We developed a tool for automated translation from Timed Rebeca to the Erlang language, which provides a first implementation of Timed Rebeca. We can use the tool to set the parameters of Timed Rebeca models, which represent the environment and component variables, and use McErlang to run multiple simulations for different settings. The results of the simulations can then be employed to select the most appropriate values for the parameters in the model. Simulation is shown to be an effective analysis support, specially where model checking faces almost immediate state explosion in an asynchronous setting.",Distributed systems; Actor modelling; Analysis; Concurrent system; Timing constraints,Modelling and simulation of asynchronous real-time systems using Timed Rebeca,x,,,x,,,,,,,NO,
S859,2,bkwd,webpage,,,,,https://journals.sagepub.com/doi/full/10.5772/5761,,,"YARP: Yet Another Robot Platform - Giorgio Metta, Paul Fitzpatrick, Lorenzo Natale, 2006",x,,,,,,,,,,NO,
S858,2,bkwd,journalArticle,,"Quigley, Morgan; Gerkey, Brian; Conley, Ken; Faust, Josh; Foote, Tully; Leibs, Jeremy; Berger, Eric; Wheeler, Rob; Ng, Andrew",,,,"This paper gives an overview of ROS, an opensource robot operating system. ROS is not an operating system in the traditional sense of process management and scheduling; rather, it provides a structured communications layer above the host operating systems of a heterogenous compute cluster. In this paper, we discuss how ROS relates to existing robot software frameworks, and brieﬂy overview some of the available application software which uses ROS.",,ROS: an open-source Robot Operating System,,,,x,,,,,,,NO,
S857,2,bkwd,webpage,,,,,https://www.sciencedirect.com/science/article/pii/S0921889010000710?casa_token=w2J1hQ8Nt80AAAAA:Kq-NJ08RnGETkDOdHyRfm8EqEqJKXwB45rlpkaw1aPij5l0Yq8r4UcGmub3kezOrmtUdy1bWEro,,,"Towards cooperation of heterogeneous, autonomous robots: A case study of humanoid and wheeled robots - ScienceDirect",x,,,x,,,,,,,NO,
S856,2,bkwd,conferencePaper,2008,"Lee, Edward A.",2008 11th IEEE International Symposium on Object and Component-Oriented Real-Time Distributed Computing (ISORC),10.1109/ISORC.2008.25,,"Cyber-Physical Systems (CPS) are integrations of computation and physical processes. Embedded computers and networks monitor and control the physical processes, usually with feedback loops where physical processes affect computations and vice versa. The economic and societal potential of such systems is vastly greater than what has been realized, and major investments are being made worldwide to develop the technology. There are considerable challenges, particularly because the physical components of such systems introduce safety and reliability requirements qualitatively different from those in general- purpose computing. Moreover, physical components are qualitatively different from object-oriented software components. Standard abstractions based on method calls and threads do not work. This paper examines the challenges in designing such systems, and in particular raises the question of whether today's computing and networking technologies provide an adequate foundation for CPS. It concludes that it will not be sufficient to improve design processes, raise the level of abstraction, or verify (formally or otherwise) designs that are built on today's abstractions. To realize the full potential of CPS, we will have to rebuild computing and networking abstractions. These abstractions will have to embrace physical dynamics and computation in a unified way.",Feedback loop; Computer networks; Physics computing; embedded systems; Process control; Yarn; Computerized monitoring; Cyber-physical systems; Safety; Software quality; real time; Embedded computing; Investments,Cyber Physical Systems: Design Challenges,x,,,,,,,,,,NO,
S855,2,bkwd,webpage,,,,,"https://books.google.com.br/books?hl=en&lr=&id=zn50DwAAQBAJ&oi=fnd&pg=PT16&dq=F.+L.+Lewis+and+S.+S.+Ge,+Autonomous+Mobile+Robots:+Sensing,+Control,+Decision+Making+and+Applications.+CRC+Press,+2018.&ots=Gho2yx1tTZ&sig=AGy4gFKX2fjw54SNzH9X_CLfRAs&redir_esc=y#v=onepage&q=F.%20L.%20Lewis%20and%20S.%20S.%20Ge%2C%20Autonomous%20Mobile%20Robots%3A%20Sensing%2C%20Control%2C%20Decision%20Making%20and%20Applications.%20CRC%20Press%2C%202018.&f=false",,,"Autonomous Mobile Robots: Sensing, Control, Decision Making and Applications - Google Books",x,,,,,,,,,,NO,
S854,2,bkwd,webpage,,,,,https://www.sciencedirect.com/science/article/pii/S2352648316300149?casa_token=maEwAhl8tpwAAAAA:DBt6vCn730nUFijslRrWeKItkEP6hQIbroOnJ1vbeCUCZLY34_BoYE1mZKu2OJBjLmLbAJXt4as,,,A systematic review of research into how robotic technology can help older people - ScienceDirect,x,,,x,,,,,,,NO,
S853,2,forward,conferencePaper,2021,"Rivera, Sean; State, Radu",Securing Robots: An Integrated Approach for Security Challenges and Monitoring for the Robotic Operating System (ROS),2021 IFIP/IEEE International Symposium on Integrated Network Management (IM),,,"Robotic systems are becoming an ever-increasing part of everyday life due to their capacity to carry out physical tasks on behalf of human beings. Found in nearly every facet of our lives, robotic systems are used domestically, in small and large-scale factories, for the production and processing of agriculture, for military operations, to name a few. The Robotic Operating System (ROS) is the standard operating system used today for the development of modular robotic systems. However, in its development, ROS has been notorious for the absence of security mechanisms, placing people in danger both physically and digitally. This dissertation summary presents the development of a suite of ROS tools, leading up to the development of a modular, secure framework for ROS. An integrated approach for the security of ROS-enabled robotic systems is described, to set a baseline for the continual development to increase ROS security. The work culminates in the ROS security tool ROS-Immunity, combining internal system defense, external system verification, and automated vulnerability detection in an integrated tool that, in conjunction with Secure-ROS, provides a suite of defenses for ROS systems against malicious attackers.",Agriculture; dissertation; integrated; Operating systems; Production facilities; robotics; ROS; security; Security; System verification; Task analysis; Tools,Securing Robots: An Integrated Approach for Security Challenges and Monitoring for the Robotic Operating System (ROS),x,,,,,,,,,NO,
S852,2,forward,journalArticle,2021,"Yaacoub, Jean-Paul A.; Noura, Hassan N.; Salman, Ola; Chehab, Ali","Robotics cyber security: vulnerabilities, attacks, countermeasures, and recommendations",International Journal of Information Security,10.1007/s10207-021-00545-8,https://doi.org/10.1007/s10207-021-00545-8,"The recent digital revolution led robots to become integrated more than ever into different domains such as agricultural, medical, industrial, military, police (law enforcement), and logistics. Robots are devoted to serve, facilitate, and enhance the human life. However, many incidents have been occurring, leading to serious injuries and devastating impacts such as the unnecessary loss of human lives. Unintended accidents will always take place, but the ones caused by malicious attacks represent a very challenging issue. This includes maliciously hijacking and controlling robots and causing serious economic and financial losses. This paper reviews the main security vulnerabilities, threats, risks, and their impacts, and the main security attacks within the robotics domain. In this context, different approaches and recommendations are presented in order to enhance and improve the security level of robotic systems such as multi-factor device/user authentication schemes, in addition to multi-factor cryptographic algorithms. We also review the recently presented security solutions for robotic systems.",,x,,,x,,,,,,,NO,
S851,2,forward,journalArticle,,"Nair, Jayasoorya Jayanthi Surendran",MODELLING AND ANALYSING COLLABORATING HEAVY MACHINES,,,,"Cyber Physical Systems (CPS) consist of embedded computers and networks for controlling and monitoring the physical processes associated with it. In practice, these systems are complex in nature. Also most of the CPS systems handle concurrent and real time operations and they are mostly distributed in architecture. Suitable analysis techniques need to be used in order to design and develop a CPS system. Formal verification is a branch of software engineering which is used to verify the correctness of a design. Model checking is one technique used in formal verification, where a formal model of the real system is developed. This model is used for verify the correctness of the system design against its specified requirements. For model checking, a formal model and a formal specification language is required. There are several formalism available to represent concurrent distributed systems such as Petrinets, Actor models etc. Actor models are suitable for modeling the functional behaviour of distributed and asynchronous systems. If formal verification support could be incorporated with an actor model, it shall be beneficial in analyzing cyber physical systems. In this thesis, we use an actor based modelling language which is supported by formal semantics to analyze a complex cyber physical system. This study aims to analyze the distributed nature and concurrent behaviour of the system and not timing constraints. The system selected for this study is a safety critical system which consists of several autonomous machines which are operating in a fleet manner carrying out concurrent operations at a site. We also analyze the distributed design architecture of autonomous machine individually. The design implementation of the system is developed in a Robot Operating System and the actor based modelling language used for developing the models is ’Reactive Objects Language’ (Rebeca). Thus major tasks of the study include understanding the ROS based system, transformation of ROS elements to Rebeca models and verification of system specific properties. The study outcomes include identification of few mapping patterns between ROS and Rebeca. During this process a reusable algorithm describing the procedure of transforming any ROS code to Rebeca model was developed. Our study results hence proves the potential of Rebeca in verifying real robotic applications.",,MODELLING AND ANALYSING COLLABORATING HEAVY MACHINES,,,x,,,,,,,NO,
S850,2,forward,journalArticle,2019,"Rajapaksha Pathiranage, Subhash",Detecting Abnormal Social Robot Behavior through Emotion Recognition,Master's Theses (2009 -),,https://epublications.marquette.edu/theses_open/570,,,x,,,,,,,,,,NO,
S849,2,forward,webpage,,,Detecting Abnormal Social Robot Behavior through Emotion Recognition - ProQuest,,,https://www.proquest.com/openview/9d9c440cfffac7daf8330f196c26f95f/1?pq-origsite=gscholar&cbl=18750&diss=y,"Explore millions of resources from scholarly journals, books, newspapers, videos and more, on the ProQuest Platform.",,x,,,,,,,,,,NO,
S848,2,forward,webpage,,,"Smart Wonder: Cute, Helpful, Secure Domestic Social Robots - ProQuest",,,https://www.proquest.com/openview/c6015b011044dac270265619c304a8b4/1?pq-origsite=gscholar&cbl=18750&diss=y,"Explore millions of resources from scholarly journals, books, newspapers, videos and more, on the ProQuest Platform.",,x,,,,,,,,,,NO,
S847,2,forward,conferencePaper,2018,"Staffa, Mariacarla; Mazzeo, Giovanni; Sgaglione, Luigi",Hardening ROS via Hardware-assisted Trusted Execution Environment,2018 27th IEEE International Symposium on Robot and Human Interactive Communication (RO-MAN),10.1109/ROMAN.2018.8525696,,"In recent years, humanoid robots have become quite ubiquitous finding wide applicability in many different fields, spanning from education to entertainment and assistance. They can be considered as more complex cyber-physical systems (CPS) and, as such, they are exposed to the same vulnerabilities. This can be very dangerous for people acting that close with these robots, since attackers by exploiting their vulnerabilities, can not only violate people's privacy, but, more importantly, they can command the robot behavior causing them bodily harm, thus leading to devastating consequences. In this paper, we propose a solution not yet investigated in this field, which relies on the use of secure enclaves, which in our opinion could represent a valuable solution for coping with most of the possible attacks, while suggesting developers to adopt such a precaution during the robot design phase.",Hardware; Humanoid robots; Middleware; Robot sensing systems; Security,Hardening ROS via Hardware-assisted Trusted Execution Environment,x,,,,,,,,,NO,
S846,2,forward,journalArticle,2019,"Han, Zhao; Allspaw, Jordan; Norton, Adam; Yanco, Holly A.","Towards A Robot Explanation System: A Survey and Our Approach to State Summarization, Storage and Querying, and Human Interface",arXiv:1909.06418 [cs],,http://arxiv.org/abs/1909.06418,"As robot systems become more ubiquitous, developing understandable robot systems becomes increasingly important in order to build trust. In this paper, we present an approach to developing a holistic robot explanation system, which consists of three interconnected components: state summarization, storage and querying, and human interface. To find trends towards and gaps in the development of such an integrated system, a literature review was performed and categorized around those three components, with a focus on robotics applications. After the review of each component, we discuss our proposed approach for robot explanation. Finally, we summarize the system as a whole and review its functionality.",Computer Science - Robotics,x,,,,,,,,,,NO,
S844,2,forward,journalArticle,2020,"Hu, Chi; Dong, Wei; Yang, Yonghui; Shi, Hao; Zhou, Ge",Runtime Verification on Hierarchical Properties of ROS-Based Robot Swarms,IEEE Transactions on Reliability,10.1109/TR.2019.2923681,,"Various robots are playing critical roles in many areas such as industrial manufacturing, disaster rescuing, unmanned vehicle, and science exploration. Because of the uncertain environment, changed resource, or dynamic system structure at runtime, traditional methods such as testing, model checking, and static analysis used in the development stage are not enough to ensure that the executions of robot control software satisfy specified properties. In this paper, we propose a runtime verification approach called Robots Monitor on Multilayer (RMoM) based on robot operating system (ROS) for monitoring whether the running of a robot swarm violates given temporal properties. To monitor robot system in a comprehensive manner over multiple layers, RMoM unifies resource, communication, robot, and swarm properties into a systemic, hierarchical monitoring framework. A discrete-time Metric Temporal Logic (MTL3) RMoM is proposed for specifying properties with timed and parameterized characteristics in robot swarms. Then, the corresponding three-valued semantics is defined for MTL3-RMoM to generate impartial and anticipatory monitors. Moreover, a hierarchical monitoring specification language high-level specification language (HSL)-RMoM and a series of monitor construction algorithms are proposed to automatically generate monitors for MTL3-RMoM properties on ROS platform. The experiments show that the method can automatically generate the monitors for detecting properties of robot swarms.",Formal specification; monitor generation; Monitoring; Peer-to-peer computing; robot operating system (ROS); robot swarm; Runtime; runtime verification (RV); Safety; Security; Service robots,Runtime Verification on Hierarchical Properties of ROS-Based Robot Swarms,x,,,,,,,,,NO,
S843,2,forward,journalArticle,2019,"Mendia, Gorka Olalde; Juan, Lander Usategui San; Bascaran, Xabier Perez; Calvo, Asier Bilbao; Cordero, Alejandro Hernández; Ugarte, Irati Zamalloa; Rosas, Aday Muñiz; Vilches, David Mayoral; Carbajo, Unai Ayucar; Kirschgens, Laura Alzola; Vilches, Víctor Mayoral; Gil-Uriarte, Endika","Robotics CTF (RCTF), a playground for robot hacking",arXiv:1810.02690 [cs],,http://arxiv.org/abs/1810.02690,"Robots state of insecurity is onstage. There is an emerging concern about major robot vulnerabilities and their adverse consequences. However, there is still a considerable gap between robotics and cybersecurity domains. For the purpose of filling that gap, the present technical report presents the Robotics CTF (RCTF), an online playground to challenge robot security from any browser. We describe the architecture of the RCTF and provide 9 scenarios where hackers can challenge the security of different robotic setups. Our work empowers security researchers to a) reproduce virtual robotic scenarios locally and b) change the networking setup to mimic real robot targets. We advocate for hacker powered security in robotics and contribute by open sourcing our scenarios.",Computer Science - Computers and Society; Computer Science - Robotics,x,,,,,,,,,,NO,
S842,2,forward,conferencePaper,2019,"Rivera, Sean; Lagraa, Sofiane; Nita-Rotaru, Cristina; Becker, Sheila; State, Radu",ROS-Defender: SDN-Based Security Policy Enforcement for Robotic Applications,2019 IEEE Security and Privacy Workshops (SPW),10.1109/SPW.2019.00030,,"We propose ROS-Defender, a holistic approach to secure robotics systems, which integrates a Security Event Management System (SIEM), an intrusion prevention system (IPS) and a firewall for a robotic system. ROS-Defender combines anomaly detection systems at application (ROS) level and network level, with dynamic policy enforcement points using software defined networking (SDN) to provide protection against a large class of attacks. Although SIEMs, IPS, and firewall have been previously used to secure computer networks, ROSDefender is applying them for the specific use case of robotic systems, where security is in many cases an afterthought.","Access control; Linux; Peer-to-peer computing; Robot sensing systems; Robotics, ROS, Security, SDN, OpenVswitch; Servers",ROS-Defender: SDN-Based Security Policy Enforcement for Robotic Applications,x,,,,,,,,,NO,
S841,2,forward,book,2020,"Liu, Shaoshan",Engineering Autonomous Vehicles and Robots: The DragonFly Modular-based Approach,,,,"Offers a step-by-step guide to building autonomous vehicles and robots, with source code and accompanying videos The first book of its kind on the detailed steps for creating an autonomous vehicle or robot, this book provides an overview of the technology and introduction of the key elements involved in developing autonomous vehicles, and offers an excellent introduction to the basics for someone new to the topic of autonomous vehicles and the innovative, modular-based engineering approach called DragonFly. Engineering Autonomous Vehicles and Robots: The DragonFly Modular-based Approach covers everything that technical professionals need to know about: CAN bus, chassis, sonars, radars, GNSS, computer vision, localization, perception, motion planning, and more. Particularly, it covers Computer Vision for active perception and localization, as well as mapping and motion planning. The book offers several case studies on the building of an autonomous passenger pod, bus, and vending robot. It features a large amount of supplementary material, including the standard protocol and sample codes for chassis, sonar, and radar. GPSD protocol/NMEA protocol and GPS deployment methods are also provided. Most importantly, readers will learn the philosophy behind the DragonFly modular-based design approach, which empowers readers to design and build their own autonomous vehicles and robots with flexibility and affordability. Offers progressive guidance on building autonomous vehicles and robots Provides detailed steps and codes to create an autonomous machine, at affordable cost, and with a modular approach Written by one of the pioneers in the field building autonomous vehicles Includes case studies, source code, and state-of-the art research results Accompanied by a website with supplementary material, including sample code for chassis/sonar/radar; GPS deployment methods; Vision Calibration methods Engineering Autonomous Vehicles and Robots is an excellent book for students, researchers, and practitioners in the field of autonomous vehicles and robots.",Computers / Artificial Intelligence / Computer Vision & Pattern Recognition; Technology & Engineering / Electrical,x,,,,,,,,,,NO,
S840,2,forward,conferencePaper,2018,"Miller, Justin; Williams, Andrew B.; Perouli, Debbie",A Case Study on the Cybersecurity of Social Robots,Companion of the 2018 ACM/IEEE International Conference on Human-Robot Interaction,10.1145/3173386.3177078,https://doi.org/10.1145/3173386.3177078,"During the last few years, we have observed a rapid increase in the number of robots that are manufactured and marketed for our homes. These social robots promise to become not just a personal assistant, but a companion that knows its owner»s tastes and habits. As the advances in artificial intelligence move the dream of home robots closer, exploitation techniques that could specifically target these robots need to be thoroughly examined. In this paper, we present our observations from performing an initial vulnerability analysis to a commercial social robot. Our results indicate that both manufacturers and application developers need to take cybersecurity into account when considering the use of their robots.",authentication; cybersecurity; programming application; root privilege; social robots,x,,,,,,,,,,NO,
S839,2,forward,journalArticle,2018,"Liu, Jiajia; Liu, Jianhao","Intelligent and Connected Vehicles: Current Situation, Future Directions, and Challenges",IEEE Communications Standards Magazine,10.1109/MCOMSTD.2018.1700087,,"Given their large retention number worldwide, vehicles, as a very important part of the emerging Internet of Things, have been stably evolving toward becoming highly connected, intelligent, and autonomous. Since the very first experiment on an American Wonder by Francis P Houdina in 1925, autonomous driving has attracted intensive research interest from standards organizations, industry, as well as academia. In this article, we first present an overview of the current progress and achievements, then envision the future evolution directions of autonomous driving systems. Besides describing the representative functional modules, we also discuss the critical enabling technologies, and identify the security concerns and corresponding countermeasures.",Autonomous vehicles; Intelligent vehicles; Path planning; Sensors; Task analysis; Vehicle ad hoc networks,x,,,,,,,,,,NO,
S838,2,forward,conferencePaper,2018,"Giaretta, Alberto; De Donno, Michele; Dragoni, Nicola",Adding Salt to Pepper: A Structured Security Assessment over a Humanoid Robot,"Proceedings of the 13th International Conference on Availability, Reliability and Security",10.1145/3230833.3232807,https://doi.org/10.1145/3230833.3232807,"The rise of connectivity, digitalization, robotics, and artificial intelligence (AI) is rapidly changing our society and shaping its future development. During this technological and societal revolution, security has been persistently neglected, yet a hacked robot can act as an insider threat in organizations, industries, public spaces, and private homes. In this paper, we perform a structured security assessment of Pepper, a commercial humanoid robot. Our analysis, composed by an automated and a manual part, points out a relevant number of security flaws that can be used to take over and command the robot. Furthermore, we suggest how these issues could be fixed, thus, avoided in the future. The very final aim of this work is to push the rise of the security level of IoT products before they are sold on the public market.",Internet of Things (IoT); Penetration Testing; Pepper; Robot; Security,x,,,,,,,,,,NO,
S837,2,forward,journalArticle,2019,"Liu, Shaoshan; Liu, Liangkai; Tang, Jie; Yu, Bo; Wang, Yifan; Shi, Weisong",Edge Computing for Autonomous Driving: Opportunities and Challenges,Proceedings of the IEEE,10.1109/JPROC.2019.2915983,,"Safety is the most important requirement for autonomous vehicles; hence, the ultimate challenge of designing an edge computing ecosystem for autonomous vehicles is to deliver enough computing power, redundancy, and security so as to guarantee the safety of autonomous vehicles. Specifically, autonomous driving systems are extremely complex; they tightly integrate many technologies, including sensing, localization, perception, decision making, as well as the smooth interactions with cloud platforms for high-definition (HD) map generation and data storage. These complexities impose numerous challenges for the design of autonomous driving edge computing systems. First, edge computing systems for autonomous driving need to process an enormous amount of data in real time, and often the incoming data from different sensors are highly heterogeneous. Since autonomous driving edge computing systems are mobile, they often have very strict energy consumption restrictions. Thus, it is imperative to deliver sufficient computing power with reasonable energy consumption, to guarantee the safety of autonomous vehicles, even at high speed. Second, in addition to the edge system design, vehicle-to-everything (V2X) provides redundancy for autonomous driving workloads and alleviates stringent performance and energy constraints on the edge side. With V2X, more research is required to define how vehicles cooperate with each other and the infrastructure. Last, safety cannot be guaranteed when security is compromised. Thus, protecting autonomous driving edge computing systems against attacks at different layers of the sensing and computing stack is of paramount concern. In this paper, we review state-of-the-art approaches in these areas as well as explore potential solutions to address these challenges.",Autonomous vehicles; Connected and autonomous vehicles (CAVs); edge computing; Edge computing; Global navigation satellite system; heterogeneous computing; Real-time systems; Safety; security; Sensors; Vehicle-to-everything; vehicle-to-everything (V2X); vehicular operating system,x,,,,,,,,,,NO,
S836,2,forward,journalArticle,2016,"Nordmann, Arne",,10.6092/JOSER_2016_07_01_P75,https://aisberg.unibg.it//handle/10446/87804,"The development of advanced robotic systems is challenging as expertise from multiple domains needs to be integrated conceptually and technically. Model-driven engineering promises an efﬁcient and ﬂexible approach for developing robotics applications that copes with this challenge. Domain-speciﬁc modeling allows to describe robotics concerns with concepts and notations closer to the respective problem domain. This raises the level of abstraction and results in models that are easier to understand and validate. Furthermore, model-driven engineering allows to increase the level of automation, e.g., through code generation, and to bridge the gap between modeling and implementation. The anticipated results are improved efﬁciency and quality of the robotics systems engineering process. Within this contribution, we survey the available literature on domain-speciﬁc modeling and languages that target core robotics concerns. In total 137 publications were identiﬁed that comply with a set of deﬁned criteria, which we consider essential for contributions in this ﬁeld. With the presented survey, we provide an overview on the state-of-the-art of domain-speciﬁc modeling approaches in robotics. The surveyed publications are investigated from the perspective of users and developers of model-based approaches in robotics along a set of quantitative and qualitative research questions. The presented quantitative analysis clearly indicates the rising popularity of applying domain-speciﬁc modeling approaches to robotics in the academic community. Beyond this statistical analysis, we map the selected publications to a deﬁned set of robotics subdomains and introduce an extended classiﬁcation scheme to allow a ﬁnegrained mapping of publications addressing the architecture and programming of robotics systems. We map the surveyed publications to typical development phases in robotic systems engineering. The resulting classiﬁcation tree shall serve as overview and reference for potential users. Furthermore, we analyze the surveyed contributions from a language engineering viewpoint and discuss aspects such as the methods and tools used for their implementation as well as their documentation status, platform integration, typical use cases and the evaluation strategies used for validation of the proposed approaches. Finally, we conclude with recommendations for discussion in the model-driven engineering and robotics community based on the insights gained in this survey.",,A Survey on Domain-specific Modeling and Languages in Robotics,x,,,x,,,,,,,NO,
S835,2,forward,journalArticle,2020,"Yoon, DeukKyoung; Lin, Ming; Kim, ByeongWoo",,,,"A method of constructing a simulation-based robot platform was investigated for the development of a semi-autonomous vehicle with a manipulator. Hardware development is expensive and time-consuming, and timely detection of errors is a challenge. Therefore, we conducted a system modelling test with the help of simulation, similar to a real robot. For this simulation, the robot platform was built on Robot Operating System (ROS) and Gazebo. ROS provides a variety of features including hardware abstractions and data interfaces between processes. A robot coordinate transformation system was constructed based on URDF to build the simulation platform. For manipulators, we implemented a motion planning algorithm based on the open source MoveIt. The robot system was modeled based on the proposed simulation and its basic operation was verified. The performance of this simulation model was verified using open packages such as SLAM, Navigation, and Manipulation. The functionality of the integrated platform was demonstrated through the performance verification of the simulation-based robot system.",,Construction of a Simulation-Based Robot Platform to Apply Various Algorithms,,x,,,,,,,,,NO,
S834,2,forward,conferencePaper,2020,"Catherman, Davis S.; Tomasz Kaminski, Jakub; Jagetia, Aishwary",2020 SoutheastCon,10.1109/SoutheastCon44009.2020.9368291,,"This work concerns Atlas robot autonomously com-pleting core soccer tasks in a static environment. A soccer ball is localized using robot 2D and 3D perception. The target kicking position is reached in a collision-free manner using robot locomotion and navigation capabilities. The ball is kicked thanks to leg manipulation motion planning. Additionally, FlexBE is used to implement a user in the loop state machine. Generic custom open-source states are used throughout the project and their functionality is tested. An overview of subject-relevant literature, techniques used and experiments performed are provided. We also discuss the system and environment-based limitations in the core project areas.",Atlas; Collision avoidance; FlexBE; Humanoid Robot; Humanoid robots; Locomotion; Navigation; Obstacle Avoidance; Perception; Point Clouds; ROS; Safety; Sports; State Machines; Task analysis; Three-dimensional displays; TOUGH; Two dimensional displays; Vision; Walking,Atlas Humanoid Robot Control with Flexible Finite State Machines for Playing Soccer,,x,,,,,,,,,NO,
S833,2,forward,webpage,,,,,https://www.proquest.com/openview/b86bb8971977c6a485982d26e66f4f12/1?pq-origsite=gscholar&cbl=18750&diss=y,"Explore millions of resources from scholarly journals, books, newspapers, videos and more, on the ProQuest Platform.",,CHRIS ROS Modeling: The Foundation for an Autonomous Systems Workbench - ProQuest,,,,,,,,,x,,NO,
S832,2,forward,conferencePaper,2020,"Steinbrink, Marco; Koch, Philipp; May, Stefan; Jung, Bernhard; Schmidpeter, Michael","Proceedings of the 2020 4th International Conference on Vision, Image and Signal Processing",10.1145/3448823.3448857,https://doi.org/10.1145/3448823.3448857,"In this paper, a novel state machine for mobile robots is described that enables a direct use for exploration and inspection tasks. It offers a graphical user interface (GUI) to supervise the process and to issue commands if necessary. The state machine was developed for the open-source framework Robot Operating System (ROS) and can interface arbitrary algorithms for navigation and exploration. Interfaces to the commonly used ROS navigation stack and the explore_lite package are already included and can be utilized. In addition, routines for mapping and inspection can be added freely to adapt to the area of application. The state machine features a teleoperation mode to which it changes as soon as a respective command was issued. It also implements a software emergency stop and multiplexes all movement commands to the motor controller. To show the state machine's capabilities several simulations and real-world experiments are described in which it was used.",Exploration; Inspection; Mobile Robotics; State Machine,State Machine for Arbitrary Robots for Exploration and Inspection Tasks,,x,,,,,,,,,NO,
S831,2,forward,conferencePaper,2019,"Guadagnino, Tiziano; Corte, Bartolomeo Della; Grisetti, Giorgio",2019 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS40897.2019.8967877,,"In this paper, we present a sonar-based navigation system, designed to deploy a fleet of autonomous mobile platforms at a reasonable cost. In educational and hobbyist contexts, a large number of robots is required. By means of classical navigation approaches, every robot should be provided with accurate vision or range sensors. This limits the maximum number of robots in the fleet, due to the unaffordable cost of these sensors. In contrast to that, our system requires a single platform equipped with a higher quality sensor, used to perform calibration and mapping tasks. The rest of the fleet, able to localize and navigate, is equipped solely with low-cost sonars, providing a notable reduction in the overall cost. We achieve this task by presenting a novel calibration procedure to estimate the sonars extrinsic and adapting a classical monte-carlo localization algorithm to the sonar model, focusing on efficiency. We release an open source implementation of the system to the community.",,Low-cost Sonar Navigation System,x,,,,,,,,,,NO,
S830,2,forward,conferencePaper,2020,"Simplicio, Samuel; dos S. Ferreira, Henrique José; Villela, Gustavo; Costa, Felipe B.; Pavani, Vitor; Rodrigues, Luma; de Farias, Claudio M.",2020 IEEE 23rd International Conference on Information Fusion (FUSION),10.23919/FUSION45008.2020.9190478,,"The UFRJ Nautilus is a student-driven engineering project team at Federal University of Rio de Janeiro, focused on building and designing AUVs to compete in the AUSVI RoboSub Competition. There are several challenges on developing an AUV: location, computer vision, filters, collect and evaluate data from several sensors. The priority of the team was deliver a robot capable of localizing it self on a pool, with more reliability from all hardware and mechanical systems. We have developed a echo-localization algorithm based on the traditional beamforming that considers both time and frequency in order to have a faster and less power intensive procedure, Simulation showed that our algorithm achieved those objectives.",Array signal processing; Hardware; Robot kinematics; Software; Temperature sensors,Development of the UFRJ Nautilus' AUV: A Multisensor Data Fusion case study,x,,,,,,,,,,NO,
S829,2,forward,conferencePaper,2018,"Cai, Kuanqi; Chi, Wenzheng; Meng, Max Qing-Hu",2018 IEEE International Conference on Information and Automation (ICIA),10.1109/ICInfA.2018.8812460,,"It is vital for mobile robots to maintain safe and stable operation in environments with slopes, e.g. airports and shopping malls. Different slopes correspond to different accelerations of robots, and the robot also require different driving forces or braking forces to go up or down different slopes. If the robot does not have the ability to recognize of the slope, it cannot generate suitable commands according to the change of slope. That is to say, when going uphill, the lack of driving force may cause the robot to stagnate on the slope; when downhill, insufficient braking force may cause the robot to lose control. To solve such problems, a slope estimation algorithm is proposed in this paper based on RGB-D camera. Firstly, we use the RGB-D camera to obtain the information of the road surface. Secondly, the edge of the slope is detected by Canny Edge Detection Algorithm. Finally, the slope is estimated based on the mathematical geometry. Experimental studies are carried out to evaluate the proposed slope estimation algorithm. Experimental results show that the slope of the road can be obtained in real time and the average slope estimation error is less than 5°.",Cameras; Depth Camera; Estimation; Image edge detection; Mobile robots; Mobile Robots.; Roads; Robot vision systems; Slope Detection,A Vision-Based Road Surface Slope Estimation Algorithm for Mobile Service Robots in Indoor Environments,x,,,,,,,,,,NO,
S828,2,forward,conferencePaper,2018,"Conner, David C.; Catherman, Davis; Enders, Shannon; Gates, Julie; Gu, Jenny",SoutheastCon 2018,10.1109/SECON.2018.8478933,,"This paper presents a finite state machine-based approach to collaborative manipulation using the Robot Operating System (ROS) compatible MoveIt! planning system and the Flexible Behavior Engine (FlexBE). The system provides new enhanced MoveIt! capabilities and associated FlexBE state implementations that interact via standard ROS ActionLib interfaces. The system enables finite state machine-based planning using MoveIt! and trajectory execution using the standard ROS controllers framework. The software is directly applicable to any robot manipulator modeled with ROS and MoveIt!. In addition to planning and trajectory execution, state implementations also provide access to common functions such as inverse kinematics. The use of FlexBE directly enables adjustable autonomy levels and collaborative autonomy where the operator can verify transitions as needed. The software, which is available open source, is demonstrated on a 6 DOF Kinova MICO2 arm and small Nao humanoid robot.",Collaboration; Manipulators; Planning; Robot kinematics; Software; Standards,Flexible Manipulation: Finite State Machine-based Collaborative Manipulation,,x,,,,,,,,,NO,
S827,2,forward,conferencePaper,2018,"McDonald Hayhurst, John Wesley; Conner, David C.",SoutheastCon 2018,10.1109/SECON.2018.8479047,,"This paper describes a system wide approach to synthesizing executable robot behaviors based on system capabilities. The approach builds upon prior work with the Flexible Behavior Engine (FlexBE), which uses hierarchical finite state machines (HFSM) to implement and execute robot behaviors. This paper extends prior work that integrated Linear Temporal Logic (LTL)-based automata synthesis into FlexBE by automatically generating the required configuration files based on distributed specifications of deployed system capabilities. Given this information, an end user can use existing tools to synthesize a reactive behavioral state machine (if realizable) given task specifications. The paper describes experiments executing synthesized state machines on a small wheeled mobile robot called TurtleBot running the ROS Kinetic system.",Automata; Computer architecture; Engines; Robot kinematics; Task analysis; Tools,Towards Capability-Based Synthesis of Executable Robot Behaviors,x,,,,,,,,,,NO,
S826,2,forward,bookSection,2018,"Conner, David C.; Kohlbrecher, Stefan; Schillinger, Philipp; Romay, Alberto; Stumpf, Alexander; Maniatopoulos, Spyros; Kress-Gazit, Hadas; von Stryk, Oskar",The DARPA Robotics Challenge Finals: Humanoid Robots To The Rescue,,https://doi.org/10.1007/978-3-319-74666-1_12,"This chapter discusses the common reactive high-level behavioral control system used by Team ViGIR and Team Hector on separate robots in the 2015 DARPA Robotics Challenge (DRC) Finals. We present an approach that allows one or more human operators to share control authority with a high-level behavior controller in the form of a finite state machine (automaton). This collaborative autonomy leverages the relative strengths of the robotic system and the (remote) human operators; it increases reliability of the human-robot team performance and decreases the task completion time. This approach is well-suited to disaster scenarios due to the unstructured nature of the environment. The system allows the operators to adjust the robotic system’s autonomy on-the-fly in response to changing circumstances, and to modify pre-defined behaviors as needed. To enable these high-level behaviors, we introduce our system designs for several of the lower-level system capabilities such as footstep planning and template-based object manipulation. We evaluate the proposed approach in the context of our two teams’ participation in the DRC Finals using two different humanoid platforms, and in systematic experiments conducted in the lab afterward. We present a discussion about the lessons learned during the DRC, especially those related to transitioning between operator-centered control and behavior-centered control during competition. Finally, we describe ongoing research beyond the DRC that extends the systems developed during the DRC. All of our described software is available as open source software.",,Collaborative Autonomy Between High-Level Behaviors and Human Operators for Control of Complex Tasks with Different Humanoid Robots,x,,,,,,,,,,NO,
S825,2,forward,journalArticle,2020,"Hu, Chi; Dong, Wei; Yang, Yonghui; Shi, Hao; Zhou, Ge",IEEE Transactions on Reliability,10.1109/TR.2019.2923681,,"Various robots are playing critical roles in many areas such as industrial manufacturing, disaster rescuing, unmanned vehicle, and science exploration. Because of the uncertain environment, changed resource, or dynamic system structure at runtime, traditional methods such as testing, model checking, and static analysis used in the development stage are not enough to ensure that the executions of robot control software satisfy specified properties. In this paper, we propose a runtime verification approach called Robots Monitor on Multilayer (RMoM) based on robot operating system (ROS) for monitoring whether the running of a robot swarm violates given temporal properties. To monitor robot system in a comprehensive manner over multiple layers, RMoM unifies resource, communication, robot, and swarm properties into a systemic, hierarchical monitoring framework. A discrete-time Metric Temporal Logic (MTL3) RMoM is proposed for specifying properties with timed and parameterized characteristics in robot swarms. Then, the corresponding three-valued semantics is defined for MTL3-RMoM to generate impartial and anticipatory monitors. Moreover, a hierarchical monitoring specification language high-level specification language (HSL)-RMoM and a series of monitor construction algorithms are proposed to automatically generate monitors for MTL3-RMoM properties on ROS platform. The experiments show that the method can automatically generate the monitors for detecting properties of robot swarms.",Formal specification; monitor generation; Monitoring; Peer-to-peer computing; robot operating system (ROS); robot swarm; Runtime; runtime verification (RV); Safety; Security; Service robots,Runtime Verification on Hierarchical Properties of ROS-Based Robot Swarms,,,,,,,,,,,,
S824,2,forward,journalArticle,2019,"Muñoz–Bañón, Miguel Á; del Pino, Iván; Candelas, Francisco A.; Torres, Fernando",Applied Sciences,10.3390/app9101997,https://www.mdpi.com/2076-3417/9/10/1997,"Research in mobile robotics requires fully operative autonomous systems to test and compare algorithms in real-world conditions. However, the implementation of such systems remains to be a highly time-consuming process. In this work, we present an robot operating system (ROS)-based navigation framework that allows the generation of new autonomous navigation applications in a fast and simple way. Our framework provides a powerful basic structure based on abstraction levels that ease the implementation of minimal solutions with all the functionalities required to implement a whole autonomous system. This approach helps to keep the focus in any sub-problem of interest (i.g. localization or control) while permitting to carry out experimental tests in the context of a complete application. To show the validity of the proposed framework we implement an autonomous navigation system for a ground robot using a localization module that fuses global navigation satellite system (GNSS) positioning and Monte Carlo localization by means of a Kalman filter. Experimental tests are performed in two different outdoor environments, over more than twenty kilometers. All the developed software is available in a GitHub repository.",autonomous navigation; control; GNSS; Kalman filter; mobile robots; Monte Carlo localization; planning; SLAM,Framework for Fast Experimental Testing of Autonomous Navigation Algorithms,,x,,,,,,,,,NO,
S823,2,forward,conferencePaper,2018,"Pütz, Sebastian; Santos Simón, Jorge; Hertzberg, Joachim",2018 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS.2018.8593829,,"We present Move Base Flex (MBF), a highly flexible, modular, map-independent, open-source navigation framework for use in ROS. MBF provides modular actions for executing plugins for path planning, motion control, and recovery. These actions define interfaces for external executives to allow highly flexible navigation strategies, which can be intertwined with other robot tasks. MBF has been successfully deployed in a professional setting at customer facilities to control robots in highly dynamic environments. We compare MBF with the well-known move_base and present the architecture as well as different deployment approaches, including how MBF can be used with different executives to perform complex navigation tasks interleaved with other robot operations.",Computer architecture; Flexible printed circuits; Navigation; Planning; Robots; Servers; Task analysis,Move Base Flex A Highly Flexible Navigation Framework for Mobile Robots,x,,,x,,,,,,,NO,
S822,2,forward,journalArticle,2017,"Anier, A; Vain, J; Tsiopoulos, L",Proceedings of the Estonian Academy of Sciences,10.3176/proc.2017.1.08,http://www.kirj.ee/?id=28293&tpl=1061&c_tpl=1064,"Cyber-Physical Systems (CPS) present the greatest challenges but also the greatest opportunities in several critical industrial segments such as electronics, automotive and industrial automation. Governing the complexity and design correctness issues of CPS software requires methodologies and tools that address the problems of intrinsic concurrency and timing constraints over a large spectrum of CPS architectures. In this paper we present DTRON, a framework for model-based testing that addresses the issues of distributed execution and real-time constraints imposed by the design of networked CPS. DTRON extends the Uppaal model checking tool and online test execution tool TRON enabling coordination, synchronization, and online distributed testing. The notion of ∆-testability required to guarantee the controllability of distributed tests is one of the main design considerations for DTRON. The core part of the paper presents the architectural solutions for implementing DTRON and then special focus is put on the performance evaluation of the tool taking into account the communication and test adapter delays in networked systems. We demonstrate that the co-use of Spread message serialization service and Network Time Protocol allows reducing ∆ down to the 1 ms range, which is sufﬁcient for testing timing properties of a substantial class of networked CPS. We exemplify the applicability of DTRON with three distributed testing case studies, namely, city street light controller network, interbank trading system, and robot navigation system.",,DTRON: a tool for distributed model-based testing of time critical applications,x,,,,,,,,,,NO,
S821,2,forward,journalArticle,2021,"Malavolta, Ivano; Lewis, Grace A.; Schmerl, Bradley; Lago, Patricia; Garlan, David",Journal of Systems and Software,10.1016/j.jss.2021.110969,https://linkinghub.elsevier.com/retrieve/pii/S0164121221000662,"Methods: We designed and conducted an observational study where we (i) built a dataset of 335 GitHub repositories containing real open-source ROS-based systems, and (ii) mined the repositories to extract and synthesize quantitative and qualitative findings about how roboticists are architecting ROS-based systems. Results: First, we extracted an empirically-grounded overview of the state of the practice for architecting and documenting ROS-based systems. Second, we synthesized a catalog of 47 architecting guidelines for ROS-based systems. Third, the extracted guidelines were validated by 119 roboticists working on real-world open-source ROS-based systems. Conclusion: Roboticists can use our architecting guidelines for applying good design principles to develop robots that meet quality requirements, and researchers can use our results as evidence-based indications about how real-world ROS systems are architected today, thus inspiring future research contributions.",,Mining guidelines for architecting robotics software,,,,,,,,,x,,NO,
S820,2,forward,webpage,,,,,http://eprints.lincoln.ac.uk/id/eprint/31547/,,,Navigation testing for continuous integration in robotics - The Lincoln Repository,x,,,,,,,,,,NO,
S819,2,forward,conferencePaper,2020,"Binch, Adam; Das, Gautham P.; Pulido Fentanes, Jaime; Hanheide, Marc",2020 IEEE International Conference on Robotics and Automation (ICRA),10.1109/ICRA40945.2020.9196550,,"Progress in autonomous mobile robotics has seen significant advances in the development of many algorithms for motion control and path planning. However, robust performance from these algorithms can often only be expected if the parameters controlling them are tuned specifically for the respective robot model, and optimised for specific scenarios in the environment the robot is working in. Such parameter tuning can, depending on the underlying algorithm, amount to a substantial combinatorial challenge, often rendering extensive manual tuning of these parameters intractable. In this paper, we present a framework that permits the use of different navigation actions and/or parameters depending on the spatial context of the navigation task. We consider the respective navigation algorithms themselves mostly as a ""black box"", and find suitable parameters by means of an iterative optimisation, improving for performance metrics in simulated environments. We present a genetic algorithm incorporated into the framework, and empirically show that the resulting parameter sets lead to substantial performance improvements in both simulated and real-world environments in the domain of agricultural robots.",Genetic algorithms; Measurement; Navigation; Optimization; Robots; Robustness; Tuning,Context Dependant Iterative Parameter Optimisation for Robust Robot Navigation,x,,,,,,,,,,NO,
S818,2,forward,conferencePaper,2018,"Santos, André; Cunha, Alcino; Macedo, Nuno","Proceedings of the 9th ACM SIGSOFT International Workshop on Automating TEST Case Design, Selection, and Evaluation",10.1145/3278186.3278195,https://doi.org/10.1145/3278186.3278195,"The Robot Operating System (ROS) is an open source framework for the development of robotic software, in which a typical system consists of multiple processes communicating under a publisher-subscriber architecture. A great deal of development time goes into orchestration and making sure that the communication interfaces comply with the expected contracts (e.g. receiving a message leads to the publication of another message). Orchestration mistakes are only detected during runtime, stressing the importance of component and integration testing in the verification process. Property-based Testing is fitting in this context, since it is based on the specification of contracts and treats tested components as black boxes, but there is no support for it in ROS. In this paper, we present a first approach towards automatic generation of test scripts for property-based testing of various configurations of a ROS system.",Property-based Testing; Robot Operating System; Software Testing; Test Automation,Property-based testing for the robot operating system,,,,,,,,,x,,NO,
S816,2,forward,conferencePaper,2020,"Kolak, Sophia; Afzal, Afsoon; Le Goues, Claire; Hilton, Michael; Timperley, Christopher Steven",2020 IEEE International Conference on Software Maintenance and Evolution (ICSME),10.1109/ICSME46990.2020.00048,,"Over the past eleven years, the Robot Operating System (ROS), has grown from a small research project into the most popular framework for robotics development. Composed of packages released on the Rosdistro package manager, ROS aims to simplify development by providing reusable libraries, tools and conventions for building a robot. Still, developing a complete robot is a difficult task that involves bridging many technical disciplines. Experts who create computer vision packages, for instance, may need to rely on software designed by mechanical engineers to implement motor control. As building a robot requires domain expertise in software, mechanical, and electrical engineering, as well as artificial intelligence and robotics, ROS faces knowledge based barriers to collaboration.In this paper, we examine how the necessity of domain specific knowledge impacts the open source collaboration model. We create a comprehensive corpus of package metadata and dependencies over three years in the ROS ecosystem, analyze how collaboration is structured, and study the dependency network evolution. We find that the most widely used ROS packages belong to a small cluster of foundational working groups (FWGs), each organized around a different domain in robotics. We show that the FWGs are growing at a slower rate than the rest of the ecosystem, in terms of their membership and number of packages, yet the number of dependencies on FWGs is increasing at a faster rate. In addition, we mined all ROS packages on GitHub, and showed that 82% rely exclusively on functionality provided by FWGs. Finally, we investigate these highly influential groups and describe the unique model of collaboration they support in ROS.",Buildings; collaboration; Collaboration; Ecosystems; robot operating system; robotics software; Robots; software ecosystem; software evolution; Software maintenance; Task analysis; Tools,It Takes a Village to Build a Robot: An Empirical Study of The ROS Ecosystem,,,,x,,,,,x,,NO,
S815,2,forward,journalArticle,2019,"Estefo, Pablo; Simmonds, Jocelyn; Robbes, Romain; Fabry, Johan",Journal of Systems and Software,10.1016/j.jss.2019.02.024,https://www.sciencedirect.com/science/article/pii/S0164121219300342,"ROS, the Robot Operating System, offers a core set of software for operating robots that can be extended by creating or using existing packages, making it possible to write robotic software that can be reused on different hardware platforms. With thousands of packages available per stable distribution, encapsulating algorithms, sensor drivers, etc., it is the de facto middleware for robotics. Like any software ecosystem, ROS must evolve in order to keep meeting the requirements of its users. In practice, packages may end up being abandoned between releases: no one may be available to update a package, or newer packages offer similar functionality. As such, we wanted to identify and understand the evolution challenges faced by the ROS ecosystem. In this article, we report our findings after interviewing 19 ROS developers in depth, followed by a focus group (4 participants) and an online survey of 119 ROS community members. We specifically focused on the issues surrounding package reuse and how to contribute to existing packages. To conclude, we discuss the implications of our findings, and propose five recommendations for overcoming the identified issues, with the goal of improving the health of the ROS ecosystem.",Package management; Robot Operating System; Software ecosystems,The Robot Operating System: Package reuse and community dynamics,,,,,,,,,x,,NO,
S814,2,forward,journalArticle,2017,"Ingibergsson, Johann Thor Mogensen; Kraft, Dirk; Schultz, Ulrik Pagh",,,,"Mobile robots are used across many domains from personal care to agriculture. Working in dynamic open-ended environments puts high constraints on the robot perception system, which is critical for the safety of the system as a whole. To achieve the required safety levels the perception system needs to be certiﬁed, but no speciﬁc standards exist for computer vision systems, and the concept of safe vision systems remains largely unexplored. In this paper we present a novel domain-speciﬁc language that allows the programmer to express image quality detection rules for enforcing safety constraints. The language allows developers to increase trustworthiness in the robot perception system, which we argue would increase compliance with safety standards. We demonstrate the usage of the language to improve reliability in a perception pipeline and evaluate it against manually written rules on embedded hardware. The language allows the vision expert to concisely express the safety-related constraints and thereby bridging the gap between domain experts and certiﬁcation authorities.",,Declarative Rule-based Safety for Robotic Perception Systems,x,,,,,,,,,,NO,
S813,2,forward,webpage,,,,,https://publikationen.sulb.uni-saarland.de/handle/20.500.11880/27366,,,Publikationen der UdS: Wandlungsfähige und angepasste Automation in der Automobilmontage mittels durchgängigem modularem Engineering -Am Beispiel der Mensch-Roboter-Kooperation in der Unterbodenmontage-,x,,,,,,,,,,NO,
S812,2,forward,conferencePaper,2018,"Muller, Rainer; Scholer, Matthias; Karkowski, Martin","2018 Fifth International Conference on Internet of Things: Systems, Management and Security",10.1109/IoTSMS.2018.8554528,,"Currently used assembly systems require a high level of flexibility and reconfigurability to face the increased requirements for mass customization and frequent technological changes. This results in an increase of the time-to-manufacture and the manufacturing costs which contests with the goals of the manufacturers. To mitigate the challenges caused by this sophistication, we introduce a holistic approach and a standardized control system. Later on we discuss its functionality and validate it. We have found that utilizing these minimizes the implementation effort and supports developing implementations suitable for industrial applications.",assembly systems; design methodology; modularity; petri nets; service based architecture; workflow; workflow-engine,Increasing the Flexibility of Customized Assembly Systems with a Modular Control System,x,,,,,,,,,,NO,
S811,2,forward,journalArticle,2019,"Müller, Rainer; Scholer, Matthias; Karkowski, Martin",Procedia CIRP,10.1016/j.procir.2019.03.185,https://www.sciencedirect.com/science/article/pii/S2212827119304901,"To face the increased requirements for mass customization and frequent technological changes, currently used assembly systems require a high level of flexibility and re-configurability. These requirements lead to increased time-to-manufacture and manufacturing costs, which goes against manufacturer’s goals. To mitigate the impact of these challenges a holistic approach for planning and programming an assembly system is presented in this paper. The approach will minimize the implementation effort of flexible automation tasks suitable for industrial applications by utilizing a combination of an abstract process description, a virtual model of the assembly system, and a standardized control system",assembly systems; control system; design methodology; modularity; workflow,Generic automation task description for flexible assembly systems,x,,,,,,,,,,NO,
S810,2,forward,conferencePaper,2018,"Witte, Thomas; Tichy, Matthias",2018 IEEE/ACM 1st International Workshop on Robotics Software Engineering (RoSE),,,"Context: The software architecture of complex robot systems is usually divided into components. The software is then the configuration and combination of those components and their connectors. Objective: In the Robot Operating System (ROS), this architectural configuration, the ROS node graph, is partly defined in code and created at run-time. The static information about the architecture in the configuration is limited and checking the consistency at development time is not possible. The full software has to be manually executed to check the consistency and debug configuration errors. Method: We propose an approach and a corresponding tool to analyze ROS nodes and their launch files to check consistency and issue warnings if potential problems are detected. The approach uses both static analysis of the launch files as well as dynamic analysis of individual ROS nodes to reconstruct the node graph without executing the whole launch configuration. The nodes are executed in a sandbox to prevent side effects and enable the integration of the analysis tool, e.g., into automated testing systems. Results: The evaluation on internal and publicly available ROS projects shows that we are able to reconstruct the complete architecture of the system if the nodes implement a common lifecycle. Conclusion: The approach enables ROS developers to avoid creating incompatible architectures and check consistency already at development time. The approach can be extended to also monitor architectural consistency at run time.",Computer architecture; dynamic analysis; Peer-to-peer computing; Prototypes; Robots; ROS; roslaunch; Software architecture; software architecture description; Testing; Tools,Checking Consistency of Robot Software Architectures in ROS,,,,,,,,,,,,
S809,2,forward,journalArticle,2021,"Jeong, Eunjin; Jeong, Dowhan; Ha, Soonhoi",ACM Transactions on Design Automation of Electronic Systems,10.1145/3447680,https://doi.org/10.1145/3447680,"Existing software development methodologies mostly assume that an application runs on a single device without concern about the non-functional requirements of an embedded system such as latency and resource consumption. Besides, embedded software is usually developed after the hardware platform is determined, since a non-negligible portion of the code depends on the hardware platform. In this article, we present a novel model-based software synthesis framework for parallel and distributed embedded systems. An application is specified as a set of tasks with the given rules for execution and communication. Having such rules enables us to perform static analysis to check some software errors at compile-time to reduce the verification difficulty. Platform-specific programs are synthesized automatically after the mapping of tasks onto processing elements is determined. The proposed framework is expandable to support new hardware platforms easily. The proposed communication code synthesis method is extensible and flexible to support various communication methods between devices. In addition, the fault-tolerant feature can be added by modifying the task graph automatically according to the selected fault-tolerance configurations by the user. The viability of the proposed software development methodology is evaluated with a real-life surveillance application that runs on six processing elements.",Code generation; embedded software development; fault tolerance; synchronous dataflow,Dataflow Model&#x2013;based Software Synthesis Framework for Parallel and Distributed Embedded Systems,x,,,,,,,,,,NO,
S808,2,forward,journalArticle,2021,"Inceoglu, Arda; Aksoy, Eren Erdal; Ak, Abdullah Cihan; Sariel, Sanem",arXiv:2011.05817 [cs],,http://arxiv.org/abs/2011.05817,"Safe manipulation in unstructured environments for service robots is a challenging problem. A failure detection system is needed to monitor and detect unintended outcomes. We propose FINO-Net, a novel multimodal sensor fusion based deep neural network to detect and identify manipulation failures. We also introduce a multimodal dataset, containing 229 real-world manipulation data recorded with a Baxter robot. Our network combines RGB, depth and audio readings to effectively detect and classify failures. Results indicate that fusing RGB with depth and audio modalities significantly improves the performance. FINO-Net achieves 98.60% detection and 87.31% classification accuracy on our novel dataset. Code and data are publicly available at https://github.com/ardai/fino-net.",Computer Science - Robotics,FINO-Net: A Deep Multimodal Sensor Fusion Framework for Manipulation Failure Detection,x,,,,,,,,,,NO,
S807,2,forward,journalArticle,2021,"Hammoudeh García, Nadia; Deshpande, Harshavardhan; Santos, André; Kahl, Björn; Bordignon, Mirko",Software and Systems Modeling,10.1007/s10270-021-00873-2,https://doi.org/10.1007/s10270-021-00873-2,"Model-driven engineering (MDE) addresses central aspects of robotics software development. MDE could enable domain experts to leverage the expressiveness of models, while implementation details on different hardware platforms would be handled by automatic code generation. Today, despite strong MDE efforts in the robotics research community, most evidence points to manual code development being the norm. A possible reason for MDE not being accepted by robot software developers could be the wide range of applications and target platforms, which make all-encompassing MDE IDEs hard to develop and maintain. Therefore, we chose to leverage a large corpus of open-source software widely adopted by the robotics community to extract common structures and gain insight on how and where MDE can support the developers to work more efficiently. We pursue modeling as a complement, rather than imposing MDE as separate solution. Our previous work introduced metamodels to describe components, their interactions, and their resulting composition. In this paper, we present two methods based on metamodels for automated generation of models from manually written artifacts: (1) through static code analysis and (2) by monitoring the execution of a running system. For both methods, we present tools that leverage the potentials of our contributions, with a special focus on their application at runtime to observe and diagnose a real system during its execution. A comprehensive example is provided as a walk-through for robotics software practitioners.",,Bootstrapping MDE development from ROS manual code: Part 2—Model generation and leveraging models at runtime,,,,,,,,,x,,NO,
S806,2,forward,book,2020,"Bertrand, Nathalie; Jansen, Nils",,,,"This book constitutes the refereed proceedings of the 18th International Conference on Formal Modeling and Analysis of Timed Systems, FORMATS 2020, held in Vienna, Austria, in September 2020. The 16 full papers and 2 short papers presented in this volume were carefully reviewed and selected from 42 submissions. The papers focus on topics such as foundations and semantics, methods and tools, techniques, algorithms, data structures, and software tools for analyzing timed systems and resolving temporal constraints. Due to the Corona pandemic this conference was held as a virtual event.",,"Formal Modeling and Analysis of Timed Systems: 18th International Conference, FORMATS 2020, Vienna, Austria, September 1-3, 2020, Proceedings",x,,,,,,,,,,NO,
S805,2,forward,thesis,2020,정은진,,,https://s-space.snu.ac.kr/handle/10371/167996,"소프트웨어 설계 생산성 및 유지보수성을 향상시키기 위해 다양한 소프트웨어 개발 방법론이 제안되었지만, 대부분의 연구는 응용 소프트웨어를 하나의 프로세서에서 동작시키는 데에 초점을 맞추고 있다. 또한, 임베디드 시스템을 개발하는 데에 필요한 지연이나 자원 요구 사항에 대한 비기능적 요구 사항을 고려하지 않고 있기 때문에 일반적인 소프트웨어 개발 방법론을 임베디드 소프트웨어를 개발하는 데에 적용하는 것은 적합하지 않다.  이 논문에서는 병렬 및 분산 임베디드 시스템을 대상으로 하는 소프트웨어를 모델로 표현하고, 이를 소프트웨어 분석이나 개발에 활용하는 개발 방법론을 소개한다. 우리의 모델에서 응용 소프트웨어는 계층적으로 표현할 수 있는 여러 개의 태스크로 이루어져 있으며, 하드웨어 플랫폼과 독립적으로 명세한다. 태스크 간의 통신 및 동기화는 모델이 정의한 규약이 정해져 있고, 이러한 규약을 통해 실제 프로그램을 실행하기 전에 소프트웨어 에러를 정적 분석을 통해 확인할 수 있고, 이는 응용의 검증 복잡도를 줄이는 데에 기여한다. 지정한 하드웨어 플랫폼에서 동작하는 프로그램은 태스크들을 프로세서에 매핑한 이후에 자동적으로 합성할 수 있다.  위의 모델 기반 소프트웨어 개발 방법론에서 사용하는 프로그램 합성기를 본 논문에서 제안하였는데, 명세한 플랫폼 요구 사항을 바탕으로 병렬 및 분산 임베디드 시스템을에서 동작하는 코드를 생성한다. 여러 개의 정형적 모델들을 계층적으로 표현하여 응용의 동적 행태를 나타고, 합성기는 여러 모델로 구성된 계층적인 모델로부터 병렬성을 고려하여 태스크를 실행할 수 있다.  또한, 프로그램 합성기에서 다양한 플랫폼이나 네트워크를 지원할 수 있도록 코드를 관리하는 방법도 보여주고 있다. 본 논문에서 제시하는 소프트웨어 개발 방법론은 6개의 하드웨어 플랫폼과 3 종류의 네트워크로 구성되어 있는 실제 감시 소프트웨어 시스템 응용 예제와 이종 멀티 프로세서를 활용하는 원격 딥 러닝 예제를 수행하여 개발 방법론의 적용 가능성을 시험하였다. 또한, 프로그램 합성기가 새로운 플랫폼이나 네트워크를 지원하기 위해 필요로 하는 개발 비용도 실제 측정 및 예측하여 상대적으로 적은 노력으로 새로운 플랫폼을 지원할 수 있음을 확인하였다.   많은 임베디드 시스템에서 예상치 못한 하드웨어 에러에 대해 결함을 감내하는 것을 필요로 하기 때문에 결함 감내에 대한 코드를 자동으로 생성하는 연구도 진행하였다. 본 기법에서 결함 감내 설정에 따라 태스크 그래프를 수정하는 방식을 활용하였으며, 결함 감내의 비기능적 요구 사항을 응용 개발자가 쉽게 적용할 수 있도록 하였다. 또한, 결함 감내 지원하는 것과 관련하여 실제 수동으로 구현했을 경우와 비교하였고, 결함 주입 도구를 이용하여 결함 발생 시나리오를 재현하거나, 임의로 결함을 주입하는 실험을 수행하였다.  마지막으로 결함 감내를 실험할 때에 활용한 결함 주입 도구는 본 논문의 또 다른 기여 사항 중 하나로 리눅스 환경으로 대상으로 응용 영역 및 커널 영역에 결함을 주입하는 도구를 개발하였다. 시스템의 견고성을 검증하기 위해 결함을 주입하여 결함 시나리오를 재현하는 것은 널리 사용되는 방법으로, 본 논문에서 개발된 결함 주입 도구는 시스템이 동작하는 도중에 재현 가능한 결함을 주입할 수 있는 도구이다. 커널 영역에서의 결함 주입을 위해 두 종류의 결함 주입 방법을 제공하며, 하나는 커널 GNU 디버거를 이용한 방법이고, 다른 하나는 ARM 하드웨어 브레이크포인트를 활용한 방법이다. 응용 영역에서 결함을 주입하기 위해 GDB 기반 결함 주입 방법을 이용하여 동일 시스템 혹은 원격 시스템의 응용에 결함을 주입할 수 있다. 결함 주입 도구에 대한 실험은 ODROID-XU4 보드에서 진행하였다.",,Model-based Code Generation Framework for Parallel and Distributed Embedded Systems,x,,,,,,,,,,NO,
S804,2,forward,book,2019,"Ojdanic, Milos",,,http://urn.kb.se/resolve?urn=urn:nbn:se:mdh:diva-43980,DiVA portal is a finding tool for research publications and student theses written at the following 50 universities and research institutions.,,SYSTEMATIC LITERATURE REVIEW OF SAFETY-RELATED CHALLENGES FOR AUTONOMOUS SYSTEMS IN SAFETY-CRITICAL APPLICATIONS,x,,,,,,,,,,NO,
S803,2,forward,conferencePaper,2017,"Loigge, Stefan; Mühlbacher, Clemens; Steinbauer, Gerald; Gspandl, Stephan; Reip, Michael",,,https://graz.pure.elsevier.com/de/publications/a-model-based-fault-detection-diagnosis-and-repair-for-autonomous,,,"A Model-Based Fault Detection, Diagnosis and Repair for Autonomous Robotics systems",x,,,,,,,,,,NO,
S802,2,forward,journalArticle,2016,"Ingibergsson, Johann Thor Mogensen; Suvei, Stefan-Daniel; Hansen, Mikkel Kragh; Christiansen, Peter; Schultz, Ulrik Pagh",arXiv:1603.01965 [cs],,http://arxiv.org/abs/1603.01965,"This paper is an extension to an early presented programming language, called a domain specific language. This paper extends the proposed concept with new sensors and behaviours to address real-life situations. The functionality was tested in lab experiments, and an extension to the earlier concepts is proposed.",Computer Science - Programming Languages; Computer Science - Robotics,Towards a DSL for Perception-Based Safety Systems,x,,,,,,,,,,NO,
S801,2,forward,journalArticle,2016,"Ingibergsson, Johann Thor Mogensen; Schultz, Ulrik Pagh; Kraft, Dirk",arXiv:1601.02778 [cs],,http://arxiv.org/abs/1601.02778,"Agriculture has a high number of fatalities compared to other blue collar fields, additionally population decreasing in rural areas is resulting in decreased work force. These issues have resulted in increased focus on improving efficiency of and introducing autonomy in agriculture. Field robots are an increasingly promising branch of robotics targeted at full automation in agriculture. The safety aspect however is rely addressed in connection with safety standards, which limits the real-world applicability. In this paper we present an analysis of a vision pipeline in connection with functional-safety standards, in order to propose solutions for how to ascertain that the system operates as required. Based on the analysis we demonstrate a simple mechanism for verifying that a vision pipeline is functioning correctly, thus improving the safety in the overall system.",Computer Science - Computers and Society; Computer Science - Robotics,Towards Declarative Safety Rules for Perception Specification Architectures,x,,,,,,,,,,NO,
S800,2,forward,conferencePaper,2019,"Haupt, Nikita Bhardwaj; Liggesmeyer, Peter","Computer Safety, Reliability, and Security",10.1007/978-3-030-26250-1_13,,"Adaptable Autonomous Systems are advanced autonomous systems which not only interact with their environment, but are aware of it and are capable of adapting their behavior and structure accordingly. Since these systems operate in an unknown, dynamic and unstructured safety-critical environment, traditional safety assurance techniques are not sufficient anymore. In order to guarantee safe behavior, possibly at all times in all possible situations, they require methodologies that can observe the system status at runtime and ensure safety accordingly. To this end, we introduce a runtime safety monitoring approach that uses a rule-based safety monitor to observe the system for safety-critical deviations. The approach behaves like a fault tolerance mechanism where, the system continuously monitors itself and activates corrective measures in the event of safety-critical failures, thereby aiding the system to sustain a safe behavior at runtime. We illustrate the presented approach by employing an example from autonomous agricultural domain and discuss the case study with initial findings.",Adaptable Autonomous Systems; Reconfiguration; Runtime safety monitoring; Safety monitor,A Runtime Safety Monitoring Approach for Adaptable Autonomous Systems,x,,,,,,,,,,NO,
S799,2,forward,conferencePaper,2018,"Inceoglu, Arda; Ince, Gökhan; Yaslan, Yusuf; Sariel, Sanem",2018 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS.2018.8594169,,"Handling safety is crucial to achieve lifelong autonomy for robots. Unsafe situations might arise during manipulation in unstructured environments due to noises in sensory feedback, improper action parameters, hardware limitations or external factors. In order to assure safety, continuous execution monitoring and failure detection procedures are mandatory. To this end, we present a multimodal failure monitoring and detection system to detect manipulation failures. Rather than relying only on a single sensor modality, we consider integration of different modalities to get better detection performance in different failure cases. In our system, high level proprioceptive, auditory and visual predicates are extracted by processing each modality separately. Then, the extracted predicates are fused. Experiments on a humanoid robot for tabletop manipulation scenarios indicate that the contribution of each modality is different depending on the action in execution and multimodal fusion results in an overall performance increase in detecting failures compared to the performance attained by unimodal processing.",Grasping; Hidden Markov models; Monitoring; Robot sensing systems; Task analysis; Visualization,"Failure Detection Using Proprioceptive, Auditory and Visual Modalities",x,,,,,,,,,,NO,
S798,2,forward,conferencePaper,2020,"Kempa, Brian; Zhang, Pei; Jones, Phillip H.; Zambreno, Joseph; Rozier, Kristin Yvonne",Formal Modeling and Analysis of Timed Systems,10.1007/978-3-030-57628-8_12,,"Robonaut2 (R2) is a humanoid robot onboard the International Space Station (ISS), performing specialized tasks in collaboration with astronauts. After deployment, R2 developed an unexpected emergent behavior. R2’s inability to distinguish between knee-joint faults (e.g., due to sensor drift versus violated environmental assumptions) began triggering safety-preserving freezes-in-place in the confined space of the ISS, preventing further motion until a ground-control operator determines the root-cause and initiates proper corrective action. Runtime verification (RV) algorithms can efficiently disambiguate the temporal signatures of different faults in real-time. However, no previous RV engine can operate within the limited available resources and specialized platform constraints of R2’s hardware architecture. An attempt to deploy the only runtime verification engine designed for embedded flight systems, R2U2, failed due to resource constraints. We present a significant redesign of the core R2U2 algorithms to adapt to severe resource and certification constraints and prove their correctness. We further define an optimization enabled by our new algorithms and implement the new version of R2U2. We encode specifications describing real-life faults occurring onboard Robonaut2 using Mission-time Linear Temporal Logic (MLTL) and detail our process of specification debugging, validation, and refinement. We deployed this new version of R2U2 on Robonaut2, demonstrating successful real-time fault disambiguation and mitigation triggering of R2’s knee-joint faults without false positives.",MLTL; Online runtime verification; R2U2; Steam-based runtime verification; Temporal logic specification,Embedding Online Runtime Verification for Fault Disambiguation on Robonaut2,x,,,,,,,,,,NO,
S797,2,forward,conferencePaper,2020,"Ferrando, Angelo; Cardoso, Rafael C.; Fisher, Michael; Ancona, Davide; Franceschini, Luca; Mascardi, Viviana",Towards Autonomous Robotic Systems,10.1007/978-3-030-63486-5_40,,"Recently, robotic applications have been seeing widespread use across industry, often tackling safety-critical scenarios where software reliability is paramount. These scenarios often have unpredictable environments and, therefore, it is crucial to be able to provide assurances about the system at runtime. In this paper, we introduce ROSMonitoring, a framework to support Runtime Verification (RV) of robotic applications developed using the Robot Operating System (ROS). The main advantages of ROSMonitoring compared to the state of the art are its portability across multiple ROS distributions and its agnosticism w.r.t. the specification formalism. We describe the architecture behind ROSMonitoring and show how it can be used in a traditional ROS example. To better evaluate our approach, we apply it to a practical example using a simulation of the Mars curiosity rover. Finally, we report the results of some experiments to check how well our framework scales.",,ROSMonitoring: A Runtime Verification Framework for ROS,,,,,,,,,x,,NO,
S796,2,forward,journalArticle,2014,"Adam, Sorin; Schultz, Ulrik Pagh",arXiv:1412.4714 [cs],,http://arxiv.org/abs/1412.4714,"Writing software for controlling robots is a complex task, usually demanding command of many programming languages and requiring significant experimentation. We believe that a bottom-up development process that complements traditional component- and MDSD-based approaches can facilitate experimentation. We propose the use of an internal DSL providing both a tool to interactively create ROS nodes and a behaviour-replacement mechanism to interactively reshape existing ROS nodes by wrapping the external interfaces (the publish/subscribe topics), dynamically controlled using the Python command line interface.",Computer Science - Robotics; Computer Science - Software Engineering,"Towards Interactive, Incremental Programming of ROS Nodes",,x,,,,,,,,,NO,
S795,2,forward,conferencePaper,2015,"Adam, Sorin; Schultz, Ulrik Pagh",Proceedings of the 2015 ACM SIGPLAN International Conference on Generative Programming: Concepts and Experiences,10.1145/2814204.2814215,https://doi.org/10.1145/2814204.2814215,"Spreadsheets are commonly used by non-programmers to store data in a structured form, this data can in some cases be considered to be a program in a domain-specific language (DSL). Unlike ordinary text-based domain-specific languages, there is however currently no formalism for expressing the syntax of such spreadsheet-based DSLs (SDSLs), and there is no tool support for automatically generating language infrastructure such as parsers and IDE support. In this paper we define a simple notion of two-dimensional grammars for SDSLs, and show how such grammars can be used for automatically generating parsers that extract structured data from a spreadsheet in the form of an AST. We demonstrate automatic generation of parsers for a number of examples, including the questionnaire DSL from LWC2014 and a DSL for writing safety specifications.",Domain-specific language; parser; spreadsheet,Towards tool support for spreadsheet-based domain-specific languages,x,,,,,,,,,,NO,
S794,2,forward,conferencePaper,2015,"Ingibergsson, Johann Thor Mogensen; Schultz, Ulrik Pagh; Kuhrmann, Marco",Product-Focused Software Process Improvement,10.1007/978-3-319-26844-6_25,,"Robotics has recently seen an increasing development, and the areas addressed within robotics has extended into domains we consider safety-critical, fostering the development of standards that facilitate the development of safe robots. Safety standards describe concepts to maintain desired reactions or performance in malfunctioning systems, and influence industry regarding software development and project management. However, academia seemingly did not reach the same degree of utilisation of standards. This paper presents the findings from a systematic mapping study in which we study the state-of-the-art in developing software for safety-critical software for autonomous field robots. The purpose of the study is to identify practices used for the development of autonomous field robots and how these practices relate to available safety standards. Our findings from reviewing 49 papers show that standards, if at all, are barely used. The majority of the papers propose various solutions to achieve safety, and about half of the papers refer to non-standardised approaches that mainly address the methodical rather than the development level. The present study thus shows an emerging field still on the quest for suitable approaches to develop safety-critical software, awaiting appropriate standards for this support.",Autonomous field robots; Development practices; Safety; Standards; Systematic mapping study,On the Use of Safety Certification Practices in Autonomous Field Robot Software Development: A Systematic Mapping Study,x,,,,,,,,,,NO,
S793,2,forward,journalArticle,2016,"Adam, Sorin; Larsen, Morten; Jensen, Kjeld; Schultz, Ulrik",Journal of Software Engineering for Robotics,10.6092/JOSER_2016_07_01_P120,,"Safety is a key challenge in robotics, in particular for mobile robots operating in an open and unpredictable environment. Safety certification is desired for commercial robots, but no existing approaches for addressing the safety challenge provide a clearly specified and isolated safety layer, defined in an easily understandable way for facilitating safety certification. In this paper, we propose that functional-safety-critical concerns regarding the robot software be explicitly declared separately from the main program, in terms of externally observable properties of the software. Concretely, we use a Domain-Specific Language (DSL) to declaratively specify a set of safety-related rules that the software must obey, as well as corresponding corrective actions that trigger when rules are violated. Our DSL, integrated with ROS, is shown to be capable of specifying safety-related constraints, and is experimentally demonstrated to enforce safety behaviour in existing robot software. We believe our approach could be extended to other fields to similarly simplify safety certification.",,Rule-based Dynamic Safety Monitoring for Mobile Robots,,x,,,,,,,,,NO,
S792,2,forward,journalArticle,2016,"Ciccozzi, Federico; Di Ruscio, Davide; Malavolta, Ivano; Pelliccione, Patrizio",IEEE Access,10.1109/ACCESS.2016.2613642,,"Robots are meant to replace humans for a broad variety of everyday tasks, such as environmental monitoring or patrolling large public areas for security assurance. The main focus of researchers and practitioners has been on providing tailored software and hardware solutions for very specific and often complex tasks. On one hand, these solutions show great potential and provide advanced capabilities for solving the specific task. On the other hand, the polarized attention to task-specific solutions makes them hard to reuse, customize, and combine. In this paper we propose a family of domain-specific modeling languages for the specification of civilian missions of mobile multi-robot systems. These missions are meant to be described in terms of models that are: 1) closer to the general problem domain; 2) independent from the underlying technologies; 3) ready to be analyzed, simulated, and executed; and 4) extensible to new application domains, thus opening up the use of robots to even non-technical operators. Moreover, we show the applicability of the proposed family of languages in two real-world application domains: unmanned multicopters and autonomous underwater vehicles.",Context; Domain-specific languages; Electronic mail; Hardware; Mobile communication; model-driven engineering; Multi-robot systems; robotics; Robots; software engineering; Unmanned aerial vehicles,Adopting MDE for Specifying and Executing Civilian Missions of Mobile Multi-Robot Systems,x,,,,,,,,,,NO,
S791,2,forward,journalArticle,2019,"Menghi, Claudio; Tsigkanos, Christos; Pelliccione, Patrizio; Ghezzi, Carlo; Berger, Thorsten",IEEE Transactions on Software Engineering,10.1109/TSE.2019.2945329,,"Mobile and general-purpose robots increasingly support our everyday life, requiring dependable robotics control software. Creating such software mainly amounts to implementing their complex behaviors known as missions. Recognizing this need, a large number of domain-specific specification languages has been proposed. These, in addition to traditional logical languages, allow the use of formally specified missions for synthesis, verification, simulation or guiding implementation. For instance, the logical language LTL is commonly used by experts to specify missions as an input for planners, which synthesize the behavior a robot should have. Unfortunately, domain-specific languages are usually tied to specific robot models, while logical languages such as LTL are difficult to use by non-experts. We present a catalog of 22 mission specification patterns for mobile robots, together with tooling for instantiating, composing, and compiling the patterns to create mission specifications. The patterns provide solutions for recurrent specification problems, each of which detailing the usage intent, known uses, relationships to other patterns, and-most importantly-a template mission specification in temporal logic. Our tooling produces specifications expressed in the temporal logics LTL and CTL to be used by planners, simulators or model checkers. The patterns originate from 245 realistic textual mission requirements extracted from the robotics literature, and they are evaluated upon a total of 441 real-world mission requirements and 1251 mission specifications. Five of these reflect scenarios we defined with two well-known industrial partners developing human-size robots. We validated our patterns' correctness with simulators and two different types of real robots.",Natural languages; Service robots; Software; Software engineering; Task analysis; Tools,Specification Patterns for Robotic Missions,x,,,,,,,,,,NO,
S790,2,forward,conferencePaper,2017,"Halder, Raju; Proença, José; Macedo, Nuno; Santos, André",2017 IEEE/ACM 5th International FME Workshop on Formal Methods in Software Engineering (FormaliSE),10.1109/FormaliSE.2017.9,,"Robotic technologies are continuously transforming the domestic and the industrial environments. Recently the Robotic Operating System (ROS), has been widely adopted both by industry and academia, becoming one of the most popular middleware frameworks for developing robot applications. Guaranteeing the correct behaviour of robotic systems is, however, challenging due to their potential for parameterization and heterogeneity. Although different approaches exist, focusing on concrete domain spaces for specific scenarios, no general approach to reason about ROS systems has yet arisen. This paper proposes an approach to model and verify ROS systems using real time properties, focusing on one of the main features of ROS, the communication between nodes. It takes low-level parameters into account, such as queue sizes and timeouts, and uses timed automata as the modelling language. The robot Kobuki is used as a complex case study, over which properties are automatically verified using the UPPAAL model checker, enabling the identification of problematic parameter combinations.",Automata; Clocks; Monitoring; Peer-to-peer computing; Safety; Service robots,Formal Verification of ROS-Based Robotic Applications Using Timed-Automata,,,,x,,,,,x,,NO,
S789,2,forward,journalArticle,2020,"Alhanahnah, Mohannad",arXiv:2012.07196 [cs],,http://arxiv.org/abs/2012.07196,"Robot Operating System (ROS) is widely used in academia and industry, and importantly is leveraged in safety-critical robotic systems. The quality of ROS software can affect the safety and security properties of robotics systems; therefore, reliability and quality are imperative to guarantee. Source code static analysis is a key approach to formally perform software verification. We address two concerns in this paper: (1) conducting a systematic literature review study to provide a complete picture of the existing methods that analyze different aspects of ROS software, (2) performing empirical study to evaluate software properties that can influence the functionality of ROS. We leverage PMD1, an off-the-shelf static analysis tool, to conduct our empirical study over a set of ROS repositories implemented using Java. The survey analysis shows a significant shortcoming in the body of research by the lack of tailored analysis mechanisms for assessing ROS2 code and reveals that the majority of research efforts are centered around ROS1. Our empirical study shows that the Java code of ROS2 does not suffer from serious issues and the majority of the detected alerts are code style issues.",Computer Science - Cryptography and Security; Computer Science - Robotics; Computer Science - Software Engineering,Software Quality Assessment for Robot Operating System,,,,,,,,,x,,NO,
S788,2,forward,journalArticle,2021,"Kate, Sayali; Chinn, Michael; Choi, Hongjun; Zhang, Xiangyu; Elbaum, Sebastian",arXiv:2106.11266 [cs],10.1145/3468264.3468608,http://arxiv.org/abs/2106.11266,"A robotic system continuously measures its own motions and the external world during operation. Such measurements are with respect to some frame of reference, i.e., a coordinate system. A nontrivial robotic system has a large number of different frames and data have to be translated back-and-forth from a frame to another. The onus is on the developers to get such translation right. However, this is very challenging and error-prone, evidenced by the large number of questions and issues related to frame uses on developers' forum. Since any state variable can be associated with some frame, reference frames can be naturally modeled as variable types. We hence develop a novel type system that can automatically infer variables' frame types and in turn detect any type inconsistencies and violations of frame conventions. The evaluation on a set of 180 publicly available ROS projects shows that our system can detect 190 inconsistencies with 154 true positives. We reported 52 to developers and received 18 responses so far, with 15 fixed/acknowledged. Our technique also finds 45 violations of common practices.",Computer Science - Robotics,PHYSFRAME: Type Checking Physical Frames of Reference for Robotic Systems,,,,,x,,,,,,NO,
S787,2,forward,webpage,,,,,https://www.proquest.com/openview/ad627f4ba1395d11a787b8c326de682a/1?pq-origsite=gscholar&cbl=44156,"Explore millions of resources from scholarly journals, books, newspapers, videos and more, on the ProQuest Platform.",,Design-time Detection of Physical-unit Changes in Product Lines - ProQuest,x,,,,,,,,,,NO,
S786,2,forward,conferencePaper,2021,"Wainakh, Yaza; Rauf, Moiz; Pradel, Michael",2021 IEEE/ACM 43rd International Conference on Software Engineering (ICSE),10.1109/ICSE43902.2021.00059,,"Identifier names convey useful information about the intended semantics of code. Name-based program analyses use this information, e.g., to detect bugs, to predict types, and to improve the readability of code. At the core of name-based analyses are semantic representations of identifiers, e.g., in the form of learned embeddings. The high-level goal of such a representation is to encode whether two identifiers, e.g., len and size, are semantically similar. Unfortunately, it is currently unclear to what extent semantic representations match the semantic relatedness and similarity perceived by developers. This paper presents IdBench, the first benchmark for evaluating semantic representations against a ground truth created from thousands of ratings by 500 software developers. We use IdBench to study state-of-the-art embedding techniques proposed for natural language, an embedding technique specifically designed for source code, and lexical string distance functions. Our results show that the effectiveness of semantic representations varies significantly and that the best available embeddings successfully represent semantic relatedness. On the downside, no existing technique provides a satisfactory representation of semantic similarities, among other reasons because identifiers with opposing meanings are incorrectly considered to be similar, which may lead to fatal mistakes, e.g., in a refactoring tool. Studying the strengths and weaknesses of the different techniques shows that they complement each other. As a first step toward exploiting this complementarity, we present an ensemble model that combines existing techniques and that clearly outperforms the best available semantic representation.","Benchmark testing; Lenses; Natural languages; Semantics; Software; Software engineering; source code, Neural Networks, embeddings, identifiers, benchmark; Tools",IdBench: Evaluating Semantic Representations of Identifier Names in Source Code,x,,,x,,,,,,,NO,
S785,2,forward,journalArticle,2021,"Ore, John-Paul; Detweiler, Carrick; Elbaum, Sebastian",ACM Transactions on Software Engineering and Methodology,10.1145/3439775,https://doi.org/10.1145/3439775,"Type annotations connect variables to domain-specific types. They enable the power of type checking and can detect faults early. In practice, type annotations have a reputation of being burdensome to developers. We lack, however, an empirical understanding of how and why they are burdensome. Hence, we seek to measure the baseline accuracy and speed for developers making type annotations to previously unseen code. We also study the impact of one or more type suggestions. We conduct an empirical study of 97 developers using 20 randomly selected code artifacts from the robotics domain containing physical unit types. We find that subjects select the correct physical type with just 51% accuracy, and a single correct annotation takes about 2 minutes on average. Showing subjects a single suggestion has a strong and significant impact on accuracy both when correct and incorrect, while showing three suggestions retains the significant benefits without the negative effects. We also find that suggestions do not come with a time penalty. We require subjects to explain their annotation choices, and we qualitatively analyze their explanations. We find that identifier names and reasoning about code operations are the primary clues for selecting a type. We also examine two state-of-the-art automated type annotation systems and find opportunities for their improvement.",annotations; automated static analysis; dimensional analysis; physical units; program analysis; robotic systems; software reliability; Type checking,"An Empirical Study on Type Annotations: Accuracy, Speed, and Suggestion Effectiveness",x,,,,,,,,,,NO,
S784,2,forward,conferencePaper,2020,"Fischer-Nielsen, Anders; Fu, Zhoulai; Su, Ting; Wąsowski, Andrzej",2020 IEEE/ACM 42nd International Conference on Software Engineering: Software Engineering in Practice (ICSE-SEIP),,,"A dependency bug is a software fault that manifests itself when accessing an unavailable asset. Dependency bugs are pervasive and we all hate them. This paper presents a case study of dependency bugs in the Robot Operating System (ROS), applying mixed methods: a qualitative investigation of 78 dependency bug reports, a quantitative analysis of 1354 ROS bug reports against 19553 reports in the top 30 GitHub projects, and a design of three dependency linters evaluated on 406 ROS packages.The paper presents a definition and a taxonomy of dependency bugs extracted from data. It describes multiple facets of these bugs and estimates that as many as 15% (!) of all reported bugs are dependency bugs. We show that lightweight tools can find dependency bugs efficiently, although it is challenging to decide which tools to build and difficult to build general tools. We present the research problem to the community, and posit that it should be feasible to eradicate it from software development practice.",bugs; build failures; Computer bugs; empirical software engineering; evolution; integration; Libraries; modularity; Operating systems; Robot kinematics; Robots; ROS; Software development management; Tools,The Forgotten Case of the Dependency Bugs : On the Example of the Robot Operating System,,,,,,,,,x,,NO,
S783,2,forward,webpage,,,,,https://www.proquest.com/openview/3225cbe2dba405d904a8b9dd3073e4c1/1?pq-origsite=gscholar&cbl=18750&diss=y,"Explore millions of resources from scholarly journals, books, newspapers, videos and more, on the ProQuest Platform.",,Dimensional Analysis of Robot Software Without Developer Annotations - ProQuest,x,,,,,,,,,,NO,
S782,2,forward,journalArticle,2021,"Albonico, Michel; Malavolta, Ivano; Pinto, Gustavo; Guzman, Emitza; Chinnappan, Katerina; Lago, Patricia",arXiv:2103.13762 [cs],,http://arxiv.org/abs/2103.13762,"Robots are becoming more and more commonplace in many industry settings. This successful adoption can be partly attributed to (1) their increasingly affordable cost and (2) the possibility of developing intelligent, software-driven robots. Unfortunately, robotics software consumes significant amounts of energy. Moreover, robots are often battery-driven, meaning that even a small energy improvement can help reduce its energy footprint and increase its autonomy and user experience. In this paper, we study the Robot Operating System (ROS) ecosystem, the de-facto standard for developing and prototyping robotics software. We analyze 527 energy-related data points (including commits, pull-requests, and issues on ROS-related repositories, ROS-related questions on StackOverflow, ROS Discourse, ROS Answers, and the official ROS Wiki). Our results include a quantification of the interest of roboticists on software energy efficiency, 10 recurrent causes, and 14 solutions of energy-related issues, and their implied trade-offs with respect to other quality attributes. Those contributions support roboticists and researchers towards having energy-efficient software in future robotics projects.",Computer Science - Robotics; Computer Science - Software Engineering,Mining Energy-Related Practices in Robotics Software,,,,,,,,,x,,NO,
S781,2,forward,conferencePaper,2020,"Allamanis, Miltiadis; Barr, Earl T.; Ducousso, Soline; Gao, Zheng",Proceedings of the 41st ACM SIGPLAN Conference on Programming Language Design and Implementation,10.1145/3385412.3385997,https://doi.org/10.1145/3385412.3385997,"Type inference over partial contexts in dynamically typed languages is challenging. In this work, we present a graph neural network model that predicts types by probabilistically reasoning over a program’s structure, names, and patterns. The network uses deep similarity learning to learn a TypeSpace — a continuous relaxation of the discrete space of types — and how to embed the type properties of a symbol (i.e. identifier) into it. Importantly, our model can employ one-shot learning to predict an open vocabulary of types, including rare and user-defined ones. We realise our approach in Typilus for Python that combines the TypeSpace with an optional type checker. We show that Typilus accurately predicts types. Typilus confidently predicts types for 70% of all annotatable symbols; when it predicts a type, that type optionally type checks 95% of the time. Typilus can also find incorrect type annotations; two important and popular open source libraries, fairseq and allennlp, accepted our pull requests that fixed the annotation errors Typilus discovered.",deep learning; graph neural networks; meta-learning; structured learning; type inference,Typilus: neural type hints,x,,,,,,,,,,NO,
S780,2,forward,journalArticle,2021,"Malavolta, Ivano; Lewis, Grace A.; Schmerl, Bradley; Lago, Patricia; Garlan, David",Journal of Systems and Software,10.1016/j.jss.2021.110969,https://linkinghub.elsevier.com/retrieve/pii/S0164121221000662,"Methods: We designed and conducted an observational study where we (i) built a dataset of 335 GitHub repositories containing real open-source ROS-based systems, and (ii) mined the repositories to extract and synthesize quantitative and qualitative findings about how roboticists are architecting ROS-based systems. Results: First, we extracted an empirically-grounded overview of the state of the practice for architecting and documenting ROS-based systems. Second, we synthesized a catalog of 47 architecting guidelines for ROS-based systems. Third, the extracted guidelines were validated by 119 roboticists working on real-world open-source ROS-based systems. Conclusion: Roboticists can use our architecting guidelines for applying good design principles to develop robots that meet quality requirements, and researchers can use our results as evidence-based indications about how real-world ROS systems are architected today, thus inspiring future research contributions.",,Mining guidelines for architecting robotics software,,,,,,,,,x,,NO,
S779,2,forward,conferencePaper,2021,"Rivera, Sean; State, Radu",2021 IFIP/IEEE International Symposium on Integrated Network Management (IM),,,"Robotic systems are becoming an ever-increasing part of everyday life due to their capacity to carry out physical tasks on behalf of human beings. Found in nearly every facet of our lives, robotic systems are used domestically, in small and large-scale factories, for the production and processing of agriculture, for military operations, to name a few. The Robotic Operating System (ROS) is the standard operating system used today for the development of modular robotic systems. However, in its development, ROS has been notorious for the absence of security mechanisms, placing people in danger both physically and digitally. This dissertation summary presents the development of a suite of ROS tools, leading up to the development of a modular, secure framework for ROS. An integrated approach for the security of ROS-enabled robotic systems is described, to set a baseline for the continual development to increase ROS security. The work culminates in the ROS security tool ROS-Immunity, combining internal system defense, external system verification, and automated vulnerability detection in an integrated tool that, in conjunction with Secure-ROS, provides a suite of defenses for ROS systems against malicious attackers.",Agriculture; dissertation; integrated; Operating systems; Production facilities; robotics; ROS; security; Security; System verification; Task analysis; Tools,Securing Robots: An Integrated Approach for Security Challenges and Monitoring for the Robotic Operating System (ROS),,X,,,,,,,,,NO,
S778,2,forward,journalArticle,2021,"Malavolta, Ivano; Lewis, Grace A.; Schmerl, Bradley; Lago, Patricia; Garlan, David",Journal of Systems and Software,10.1016/j.jss.2021.110969,https://www.sciencedirect.com/science/article/pii/S0164121221000662,"Context: The Robot Operating System (ROS) is the de-facto standard for robotics software. However, ROS-based systems are getting larger and more complex and could benefit from good software architecture practices. Goal: We aim at (i) unveiling the state-of-the-practice in terms of targeted quality attributes and architecture documentation in ROS-based systems, and (ii) providing empirically-grounded guidance to roboticists about how to properly architect ROS-based systems. Methods: We designed and conducted an observational study where we (i) built a dataset of 335 GitHub repositories containing real open-source ROS-based systems, and (ii) mined the repositories to extract and synthesize quantitative and qualitative findings about how roboticists are architecting ROS-based systems. Results: First, we extracted an empirically-grounded overview of the state of the practice for architecting and documenting ROS-based systems. Second, we synthesized a catalog of 47 architecting guidelines for ROS-based systems. Third, the extracted guidelines were validated by 119 roboticists working on real-world open-source ROS-based systems. Conclusion: Roboticists can use our architecting guidelines for applying good design principles to develop robots that meet quality requirements, and researchers can use our results as evidence-based indications about how real-world ROS systems are architected today, thus inspiring future research contributions.",Robotics; ROS; Software architecture,Mining guidelines for architecting robotics software,,,,,,,,,x,,NO,
S777,2,forward,conferencePaper,2020,"Kolak, Sophia; Afzal, Afsoon; Le Goues, Claire; Hilton, Michael; Timperley, Christopher Steven",2020 IEEE International Conference on Software Maintenance and Evolution (ICSME),10.1109/ICSME46990.2020.00048,,"Over the past eleven years, the Robot Operating System (ROS), has grown from a small research project into the most popular framework for robotics development. Composed of packages released on the Rosdistro package manager, ROS aims to simplify development by providing reusable libraries, tools and conventions for building a robot. Still, developing a complete robot is a difficult task that involves bridging many technical disciplines. Experts who create computer vision packages, for instance, may need to rely on software designed by mechanical engineers to implement motor control. As building a robot requires domain expertise in software, mechanical, and electrical engineering, as well as artificial intelligence and robotics, ROS faces knowledge based barriers to collaboration.In this paper, we examine how the necessity of domain specific knowledge impacts the open source collaboration model. We create a comprehensive corpus of package metadata and dependencies over three years in the ROS ecosystem, analyze how collaboration is structured, and study the dependency network evolution. We find that the most widely used ROS packages belong to a small cluster of foundational working groups (FWGs), each organized around a different domain in robotics. We show that the FWGs are growing at a slower rate than the rest of the ecosystem, in terms of their membership and number of packages, yet the number of dependencies on FWGs is increasing at a faster rate. In addition, we mined all ROS packages on GitHub, and showed that 82% rely exclusively on functionality provided by FWGs. Finally, we investigate these highly influential groups and describe the unique model of collaboration they support in ROS.",Buildings; collaboration; Collaboration; Ecosystems; robot operating system; robotics software; Robots; software ecosystem; software evolution; Software maintenance; Task analysis; Tools,It Takes a Village to Build a Robot: An Empirical Study of The ROS Ecosystem,,,,,,,,,x,,NO,
S776,2,forward,conferencePaper,2020,"Kolak, Sophia; Afzal, Afsoon; Le Goues, Claire; Hilton, Michael; Timperley, Christopher Steven",2020 IEEE International Conference on Software Maintenance and Evolution (ICSME),10.1109/ICSME46990.2020.00048,,"Over the past eleven years, the Robot Operating System (ROS), has grown from a small research project into the most popular framework for robotics development. Composed of packages released on the Rosdistro package manager, ROS aims to simplify development by providing reusable libraries, tools and conventions for building a robot. Still, developing a complete robot is a difficult task that involves bridging many technical disciplines. Experts who create computer vision packages, for instance, may need to rely on software designed by mechanical engineers to implement motor control. As building a robot requires domain expertise in software, mechanical, and electrical engineering, as well as artificial intelligence and robotics, ROS faces knowledge based barriers to collaboration.In this paper, we examine how the necessity of domain specific knowledge impacts the open source collaboration model. We create a comprehensive corpus of package metadata and dependencies over three years in the ROS ecosystem, analyze how collaboration is structured, and study the dependency network evolution. We find that the most widely used ROS packages belong to a small cluster of foundational working groups (FWGs), each organized around a different domain in robotics. We show that the FWGs are growing at a slower rate than the rest of the ecosystem, in terms of their membership and number of packages, yet the number of dependencies on FWGs is increasing at a faster rate. In addition, we mined all ROS packages on GitHub, and showed that 82% rely exclusively on functionality provided by FWGs. Finally, we investigate these highly influential groups and describe the unique model of collaboration they support in ROS.",Buildings; collaboration; Collaboration; Ecosystems; robot operating system; robotics software; Robots; software ecosystem; software evolution; Software maintenance; Task analysis; Tools,It Takes a Village to Build a Robot: An Empirical Study of The ROS Ecosystem,,,,,,,,,x,,NO,
S775,2,forward,journalArticle,2020,"Mayoral-Vilches, Víctor; García-Maestro, Nuria; Towers, McKenna; Gil-Uriarte, Endika",arXiv:2003.10402 [cs],,http://arxiv.org/abs/2003.10402,"Quality in software is often understood as ""execution according to design purpose"" whereas security means that ""software will not put data or computing systems at risk of unauthorized access."" There seems to be a connection between these two aspects but, how do we integrate both of them in the robotics development cycle? In this article we introduce DevSecOps in Robotics, a set of best practices designed to help roboticists implant security deep in the heart of their development and operations processes. First, we briefly describe DevOps, introduce the value added with DevSecOps and describe and illustrate how these practices may be implemented in the robotics field. We finalize with a discussion on the relationship between security, quality and safety, open problems and future research questions.",Computer Science - Cryptography and Security; Computer Science - Robotics,DevSecOps in Robotics,x,,,,,,,,,,NO,
S774,2,forward,conferencePaper,2020,"Malavolta, Ivano; Lewis, Grace; Schmerl, Bradley; Lago, Patricia; Garlan, David",2020 IEEE/ACM 42nd International Conference on Software Engineering: Software Engineering in Practice (ICSE-SEIP),,,"The Robot Operating System (ROS) is the de-facto standard for robotic software. If on one hand ROS is helping roboticists, e.g., by providing a standardized communication platform, on the other hand ROS-based systems are getting larger and more complex and could benefit from good software architecture practices. This paper presents an observational study aimed at (i) unveiling the state-of the-practice for architecting ROS-based systems and (ii) providing guidance to roboticists about how to properly architect ROS-based systems. To achieve these goals, we (i) build a dataset of 335 GitHub repositories containing real open-source ROS-based systems, (ii) mine the repositories for extracting the state of the practice about how roboticists are architecting them, and (iii) synthesize a catalog of 49 evidence-based guidelines for architecting ROS-based systems. The guidelines have been validated by 77 roboticists working on real-world open-source ROS-based systems.",Computer architecture; Data mining; Documentation; Guidelines; Mining Software Repositories; Open source software; Robotics; Robots; Service robots; Software Architecture,How do you Architect your Robots? State of the Practice and Guidelines for ROS-based Systems,,,,,,,,,x,,NO,
S773,2,forward,journalArticle,2021,"Malavolta, Ivano; Lewis, Grace A.; Schmerl, Bradley; Lago, Patricia; Garlan, David",Journal of Systems and Software,10.1016/j.jss.2021.110969,https://linkinghub.elsevier.com/retrieve/pii/S0164121221000662,"Methods: We designed and conducted an observational study where we (i) built a dataset of 335 GitHub repositories containing real open-source ROS-based systems, and (ii) mined the repositories to extract and synthesize quantitative and qualitative findings about how roboticists are architecting ROS-based systems. Results: First, we extracted an empirically-grounded overview of the state of the practice for architecting and documenting ROS-based systems. Second, we synthesized a catalog of 47 architecting guidelines for ROS-based systems. Third, the extracted guidelines were validated by 119 roboticists working on real-world open-source ROS-based systems. Conclusion: Roboticists can use our architecting guidelines for applying good design principles to develop robots that meet quality requirements, and researchers can use our results as evidence-based indications about how real-world ROS systems are architected today, thus inspiring future research contributions.",,Mining guidelines for architecting robotics software,,,,,,,,,x,,NO,
S772,2,forward,journalArticle,2021,"Malavolta, Ivano; Lewis, Grace A.; Schmerl, Bradley; Lago, Patricia; Garlan, David",Journal of Systems and Software,10.1016/j.jss.2021.110969,https://www.sciencedirect.com/science/article/pii/S0164121221000662,"Context: The Robot Operating System (ROS) is the de-facto standard for robotics software. However, ROS-based systems are getting larger and more complex and could benefit from good software architecture practices. Goal: We aim at (i) unveiling the state-of-the-practice in terms of targeted quality attributes and architecture documentation in ROS-based systems, and (ii) providing empirically-grounded guidance to roboticists about how to properly architect ROS-based systems. Methods: We designed and conducted an observational study where we (i) built a dataset of 335 GitHub repositories containing real open-source ROS-based systems, and (ii) mined the repositories to extract and synthesize quantitative and qualitative findings about how roboticists are architecting ROS-based systems. Results: First, we extracted an empirically-grounded overview of the state of the practice for architecting and documenting ROS-based systems. Second, we synthesized a catalog of 47 architecting guidelines for ROS-based systems. Third, the extracted guidelines were validated by 119 roboticists working on real-world open-source ROS-based systems. Conclusion: Roboticists can use our architecting guidelines for applying good design principles to develop robots that meet quality requirements, and researchers can use our results as evidence-based indications about how real-world ROS systems are architected today, thus inspiring future research contributions.",Robotics; ROS; Software architecture,Mining guidelines for architecting robotics software,,,,,,,,,x,,NO,
S771,2,forward,journalArticle,2017,"Remy, Sekou L.",arXiv:1712.05986 [cs],,http://arxiv.org/abs/1712.05986,"In this work, our aim is to identify whether the choice of virtualization strategy influences the performance of simulations in robotics. Performance is quantified in the error between a reference trajectory and the actual trajectory for the ball moving along the surface of a smooth plate. The two-sample Kolmogorov-Smirnov test is used to assess significance of variations in performance under the different experimental settings. Our results show that the selection of virtualization technology does have a significant effect on simulation, and moreover this effect can be amplified by the use of some operating systems. While these results are a strong cause for caution, they also provide reason for optimism for those considering 'repeatable robotics research' using virtualization.",Computer Science - Networking and Internet Architecture; Computer Science - Robotics,Assessing virtualization effects in simulations of distributed robotics,x,,,,,,,,,,NO,
S770,2,forward,journalArticle,2021,"Azevedo, Fábio; Cardoso, Jaime S.; Ferreira, André; Fernandes, Tiago; Moreira, Miguel; Campos, Luís",Drones,10.3390/drones5020051,https://www.mdpi.com/2504-446X/5/2/51,"The usage of unmanned aerial vehicles (UAV) has increased in recent years and new application scenarios have emerged. Some of them involve tasks that require a high degree of autonomy, leading to increasingly complex systems. In order for a robot to be autonomous, it requires appropriate perception sensors that interpret the environment and enable the correct execution of the main task of mobile robotics: navigation. In the case of UAVs, flying at low altitude greatly increases the probability of encountering obstacles, so they need a fast, simple, and robust method of collision avoidance. This work covers the problem of navigation in unknown scenarios by implementing a simple, yet robust, environment-reactive approach. The implementation is done with both CPU and GPU map representations to allow wider coverage of possible applications. This method searches for obstacles that cross a cylindrical safety volume, and selects an escape point from a spiral for avoiding the obstacle. The algorithm is able to successfully navigate in complex scenarios, using both a high and low-power computer, typically found aboard UAVs, relying only on a depth camera with a limited FOV and range. Depending on the configuration, the algorithm can process point clouds at nearly 40 Hz in Jetson Nano, while checking for threats at 10 kHz. Some preliminary tests were conducted with real-world scenarios, showing both the advantages and limitations of CPU and GPU-based methodologies.",collision avoidance; CPU; depth cameras; GPU; point cloud; spiral; UAV,Efficient Reactive Obstacle Avoidance Using Spirals for Escape,,x,,,,,,,,,NO,
S769,2,forward,journalArticle,2016,"Fernandes, Tiago Santos",,,https://recipp.ipp.pt/handle/10400.22/8250,"Os sistemas autónomos trazem como mais valia aos cenários de busca e salvamento a possibilidade de minimizar a presença de Humanos em situações de perigo e a capacidade de aceder a locais de difícil acesso.  Na dissertação propõe-se endereçar novos métodos para perceção e navegação de veículos aéreos não tripulados (UAV), tendo como foco principal o planeamento de trajetórias e deteção de obstáculos. No que respeita à perceção foi desenvolvido um método para gerar clusters tendo por base os voxels gerados pelo Octomap. Na área de navegação, foram desenvolvidos dois novos métodos de planeamento de trajetórias, GPRM (Grid Probabilistic Roadmap) e PPRM (Particle Probabilistic Roadmap), que tem como método base para o seu desenvolvimento o PRM. O primeiro método desenvolvido, GPRM, espalha as partículas numa grid pré-definida, construindo posteriormente o roadmap na área determinada pela grid e com isto estima o trajeto mais curto até ao ponto destino. O segundo método desenvolvido, PPRM, espalha as partículas pelo cenário de aplicação, gera o roadmap considerando o mapa total e atribui uma probabilidade que irá permitir definir a trajetória otimizada.  Para analisar a performance de cada método em comparação com o PRM, efetua-se a sua avaliação em três cenários distintos com recurso ao simulador MORSE.",,Planeamento de Trajetória para Operações de Busca e Salvamento com UAVs,x,,,,,,,,,,NO,
S768,2,forward,conferencePaper,2017,"Grimm, Cindy M.; Lyman-Holt, Alicia; Smart, William D.",Thirty-First AAAI Conference on Artificial Intelligence,,https://www.aaai.org/ocs/index.php/AAAI/AAAI17/paper/view/14555,"The Robotics Program at Oregon State University has beenrunning an NSF-funded summer Research Experiences forUndergraduates (REU) site since 2014. Over twenty studentsper year (on average) have participated in the site, spendingten weeks embedded in the OSU Robotics Program. Our mainfocus with this REU Site is to give the participants a com-plete research experience, from problem definition to the fi-nal presentation of results, ""in miniature"". Our secondary ed-ucational objectives are: 1) Teach basic non-technical skillsneeded for graduate work, such as time management and lit-erature review, 2) Provide details on how to apply to gradu-ate school and for funding, 3) Clarify what we look for in agraduate student, and 4) Detail what to expect from the grad-uate student experience. In this paper, we describe the over-all structure of the participants’ summer experience, outlinesome of the training materials that we use, describe the moti-vations for our approach, and discuss the lessons that we havelearned after running the program for a number of years.",,A Summer Research Experience in Robotics,x,,,,,,,,,,NO,
S767,2,forward,journalArticle,2018,"Ahmad, Aakash; Pahl, Claus; Altamimi, Ahmed B.; Alreshidi, Abdulrahman",Journal of Computer Science and Technology,10.1007/s11390-018-1887-3,https://doi.org/10.1007/s11390-018-1887-3,"Modern software systems are subject to a continuous evolution under frequently varying requirements and changes in systems’ operational environments. Lehman’s law of continuing change demands for long-living and continuously evolving software to prolong its productive life and economic value by accommodating changes in existing software. Reusable knowledge and practices have proven to be successful for continuous development and evolution of the software effectively and efficiently. However, challenges such as empirical acquisition and systematic application of the reusable knowledge and practices must be addressed to enable or enhance software evolution. We investigate architecture change logs — mining histories of architecture-centric software evolution — to discover change patterns that 1) support reusability of architectural changes and 2) enhance the efficiency of the architecture evolution process. We model architecture change logs as a graph and apply graph-based formalism (i.e., graph mining techniques) to discover software architecture change patterns. We have developed a prototype that enables tool-driven automation and user decision support during software evolution. We have used the ISO-IEC-9126 model to qualitatively evaluate the proposed solution. The evaluation results suggest that the proposed solution 1) enables the reusability of frequent architectural changes and 2) enhances the efficiency of architecture-centric software evolution process. The proposed solution promotes research efforts to exploit the history of architectural changes to empirically discover knowledge that can guide architecture-centric software evolution.",,Mining Patterns from Change Logs to Support Reuse-Driven Evolution of Software Architectures,x,,,,,,,,,,NO,
S766,2,forward,journalArticle,2021,"Albonico, Michel; Malavolta, Ivano; Pinto, Gustavo; Guzman, Emitza; Chinnappan, Katerina; Lago, Patricia",arXiv:2103.13762 [cs],,http://arxiv.org/abs/2103.13762,"Robots are becoming more and more commonplace in many industry settings. This successful adoption can be partly attributed to (1) their increasingly affordable cost and (2) the possibility of developing intelligent, software-driven robots. Unfortunately, robotics software consumes significant amounts of energy. Moreover, robots are often battery-driven, meaning that even a small energy improvement can help reduce its energy footprint and increase its autonomy and user experience. In this paper, we study the Robot Operating System (ROS) ecosystem, the de-facto standard for developing and prototyping robotics software. We analyze 527 energy-related data points (including commits, pull-requests, and issues on ROS-related repositories, ROS-related questions on StackOverflow, ROS Discourse, ROS Answers, and the official ROS Wiki). Our results include a quantification of the interest of roboticists on software energy efficiency, 10 recurrent causes, and 14 solutions of energy-related issues, and their implied trade-offs with respect to other quality attributes. Those contributions support roboticists and researchers towards having energy-efficient software in future robotics projects.",Computer Science - Robotics; Computer Science - Software Engineering,Mining Energy-Related Practices in Robotics Software,,,,,,,,,x,,NO,
S765,2,forward,journalArticle,2019,"Sidharta, Hanugra Aulia; Sidharta, Sidharta; Sari, Wina Permana","Kinetik: Game Technology, Information System, Computer Network, Computing, Electronics, and Control",10.22219/kinetik.v4i2.731,https://kinetik.umm.ac.id/index.php/kinetik/article/view/731,"PETIS (Programable Vehicle with Integrated Sensor) is a research project with goal make a robot that move independently with specific purpose. Due complexity of PETIS, research divide into several important sequence. In this research author focus on sense of sight for PETIS, LIDAR chosen due flexible and comprehensive. There is many LIDAR sensor in marketplace, LDS-01 as one of commercial LIDAR sensor available on market, produced by ROBOTIS as one of low-cost LIDAR sensor. Compare with another sensor that cost more than $1000, LDS-01 just cost lower than $500. On this research study focus with LDS-01 sensor reading, include hardware, software connection, and data handling. Based on this research LDS-01 as LIDAR sensor can read obstacle with minimum 29,9 cm and maximal 290,7 cm. Comparing with datasheet LDS-01 should work from 12 cm through 350 cm.",,2D Mapping and boundary detection using 2D LIDAR sensor for prototyping Autonomous PETIS (Programable Vehicle with Integrated Sensor),x,,,,,,,,,,NO,
S764,2,forward,conferencePaper,2016,"Heikkilä, Tapio; Dobrowiecki, Tadeusz; Dalgaard, Lars",2016 12th IEEE/ASME International Conference on Mechatronic and Embedded Systems and Applications (MESA),10.1109/MESA.2016.7587120,,"In this concept paper the notion of the configurations and configurability is interpreted in the context of robotic and automation systems. A review is given on related methods and techniques, and how configurations relate to system and software life cycles. The modeling principles for configuration based design are outlined and a proposal is made for the design process based on systems and software product line principles, including a completely new way to reuse system model data by storing them as semantic descriptions in SW delivery packages, to be queried by system designers. A tentative design example is presented.",Automation; Configuration; Ontologies; Robot Operating System; Robot sensing systems; Software; Standards; System and Software Product Line; Unified modeling language,Dealing with configurability in robot systems,x,,,,,,,,,,NO,
S763,2,forward,conferencePaper,2020,"Kolak, Sophia; Afzal, Afsoon; Le Goues, Claire; Hilton, Michael; Timperley, Christopher Steven",2020 IEEE International Conference on Software Maintenance and Evolution (ICSME),10.1109/ICSME46990.2020.00048,,"Over the past eleven years, the Robot Operating System (ROS), has grown from a small research project into the most popular framework for robotics development. Composed of packages released on the Rosdistro package manager, ROS aims to simplify development by providing reusable libraries, tools and conventions for building a robot. Still, developing a complete robot is a difficult task that involves bridging many technical disciplines. Experts who create computer vision packages, for instance, may need to rely on software designed by mechanical engineers to implement motor control. As building a robot requires domain expertise in software, mechanical, and electrical engineering, as well as artificial intelligence and robotics, ROS faces knowledge based barriers to collaboration.In this paper, we examine how the necessity of domain specific knowledge impacts the open source collaboration model. We create a comprehensive corpus of package metadata and dependencies over three years in the ROS ecosystem, analyze how collaboration is structured, and study the dependency network evolution. We find that the most widely used ROS packages belong to a small cluster of foundational working groups (FWGs), each organized around a different domain in robotics. We show that the FWGs are growing at a slower rate than the rest of the ecosystem, in terms of their membership and number of packages, yet the number of dependencies on FWGs is increasing at a faster rate. In addition, we mined all ROS packages on GitHub, and showed that 82% rely exclusively on functionality provided by FWGs. Finally, we investigate these highly influential groups and describe the unique model of collaboration they support in ROS.",Buildings; collaboration; Collaboration; Ecosystems; robot operating system; robotics software; Robots; software ecosystem; software evolution; Software maintenance; Task analysis; Tools,It Takes a Village to Build a Robot: An Empirical Study of The ROS Ecosystem,,,,x,,,,,x,,NO,
S762,2,forward,conferencePaper,2020,"Malavolta, Ivano; Lewis, Grace; Schmerl, Bradley; Lago, Patricia; Garlan, David",2020 IEEE/ACM 42nd International Conference on Software Engineering: Software Engineering in Practice (ICSE-SEIP),,,"The Robot Operating System (ROS) is the de-facto standard for robotic software. If on one hand ROS is helping roboticists, e.g., by providing a standardized communication platform, on the other hand ROS-based systems are getting larger and more complex and could benefit from good software architecture practices. This paper presents an observational study aimed at (i) unveiling the state-of the-practice for architecting ROS-based systems and (ii) providing guidance to roboticists about how to properly architect ROS-based systems. To achieve these goals, we (i) build a dataset of 335 GitHub repositories containing real open-source ROS-based systems, (ii) mine the repositories for extracting the state of the practice about how roboticists are architecting them, and (iii) synthesize a catalog of 49 evidence-based guidelines for architecting ROS-based systems. The guidelines have been validated by 77 roboticists working on real-world open-source ROS-based systems.",Computer architecture; Data mining; Documentation; Guidelines; Mining Software Repositories; Open source software; Robotics; Robots; Service robots; Software Architecture,How do you Architect your Robots? State of the Practice and Guidelines for ROS-based Systems,,,,,,,,,x,,NO,
S761,2,forward,journalArticle,2019,"Estefo, Pablo; Simmonds, Jocelyn; Robbes, Romain; Fabry, Johan",Journal of Systems and Software,10.1016/j.jss.2019.02.024,https://www.sciencedirect.com/science/article/pii/S0164121219300342,"ROS, the Robot Operating System, offers a core set of software for operating robots that can be extended by creating or using existing packages, making it possible to write robotic software that can be reused on different hardware platforms. With thousands of packages available per stable distribution, encapsulating algorithms, sensor drivers, etc., it is the de facto middleware for robotics. Like any software ecosystem, ROS must evolve in order to keep meeting the requirements of its users. In practice, packages may end up being abandoned between releases: no one may be available to update a package, or newer packages offer similar functionality. As such, we wanted to identify and understand the evolution challenges faced by the ROS ecosystem. In this article, we report our findings after interviewing 19 ROS developers in depth, followed by a focus group (4 participants) and an online survey of 119 ROS community members. We specifically focused on the issues surrounding package reuse and how to contribute to existing packages. To conclude, we discuss the implications of our findings, and propose five recommendations for overcoming the identified issues, with the goal of improving the health of the ROS ecosystem.",Package management; Robot Operating System; Software ecosystems,The Robot Operating System: Package reuse and community dynamics,,,,,,,,,x,,NO,
S760,2,forward,webpage,,,,,https://e-archivo.uc3m.es/handle/10016/23010,,,Diseño de un robot móvil para estudio de la ocupación en habitaciones,x,,,,,,,,,,NO,
S759,2,forward,thesis,2020,"Ho, Dinh Khanh; Miramond, Benoît; Auguin, Michel",,,https://www.theses.fr/2020COAZ4000,"Les systèmes robotiques mobiles autonomes deviennent de plus en plus complexes avec l’intégration de composants de capteurs et d’actionneurs et de fonctionnalités avancées pour effectuer les missions réelles. Pour ces systèmes techniques, les exigences sont divisées en deux catégories : les exigences fonctionnelles et les exigences non-fonctionnelles. Alors que les exigences fonctionnelles représentent ce que le robot doit faire pour accomplir la mission, les exigences non-fonctionnelles représentent la façon dont le robot exécute la mission. Ainsi, la qualité de service et l’efficacité énergétique d’une mission robotique sont classées dans cette catégorie. L’autonomie de ces systèmes est pleinement atteinte lorsque les exigences fonctionnelles et non-fonctionnelles sont garanties sans aucune intervention humaine ni aucun contrôle externe. Cependant, ces systèmes mobiles sont naturellement confrontés à des contraintes de disponibilité des ressources et de capacité énergétique, notamment dans le cadre de mission à longue durée, ces contraintes deviennent plus critiques. De plus, la performance de ces systèmes est également influencée par des conditions environnementales inattendues et non structurées dans lesquelles ils interagissent. La gestion des ressources et de l’énergie en cours de mission est donc un défi pour les robots mobiles autonomes afin de garantir les objectifs de performance souhaités tout en respectant les contraintes. Dans ce contexte, la capacité du système robotique à prendre conscience de ses propres comportements internes et de son environnement physique et à s’adapter à ces circonstances dynamiques devient importante.Cette thèse porte sur la qualité de service et l’efficacité énergétique des systèmes robotiques mobiles et propose une gestion hiérarchique en cours d’exécution afin de garantir ces objectifs non-fonctionnels de chaque mission robotique. Au niveau de la gestion locale de chaque mission, un MISSION MANAGER utilise un mécanisme de prise de décision fondé sur l’apprentissage par renforcement pour reconfigurer automatiquement certains paramètres clés propres à la mission afin de minimiser le niveau de violation des objectifs de performance et des objectifs énergétiques requis. Au niveau de la gestion globale de l’ensemble du système, un MULTI-MISSION MANAGER s’appuie sur des règles de prise de décision et des techniques de raisonnement par cas pour suivre les ressources du système et les réponses des MISSION MANAGERs afin de décider de réallouer le budget énergétique, de régler la qualité du service et de déclencher l’apprentissage en ligne pour chaque mission robotique. La méthodologie proposée a été prototypée et validée avec succès dans un environnement de simulation et le cadre de gestion est également intégré dans notre système robotique mobile réel basé sur une base mobile de Pioneer-3DX équipée d’une plate-forme embarquée de NVIDIA Jetson Xavier.",Apprentissage par renforcement; Apprentissage par renforcement (intelligence artificielle); Artificial intelligence; Auto-adaptation; Case-based reasoning; Energy management; Exigences non-fonctionnelles; Intelligence artificielle; Management d’énergie; Mobile robotics; Multi-objective decision-making; Non-functional requirements; Prise de décision; Qualité de service; Qualité de Service (télécommunications); Quality of service; Raisonnement par cas; Reinforcement learning; Robotic run-time adaptation; Robotique mobile; Robots mobiles,Gestion des ressources et de l’énergie orientée qualité de service pour les systèmes robotiques mobiles autonomes,x,,,,,,,,,,NO,
S758,2,forward,thesis,2017,이형주,,,https://s-space.snu.ac.kr/handle/10371/133230,"최근의 자동차 산업에서는 전장부품들의 기능안전 중요성이 부각되고 있다. 매년 자동차 제조회사들은 최첨단 운전 보조 시스템이 탑재된 신제품을 경쟁적으로 출시하고 있고, 차량 내에는 이러한 시스템을 위한 ECU(Electronic Control Unit)와 다양한 센서 등 전자장비의 비중이 높아짐은 물론 전자장비를 지원하기 위한 차량용 소프트웨어의 크기와 복잡성이 증가하고 있다. 이러한 상황을 효율적이고 올바르게 관리하기 위하여 ISO 26262 국제표준이 제안되었다. ISO 26262는 전장부품 및 전장시스템의 오작동이 발생할 가능성과 이로 인한 사고발생의 위험이 미치는 영향에 대한 분석 평가를 기반으로 각각의 전장시스템에 자동차 안전성 요구수준(Automotive Safety Integrity Level, ASIL)을 부여하고 각 수준별 만족해야 할 요구사항을 제안하며, 전장부품 및 전장 시스템의 모든 생애주기에서 안전성을 확보하고 관리할 수 있는 표준화된 개발 방법을 제시한다. 한편, 로봇 오퍼레이팅 시스템(Robot Operating System, ROS)은 로봇에 탑재되는 소프트웨어의 빠르고 편리한 작성을 지원하기 위하여 개발되었다. 다양한 라이브러리 제공과 활발한 개발 지원 커뮤니티 등 기존의 자동차 플랫폼에서 제공해 주지 못하는 개발 편의성으로 인해 근래에는 자율주행차량 시나리오 등 기존 전장시스템에서 제공하지 않던 복잡한 기능을 손쉽게 개발하기 위하여 주요 자동차 제조사들이 새로운 자동차 플랫폼으로 점차 도입하고 있다. 하지만, ROS는 소프트웨어의 빠르고 편리한 작성에 초점을 맞추었기 때문에 자동차 플랫폼으로서 반드시 갖추어야 할 안전 기능에 대한 고려가 기존의 자동차 플랫폼들에 비해 상대적으로 미비하다. 이 논문에서는 ROS의 안전 메커니즘들과 ISO 26262에 정의된 소프트웨어 오류 구분을 비교하고, 현재의 ROS가 만족하지 못하는 것으로 분석된 세 가지 정보교환 오류에 대한 개선된 안전기능을 제안하여 ROS가 ISO 26262에 정의된 소프트웨어 오류를 모두 대처할 수 있도록 한다.",,ISO 26262 기능 안전 요구사항을 위한 ROS의 개선된 통신 메커니즘,,,x,,,,,,,,NO,
S756,2,forward,journalArticle,2021,"Portugal, David; Santos, Miguel A.; Pereira, Samuel; Couceiro, Micael S.",Napędy i Sterowanie,,http://yadda.icm.edu.pl/baztech/element/bwmeta1.element.baztech-c4aa8d0e-40ee-4167-b5a3-8dfebc345b0a,,,Bezpieczeństwo aplikacji robotów z wykorzystaniem ROS,,,x,,,,,,,,NO,
S755,2,forward,thesis,2017,최우인,,,https://s-space.snu.ac.kr/handle/10371/133231,"자동차 E/E 시스템 내의 소프트웨어의 규모는 점점 커지고 과거의 펌웨어 수준에 비해 많은 기능이 소프트웨어로 대체됨에 따라 복잡도 또한 높아지고 있다. 특히 자율주행 자동차가 개발되면서 소프트웨어의 관심이 집중되고 있다. 이러한 복잡한 시스템 내 소프트웨어의 신뢰성을 제고시키기 위해서는 주기적으로 프로그램의 행위를 모니터링하여 오류 검출 및 해결하는 작업이 필수적이다. 한편 로봇 진영에서 재사용 가능한 로봇 소프트웨어 플랫폼의 필요성이 대두되어 등장한 ROS (Robot Operating System)는 다양한 개발 지원 도구와 구독/발행의 효율적인 통신방식을 제공하는 오픈 소스 플랫폼으로, 로봇을 넘어서 자율주행 자동차 플랫폼으로의 활용이 시도되고 있다. 프로그램의 상태를 모니터링하는 메커니즘을 제공하는 ROS의 진단 시스템은 오류 검출 및 해결에 있어 비효율적인 메시지 처리 시간과, 메시지 전송 지연이라는 두 가지 지연 요소를 가진다. 오류 검출 및 해결 과정 전체에서 모든 진단 결과 메시지에 대한 리스트를 계속 유지하고 있기 때문에 비효율적인 메시지 처리가 야기되고, 진단 데이터를 수집하는 노드와 오류를 처리하는 노드가 독립적으로 실행되기 때문에 노드 간 메시지 전송 지연을 발생시킨다. 본 논문에서는 설정 가능한 오류 복구 레벨을 정의하고 오류 메시지 선별 처리, 직접 오류 처리 기법을 적용하여 문제를 해결한다. 개선된 ROS 진단 시스템은 실험 결과 기존 시스템에 비해 오류 검출 및 해결 시간을 25.1% 감소시켰다.",,오류 처리 시간 단축을 통한 ROS 진단 시스템 개선,,,,,x,,,,,,NO,
S754,2,forward,webpage,2021,"Taleb, Rania; Khoury, Raphaël; Hallé, Sylvain",Proceedings of the 9th International Conference on Formal Methods in Software Engineering,,https://www.formalise.org,"We define a logical framework that permits runtime verification to take place when a monitor has incomplete or uncertain information about the underlying trace. Uncertainty is modeled as a stateful access control proxy that has the capacity to turn events into sets of possible events, resulting in what we call a ""multi-trace"". We describe a model of both proxy and monitor as extensions of Mealy machines, and provide an algorithm to lift a classical monitor into a sound, loss-tolerant monitor. Experiments on various scenarios show that the approach can account for various types of data degradation and access limitations, provides a tighter verdict than existing works in some cases, and preserves scalable performance of the model.",,Runtime Verification Under Access Restrictions,x,,,,,,,,,,NO,
S753,2,forward,thesis,2019,"Mondou, Damien",,,https://hal.archives-ouvertes.fr/tel-02432536,,adaptation; formal model; human-robot interaction; interaction homme-robot; modélisation formelle,Gestion adaptative des contenus numériques : proposition d'un framework générique par apprentissage et re-scénarisation dynamique,x,,,,,,,,,,NO,
S752,2,forward,journalArticle,2019,"克好, 亘理; 隆夫, 大久保",研究報告コンピュータセキュリティ（CSEC）,,https://ipsj.ixsq.nii.ac.jp/ej/index.php?active_action=repository_view_main_item_detail&page_id=13&block_id=8&item_id=195752&item_no=1,情報学広場 情報処理学会電子図書館,,ロボットオペレーティングシステムのセキュリティ機能に関する考察,x,,,,,,,,,,NO,
S751,2,forward,document,2017,"Masson, Lola; Guiochet, Jérémie; Waeselynck, Hélène; Cabrera, Kalou; Cassel, Sofia; Törngren, Martin",,,https://hal.laas.fr/hal-01637277,"Robots and autonomous system have become a part of our everyday life, therefore guaranteeing their safety is a crucial issue. Among the possible methods for guaranteeing safety, monitoring is widely used, but few methods exist to generate safety rules to implement such monitors. Particularly, building safety monitors that do not constrain excessively the system's ability to perform its tasks is necessary as those systems operate with few human interventions. We propose in this paper a method to take into account the system's desired tasks in the specification of strategies for monitors and apply it to a case study. We show that we can synthesize a more important number of strategies and we facilitate the reasoning about the trade-off between safety and function-alities.",,Tuning permissiveness for active safety monitoring,x,,,,,,,,,,NO,
S750,2,forward,journalArticle,2015,"Dietterich, Thomas G.; Horvitz, Eric J.",Communications of the ACM,10.1145/2770869,https://dl.acm.org/doi/10.1145/2770869,"Research, leadership, and communication about AI futures.",,Rise of concerns about AI: reflections and directions,x,,,,,,,,,,NO,
S749,2,forward,report,2018,"Fu, Yujian; He, Xudong; Dong, Zhijiang",,,https://apps.dtic.mil/sti/citations/AD1057568,"One of the major goals of the DoD information innovation is to build trusted, adaptive, attack-resilient cyber physical systems. To meet this goal, this project aims to deliver a trustworthy computational tool set to enable the development of inherently safe and secure, resilient, and reliable software. To achieve resilience, the project PIs realized an optimization approach of their runtime verification approach to handle dynamic adaptation. To ensure the computing capability is trustworthy, this project studied the overall software intensive life cycle with a complete view through a sequence of systematic steps beginning from requirements, specification, modeling, design, to implementation, testing, verification and validation. To validate the formal methods based tools, a sophisticated, hierarchical proof-of-concept platform was developed and several real world implementation and tests were conducted. With the real time scheduling technique and interaction with the physical components, a sequence of profound findings were discovered and published. The results and findings have disclosed the fact that a model-based integration approach for cyber physical system design and development plays a significant role in its overall trustworthiness and resilience.",,A Runtime Checker with Evolutionary Algorithm decision making,x,,,,,,,,,,NO,
S748,2,forward,book,2020,"Beg, Arshad; Butterfield, Andrew",,,,This document summarises the state-of-the-art of our ultimate goal of formal verification of the ROS based robotic systems.,,Working Document for state of the art - formality meets autonomy/robotics,,,,x,x,,,,,,NO,
S747,2,forward,conferencePaper,2019,"Wei, Wei; Li, Xiaojuan; Guan, Yong; Wang, Rui; Lu, Qian; Zhang, Jie","2019 IEEE Intl Conf on Parallel Distributed Processing with Applications, Big Data Cloud Computing, Sustainable Computing Communications, Social Computing Networking (ISPA/BDCloud/SocialCom/SustainCom)",10.1109/ISPA-BDCloud-SustainCom-SocialCom48970.2019.00097,,"Goal-Feedback-Result (GFR) pattern is widely used for the communication of multiple tasks processing and distributed control systems based on Robotics Operation System(ROS). With the more sensor devices and applications are deployed in service robots, it is getting more important to guarantee the correctness and reliability of structured GFR communication in ROS. Formal analysis and verification of GFR communication and scheduler of tasks in ROS are completed by model checking in this paper. The timed automaton of client process, server process and scheduler are designed for modelling the communication process and scheduling policy. The deadlock-free, schedulability and responsive properties, which are formally described in CTL(Computation Tree Logic) formulas, are verified automatically by model checker. The formal modelling analysis and verification of GFR pattern provide a refined design model and are helpful for avoiding subtle error or bug in early design stage of GFR based robotic system applications.","Analytical models; Automata; Clocks; GFR pattern, task scheduling, timed automaton, model checking; Model checking; Servers; Task analysis",Model Checking for the Goal-Feedback-Result Pattern in ROS,x,,,x,,,,,,,NO,
S746,2,forward,conferencePaper,2021,"Meehan, Charles A.; Baras, John S.",2021 IEEE International Systems Conference (SysCon),10.1109/SysCon48628.2021.9447100,,"Slip detection and correction plays a very important role in robotic manipulation tasks, and it has long been a challenging problem in the robotic community. Further, the advantage of using systems engineering tools and framework to approach a solution and/or modeling of robotic tasks is not often pursued. In this paper, we use Model-Based Systems Engineering techniques to verify system requirements and validate stakeholder requirements for the problem of detecting and correcting for object slippage within a dexterous five-fingered robotic hand. We will discuss how the work accomplished in our laboratory was transferred to a simulated environment and how this simulated environment built in CoppeliaSim was connected to a systems engineering software, Cameo Systems Modeler. Measures of effectiveness were created from the stakeholder requirements for the slippage problem which allowed us to validate the robotic simulation that was built. Structural diagrams of the robotic system and environment were built along with behavioral diagrams of the simulation. Further, we used the connection of Cameo Systems Modeler and CoppeliaSim to track the measures of effectiveness for our robotic task which provided us with a complete systems engineering framework for the problem from the requirements phase through the implementation phase. Our main goal is to show the advantages of following a systems engineering framework to complete a robotic task through the connection of Cameo Systems Modeler and CoppeliaSim.",Laboratories; MBSE; Modeling; Phase measurement; Robotics; Software measurement; Stakeholders; Task analysis; Tools,Model-Based Systems Engineering Applied to the Detection and Correction of Object Slippage within a Dexterous Robotic Hand,x,,,,,,,,,,NO,
S745,2,forward,webpage,,,,,https://114.71.99.91/handle/20.500.11750/12154,,,DGIST Scholar: An Empirical Study on the Attack and Defense of Unmanned Vehicle,x,,,,,,,,,,NO,
S744,2,forward,journalArticle,,"Shivakumar, Sumukh",,,,,,A Language-Based Approach to Run-Time Assurance for Autonomous Systems,x,,,,,,,,,,NO,
S743,2,forward,journalArticle,2015,"Joshi, Yogi",,,https://uwspace.uwaterloo.ca/handle/10012/9776,"Runtime verification (RV) is an effective and automated method for specification based offline testing as well as online monitoring of complex real-world systems. Firstly, a software framework for RV needs to exhibit certain design features to support usability, modifiability and efficiency. While usability and modifiability are important for providing support for expressive logical formalisms, efficiency is required to reduce the extra overhead at run time. Secondly, most existing techniques assume the existence of a complete execution trace for RV. However, real-world systems often produce incomplete execution traces due to reasons such as network issues, logging failures, etc. A few verification techniques have recently emerged for performing verification of incomplete execution traces. While some of these techniques sacrifice soundness, others are too restrictive in their tolerance for incompleteness.    For addressing the first problem, we introduce RitHM, a comprehensive framework, which enables development and integration of efficient verification techniques. RitHM's design takes into account various state-of-the-art techniques that are developed to optimize RV w.r.t. the efficiency of monitors and expressivity of logical formalisms. RitHM's design supports modifiability by allowing a reuse of efficient monitoring algorithms in the form of plugins, which can utilize heterogeneous back-ends. RitHM also supports extensions of logical formalisms through logic plugins. It also facilitates the interoperability between implementations of monitoring algorithms, and this feature allows utilizing different efficient algorithms for monitoring different sub-parts of a specification.    We evaluate RitHM's architecture and architectures of a few more tools using architecture trade-off analysis (ATAM) method. We also report empirical results, where RitHM is used for monitoring real-world systems. The results underscore the importance of various design features of RitHM.    For addressing the second problem, we identify a fragment of LTL specifications, which can be soundly monitored in the presence of transient loss events in an execution trace. We present an offline algorithm, which identifies whether an LTL formula is monitorable in a presence of a transient loss of events and constructs a loss-tolerant monitor depending upon the monitorability of the formula.    Our experimental results demonstrate that our method increases the applicability of RV for monitoring various real-world applications, which produce lossy traces. The extra overhead caused by our constructed monitors is minimal as demonstrated by application of our method on commonly used patterns of LTL formulas.",,RitHM: A Modular Software Framework for Runtime Monitoring Supporting Complete and Lossy Traces,x,,,,,,,,,,NO,
S740,2,forward,thesis,2021,"White-Magner, Ruffin James",,,https://escholarship.org/uc/item/21m3t5t1,"Security and usability are often paradoxically portrayed as zero-sum trade-offs; this is especially true of cyber-physical systems. Historically, security has taken a back seat in open source robotic software initiatives, such as Robot Operating System (ROS), which have focused on development productivity instead of deployment hardening, and this has contributed, perhaps inadvertently, to the belated adoption of ROS by industry, impeding technical transfer between industry and academia. This dissertation studies methods for automating and verifying middleware configurations to improve the security for distributed robotic systems.We introduce procedural tooling for automating the setup of authenticated encryption and access control across the distributed data bus network used in robotic middleware frameworks, in a concerted effort to remove sources of errors such as human factors during configuration development. This includes an immutable logging framework with which to record event data used by any tooling in order to continuously profile and/or monitor system security. We then present methods for conducting passive reachability and controllability analysis over the data bus, and for combining that with static information flow control to guarantee isolation between sensitive or mission critical computations over larger integrations. Finally, we propose principles for the design, verification, and deployment of robotic architectures composed of partially distrusting components. We seek to establish a set of automated tools, methods, and design principles to compose and audit multiple robotic subsystems into hardened stacks for service and industry, and we call it ""Usable Security and Verification for Distributed Robotic Systems.""",,Usable Security and Verification for Distributed Robotic Systems,,,,,x,,,,,,NO,
S739,2,forward,journalArticle,2017,"Lyons, Damian; Arkin, Ronald C.; Jiang, Shu; O'Brien, Matthew J.; Tang, Feng; Tang, Peng",International Journal of Monitoring and Surveillance Technologies Research (IJMSTR),10.4018/IJMSTR.2017010103,https://www.igi-global.com/article/establishing-a-priori-performance-guarantees-for-robot-missions-that-include-localization-software/www.igi-global.com/article/establishing-a-priori-performance-guarantees-for-robot-missions-that-include-localization-software/182506,"One approach to determining whether an automated system is performing correctly is to monitor its performance, signaling when the performance is not acceptable; another approach is to automatically analyze the possible behaviors of the system a-priori and determine performance guarantees. Thea autho...",,Establishing A-Priori Performance Guarantees for Robot Missions that Include Localization Software,x,,,,,,,,,,NO,
S738,2,forward,conferencePaper,2021,"Goerke, Niklas; Timmermann, David; Baumgart, Ingmar","2021 7th International Conference on Automation, Robotics and Applications (ICARA)",10.1109/ICARA51699.2021.9376468,,"The Robot Operation System (ROS) is widely used in academia as well as the industry to build custom robot applications. Successful cyberattacks on robots can result in a loss of control for the legitimate operator and thus have a severe impact on safety if the robot is moving uncontrollably. A high level of security thus needs to be mandatory. Neither ROS 1 nor 2 in their default configuration provide protection against network based attackers. Multiple protection mechanisms have been proposed that can be used to overcome this. Unfortunately, it is unclear how effective and usable each of them are. We provide a structured analysis of the requirements these protection mechanisms need to fulfill by identifying realistic, network based attacker models and using those to derive relevant security requirements and other evaluation criteria. Based on these criteria, we analyze the protection mechanisms available and compare them to each other. We find that none of the existing protection mechanisms fulfill all of the security requirements. For both ROS 1 and 2, we discuss which protection mechanism are most relevant and give hints on how to decide on one. We hope that the requirements we identify simplify the development or enhancement of protection mechanisms that cover all aspects of ROS and that our comparison helps robot operators to choose an adequate protection mechanism for their use case.",Analytical models; Automation; Computer crime; DDS; Industries; ROS; ROS 2; Safety; security; Security; Service robots; SROS; SROS 2,Who Controls Your Robot? An Evaluation of ROS Security Mechanisms,,x,,,,,,,,,NO,
S737,2,forward,conferencePaper,2019,"Lesire, Charles; Roussel, Stéphanie; Doose, David; Grand, Christophe",2019 International Conference on Robotics and Automation (ICRA),10.1109/ICRA.2019.8793754,,"Fault-tolerant architectures are mandatory to ensure the robustness of autonomous robots performing missions in complex and uncertain environments. The first step of a fault-tolerant mechanism is the detection of a faulty behavior of the system. It is then important to provide tools to help robot developers specify relevant observers. It is moreover crucial to guarantee a correct implementation of the observers, i.e. that the observers do not miss data and do not trigger unsuitable recovery actions in case of false detection. In this paper, we propose a specification language for observers that uses Past-Time LTL to express complex formulas on data produced by software components, and timed constraints on the evaluations of these formulas. We moreover provide an implementation of this specification that guarantees a real-time evaluation of the observers. We briefly describe the observers we have specified for a patrolling mission, and we evaluate the performance of our approach compared to state of the art on a benchmark in which we detect errors on a laser range sensor.",Monitoring; Observers; Real-time systems; Robot sensing systems; Safety; Timing,Synthesis of Real-Time Observers from Past-Time Linear Temporal Logic and Timed Specification,x,,,,,,,,,,NO,
S736,2,forward,conferencePaper,2020,"Shivakumar, Sumukh; Torfah, Hazem; Desai, Ankush; Seshia, Sanjit A.",Runtime Verification,10.1007/978-3-030-60508-7_10,,"We present an implementation of SOTER, a run-time assurance framework for building safe distributed mobile robotic (DMR) systems, on top of the Robot Operating System (ROS). The safety of DMR systems cannot always be guaranteed at design time, especially when complex, off-the-shelf components are used that cannot be verified easily. SOTER addresses this by providing a language-based approach for run-time assurance for DMR systems. SOTER implements the reactive robotic software using the language P, a domain-specific language designed for implementing asynchronous event-driven systems, along with an integrated run-time assurance system that allows programmers to use unfortified components but still provide safety guarantees. We describe an implementation of SOTER for ROS and demonstrate its efficacy using a multi-robot surveillance case study, with multiple run-time assurance modules. Through rigorous simulation, we show that SOTER enabled systems ensure safety, even when using unknown and untrusted components.",Autonomous systems; Distributed mobile robotics; Runtime assurance,SOTER on ROS: A Run-Time Assurance Framework on the Robot Operating System,,x,,,,,x,,,,NO,
S735,2,forward,journalArticle,2021,"Lee, Hyojun; Yoon, Jiyoung; Jang, Min-Seong; Park, Kyung-Joon",Sensors,10.3390/s21041369,https://www.mdpi.com/1424-8220/21/4/1369,"To perform advanced operations with unmanned aerial vehicles (UAVs), it is crucial that components other than the existing ones such as flight controller, network devices, and ground control station (GCS) are also used. The inevitable addition of hardware and software to accomplish UAV operations may lead to security vulnerabilities through various vectors. Hence, we propose a security framework in this study to improve the security of an unmanned aerial system (UAS). The proposed framework operates in the robot operating system (ROS) and is designed to focus on several perspectives, such as overhead arising from additional security elements and security issues essential for flight missions. The UAS is operated in a nonnative and native ROS environment. The performance of the proposed framework in both environments is verified through experiments.",cyber-physical systems; network attack; security; unmanned aerial vehicles,A Robot Operating System Framework for Secure UAV Communications,,x,,x,,,,,,,NO,
S734,2,forward,journalArticle,2021,"Santos, André; Cunha, Alcino; Macedo, Nuno",arXiv:2103.01603 [cs],,http://arxiv.org/abs/2103.01603,"This tool paper presents the High-Assurance ROS (HAROS) framework. HAROS is a framework for the analysis and quality improvement of robotics software developed using the popular Robot Operating System (ROS). It builds on a static analysis foundation to automatically extract models from the source code. Such models are later used to enable other sorts of analyses, such as Model Checking, Runtime Verification, and Property-based Testing. It has been applied to multiple real-world examples, helping developers find and correct various issues.",Computer Science - Robotics; Computer Science - Software Engineering; D.2.1; D.2.4; D.2.5; D.2.8; D.2.9,The High-Assurance ROS Framework,,,,,x,,,,,,NO,
S733,2,forward,thesis,2020,"Ho, Dinh Khanh",,,https://tel.archives-ouvertes.fr/tel-03135081,"Mobile robotic systems are becoming more and more complex with the integration of advanced sensing and acting components and functionalities to perform the real required missions. For these technical systems, the requirements are divided into two categories: functional and non-functional requirements. While functional requirements represent what the robot must do to accomplish the mission, non-functional requirements represent how the robot performs the mission. Thus, the quality of service and energy efficiency of a robotic mission are classified in this category. The autonomy of these systems is fully achieved when both functional and non-functional requirements are guaranteed without any human intervention or any external control. However, these mobile systems are naturally confronted with resource availability and energy capacity constraints, particularly in the context of long-term missions, these constraints become more critical. In addition, the performance of these systems is also influenced by unexpected and unstructured environmental conditions in which they interact. The management of resources and energy during operation is therefore a challenge for autonomous mobile robots in order to guarantee the desired performance objectives while respecting constraints. In this context, the ability of the robotic system to become aware of its own internal behaviors and physical environment and to adapt to these dynamic circumstances becomes important.This thesis focuses on the quality of service and energy efficiency of mobile robotic systems and proposes a hierarchical run-time management in order to guarantee these non-functional objectives of each robotic mission. At the local management level of each robotic mission, a Mission Manager employs a reinforcement learning-based decision-making mechanism to automatically reconfigure certain key mission-specific parameters to minimize the level of violation of required performance and energy objectives. At the global management level of the whole system, a Multi-Mission Manager leveraged rule-based decision-making and case-based reasoning techniques monitors the system's resources and the responses of Mission Managers in order to decide to reallocate the energy budget, regulate the quality of service and trigger the online learning for each robotic mission.The proposed methodology has been successfully prototyped and validated in a simulation environment and the run-time management framework is also integrated into our real mobile robotic system based on a Pioneer-3DX mobile base equipped with an embedded NVIDIA Jetson Xavier platform.",,QoS-aware resource and energy management for autonomous mobile,x,,,,,,,,,,NO,
S732,2,forward,webpage,,,,,https://www.proquest.com/openview/51a10678bb827b1ab2d5b46103f1a447/1?pq-origsite=gscholar&cbl=18750,"Explore millions of resources from scholarly journals, books, newspapers, videos and more, on the ProQuest Platform.",,"Testing, runtime verification, and analysis of concurrent programs - ProQuest",x,,,,,,,,,,NO,
S731,2,forward,blogPost,2017,"Dietterich, Thomas G.; ACM, Eric J. Horvitz Communications of the; No. 10, Vol 58; Pages 38-40",Path to Geek,,https://pathtogeek.com/a-sane-discussion-of-the-rising-fears-of-artificial-intelligence-ai,A Sane Discussion of the Rising Fears of Artificial Intelligence (AI) - Path to Geek,,A Sane Discussion of the Rising Fears of Artificial Intelligence (AI),x,,,,,,,,,,NO,
S730,2,forward,conferencePaper,2020,"Foughali, Mohammed; Bensalem, Saddek; Combaz, Jacques; Ingrand, Félix",2020 18th ACM-IEEE International Conference on Formal Methods and Models for System Design (MEMOCODE),10.1109/MEMOCODE51338.2020.9315156,,"Throughout the last few decades, researchers and practitioners are showing more and more interest in using formal methods in order to predict and prevent software failures in robotic and autonomous systems. However, the applicability of formal methods to such systems is limited due to several factors. For instance, robotic specifications are often non-formal which makes their formalization hard and error prone, and their translation into formal models ad-hoc and non automatic. Furthermore, the complexity and size of robotic applications lead most often to scalability issues with exhaustive techniques such as model checking. In this paper, we investigate the use of runtime verification as an alternative to model checking for the rigorous verification of large robotic systems. To do so, we first develop a sound and automatic translation from the robotic framework GenoM3 to the real-time version of the BIP formal language. Then, we apply the translation to a real-world case study the formal models of which do not scale with model checking, and use the BIP Engine to execute the generated BIP model, verify properties online, and adequately react to their possible violation. The experiments are carried out on a real Robotnik robot and show the efficiency of our approach in verifying timed properties, that is when the amount of time separating events is important.",Connectors; Model checking; Robots; Runtime; Software; Synchronization; Task analysis,Runtime Verification of Timed Properties in Autonomous Robots,x,,,,,,,,,,NO,
S729,2,forward,book,2020,"Deshmukh, Jyotirmoy; Ničković, Dejan",,,,"This book constitutes the refereed proceedings of the 20th International Conference on Runtime Verification, RV 2020, held in Los Angeles, CA, USA, in October 2020. The conference was held virtually due to the COVID-19 pandemic. The 14 regular papers and 2 short papers presented in this book were carefully reviewed and selected from 43 submissions. Also included are an invited paper, 5 tutorial papers, 6 tool papers, and a benchmark paper. The RV conference is concerned with all aspects of monitoring and analysis of hardware, software and more general system executions. The papers are organized in the following topical sections: runtime verification for autonomy; runtime verification for software; runtime verification with temporal logic specifications; stream-based monitoring; and runtime verification for cyber-physical systems.",,"Runtime Verification: 20th International Conference, RV 2020, Los Angeles, CA, USA, October 6-9, 2020, Proceedings",x,,,x,,,,,,,NO,
S728,2,forward,journalArticle,2020,"Queralta, Jorge Peña; Qingqing, Li; Ferrer, Eduardo Castelló; Westerlund, Tomi",arXiv:2009.01341 [cs],,http://arxiv.org/abs/2009.01341,"As autonomous robots become increasingly ubiquitous, more attention is being paid to the security of robotic operation. Autonomous robots can be seen as cyber-physical systems that transverse the virtual realm and operate in the human dimension. As a consequence, securing the operation of autonomous robots goes beyond securing data, from sensor input to mission instructions, towards securing the interaction with their environment. There is a lack of research towards methods that would allow a robot to ensure that both its sensors and actuators are operating correctly without external feedback. This paper introduces a robotic mission encoding method that serves as an end-to-end validation framework for autonomous robots. In particular, we put our framework into practice with a proof of concept describing a novel map encoding method that allows robots to navigate an objective environment with almost-zero a priori knowledge of it, and to validate operational instructions. We also demonstrate the applicability of our framework through experiments with real robots for two different map encoding methods. The encoded maps inherit all the advantages of traditional landmark-based navigation, with the addition of cryptographic hashes that enable end-to-end information validation. This end-to-end validation can be applied to virtually any aspect of robotic operation where there is a predefined set of operations or instructions given to the robot.",Computer Science - Cryptography and Security; Computer Science - Robotics,Secure Encoded Instruction Graphs for End-to-End Data Validation in Autonomous Robots,x,,,x,,,,,,,NO,
S727,2,forward,book,2020,"Bertrand, Nathalie; Jansen, Nils",,,,"This book constitutes the refereed proceedings of the 18th International Conference on Formal Modeling and Analysis of Timed Systems, FORMATS 2020, held in Vienna, Austria, in September 2020. The 16 full papers and 2 short papers presented in this volume were carefully reviewed and selected from 42 submissions. The papers focus on topics such as foundations and semantics, methods and tools, techniques, algorithms, data structures, and software tools for analyzing timed systems and resolving temporal constraints. Due to the Corona pandemic this conference was held as a virtual event.",,"Formal Modeling and Analysis of Timed Systems: 18th International Conference, FORMATS 2020, Vienna, Austria, September 1-3, 2020, Proceedings",x,,,,,,,,,,NO,
S726,2,forward,webpage,,,,,https://users.wpi.edu/~bbohrer/,,,Brandon Bohrer - Assistant Professor of Computer Science,x,,,x,,,,,,,NO,
S725,2,forward,journalArticle,,"Breiling, Benjamin; Dieber, Bernhard; Reiterer, Bernhard; Schlotzhauer, Andreas; Taurer, Sebastian",,,,,,Safety nicht ohne Security in der kollaborativen Robotik,x,,,x,,,,,,,NO,
S724,2,forward,journalArticle,2021,"Luckcuck, Matt",arXiv:2007.03522 [cs],,http://arxiv.org/abs/2007.03522,"Dynamic formal verification is a key tool for providing ongoing confidence that a system is meeting its requirements while in use, especially when paired with static formal verification before the system is in use. This paper presents a workflow and Runtime Verification (RV) toolchain, Varanus, and their application to an industrial case study. Using the workflow we manually derive a Communicating Sequential Processes (CSP) model from natural-language safety requirements documents, which Varanus uses as the monitor oracle. This reuse of the model means that the monitor oracle does not have to be developed separately, risking inconsistencies between it and the model for static verification. The approach is demonstrated by the offline RV of a teleoperated manipulation system, called MASCOT, which enables remote operations inside the Joint European Torus (JET) fusion reactor. We describe our model of the MASCOT safety design documents (including how the modelling process revealed an underspecification in the design) and evaluate the Varanus toolchain's utility. The workflow and tool provide validation of the safety documents, traceability of the safety properties from the documentation to the system, and a verified oracle for RV.",Computer Science - Formal Languages and Automata Theory; Computer Science - Robotics; Computer Science - Software Engineering,Offline Runtime Verification of Safety Requirements using CSP,x,,,,,,,,,,NO,
S723,2,forward,webpage,,,,,https://www.proquest.com/openview/fa14810960da2b671a5cd09dde1b9617/1?pq-origsite=gscholar&cbl=2041937,"Explore millions of resources from scholarly journals, books, newspapers, videos and more, on the ProQuest Platform.",,Survey on Formal Methods in Robotics - ProQuest,x,,,x,,,,,,,NO,
S722,2,forward,webpage,,,,,https://arxiv.org/abs/1904.10386,,,[1904.10386] Risk Structures: Towards Engineering Risk-aware Autonomous Systems,x,,,,,,,,,,NO,
S721,2,forward,book,2019,"Dehnavi, Saeid",,,http://urn.kb.se/resolve?urn=urn:nbn:se:mdh:diva-44702,DiVA portal is a finding tool for research publications and student theses written at the following 50 universities and research institutions.,,ROBOREBECA: A NEWFRAMEWORK TO DESIGN VERIFIED ROS-BASED ROBOTIC PROGRAMS,,,,,x,,,,,,NO,
S720,2,forward,webpage,,,,,https://www.proquest.com/openview/5f13feac4315977273854ef000a19c5e/1?pq-origsite=gscholar&cbl=18750&diss=y,"Explore millions of resources from scholarly journals, books, newspapers, videos and more, on the ProQuest Platform.",,Modular and Safe Event-driven Programming - ProQuest,x,,,x,,,,,,,NO,
S719,2,forward,bookSection,2021,"Ingrand, Félix",Software Engineering for Robotics,,https://doi.org/10.1007/978-3-030-66494-7_8,"Autonomous robots may one day be allowed to fly or to drive around in large numbers, but this will require their makers and programmers to show that the most critical parts of their software are robust and reliable. Moreover, autonomous robots embed onboard deliberation functions. This is what makes them autonomous but open for new challenges. There are many approaches to consider for the V&V of AR software, e.g. write high-level specifications and derive them through correct implementation, deploy and develop new or modified V&V formalisms to program robotics components, etc. One should note that learned models aside, most models used in deliberation functions are already amenable to formal V&V. Thus, we rather focus on functional-level components or modules and propose an approach that relies on an existing robotics specification and implementation framework (Gen oM), in which we harness existing well-known formal V&V frameworks (UPPAAL, BIP, FIACRE-TINA). Gen oM was originally developed by roboticists and software engineers who wanted to clearly and precisely specify how a reusable, portable, middleware-independent, functional component should be specified and implemented. As a result, Gen oM has a rigorous specification and a clear semantics of the implementation, and it provides a template mechanism to synthesize code that opens the door to automatic formal-model synthesis and formal V&V (offline and online). This bottom-up approach, which starts from components implementation, is more modest than top-down ones which aim at a larger and more global view of the problem. Yet, it gives encouraging results on real implementations on which one can build more complex high-level properties to be then verified and validated offline but also with online monitors.",,Verification of Autonomous Robots: A Roboticist’s Bottom-Up Approach,x,,,,,,,,,,NO,
S718,2,forward,journalArticle,2016,"Александрович, Мордвинов Дмитрий; Викторович, Литвинов Юрий","Информатика, телекоммуникации и управление",,https://cyberleninka.ru/article/n/obzor-primeneniya-formalnyh-metodov-v-robototehnike,"This paper is a survey of applying formal methods in the robotics field. We consider a number of recent works on robotic behavior specification in terms of temporal logics and using the model checking approach. Formal analysis techniques for Petri nets and robotics systems modeling using those methods are also considered. Verification of hybrid systems, application of process algebras for concurrent systems and other approaches for synthesis and verification of robotics controllers are described. We survey both fundamental papers that lay a foundation for the entire branches of research and recent papers from the top conferences of the last five years hoping to cover most of the actively developed research topics.",,Обзор применения формальных методов в робототехнике,x,,,,,,,,,,NO,
S716,2,forward,journalArticle,,"Nair, Jayasoorya Jayanthi Surendran",,,,"Cyber Physical Systems (CPS) consist of embedded computers and networks for controlling and monitoring the physical processes associated with it. In practice, these systems are complex in nature. Also most of the CPS systems handle concurrent and real time operations and they are mostly distributed in architecture. Suitable analysis techniques need to be used in order to design and develop a CPS system. Formal verification is a branch of software engineering which is used to verify the correctness of a design. Model checking is one technique used in formal verification, where a formal model of the real system is developed. This model is used for verify the correctness of the system design against its specified requirements. For model checking, a formal model and a formal specification language is required. There are several formalism available to represent concurrent distributed systems such as Petrinets, Actor models etc. Actor models are suitable for modeling the functional behaviour of distributed and asynchronous systems. If formal verification support could be incorporated with an actor model, it shall be beneficial in analyzing cyber physical systems. In this thesis, we use an actor based modelling language which is supported by formal semantics to analyze a complex cyber physical system. This study aims to analyze the distributed nature and concurrent behaviour of the system and not timing constraints. The system selected for this study is a safety critical system which consists of several autonomous machines which are operating in a fleet manner carrying out concurrent operations at a site. We also analyze the distributed design architecture of autonomous machine individually. The design implementation of the system is developed in a Robot Operating System and the actor based modelling language used for developing the models is ’Reactive Objects Language’ (Rebeca). Thus major tasks of the study include understanding the ROS based system, transformation of ROS elements to Rebeca models and verification of system specific properties. The study outcomes include identification of few mapping patterns between ROS and Rebeca. During this process a reusable algorithm describing the procedure of transforming any ROS code to Rebeca model was developed. Our study results hence proves the potential of Rebeca in verifying real robotic applications.",,MODELLING AND ANALYSING COLLABORATING HEAVY MACHINES,,x,,,,,,,,,NO,
S715,2,forward,thesis,2015,"Rinast, Jonas",,,https://tore.tuhh.de/handle/11420/1256,"Diese Dissertation untersucht Online Model Checking, eine dynamische Variante von Model Checking, die Eigenschaften eines Modells analysieren kann, auch wenn längerfristig korrekte Modelle nicht verfügbar sind. Ein Framework, das einen ganzheitlichen Ansatz zur Erstellung solcher Online Model-Checking Anwendungen mit Datenverarbeitungs-, Simulations-, Verifikations- und Visualisierungskomponenten bereitstellt wird präsentiert. Die Korrektheit zweier verwendeter Transformationsreduktionen wird gezeigt. Weiterhin werden zwei Studien zu Online Model Checking im medizinischen Bereich präsentiert.",,An online model-checking framework for timed automata,x,,,,,,,,,,NO,
S714,2,forward,conferencePaper,2018,"Estivill-Castro, Vladimir; Hexel, René",Model-Driven Engineering and Software Development,10.1007/978-3-319-94764-8_6,,"We present an architecture that enables run-time verification with executable models of behaviour. Our uniform modelling paradigm is logic-labelled finite-state machines (LLFSMs). Behaviours are constructed by parameterizable, loadable, and suspendable LLFSMs executed in predictable sequential schedules, but they are also verified at run-time by LLFSMs as well. Our architecture enables runtime verification (to monitor the quality of software during execution) as well as set up, tear down, and enforcement of quality behaviour during runtime. The LLFSMs models are executable and efficient because they are compiled (not interpreted). The LLFSMs can be derived from requirement engineering approaches such as behaviour trees, and also validated using test-driven development. However, in situations where software evolves incorporating elements of adaptive systems or machine learning, the software in execution may have never existed during development. We demonstrate the features of the architecture with illustrative case studies from robotics and embedded systems.",Logic-labeled finite state machines; Model-driven software development; Run-time verification,Deterministic High-Level Executable Models Allowing Efficient Runtime Verification,x,,,x,,,,,,,NO,
S713,2,forward,conferencePaper,2017,"Mahani, Maziar Fooladi; Wang, Yue",,10.1115/DSCC2016-9816,https://asmedigitalcollection.asme.org/DSCC/proceedings/DSCC2016/50701/V002T24A008/231072,,,Runtime Verification of Trust-Based Symbolic Robot Motion Planning With Human-in-the-Loop,x,,,,,,,,,,NO,
S712,2,forward,thesis,2019,"Masson, Lola",,,https://tel.archives-ouvertes.fr/tel-02098246,"An active safety monitor is an independent mechanism that is responsible for keeping the system in a safe state, should a hazardous situation occur. Is has observations (sensors) and interventions (actuators). Safety rules are synthesized from the results of the hazard analysis, using the tool SMOF (Safety MOnitoring Framework), in order to identify which interventions to apply for dangerous observations values. The safety rules enforce a safety property (the system remains in a safe state) and some permissiveness properties, ensuring that the system can still perform its tasks. This work focuses on solving cases where the synthesis fails to return a set of safe and permissive rules. To assist the user in these cases, three new features are introduced and developed. The first one addresses the diagnosis of why the rules fail to fulfill a permissiveness requirement. The second one suggests candidate safety interventions to inject into the synthesis process. The third one allows the tuning of the permissiveness requirements based on a set of essential functionalities to maintain. The use of these features is discussed and illustrated on two industrial case studies, a manufacturing robot from KUKA and a maintenance robot from Sterela.",,Safety monitoring for autonomous systems : interactive elicitation of safety rules,x,,,,,,,,,,NO,
S711,2,forward,webpage,,,,,https://www.proquest.com/openview/1ab342a4e35083b549717ea62ab3df0c/1?pq-origsite=gscholar&cbl=18750,"Explore millions of resources from scholarly journals, books, newspapers, videos and more, on the ProQuest Platform.",,Robot Planning with Constrained Markov Decision Processes - ProQuest,x,,,,,,,,,,NO,
S710,2,forward,conferencePaper,2019,"Guerrero-Higueras, Ángel Manuel; Rodríguez-Lera, Francisco J.; Martín-Rico, Francisco; Balsa-Comerón, Jesús; Matellán-Olivera, Vicente",Advances in Physical Agents,10.1007/978-3-319-99885-5_17,,"Service robots sometimes behave in unexpected ways and may put economic interests or human safety in risk. This can be accepted in research environments, but it is not going to be tolerated in everyday use of robots. In addition, regulations for the deployment of autonomous robots (from home assistants to autonomous cars) are increasing. These regulations will require at some point systems that could be audited and that implement facilities for forensic analysis. In this paper, we propose that these systems have to be integrated in the development frameworks of robotics software as a mandatory component. We present two design alternatives for the de facto standard for service robotics (ROS: Robotic Operating System) to enforce safety and security rules based on a customizable black-box-like component.",Accountability; Autonomous; Black-box; Forensic; Safety; Security,Accountability in Mobile Service Robots,x,,,,,,,,,,NO,
S709,2,forward,journalArticle,2021,"Gleirscher, Mario; Calinescu, Radu; Woodcock, Jim",Formal Aspects of Computing,10.1007/s00165-021-00545-4,https://doi.org/10.1007/s00165-021-00545-4,"Machines, such as mobile robots and delivery drones, incorporate controllers responsible for a task while handling risk (e.g. anticipating and mitigating hazards; preventing and alleviating accidents). We refer to machines with this capability as risk-awaremachines. Risk awareness includes robustness and resilience and complicates monitoring (i.e., introspection, sensing, prediction), decision making, and control. From an engineering perspective, risk awareness adds a range of dependability requirements to system assurance. Such assurance mandates a correct-by-construction approach to controller design, based on mathematical theory.We introduce RiskStructures, an algebraic framework for risk modelling intended to support the design of safety controllers for risk-aware machines. Using the concept of a risk factor as a modelling primitive, this framework provides facilities to construct, examine, and assure these controllers.We prove desirable algebraic properties of these facilities, and demonstrate their applicability by using them to specify key aspects of safety controllers for risk-aware automated driving and collaborative robots.",,RiskStructures: A design algebra for risk-aware machines,,x,,,,,,,,,NO,
S708,2,forward,journalArticle,2016,"Webster, Matt; Western, David; Araiza-Illan, Dejanira; Dixon, Clare; Eder, Kerstin; Fisher, Michael; Pipe, Anthony",,,,"We present an approach for the verification and validation (V\&V) of robot assistants in the context of human-robot interactions (HRI), to demonstrate their trustworthiness through integral assurances on their safety and functional correctness. Trust in robot assistants will allow them to transition from the laboratory into our everyday lives. The complex and unpredictable nature of the real world in which assistant and service robots operate, the limitations on available V\&V techniques when used individually, and the consequent lack of confidence on the verification results (or assurances), present challenges to overcome. Our approach, called \textit{assurance-based verification}, addresses these challenges by combining formal verification (model checking), simulation-based testing, and user validation in experiments with a real robot. We demonstrate our assurance-based V\&V approach through a handover task, the most critical part of a complex cooperative manufacturing scenario, for which we proposed some safety and liveness requirements to verify and validate. We construct formal models, simulations and an experimental test rig for the HRI. To capture requirements we use temporal logic properties, assertion checkers and informal textual descriptions. This combination of approaches allows V\&V of the HRI task at different levels of modelling detail and thoroughness of exploration, thus overcoming the individual limitations of each method. Should the resulting assurances present discrepancies, an iterative process between the three V\&V techniques takes place until confidence in these assurances is gained from refining and improving the assets (i.e., system and requirement models) to represent the HRI task in a more truthful manner.",,An Assurance-based Approach to Verification and Validation of Human--Robot Teams,x,,,,,,,,,,NO,
S707,2,forward,conferencePaper,2018,"Masson, Lola; Guiochet, Jérémie; Waeselynck, Hélène; Cabrera, Kalou; Cassel, Sofia; Törngren, Martin",NASA Formal Methods,10.1007/978-3-319-77935-5_23,,"Robots and autonomous systems have become a part of our everyday life, therefore guaranteeing their safety is crucial. Among the possible ways to do so, monitoring is widely used, but few methods exist to systematically generate safety rules to implement such monitors. Particularly, building safety monitors that do not constrain excessively the system’s ability to perform its tasks is necessary as those systems operate with few human interventions. We propose in this paper a method to take into account the system’s desired tasks in the specification of strategies for monitors and apply it to a case study. We show that we allow more strategies to be found and we facilitate the reasoning about the trade-off between safety and availability.",Braking Intervention; Permissiveness Properties; Safety Inventory; Universal Permissiveness; Warning State,Tuning Permissiveness of Active Safety Monitors for Autonomous Systems,x,,,,,,,,,,NO,
S706,2,forward,conferencePaper,2020,"Ničković, Dejan; Yamaguchi, Tomoya",Automated Technology for Verification and Analysis,10.1007/978-3-030-59152-6_34,,"We present rtamt, an online monitoring library for Signal Temporal Logic (STL) and its interface-aware variant (IA-STL), providing both discrete- and dense-time interpretation of the logic. We also introduce rtamt4rosrtamt4ros\textsf {rtamt4ros}, a tool that integrates rtamt with Robotic Operating System (ROS), a common environment for developing robotic applications. We evaluate rtamtrtamt\textsf {rtamt} and rtamt4rosrtamt4ros\textsf {rtamt4ros} on two robotic case studies.",,RTAMT: Online Robustness Monitors from STL,,x,,,,,,,,,NO,
S705,2,forward,conferencePaper,2016,"Estivill-Castro, Vladimir; Hexel, René","2016 IEEE International Conference on Simulation, Modeling, and Programming for Autonomous Robots (SIMPAR)",10.1109/SIMPAR.2016.7862408,,"More and more, pre-runtime testing or verification of software in robotic systems is not feasible. For example, autonomous robots using learning behaviors to handle new environments. What sort of software architecture would then enable runtime-verification? We propose that logic-labeled finite-state machines (LLFSMs), jointly with regular expressions are a potent tool to describe acceptable and unacceptable system behaviors. Our architecture has the advantage of expressive power, since sometimes regular expressions are more succinct and comprehensible, while other times, the visual display of the LLFSM would be more accessible to requirements engineers. Moreover, LLFSMs have a prescribed schedule that enables their comprehensive testing and formal verification, and in similar ways, allows monitoring at run-time. The architecture facilitates verification of monitor LLFSMs and higher safety than alternatives such as ROSRV. Moreover, for a subset of LTL (co-safe LTV), LLFSMs can be synthesised from LTL constraints.",Middleware; Monitoring; Robot sensing systems; Schedules; Unified modeling language,Run-time verification of regularly expressed behavioral properties in robotic systems with logic-labeled finite state machines,,x,,,,,,,,,NO,
S704,2,forward,conferencePaper,2019,"Pichler, Marc; Dieber, Bernhard; Pinzger, Martin",2019 Third IEEE International Conference on Robotic Computing (IRC),10.1109/IRC.2019.00020,,"Since its beginnings ten years ago, the Robot Operating System (ROS) has created a huge community of developers and researchers and is now the most widespread open-source framework for robotics development. It is used in research, prototyping but also in commercial products and supports a wide range of robotic platforms, sensors and highlevel data processing functions. While for a research platform, quality of the software developed with it is typically of lower importance, ROS is gradually moving towards industrial applications making software quality a premier topic. In this paper, we want to gain insights on how ROS is used in practice, how high the quality of the ROS packages and applications is, and where potential pitfalls in the use of ROS lie. To achieve this, we have analyzed several thousands of open-source ROS packages found on GitHub and Bitbucket for their quality and their interdependencies. Our results include packages on the rosdistro index and, more importantly, packages that are not. From our results we show common issues in ROS-applications, quality implications, and also which packages of what quality are particularly popular.",dependency analysis; Indexes; Open source software; repository quality; ros; Service robots; software quality; Software quality; Tools,Can I Depend on you? Mapping the Dependency and Quality Landscape of ROS Packages,,,,,,,,,x,,NO,
S703,2,forward,conferencePaper,2020,"Kempa, Brian; Zhang, Pei; Jones, Phillip H.; Zambreno, Joseph; Rozier, Kristin Yvonne",Formal Modeling and Analysis of Timed Systems,10.1007/978-3-030-57628-8_12,,"Robonaut2 (R2) is a humanoid robot onboard the International Space Station (ISS), performing specialized tasks in collaboration with astronauts. After deployment, R2 developed an unexpected emergent behavior. R2’s inability to distinguish between knee-joint faults (e.g., due to sensor drift versus violated environmental assumptions) began triggering safety-preserving freezes-in-place in the confined space of the ISS, preventing further motion until a ground-control operator determines the root-cause and initiates proper corrective action. Runtime verification (RV) algorithms can efficiently disambiguate the temporal signatures of different faults in real-time. However, no previous RV engine can operate within the limited available resources and specialized platform constraints of R2’s hardware architecture. An attempt to deploy the only runtime verification engine designed for embedded flight systems, R2U2, failed due to resource constraints. We present a significant redesign of the core R2U2 algorithms to adapt to severe resource and certification constraints and prove their correctness. We further define an optimization enabled by our new algorithms and implement the new version of R2U2. We encode specifications describing real-life faults occurring onboard Robonaut2 using Mission-time Linear Temporal Logic (MLTL) and detail our process of specification debugging, validation, and refinement. We deployed this new version of R2U2 on Robonaut2, demonstrating successful real-time fault disambiguation and mitigation triggering of R2’s knee-joint faults without false positives.",MLTL; Online runtime verification; R2U2; Steam-based runtime verification; Temporal logic specification,Embedding Online Runtime Verification for Fault Disambiguation on Robonaut2,x,,,,,,,,,,NO,
S702,2,forward,journalArticle,2018,"Amini, Roham; Sulaiman, Rossilawati; Abd Rahman, Abdul Hadi",International Journal of Advanced Computer Science and Applications,10.14569/IJACSA.2018.091022,,"Cyber-attacks are a growing threat to future robots. The shift towards automatization has increased relevance and reliance on robots. Securing robots has been secondary or ternary priority and thus robots are vulnerable to cyber-attacks. Securing robots must become an essential (built-in) part of the design rather than being considered as a subsequent (later) add-on. ROS is a widely used and popular open source framework and robots using ROS are increasing in popularity. However, ROS is vulnerable to cyber-attacks. ROS needs to be secured before robots using ROS reach mass market. This study aims at proposing an architecture to secure ROS, using cryptography mechanism, which addresses the most common ROS safety issues. The advantages of our proposed secure architecture, CryptoROS, is that no changes to ROS software libraries and tools is required, it works with all ROS client libraries (e.g. rospy, roscpp) and rebuilding nodes is not necessary.",,CryptoROS: A Secure Communication Architecture for ROS-Based Applications,,x,,,,,,,,,NO,
S701,2,forward,conferencePaper,2020,"Ferrando, Angelo; Cardoso, Rafael C.; Fisher, Michael; Ancona, Davide; Franceschini, Luca; Mascardi, Viviana",Towards Autonomous Robotic Systems,10.1007/978-3-030-63486-5_40,,"Recently, robotic applications have been seeing widespread use across industry, often tackling safety-critical scenarios where software reliability is paramount. These scenarios often have unpredictable environments and, therefore, it is crucial to be able to provide assurances about the system at runtime. In this paper, we introduce ROSMonitoring, a framework to support Runtime Verification (RV) of robotic applications developed using the Robot Operating System (ROS). The main advantages of ROSMonitoring compared to the state of the art are its portability across multiple ROS distributions and its agnosticism w.r.t. the specification formalism. We describe the architecture behind ROSMonitoring and show how it can be used in a traditional ROS example. To better evaluate our approach, we apply it to a practical example using a simulation of the Mars curiosity rover. Finally, we report the results of some experiments to check how well our framework scales.",,ROSMonitoring: A Runtime Verification Framework for ROS,,,,,,,,,x,,NO,
S700,2,forward,thesis,2018,"Foughali, Mohammed",,,https://hal.laas.fr/tel-02080063,"The goal of this thesis is to add to the efforts toward the long-sought objective of secure and safe robots with predictable and a priori known behavior. For the reasons given above, formal methods are used to model and verify crucial properties, with a focus on the functional level of robotic systems. The approach relies on automatic generation of formal models targeting several frameworks. For this, we give operational semantics to a robotic framework, then several mathematically proven translations are derived from such semantics. These translations are then automatized so any robotic functional layer specification can be translated automatically and promptly to various frameworks/languages. Thus, we provide a mathematically correct mapping from functional components to verifiable models. The obtained models are used to formulate and verify crucial properties (see examples above) on real-world complex robotic and autonomous systems. This thesis provides also a valuable feedback on the applicability of formal frameworks on real-world, complex systems and experience-based guidelines on the efficient use of formal-model automatic generators. In this context, efficiency relates to, for instance, how to use the different model checking tools optimally depending on the properties to verify, what to do when the models do not scale with model checking (e.g. the advantages and drawbacks of statistical model checking and runtime verification and when to use the former or the latter depending on the type of properties and the order of magnitude of timing constraints).",,Formal verification of the functionnal layer of robotic and autonomous systems,x,,,,,,,,,,NO,
S699,2,forward,conferencePaper,2018,"Balsa-Comerón, Jesús; Guerrero-Higueras, Ángel Manuel; Rodríguez-Lera, Francisco Javier; Fernández-Llamas, Camino; Matellán-Olivera, Vicente",ROBOT 2017: Third Iberian Robotics Conference,10.1007/978-3-319-70836-2_6,,"Cybersecurity in autonomous systems is a growing concern. Currently most research robotic systems are built using ROS framework, along with other commercial software. The goal of this paper is to improve ROS security features by using encrypted communications and semantic rules to ensure a correct behavior. To encrypt communications, Advanced Encryption Standard algorithm has been applied. Then, the framework ROSRV has been used to define semantic rules for ROS messages. In order to test this proposal, two experiments have been carried out: in the first one, plain-text messages are not allowed and must be blocked; in the second one, rules for detecting denial of service attacks are tested against a real attack performed on a Real-Time Locating System, used by a mobile robot to estimate its location.",Autonomous systems; Cybersecurity; Robotics; ROS,Cybersecurity in Autonomous Systems: Hardening ROS Using Encrypted Communications and Semantic Rules,,x,,,,,,,,,NO,
S698,2,forward,conferencePaper,2018,"Mandal, Avijit; Mohan, Devina; Jetley, Raoul; Nair, Sreeja; D'Souza, Meenakshi",2018 IEEE 23rd International Conference on Emerging Technologies and Factory Automation (ETFA),10.1109/ETFA.2018.8502576,,"Software used to monitor and control operations within an automation system is defined using domain-specific languages. Latent errors in the control code, if left undetected, can lead to unexpected system failures compromising the safety and the security of the automation system. Traditional analysis techniques are insufficient to detect such errors as they do not cater specifically to the underlying domain-specific language. However, given the diversity of different automation domains, there is no standard platform for analysis of these languages. This paper proposes a generic static analysis framework for domain-specific languages used in the automation domain. The analysis approach exhaustively detects runtime errors in control code and ensures compliance to good programming practices. These runtime errors and coding violations are checked against abstract syntax trees and control flow graphs derived from the code. Data Flow Analysis (DFA), Abstract interpretation and pattern-based matching techniques are used to identify domain specific errors and coding violations for control languages.",Abstract Interpretation; Automation; Data Flow Analysis (DFA); Engines; Exception; Generic programming errors; Inter-procedural CFG; Interrupt; Robots; Safety requirements; Software; Static analysis; Syntactics; Tools,A Generic Static Analysis Framework for Domain-specific Languages,x,,,,,,,,,,NO,
S697,2,forward,conferencePaper,2018,"White, Ruffin; Christensen, Henrik I.; Caiazza, Gianluca; Cortesi, Agostino",2018 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS.2018.8594462,,"Security of robotics systems, as well as of the related middleware infrastructures, is a critical issue for industrial and domestic IoT, and it needs to be continuously assessed throughout the whole development lifecycle. The next generation open source robotic software stack, ROS2, is now targeting support for Secure DDS, providing the community with valuable tools for secure real world robotic deployments. In this work, we introduce a framework for procedural provisioning access control policies for robotic software, as well as for verifying the compliance of generated transport artifacts and decision point implementations.",Access control; Cryptography; Middleware; Service robots; Tools,Procedurally Provisioned Access Control for Robotic Systems,,x,,,,,,,,,NO,
S695,2,forward,journalArticle,2018,"Zhou, Xin; Gou, Xiaodong; Huang, Tingting; Yang, Shunkun",IEEE Access,10.1109/ACCESS.2018.2869834,,"Cyber physical systems (CPSs) are rapidly developing, with increasing scale, complexity and heterogeneity. However, testing CPSs systematically to ensure that they operate with high reliability remains a big challenge. Therefore, it is necessary to summarize existing works and technologies systematically, with the aim of inspiring new inventions for more efficient CPS testing. Accordingly, this paper first investigated the advances in CPS testing methods from ten aspects, including different testing paradigms, technologies, and some non-functional testing methods (including security testing, robust testing, and fragility testing). Then, we further elaborate on the infrastructures of CPS testbeds from the perspectives of their architecture and the corresponding function analyses. Finally, challenges and future research directions are identified and discussed. It can be concluded that future CPS testing should focus more on the combination of different paradigms and technologies for multi-objective by integrating more emerging cutting-edge technologies such as Internet of things, big data, cloud computing and AI.",Analytical models; Cyber-physical system; Data models; Mathematical model; Monitoring; non-functional testing; robust testing; Security; security testing; testbed; Testing; testing method; Unified modeling language,Review on Testing of Cyber Physical Systems: Methods and Testbeds,x,,,,,,,,,,NO,
S694,2,forward,book,2018,"Yampolskiy, Roman V.",,,,"The history of robotics and artificial intelligence in many ways is also the history of humanity’s attempts to control such technologies. From the Golem of Prague to the military robots of modernity, the debate continues as to what degree of independence such entities should have and how to make sure that they do not turn on us, its inventors. Numerous recent advancements in all aspects of research, development and deployment of intelligent systems are well publicized but safety and security issues related to AI are rarely addressed. This book is proposed to mitigate this fundamental problem. It is comprised of chapters from leading AI Safety researchers addressing different aspects of the AI control problem as it relates to the development of safe and secure artificial intelligence. The book is the first edited volume dedicated to addressing challenges of constructing safe and secure advanced machine intelligence.   The chapters vary in length and technical content from broad interest opinion essays to highly formalized algorithmic approaches to specific problems. All chapters are self-contained and could be read in any order or skipped without a loss of comprehension.",Computers / Machine Theory; Computers / Programming / Games; Computers / Software Development & Engineering / Systems Analysis & Design; Technology & Engineering / Electronics / General,Artificial Intelligence Safety and Security,x,,,,,,,,,,NO,
S693,2,forward,bookSection,2019,"White, Ruffin; Caiazza, Gianluca; Christensen, Henrik; Cortesi, Agostino",Robot Operating System (ROS): The Complete Reference (Volume 3),,https://doi.org/10.1007/978-3-319-91590-6_11,"SROS1 is a proposed addition to the ROS1 API and ecosystem to support modern cryptography and security measures. An overview of current progress will be presented, explaining each major advancement, including: over-the-wire cryptography for all data transport, namespaced access control enforcing graph policies/restrictions, and finally process profiles using Linux Security Modules to harden a node’s resource access. This chapter not only seeks to raise community awareness of the vulnerabilities in ROS1, but to provide clear instruction along designed patterns of development for using proposed solutions provided by SROS1 to advance the state of security for open source robotics subsystems.",Access control; Robotics; ROS; Secure communications,SROS1: Using and Developing Secure ROS1 Systems,,,,,x,,,,,,NO,
S692,2,forward,conferencePaper,2016,"Hazim, Mohammed Y.; Qu, Hongyang; Veres, Sandor M.",Towards Autonomous Robotic Systems,10.1007/978-3-319-40379-3_15,,"This paper addresses the problem improving response times of robots implemented in the Robotic Operating System (ROS) using formal verification of computational-time feasibility. In order to verify the real time behaviour of a robot under uncertain signal processing times, methods of formal verification of timeliness properties are proposed for data flows in a ROS-based control system using Probabilistic Timed Programs (PTPs). To calculate the probability of success under certain time limits, and to demonstrate the strength of our approach, a case study is implemented for a robotic agent in terms of operational times verification using the PRISM model checker, which points to possible enhancements to the operation of the robotic agent.",LISA; PTP; ROS; Verification,"Testing, Verification and Improvements of Timeliness in ROS Processes",,,,,,,,x,,,NO,
S691,2,forward,conferencePaper,2019,"Ingrand, Felix",2019 Third IEEE International Conference on Robotic Computing (IRC),10.1109/IRC.2019.00059,,"The consequences of autonomous systems software failures can be potentially dramatic. There is no need to darken the picture, but still, it seems unlikely that people, insurance companies and certification agencies will let autonomous systems fly or drive around without requiring their makers and programmers to prove that the most critical parts of the software are robust and reliable. This is already the case for aeronautic, rail transportation, nuclear plants, medical devices, etc. were software must be certified, which possibly involve its formal validation and verification (V&V). Moreover, autonomous systems go further and embed onboard deliberation functions. This is what make them really autonomous, but open new challenges. We propose to consider the overall problem of V&V of autonomous systems software and examine the current situation with respect to the various type of software used. In particular, we point out that the availability of formal models is rather different depending on the type of component considered. We distinguish these different cases and stress the areas where we think we need to focus our efforts as to improve the overall robustness of autonomous systems.",Automobiles; autonomous robots; Autonomous systems; formal methods; Mathematical model; robotics software; Robots; Safety; Software; Task analysis; validation and verification,Recent Trends in Formal Validation and Verification of Autonomous Robots Software,x,,,,,,,,,,NO,
S690,2,forward,journalArticle,2018,"Rodríguez-Lera, Francisco J.; Matellán-Olivera, Vicente; Balsa-Comerón, Jesús; Guerrero-Higueras, Ángel Manuel; Fernández-Llamas, Camino",Frontiers in ICT,10.3389/fict.2018.00002,https://www.frontiersin.org/article/10.3389/fict.2018.00002,"In human–robot interaction situations, robot sensors collect huge amounts of data from the environment in order to characterize the situation. Some of the gathered data ought to be treated as private, such as medical data (i.e., medication guidelines), personal, and safety information (i.e., images of children, home habits, alarm codes, etc.). However, most robotic software development frameworks are not designed for securely managing this information. This paper analyzes the scenario of hardening one of the most widely used robotic middlewares, Robot Operating System (ROS). The study investigates a robot’s performance when ciphering the messages interchanged between ROS nodes under the publish/subscribe paradigm. In particular, this research focuses on the nodes that manage cameras and LIDAR sensors, which are two of the most extended sensing solutions in mobile robotics, and analyzes the collateral effects on the robot’s achievement under different computing capabilities and encryption algorithms (3DES, AES, and Blowfish) to robot performance. The findings present empirical evidence that simple encryption algorithms are lightweight enough to provide cyber-security even in low-powered robots when carefully designed and implemented. Nevertheless, these techniques come with a number of serious drawbacks regarding robot autonomy and performance if they are applied randomly. To avoid these issues, we define a taxonomy that links the type of ROS message, computational units, and the encryption methods. As a result, we present a model to select the optimal options for hardening a mobile robot using ROS.",,Message Encryption in Robot Operating System: Collateral Effects of Hardening Mobile Robots,,x,,,,,,,,,NO,
S689,2,forward,conferencePaper,2016,"Dóczi, Roland; Kis, Ferenc; Sütő, Balázs; Póser, Valéria; Kronreif, Gernot; Jósvai, Eszter; Kozlovszky, Miklos","2016 IEEE International Conference on Systems, Man, and Cybernetics (SMC)",10.1109/SMC.2016.7844931,,"Robot systems based on ROS are growing in popularity. While they are vulnerable from a cybersecurity perspective, they still provide a solid framework for many research projects. The components can easily communicate with each other, share information and send control commands freely and without major restrictions. In special fields (medical, military, etc.) such freedom is dangerous and not acceptable. To foster the application of ROS in medical research field we are hardening its internal architecture and elevate the software security. In this paper we propose an application layer solution for the dataflow control and protection between the nodes.",Authorization; Cameras; Computer crime; cybersecurity; Databases; medical devices; Middleware; Robot Operating System; Robots; ROS 1.x,Increasing ROS 1.x communication security for medical surgery robot,,x,,,,,,,,,NO,
S688,2,forward,conferencePaper,2018,"Narayanan, Vedanth; Bobba, Rakesh B.",Proceedings of the 2018 Workshop on Cyber-Physical Systems Security and PrivaCy,10.1145/3264888.3264894,https://doi.org/10.1145/3264888.3264894,"Smart Manufacturing (SM) is envisioned to make manufacturing processes more efficient through automation and integration of networked information systems. Robotic arms are integral to this vision. However the benefits of SM, enabled by automation and networking, also come with cyber risks. In this work, we propose an anomaly detection framework for robotic arms in a manufacturing pipeline and integrate it into Robot Operating System (ROS), a middleware framework whose variants are being considered for deployment in industrial environments for flexible automation. In particular, we explore whether the repetitive behavior of an industrial arm can be leveraged to detect anomalous behaviour that may indicate an intrusion. Based on a learned model, we classify a robot's actions as anomalous or benign. We introduce the notion of a 'tolerance envelope' to train a supervised learning model. Our empirical evaluation shows that anomalies that take the robot out of pre-determined tolerance levels can be detected with high accuracy.",anomaly detection; robot operating system; robotics; smart manufacturing; tolerance envelope,Learning Based Anomaly Detection for Industrial Arm Applications,,x,,,,,,,,,NO,
S687,2,forward,conferencePaper,2019,"Desai, Ankush; Ghosh, Shromona; Seshia, Sanjit A.; Shankar, Natarajan; Tiwari, Ashish",2019 49th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN),10.1109/DSN.2019.00027,,"The recent drive towards achieving greater autonomy and intelligence in robotics has led to high levels of complexity. Autonomous robots increasingly depend on third-party off-the-shelf components and complex machine-learning techniques. This trend makes it challenging to provide strong design-time certification of correct operation. To address these challenges, we present SOTER, a robotics programming framework with two key components: (1) a programming language for implementing and testing high-level reactive robotics software, and (2) an integrated runtime assurance (RTA) system that helps enable the use of uncertified components, while still providing safety guarantees. SOTER provides language primitives to declaratively construct a RTA module consisting of an advanced, high-performance controller (uncertified), a safe, lower-performance controller (certified), and the desired safety specification. The framework provides a formal guarantee that a well-formed RTA module always satisfies the safety specification, without completely sacrificing performance by using higher performance uncertified components whenever safe. SOTER allows the complex robotics software stack to be constructed as a composition of RTA modules, where each uncertified component is protected using a RTA module. To demonstrate the efficacy of our framework, we consider a real-world case-study of building a safe drone surveillance system. Our experiments both in simulation and on actual drones show that the SOTER-enabled RTA ensures the safety of the system, including when untrusted third-party components have bugs or deviate from the desired behavior.",Assured Autonomy; Autonomous Robots; Drones; Formal Methods; Programming; Programming Languages; Robots; ROS; Runtime Assurance; Runtime Verification; Safe Robotics; Safety; Software; Surveillance; Trajectory,SOTER: A Runtime Assurance Framework for Programming Safe Robotics Systems,x,,,,,,,,,,NO,
S686,2,forward,conferencePaper,2017,"Joshi, Yogi; Tchamgoue, Guy Martin; Fischmeister, Sebastian",Proceedings of the Symposium on Applied Computing,10.1145/3019612.3019827,https://doi.org/10.1145/3019612.3019827,"Runtime verification techniques mostly assume the existence of complete execution traces. However, real-world systems often produce lossy traces due to network issues, partial instrumentation, sampling, and logging failures. A few verification techniques have recently emerged to handle systems with incomplete traces. Some of these techniques sacrifice soundness and may produce imprecise verdicts. The others depend on the recovery of lost events for a sound and meaningful verdict. In this paper, we present an offline algorithm that identifies whether an Ltl (Linear Temporal Logic) formula can be soundly monitored in the presence of a transient loss of events in a trace and constructs a monitor accordingly. More, we introduce the concept of monotonicity to express the persistence of the verdicts of a loss-tolerant monitor regardless of the recovery of the lost events. Our evaluation demonstrates the applicability, efficiency and practicality of the technique on common Ltl patterns, but also on traces from Google Clusters and MPlayer.",LTL; runtime verification; transient loss,Runtime verification of LTL on lossy traces,x,,,,,,,,,,NO,
S685,2,forward,conferencePaper,2017,"Portugal, David; Pereira, Samuel; Couceiro, Micael S.",2017 26th IEEE International Symposium on Robot and Human Interactive Communication (RO-MAN),10.1109/ROMAN.2017.8172422,,"With the growing proliferation of robots in our society comes the natural concern of security. However, this is an often overlooked issue in robotic systems, as the focus is commonly placed in robot functionality and innovation. Unauthorized access to a robot, or a multi-robot network, may seriously compromise the system, potentially leading to unacceptable consequences, such as putting in danger humans that share the environment with the robot(s). In this paper, a deeper look is taken into the security issue in human-robot shared environments by surveying existing work and analyzing security issues in the widely used Robot Operation System (ROS), discussing the different layers of security in a robotic network architecture, and proposing several hierarchical security mechanisms, using the STOP project case study in surveillance robotics.",Authentication; Ports (Computers); Privacy; Robot sensing systems; Service robots,The role of security in human-robot shared environments: A case study in ROS-based surveillance robots,,x,,,,,,,,,NO,
S684,2,forward,journalArticle,2019,"Cavalcanti, Ana; Sampaio, Augusto; Miyazawa, Alvaro; Ribeiro, Pedro; Conserva Filho, Madiel; Didier, André; Li, Wei; Timmis, Jon",Science of Computer Programming,10.1016/j.scico.2019.01.004,https://www.sciencedirect.com/science/article/pii/S0167642318301655,"Simulation is a favoured technique for analysis of robotic systems. Currently, however, simulations are programmed in an ad hoc way, for specific simulators, using either proprietary languages or general languages like C or C++. Even when a higher-level language is used, no clear relation between the simulation and a design model is established. We describe a tool-independent notation called RoboSim, designed specifically for modelling of (verified) simulations. We describe the syntax, well-formedness conditions, and semantics of RoboSim. We also show how we can use RoboSim models to check if a simulation is consistent with a functional design written in a UML-like notation akin to those often used by practitioners on an informal basis. We show how to check whether the design enables a feasible scheduling of behaviours in cycles as needed for a simulation, and formalise implicit assumptions routinely made when programming simulations. We develop a running example and three additional case studies to illustrate RoboSim and the proposed verification techniques. Tool support is also briefly discussed. Our results enable the description of simulations using tool-independent diagrammatic models amenable to verification and automatic generation of code.",CSP; Process algebra; Refinement; Semantics; State machines,Verified simulation for robotics,x,,,,,,,,,,NO,
S683,2,forward,bookSection,2018,"Tosun, Tarik; Jing, Gangyuan; Kress-Gazit, Hadas; Yim, Mark",Robotics Research: Volume 1,,https://doi.org/10.1007/978-3-319-51532-8_15,"To take full advantage of the flexibility of a modular robot system, users must be able to create and verify new configurations and behaviors quickly. We present a design framework that facilitates rapid creation of new configurations and behaviors through composition of existing ones, and tools to verify configurations and behaviors as they are being created. New configurations are created by combining existing sub-configurations, for example combining four legs and a body to create a walking robot. Behaviors are associated with each configuration, so that when sub-configurations are composed, their associated behaviors are immediately available for composition as well. We introduce a new motion description language (Series-Parallel Action Graphs) that facilitates the rapid creation of complex behaviors by composition of simpler behaviors. We provide tools that automatically verify configurations and behaviors during the design process, allowing the user to identify problems early and iterate quickly. In addition to verification, users can evaluate their configurations and behaviors in a physics-based simulator.",,Computer-Aided Compositional Design and Verification for Modular Robots,x,,,,,,,,,,NO,
S682,2,forward,journalArticle,2018,"Wang, Rui; Wei, Yingxia; Song, Houbing; Jiang, Yu; Guan, Yong; Song, Xiaoyu; Li, Xiaojuan",IEEE Transactions on Industrial Informatics,10.1109/TII.2017.2788901,,"Robot systems have been widely used in industry and also play an important role in human social life. Safety critical applications usually demand rigorously formal verification to ensure correctness. But for the increasing complexity of dynamic environments and applications, it is not easy to build a comprehensive model for the traditional offline verification. In this paper, we propose RobotRV, the first data-centered real-time verification approach for the robot system. Within this approach, a domain-specific language named RoboticSpec is designed to specify the complex application scenario of the robot system, the data packets transmitted in the robot system, and the safety critical temporal properties. Then, we develop an engine to automatically translate the RoboticSpec model into a real-time verifier. The generated verifier serves as an independent plug-in component for the runtime verification of concerned temporal properties. We applied the proposed approach to a real robot system. As presented in experiment results, our method detected potential failures, and improved the safety of robot system.",Collision avoidance; real-time data; Real-time systems; robot system; Runtime; runtime verification; Safety; Service robots; Testing,From Offline Towards Real-Time Verification for Robot Systems,x,,,,,,,,,,NO,
S681,2,forward,conferencePaper,2018,"Foughali, Mohammed; Berthomieu, Bernard; Dal Zilio, Silvano; Hladik, Pierre-Emmanuel; Ingrand, Félix; Mallet, Anthony",2018 IEEE/ACM 6th International FME Workshop on Formal Methods in Software Engineering (FormaliSE),,,"Software constitutes a major part of the development of robotic and autonomous systems and is critical to their successful deployment in our everyday life. Robotic software must thus run and perform as specified. Since most of these systems are used in a hard real-time context, the schedulability of their tasks is a crucial property. In this work, we propose to use formal methods to check whether the tasks of a robotic application are schedulable with respect to a given hardware platform. For this, we automatically translate functional components specified in GenoM into FIACRE, a formal language for timed systems. The generated models integrate realistic real-time schedulers based on the FCFS and the SJF cooperative policies. We use then the model-checker TINA to assert schedulability properties. We carry out experiments on a real robotic system, namely a quadcopter flight controller. We demonstrate that, on its actual hardware, schedulability properties can be formally expressed and verified. We give examples on how we can check other important behavioral and timed properties on the same synthesized models.",Bioinformatics; Formal verification; Genomics; Hardware; Petri nets; Real time; Real-time systems; Robotics; Robots; Scheduling; Software; Software engineering; Task analysis,Formal Verification of Complex Robotic Systems on Resource-Constrained Platforms,x,,,,,,,,,,NO,
S680,2,forward,conferencePaper,2017,"Halder, Raju; Proença, José; Macedo, Nuno; Santos, André",2017 IEEE/ACM 5th International FME Workshop on Formal Methods in Software Engineering (FormaliSE),10.1109/FormaliSE.2017.9,,"Robotic technologies are continuously transforming the domestic and the industrial environments. Recently the Robotic Operating System (ROS), has been widely adopted both by industry and academia, becoming one of the most popular middleware frameworks for developing robot applications. Guaranteeing the correct behaviour of robotic systems is, however, challenging due to their potential for parameterization and heterogeneity. Although different approaches exist, focusing on concrete domain spaces for specific scenarios, no general approach to reason about ROS systems has yet arisen. This paper proposes an approach to model and verify ROS systems using real time properties, focusing on one of the main features of ROS, the communication between nodes. It takes low-level parameters into account, such as queue sizes and timeouts, and uses timed automata as the modelling language. The robot Kobuki is used as a complex case study, over which properties are automatically verified using the UPPAAL model checker, enabling the identification of problematic parameter combinations.",Automata; Clocks; Monitoring; Peer-to-peer computing; Safety; Service robots,Formal Verification of ROS-Based Robotic Applications Using Timed-Automata,,,,,,,,,x,,NO,
S679,2,forward,journalArticle,2020,"Webster, Matt; Western, David; Araiza-Illan, Dejanira; Dixon, Clare; Eder, Kerstin; Fisher, Michael; Pipe, Anthony G",The International Journal of Robotics Research,10.1177/0278364919883338,https://doi.org/10.1177/0278364919883338,"We present an approach for the verification and validation (V&V) of robot assistants in the context of human–robot interactions, to demonstrate their trustworthiness through corroborative evidence of their safety and functional correctness. Key challenges include the complex and unpredictable nature of the real world in which assistant and service robots operate, the limitations on available V&V techniques when used individually, and the consequent lack of confidence in the V&V results. Our approach, called corroborative V&V, addresses these challenges by combining several different V&V techniques; in this paper we use formal verification (model checking), simulation-based testing, and user validation in experiments with a real robot. This combination of approaches allows V&V of the human–robot interaction task at different levels of modeling detail and thoroughness of exploration, thus overcoming the individual limitations of each technique. We demonstrate our approach through a handover task, the most critical part of a complex cooperative manufacturing scenario, for which we propose safety and liveness requirements to verify and validate. Should the resulting V&V evidence present discrepancies, an iterative process between the different V&V techniques takes place until corroboration between the V&V techniques is gained from refining and improving the assets (i.e., system and requirement models) to represent the human–robot interaction task in a more truthful manner. Therefore, corroborative V&V affords a systematic approach to “meta-V&V,” in which different V&V techniques can be used to corroborate and check one another, increasing the level of certainty in the results of V&V.",Human–robot interaction; model checking; simulation; testing; validation; verification,A corroborative approach to verification and validation of human–robot teams,x,,,,,,,,,,NO,
S678,2,forward,journalArticle,2015,"Schumann, Johann; Rozier, Kristin Y.; Reinbacher, Thomas; Mengshoel, Ole J.; Mbaya, Timmy; Ippolito, Corey",International Journal of Prognostics and Health Management,10.36001/ijphm.2015.v6i1.2243,http://papers.phmsociety.org/index.php/ijphm/article/view/2243,"For unmanned aerial systems (UAS) to be successfully deployed and integrated within the national airspace, it is imperative that they possess the capability to effectively complete their missions without compromising the safety of other aircraft, as well as persons and property on the ground. This necessity creates a natural requirement for UAS that can respondto uncertain environmental conditions and emergent failures in real-time, with robustness and resilience close enough to those of manned systems. We introduce a system that meets this requirement with the design of a real-time onboard system health management (SHM) capability to continuously monitor sensors, software, and hardware components. This system can detect and diagnose failures and violations of safety or performance rules during the flight of a UAS. Our approach to SHM is three-pronged, providing: (1) real-time monitoring of sensor and software signals; (2) signal analysis, preprocessing, and advanced on-the-fly temporal and Bayesian probabilistic fault diagnosis; and (3) an unobtrusive, lightweight, read-only, low-power realization using Field Programmable Gate Arrays (FPGAs) that avoids overburdening limited computing resources or costly re-certification of flight software. We call this approach rt-R2U2, a name derived from its requirements. Our implementation provides a novel approach of combining modular building blocks, integrating responsive runtime monitoring of temporal logic system safety requirements with model-based diagnosis and Bayesian network-based probabilistic analysis. We demonstrate this approach using actual flight data from theNASA Swift UAS.",Bayesian network,"Towards Real-time, On-board, Hardware-supported Sensor and Software Health Management for Unmanned Aerial Systems",x,,,,,,,,,,NO,
S677,2,forward,journalArticle,2019,"Luckcuck, Matt; Farrell, Marie; Dennis, Louise A.; Dixon, Clare; Fisher, Michael",ACM Computing Surveys,10.1145/3342355,https://doi.org/10.1145/3342355,"Autonomous robotic systems are complex, hybrid, and often safety critical; this makes their formal specification and verification uniquely challenging. Though commonly used, testing and simulation alone are insufficient to ensure the correctness of, or provide sufficient evidence for the certification of, autonomous robotics. Formal methods for autonomous robotics have received some attention in the literature, but no resource provides a current overview. This article systematically surveys the state of the art in formal specification and verification for autonomous robotics. Specially, it identifies and categorizes the challenges posed by, the formalisms aimed at, and the formal approaches for the specification and verification of autonomous robotics.",autonomous robotics; formal methods; formal specification; Formal verification,Formal Specification and Verification of Autonomous Robotic Systems: A Survey,x,,,,,,,,,,NO,
S676,2,forward,journalArticle,2021,"Santos, André; Cunha, Alcino; Macedo, Nuno",arXiv:2103.01603 [cs],,http://arxiv.org/abs/2103.01603,"This tool paper presents the High-Assurance ROS (HAROS) framework. HAROS is a framework for the analysis and quality improvement of robotics software developed using the popular Robot Operating System (ROS). It builds on a static analysis foundation to automatically extract models from the source code. Such models are later used to enable other sorts of analyses, such as Model Checking, Runtime Verification, and Property-based Testing. It has been applied to multiple real-world examples, helping developers find and correct various issues.",Computer Science - Robotics; Computer Science - Software Engineering; D.2.1; D.2.4; D.2.5; D.2.8; D.2.9,The High-Assurance ROS Framework,,,,,,,,,x,,NO,
S675,2,forward,conferencePaper,2021,"Miyamoto, Takumi; Lee, Jae Hoon; Okamoto, Shingo","2021 International Conference on Computer, Control and Robotics (ICCCR)",10.1109/ICCCR49711.2021.9349410,,"Transportation is a key sector in various fields and highly affects the efficiency of industries and other related organizations. Especially, in warehouses, the transport of goods from one point to another is dominated by manually operated carts or forklifts, which makes it labor-intensive work. In this paper, to reduce the burden of workers engaged in the transportation of goods and materials, a new memory-based system integrated into a wheeled robot was developed. It records a route previously taken through the use of a tracking camera and an IMU sensor. The saved motion trajectories are later used as a reference by the robot for its autonomous movement when carrying a burden. The developed system was confirmed through experiments by the developed hardware and software systems. As a result, a reasonable result was obtained when tested in an indoor environment.",Cameras; Indoor environment; memory-based homing motion; mobile robot; Mobile robots; position estimation; Robot vision systems; Software algorithms; Tracking; Transportation,Development of a Memory-Based Homing Algorithm Using a Tracking Camera for an Autonomous Cart,x,,,,,,,,,,NO,
S674,2,forward,journalArticle,2020,"Wirkus, Malte; Arnold, Sascha; Berghöfer, Elmar",Journal of Intelligent & Robotic Systems,10.1007/s10846-020-01234-9,https://doi.org/10.1007/s10846-020-01234-9,"The use of autonomous robots in areas that require executing a broad range of different tasks is currently hampered by the high complexity of the software that adapts the robot controller to different situations the robot would face. Current robot software frameworks facilitate implementing controllers for individual tasks with some variability, however, their possibilities for adapting the controllers at runtime are very limited and don’t scale with the requirements of a highly versatile autonomous robot. With the software presented in this paper, the behavior of robots is implemented modularly by composing individual controllers, between which it is possible to switch freely at runtime, since the required transitions are calculated automatically. Thereby the software developer is relieved of the task to manually implement and maintain the transitions between different operational modes of the robot, what largely reduces software complexity for larger amounts of different robot behaviors. The software is realized by a model-based development approach. We will present the metamodels enabling the modeling of the controllers as well as the runtime architecture for the management of the controllers on distributed computation hardware. Furthermore, this paper introduces an algorithm that calculates the transitions between two controllers. A series of technical experiments verifies the choice of the underlying middleware and the performance of online controller reconfiguration. A further experiment demonstrates the applicability of the approach to real robotics applications.",,Online Reconfiguration of Distributed Robot Control Systems for Modular Robot Behavior Implementation,x,,,,,,,,,,NO,
S673,2,forward,journalArticle,2020,"Arrais, Rafael; Ribeiro, Paulo; Domingos, Henrique; Veiga, Germano",International Journal of Advanced Robotic Systems,10.1177/1729881420910316,https://doi.org/10.1177/1729881420910316,"Motivated by the Fourth Industrial Revolution, there is an ever-increasing need to integrated Cyber-Physical Systems in industrial production environments. To address the demand for flexible robotics in contemporary industrial environments and the necessity to integrate robots and automation equipment in an efficient manner, an effective, bidirectional, reliable and structured data interchange mechanism is required. As an answer to these requirements, this article presents ROBIN, an open-source middleware for achieving interoperability between the Robot Operating System and CODESYS, a softPLC that can run on embedded devices and that supports a variety of fieldbuses and industrial network protocols. The referred middleware was successfully applied and tested in various industrial applications such as battery management systems, motion, robotic manipulator and safety hardware control, and horizontal integration between a mobile manipulator and a conveyor system.",Cyber-Physical Systems; IEC 61131-3; open-source middleware; plug’n’produce; ROS,ROBIN: An open-source middleware for plug‘n’produce of Cyber-Physical Systems,,x,,,,,,,,,NO,
S672,2,forward,conferencePaper,2020,"Rivera, Sean; Iannillo, Antonio Ken; Lagraa, Sofiane; Joly, Clément; State, Radu",2020 25th International Conference on Engineering of Complex Computer Systems (ICECCS),10.1109/ICECCS51672.2020.00029,,"In this paper, we leverage the newly integrated extended Berkely Packet Filters (eBPF) and eXpress Data Path (XDP) to build ROS-FM, a high-performance inline network-monitoring framework for ROS. We extend the framework with a security policy enforcement tool and distributed data visualization tool for ROS1 and ROS2 systems. We compare the overhead of this framework against the generic ROS monitoring tools, and we test the policy enforcement against existing ROS penetration testing tools to evaluate their effectiveness. We find that the network monitoring framework and the associated visualization tools outperform the existing ROS monitoring tools for all robots with more than 10 running processes and that the monitoring tool uses only 4% of the overhead of the generic tools for robots with 80 processes. We further demonstrate the effectiveness of the security tool against common attacks in both ROS1 and ROS2.",Data visualization; eBPF; Monitoring; Penetration testing; Robots; ROS; Security; Tools; XDP,ROS-FM: Fast Monitoring for the Robotic Operating System(ROS),,x,,,,,,,,,NO,
S671,2,forward,journalArticle,2021,"Hammoudeh García, Nadia; Deshpande, Harshavardhan; Santos, André; Kahl, Björn; Bordignon, Mirko",Software and Systems Modeling,10.1007/s10270-021-00873-2,https://doi.org/10.1007/s10270-021-00873-2,"Model-driven engineering (MDE) addresses central aspects of robotics software development. MDE could enable domain experts to leverage the expressiveness of models, while implementation details on different hardware platforms would be handled by automatic code generation. Today, despite strong MDE efforts in the robotics research community, most evidence points to manual code development being the norm. A possible reason for MDE not being accepted by robot software developers could be the wide range of applications and target platforms, which make all-encompassing MDE IDEs hard to develop and maintain. Therefore, we chose to leverage a large corpus of open-source software widely adopted by the robotics community to extract common structures and gain insight on how and where MDE can support the developers to work more efficiently. We pursue modeling as a complement, rather than imposing MDE as separate solution. Our previous work introduced metamodels to describe components, their interactions, and their resulting composition. In this paper, we present two methods based on metamodels for automated generation of models from manually written artifacts: (1) through static code analysis and (2) by monitoring the execution of a running system. For both methods, we present tools that leverage the potentials of our contributions, with a special focus on their application at runtime to observe and diagnose a real system during its execution. A comprehensive example is provided as a walk-through for robotics software practitioners.",,Bootstrapping MDE development from ROS manual code: Part 2—Model generation and leveraging models at runtime,,,,,,,,,x,,NO,
S670,2,forward,conferencePaper,2020,"Fischer-Nielsen, Anders; Fu, Zhoulai; Su, Ting; Wąsowski, Andrzej",2020 IEEE/ACM 42nd International Conference on Software Engineering: Software Engineering in Practice (ICSE-SEIP),,,"A dependency bug is a software fault that manifests itself when accessing an unavailable asset. Dependency bugs are pervasive and we all hate them. This paper presents a case study of dependency bugs in the Robot Operating System (ROS), applying mixed methods: a qualitative investigation of 78 dependency bug reports, a quantitative analysis of 1354 ROS bug reports against 19553 reports in the top 30 GitHub projects, and a design of three dependency linters evaluated on 406 ROS packages.The paper presents a definition and a taxonomy of dependency bugs extracted from data. It describes multiple facets of these bugs and estimates that as many as 15% (!) of all reported bugs are dependency bugs. We show that lightweight tools can find dependency bugs efficiently, although it is challenging to decide which tools to build and difficult to build general tools. We present the research problem to the community, and posit that it should be feasible to eradicate it from software development practice.",bugs; build failures; Computer bugs; empirical software engineering; evolution; integration; Libraries; modularity; Operating systems; Robot kinematics; Robots; ROS; Software development management; Tools,The Forgotten Case of the Dependency Bugs : On the Example of the Robot Operating System,,,,,,,,,x,,NO,
S669,2,forward,conferencePaper,2020,"Neto, Tiago; Arrais, Rafael; Sousa, Armando; Santos, André; Veiga, Germano",Robot 2019: Fourth Iberian Robotics Conference,10.1007/978-3-030-35990-4_51,,"Modern industry is shifting towards flexible, advanced robotic systems to meet the increasing demand for custom-made products with low manufacturing costs and to promote a collaborative environment for humans and robots. As a consequence of this industrial revolution, some traditional, mechanical- and hardware-based safety mechanisms are discarded in favour of a safer, more dependable robot software. This work presents a case study of assessing and improving the internal quality of a European research mobile manipulator, operating in a real industrial environment, using modern static analysis tools geared for robotic software. Following an iterative approach, we managed to fix about 90% of the reported issues, resulting in code that is easier to use and maintain.",Mobile manipulator; ROS; Safety; Software static analysis,Applying Software Static Analysis to ROS: The Case Study of the FASTEN European Project,,,,,,,,,x,,NO,
S668,2,forward,journalArticle,2021,"Albonico, Michel; Malavolta, Ivano; Pinto, Gustavo; Guzman, Emitza; Chinnappan, Katerina; Lago, Patricia",arXiv:2103.13762 [cs],,http://arxiv.org/abs/2103.13762,"Robots are becoming more and more commonplace in many industry settings. This successful adoption can be partly attributed to (1) their increasingly affordable cost and (2) the possibility of developing intelligent, software-driven robots. Unfortunately, robotics software consumes significant amounts of energy. Moreover, robots are often battery-driven, meaning that even a small energy improvement can help reduce its energy footprint and increase its autonomy and user experience. In this paper, we study the Robot Operating System (ROS) ecosystem, the de-facto standard for developing and prototyping robotics software. We analyze 527 energy-related data points (including commits, pull-requests, and issues on ROS-related repositories, ROS-related questions on StackOverflow, ROS Discourse, ROS Answers, and the official ROS Wiki). Our results include a quantification of the interest of roboticists on software energy efficiency, 10 recurrent causes, and 14 solutions of energy-related issues, and their implied trade-offs with respect to other quality attributes. Those contributions support roboticists and researchers towards having energy-efficient software in future robotics projects.",Computer Science - Robotics; Computer Science - Software Engineering,Mining Energy-Related Practices in Robotics Software,,,,,,,,,x,,NO,
S667,2,forward,bookSection,2019,"Come, David; Brunel, Julien; Doose, David",Robotic Intelligence,,https://www.worldscientific.com/doi/abs/10.1142/9789811203480_0012,,C++; code query; formal methods; ROS; temporal logic,Improving code quality in ROS packages using a temporal extension of first-order logic,,,,,,,,,x,,NO,
S666,2,forward,conferencePaper,2018,"Pinto, Tiago; Arrais, Rafael; Veiga, Germano",2018 IEEE 16th International Conference on Industrial Informatics (INDIN),10.1109/INDIN.2018.8472057,,"The contemporary adoption of Cyber-Physical Systems and improvements in robotic applications in industrial scenarios demands for horizontal integration mechanisms with already existing automation equipment, controlled by PLCs. This paper aims to shorten the gap between the automation and robotics domain, by proposing an Interprocess Communication method to establish interoperability between robotic systems and automation equipment in a reliable and straightforward manner. In particular, this paper introduces a novel approach for linking ROS and IEC 61131-3 by way of shared memory interfaces, enabling and promoting their interactions. Moreover, this paper addresses the applied synchronization mechanism for handling concurrent accesses to the shared memory location, explores data type mapping between ROS and IEC 61131-3, and identifies some practical industrial applications.",Automation; Hardware; IEC Standards; Interoperability; Service robots,Bridging Automation and Robotics: an Interprocess Communication between IEC 61131–3 and ROS,,x,,,,,,,,,NO,
S665,2,forward,conferencePaper,2019,"Hammoudeh Garcia, Nadia; Deval, Ludovic; Lüdtke, Mathias; Santos, Andre; Kahl, Björn; Bordignon, Mirko",2019 ACM/IEEE 22nd International Conference on Model Driven Engineering Languages and Systems (MODELS),10.1109/MODELS.2019.00-11,,"In principle, Model-Driven Engineering (MDE) addresses central aspects of robotics software development. Domain experts could leverage the expressiveness of models; implementation details over different hardware could be handled by automatic code generation. In practice, most evidence points to manual code development as the norm, despite several MDE efforts in robotics. Possible reasons for this disconnect are the wide ranges of applications and target platforms making all-encompassing MDE IDEs hard to develop and maintain, with developers reverting to writing code manually. Acknowledging this, and given the opportunity to leverage a large corpus of open-source software widely adopted by the robotics community, we pursue modeling as a complement, rather than an alternative, to manually written code. Our previous work introduced metamodels to describe components, their interactions, and their resulting composition, as inspired by, but not limited to, the de-facto standard Robot Operating System (ROS). In this paper we put such metamodels into use through two contributions. First, we automate the generation of models from manually written artifacts through extraction from source code and runtime system monitoring. Second, we make available an easy-to-use web infrastructure to perform the extraction, together with a growing database of models so generated. Our aim with this tooling, publicly available both as-a-service and as source code, is to lower the MDE barrier for practitioners and leverage models to 1) improve the understanding of manually written code; 2) perform correctness checks; and 3) systematize the definition and adoption of best practices through large-scale generation of models from existing code. A comprehensive example is provided as a walk-through for robotics software practitioners.",development environments; models; ROS,Bootstrapping MDE Development from ROS Manual Code - Part 2: Model Generation,,,,,,,,,x,,NO,
S664,2,forward,conferencePaper,2019,"Pichler, Marc; Dieber, Bernhard; Pinzger, Martin",2019 Third IEEE International Conference on Robotic Computing (IRC),10.1109/IRC.2019.00020,,"Since its beginnings ten years ago, the Robot Operating System (ROS) has created a huge community of developers and researchers and is now the most widespread open-source framework for robotics development. It is used in research, prototyping but also in commercial products and supports a wide range of robotic platforms, sensors and highlevel data processing functions. While for a research platform, quality of the software developed with it is typically of lower importance, ROS is gradually moving towards industrial applications making software quality a premier topic. In this paper, we want to gain insights on how ROS is used in practice, how high the quality of the ROS packages and applications is, and where potential pitfalls in the use of ROS lie. To achieve this, we have analyzed several thousands of open-source ROS packages found on GitHub and Bitbucket for their quality and their interdependencies. Our results include packages on the rosdistro index and, more importantly, packages that are not. From our results we show common issues in ROS-applications, quality implications, and also which packages of what quality are particularly popular.",dependency analysis; Indexes; Open source software; repository quality; ros; Service robots; software quality; Software quality; Tools,Can I Depend on you? Mapping the Dependency and Quality Landscape of ROS Packages,,,,,,,,,x,,NO,
S663,2,forward,conferencePaper,2019,"Santos, André; Cunha, Alcino; Macedo, Nuno",2019 Third IEEE International Conference on Robotic Computing (IRC),10.1109/IRC.2019.00018,,"The Robot Operating System (ROS) is one of the most popular open source robotic frameworks, and has contributed significantly to the fast development of robotics. Even though ROS provides many ready-made components, a robotic system is inherently complex, in particular regarding the architecture and orchestration of such components. Availability and analysis of a system's architecture at compile time is fundamental to ease comprehension and development of higher-quality software. However, ROS developers have to overcome this complexity relying mostly on testing and runtime visualisers. This work aims to enhance static-time support by proposing, firstly, a metamodel to describe the software architecture of ROS systems (the ROS Computation Graph) and, secondly, model extraction and visualisation tools for such architectural models. The provided tools allow users to specify custom-made queries over these models, enabling the static verification of relevant properties that had to be (manually) checked at runtime before.",Computational modeling; Computer architecture; robotics; Robots; Runtime; Software; software architecture; software quality; static analysis; Tools; Visualization,Static-Time Extraction and Analysis of the ROS Computation Graph,,,,,,,,,x,,NO,
S662,2,forward,conferencePaper,2018,"Santos, André; Cunha, Alcino; Macedo, Nuno","Proceedings of the 9th ACM SIGSOFT International Workshop on Automating TEST Case Design, Selection, and Evaluation",10.1145/3278186.3278195,https://doi.org/10.1145/3278186.3278195,"The Robot Operating System (ROS) is an open source framework for the development of robotic software, in which a typical system consists of multiple processes communicating under a publisher-subscriber architecture. A great deal of development time goes into orchestration and making sure that the communication interfaces comply with the expected contracts (e.g. receiving a message leads to the publication of another message). Orchestration mistakes are only detected during runtime, stressing the importance of component and integration testing in the verification process. Property-based Testing is fitting in this context, since it is based on the specification of contracts and treats tested components as black boxes, but there is no support for it in ROS. In this paper, we present a first approach towards automatic generation of test scripts for property-based testing of various configurations of a ROS system.",Property-based Testing; Robot Operating System; Software Testing; Test Automation,Property-based testing for the robot operating system,,,,x,,,,,x,,NO,
S661,2,forward,journalArticle,2021,"Malavolta, Ivano; Lewis, Grace A.; Schmerl, Bradley; Lago, Patricia; Garlan, David",Journal of Systems and Software,10.1016/j.jss.2021.110969,https://linkinghub.elsevier.com/retrieve/pii/S0164121221000662,"Methods: We designed and conducted an observational study where we (i) built a dataset of 335 GitHub repositories containing real open-source ROS-based systems, and (ii) mined the repositories to extract and synthesize quantitative and qualitative findings about how roboticists are architecting ROS-based systems. Results: First, we extracted an empirically-grounded overview of the state of the practice for architecting and documenting ROS-based systems. Second, we synthesized a catalog of 47 architecting guidelines for ROS-based systems. Third, the extracted guidelines were validated by 119 roboticists working on real-world open-source ROS-based systems. Conclusion: Roboticists can use our architecting guidelines for applying good design principles to develop robots that meet quality requirements, and researchers can use our results as evidence-based indications about how real-world ROS systems are architected today, thus inspiring future research contributions.",,Mining guidelines for architecting robotics software,,,,,,,,,x,,NO,
S660,2,forward,conferencePaper,2020,"Stoll, Hannes; Koch, Eduard; Sax, Eric",2020 IEEE 23rd International Conference on Intelligent Transportation Systems (ITSC),10.1109/ITSC45102.2020.9294319,,"In modern cars, software functions and services account for a large part of value creation and competitive differentiation. Several tools exist to address the development of such electrical/electronic architectures (E/E-A). In industry, the proprietary tool PREEvision developed by Vector Informatik GmbH is widely used to support the development for AUTOSAR, while in science and research, tools and ecosystems such as the Robot Operating System (ROS) are preferred because of their open-source nature. This leads to a multitude of freely available ROS components whose reusability in industrial AUTOSAR-based projects is desirable. Therefore, in this paper we present an approach to transform models between both worlds and thus to link them. This enables the further use of already existing components.",Biological system modeling; Robot sensing systems; Robots; Service robots; Software; Tools; Unified modeling language,Integration of ROS communication interfaces in a model-based tool for the description of AUTOSAR-compliant electrical/electronic architectures (E/E-A) in vehicle development,,,,,,,,,x,,NO,
S659,2,forward,webpage,,,,,https://www.proquest.com/openview/b86bb8971977c6a485982d26e66f4f12/1?pq-origsite=gscholar&cbl=18750&diss=y,"Explore millions of resources from scholarly journals, books, newspapers, videos and more, on the ProQuest Platform.",,CHRIS ROS Modeling: The Foundation for an Autonomous Systems Workbench - ProQuest,,,,,,,,,x,,NO,
S658,2,forward,journalArticle,2021,"Malavolta, Ivano; Lewis, Grace A.; Schmerl, Bradley; Lago, Patricia; Garlan, David",Journal of Systems and Software,10.1016/j.jss.2021.110969,https://www.sciencedirect.com/science/article/pii/S0164121221000662,"Context: The Robot Operating System (ROS) is the de-facto standard for robotics software. However, ROS-based systems are getting larger and more complex and could benefit from good software architecture practices. Goal: We aim at (i) unveiling the state-of-the-practice in terms of targeted quality attributes and architecture documentation in ROS-based systems, and (ii) providing empirically-grounded guidance to roboticists about how to properly architect ROS-based systems. Methods: We designed and conducted an observational study where we (i) built a dataset of 335 GitHub repositories containing real open-source ROS-based systems, and (ii) mined the repositories to extract and synthesize quantitative and qualitative findings about how roboticists are architecting ROS-based systems. Results: First, we extracted an empirically-grounded overview of the state of the practice for architecting and documenting ROS-based systems. Second, we synthesized a catalog of 47 architecting guidelines for ROS-based systems. Third, the extracted guidelines were validated by 119 roboticists working on real-world open-source ROS-based systems. Conclusion: Roboticists can use our architecting guidelines for applying good design principles to develop robots that meet quality requirements, and researchers can use our results as evidence-based indications about how real-world ROS systems are architected today, thus inspiring future research contributions.",Robotics; ROS; Software architecture,Mining guidelines for architecting robotics software,,,,,,,,,x,,NO,
S657,2,forward,journalArticle,2019,"Deval, L.; Bordignon, M.; Kahl, B.; Santos, André Filipe; Luedtke, M.; Garcia, N. H.",,10.1109/models.2019.00-11,http://repositorio.inesctec.pt/handle/123456789/11437,"In principle, Model-Driven Engineering (MDE) addresses central aspects of robotics software development. Domain experts could leverage the expressiveness of models; implementation details over different hardware could be handled by automatic code generation. In practice, most evidence points to manual code development as the norm, despite several MDE efforts in robotics. Possible reasons for this disconnect are the wide ranges of applications and target platforms making all-encompassing MDE IDEs hard to develop and maintain, with developers reverting to writing code manually. Acknowledging this, and given the opportunity to leverage a large corpus of open-source software widely adopted by the robotics community, we pursue modeling as a complement, rather than an alternative, to manually written code. Our previous work introduced metamodels to describe components, their interactions, and their resulting composition, as inspired by, but not limited to, the de-facto standard Robot Operating System (ROS). In this paper we put such metamodels into use through two contributions [1]. First, we automate the generation of models from manually written artifacts through extraction from source code and runtime system monitoring. Second, we make available an easy-to-use web infrastructure to perform the extraction, together with a growing database of models so generated. Our aim with this tooling, publicly available both as-a-service and as source code, is to lower the MDE barrier for practitioners and leverage models to 1) improve the understanding of manually written code; 2) perform correctness checks; and 3) systematize the definition and adoption of best practices through large-scale generation of models from existing code. A comprehensive example is provided as a walk-through for robotics software practitioners.",,Bootstrapping MDE Development from ROS Manual Code - Part 2: Model Generation,,,,,,,,,x,,NO,
S655,2,forward,journalArticle,2021,"Santos, André; Cunha, Alcino; Macedo, Nuno",arXiv:2103.01603 [cs],,http://arxiv.org/abs/2103.01603,"This tool paper presents the High-Assurance ROS (HAROS) framework. HAROS is a framework for the analysis and quality improvement of robotics software developed using the popular Robot Operating System (ROS). It builds on a static analysis foundation to automatically extract models from the source code. Such models are later used to enable other sorts of analyses, such as Model Checking, Runtime Verification, and Property-based Testing. It has been applied to multiple real-world examples, helping developers find and correct various issues.",Computer Science - Robotics; Computer Science - Software Engineering; D.2.1; D.2.4; D.2.5; D.2.8; D.2.9,The High-Assurance ROS Framework,,,,,,,,,x,,NO,
S654,2,forward,conferencePaper,2020,"Rivera, Sean; Iannillo, Antonio Ken; Lagraa, Sofiane; Joly, Clément; State, Radu",2020 25th International Conference on Engineering of Complex Computer Systems (ICECCS),10.1109/ICECCS51672.2020.00029,,"In this paper, we leverage the newly integrated extended Berkely Packet Filters (eBPF) and eXpress Data Path (XDP) to build ROS-FM, a high-performance inline network-monitoring framework for ROS. We extend the framework with a security policy enforcement tool and distributed data visualization tool for ROS1 and ROS2 systems. We compare the overhead of this framework against the generic ROS monitoring tools, and we test the policy enforcement against existing ROS penetration testing tools to evaluate their effectiveness. We find that the network monitoring framework and the associated visualization tools outperform the existing ROS monitoring tools for all robots with more than 10 running processes and that the monitoring tool uses only 4% of the overhead of the generic tools for robots with 80 processes. We further demonstrate the effectiveness of the security tool against common attacks in both ROS1 and ROS2.",Data visualization; eBPF; Monitoring; Penetration testing; Robots; ROS; Security; Tools; XDP,ROS-FM: Fast Monitoring for the Robotic Operating System(ROS),,x,,x,,,,,,,NO,
S653,2,forward,conferencePaper,2020,"Carvalho, Renato; Cunha, Alcino; Macedo, Nuno; Santos, André",2020 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS45743.2020.9341085,,"Robots are currently deployed in safety-critical domains but proper techniques to assess the functional safety of their software are yet to be adopted. This is particularly critical in ROS, where highly configurable robots are built by composing third-party modules. To promote adoption, we advocate the use of lightweight formal methods, automatic techniques with minimal user input and intuitive feedback. This paper proposes a technique to automatically verify system-wide safety properties of ROS-based applications at static time. It is based in the formalization of ROS architectural models and node behaviour in Electrum, over which system-wide specifications are subsequently model checked. To automate the analysis, it is deployed as a plug-in for HAROS, a framework for the assessment of ROS software quality aimed at the ROS community. The technique is evaluated in a real robot, AgRob V16, with positive results.",Computer architecture; Intelligent robots; Middleware; Model checking; Safety; Scalability; Software quality,Verification of system-wide safety properties of ROS applications,,,,,,,,,x,,NO,
S652,2,forward,conferencePaper,2020,"Cámara, Javier; Schmerl, Bradley; Garlan, David",Proceedings of the IEEE/ACM 15th International Symposium on Software Engineering for Adaptive and Self-Managing Systems,10.1145/3387939.3391591,https://doi.org/10.1145/3387939.3391591,"Self-adaptive systems increasingly need to reason about and adapt both structural and behavioral system aspects, such as in mobile service robots, which must reason about missions that they need to achieve and the architecture of the software executing them. Deciding how to best adapt these systems to run time changes is challenging because it entails considering mutual dependencies between the software architecture that the system is running and the outcome of plans for completing tasks, while also considering multiple trade-offs and uncertainties. Considering all these aspects in planning for adaptation often yields large solution spaces which cannot be adequately explored at run time. We address this challenge by proposing a planning approach able to consider the impact of mutual dependencies between software architecture and task planning on the satisfaction of mission goals. The approach is able to reason quantitatively about the outcome of adaptation decisions handling both the reconfiguration of the system's architecture and adaptation of task plans under uncertainty and in a rich trade-off space. Our results show: (i) feasibility of run-time decision-making for self-adaptation in an otherwise intractable solution space by dividing-and-conquering adaptation into architecture reconfiguration and task planning sub-problems, and (ii) improved quality of adaptation decisions with respect to decision making that does not consider dependencies between architecture and task planning.",architecture; assurances; mobile robotics; self-adaptation,Software architecture and task plan co-adaptation for mobile service robots,x,,,,,,,,,,NO,
S651,2,forward,webpage,,,,,https://www.proquest.com/openview/3225cbe2dba405d904a8b9dd3073e4c1/1?pq-origsite=gscholar&cbl=18750&diss=y,"Explore millions of resources from scholarly journals, books, newspapers, videos and more, on the ProQuest Platform.",,Dimensional Analysis of Robot Software Without Developer Annotations - ProQuest,x,,,,,,,,,,NO,
S650,2,forward,conferencePaper,2020,"Neto, Tiago; Arrais, Rafael; Sousa, Armando; Santos, André; Veiga, Germano",Robot 2019: Fourth Iberian Robotics Conference,10.1007/978-3-030-35990-4_51,,"Modern industry is shifting towards flexible, advanced robotic systems to meet the increasing demand for custom-made products with low manufacturing costs and to promote a collaborative environment for humans and robots. As a consequence of this industrial revolution, some traditional, mechanical- and hardware-based safety mechanisms are discarded in favour of a safer, more dependable robot software. This work presents a case study of assessing and improving the internal quality of a European research mobile manipulator, operating in a real industrial environment, using modern static analysis tools geared for robotic software. Following an iterative approach, we managed to fix about 90% of the reported issues, resulting in code that is easier to use and maintain.",Mobile manipulator; ROS; Safety; Software static analysis,Applying Software Static Analysis to ROS: The Case Study of the FASTEN European Project,,,,x,,,,,x,,NO,
S649,2,forward,conferencePaper,2019,"Hammoudeh Garcia, Nadia; Deval, Ludovic; Lüdtke, Mathias; Santos, Andre; Kahl, Björn; Bordignon, Mirko",2019 ACM/IEEE 22nd International Conference on Model Driven Engineering Languages and Systems (MODELS),10.1109/MODELS.2019.00-11,,"In principle, Model-Driven Engineering (MDE) addresses central aspects of robotics software development. Domain experts could leverage the expressiveness of models; implementation details over different hardware could be handled by automatic code generation. In practice, most evidence points to manual code development as the norm, despite several MDE efforts in robotics. Possible reasons for this disconnect are the wide ranges of applications and target platforms making all-encompassing MDE IDEs hard to develop and maintain, with developers reverting to writing code manually. Acknowledging this, and given the opportunity to leverage a large corpus of open-source software widely adopted by the robotics community, we pursue modeling as a complement, rather than an alternative, to manually written code. Our previous work introduced metamodels to describe components, their interactions, and their resulting composition, as inspired by, but not limited to, the de-facto standard Robot Operating System (ROS). In this paper we put such metamodels into use through two contributions. First, we automate the generation of models from manually written artifacts through extraction from source code and runtime system monitoring. Second, we make available an easy-to-use web infrastructure to perform the extraction, together with a growing database of models so generated. Our aim with this tooling, publicly available both as-a-service and as source code, is to lower the MDE barrier for practitioners and leverage models to 1) improve the understanding of manually written code; 2) perform correctness checks; and 3) systematize the definition and adoption of best practices through large-scale generation of models from existing code. A comprehensive example is provided as a walk-through for robotics software practitioners.",development environments; models; ROS,Bootstrapping MDE Development from ROS Manual Code - Part 2: Model Generation,,,,,,,,,x,,NO,
S647,2,forward,journalArticle,2020,"Alhanahnah, Mohannad",arXiv:2012.07196 [cs],,http://arxiv.org/abs/2012.07196,"Robot Operating System (ROS) is widely used in academia and industry, and importantly is leveraged in safety-critical robotic systems. The quality of ROS software can affect the safety and security properties of robotics systems; therefore, reliability and quality are imperative to guarantee. Source code static analysis is a key approach to formally perform software verification. We address two concerns in this paper: (1) conducting a systematic literature review study to provide a complete picture of the existing methods that analyze different aspects of ROS software, (2) performing empirical study to evaluate software properties that can influence the functionality of ROS. We leverage PMD1, an off-the-shelf static analysis tool, to conduct our empirical study over a set of ROS repositories implemented using Java. The survey analysis shows a significant shortcoming in the body of research by the lack of tailored analysis mechanisms for assessing ROS2 code and reveals that the majority of research efforts are centered around ROS1. Our empirical study shows that the Java code of ROS2 does not suffer from serious issues and the majority of the detected alerts are code style issues.",Computer Science - Cryptography and Security; Computer Science - Robotics; Computer Science - Software Engineering,Software Quality Assessment for Robot Operating System,,,,,x,,,,,,NO,
S646,2,forward,webpage,,,,,https://www.proquest.com/openview/b86bb8971977c6a485982d26e66f4f12/1?pq-origsite=gscholar&cbl=18750&diss=y,"Explore millions of resources from scholarly journals, books, newspapers, videos and more, on the ProQuest Platform.",,CHRIS ROS Modeling: The Foundation for an Autonomous Systems Workbench - ProQuest,,,,,x,,,,,,NO,
S645,2,forward,conferencePaper,2021,"Drumheller, William R.; Conner, David C.",SoutheastCon 2021,10.1109/SoutheastCon45413.2021.9401832,,"The Robot Operating System (ROS) is frequently used to develop complex robotic systems with many interacting software components. While ROS provides several tools for visualizing active ROS deployments, it lacks tools for Model-Based Engineering (MBE) during the development stage, and ROS lacks tools for easily documenting the interfaces and deployed components other than specific configuration and launch files themselves. This paper presents a software tool chain - dubbed CHRIS ROS Modeling - that enables users to document an existing ROS deployment. The information is stored as instances of a simplified metamodel in portable formats. The resulting information serves to document an existing system and will serve as the foundation for future work to develop an integrated MBE system. This paper compares our approach to similar approaches currently in development.",Computational modeling; Documentation; Portable document format; System testing; Tools; US Department of Transportation; Visualization,Documentation and Modeling of ROS Systems,,,,,,,,,X,,NO,
S644,2,forward,journalArticle,2019,"Deval, L.; Bordignon, M.; Kahl, B.; Santos, André Filipe; Luedtke, M.; Garcia, N. H.",,10.1109/models.2019.00-11,http://repositorio.inesctec.pt/handle/123456789/11437,"In principle, Model-Driven Engineering (MDE) addresses central aspects of robotics software development. Domain experts could leverage the expressiveness of models; implementation details over different hardware could be handled by automatic code generation. In practice, most evidence points to manual code development as the norm, despite several MDE efforts in robotics. Possible reasons for this disconnect are the wide ranges of applications and target platforms making all-encompassing MDE IDEs hard to develop and maintain, with developers reverting to writing code manually. Acknowledging this, and given the opportunity to leverage a large corpus of open-source software widely adopted by the robotics community, we pursue modeling as a complement, rather than an alternative, to manually written code. Our previous work introduced metamodels to describe components, their interactions, and their resulting composition, as inspired by, but not limited to, the de-facto standard Robot Operating System (ROS). In this paper we put such metamodels into use through two contributions [1]. First, we automate the generation of models from manually written artifacts through extraction from source code and runtime system monitoring. Second, we make available an easy-to-use web infrastructure to perform the extraction, together with a growing database of models so generated. Our aim with this tooling, publicly available both as-a-service and as source code, is to lower the MDE barrier for practitioners and leverage models to 1) improve the understanding of manually written code; 2) perform correctness checks; and 3) systematize the definition and adoption of best practices through large-scale generation of models from existing code. A comprehensive example is provided as a walk-through for robotics software practitioners.",,Bootstrapping MDE Development from ROS Manual Code - Part 2: Model Generation,,,,,,,,,x,,NO,
S642,2,forward,journalArticle,2021,"Santos, André; Cunha, Alcino; Macedo, Nuno",arXiv:2103.01603 [cs],,http://arxiv.org/abs/2103.01603,"This tool paper presents the High-Assurance ROS (HAROS) framework. HAROS is a framework for the analysis and quality improvement of robotics software developed using the popular Robot Operating System (ROS). It builds on a static analysis foundation to automatically extract models from the source code. Such models are later used to enable other sorts of analyses, such as Model Checking, Runtime Verification, and Property-based Testing. It has been applied to multiple real-world examples, helping developers find and correct various issues.",Computer Science - Robotics; Computer Science - Software Engineering; D.2.1; D.2.4; D.2.5; D.2.8; D.2.9,The High-Assurance ROS Framework,,X,,,,,,,,,NO,
S641,2,forward,journalArticle,2021,"Hammoudeh García, Nadia; Deshpande, Harshavardhan; Santos, André; Kahl, Björn; Bordignon, Mirko",Software and Systems Modeling,10.1007/s10270-021-00873-2,https://doi.org/10.1007/s10270-021-00873-2,"Model-driven engineering (MDE) addresses central aspects of robotics software development. MDE could enable domain experts to leverage the expressiveness of models, while implementation details on different hardware platforms would be handled by automatic code generation. Today, despite strong MDE efforts in the robotics research community, most evidence points to manual code development being the norm. A possible reason for MDE not being accepted by robot software developers could be the wide range of applications and target platforms, which make all-encompassing MDE IDEs hard to develop and maintain. Therefore, we chose to leverage a large corpus of open-source software widely adopted by the robotics community to extract common structures and gain insight on how and where MDE can support the developers to work more efficiently. We pursue modeling as a complement, rather than imposing MDE as separate solution. Our previous work introduced metamodels to describe components, their interactions, and their resulting composition. In this paper, we present two methods based on metamodels for automated generation of models from manually written artifacts: (1) through static code analysis and (2) by monitoring the execution of a running system. For both methods, we present tools that leverage the potentials of our contributions, with a special focus on their application at runtime to observe and diagnose a real system during its execution. A comprehensive example is provided as a walk-through for robotics software practitioners.",,Bootstrapping MDE development from ROS manual code: Part 2—Model generation and leveraging models at runtime,,,,,,,,,x,,NO,
S640,2,forward,conferencePaper,2020,"Mao, Xinjun; Huang, Hao; Wang, Shuo",2020 27th Asia-Pacific Software Engineering Conference (APSEC),10.1109/APSEC51365.2020.00018,,"Software engineering for autonomous robot (SE4AR) is an emerging interdisciplinary field with the aims to support the development, running and evolution of software systems for autonomous robot - a safety and mission critical cyber-physical system. Such field has recently gained increasing attentions from both academia and industry and made rapid progresses in the past years. However, many challenges pose on the SE4AR due to the specific features and complexities of autonomous robot software (ARS) and several open problems should be tackled in the future researches. This paper aims to present a comprehensive investigation on the researches and practices of SE4AR. Our contributions are three-fold as follows: an in-depth analysis on the development challenges, a systematic review on the current progresses, and an open discussion of weaknesses in current researches and opportunities in future researches.",autonomous robot software; Autonomous robots; Complexity theory; cyber-physical system; Industries; Service robots; software engineering; Software engineering; Software systems; Systematics,"Software Engineering for Autonomous Robot: Challenges, Progresses and Opportunities",x,,,,,,,,,,NO,
S639,2,forward,conferencePaper,2019,"Kanter, Gert; Vain, Jüri","2019 10th International Conference on Dependable Systems, Services and Technologies (DESSERT)",10.1109/DESSERT.2019.8770011,,This paper presents an open-source testing toolkit TestIt that is primarily developed for model-based testing of autonomous systems to improve long-term autonomy. The architecture and tools within this architecture are introduced. The main novelty of presented solution is the scalable multi-pipeline testing architecture that enables incorporation of multi-purpose testing tools including those used in state-of-the-art model-based testing. The usability of TestIt for software testing in autonomous navigation context is demonstrated using Uppaal timed automata model based testing and Uppaal-family tools such as model checker and test execution environments Uppaal TRON and DTRON.,Automata; autonomous robotics; Containers; integration testing; model-based testing; Pipelines; robot operating system; simulation; Software; Testing; timed automata; Tools,TestIt: an Open-Source Scalable Long-Term Autonomy Testing Toolkit for ROS,x,?,,x,,,,,,,NO,
S638,2,forward,conferencePaper,2021,"Santos, Luís C.; Aguiar, André S.; Santos, Filipe N.; Valente, António; Ventura, José Boa; Sousa, Armando J.",Intelligent Systems and Applications,10.1007/978-3-030-55180-3_21,,"Agricultural robotics is nowadays a complex, challenging, and relevant research topic for the sustainability of our society. Some agricultural environments present harsh conditions to robotics operability. In the case of steep-slope vineyards, there are several robotic challenges: terrain irregularities, characteristics of illumination, and inaccuracy/unavailability of the Global Navigation Satellite System. Under these conditions, robotics navigation, mapping, and localization become a challenging task. Performing these tasks with safety and accuracy, a reliable and advanced Navigation stack for robots working in a steep slope vineyard is required. This paper presents the integration of several robotic components, path planning aware of robot centre of gravity and terrain slope, occupation grid map extraction from satellite images, a localization and mapping procedure based on high-level visual features reliable under GNSS signals blockage/missing, for steep-slope robots.",Agricultural robotics; Autonomous navigation; Localization; Mapping; Path planning,Navigation Stack for Robots Working in Steep Slope Vineyard,x,,,x,,,,,,,NO,
S637,2,forward,conferencePaper,2020,"Carvalho, Renato; Cunha, Alcino; Macedo, Nuno; Santos, André",2020 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS45743.2020.9341085,,"Robots are currently deployed in safety-critical domains but proper techniques to assess the functional safety of their software are yet to be adopted. This is particularly critical in ROS, where highly configurable robots are built by composing third-party modules. To promote adoption, we advocate the use of lightweight formal methods, automatic techniques with minimal user input and intuitive feedback. This paper proposes a technique to automatically verify system-wide safety properties of ROS-based applications at static time. It is based in the formalization of ROS architectural models and node behaviour in Electrum, over which system-wide specifications are subsequently model checked. To automate the analysis, it is deployed as a plug-in for HAROS, a framework for the assessment of ROS software quality aimed at the ROS community. The technique is evaluated in a real robot, AgRob V16, with positive results.",Computer architecture; Intelligent robots; Middleware; Model checking; Safety; Scalability; Software quality,Verification of system-wide safety properties of ROS applications,,,,,,,,x,,,NO,
S636,2,forward,conferencePaper,1989,"Wallingford, R. M.; Basart, J. P.",,10.1109/ACSSC.1989.1200846,https://www.computer.org/csdl/proceedings-article/acssc/1989/01200846/12OmNBc1uuC,,,Model-based volumetric flaw reconstruction from a limited number of radiographic projections,x,,,,,,,,,,NO,
S634,2,forward,webpage,,,,,https://www.proquest.com/openview/3225cbe2dba405d904a8b9dd3073e4c1/1?pq-origsite=gscholar&cbl=18750&diss=y,"Explore millions of resources from scholarly journals, books, newspapers, videos and more, on the ProQuest Platform.",,Dimensional Analysis of Robot Software Without Developer Annotations - ProQuest,,,,,x,,,,,,NO,
S632,2,forward,journalArticle,2020,"Kanter, Gert; Vain, Jüri",Journal of Reliable Intelligent Environments,10.1007/s40860-019-00095-w,https://doi.org/10.1007/s40860-019-00095-w,"This paper presents a testing toolkit named TestIt. Its main goal is to provide tools for automated model-based testing of autonomous multi-robot systems to verify long-term autonomy in various applications including those of smart city environments and smart buildings. The main novelty of the presented toolkit is the open and scalable multi-pipeline architecture that enables incorporation of test development and execution tools from various vendors. The second main contribution is adaptive test optimization technique that takes advantage of the proposed multi-pipeline architecture where testing threads can communicate and coordinate the test runs based on their cooperatively collected test performance data. The usability of TestIt for test generation, testing process performance improvement and optimization in multi-robot autonomous navigation context is demonstrated using a smart building robotic security system case study.",,Model-based testing of autonomous robots using TestIt,x,,,,,,,,,,NO,
S630,2,forward,conferencePaper,2020,"Kolak, Sophia; Afzal, Afsoon; Le Goues, Claire; Hilton, Michael; Timperley, Christopher Steven",2020 IEEE International Conference on Software Maintenance and Evolution (ICSME),10.1109/ICSME46990.2020.00048,,"Over the past eleven years, the Robot Operating System (ROS), has grown from a small research project into the most popular framework for robotics development. Composed of packages released on the Rosdistro package manager, ROS aims to simplify development by providing reusable libraries, tools and conventions for building a robot. Still, developing a complete robot is a difficult task that involves bridging many technical disciplines. Experts who create computer vision packages, for instance, may need to rely on software designed by mechanical engineers to implement motor control. As building a robot requires domain expertise in software, mechanical, and electrical engineering, as well as artificial intelligence and robotics, ROS faces knowledge based barriers to collaboration.In this paper, we examine how the necessity of domain specific knowledge impacts the open source collaboration model. We create a comprehensive corpus of package metadata and dependencies over three years in the ROS ecosystem, analyze how collaboration is structured, and study the dependency network evolution. We find that the most widely used ROS packages belong to a small cluster of foundational working groups (FWGs), each organized around a different domain in robotics. We show that the FWGs are growing at a slower rate than the rest of the ecosystem, in terms of their membership and number of packages, yet the number of dependencies on FWGs is increasing at a faster rate. In addition, we mined all ROS packages on GitHub, and showed that 82% rely exclusively on functionality provided by FWGs. Finally, we investigate these highly influential groups and describe the unique model of collaboration they support in ROS.",Buildings; collaboration; Collaboration; Ecosystems; robot operating system; robotics software; Robots; software ecosystem; software evolution; Software maintenance; Task analysis; Tools,It Takes a Village to Build a Robot: An Empirical Study of The ROS Ecosystem,,,,,,,,,,,,
S629,2,forward,bookSection,2019,"Come, David; Brunel, Julien; Doose, David",Robotic Intelligence,,https://www.worldscientific.com/doi/abs/10.1142/9789811203480_0012,,C++; code query; formal methods; ROS; temporal logic,Improving code quality in ROS packages using a temporal extension of first-order logic,,,,,x,,,,,,NO,
S628,2,forward,conferencePaper,2019,"Hammoudeh Garcia, Nadia; Deval, Ludovic; Lüdtke, Mathias; Santos, Andre; Kahl, Björn; Bordignon, Mirko",2019 ACM/IEEE 22nd International Conference on Model Driven Engineering Languages and Systems (MODELS),10.1109/MODELS.2019.00-11,,"In principle, Model-Driven Engineering (MDE) addresses central aspects of robotics software development. Domain experts could leverage the expressiveness of models; implementation details over different hardware could be handled by automatic code generation. In practice, most evidence points to manual code development as the norm, despite several MDE efforts in robotics. Possible reasons for this disconnect are the wide ranges of applications and target platforms making all-encompassing MDE IDEs hard to develop and maintain, with developers reverting to writing code manually. Acknowledging this, and given the opportunity to leverage a large corpus of open-source software widely adopted by the robotics community, we pursue modeling as a complement, rather than an alternative, to manually written code. Our previous work introduced metamodels to describe components, their interactions, and their resulting composition, as inspired by, but not limited to, the de-facto standard Robot Operating System (ROS). In this paper we put such metamodels into use through two contributions. First, we automate the generation of models from manually written artifacts through extraction from source code and runtime system monitoring. Second, we make available an easy-to-use web infrastructure to perform the extraction, together with a growing database of models so generated. Our aim with this tooling, publicly available both as-a-service and as source code, is to lower the MDE barrier for practitioners and leverage models to 1) improve the understanding of manually written code; 2) perform correctness checks; and 3) systematize the definition and adoption of best practices through large-scale generation of models from existing code. A comprehensive example is provided as a walk-through for robotics software practitioners.",development environments; models; ROS,Bootstrapping MDE Development from ROS Manual Code - Part 2: Model Generation,,,,x,,,,,x,,NO,
S627,2,forward,conferencePaper,2019,"Pichler, Marc; Dieber, Bernhard; Pinzger, Martin",2019 Third IEEE International Conference on Robotic Computing (IRC),10.1109/IRC.2019.00020,,"Since its beginnings ten years ago, the Robot Operating System (ROS) has created a huge community of developers and researchers and is now the most widespread open-source framework for robotics development. It is used in research, prototyping but also in commercial products and supports a wide range of robotic platforms, sensors and highlevel data processing functions. While for a research platform, quality of the software developed with it is typically of lower importance, ROS is gradually moving towards industrial applications making software quality a premier topic. In this paper, we want to gain insights on how ROS is used in practice, how high the quality of the ROS packages and applications is, and where potential pitfalls in the use of ROS lie. To achieve this, we have analyzed several thousands of open-source ROS packages found on GitHub and Bitbucket for their quality and their interdependencies. Our results include packages on the rosdistro index and, more importantly, packages that are not. From our results we show common issues in ROS-applications, quality implications, and also which packages of what quality are particularly popular.",dependency analysis; Indexes; Open source software; repository quality; ros; Service robots; software quality; Software quality; Tools,Can I Depend on you? Mapping the Dependency and Quality Landscape of ROS Packages,,x,,,,,,,,,NO,
S626,2,forward,conferencePaper,2018,"Santos, André; Cunha, Alcino; Macedo, Nuno","Proceedings of the 9th ACM SIGSOFT International Workshop on Automating TEST Case Design, Selection, and Evaluation",10.1145/3278186.3278195,https://doi.org/10.1145/3278186.3278195,"The Robot Operating System (ROS) is an open source framework for the development of robotic software, in which a typical system consists of multiple processes communicating under a publisher-subscriber architecture. A great deal of development time goes into orchestration and making sure that the communication interfaces comply with the expected contracts (e.g. receiving a message leads to the publication of another message). Orchestration mistakes are only detected during runtime, stressing the importance of component and integration testing in the verification process. Property-based Testing is fitting in this context, since it is based on the specification of contracts and treats tested components as black boxes, but there is no support for it in ROS. In this paper, we present a first approach towards automatic generation of test scripts for property-based testing of various configurations of a ROS system.",Property-based Testing; Robot Operating System; Software Testing; Test Automation,Property-based testing for the robot operating system,,,,,,,,,,,,
S625,2,forward,webpage,,,,,https://ieeexplore.ieee.org/abstract/document/8675668/?casa_token=CfRDfQsysi4AAAAA:ygGs7fDRkrM7i5Dkd1EP93b3qixA-MhJ7Xcc1XIaQL9ahnguAqvKmKuTAqBIsUdIz2xg2WjQ_YI,"Ten years after its first release, the Robot Operating System (ROS) is arguably the most popular software framework used to program robots. It achieved such status despite its shortcomings compared to alternatives similarly centered on manual programming and, perhaps surprisingly, to model-driven engineering (MDE) approaches. Based on our experience as users and developers of both ROS and MDE tools, we identified possible ways to leverage the accessibility of ROS and its large software ecosystem, while providing quality assurance measures through selected MDE techniques. After describing our vision on how to combine MDE and manually written code, we present the first technical contribution in this pursuit: a family of three metamodels to respectively model ROS nodes, communication interfaces, and systems composed from subsystems. Such metamodels can be used, through the accompanying Eclipse-based tooling made publicly available, to model ROS systems of arbitrary complexity and generate with correctness guarantees the software artifacts for their composition and deployment. Furthermore, they account for specifications on these aspects by the Object Management Group (OMG), in order to be amenable to hybrid systems coupling ROS and other frameworks. We also report on our experience with a large and complex corpus of ROS software used in a commercially deployed robot (the Care-O-bot 4), to explain the rationale of the presented work, including the shortcomings of standard ROS tools and of previous efforts on ROS modeling.",,Bootstrapping MDE Development from ROS Manual Code - Part 1: Metamodeling,,,,,x,,,,,,NO,
S624,2,forward,conferencePaper,2017,"Ore, John-Paul; Elbaum, Sebastian; Detweiler, Carrick",2017 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS.2017.8202229,,"This work presents a study of robot software using the Robot Operating System (ROS), focusing on detecting inconsistencies in physical unit manipulation. We discuss how dimensional analysis, the rules governing how physical quantities are combined, can be used to detect inconsistencies in robot software that are otherwise difficult to detect. Using a corpus of ROS software with 5.9M lines of code, we measure the frequency of these dimensional inconsistencies and find them in 6% (211 / 3,484) of repositories that use ROS. We find that the inconsistency type `Assigning multiple units to a variable' accounts for 75% of inconsistencies in ROS code. We identify the ROS classes and physical units most likely to be involved with dimensional inconsistencies, and find that the ROS Message type geometry_msgs::Twist is involved in over half of all inconsistencies and is used by developers in ways contrary to Twist's intent. We further analyze the frequency of physical units used in ROS programs as a proxy for assessing how developers use ROS, and discuss the practical implications of our results including how to detect and avoid these inconsistencies.",C++ languages; Geometry; Libraries; Meters; Robots; Software; Tools,Dimensional inconsistencies in code and ROS messages: A study of 5.9M lines of code,,x,,,,,,,,,NO,
S623,2,forward,conferencePaper,2017,"Santos, André; Cunha, Alcino; Macedo, Nuno; Arrais, Rafael; dos Santos, Filipe Neves",2017 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS.2017.8206237,,"The Robot Operating System (ROS) is nowadays one of the most popular frameworks for developing robotic applications. To ensure the (much needed) dependability and safety of such applications we forecast an increasing demand for ROS-specific coding standards, static analyzers, and tools alike. Unfortunately, the development of such standards and tools can be hampered by ROS modularity and configurability, namely the substantial number of primitives (and respective variants) that must, in principle, be considered. To quantify the severity of this problem, we have mined a large number of existing ROS packages to understand how its primitives are used in practice, and to determine which combinations of primitives are most popular. This paper presents and discusses the results of this study, and hopefully provides some guidance for future standardization efforts and tool developers.",C++ languages; Robots; Runtime; Software; Standards; Tools,Mining the usage patterns of ROS primitives,,,,,,,,x,,,NO,
S622,2,forward,conferencePaper,2019,"Santos, André; Cunha, Alcino; Macedo, Nuno",2019 Third IEEE International Conference on Robotic Computing (IRC),10.1109/IRC.2019.00018,,"The Robot Operating System (ROS) is one of the most popular open source robotic frameworks, and has contributed significantly to the fast development of robotics. Even though ROS provides many ready-made components, a robotic system is inherently complex, in particular regarding the architecture and orchestration of such components. Availability and analysis of a system's architecture at compile time is fundamental to ease comprehension and development of higher-quality software. However, ROS developers have to overcome this complexity relying mostly on testing and runtime visualisers. This work aims to enhance static-time support by proposing, firstly, a metamodel to describe the software architecture of ROS systems (the ROS Computation Graph) and, secondly, model extraction and visualisation tools for such architectural models. The provided tools allow users to specify custom-made queries over these models, enabling the static verification of relevant properties that had to be (manually) checked at runtime before.",Computational modeling; Computer architecture; robotics; Robots; Runtime; Software; software architecture; software quality; static analysis; Tools; Visualization,Static-Time Extraction and Analysis of the ROS Computation Graph,,,,,,,,x,,,NO,
S621,2,forward,journalArticle,2019,"Estefo, Pablo; Simmonds, Jocelyn; Robbes, Romain; Fabry, Johan",Journal of Systems and Software,10.1016/j.jss.2019.02.024,https://www.sciencedirect.com/science/article/pii/S0164121219300342,"ROS, the Robot Operating System, offers a core set of software for operating robots that can be extended by creating or using existing packages, making it possible to write robotic software that can be reused on different hardware platforms. With thousands of packages available per stable distribution, encapsulating algorithms, sensor drivers, etc., it is the de facto middleware for robotics. Like any software ecosystem, ROS must evolve in order to keep meeting the requirements of its users. In practice, packages may end up being abandoned between releases: no one may be available to update a package, or newer packages offer similar functionality. As such, we wanted to identify and understand the evolution challenges faced by the ROS ecosystem. In this article, we report our findings after interviewing 19 ROS developers in depth, followed by a focus group (4 participants) and an online survey of 119 ROS community members. We specifically focused on the issues surrounding package reuse and how to contribute to existing packages. To conclude, we discuss the implications of our findings, and propose five recommendations for overcoming the identified issues, with the goal of improving the health of the ROS ecosystem.",Package management; Robot Operating System; Software ecosystems,The Robot Operating System: Package reuse and community dynamics,,,,,,,,,,,,
S620,2,forward,conferencePaper,2017,"Halder, Raju; Proença, José; Macedo, Nuno; Santos, André",2017 IEEE/ACM 5th International FME Workshop on Formal Methods in Software Engineering (FormaliSE),10.1109/FormaliSE.2017.9,,"Robotic technologies are continuously transforming the domestic and the industrial environments. Recently the Robotic Operating System (ROS), has been widely adopted both by industry and academia, becoming one of the most popular middleware frameworks for developing robot applications. Guaranteeing the correct behaviour of robotic systems is, however, challenging due to their potential for parameterization and heterogeneity. Although different approaches exist, focusing on concrete domain spaces for specific scenarios, no general approach to reason about ROS systems has yet arisen. This paper proposes an approach to model and verify ROS systems using real time properties, focusing on one of the main features of ROS, the communication between nodes. It takes low-level parameters into account, such as queue sizes and timeouts, and uses timed automata as the modelling language. The robot Kobuki is used as a complex case study, over which properties are automatically verified using the UPPAAL model checker, enabling the identification of problematic parameter combinations.",Automata; Clocks; Monitoring; Peer-to-peer computing; Safety; Service robots,Formal Verification of ROS-Based Robotic Applications Using Timed-Automata,,,,,,,,,,,,
S619,2,forward,journalArticle,2016,"Nordmann, Arne",,10.6092/JOSER_2016_07_01_P75,https://aisberg.unibg.it//handle/10446/87804,"The development of advanced robotic systems is challenging as expertise from multiple domains needs to be integrated conceptually and technically. Model-driven engineering promises an efﬁcient and ﬂexible approach for developing robotics applications that copes with this challenge. Domain-speciﬁc modeling allows to describe robotics concerns with concepts and notations closer to the respective problem domain. This raises the level of abstraction and results in models that are easier to understand and validate. Furthermore, model-driven engineering allows to increase the level of automation, e.g., through code generation, and to bridge the gap between modeling and implementation. The anticipated results are improved efﬁciency and quality of the robotics systems engineering process. Within this contribution, we survey the available literature on domain-speciﬁc modeling and languages that target core robotics concerns. In total 137 publications were identiﬁed that comply with a set of deﬁned criteria, which we consider essential for contributions in this ﬁeld. With the presented survey, we provide an overview on the state-of-the-art of domain-speciﬁc modeling approaches in robotics. The surveyed publications are investigated from the perspective of users and developers of model-based approaches in robotics along a set of quantitative and qualitative research questions. The presented quantitative analysis clearly indicates the rising popularity of applying domain-speciﬁc modeling approaches to robotics in the academic community. Beyond this statistical analysis, we map the selected publications to a deﬁned set of robotics subdomains and introduce an extended classiﬁcation scheme to allow a ﬁnegrained mapping of publications addressing the architecture and programming of robotics systems. We map the surveyed publications to typical development phases in robotic systems engineering. The resulting classiﬁcation tree shall serve as overview and reference for potential users. Furthermore, we analyze the surveyed contributions from a language engineering viewpoint and discuss aspects such as the methods and tools used for their implementation as well as their documentation status, platform integration, typical use cases and the evaluation strategies used for validation of the proposed approaches. Finally, we conclude with recommendations for discussion in the model-driven engineering and robotics community based on the insights gained in this survey.",,A Survey on Domain-specific Modeling and Languages in Robotics,x,,,,,,,,,,NO,
S618,2,forward,journalArticle,2019,"Deval, L.; Bordignon, M.; Kahl, B.; Santos, André Filipe; Luedtke, M.; Garcia, N. H.",,10.1109/models.2019.00-11,http://repositorio.inesctec.pt/handle/123456789/11437,"In principle, Model-Driven Engineering (MDE) addresses central aspects of robotics software development. Domain experts could leverage the expressiveness of models; implementation details over different hardware could be handled by automatic code generation. In practice, most evidence points to manual code development as the norm, despite several MDE efforts in robotics. Possible reasons for this disconnect are the wide ranges of applications and target platforms making all-encompassing MDE IDEs hard to develop and maintain, with developers reverting to writing code manually. Acknowledging this, and given the opportunity to leverage a large corpus of open-source software widely adopted by the robotics community, we pursue modeling as a complement, rather than an alternative, to manually written code. Our previous work introduced metamodels to describe components, their interactions, and their resulting composition, as inspired by, but not limited to, the de-facto standard Robot Operating System (ROS). In this paper we put such metamodels into use through two contributions [1]. First, we automate the generation of models from manually written artifacts through extraction from source code and runtime system monitoring. Second, we make available an easy-to-use web infrastructure to perform the extraction, together with a growing database of models so generated. Our aim with this tooling, publicly available both as-a-service and as source code, is to lower the MDE barrier for practitioners and leverage models to 1) improve the understanding of manually written code; 2) perform correctness checks; and 3) systematize the definition and adoption of best practices through large-scale generation of models from existing code. A comprehensive example is provided as a walk-through for robotics software practitioners.",,Bootstrapping MDE Development from ROS Manual Code - Part 2: Model Generation,,,,,,,,,x,,NO,
S617,2,forward,journalArticle,2021,"Hammoudeh García, Nadia; Deshpande, Harshavardhan; Santos, André; Kahl, Björn; Bordignon, Mirko",Software and Systems Modeling,10.1007/s10270-021-00873-2,https://doi.org/10.1007/s10270-021-00873-2,"Model-driven engineering (MDE) addresses central aspects of robotics software development. MDE could enable domain experts to leverage the expressiveness of models, while implementation details on different hardware platforms would be handled by automatic code generation. Today, despite strong MDE efforts in the robotics research community, most evidence points to manual code development being the norm. A possible reason for MDE not being accepted by robot software developers could be the wide range of applications and target platforms, which make all-encompassing MDE IDEs hard to develop and maintain. Therefore, we chose to leverage a large corpus of open-source software widely adopted by the robotics community to extract common structures and gain insight on how and where MDE can support the developers to work more efficiently. We pursue modeling as a complement, rather than imposing MDE as separate solution. Our previous work introduced metamodels to describe components, their interactions, and their resulting composition. In this paper, we present two methods based on metamodels for automated generation of models from manually written artifacts: (1) through static code analysis and (2) by monitoring the execution of a running system. For both methods, we present tools that leverage the potentials of our contributions, with a special focus on their application at runtime to observe and diagnose a real system during its execution. A comprehensive example is provided as a walk-through for robotics software practitioners.",,Bootstrapping MDE development from ROS manual code: Part 2—Model generation and leveraging models at runtime,,,,x,,,,,x,,NO,
S616,2,forward,journalArticle,2017,"Luhunu, Lechanceux Kavuya",,,https://papyrus.bib.umontreal.ca/xmlui/handle/1866/19110,"L'automatisation de la génération des artefacts textuels à partir des modèles est une étape critique dans l'Ingénierie Dirigée par les Modèles (IDM). C'est une transformation de modèles utile pour générer le code source, sérialiser les modèles dans de stockages persistents, générer les rapports ou encore la documentation. Parmi les différents paradigmes de transformation de modèle-au-texte, la génération de code basée sur les templates (TBCG) est la plus utilisée en IDM. La TBCG est une technique de génération qui produit du code à partir des spécifications de haut niveau appelées templates. Compte tenu de la diversité des outils et des approches, il est nécessaire de classifier et de comparer les techniques de TBCG existantes afin d'apporter un soutien approprié aux développeurs. L'objectif de ce mémoire est de mieux comprendre les caractéristiques des techniques de TBCG, identifier les tendances dans la recherche, et éxaminer l'importance du rôle de l'IDM par rapport à cette approche.  J'évalue également l'expressivité, la performance et la mise à  l'échelle des outils associés selon une série de modèles. Je propose une étude systématique de cartographie  de la littérature qui décrit une intéressante vue d'ensemble de la TBCG et une étude comparitive des outils de la TBCG pour mieux guider les dévloppeurs dans leur choix.    Cette étude montre que les outils basés sur les modèles offrent plus d'expressivité tandis que les outils basés sur le code sont les plus performants. Enfin, Xtend2 offre le meilleur compromis entre l'expressivité et la performance.",,Survey of Template-Based Code Generation,x,,,x,,,,,,,NO,
S615,2,forward,conferencePaper,2019,"Hammoudeh Garcia, Nadia; Deval, Ludovic; Lüdtke, Mathias; Santos, Andre; Kahl, Björn; Bordignon, Mirko",2019 ACM/IEEE 22nd International Conference on Model Driven Engineering Languages and Systems (MODELS),10.1109/MODELS.2019.00-11,,"In principle, Model-Driven Engineering (MDE) addresses central aspects of robotics software development. Domain experts could leverage the expressiveness of models; implementation details over different hardware could be handled by automatic code generation. In practice, most evidence points to manual code development as the norm, despite several MDE efforts in robotics. Possible reasons for this disconnect are the wide ranges of applications and target platforms making all-encompassing MDE IDEs hard to develop and maintain, with developers reverting to writing code manually. Acknowledging this, and given the opportunity to leverage a large corpus of open-source software widely adopted by the robotics community, we pursue modeling as a complement, rather than an alternative, to manually written code. Our previous work introduced metamodels to describe components, their interactions, and their resulting composition, as inspired by, but not limited to, the de-facto standard Robot Operating System (ROS). In this paper we put such metamodels into use through two contributions. First, we automate the generation of models from manually written artifacts through extraction from source code and runtime system monitoring. Second, we make available an easy-to-use web infrastructure to perform the extraction, together with a growing database of models so generated. Our aim with this tooling, publicly available both as-a-service and as source code, is to lower the MDE barrier for practitioners and leverage models to 1) improve the understanding of manually written code; 2) perform correctness checks; and 3) systematize the definition and adoption of best practices through large-scale generation of models from existing code. A comprehensive example is provided as a walk-through for robotics software practitioners.",development environments; models; ROS,Bootstrapping MDE Development from ROS Manual Code - Part 2: Model Generation,,,,,,,,,x,,NO,
S614,2,forward,journalArticle,,"Chinnappan, Katerina; Malavolta, Ivano; Lewis, Grace A; Albonico, Michel; Lago, Patricia",,,,"In software engineering, energy awareness refers to the conscious design and development of software that is able to monitor and react to energy state. Energy awareness is the key building block for energy eﬃciency and for other quality aspects of robotics software, such as mission completion time and safety. However, as of today, there is no guidance for practitioners and researchers on how to architect robotics software with energy awareness in mind. The goal of this paper is to identify architectural tactics for energy-aware robotics software. Specifically, using a dataset of 339,493 data points extracted from ﬁve complementary data sources (e.g., source code repositories, Stack Overﬂow), we identiﬁed and analyzed 97 data points that considered both energy consumption and architectural concerns. We then synthesized a set of energy-aware architectural tactics via thematic analysis. In this preliminary investigation we focus on two representative architectural tactics.",,Architectural Tactics for Energy-aware Robotics Software: A Preliminary Study,,,,,,,,,x,,NO,
S613,2,forward,journalArticle,,"Chinnappan, Katerina; Malavolta, Ivano; Lewis, Grace A; Albonico, Michel; Lago, Patricia",,,,"In software engineering, energy awareness refers to the conscious design and development of software that is able to monitor and react to energy state. Energy awareness is the key building block for energy eﬃciency and for other quality aspects of robotics software, such as mission completion time and safety. However, as of today, there is no guidance for practitioners and researchers on how to architect robotics software with energy awareness in mind. The goal of this paper is to identify architectural tactics for energy-aware robotics software. Specifically, using a dataset of 339,493 data points extracted from ﬁve complementary data sources (e.g., source code repositories, Stack Overﬂow), we identiﬁed and analyzed 97 data points that considered both energy consumption and architectural concerns. We then synthesized a set of energy-aware architectural tactics via thematic analysis. In this preliminary investigation we focus on two representative architectural tactics.",,Architectural Tactics for Energy-aware Robotics Software: A Preliminary Study,,,,,,,,x,,,NO,
S612,2,forward,journalArticle,2021,"Malavolta, Ivano; Lewis, Grace A.; Schmerl, Bradley; Lago, Patricia; Garlan, David",Journal of Systems and Software,10.1016/j.jss.2021.110969,https://linkinghub.elsevier.com/retrieve/pii/S0164121221000662,"Methods: We designed and conducted an observational study where we (i) built a dataset of 335 GitHub repositories containing real open-source ROS-based systems, and (ii) mined the repositories to extract and synthesize quantitative and qualitative findings about how roboticists are architecting ROS-based systems. Results: First, we extracted an empirically-grounded overview of the state of the practice for architecting and documenting ROS-based systems. Second, we synthesized a catalog of 47 architecting guidelines for ROS-based systems. Third, the extracted guidelines were validated by 119 roboticists working on real-world open-source ROS-based systems. Conclusion: Roboticists can use our architecting guidelines for applying good design principles to develop robots that meet quality requirements, and researchers can use our results as evidence-based indications about how real-world ROS systems are architected today, thus inspiring future research contributions.",,Mining guidelines for architecting robotics software,,,,x,,,,,x,,NO,
S611,2,forward,journalArticle,2021,"Malavolta, Ivano; Lewis, Grace A.; Schmerl, Bradley; Lago, Patricia; Garlan, David",Journal of Systems and Software,10.1016/j.jss.2021.110969,https://www.sciencedirect.com/science/article/pii/S0164121221000662,"Context: The Robot Operating System (ROS) is the de-facto standard for robotics software. However, ROS-based systems are getting larger and more complex and could benefit from good software architecture practices. Goal: We aim at (i) unveiling the state-of-the-practice in terms of targeted quality attributes and architecture documentation in ROS-based systems, and (ii) providing empirically-grounded guidance to roboticists about how to properly architect ROS-based systems. Methods: We designed and conducted an observational study where we (i) built a dataset of 335 GitHub repositories containing real open-source ROS-based systems, and (ii) mined the repositories to extract and synthesize quantitative and qualitative findings about how roboticists are architecting ROS-based systems. Results: First, we extracted an empirically-grounded overview of the state of the practice for architecting and documenting ROS-based systems. Second, we synthesized a catalog of 47 architecting guidelines for ROS-based systems. Third, the extracted guidelines were validated by 119 roboticists working on real-world open-source ROS-based systems. Conclusion: Roboticists can use our architecting guidelines for applying good design principles to develop robots that meet quality requirements, and researchers can use our results as evidence-based indications about how real-world ROS systems are architected today, thus inspiring future research contributions.",Robotics; ROS; Software architecture,Mining guidelines for architecting robotics software,,,,,,,,,x,,NO,
S610,2,forward,journalArticle,2021,"Albonico, Michel; Malavolta, Ivano; Pinto, Gustavo; Guzman, Emitza; Chinnappan, Katerina; Lago, Patricia",arXiv:2103.13762 [cs],,http://arxiv.org/abs/2103.13762,"Robots are becoming more and more commonplace in many industry settings. This successful adoption can be partly attributed to (1) their increasingly affordable cost and (2) the possibility of developing intelligent, software-driven robots. Unfortunately, robotics software consumes significant amounts of energy. Moreover, robots are often battery-driven, meaning that even a small energy improvement can help reduce its energy footprint and increase its autonomy and user experience. In this paper, we study the Robot Operating System (ROS) ecosystem, the de-facto standard for developing and prototyping robotics software. We analyze 527 energy-related data points (including commits, pull-requests, and issues on ROS-related repositories, ROS-related questions on StackOverflow, ROS Discourse, ROS Answers, and the official ROS Wiki). Our results include a quantification of the interest of roboticists on software energy efficiency, 10 recurrent causes, and 14 solutions of energy-related issues, and their implied trade-offs with respect to other quality attributes. Those contributions support roboticists and researchers towards having energy-efficient software in future robotics projects.",Computer Science - Robotics; Computer Science - Software Engineering,Mining Energy-Related Practices in Robotics Software,,,,,,,,,x,,NO,
S609,2,forward,journalArticle,,"Chinnappan, Katerina; Malavolta, Ivano; Lewis, Grace A; Albonico, Michel; Lago, Patricia",,,,"In software engineering, energy awareness refers to the conscious design and development of software that is able to monitor and react to energy state. Energy awareness is the key building block for energy eﬃciency and for other quality aspects of robotics software, such as mission completion time and safety. However, as of today, there is no guidance for practitioners and researchers on how to architect robotics software with energy awareness in mind. The goal of this paper is to identify architectural tactics for energy-aware robotics software. Specifically, using a dataset of 339,493 data points extracted from ﬁve complementary data sources (e.g., source code repositories, Stack Overﬂow), we identiﬁed and analyzed 97 data points that considered both energy consumption and architectural concerns. We then synthesized a set of energy-aware architectural tactics via thematic analysis. In this preliminary investigation we focus on two representative architectural tactics.",,Architectural Tactics for Energy-aware Robotics Software: A Preliminary Study,x,,,,,,,,,,NO,
S608,2,forward,thesis,2021,"Buynak, Adam",,,https://kb.osu.edu/handle/1811/92472,"Industrial robotics are characterized by intrinsically closed systems and present a unique difficulty to the factory integration efforts of the next industrial revolution. Homogenizing the controls of a factory, specifically a robotic operation, allows engineers to design for modularity. To meet this need, collaborative academic and industry efforts have developed the Robot Operating System (ROS) as a package-based programming framework. Developers assembling motion control systems have a diversity of options for key packages such as the path planner, the kinematic motion planner, the collision checker, and the robot-specific support package.   The goal of this study is to configure and deploy a motion control system for an industrial robotic cell using existing ROS packages. Further, a path planning package will be developed to navigate complex planar paths on a flat surface. Existing path planners for curved, planar-like surfaces are designed to output a raster (parallel rows of linear lines) type motion. A method for creating complex, non-linear paths across a surface is needed to support applications such as non-destructive inspection and surface finishing. To provide context to this study, a demonstrative application of navigating a robotic arm through a grid-based maze presented to the robot work cell was employed. Initial work configured the software environment including the robot support, motion planning, and sensor packages necessary to form the motion planning pipeline and testing tools.Machine vision was enabled through the use of an RGB/stereo depth camera and static frames were filtered with the DREAM.3D data processing software. Filtered data was used to solve and navigate the presented maze. A tool for generating and visualizing these three-dimensional pathways was created. This study successfully stood up a motion control system based on the MoveIt planning framework and deployed a novel planar path planning technique. Analysis determined the MoveIt framework to be insufficient for a semi-constrained, short throw paths and suggested future work to explore alternative motion planners. With many existing tools focusing on parallel paths, this tool offers greater flexibility to system designers in achieving unique, complex motion.",,Deploying the Robot Operating System (ROS) for Complex Path Planning on Planar Surfaces,,,,,x,,,,,,NO,
S607,2,forward,conferencePaper,2021,"Mandel, Nicolas; Milford, Michael; Gonzalez, Felipe",2021 IEEE Aerospace Conference (50100),10.1109/AERO50100.2021.9438333,,"Power, size and weight are major constraining factors for UAVs, which have caused researchers to investigate alternative information representations, such as semantics, to reduce the computational load onboard UAVs. However, the connection between spatial and semantic information has not been fully explored and the literature on including semantic information for UAV navigation is limited. This paper provides a new taxonomy on spatial and semantic relations through consideration of a selected subset of the literature. Concepts of semantic information are related with spatial maps and two hypotheses for improving algorithms based on the literature are generated. The algorithms are tested in numerical simulations on the task of semantic mapping and the effects of influential parameters are examined. Results indicate that a defined hierarchical structure of semantic information enables improved map reproduction. The proposed algorithm exhibits the potential to improve the use of semantic information in UAV deployment scenarios, such as agriculture, search and rescue and industrial inspections.",Information representation; Inspection; Navigation; Pipelines; Semantics; Service robots; Taxonomy,Incorporating Hierarchical Information for UAV based Semantic Mapping,x,,,,,,,,,,NO,
S605,2,forward,journalArticle,2021,"Malavolta, Ivano; Lewis, Grace A.; Schmerl, Bradley; Lago, Patricia; Garlan, David",Journal of Systems and Software,10.1016/j.jss.2021.110969,https://linkinghub.elsevier.com/retrieve/pii/S0164121221000662,"Methods: We designed and conducted an observational study where we (i) built a dataset of 335 GitHub repositories containing real open-source ROS-based systems, and (ii) mined the repositories to extract and synthesize quantitative and qualitative findings about how roboticists are architecting ROS-based systems. Results: First, we extracted an empirically-grounded overview of the state of the practice for architecting and documenting ROS-based systems. Second, we synthesized a catalog of 47 architecting guidelines for ROS-based systems. Third, the extracted guidelines were validated by 119 roboticists working on real-world open-source ROS-based systems. Conclusion: Roboticists can use our architecting guidelines for applying good design principles to develop robots that meet quality requirements, and researchers can use our results as evidence-based indications about how real-world ROS systems are architected today, thus inspiring future research contributions.",,Mining guidelines for architecting robotics software,,,,,,,,,x,,NO,
S604,2,forward,journalArticle,2021,"Pittou, Maria; Rahonis, George",arXiv:1904.02222 [cs],,http://arxiv.org/abs/1904.02222,"One of the key aspects in component-based design is specifying the software architecture that characterizes the topology and the permissible interactions of the components of a system. To achieve well-founded design there is need to address both the qualitative and non-functional aspects of architectures. In this paper we study the qualitative and quantitative formal modelling of architectures applied on parametric component-based systems, that consist of an unknown number of instances of each component. Specifically, we introduce an extended propositional interaction logic and investigate its first-order level which serves as a formal language for the interactions of parametric systems. Our logics achieve to encode the execution order of interactions, which is a main feature in several important architectures, as well as to model recursive interactions. Moreover, we prove the decidability of equivalence, satisfiability, and validity of first-order extended interaction logic formulas, and provide several examples of formulas describing well-known architectures. We show the robustness of our theory by effectively extending our results for parametric weighted architectures. For this, we study the weighted counterparts of our logics over a commutative semiring, and we apply them for modelling the quantitative aspects of concrete architectures. Finally, we prove that the equivalence problem of weighted first-order extended interaction logic formulas is decidable in a large class of semirings, namely the class (of subsemirings) of skew fields.",68Q45; Computer Science - Logic in Computer Science,Architectures in parametric component-based systems: Qualitative and quantitative modelling,x,,,,,,,,,,NO,
S603,2,forward,journalArticle,2021,"Malavolta, Ivano; Lewis, Grace A.; Schmerl, Bradley; Lago, Patricia; Garlan, David",Journal of Systems and Software,10.1016/j.jss.2021.110969,https://www.sciencedirect.com/science/article/pii/S0164121221000662,"Context: The Robot Operating System (ROS) is the de-facto standard for robotics software. However, ROS-based systems are getting larger and more complex and could benefit from good software architecture practices. Goal: We aim at (i) unveiling the state-of-the-practice in terms of targeted quality attributes and architecture documentation in ROS-based systems, and (ii) providing empirically-grounded guidance to roboticists about how to properly architect ROS-based systems. Methods: We designed and conducted an observational study where we (i) built a dataset of 335 GitHub repositories containing real open-source ROS-based systems, and (ii) mined the repositories to extract and synthesize quantitative and qualitative findings about how roboticists are architecting ROS-based systems. Results: First, we extracted an empirically-grounded overview of the state of the practice for architecting and documenting ROS-based systems. Second, we synthesized a catalog of 47 architecting guidelines for ROS-based systems. Third, the extracted guidelines were validated by 119 roboticists working on real-world open-source ROS-based systems. Conclusion: Roboticists can use our architecting guidelines for applying good design principles to develop robots that meet quality requirements, and researchers can use our results as evidence-based indications about how real-world ROS systems are architected today, thus inspiring future research contributions.",Robotics; ROS; Software architecture,Mining guidelines for architecting robotics software,,,,x,,,,,x,,NO,
S602,2,forward,journalArticle,2021,"Santos, Marcela G. dos; Petrillo, Fabio",arXiv:2102.12520 [cs],,http://arxiv.org/abs/2102.12520,"Robots are being applied in a vast range of fields, leading researchers and practitioners to write tasks more complex than in the past. The robot software complexity increases the difficulty of engineering the robot's software components with quality requirements. Researchers and practitioners have applied software engineering (SE) approaches and robotic domains to address this issue in the last two decades. This study aims to identify, classify and evaluate the current state-of-the-art Software Engineering for Robotic Systems (SERS). We systematically selected and analyzed 50 primary studies extracted from an automated search on Scopus digital library and manual search on the two editions of the RoSE workshop. We present three main contributions. Firstly, we provide an analysis from three following perspectives: demographics of publication, SE areas applied in robotics domains, and RSE findings. Secondly, we show a catalogue of research studies that apply software engineering techniques in the robotic domain, classified with the SWEBOK guide. We have identified 5 of 15 software engineering areas from the SWEBOK guide applied explicitly in robotic domains. The majority of the studies focused on the development phase (design, models and methods and construction). Testing and quality software areas have little coverage in SERS. Finally, we identify research opportunities and gaps in software engineering for robotic systems for future studies.",Computer Science - Robotics; Computer Science - Software Engineering,Software Engineering for Robotic Systems:a systematic mapping study,,,,,x,,,,,,NO,
S601,2,forward,journalArticle,2020,"Pittou, Maria; Rahonis, George",arXiv:1905.05607 [cs],,http://arxiv.org/abs/1905.05607,"The design of complex software systems usually lies in multiple coordinating components with an unknown number of instances. For such systems a main challenge is modelling efficiently their architecture that determines the topology and the interaction principles among the components. To achieve well-founded design there is need to address the quantitative aspects of software architectures. In this paper we study the modelling problem of software architectures applied on parametric weighted component-based systems where the parameter is the number of instances of each component. For this, we introduce a weighted first-order extended interaction logic over a commutative semiring in order to serve as a modelling language for parametric quantitative architectures. We prove that the equivalence problem of formulas of that logic is decidable in the class (of subsemirings) of skew fields. Moreover, we show that our weighted logic can efficiently describe well-known parametric architectures with quantitative characteristics.",Computer Science - Logic in Computer Science,Modelling architectures of parametric weighted component-based systems,x,,,,,,,,,,NO,
S600,2,forward,webpage,,,,,https://www.proquest.com/openview/d512d987f9dc445ca04189bc6efded96/1?pq-origsite=gscholar&cbl=18750&diss=y,"Explore millions of resources from scholarly journals, books, newspapers, videos and more, on the ProQuest Platform.",,Reliability Engineering for Long-Term Deployment of Autonomous Service Robots - ProQuest,x,,,,,,,,,,NO,
S599,2,forward,conferencePaper,2020,"Karyoti, Vagia; Paraponiari, Paulina",Coordination Models and Languages,10.1007/978-3-030-50029-0_19,,"We introduce a weighted propositional configuration logic over a product valuation monoid. Our logic is intended to serve as a specification language for software architectures with quantitative features such as the average of all interactions’ costs of the architecture and the maximum cost among all costs occurring most frequently within a specific number of components in an architecture. We provide formulas of our logic which describe well-known architectures equipped with quantitative characteristics. Moreover, we prove an efficient construction of a full normal form which leads to decidability of equivalence of formulas in this logic.",Configuration logics; Product valuation monoids; Quantitative features; Software architectures; Weighted configuration logics,Weighted PCL over Product Valuation Monoids,x,,,,,,,,,,NO,
S598,2,forward,journalArticle,2021,"Albonico, Michel; Malavolta, Ivano; Pinto, Gustavo; Guzman, Emitza; Chinnappan, Katerina; Lago, Patricia",arXiv:2103.13762 [cs],,http://arxiv.org/abs/2103.13762,"Robots are becoming more and more commonplace in many industry settings. This successful adoption can be partly attributed to (1) their increasingly affordable cost and (2) the possibility of developing intelligent, software-driven robots. Unfortunately, robotics software consumes significant amounts of energy. Moreover, robots are often battery-driven, meaning that even a small energy improvement can help reduce its energy footprint and increase its autonomy and user experience. In this paper, we study the Robot Operating System (ROS) ecosystem, the de-facto standard for developing and prototyping robotics software. We analyze 527 energy-related data points (including commits, pull-requests, and issues on ROS-related repositories, ROS-related questions on StackOverflow, ROS Discourse, ROS Answers, and the official ROS Wiki). Our results include a quantification of the interest of roboticists on software energy efficiency, 10 recurrent causes, and 14 solutions of energy-related issues, and their implied trade-offs with respect to other quality attributes. Those contributions support roboticists and researchers towards having energy-efficient software in future robotics projects.",Computer Science - Robotics; Computer Science - Software Engineering,Mining Energy-Related Practices in Robotics Software,,,,x,,,,x,,,NO,
S597,2,forward,conferencePaper,2020,"Pittou, Maria; Rahonis, George",Coordination Models and Languages,10.1007/978-3-030-50029-0_18,,"We study formal modelling of architectures applied on parametric component-based systems consisting of an unknown number of instances of each component. Architecture modelling is achieved by means of logics. We introduce an extended propositional interaction logic and investigate its first-order level which serves as a formal language for the interactions of parametric systems. Our logic effectively describes the execution order of interactions which is a main feature in several important architectures. We state the decidability of equivalence, satisfiability, and validity of first-order extended interaction logic formulas, and provide several examples of formulas describing well-known architectures.",Architecture modelling; First-order extended interaction logic; Parametric component-based systems,Architecture Modelling of Parametric Component-Based Systems,x,,,,,,,,,,NO,
S596,2,forward,conferencePaper,2021,"Malavolta, Ivano; Chinnappan, Katerina; Swanborn, Stan; Lewis, Grace A.; Lago, Patricia",2021 IEEE/ACM 18th International Conference on Mining Software Repositories (MSR),10.1109/MSR52588.2021.00042,,"In today’s world, reducing energy consumption should be the goal for any organization and any system, including robotics software systems. However, state of the practice in robotics software development focuses primarily on achieving functionality and performance, with minimal recognition of energy-efficiency as a driving software quality. The goal of this paper is to identify, synthesize, and empirically evaluate architectural tactics for energy-efficiency applied by practitioners in real robotics projects. Four tactics were identified by mining software repository techniques applied to the ROS ecosystem. The tactics were evaluated via experimentation on a real, commodity robotics system. Results show that the application of green architectural tactics tends to largely improve the energy-efficiency of the robot (7.9% energy savings when all tactics are applied) and that the movement strategy and the physical environment where the robot operates strongly influence how energy is consumed by the robot.",Ecosystems; Energy efficiency; Energy efficient software; Green products; Mission critical systems; Organizations; Robotics software; Software Architecture; Software quality; Software systems,Mining the ROS ecosystem for Green Architectural Tactics in Robotics and an Empirical Evaluation,,,,,,,,,x,,NO,
S595,2,forward,journalArticle,,"Chinnappan, Katerina; Malavolta, Ivano; Lewis, Grace A; Albonico, Michel; Lago, Patricia",,,,"In software engineering, energy awareness refers to the conscious design and development of software that is able to monitor and react to energy state. Energy awareness is the key building block for energy eﬃciency and for other quality aspects of robotics software, such as mission completion time and safety. However, as of today, there is no guidance for practitioners and researchers on how to architect robotics software with energy awareness in mind. The goal of this paper is to identify architectural tactics for energy-aware robotics software. Specifically, using a dataset of 339,493 data points extracted from ﬁve complementary data sources (e.g., source code repositories, Stack Overﬂow), we identiﬁed and analyzed 97 data points that considered both energy consumption and architectural concerns. We then synthesized a set of energy-aware architectural tactics via thematic analysis. In this preliminary investigation we focus on two representative architectural tactics.",,Architectural Tactics for Energy-aware Robotics Software: A Preliminary Study,x,,,,,,,,,,NO,
S594,2,forward,journalArticle,2021,"Malavolta, Ivano; Lewis, Grace A.; Schmerl, Bradley; Lago, Patricia; Garlan, David",Journal of Systems and Software,10.1016/j.jss.2021.110969,https://linkinghub.elsevier.com/retrieve/pii/S0164121221000662,"Methods: We designed and conducted an observational study where we (i) built a dataset of 335 GitHub repositories containing real open-source ROS-based systems, and (ii) mined the repositories to extract and synthesize quantitative and qualitative findings about how roboticists are architecting ROS-based systems. Results: First, we extracted an empirically-grounded overview of the state of the practice for architecting and documenting ROS-based systems. Second, we synthesized a catalog of 47 architecting guidelines for ROS-based systems. Third, the extracted guidelines were validated by 119 roboticists working on real-world open-source ROS-based systems. Conclusion: Roboticists can use our architecting guidelines for applying good design principles to develop robots that meet quality requirements, and researchers can use our results as evidence-based indications about how real-world ROS systems are architected today, thus inspiring future research contributions.",,Mining guidelines for architecting robotics software,,,,x,,,,,x,,NO,
S593,2,forward,journalArticle,2021,"Malavolta, Ivano; Lewis, Grace A.; Schmerl, Bradley; Lago, Patricia; Garlan, David",Journal of Systems and Software,10.1016/j.jss.2021.110969,https://www.sciencedirect.com/science/article/pii/S0164121221000662,"Context: The Robot Operating System (ROS) is the de-facto standard for robotics software. However, ROS-based systems are getting larger and more complex and could benefit from good software architecture practices. Goal: We aim at (i) unveiling the state-of-the-practice in terms of targeted quality attributes and architecture documentation in ROS-based systems, and (ii) providing empirically-grounded guidance to roboticists about how to properly architect ROS-based systems. Methods: We designed and conducted an observational study where we (i) built a dataset of 335 GitHub repositories containing real open-source ROS-based systems, and (ii) mined the repositories to extract and synthesize quantitative and qualitative findings about how roboticists are architecting ROS-based systems. Results: First, we extracted an empirically-grounded overview of the state of the practice for architecting and documenting ROS-based systems. Second, we synthesized a catalog of 47 architecting guidelines for ROS-based systems. Third, the extracted guidelines were validated by 119 roboticists working on real-world open-source ROS-based systems. Conclusion: Roboticists can use our architecting guidelines for applying good design principles to develop robots that meet quality requirements, and researchers can use our results as evidence-based indications about how real-world ROS systems are architected today, thus inspiring future research contributions.",Robotics; ROS; Software architecture,Mining guidelines for architecting robotics software,,,,,,,,x,,,NO,
S591,2,forward,journalArticle,2021,"Vazquez-Lopez, Rodrigo; Herrera-Lozada, Juan Carlos; Sandoval-Gutierrez, Jacobo; von Bülow, Philipp; Martinez-Vazquez, Daniel Librado",Sensors,10.3390/s21093022,https://www.mdpi.com/1424-8220/21/9/3022,"There are several tools, frameworks, and algorithms to solve information sharing from multiple tasks and robots. Some applications such as ROS, Kafka, and MAVLink cover most problems when using operating systems. However, they cannot be used for particular problems that demand optimization of resources. Therefore, the objective was to design a solution to fit the resources of small vehicles. The methodology consisted of defining the group of vehicles with low performance or are not compatible with high-level known applications; design a reduced, modular, and compatible architecture; design a producer-consumer algorithm that adjusts to the simultaneous localization and communication of multiple vehicles with UWB sensors; validate the operation with an interception task. The results showed the feasibility of performing architecture for embedded systems compatible with other applications managing information through the proposed algorithm allowed to complete the interception task between two vehicles. Another result was to determine the system’s efficiency by scaling the memory size and comparing its performance. The work’s contributions show the areas of opportunity to develop architectures focusing on the optimization of robot resources and complement existing ones.",absolute position system; cooperative algorithm; indoor positioning; intercepting vehicles; robot framework; UWB sensors,Sensor Information Sharing Using a Producer-Consumer Algorithm on Small Vehicles,,x,,,,,,,,,NO,
S590,2,forward,webpage,,,,,https://journal.umy.ac.id/index.php/jrc/article/view/10105,,,Self-Balancing Robot Navigation | Maghfiroh | Journal of Robotics and Control (JRC),x,,,,,,,,,,NO,
S589,2,forward,journalArticle,2020,"Oyekanlu, Emmanuel; Smith, Alexander; Thomas, Windsor; Mulroy, Grethel; Hitesh, Dave; Ramsey, Matthew; Kuhn, David; Mcghinnis, Jason; Buonavita, Steven; Looper, Nickolus; Ng, Mason; Ng'oma, Anthony; Liu, Weimin; Mcbride, Patrick; Shultz, Michael; Cerasi, Craig; Sun, Dan",IEEE Access,10.1109/ACCESS.2020.3035729,,"In industrial environments, over several decades, Automated Guided Vehicles (AGVs) and Autonomous Mobile Robots (AMRs) have served to improve efficiencies of intralogistics and material handling tasks. However, for system integrators, the choice and effective deployment of improved, suitable and reliable communication and control technologies for these unmanned vehicles remains a very challenging task. Specifics of communication for AGVs and AMRs imposes stringent performance requirements on latency and reliability of communication links which many existing wireless technologies struggle to satisfy. In this paper, a review of latest AGVs and AMRs research results in the past decade is presented. The review encompasses results from different past and present research domains of AGVs. In addition, performance requirements of communication networks in terms of their latencies and reliabilities when they are deployed for AGVs and AMRs coordination, control and fleet management in smart manufacturing environments are discussed. Integration challenges and limitations of present state-of-the-art AGV and AMR technologies when those technologies are used for facilitating AGV-based smart manufacturing and factory of the future applications are also thoroughly discussed. The paper also present a thorough discussion of areas in need of further research regarding the application of 5G networks for AGVs and AMRs fleet management in smart manufacturing environments. In addition, novel integration ideas by which tactile Internet, 5G network slicing and virtual reality applications can be used to facilitate AGV and AMR based factory of the future (FoF) and smart manufacturing applications were motivated.",,A Review of Recent Advances in Automated Guided Vehicle Technologies: Integration Challenges and Research Areas for 5G-Based Smart Manufacturing Applications,x,,,,,,,,,,NO,
S588,2,forward,journalArticle,2020,"Oyekanlu, Emmanuel; Smith, Alexander; Thomas, Windsor; Mulroy, Grethel; Hitesh, Dave; Ramsey, Matthew; Kuhn, David; Mcghinnis, Jason; Buonavita, Steven; Looper, Nickolus; Ng, Mason; Ng'oma, Anthony; Liu, Weimin; Mcbride, Patrick; Shultz, Michael; Cerasi, Craig; Sun, Dan",IEEE Access,10.1109/ACCESS.2020.3035729,,"In industrial environments, over several decades, Automated Guided Vehicles (AGVs) and Autonomous Mobile Robots (AMRs) have served to improve efficiencies of intralogistics and material handling tasks. However, for system integrators, the choice and effective deployment of improved, suitable and reliable communication and control technologies for these unmanned vehicles remains a very challenging task. Specifics of communication for AGVs and AMRs imposes stringent performance requirements on latency and reliability of communication links which many existing wireless technologies struggle to satisfy. In this paper, a review of latest AGVs and AMRs research results in the past decade is presented. The review encompasses results from different past and present research domains of AGVs. In addition, performance requirements of communication networks in terms of their latencies and reliabilities when they are deployed for AGVs and AMRs coordination, control and fleet management in smart manufacturing environments are discussed. Integration challenges and limitations of present state-of-the-art AGV and AMR technologies when those technologies are used for facilitating AGV-based smart manufacturing and factory of the future applications are also thoroughly discussed. The paper also present a thorough discussion of areas in need of further research regarding the application of 5G networks for AGVs and AMRs fleet management in smart manufacturing environments. In addition, novel integration ideas by which tactile Internet, 5G network slicing and virtual reality applications can be used to facilitate AGV and AMR based factory of the future (FoF) and smart manufacturing applications were motivated.",,A Review of Recent Advances in Automated Guided Vehicle Technologies: Integration Challenges and Research Areas for 5G-Based Smart Manufacturing Applications,x,,,,,,,,,,NO,
S587,2,forward,conferencePaper,2020,"Velásquez Villagrán, Nancy; Pesado, Patricia; Estevez, Elsa","Cloud Computing, Big Data & Emerging Topics",10.1007/978-3-030-61218-4_1,,"Robots in the industry have been used for decades, much before the so-called Fourth Industrial Revolution. They have been incorporated into industrial processes in various ways, for example, with mechanic arms, in assembly processes, welding, and painting, among others. Industrial robots are located in restricted access sites and their space is delimited by means of physical barriers and security measures. In recent years, Industry 4.0 proposes the use robots, able to collaborate with persons, known as collaborative robots or “cobots”. Cobots are characterized by cooperating with human work, sharing the same workspace, and able to respond to simple human-machine interactions. In addition, given the benefits of applying cloud computing in Industry 4.0, research has been conducted in applying such technologies to robots. The approach is known as “cloud robotics” and appears as an emerging topic. The objective of this work is to carry out a systematic literature review of cloud robotics for Industry 4.0, in an attempt to present the state of the art in this field and identify opportunities for future research. From the analysis of the results, we observe an emerging interest in this area, and we identify main technologies applied, research themes, and application areas, as well as a special interest on security and safety aspects.",Big data; Cloud robotics; Industrial Internet of Things (IIoT); Industry 4.0; Internet of Robotics Things (IoRT); Machine learning; Mobile robots←,Cloud Robotics for Industry 4.0 - A Literature Review,x,,,,,,,,,,NO,
S586,2,forward,journalArticle,2020,"Okumuş, Fatih; Dönmez, Emrah; Kocamaz, Adnan Fatih",Electronics,10.3390/electronics9122023,https://www.mdpi.com/2079-9292/9/12/2023,"In Industry 4.0 compatible workshops, the demand for Automated Guided Vehicles (AGVs) used in indoor logistics systems has increased remarkably. In these indoor logistics systems, it may be necessary to execute multiple transport tasks simultaneously using multiple AGVs. However, some challenges require special solutions for AGVs to be used in industrial autonomous transportation. These challenges can be addressed under four main headings: positioning, optimum path planning, collision avoidance and optimum task allocation. The solutions produced for these challenges may require special studies that vary depending on the type of tasks and the working environment in which AGVs are used. This study focuses on the problem of automated indoor logistics carried out in the simultaneous production of textile finishing enterprises. In the study, a centralized cloud system that enables multiple AGVs to work in collaboration has been developed. The finishing enterprise of a denim manufacturing factory was handled as a case study and modelling of mapping-planning processes was carried out using the developed cloud system. In the cloud system, RestFul APIs, for mapping the environment, and WebSocket methods, to track the locations of AGVs, have been developed. A collaboration module in harmony with the working model has been developed for AGVs to be used for fabric transportation. The collaboration module consists of task definition, battery management-optimization, selection of the most suitable batch trolleys (provides mobility of fabrics for the finishing mills), optimum task distribution and collision avoidance stages. In the collaboration module, all the finishing processes until the product arrives the delivery point are defined as tasks. A task allocation algorithm has been developed for the optimum performance of these tasks. The multi-fitness function that optimizes the total path of the AGVs, the elapsed time and the energy spent while performing the tasks have been determined. An assignment matrix based on K nearest neighbor (k-NN) and permutation possibilities was created for the optimal task allocation, and the most appropriate row was selected according to the optimal path totals of each row in the matrix. The D* Lite algorithm has been used to calculate the optimum path between AGVs and goals by avoiding static obstacles. By developing simulation software, the problem model was adapted and the operation of the cloud system was tested. Simulation results showed that the developed cloud system was successfully implemented. Although the developed cloud system has been applied as a case study in fabric finishing workshops with a complex structure, it can be used in different sectors as its logistic processes are similar.",cloud robotics; intelligent manufacturing; logistics planning; multi-AGVs collaboration; multi-task allocation,A Cloudware Architecture for Collaboration of Multiple AGVs in Indoor Logistics: Case Study in Fabric Manufacturing Enterprises,x,,,x,,,,,,,NO,
S585,2,forward,journalArticle,2020,"Oyekanlu, Emmanuel A.; Smith, Alexander C.; Thomas, Windsor P.; Mulroy, Grethel; Hitesh, Dave; Ramsey, Matthew; Kuhn, David J.; Mcghinnis, Jason D.; Buonavita, Steven C.; Looper, Nickolus A.; Ng, Mason; Ng’oma, Anthony; Liu, Weimin; Mcbride, Patrick G.; Shultz, Michael G.; Cerasi, Craig; Sun, Dan",IEEE Access,10.1109/ACCESS.2020.3035729,,"In industrial environments, over several decades, Automated Guided Vehicles (AGVs) and Autonomous Mobile Robots (AMRs) have served to improve efficiencies of intralogistics and material handling tasks. However, for system integrators, the choice and effective deployment of improved, suitable and reliable communication and control technologies for these unmanned vehicles remains a very challenging task. Specifics of communication for AGVs and AMRs imposes stringent performance requirements on latency and reliability of communication links which many existing wireless technologies struggle to satisfy. In this paper, a review of latest AGVs and AMRs research results in the past decade is presented. The review encompasses results from different past and present research domains of AGVs. In addition, performance requirements of communication networks in terms of their latencies and reliabilities when they are deployed for AGVs and AMRs coordination, control and fleet management in smart manufacturing environments are discussed. Integration challenges and limitations of present state-of-the-art AGV and AMR technologies when those technologies are used for facilitating AGV-based smart manufacturing and factory of the future applications are also thoroughly discussed. The paper also present a thorough discussion of areas in need of further research regarding the application of 5G networks for AGVs and AMRs fleet management in smart manufacturing environments. In addition, novel integration ideas by which tactile Internet, 5G network slicing and virtual reality applications can be used to facilitate AGV and AMR based factory of the future (FoF) and smart manufacturing applications were motivated.",5G; 5G mobile communication; AGV; AMR; autonomous industrial equipment; factory of the future; industry 4.0; Intelligent factory; lean manufacturing; Production facilities; Reliability; smart manufacturing; Smart manufacturing; tactile Internet; Tactile Internet; Task analysis; virtual reality; Virtual reality,A Review of Recent Advances in Automated Guided Vehicle Technologies: Integration Challenges and Research Areas for 5G-Based Smart Manufacturing Applications,x,,,,,,,,,,NO,
S584,2,forward,conferencePaper,2019,"Wehrmeister, Marco",Anais Estendidos do Simpósio Brasileiro de Engenharia de Sistemas Computacionais (SBESC),10.5753/sbesc_estendido.2019.8633,https://sol.sbc.org.br/index.php/sbesc_estendido/article/view/8633,Este trabalho apresenta uma abordagem para a geração de código fonte para sistemas embarcados usandos em robôs a partir de modelos UML anotados com o perfil MARTE. O código fonte gerado utiliza a semântica e as bibliotecas disponíveis no Robot Operating System (ROS) que é amplamente utilizado no projeto e implementação de robôs tanto no meio industrial como no acadêmico. O objetivo principal deste trabalho é a aplicação de técnicas de engenharia guiada por modelos (MDE) no projeto de robôs visando a prototipação rápida de robôs através de simuladores e também a implementação real deles. O trabalho foi validado através de um estudo de caso que mostra a viabilidade da proposta na implementação de um robô simples. Os resultados fornecem indicativos que a abordagem pode ser aplicada em sistemas mais complexos que envolvem multiplos robôs que interagem para realizar tarefas em ambientes industriais.,,Geração de Código para Robôs implementados com ROS a partir de modelos UML/MARTE,,,x,,,,,,,,NO,
S583,2,forward,webpage,,,,,https://www.proquest.com/openview/b86bb8971977c6a485982d26e66f4f12/1?pq-origsite=gscholar&cbl=18750&diss=y,"Explore millions of resources from scholarly journals, books, newspapers, videos and more, on the ProQuest Platform.",,CHRIS ROS Modeling: The Foundation for an Autonomous Systems Workbench - ProQuest,,,,x,x,,,,,,NO,
S582,2,forward,conferencePaper,2021,"Drumheller, William R.; Conner, David C.",SoutheastCon 2021,10.1109/SoutheastCon45413.2021.9401832,,"The Robot Operating System (ROS) is frequently used to develop complex robotic systems with many interacting software components. While ROS provides several tools for visualizing active ROS deployments, it lacks tools for Model-Based Engineering (MBE) during the development stage, and ROS lacks tools for easily documenting the interfaces and deployed components other than specific configuration and launch files themselves. This paper presents a software tool chain - dubbed CHRIS ROS Modeling - that enables users to document an existing ROS deployment. The information is stored as instances of a simplified metamodel in portable formats. The resulting information serves to document an existing system and will serve as the foundation for future work to develop an integrated MBE system. This paper compares our approach to similar approaches currently in development.",Computational modeling; Documentation; Portable document format; System testing; Tools; US Department of Transportation; Visualization,Documentation and Modeling of ROS Systems,,,,,,,,,x,,NO,
S581,2,forward,journalArticle,2020,"Corbato, Carlos Hernandez; Bozhinoski, Darko; Oviedo, Mario Garzon; van der Hoorn, Gijs; Garcia, Nadia Hammoudeh; Deshpande, Harshavardhan; Tjerngren, Jon; Wasowski, Andrzej",arXiv:2010.09145 [cs],,http://arxiv.org/abs/2010.09145,"Known attempts to build autonomous robots rely on complex control architectures, often implemented with the Robot Operating System platform (ROS). These architectures need to be dynamically adaptable in order to cope with changing environment conditions, new mission requirements or component failures. The implementation of adaptable architectures is very often ad hoc, quickly gets cumbersome and expensive. We present a structured model-based framework for the adaptation of robot control architectures at run-time to satisfy set quality requirements. We use a formal meta-model to represent the configuration space of control architectures and the corresponding mission requirements. The meta-model is implemented as an OWL ontology with SWRL rules, enabling the use of an off-the-shelf reasoner for diagnostics and adaptation. The method is discussed and evaluated using two case studies of real, ROS-based systems: (i) for an autonomous dual arm mobile manipulator building a pyramid and (ii) a mobile robot navigating in a factory environment.",Computer Science - Robotics; Computer Science - Software Engineering,MROS: Runtime Adaptation For Robot Control Architectures,,x,,,,,,,,,NO,
S579,2,forward,journalArticle,,"Ziemann, Sophie",,,,,,Construction of Variable App-Level Process Chains in Android,x,,,,,,,,,,NO,
S578,2,forward,journalArticle,2019,"Deval, L.; Bordignon, M.; Kahl, B.; Santos, André Filipe; Luedtke, M.; Garcia, N. H.",,10.1109/models.2019.00-11,http://repositorio.inesctec.pt/handle/123456789/11437,"In principle, Model-Driven Engineering (MDE) addresses central aspects of robotics software development. Domain experts could leverage the expressiveness of models; implementation details over different hardware could be handled by automatic code generation. In practice, most evidence points to manual code development as the norm, despite several MDE efforts in robotics. Possible reasons for this disconnect are the wide ranges of applications and target platforms making all-encompassing MDE IDEs hard to develop and maintain, with developers reverting to writing code manually. Acknowledging this, and given the opportunity to leverage a large corpus of open-source software widely adopted by the robotics community, we pursue modeling as a complement, rather than an alternative, to manually written code. Our previous work introduced metamodels to describe components, their interactions, and their resulting composition, as inspired by, but not limited to, the de-facto standard Robot Operating System (ROS). In this paper we put such metamodels into use through two contributions [1]. First, we automate the generation of models from manually written artifacts through extraction from source code and runtime system monitoring. Second, we make available an easy-to-use web infrastructure to perform the extraction, together with a growing database of models so generated. Our aim with this tooling, publicly available both as-a-service and as source code, is to lower the MDE barrier for practitioners and leverage models to 1) improve the understanding of manually written code; 2) perform correctness checks; and 3) systematize the definition and adoption of best practices through large-scale generation of models from existing code. A comprehensive example is provided as a walk-through for robotics software practitioners.",,Bootstrapping MDE Development from ROS Manual Code - Part 2: Model Generation,,,,,,,,,x,,NO,
S577,2,forward,conferencePaper,2021,"Trezzy, Mickaël; Ober, Ileana; Ober, Iulian; Oliveira, Raquel","2021 IEEE International Workshop of Electronics, Control, Measurement, Signals and their application to Mechatronics (ECMSM)",10.1109/ECMSM51310.2021.9468864,,"Despite the popularity of the Robot Operating System (ROS), Model-Driven Engineering (MDE) methods remain not commonly used in the community. The use of such methods would allow to reason at a higher level of abstraction and increase the accessibility of field engineers to effectively write ROS applications, while opening the way to more advanced model analysis for validation and verification. In a previous work, we made an in-depth comparative study to choose which MDE approach to apply when developing ROS applications. This study led us to choose graphical Domain-Specific Languages (DSL) as the means to facilitate the development of ROS applications. In this paper we present the MDE4ROS framework, a graphical DSL we defined to allow high level robotics applications development. This framework aims to provide a better view of the system during the development using a graphical representation and to enable higher level of abstraction with code generation of the ROS system. To illustrate our proposal we use MDE4ROS to develop a TurtleBot use case and we present an analysis of the results.",DSL; MDE; Model driven engineering; Operating systems; Particle measurements; Proposals; Robotics; ROS; Space exploration; Syntactics,Leveraging domain specific modeling to increase accessibility of robot programming,,x,,,,,,,,,NO,
S575,2,forward,conferencePaper,2019,"Anjum, Rubia; Azam, Farooque; Anwar, Muhammad Waseem; Amjad, Anam",Proceedings of the 2019 7th International Conference on Computer and Communications Management,10.1145/3348445.3351304,https://doi.org/10.1145/3348445.3351304,"Requirement validation is the most vital phase of Requirement Engineering (RE) process which provides clear, complete and consistent requirements to software development team. Although several requirement validation approaches have been proposed such as review checklists, prototyping and model-based validation. Among all these existing techniques, prototyping being model-based approach is most widely utilized. It is analyzed that functional implementation and iterations often makes traditional manual prototyping to be inefficient, time consuming and expensive. In order to bridge this gap, a meta-model for automatic generation of prototypes is proposed in this paper. This prototype will be developed directly from the elicited requirements for the purpose of efficient validation of requirements. This approach provides thorough knowledge, reactions foresight and design analysis of a system, steering towards the validation of the necessary, verifiable, traceable and reusable requirements. In addition, after performing requirement validation using proposed approach, rework on design and implementation is avoided.",Evolutionary Prototyping; Meta Model; Software Requirements; Web applications,A Meta-Model to Automatically Generate Evolutionary Prototypes from Software Requirements,x,,,x,,,,,,,NO,
S574,2,forward,conferencePaper,2019,"Hammoudeh Garcia, Nadia; Deval, Ludovic; Lüdtke, Mathias; Santos, Andre; Kahl, Björn; Bordignon, Mirko",2019 ACM/IEEE 22nd International Conference on Model Driven Engineering Languages and Systems (MODELS),10.1109/MODELS.2019.00-11,,"In principle, Model-Driven Engineering (MDE) addresses central aspects of robotics software development. Domain experts could leverage the expressiveness of models; implementation details over different hardware could be handled by automatic code generation. In practice, most evidence points to manual code development as the norm, despite several MDE efforts in robotics. Possible reasons for this disconnect are the wide ranges of applications and target platforms making all-encompassing MDE IDEs hard to develop and maintain, with developers reverting to writing code manually. Acknowledging this, and given the opportunity to leverage a large corpus of open-source software widely adopted by the robotics community, we pursue modeling as a complement, rather than an alternative, to manually written code. Our previous work introduced metamodels to describe components, their interactions, and their resulting composition, as inspired by, but not limited to, the de-facto standard Robot Operating System (ROS). In this paper we put such metamodels into use through two contributions. First, we automate the generation of models from manually written artifacts through extraction from source code and runtime system monitoring. Second, we make available an easy-to-use web infrastructure to perform the extraction, together with a growing database of models so generated. Our aim with this tooling, publicly available both as-a-service and as source code, is to lower the MDE barrier for practitioners and leverage models to 1) improve the understanding of manually written code; 2) perform correctness checks; and 3) systematize the definition and adoption of best practices through large-scale generation of models from existing code. A comprehensive example is provided as a walk-through for robotics software practitioners.",development environments; models; ROS,Bootstrapping MDE Development from ROS Manual Code - Part 2: Model Generation,,,,,,,,,,,,
S573,2,forward,conferencePaper,2021,"Drumheller, William R.; Conner, David C.",SoutheastCon 2021,10.1109/SoutheastCon45413.2021.9401832,,"The Robot Operating System (ROS) is frequently used to develop complex robotic systems with many interacting software components. While ROS provides several tools for visualizing active ROS deployments, it lacks tools for Model-Based Engineering (MBE) during the development stage, and ROS lacks tools for easily documenting the interfaces and deployed components other than specific configuration and launch files themselves. This paper presents a software tool chain - dubbed CHRIS ROS Modeling - that enables users to document an existing ROS deployment. The information is stored as instances of a simplified metamodel in portable formats. The resulting information serves to document an existing system and will serve as the foundation for future work to develop an integrated MBE system. This paper compares our approach to similar approaches currently in development.",Computational modeling; Documentation; Portable document format; System testing; Tools; US Department of Transportation; Visualization,Documentation and Modeling of ROS Systems,,,,,,,,x,,,NO,
S572,2,forward,journalArticle,,"Borhani, Mohammad",,,,"With continuously increasing energy demand by modern cities, the eﬃcient processing of generation, transmission, and distribution of electricity has gained much attention in the last decade. Reliability and eﬃciency have played a crucial role in designing modern power transmission line. Asynchronous communication and ability of bulk transmission in a longdistance manner provided the path for High Voltage Direct Current (HVDC) so as to be used in a modern transmission line. Any anomalous pattern of data existed in HVDC system may result in upcoming failure, which puts the reliability and eﬃciency of the system at risk. In this thesis, a framework of data analysis is presented. The framework, which is divided into diﬀerent submodules, focuses on preprocessing of data, dimensionality reduction, and time series forecasting. In dimensionality reduction, diﬀerent approaches and criteria were deﬁned for HVDC experts that could be used as prior steps to establish machine learning approaches. Moreover, the central part of the framework considers the comparison between the prediction of time series using traditional modeling and ensemble machine learning approaches called Random Forest. Using mathematical foundations and proofs, an intuition of using Random Forest in time series forecasting is justiﬁed. Then, the contribution of the thesis focuses on transforming the univariate time series forecasting problem into supervised learning formulation that could be evaluated mathematically. Experimental result shows that the Random Forest model outperforms the traditional forecasting approach. Random Forest can be deployed as a prediction of time series with high accuracy. This model helps the HVDC expert to predict the near future so as to provide a guideline for witnessing any anomalous pattern proactively. Moreover, Isolation Forest is used for the prediction of anomalies in HVDC data set. Finally, by considering the regression mode of Random Forest, an approach of predicting a target time series using an independent time series is also included in the thesis.",,ANOMALY DETECTION USING MACHINE LEARNING APPROACHES IN HVDC POWER SYSTEM,x,,,,,,,,,,NO,
S571,2,forward,book,2020,"Beg, Arshad; Butterfield, Andrew",,,,This document summarises the state-of-the-art of our ultimate goal of formal verification of the ROS based robotic systems.,,Working Document for state of the art - formality meets autonomy/robotics,,,,,x,,,,,,NO,
S1478,2,bkwd,journalArticle,2008,"Zhang, Youmin; Jiang, Jin",Annual Reviews in Control,10.1016/j.arcontrol.2008.03.008,https://www.sciencedirect.com/science/article/pii/S1367578808000345,"In this paper, a bibliographical review on reconfigurable (active) fault-tolerant control systems (FTCS) is presented. The existing approaches to fault detection and diagnosis (FDD) and fault-tolerant control (FTC) in a general framework of active fault-tolerant control systems (AFTCS) are considered and classified according to different criteria such as design methodologies and applications. A comparison of different approaches is briefly carried out. Focuses in the field on the current research are also addressed with emphasis on the practical application of the techniques. In total, 376 references in the open literature, dating back to 1971, are compiled to provide an overall picture of historical, current, and future developments in this area.",Active fault-tolerant control systems (AFTCS); Bibliographical review; Fault detection and diagnosis (FDD); Fault-tolerant control systems (FTCS); Reconfigurable control (RC),Bibliographical review on reconfigurable fault-tolerant control systems,x,,,,,,,,,,NO,
S1477,2,bkwd,manuscript,2008,"Veres, Sandor M.",,,,,,Natural Language Programming of Agents and Robotic Devices,x,,,x,,,,,,,NO,
S1476,2,bkwd,journalArticle,2012,"Veres, S M","Proceedings of the Institution of Mechanical Engineers, Part I: Journal of Systems and Control Engineering",10.1177/0959651811408502,https://doi.org/10.1177/0959651811408502,"This paper looks at the possibility of knowledge development of machines from an engineer’s point of view. First, the increasing need for autonomous operations of vehicles, manufacturing facilities, utility networks, and robots is reviewed. From the point of view of operational design, five desirable ingredients are identified that can facilitate control autonomy. Most of these facilitators can be enabled by using the methodology of natural language programming and writing of documents that machines can read and utilize to improve their feedback control skills, their knowledge of the environment, and also their decision-making skills. A forward look outlines the benefits of ‘publishing for machines’, to manufacturing, vehicle operations, utility networks, and robots.",autonomous systems; complex systems; control engineering; intelligent machines,Knowledge of machines: review and forward look,x,,,x,,,,,,,NO,
S1475,2,bkwd,journalArticle,2009,"Stoustrup, Jakob",European Journal of Control,10.3166/ejc.15.311-330,https://www.sciencedirect.com/science/article/pii/S0947358009709914,"Control engineering is in many ways a mature technology that has found its way into almost every industrial sector with an almost countless number of successful applications. Nevertheless, there still remains significant challenges to overcome that prevent the technology from further spread. One of these challenges is related to the fact that large industrial processes are always live systems in the sense that they are subject to constant change in terms of instrumentation (sensors and actuators) and in terms of subsystems that are added or removed. This means that an advanced control system might be based on a system model that is valid only for a rather short time span and might be turned off by the operator, when it seizes to operate satisfactorily for this reason. Moreover, most of the advanced design methodologies offered by our community are monolithic in nature, in the sense that the only way to modify the control system is to perform a completely new design of the whole system in response to what might be even tiny changes in instrumentation. Such a constant redesign of the whole control system is usually not feasible due to cost and commissioning issues. This paper is a position paper in the sense that it probably provides more questions than answers. The objective of the paper is to highlight some of the challenges that the control community is facing, if the advanced methods should be made applicable to a wider range of applications, in particular those that can be described as live systems for which sensors and actuators are added or removed, and likewise, for which subsystems are added or removed from time to time. The challenge is defined as creating control systems that can automatically accommodate changes of this radical nature. A number of industrial case studies to exemplify the challenges are described.",Awareness; Large-scale industrial processes; Reconfiguration; System architecture; Systems with varying instrumentation,Plug & Play Control: Control Technology Towards New Challenges,x,,,x,,,,,,,NO,
S1474,2,bkwd,journalArticle,2005,"Shore, David; Bodson, Marc","Journal of Guidance, Control, and Dynamics",10.2514/1.8178,https://doi.org/10.2514/1.8178,,,Flight Testing of a Reconfigurable Control System on an Unmanned Aircraft,x,,,x,,,,,,,NO,
S1473,2,bkwd,journalArticle,,"Quigley, Morgan; Gerkey, Brian; Conley, Ken; Faust, Josh; Foote, Tully; Leibs, Jeremy; Berger, Eric; Wheeler, Rob; Ng, Andrew",,,,"This paper gives an overview of ROS, an opensource robot operating system. ROS is not an operating system in the traditional sense of process management and scheduling; rather, it provides a structured communications layer above the host operating systems of a heterogenous compute cluster. In this paper, we discuss how ROS relates to existing robot software frameworks, and brieﬂy overview some of the available application software which uses ROS.",,ROS: an open-source Robot Operating System,,,,,,,,,x,,NO,
S1472,2,bkwd,journalArticle,1987,"Muir, Bonnie M.",International Journal of Man-Machine Studies,10.1016/S0020-7373(87)80013-5,https://www.sciencedirect.com/science/article/pii/S0020737387800135,"A problem in the design of decision aids is how to design them so that decision makers will trust them and therefore use them appropriately. This problem is approached in this paper by taking models of trust between humans as a starting point, and extending these to the human-machine relationship. A definition and model of human-machine trust are proposed, and the dynamics of trust between humans and machines are examined. Based upon this analysis, recommendations are made for calibrating users' trust in decision aids.",,"Trust between humans and machines, and the design of decision aids",x,,,x,,,,,,,NO,
S1471,2,bkwd,journalArticle,2000,"McDermott, Drew M.",AI Magazine,10.1609/aimag.v21i2.1506,https://ojs.aaai.org/index.php/aimagazine/article/view/1506,"The 1998 Planning Competition at the AI Planning Systems Conference was the first of its kind. Its goal was to create planning domains that a wide variety of planning researchers could agree on to make comparison among planners more meaningful, measure overall progress in the field, and set up a framework for long-term creation of a repository of problems in a standard notation. A rules committee for the competition was created in 1997 and had long discussions on how the contest should go. One result of these discussions was the pddl notation for planning domains. This notation was used to set up a set of planning problems and get a modest problem repository started. As a result, five planning systems were able to compete when the contest took place in June 1998. All these systems solved problems in the strips framework, with some slight extensions. The attempt to find domains for other forms of planning foundered because of technical and organizational problems. In spite of this problem, the competition achieved its goals partially in that it con-firmed that substantial progress had occurred in some subfields of planning, and it allowed qualitative comparison among different planning algorithms. It is urged that the competition continue to take place and to evolve.",,The 1998 AI Planning Systems Competition,x,,,x,,,,,,,NO,
S1470,2,bkwd,journalArticle,2020,"Chen, Gang; Ding, Yi; Edwards, Hugo; Chau, Chong Hin; Hou, Sai; Johnson, Grace; Syed, Mohammed Sharukh; Tang, Haoyuan; Wu, Yue; Yan, Ye; Tidhar, Gil; Lipovetzky, Nir",arXiv:2008.04600 [cs],,http://arxiv.org/abs/2008.04600,"Planimation is a modular and extensible open source framework to visualise sequential solutions of planning problems specified in PDDL. We introduce a preliminary declarative PDDL-like animation profile specification, expressive enough to synthesise animations of arbitrary initial states and goals of a benchmark with just a single profile.",Computer Science - Artificial Intelligence,Planimation,x,,,x,,,,,,,NO,
S1469,2,bkwd,journalArticle,1985,"Looze, D.; Weiss, J.; Eterno, J.; Barrett, N.",IEEE Control Systems Magazine,10.1109/MCS.1985.1104940,,"This paper presents an approach to the automatic redesign of flight control systems for aircraft that have suffered one or more control element failures. The procedure is based on linear quadratic (LQ) design techniques, and produces a control system that maximizes a measure of feedback system performance subject to a bandwidth constraint.",Aerospace control; Aircraft; Automatic control; Computer crashes; Control systems; NASA; System performance,An automatic redesign approach for restructurable control systems,,,,x,,,,,,,NO,
S1468,2,bkwd,journalArticle,1994,"Lee, John D.; Moray, Neville",International Journal of Human-Computer Studies,10.1006/ijhc.1994.1007,https://www.sciencedirect.com/science/article/pii/S107158198471007X,"The increasing use of automation to supplant human intervention in controlling complex systems changes the operators' role from active controllers (directly involved with the system) to supervisory controllers (managing the use of different degrees of automatic and manual control). This paper examines the relationship between trust in automatic controllers, self-confidence in manual control abilities, and the use of automatic controllers in operating a simulated semi-automatic pasteurization plant. Trust, combined with self-confidence, predicted the operators' allocation strategy. A Multitrait-multimethod matrix and logit functions showed how trust and self-confidence relate to the use of automation. An ARMAV time series model of the dynamic interaction of trust and self-confidence, combined with individual biases, accounted for 60.9-86.5% of the variance in the use of the three automatic controllers. In general, automation is used when trust exceeds self-confidence, and manual control when the opposite is true. Since trust and self-confidence are two factors that guide operators' interactions with automation, the design of supervisory control systems should include provisions to ensure that operators' trust reflects the capabilities of the automation and operators' self-confidence reflects their abilities to control the system manually.",,"Trust, self-confidence, and operators' adaptation to automation",x,,,,,,,,,,NO,
S1467,2,bkwd,bookSection,,"Ippolito, Corey; Pisanich, Greg; Al-Ali, Khalid",Infotech@Aerospace,,https://arc.aiaa.org/doi/abs/10.2514/6.2005-7122,,,Component-Based Plug-and-Play Methodologies for Rapid Embedded Technology Development,x,,,x,,,,,,,NO,
S1466,2,bkwd,journalArticle,,"Ippolito, Corey; Al-Ali, Khalid; Dolan, John",,,,,,Polymorphic Control and Trajectory Optimization of an Autonomous Ground Vehicle over Wireless Mobile Networks,x,,,x,,,,,,,NO,
S1465,2,bkwd,conferencePaper,2008,"Ippolito, Corey; Joo, Sungmoon; Al-Ali, Khalid; Yeh, Yoo Hsiu",2008 IEEE Aerospace Conference,10.1109/AERO.2008.4526291,,"The emergence of distributed technologies as a reliable infrastructure for real-time control is enabling a new generation of distributed plug-and-play control architectures and methodologies; increasingly common are control systems that pass real-time data across traditional system boundaries to utilize distributed remote sensing, processing, and actuation. The polymorphic control systems (PCS) project formalizes constructs that permits topological reconfiguration of control systems that span multiple heterogeneous systems and multiple communication mediums, towards the goal of control coordination and strategy optimization in a multi-system environment, increased resilience to failure and uncertainty, increased overall and individual performance, and better utilization of available resources. This paper presents the concepts behind PCS, and presents results from a flight test experiment involving distributed reconfiguration of an autonomous landing controller in a collaborative multi-vehicle environment. These flight test experiments demonstrate one of the goals of polymorphic reconfiguration: providing emergency assistance and collaborative coordination between multiple systems to achieve safely the mission critical objectives, where a system failure would have resulted in the loss of the aircraft.",Collaboration; Communication system control; Control systems; Distributed control; Personal communication networks; Real time systems; Remote sensing; Resilience; Uncertainty; Unmanned aerial vehicles,Polymorphic Control Reconfiguration in an Autonomous UAV with UGV Collaboration,,,,x,,,,,,,NO,
S1464,2,bkwd,bookSection,,"Ippolito, Corey; Al-Ali, Khalid",AIAA Infotech@Aerospace 2007 Conference and Exhibit,,https://arc.aiaa.org/doi/abs/10.2514/6.2007-2832,,,Topological Constructs for Automatic Reconfiguration of Polymorphic Control Systems,x,,,x,,,,,,,NO,
S1463,2,bkwd,journalArticle,2001,"Hoffmann, J.; Nebel, B.",Journal of Artificial Intelligence Research,10.1613/jair.855,https://www.jair.org/index.php/jair/article/view/10276,"We describe and evaluate the algorithmic techniques that are    used in the FF planning system. Like the HSP system, FF relies on    forward state space search, using a heuristic that estimates goal    distances by ignoring delete lists. Unlike HSP's heuristic, our method    does not assume facts to be independent. We introduce a novel search    strategy that combines hill-climbing with systematic search, and we    show how other powerful heuristic information can be extracted and    used to prune the search space. FF was the most successful automatic    planner at the recent AIPS-2000 planning competition. We review the    results of the competition, give data for other benchmark domains, and    investigate the reasons for the runtime performance of FF compared to    HSP.",,The FF Planning System: Fast Plan Generation Through Heuristic Search,x,,,,,,,,,,NO,
S1462,2,bkwd,journalArticle,2003,"Fox, M.; Long, D.",Journal of Artificial Intelligence Research,10.1613/jair.1129,https://www.jair.org/index.php/jair/article/view/10352,"In recent years research in the planning community has moved increasingly toward s application of planners to realistic problems involving both time and many typ es of resources. For example, interest in planning demonstrated by the space res earch community has inspired work in observation scheduling, planetary rover ex ploration and spacecraft control domains. Other temporal and resource-intensive domains including logistics planning, plant control and manufacturing have also helped to focus the community on the modelling and reasoning issues that must be confronted to make planning technology meet the challenges of application.   The International Planning Competitions have acted as an important motivating fo rce behind the progress that has been made in planning since 1998. The third com petition (held in 2002) set the planning community the challenge of handling tim e and numeric resources. This necessitated the development of a modelling langua ge capable of expressing temporal and numeric properties of planning domains. In this paper we describe the language, PDDL2.1, that was used in the competition.  We describe the syntax of the language, its formal semantics and the validation of concurrent plans. We observe that PDDL2.1 has considerable modelling power --- exceeding the capabilities of current planning technology --- and presents a number of important challenges to the research community.",,PDDL2.1: An Extension to PDDL for Expressing Temporal Planning Domains,x,,,,,,,,,,NO,
S1461,2,bkwd,journalArticle,2002,"Brennan, R.W.; Fletcher, M.; Norrie, D.H.",IEEE Transactions on Robotics and Automation,10.1109/TRA.2002.802211,,"We describe a general approach for dynamic and intelligent reconfiguration of real-time distributed control systems that utilizes the IEC 61499 function block model. This work is central to the development of distributed intelligent control systems that are inherently adaptable and dynamically reconfigurable. The approach that is used takes advantage of distributed artificial intelligence at the planning and control levels to achieve significantly shorter up-front commissioning times as well as significantly more responsiveness to change. This approach is based on object-oriented and agent-based methods, and aims at overcoming the difficulties associated with managing real-time reconfiguration of an intelligent manufacturing system.",Application software; Artificial intelligence; Control systems; Distributed control; Industrial control; Intelligent control; Manufacturing; Multiagent systems; Object oriented modeling; Real time systems,An agent-based approach to reconfiguration of real-time distributed control systems,x,,,x,,,,,,,NO,
S1460,2,bkwd,conferencePaper,2010,"Aitken, Jonathan M.; Alexander, Rob; Kelly, Tim",2010 5th International Conference on System of Systems Engineering,10.1109/SYSOSE.2010.5544114,,"The level of complexity in Systems of Systems is increasing as more complex functionality emerges from the interaction of individual components. As networks become more complex it becomes more difficult for an individual to identify potential safety risks. We know, from previous accidents, that poor understanding of networks can be dangerous. In this paper, we demonstrate the potential value of incorporating a process to identify risks in a deployed network, focusing on factors concerned with the interaction of this process with a user, and the potential for new hazards.",Accidents; Aerodynamics; Aerospace safety; Bandwidth; Computer science; Delay; Hazards; National electric code; Risk Assessment; Risk management; Safety; Systems engineering and theory; Systems of Systems,A case for dynamic risk assessment in NEC systems of systems,,,,x,,,,,,,NO,
S1459,2,bkwd,journalArticle,2013,"Bendtsen, Jan; Trangbaek, Klaus; Stoustrup, Jakob",IEEE Transactions on Control Systems Technology,10.1109/TCST.2011.2174060,,"Often, when new sensor or actuator hardware becomes available for use in a control system, it is desirable to retain the existing control system and apply the new control capabilities in a gradual fashion rather than decommissioning the entire existing system and replacing it with an altogether new control system. However, this requires that the existing controller remains in action, and the new control law component is added to the existing system. This paper formally introduces the concept of Plug-and-Play control and proposes two different methods of introducing new control components in a smooth manner, providing stability guarantees during the transition phase as well as retaining the original control structure. The applicability of the methods is illustrated on two different practical example systems, a livestock stable climate control system and a laboratory-scale model of a district heating system.",Actuators; Meteorology; Noise; Noise measurement; Observer-based control; Transfer functions; variable structure systems; Ventilation; Youla-Kucera parameterization,Plug-and-Play Control—Modifying Control Systems Online,x,,,,,,,,,,NO,
S1458,2,bkwd,journalArticle,1968,"Cohen, J.",Psychological Bulletin,10.1037/h0026256,,,"Humans; Likelihood Functions; Mental Disorders; Models, Statistical; Psychometrics; Research Design; Sample Size",Weighted kappa: nominal scale agreement with provision for scaled disagreement or partial credit,x,,,,,,,,,,NO,
S1457,2,bkwd,journalArticle,2006,"Fereday, Jennifer; Muir-Cochrane, Eimear",International Journal of Qualitative Methods,10.1177/160940690600500107,https://doi.org/10.1177/160940690600500107,"In this article, the authors describe how they used a hybrid process of inductive and deductive thematic analysis to interpret raw data in a doctoral study on the role of performance feedback in the self-assessment of nursing practice. The methodological approach integrated data-driven codes with theory-driven ones based on the tenets of social phenomenology. The authors present a detailed exemplar of the staged process of data coding and identification of themes. This process demonstrates how analysis of the raw data from interview transcripts and organizational documents progressed toward the identification of overarching themes that captured the phenomenon of performance feedback as described by participants in the study.",credibility; qualitative research; rigor; social phenomenology; thematic analysis,Demonstrating Rigor Using Thematic Analysis: A Hybrid Approach of Inductive and Deductive Coding and Theme Development,x,,,,,,,,,,NO,
S1456,2,bkwd,journalArticle,2013,"Vaismoradi, Mojtaba; Turunen, Hannele; Bondas, Terese",Nursing & Health Sciences,10.1111/nhs.12048,,"Qualitative content analysis and thematic analysis are two commonly used approaches in data analysis of nursing research, but boundaries between the two have not been clearly specified. In other words, they are being used interchangeably and it seems difficult for the researcher to choose between them. In this respect, this paper describes and discusses the boundaries between qualitative content analysis and thematic analysis and presents implications to improve the consistency between the purpose of related studies and the method of data analyses. This is a discussion paper, comprising an analytical overview and discussion of the definitions, aims, philosophical background, data gathering, and analysis of content analysis and thematic analysis, and addressing their methodological subtleties. It is concluded that in spite of many similarities between the approaches, including cutting across data and searching for patterns and themes, their main difference lies in the opportunity for quantification of data. It means that measuring the frequency of different categories and themes is possible in content analysis with caution as a proxy for significance.",content analysis; Female; Humans; Male; nursing; Nursing Evaluation Research; Nursing Methodology Research; qualitative descriptive research; Qualitative Research; Sensitivity and Specificity; thematic analysis,Content analysis and thematic analysis: Implications for conducting a qualitative descriptive study,,,,,,,,,x,,NO,
S1455,2,bkwd,conferencePaper,2011,"Cruzes, Daniela S.; Dyba, Tore",2011 International Symposium on Empirical Software Engineering and Measurement,10.1109/ESEM.2011.36,,"Thematic analysis is an approach that is often used for identifying, analyzing, and reporting patterns (themes) within data in primary qualitative research. 'Thematic synthesis' draws on the principles of thematic analysis and identifies the recurring themes or issues from multiple studies, interprets and explains these themes, and draws conclusions in systematic reviews. This paper conceptualizes the thematic synthesis approach in software engineering as a scientific inquiry involving five steps that parallel those of primary research. The process and outcome associated with each step are described and illustrated with examples from systematic reviews in software engineering.",Context; Data mining; Encoding; evidence-based and empirical software engineering; Organizations; research synthesis; secondary research; Software; Software engineering; systematic review; Systematics,Recommended Steps for Thematic Synthesis in Software Engineering,x,,,,,,,,,,NO,
S1454,2,bkwd,conferencePaper,2013,"Calero, Coral; Bertoa, Manuel F.; Moraga, Ma Ángeles",Proceedings of the 2nd International Workshop on Green and Sustainable Software,,,"Nowadays, sustainability is a key factor that should be considered in the software quality models. It is increasingly important how environmentally friendly is a software product, both in its execution and during its development process. Therefore, we have proposed, in a previous work, a quality model (25010+S) an extension of the ISO/IEC 25010 standard by considering aspects of sustainability on its characteristics and sub-characteristics. However, in order to make the model useful, it is necessary to identify measures for each sub-characteristic and characteristic. For that reason, the objective of this paper is to carry out a Systematic Literature Review to discover the state-of-the art in software sustainability measures.",quality model; sustainability indicators; sustainability measures; sustainability models; systematic literature review,A systematic literature review for software sustainability measures,x,,,,,,,,,,NO,
S1453,2,bkwd,conferencePaper,2013,"Hao, Shuai; Li, Ding; Halfond, William G. J.; Govindan, Ramesh",Proceedings of the 2013 International Conference on Software Engineering,,,"Optimizing the energy efficiency of mobile applications can greatly increase user satisfaction. However, developers lack viable techniques for estimating the energy consumption of their applications. This paper proposes a new approach that is both lightweight in terms of its developer requirements and provides fine-grained estimates of energy consumption at the code level. It achieves this using a novel combination of program analysis and per-instruction energy modeling. In evaluation, our approach is able to estimate energy consumption to within 10% of the ground truth for a set of mobile applications from the Google Play store. Additionally, it provides useful and meaningful feedback to developers that helps them to understand application energy consumption behavior.",,Estimating mobile application energy consumption using program analysis,x,,,,,,,,,,NO,
S1452,2,bkwd,conferencePaper,2011,"Pathak, Abhinav; Hu, Y. Charlie; Zhang, Ming",Proceedings of the 10th ACM Workshop on Hot Topics in Networks,10.1145/2070562.2070567,https://doi.org/10.1145/2070562.2070567,"This paper argues that a new class of bugs faced by millions of smartphones, energy bugs or ebugs, have become increasingly prominent that already they have led to significant user frustrations. We take a first look at this emerging important technical challenge faced by the smartphones, ebugs, broadly defined as an error in the system (application, OS, hardware, firmware, external conditions or combination) that causes an unexpected amount of high energy consumption by the system as a whole. We first present a taxonomy of the kinds of ebugs based on mining over 39K posts (1.2M before filtering) from 4 online mobile user forum and mobile OS bug repositories. The taxonomy shows the highly diverse nature of smartphone ebugs. We then propose a roadmap towards developing a systematic diagnosing framework for debugging ebugs on smartphones.",ebug; energy; energy bug,Bootstrapping energy debugging on smartphones: a first look at energy bugs in mobile devices,x,,,,,,,,,,NO,
S1451,2,bkwd,conferencePaper,2012,"Pathak, Abhinav; Hu, Y. Charlie; Zhang, Ming",Proceedings of the 7th ACM european conference on Computer Systems,10.1145/2168836.2168841,https://doi.org/10.1145/2168836.2168841,"Where is the energy spent inside my app? Despite the immense popularity of smartphones and the fact that energy is the most crucial aspect in smartphone programming, the answer to the above question remains elusive. This paper first presents eprof, the first fine-grained energy profiler for smartphone apps. Compared to profiling the runtime of applications running on conventional computers, profiling energy consumption of applications running on smartphones faces a unique challenge, asynchronous power behavior, where the effect on a component's power state due to a program entity lasts beyond the end of that program entity. We present the design, implementation and evaluation of eprof on two mobile OSes, Android and Windows Mobile. We then present an in-depth case study, the first of its kind, of six popular smartphones apps (including Angry-Birds, Facebook and Browser). Eprof sheds lights on internal energy dissipation of these apps and exposes surprising findings like 65%-75% of energy in free apps is spent in third-party advertisement modules. Eprof also reveals several ""wakelock bugs"", a family of ""energy bugs"" in smartphone apps, and effectively pinpoints their location in the source code. The case study highlights the fact that most of the energy in smartphone apps is spent in I/O, and I/O events are clustered, often due to a few routines. Thismotivates us to propose bundles, a new accounting presentation of app I/O energy, which helps the developer to quickly understand and optimize the energy drain of her app. Using the bundle presentation, we reduced the energy consumption of four apps by 20% to 65%.",energy; Eprof; mobile; smartphones,Where is the energy spent inside my app? fine grained energy accounting on smartphones with Eprof,x,,,,,,,,,,NO,
S1450,2,bkwd,conferencePaper,2013,"Chen, Xiang; Chen, Yiran; Ma, Zhan; Fernandes, Felix C. A.",Proceedings of the 14th Workshop on Mobile Computing Systems and Applications,10.1145/2444776.2444781,https://doi.org/10.1145/2444776.2444781,"Smartphones have emerged as a popular and frequently used platform for the consumption of multimedia. New display technologies, such as AMOLED, have been recently introduced to smartphones to fulfill the requirements of these multimedia applications. However, as an AMOLED screen's power consumption is determined by the display content, such applications are often limited by the battery life of the device they are running on, inspiring many researches to develop new power management schemes. In this work, we evaluate the power consumption of several applications on a series of Samsung smartphones and take a deep look into AMOLED's power consumption and its relative contributions for multimedia apps. We improve AMOLED power analysis by considering the dynamic factors in displaying, and analyze the individual factors affecting power consumption when streaming video, playing a video game, and recording video via a device's built-in camera. Our detailed measurements refine the power analysis of smartphones and reveal some interesting perspectives regarding the power consumption of AMOLED displays in multimedia applications.",AMOLED; OLED display; smartphone; video power,How is energy consumed in smartphone display applications?,x,,,x,,,,,,,NO,
S1449,2,bkwd,conferencePaper,2016,"Liu, Yepang; Xu, Chang; Cheung, Shing-Chi; Terragni, Valerio",Proceedings of the 2016 24th ACM SIGSOFT International Symposium on Foundations of Software Engineering,10.1145/2950290.2950297,https://doi.org/10.1145/2950290.2950297,"Wake locks are widely used in Android apps to protect critical computations from being disrupted by device sleeping. Inappropriate use of wake locks often seriously impacts user experience. However, little is known on how wake locks are used in real-world Android apps and the impact of their misuses. To bridge the gap, we conducted a large-scale empirical study on 44,736 commercial and 31 open-source Android apps. By automated program analysis and manual investigation, we observed (1) common program points where wake locks are acquired and released, (2) 13 types of critical computational tasks that are often protected by wake locks, and (3) eight patterns of wake lock misuses that commonly cause functional and non-functional issues, only three of which had been studied by existing work. Based on our findings, we designed a static analysis technique, Elite, to detect two most common patterns of wake lock misuses. Our experiments on real-world subjects showed that Elite is effective and can outperform two state-of-the-art techniques.",critical computation; lock necessity analysis; Wake lock,Understanding and detecting wake lock misuses for Android applications,x,,,,,,,,,,NO,
S1448,2,bkwd,journalArticle,2015,"Procaccianti, Giuseppe; Lago, Patricia; Bevini, Stefano",Sustainable Computing: Informatics and Systems,10.1016/j.suscom.2014.11.004,https://www.sciencedirect.com/science/article/pii/S2210537914000900,"Cloud-based software architectures introduce more complexity and require new competences for migration, maintenance, and evolution. Although cloud computing is often considered as an energy-efficient technology, the implications of cloud-based software on energy efficiency lack scientific evidence. At the same time, energy efficiency is becoming a crucial requirement for cloud service provisioning, as energy costs significantly contribute to the Total Cost of Ownership (TCO) of a data center. In this paper, we present the results of a systematic literature review that investigates cloud software architectures addressing energy efficiency as a primary concern. The aim is to provide an analysis of the state-of-the-art in the field of energy-efficient software architectures.",Cloud computing; Energy efficiency; Green software; Software architecture,A systematic literature review on energy efficiency in cloud software architectures,x,,,,,,,,,,NO,
S1447,2,bkwd,conferencePaper,1995,"Barili, A.; Ceresa, M.; Parisi, C.",1995 Proceedings of the IEEE International Symposium on Industrial Electronics,10.1109/ISIE.1995.497266,,"The paper proposes an energy saving motion control strategy suitable for autonomous mobile robots (AMRs) working in environments cluttered with unpredictable obstacles like civil buildings. The strategy has been tested on the PARIDE mobile robot developed at the Robotics Laboratory of the Department of Computer Science, University of Pavia (Italy).",Acceleration; Batteries; Energy consumption; Friction; Kinetic energy; Laboratories; Mobile robots; Motion control; Service robots; Testing,Energy-saving motion control for an autonomous mobile robot,x,,,,,,,,,,NO,
S1446,2,bkwd,conferencePaper,2016,"Bavota, Gabriele","2016 IEEE 23rd International Conference on Software Analysis, Evolution, and Reengineering (SANER)",10.1109/SANER.2016.47,,"The amount of unstructured data available to software engineering researchers in versioning systems, issue trackers, achieved communications, and many other repositories is continuously growing over time. The mining of such data represents an unprecedented opportunity for researchers to investigate new research questions and to build a new generation of recommender systems supporting development and maintenance activities. This paper describes works on the application of Mining Unstructured Data (MUD) in software engineering. The paper briefly reviews the types of unstructured data available to researchers providing pointers to basic mining techniques to exploit them. Then, an overview of the existing applications of MUD in software engineering is provided with a specific focus on textual data present in software repositories and code components. The paper also discusses perils the ""miner"" should avoid while mining unstructured data and lists possible future trends for the field.",Data mining; future trends; Matrix decomposition; mining unstructured data; Multiuser detection; Natural language processing; Pattern matching; Software; Software engineering,Mining Unstructured Data in Software Repositories: Current and Future Trends,x,,,,,,,,,,NO,
S1445,2,bkwd,conferencePaper,2015,"Curran, William; Thornton, Thomas; Arvey, Benjamin; Smart, William D.",2015 IEEE International Conference on Robotics and Automation (ICRA),10.1109/ICRA.2015.7140071,,"The ROS ecosystem is an interconnected web of packages, nodes and people with no efficient means to compare, assess or visualize them. We develop a set of tools consisting of various metrics, a data visualization web app, and an active monitoring system. With these tools, we measure the current state of the ecosystem as well as determine where the community should direct their efforts. We also encourage the community to provide input on potential applications, additional metrics, and further improvements to address the needs of the ROS ecosystem. We incentivize this input by gamifying community contributions to the infrastructure. Encouraging user-driven improvements to the ROS infrastructure through the use of a leaderboard and friendly competition will advance ROS development and community support far into the future.",Communities; Ecosystems; Measurement; Open source software; Peer-to-peer computing; Robots,Evaluating impact in the ROS ecosystem,,,,,,,,x,,,NO,
S1444,2,bkwd,journalArticle,2016,"Pang, Candy; Hindle, Abram; Adams, Bram; Hassan, Ahmed E.",IEEE Software,10.1109/MS.2015.83,,"Traditionally, programmers received a range of training on programming languages and methodologies, but they rarely receive training on software energy consumption. Yet, the popularity of mobile devices and cloud computing requires increased awareness of software energy consumption. On mobile devices, battery life often limits computation. Under the demands of cloud computing, datacenters struggle to reduce energy consumption through virtualization and datacenter-infrastructure-management systems. Efficient software energy consumption is increasingly becoming an important nonfunctional requirement for programmers. However, are programmers knowledgeable enough about software energy consumption? Do they base their implementation decision on popular beliefs? Researchers surveyed more than 100 programmers regarding their knowledge of software energy consumption. They found that the programmers had limited knowledge of energy efficiency, lacked knowledge of the best practices to reduce software energy consumption, and were often unsure about how software consumes energy. These results highlight the need for better training and education on energy consumption and efficiency.",Battery charge measurement; Energy consumption; energy efficiency; Energy measurement; Mobile handsets; Power demand; power usage; software energy consumption; Software engineering; Software measurement; software power consumption,What Do Programmers Know about Software Energy Consumption?,x,,,,,,,,,,NO,
S1443,2,bkwd,conferencePaper,2015,"Malik, Haroon; Zhao, Peng; Godfrey, Michael",Proceedings of the 12th Working Conference on Mining Software Repositories,,,"The popularity of smartphones --- small computers that run on battery power --- has exploded in the last decade. Unsurprisingly, power consumption is an overarching concern for mobile app developers, who are anxious to learn about power-related problems that are encountered by others. In this paper, we present an empirical study exploring the characteristics of energy-related questions posed in StackOverflow, issues faced by the developers, and the most significantly discussed APIs. We extracted a sample of 5009 StackOverflow questions, and manually analyzed 1000 posts of Android-related energy questions. Our study shows that developers are most concerned about energy-related issues that concern improper implementations, sensor, and radio utilization.",API; energy; power; stackoverflow,Going green: an exploratory analysis of energy-related questions,x,,,,,,,,,,NO,
S1442,2,bkwd,journalArticle,2013,"Chang, Qing; Xiao, Guoxian; Biller, Stephan; Li, Lin",IEEE Transactions on Automation Science and Engineering,10.1109/TASE.2012.2210874,,"Conventionally, improving production efficiency, flexibility and responsiveness has been the primary research focus of production management, while energy consumption has received relatively little attention. Energy consumption plays a more and more important role in the manufacturing environment. This is mainly driven by energy cost and environmental concerns. When the energy system becomes complicated and coupled with ongoing production, it is very difficult to hunt the “hidden treasure” which affects the overall benefit of a manufacturing system. This paper provides a systematic method to search for energy saving opportunities and strategies. We start from dynamic production transient analysis and provide quantitative analysis for identifying energy saving opportunity in a system. Furthermore, energy saving strategy is justified through cost analysis for tradeoffs between energy savings and throughput loss. A case study is conducted to demonstrate its potential on energy savings in a multistage manufacturing system.",Automotive engineering; Continuous improvement; Energy consumption; energy management; Energy management; energy saving opportunity; energy treasure hunt; Manufacturing; multistage manufacturing systems; Production systems; Throughput,Energy Saving Opportunity Analysis of Automotive Serial Production Systems (March 2012),x,,,,,,,,,,NO,
S1441,2,bkwd,conferencePaper,2016,"Bao, Lingfeng; Lo, David; Xia, Xin; Wang, Xinyu; Tian, Cong",Proceedings of the 13th International Conference on Mining Software Repositories,10.1145/2901739.2901748,https://doi.org/10.1145/2901739.2901748,"As Android platform becomes more and more popular, a large amount of Android applications have been developed. When developers design and implement Android applications, power consumption management is an important factor to consider since it affects the usability of the applications. Thus, it is important to help developers adopt proper strategies to manage power consumption. Interestingly, today, there is a large number of Android application repositories made publicly available in sites such as GitHub. These repositories can be mined to help crystalize common power management activities that developers do. These in turn can be used to help other developers to perform similar tasks to improve their own Android applications. In this paper, we present an empirical study of power management commits in Android applications. Our study extends that of Moura et al. who perform an empirical study on energy aware commits; however they do not focus on Android applications and only a few of the commits that they study come from Android applications. Android applications are often different from other applications (e.g., those running on a server) due to the issue of limited battery life and the use of specialized APIs. As subjects of our empirical study, we obtain a list of open source Android applications from F-Droid and crawl their commits from Github. We get 468 power management commits after we filter the commits using a set of keywords and by performing manual analysis. These 468 power management commits are from 154 different Android applications and belong to 15 different application categories. Furthermore, we use open card sort to categorize these power management commits and we obtain 6 groups which correspond to different power management activities. Our study also reveals that for different kinds of Android application (e.g., Games, Connectivity, Navigation, Internet, Phone & SMS, Time, etc.), the dominant power management activities differ. For example, the percentage of power management commits belonging to Power Adaptation activity is larger for Navigation applications than those belonging to other categories.",empirical study; mining software repository; power consumption; power management,How android app developers manage power consumption? an empirical study by mining power management commits,x,,,,,,,,,,NO,
S1440,2,bkwd,journalArticle,2019,"Cruz, Luis; Abreu, Rui",Empirical Software Engineering,10.1007/s10664-019-09682-0,https://doi.org/10.1007/s10664-019-09682-0,"Software engineers make use of design patterns for reasons that range from performance to code comprehensibility. Several design patterns capturing the body of knowledge of best practices have been proposed in the past, namely creational, structural and behavioral patterns. However, with the advent of mobile devices, it becomes a necessity a catalog of design patterns for energy efficiency. In this work, we inspect commits, issues and pull requests of 1027 Android and 756 iOS apps to identify common practices when improving energy efficiency. This analysis yielded a catalog, available online, with 22 design patterns related to improving the energy efficiency of mobile apps. We argue that this catalog might be of relevance to other domains such as Cyber-Physical Systems and Internet of Things. As a side contribution, an analysis of the differences between Android and iOS devices shows that the Android community is more energy-aware.",,Catalog of energy patterns for mobile applications,x,,,,,,,,,,NO,
S1439,2,bkwd,journalArticle,2021,"Verdecchia, Roberto; Kruchten, Philippe; Lago, Patricia; Malavolta, Ivano",Journal of Systems and Software,10.1016/j.jss.2021.110925,https://www.sciencedirect.com/science/article/pii/S0164121221000224,"Architectural technical debt in software-intensive systems is a metaphor used to describe the “big” design decisions (e.g., choices regarding structure, frameworks, technologies, languages, etc.) that, while being suitable or even optimal when made, significantly hinder progress in the future. While other types of debt, such as code-level technical debt, can be readily detected by static analyzers, and often be refactored with minimal or only incremental efforts, architectural debt is hard to be identified, of wide-ranging remediation cost, daunting, and often avoided. In this study, we aim at developing a better understanding of how software development organizations conceptualize architectural debt, and how they deal with it. In order to do so, in this investigation we apply a mixed empirical method, constituted by a grounded theory study followed by focus groups. With the grounded theory method we construct a theory on architectural technical debt by eliciting qualitative data from software architects and senior technical staff from a wide range of heterogeneous software development organizations. We applied the focus group method to evaluate the emerging theory and refine it according to the new data collected. The result of the study, i.e., a theory emerging from the gathered data, constitutes an encompassing conceptual model of architectural technical debt, identifying and relating concepts such as its symptoms, causes, consequences, management strategies, and communication problems. From the conducted focus groups, we assessed that the theory adheres to the four evaluation criteria of classic grounded theory, i.e., the theory fits its underlying data, is able to work, has relevance, and is modifiable as new data appears. By grounding the findings in empirical evidence, the theory provides researchers and practitioners with novel knowledge on the crucial factors of architectural technical debt experienced in industrial contexts.",Focus group; Grounded theory; Software architecture; Software engineering; Software evolution; Technical debt,Building and evaluating a theory of architectural technical debt in software-intensive systems,x,,,,,,,,,,NO,
S1438,2,bkwd,conferencePaper,2018,"Moghaddam, Fahimen Alizadeh; Lago, Patricia; Ban, Iulia Cristina",Proceedings of the 6th International Workshop on Green and Sustainable Software,10.1145/3194078.3194084,https://doi.org/10.1145/3194078.3194084,"The increasing energy demands of software systems have set an essential software quality requirement: energy efficiency. At the same time, the many contextual changes faced by software systems during execution can hamper their functionality and overall quality. To address both problems, self-adaptation approaches can empower software systems, at both design-time and runtime, to adapt to dynamic conditions. In this way, software systems can be more resilient to failure, hence more trustful to satisfy the demands of modern digital society. In this paper, we perform a systematic literature review to study the state-of-the-art on existing self-adaptation approaches for energy efficiency. We analyze the identified approaches from three different perspectives, namely publication trends, application domains, and types of software systems. Our findings can help solution providers to make guided decisions to enable self-adaptability in designing and engineering software systems.",energy efficiency; self-adaptive software; systematic literature review,Self-adaptation approaches for energy efficiency: a systematic literature review,x,,,,,,,,,,NO,
S1437,2,bkwd,conferencePaper,2018,"Kate, Sayali; Ore, John-Paul; Zhang, Xiangyu; Elbaum, Sebastian; Xu, Zhaogui",Proceedings of the 2018 26th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering,10.1145/3236024.3236035,https://doi.org/10.1145/3236024.3236035,"Program variables used in robotic and cyber-physical systems often have implicit physical units that cannot be determined from their variable types. Inferring an abstract physical unit type for variables and checking their physical unit type consistency is of particular importance for validating the correctness of such systems. For instance, a variable with the unit of ‘meter’ should not be assigned to another variable with the unit of ‘degree-per-second’. Existing solutions have various limitations such as requiring developers to annotate variables with physical units and only handling variables that are directly or transitively used in popular robotic libraries with known physical unit information. We observe that there are a lot of physical unit hints in these softwares such as variable names and specific forms of expressions. These hints have uncertainty as developers may not respect conventions. We propose to model them with probability distributions and conduct probabilistic inference. At the end, our technique produces a unit distribution for each variable. Unit inconsistencies can then be detected using the highly probable unit assignments. Experimental results on 30 programs show that our technique can infer units for 159.3% more variables compared to the state-of-the-art with more than 88.7% true positives, and inconsistencies detection on 90 programs shows that our technique reports 103.3% more inconsistencies with 85.3% true positives.",abstract type inference; dimensional analysis; physical units; probabilistic inference; robotic systems; static analysis; unit consistency,Phys: probabilistic physical unit assignment and inconsistency detection,x,,,,,,,,,,NO,
S1436,2,bkwd,conferencePaper,2019,"Cruz, Luis; Abreu, Rui; Grundy, John; Li, Li; Xia, Xin",2019 IEEE International Conference on Software Maintenance and Evolution (ICSME),10.1109/ICSME.2019.00013,,"Energy efficiency is a crucial quality requirement for mobile applications. However, improving energy efficiency is far from trivial as developers lack the knowledge and tools to aid in this activity. In this paper we study the impact of changes to improve energy efficiency on the maintainability of Android applications. Using a dataset containing 539 energy efficiency-oriented commits, we measure maintainability - as computed by the Software Improvement Group's web-based source code analysis service Better Code Hub (BCH) - before and after energy efficiency-related code changes. Results show that in general improving energy efficiency comes with a significant decrease in maintainability. This is particularly evident in code changes to accommodate the Power Save Mode and Wakelock Addition energy patterns. In addition, we perform manual analysis to assess how real examples of energy-oriented changes affect maintainability. Our results help mobile app developers to 1) avoid common maintainability issues when improving the energy efficiency of their apps; and 2) adopt development processes to build maintainable and energy-efficient code. We also support researchers by identifying challenges in mobile app development that still need to be addressed.",Androids; Batteries; Energy Efficiency; Humanoid robots; Mobile applications; Mobile Computing; Smart phones; Software; Software Maintenance; Tools,Do Energy-Oriented Changes Hinder Maintainability?,x,,,,,,,,,,NO,
S1435,2,bkwd,conferencePaper,2019,"Matalonga, Hugo; Cabral, Bruno; Castor, Fernando; Couto, Marco; Pereira, Rui; de Sousa, Simao Melo; Fernandes, Joao Paulo",2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR),10.1109/MSR.2019.00034,,"As mobile devices are supporting more and more of our daily activities, it is vital to widen their battery up-time as much as possible. In fact, according to the Wall Street Journal, 9/10 users suffer from low battery anxiety. The goal of our work is to understand how Android usage, apps, operating systems, hardware and user habits influence battery lifespan. Our strategy is to collect anonymous raw data from devices all over the world, through a mobile app, build and analyze a large-scale dataset containing real-world, day-to-day data, representative of user practices. So far, the dataset we collected includes 12 million+ (anonymous) data samples, across 900+ device brands and 5.000+ models. And, it keeps growing. The data we collect, which is publicly available and by different channels, is sufficiently heterogeneous for supporting studies with a wide range of focuses and research goals, thus opening the opportunity to inform and reshape user habits, and even influence the development of both hardware and software for mobile devices.",android; Batteries; data mining; Data models; Energy consumption; energy efficiency; green software; Hardware; Mobile applications; Smart phones,GreenHub Farmer: Real-World Data for Android Energy Mining,x,,,,,,,,,,NO,
S1434,2,bkwd,conferencePaper,2014,"Pinto, Gustavo; Castor, Fernando; Liu, Yu David",Proceedings of the 11th Working Conference on Mining Software Repositories,10.1145/2597073.2597110,https://doi.org/10.1145/2597073.2597110,"A growing number of software solutions have been proposed to address application-level energy consumption problems in the last few years. However, little is known about how much software developers are concerned about energy consumption, what aspects of energy consumption they consider important, and what solutions they have in mind for improving energy efficiency. In this paper we present the first empirical study on understanding the views of application programmers on software energy consumption problems. Using StackOverflow as our primary data source, we analyze a carefully curated sample of more than 300 questions and 550 answers from more than 800 users. With this data, we observed a number of interesting findings. Our study shows that practitioners are aware of the energy consumption problems: the questions they ask are not only diverse -- we found 5 main themes of questions -- but also often more interesting and challenging when compared to the control question set. Even though energy consumption-related questions are popular when considering a number of different popularity measures, the same cannot be said about the quality of their answers. In addition, we observed that some of these answers are often flawed or vague. We contrast the advice provided by these answers with the state-of-the-art research on energy consumption. Our summary of software energy consumption problems may help researchers focus on what matters the most to software developers and end users.",Practitioners; Q&A; Software Energy Consumption,Mining questions about software energy consumption,x,,,,,,,,,,NO,
S1433,2,bkwd,conferencePaper,2020,"Li, Xueliang; Yang, Yuming; Liu, Yepang; Gallagher, John P.; Wu, Kaishun",Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis,10.1145/3395363.3397350,https://doi.org/10.1145/3395363.3397350,"Energy efficiency is an important criterion to judge the quality of mobile apps, but one third of our randomly sampled apps suffer from energy issues that can quickly drain battery power. To understand these issues, we conducted an empirical study on 27 well-maintained apps such as Chrome and Firefox, whose issue tracking systems are publicly accessible. Our study revealed that the main root causes of energy issues include unnecessary workload and excessively frequent operations. Surprisingly, these issues are beyond the application of present technology on energy issue detection. We also found that 25.0% of energy issues can only manifest themselves under specific contexts such as poor network performance, but such contexts are again neglected by present technology. In this paper, we propose a novel testing framework for detecting energy issues in real-world mobile apps. Our framework examines apps with well-designed input sequences and runtime contexts. To identify the root causes mentioned above, we employed a machine learning algorithm to cluster the workloads and further evaluate their necessity. For the issues concealed by the specific contexts, we carefully set up several execution contexts to catch them. More importantly, we designed leading edge technology, e.g. pre-designing input sequences with potential energy overuse and tuning tests on-the-fly, to achieve high efficacy in detecting energy issues. A large-scale evaluation shows that 91.6% issues detected in our experiments were previously unknown to developers. On average, these issues double the energy costs of the apps. Our testing technique achieves a low number of false positives.",Android; Energy Bugs; Energy Issues; Mobile Applications,Detecting and diagnosing energy issues for mobile applications,x,,,,,,,,,,NO,
S1432,2,bkwd,conferencePaper,2016,"Chowdhury, Shaiful Alam; Hindle, Abram",Proceedings of the 13th International Conference on Mining Software Repositories,10.1145/2901739.2903494,https://doi.org/10.1145/2901739.2903494,"The improvement in battery technology for battery-driven devices is insignificant compared to their computing ability. In spite of the overwhelming advances in processing ability, adoption of sophisticated applications is hindered by the fear of shorter battery life. This is one of the several reasons software developers are becoming conscious of writing energy efficient code. Research has been conducted to model software energy consumption, to reduce energy drains, and to understand developers expertise on energy efficiency. In this paper, however, we investigate the nature of energy-aware software projects. We observed that projects concerned with energy issues are larger and more popular than the projects that do not address energy consumption. Energy related code changes are larger than others (e.g., bug fixes). In addition, our initial results suggest that energy efficiency is mostly addressed on certain platforms and applications.",,Characterizing energy-aware software projects: are they different?,x,,,,,,,,,,NO,
S1431,2,bkwd,conferencePaper,2015,"Moura, Irineu; Pinto, Gustavo; Ebert, Felipe; Castor, Fernando",Proceedings of the 12th Working Conference on Mining Software Repositories,,,"Over the last years, energy consumption has become a first-class citizen in software development practice. While energy-efficient solutions on lower-level layers of the software stack are well-established, there is convincing evidence that even better results can be achieved by encouraging practitioners to participate in the process. For instance, previous work has shown that using a newer version of a concurrent data structure can yield a 2.19x energy savings when compared to the old associative implementation [75]. Nonetheless, little is known about how much software engineers are employing energy-efficient solutions in their applications and what solutions they employ for improving energy-efficiency. In this paper we present a qualitative study of ""energy-aware commits"". Using Github as our primary data source, we perform a thorough analysis on an initial sample of 2,189 commits and carefully curate a set of 371 energy-aware commits spread over 317 real-world non-trivial applications. Our study reveals that software developers heavily rely on low-level energy management approaches, such as frequency scaling and multiple levels of idleness. Also, our findings suggest that ill-chosen energy saving techniques can impact the correctness of an application. Yet, we found what we call ""energy-aware interfaces"", which are means for clients (e.g., developers or end-users) to save energy in their applications just by using a function, abstracting away the low-level implementation details.",,Mining energy-aware commits,x,,,,,,,,,,NO,
S1430,2,bkwd,conferencePaper,2020,"Fischer-Nielsen, Anders; Fu, Zhoulai; Su, Ting; Wąsowski, Andrzej",Proceedings of the ACM/IEEE 42nd International Conference on Software Engineering: Software Engineering in Practice,10.1145/3377813.3381364,https://doi.org/10.1145/3377813.3381364,"A dependency bug is a software fault that manifests itself when accessing an unavailable asset. Dependency bugs are pervasive and we all hate them. This paper presents a case study of dependency bugs in the Robot Operating System (ROS), applying mixed methods: a qualitative investigation of 78 dependency bug reports, a quantitative analysis of 1354 ROS bug reports against 19553 reports in the top 30 GitHub projects, and a design of three dependency linters evaluated on 406 ROS packages. The paper presents a definition and a taxonomy of dependency bugs extracted from data. It describes multiple facets of these bugs and estimates that as many as 15% (!) of all reported bugs are dependency bugs. We show that lightweight tools can find dependency bugs efficiently, although it is challenging to decide which tools to build and difficult to build general tools. We present the research problem to the community, and posit that it should be feasible to eradicate it from software development practice.",,The forgotten case of the dependency bugs: on the example of the robot operating system,,,,,,,,,,,,
S1429,2,bkwd,journalArticle,2014,"Meike, Davis; Pellicciari, Marcello; Berselli, Giovanni",IEEE Transactions on Automation Science and Engineering,10.1109/TASE.2013.2285813,,"This paper quantitatively reports about potential energy savings on robotic assembly lines for the automotive industry. At first, a detailed system model is described, which improves previously published results by explicitly considering both manipulator and electrical drive dynamics. The model closely captures experimental data in terms of actuation torques and servodrive voltages, which are directly used to derive the plant input power. Two practical methods are then evaluated for reducing the overall energy consumption. The methods rely on: 1) implementation of energy-optimal trajectories obtained by means of time scaling, concerning the robots' motion from the last process point to the home positions and 2) reduction of energy consumption by releasing the actuator brakes earlier when the robots are kept stationary. Simulation results, based on the production timing characteristics measured at a real plant, clearly shows that the system energy consumption can be effectively reduced without negative effects on the production rate. Note to Practitioners - The global industry trend towards sustainability demands energy optimization as a primary goal. Currently, industrial multirobot systems are not efficiently programmed as long as effective simulation tools are mostly lacking. In this context, a detailed model of the production line is proposed, which can be readily integrated into commercial tools for robot programming. Furthermore, the impact of practical optimization methods which are readily applicable to existing equipment is quantitatively highlighted. The key aspect of the proposed approach is that both the production rate of each cell and the robot hardware limitations are considered as strict constraints, so that no significant changes to the plant are required.",Computational modeling; Energy efficient robotics; Inverters; Production; robotic manufacturing; Service robots; Torque; Trajectory; trajectory planning; virtual prototyping,Energy Efficient Use of Multirobot Production Lines in the Automotive Industry: Detailed System Modeling and Optimization,x,,,,,,,,,,NO,
S1428,2,bkwd,conferencePaper,2017,"Ciccozzi, Federico; Di Ruscio, Davide; Malavolta, Ivano; Pelliccione, Patrizio; Tumova, Jana",2017 IEEE/ACM 39th International Conference on Software Engineering Companion (ICSE-C),10.1109/ICSE-C.2017.167,,"The production of software for robotic systems is often case-specific, without fully following established engineering approaches. Systematic approaches, methods, models, and tools are pivotal for the creation of robotic systems for real-world applications and turn-key solutions. Well-defined (software) engineering approaches are considered the ""make or break"" factor in the development of complex robotic systems. The shift towards well-defined engineering approaches will stimulate component supply-chains and significantly reshape the robotics marketplace. The goal of this technical briefing is to provide an overview on the state of the art and practice concerning solutions and open challenges in the engineering of software required to develop and manage robotic systems. Model-Driven Engineering (MDE) is discussed as a promising technology to raise the level of abstraction, promote reuse, facilitate integration, boost automation and promote early analysis in such a complex domain.",Automation; Model driven engineering; Model-Driven Engineering; Robot sensing systems; Robotics; Software engineering; Software Engineering; Systematics,Engineering the software of robotic systems,x,,,,,,,,,,NO,
S1427,2,bkwd,conferencePaper,2017,"Santos, André; Cunha, Alcino; Macedo, Nuno; Arrais, Rafael; dos Santos, Filipe Neves",2017 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS.2017.8206237,,"The Robot Operating System (ROS) is nowadays one of the most popular frameworks for developing robotic applications. To ensure the (much needed) dependability and safety of such applications we forecast an increasing demand for ROS-specific coding standards, static analyzers, and tools alike. Unfortunately, the development of such standards and tools can be hampered by ROS modularity and configurability, namely the substantial number of primitives (and respective variants) that must, in principle, be considered. To quantify the severity of this problem, we have mined a large number of existing ROS packages to understand how its primitives are used in practice, and to determine which combinations of primitives are most popular. This paper presents and discusses the results of this study, and hopefully provides some guidance for future standardization efforts and tool developers.",C++ languages; Robots; Runtime; Software; Standards; Tools,Mining the usage patterns of ROS primitives,,,,,,,,,x,,NO,
S1426,2,bkwd,journalArticle,2019,"Estefo, Pablo; Simmonds, Jocelyn; Robbes, Romain; Fabry, Johan",Journal of Systems and Software,10.1016/j.jss.2019.02.024,https://www.sciencedirect.com/science/article/pii/S0164121219300342,"ROS, the Robot Operating System, offers a core set of software for operating robots that can be extended by creating or using existing packages, making it possible to write robotic software that can be reused on different hardware platforms. With thousands of packages available per stable distribution, encapsulating algorithms, sensor drivers, etc., it is the de facto middleware for robotics. Like any software ecosystem, ROS must evolve in order to keep meeting the requirements of its users. In practice, packages may end up being abandoned between releases: no one may be available to update a package, or newer packages offer similar functionality. As such, we wanted to identify and understand the evolution challenges faced by the ROS ecosystem. In this article, we report our findings after interviewing 19 ROS developers in depth, followed by a focus group (4 participants) and an online survey of 119 ROS community members. We specifically focused on the issues surrounding package reuse and how to contribute to existing packages. To conclude, we discuss the implications of our findings, and propose five recommendations for overcoming the identified issues, with the goal of improving the health of the ROS ecosystem.",Package management; Robot Operating System; Software ecosystems,The Robot Operating System: Package reuse and community dynamics,,,,,,,,,,,,
S1425,2,bkwd,conferencePaper,2020,"Malavolta, Ivano; Lewis, Grace; Schmerl, Bradley; Lago, Patricia; Garlan, David",Proceedings of the ACM/IEEE 42nd International Conference on Software Engineering: Software Engineering in Practice,10.1145/3377813.3381358,https://doi.org/10.1145/3377813.3381358,"The Robot Operating System (ROS) is the de-facto standard for robotic software. If on one hand ROS is helping roboticists, e.g., by providing a standardized communication platform, on the other hand ROS-based systems are getting larger and more complex and could benefit from good software architecture practices. This paper presents an observational study aimed at (i) unveiling the state-of-the-practice for architecting ROS-based systems and (ii) providing guidance to roboticists about how to properly architect ROS-based systems. To achieve these goals, we (i) build a dataset of 335 GitHub repositories containing real open-source ROS-based systems, (ii) mine the repositories for extracting the state of the practice about how roboticists are architecting them, and (iii) synthesize a catalog of 49 evidence-based guidelines for architecting ROS-based systems. The guidelines have been validated by 77 roboticists working on real-world open-source ROS-based systems.",,How do you architect your robots? state of the practice and guidelines for ROS-based systems,,,,,,,,x,,,NO,
S1424,2,bkwd,conferencePaper,2020,"Swanborn, Stan; Malavolta, Ivano",Proceedings of the 35th IEEE/ACM International Conference on Automated Software Engineering Workshops,10.1145/3417113.3422997,https://doi.org/10.1145/3417113.3422997,"Nowadays, robots are widely used in many areas of our lifes, such as autonomous storage, self-driving vehicles, drones, industrial automation, etc. Energy is a critical factor for robotic systems, especially for mobile robots where energy is a finite resource (e.g., surveillance autonomous rovers). Since software is becoming the central focus of modern robotic systems, it is important to understand how it influences the energy consumption of the entire system. However, there is no systematic study of the state of the art in energy efficiency of robotics software that could guide research or practitioners in finding solutions and tools to develop robotic systems with energy efficiency in mind. The goal of this paper is to present a review of existing research on energy efficiency in robotics software. Specifically, we investigate on (i) the used metrics for energy efficiency, (ii) the application domains within the robotics area covered by research on energy efficiency, (iii) the identified major energy consumers within a robotic system, (iv) how existing approaches are evaluated, (v) the used energy models, (vi) the techniques supporting the development of energy-efficient robotics software, and (vii) which quality attributes tend to be traded off when dealing with energy efficiency in robotics. We also provide a replication package to assess, extend, and/or replicate the study. The results of this work can guide researchers and practitioners in robotics and software engineering in better reasoning and contributing to energy-efficient robotics software.",,Energy efficiency in robotics software: a systematic literature review,x,,,,,,,,,,NO,
S1423,2,bkwd,conferencePaper,2021,"Malavolta, Ivano; Chinnappan, Katerina; Swanborn, Stan; Lewis, Grace A.; Lago, Patricia",2021 IEEE/ACM 18th International Conference on Mining Software Repositories (MSR),10.1109/MSR52588.2021.00042,,"In today’s world, reducing energy consumption should be the goal for any organization and any system, including robotics software systems. However, state of the practice in robotics software development focuses primarily on achieving functionality and performance, with minimal recognition of energy-efficiency as a driving software quality. The goal of this paper is to identify, synthesize, and empirically evaluate architectural tactics for energy-efficiency applied by practitioners in real robotics projects. Four tactics were identified by mining software repository techniques applied to the ROS ecosystem. The tactics were evaluated via experimentation on a real, commodity robotics system. Results show that the application of green architectural tactics tends to largely improve the energy-efficiency of the robot (7.9% energy savings when all tactics are applied) and that the movement strategy and the physical environment where the robot operates strongly influence how energy is consumed by the robot.",Ecosystems; Energy efficiency; Energy efficient software; Green products; Mission critical systems; Organizations; Robotics software; Software Architecture; Software quality; Software systems,Mining the ROS ecosystem for Green Architectural Tactics in Robotics and an Empirical Evaluation,,,,,,,,,x,,NO,
S1422,2,bkwd,journalArticle,2009,"Woodcock, Jim; Larsen, Peter Gorm; Bicarregui, Juan; Fitzgerald, John",ACM Computing Surveys,10.1145/1592434.1592436,https://doi.org/10.1145/1592434.1592436,"Formal methods use mathematical models for analysis and verification at any part of the program life-cycle. We describe the state of the art in the industrial use of formal methods, concentrating on their increasing use at the earlier stages of specification and design. We do this by reporting on a new survey of industrial use, comparing the situation in 2009 with the most significant surveys carried out over the last 20 years. We describe some of the highlights of our survey by presenting a series of industrial projects, and we draw some observations from these surveys and records of experience. Based on this, we discuss the issues surrounding the industrial adoption of formal methods. Finally, we look to the future and describe the development of a Verified Software Repository, part of the worldwide Verified Software Initiative. We introduce the initial projects being used to populate the repository, and describe the challenges they address.",Experimental software engineering; formal methods surveys; grand challenges; verified software initiative; verified software repository,Formal methods: Practice and experience,x,,,,,,,,,,NO,
S1421,2,bkwd,journalArticle,2018,"Faragardi, Hamid Reza; Dehnavi, Saeid; Nolte, Thomas; Kargahi, Mehdi; Fahringer, Thomas",Software: Practice and Experience,10.1002/spe.2592,https://onlinelibrary.wiley.com/doi/abs/10.1002/spe.2592,"Based on a pay-as-you-go model, cloud computing provides the possibility of hosting pervasive applications from both academic and business domains. However, data centers hosting cloud applications consume huge amounts of electrical energy, contributing to high operational costs and large carbon footprints to the environment. Energy-aware resource provisioning is an effective solution to diminish the energy consumption of cloud data centers. Recently, a growing trend has emerged, where cloud technology is used to run periodic real-time applications such as multimedia, telecommunication, video gaming, and industrial applications. In order for a real-time application to be able to use cloud services, cloud providers have to be able to provide timing guarantees. In this paper, we introduce an energy-aware resource provisioning mechanism for cloud data centers, which are capable of serving real-time periodic tasks following the Software as a Service model. The proposed method is compared against an energy-aware version of the RT-OpenStack. RT-OpenStack is a recently proposed approach to provide a time-predictable version of OpenStack. The experimental results manifest that our proposed resource provisioning method outperforms energy-aware version of the RT-OpenStack by 16.01%, 25.45%, and 25.45% in terms of energy consumption, number of used servers, and average utilization of used servers, respectively. Moreover, from the scalability perspective, the preference of the proposed method for large-scale data centers is more considerable.",ant colony optimization; energy-aware allocation; real-time Cloud; simulated annealing; virtualization; VM placement,An energy-aware resource provisioning scheme for real-time applications in a cloud data center,x,,,,,,,,,,NO,
S1420,2,bkwd,journalArticle,2019,"Dehnavi, Saeid; Faragardi, Hamid Reza; Kargahi, Mehdi; Fahringer, Thomas",Microprocessors and Microsystems,10.1016/j.micpro.2019.05.011,https://www.sciencedirect.com/science/article/pii/S0141933118304629,"Timeliness and reliability are two major requirements of industrial applications. Hence, these two requirements should be carefully taken into account in design of a smart factory. Using a hybrid Cloud (combining a public Cloud with a private Cloud) is a well-known method to enable Cloud computing to provide reliability and timeliness. However, for strict time-sensitive applications using a hybrid Cloud is not enough to guarantee meeting their hard-deadlines. Supplying an intermediate computing layer –called Fog– between the factory and the Cloud is a promising solution to deal with reliability and latency requirements of strict time-sensitive applications. Integration of a Cloud data center, a private local Cloud, Fog nodes, and edge nodes constitute a very complex multilayer computing model in a smart factory. The goal of this paper is to provide a resource provisioning scheme for partitioning of a given workload among these multiple computing layers subject to reliability and real-time requirements. Partitioning of the workload can provide us prominent design decisions specifying how much computing resources are required to develop a local private Cloud in cooperating with Fog nodes like networking devices, how large should the minimum communication bandwidth be between the Fog and the public Cloud data center, and how many replicas for each application are required to satisfy the reliability requirement of the considered application. To evaluate the proposed method, we have conducted a set of experiments ranging from small scale to large scale scenarios. The results indicate that in 86 percent of the small scale experiments, the proposed algorithm exactly found the optimal solution achieved by a Branch and Bound (BB) based exhaustive search algorithm, while there is an improvement of around 85 percent on the execution time of our proposed method compared to the exhaustive search method.",Cloud computing; Fog computing; Real-time applications; Reliability; Resource allocation; Smart factory,A reliability-aware resource provisioning scheme for real-time industrial applications in a Fog-integrated smart factory,x,,,x,,,,,,,NO,
S1419,2,bkwd,conferencePaper,2018,"Faragardi, Hamid Reza; Dehnavi, Saeid; Kargahi, Mehdi; Papadopoulos, Alessandro V.; Nolte, Thomas",2018 Real-Time and Embedded Systems and Technologies (RTEST),10.1109/RTEST.2018.8397079,,"This paper highlights cloud computing as one of the principal building blocks of a smart factory, providing a huge data storage space and a highly scalable computational capacity. The cloud computing system used in a smart factory should be time-predictable to be able to satisfy hard real-time requirements of various applications existing in manufacturing systems. Interleaving an intermediate computing layer-called fog-between the factory and the cloud data center is a promising solution to deal with latency requirements of hard real-time applications. In this paper, a time-predictable cloud framework is proposed which is able to satisfy end-to-end latency requirements in a smart factory. To propose such an industrial cloud framework, we not only use existing real-time technologies such as Industrial Ethernet and the Real-time XEN hypervisor, but we also discuss unaddressed challenges. Among the unaddressed challenges, the partitioning of a given workload between the fog and the cloud is targeted. Addressing the partitioning problem not only provides a resource provisioning mechanism, but it also gives us a prominent design decision specifying how much computing resource is required to develop the fog platform, and how large should the minimum communication bandwidth be between the fog and the cloud data center.",cloud computing; Cloud computing; Data centers; edge computing; Edge computing; fog computing; real-time applications; Real-time systems; resource allocation; Servers; Smart factory; Smart manufacturing; Task analysis,A time-predictable fog-integrated cloud framework: One step forward in the deployment of a smart factory,x,,,x,,,,,,,NO,
S1418,2,bkwd,journalArticle,2016,"Jafari, Ali; Khamespanah, Ehsan; Kristinsson, Haukur; Sirjani, Marjan; Magnusson, Brynjar","Computer Languages, Systems & Structures",10.1016/j.cl.2016.01.004,https://www.sciencedirect.com/science/article/pii/S1477842416000051,"The actor-based language, Timed Rebeca, was introduced to model distributed and asynchronous systems with timing constraints and message passing communication. A toolset was developed for automated translation of Timed Rebeca models to Erlang. The translated code can be executed using a timed extension of McErlang for model checking and simulation. In this work, we added a new toolset that provides statistical model checking of Timed Rebeca models. Using statistical model checking, we are now able to verify larger models against safety properties compared to McErlang model checking. We examine the typical case studies of elevators and ticket service to show the efficiency of statistical model checking and applicability of our toolset.",McErlang; Performance analysis; Real-time systems; Statistical model checking; Timed Rebeca,Statistical model checking of Timed Rebeca models,x,,,x,,,,,,,NO,
S1417,2,bkwd,journalArticle,1994,"Alur, Rajeev; Dill, David L.",Theoretical Computer Science,10.1016/0304-3975(94)90010-8,https://www.sciencedirect.com/science/article/pii/0304397594900108,"We propose timed (finite) automata to model the behavior of real-time systems over time. Our definition provides a simple, and yet powerful, way to annotate state-transition graphs with timing constraints using finitely many real-valued clocks. A timed automaton accepts timed words–infinite sequences in which a real-valued time of occurrence is associated with each symbol. We study timed automata from the perspective of formal language theory: we consider closure properties, decision problems, and subclasses. We consider both nondeterministic and deterministic transition structures, and both Büchi and Muller acceptance conditions. We show that nondeterministic timed automata are closed under union and intersection, but not under complementation, whereas deterministic timed Muller automata are closed under all Boolean operations. The main construction of the paper is an (PSPACE) algorithm for checking the emptiness of the language of a (nondeterministic) timed automaton. We also prove that the universality problem and the language inclusion problem are solvable only for the deterministic automata: both problems are undecidable (Π11-hard) in the nondeterministic case and PSPACE-complete in the deterministic case. Finally, we discuss the application of this theory to automatic verification of real-time requirements of finite-state systems.",,A theory of timed automata,x,,,x,,,,,,,NO,
S1416,2,bkwd,conferencePaper,2002,"Kwiatkowska, Marta; Norman, Gethin; Parker, David",Computer Performance Evaluation: Modelling Techniques and Tools,10.1007/3-540-46029-2_13,,"In this paper we describe PRISM, a tool being developed at the University of Birmingham for the analysis of probabilistic systems. PRISM supports three probabilistic models: discrete-time Markov chains, Markov decision processes and continuous-time Markov chains. Analysis is performed through model checking such systems against specifications written in the probabilistic temporal logics PCTL and CSL. The tool features three model checking engines: one symbolic, using BDDs (binary decision diagrams) and MTBDDs (multi-terminal BDDs); one based on sparse matrices; and one which combines both symbolic and sparse matrix methods. PRISM has been successfully used to analyse probabilistic termination, performance, and quality of service properties for a range of systems, including randomized distributed algorithms, manufacturing systems and workstation clusters.",Binary Decision Diagram; Markov Decision Process; Model Check; Model Check Tool; Symbolic Model Checker,PRISM: Probabilistic Symbolic Model Checker,x,,,x,,,,,,,NO,
S1415,2,bkwd,conferencePaper,1991,"Yi, Wang","Automata, Languages and Programming",10.1007/3-540-54233-7_136,,"This paper shows how to put time into Milner's CCS to model real time systems. In particular, we will develop an expansion theorem for real time concurrency, which is an extension of the expansion theorem of CCS. The essential step made in this work is that a more general form of action prefix, μ@t.P is introduced, where t is a time variable. Intuitively, μ@t.P is an agent which may perform μ and become P[d/t] in doing so, where t is replaced by d, the time delay before μ is actually performed. The original form μ.P of action prefix of CCS is just a simple case of μ@t.P when t does not occur free in P — P does not depend on the time at which μ is performed.",Atomic Action; Controllable Action; Label Transition System; Real Time System; Weak Equivalence,CCS + time = an interleaving model for real time systems,x,,,,,,,,,,NO,
S1414,2,bkwd,conferencePaper,2004,"Amnell, Tobias; Fersman, Elena; Mokrushin, Leonid; Pettersson, Paul; Yi, Wang",Formal Modeling and Analysis of Timed Systems,10.1007/978-3-540-40903-8_6,,"Times is a tool suite designed mainly for symbolic schedulability analysis and synthesis of executable code with predictable behaviours for real-time systems. Given a system design model consisting of (1) a set of application tasks whose executions may be required to meet mixed timing, precedence, and resource constraints, (2) a network of timed automata describing the task arrival patterns and (3) a preemptive or non-preemptive scheduling policy, Times will generate a scheduler, and calculate the worst case response times for the tasks. The design model may be further validated using a model checker e.g. UPPAAL and then compiled to executable C-code using the Times compiler. In this paper, we present the design and main features of Times including a summary of theoretical results behind the tool. Times can be downloaded at www.timestool.com.",Executable Code; Precedence Constraint; Schedulability Analysis; Schedule Policy; Sporadic Task,TIMES: A Tool for Schedulability Analysis and Code Generation of Real-Time Systems,x,,,,,,,,,,NO,
S1413,2,bkwd,conferencePaper,1999,"Cimatti, A.; Clarke, E.; Giunchiglia, F.; Roveri, M.",Computer Aided Verification,10.1007/3-540-48683-6_44,,,Input Language; Model Check; Parse Tree; Reachability Analysis; Symbolic Model,NuSMV: A New Symbolic Model Verifier,x,,,,,,,,,,NO,
S1412,2,bkwd,conferencePaper,2007,"France, Robert; Rumpe, Bernhard",Future of Software Engineering (FOSE '07),10.1109/FOSE.2007.14,,"The term model-driven engineering (MDE) is typically used to describe software development approaches in which abstract models of software systems are created and systematically transformed to concrete implementations. In this paper we give an overview of current research in MDE and discuss some of the major challenges that must be tackled in order to realize the MDE vision of software development. We argue that full realizations of the MDE vision may not be possible in the near to medium-term primarily because of the wicked problems involved. On the other hand, attempting to realize the vision will provide insights that can be used to significantly reduce the gap between evolving software complexity and the technologies used to manage complexity.",Computer industry; Computer science; Model driven engineering; Programming; Reliability engineering; Software systems; Software testing; Streaming media; Systems engineering and theory; Unified modeling language,Model-driven Development of Complex Software: A Research Roadmap,x,,,,,,,,,,NO,
S1411,2,bkwd,conferencePaper,2007,"Kakoee, Mohammad Reza; Shojaei, Hamid; Ghasemzadeh, Hassan; Sirjani, Marjan; Navabi, Zainalabedin",2007 IEEE International Symposium on Circuits and Systems,10.1109/ISCAS.2007.378779,,"Transaction level modeling allows exploring several SoC design architectures leading to better performance and easier verification of the final product. In this paper, we present an approach for design and verification of transaction level models. Verification is integrated as part of the design-flow. In the proposed method, we first model the design in UML. Then, we translate it into the reactive objects language, Rebeca (Marjan Sirjani et al., 2004), which is an actor-based language with formal foundation. A model in Rebeca is a set of concurrently executed reactive objects (called rebecs) interacted by asynchronous message passing. After mapping UML to Rebeca, Rebeca code will be translated into Promela which is a language for formal verification. Checking the correctness of the design is performed on-the-fly with the LTL properties using the SPIN model checker. Finally, we translate the verified design to SystemC and map the properties to a set of assertions that can be re-used to validate the design at lower levels through simulation.",Computer architecture; Design methodology; Formal verification; Hardware; Message passing; Object oriented modeling; Productivity; Software engineering; Specification languages; Unified modeling language,A New Approach for Design and Verification of Transaction Level Models,x,,,,,,,,,,NO,
S1410,2,bkwd,conferencePaper,2008,"Ölveczky, Peter Csaba; Meseguer, José",Tools and Algorithms for the Construction and Analysis of Systems,10.1007/978-3-540-78800-3_23,,"Real-Time Maude is a rewriting-logic-based tool supporting the formal specification and analysis of real-time systems. Our tool emphasizes expressiveness and ease of specification over algorithmic decidability of key properties, and provides a spectrum of analysis methods, including symbolic simulation, and unbounded and time-bounded reachability analysis and LTL model checking. Real-Time Maude has proved well suited to analyze both correctness and performance of large and complex real-time systems, including state-of-the-art schedulers, network protocols, and wireless sensor network algorithms.",Linear Temporal Logic; Model Check; Multicast Protocol; Sensor Node; Wireless Sensor Network,The Real-Time Maude Tool,x,,,,,,,,,,NO,
S1409,2,bkwd,conferencePaper,2008,"Behjati, Razieh; Sabouri, Hamideh; Razavi, Niloofar; Sirjani, Marjan",2008 8th International Conference on Application of Concurrency to System Design,10.1109/ACSD.2008.4574596,,"SystemC is a system level modeling language with the goal of enabling verification at higher levels of abstraction. In this paper, we propose a mapping from SystemC designs to Rebeca models supported by an automatic tool, Sytra. Rebeca verification tool set is then available for verifying LTL and CTL properties. The mapping is aimed to preserve the concurrent and event-driven nature of SystemC. This work is part of a project (Sysfier) to formally verify SystemC designs. The applicability of our approach is shown by a set of small and medium sized case studies, and the scalability of the approach is shown by the verification of a single-cycle MIPS design.",Actor Model; Computer science; Engines; Formal verification; Kernel; Logic design; Mathematical model; Mathematics; Model Checking; Object oriented modeling; Physics; Rebeca; Scalability; System Level Formal Verification; SystemC Verification,An effective approach for model checking SystemC designs,x,,,x,,,,,,,NO,
S1408,2,bkwd,journalArticle,2011,"Aceto, Luca; Cimini, Matteo; Ingolfsdottir, Anna; Reynisson, Arni Hermann; Sigurdarson, Steinar Hugi; Sirjani, Marjan",Electronic Proceedings in Theoretical Computer Science,10.4204/EPTCS.58.1,http://arxiv.org/abs/1108.0228,"In this paper we propose an extension of the Rebeca language that can be used to model distributed and asynchronous systems with timing constraints. We provide the formal semantics of the language using Structural Operational Semantics, and show its expressiveness by means of examples. We developed a tool for automated translation from timed Rebeca to the Erlang language, which provides a first implementation of timed Rebeca. We can use the tool to set the parameters of timed Rebeca models, which represent the environment and component variables, and use McErlang to run multiple simulations for different settings. Timed Rebeca restricts the modeller to a pure asynchronous actor-based paradigm, where the structure of the model represents the service oriented architecture, while the computational model matches the network infrastructure. Simulation is shown to be an effective analysis support, specially where model checking faces almost immediate state explosion in an asynchronous setting.",Computer Science - Software Engineering,Modelling and Simulation of Asynchronous Real-Time Systems using Timed Rebeca,x,,,x,,,,,,,NO,
S1407,2,bkwd,conferencePaper,2008,"Lee, Edward A.",2008 11th IEEE International Symposium on Object and Component-Oriented Real-Time Distributed Computing (ISORC),10.1109/ISORC.2008.25,,"Cyber-Physical Systems (CPS) are integrations of computation and physical processes. Embedded computers and networks monitor and control the physical processes, usually with feedback loops where physical processes affect computations and vice versa. The economic and societal potential of such systems is vastly greater than what has been realized, and major investments are being made worldwide to develop the technology. There are considerable challenges, particularly because the physical components of such systems introduce safety and reliability requirements qualitatively different from those in general- purpose computing. Moreover, physical components are qualitatively different from object-oriented software components. Standard abstractions based on method calls and threads do not work. This paper examines the challenges in designing such systems, and in particular raises the question of whether today's computing and networking technologies provide an adequate foundation for CPS. It concludes that it will not be sufficient to improve design processes, raise the level of abstraction, or verify (formally or otherwise) designs that are built on today's abstractions. To realize the full potential of CPS, we will have to rebuild computing and networking abstractions. These abstractions will have to embrace physical dynamics and computation in a unified way.",Computer networks; Computerized monitoring; Cyber-physical systems; Embedded computing; embedded systems; Feedback loop; Investments; Physics computing; Process control; real time; Safety; Software quality; Yarn,Cyber Physical Systems: Design Challenges,x,,,,,,,,,,NO,
S1406,2,bkwd,webpage,,,,,https://content.iospress.com/articles/fundamenta-informaticae/fi63-4-05,,,Modeling and Verification of Reactive Systems using Rebeca - IOS Press,x,,,,,,,,,,NO,
S1405,2,bkwd,webpage,,,,,https://www.taylorfrancis.com/books/edit/10.1201/9781315221229/autonomous-mobile-robots-shuzhi-sam-ge-frank-lewis,,,"Autonomous Mobile Robots | Sensing, Control, Decision Making and Appli",x,,,,,,,,,,NO,
S1404,2,bkwd,journalArticle,2018,"Shishehgar, Majid; Kerr, Donald; Blake, Jacqueline",Smart Health,10.1016/j.smhl.2018.03.002,https://www.sciencedirect.com/science/article/pii/S2352648316300149,"Background The world population is ageing rapidly with the percentage of older adults increasing to 24% by 2030 from 10% in 2000. Therefore cost of providing aged care has been growing, especially in countries such as Japan, the USA and Australia. For example, the average need for long-term care was estimated at three years for people turning 65 in United States of America at 2005 (Kemper, Komisar, & Alecxih, 2005). Robotic technology has been identified as being able to help older adults to live independently, and is emerging as an innovative approach to assist older adults directly, for example, robotic wheelchairs and indirectly for instance providing support to stakeholders, including caregivers. This study looks at the research undertaken in robotic technologies as it is applied to aged care. Method A systematic literature review of peer-reviewed literature published in Medline, ScienceDirect, ProQuest, PubMed, Scopus and SpringerLINK, from 1 January 2000 to mid-July 2015 was undertaken. Results An initial set of 8533 studies was refined to 58 studies. Nine robot types were identified in addressing aged care problems, including companion, manipulator service, telepresence, rehabilitation, health monitoring, reminder, entertainment, domestic, and fall detection/prevention robots. These robot types have been applied to eight key problem areas in aged care, namely social isolation, dependent living, physical or cognitive impairment, mobility problems, poor health monitoring, lack of recreation, memory problems and fall problems. The frequency of research into each robot type was analysed, with the finding some robotic technologies have received more attention (e.g., companion) while other types that can assist older adults with independent living (e.g., cooking and bathing) were not as comprehensively researched. Conclusion This literature review examines research into robots and how they can help in aged care with nine categories of robot identified. The literature establishes that some types of robots have gained significant attention from researchers with respect to their application in various problem areas while other robot types have not. The purpose of this paper is to review the studies and identify current outcomes.",aged care; Older adults; robotic technologies; robots and older adults’ problems,A systematic review of research into how robotic technology can help older people,x,,,,,,,,,,NO,
S1401,2,bkwd,journalArticle,2010,"Kiener, Jutta; von Stryk, Oskar",Robotics and Autonomous Systems,10.1016/j.robot.2010.03.013,https://www.sciencedirect.com/science/article/pii/S0921889010000710,"In this paper a case study of the cooperation of a strongly heterogeneous autonomous robot team, composed of a highly articulated humanoid robot and a wheeled robot with largely complementing and some redundant abilities is presented. By combining strongly heterogeneous robots the diversity of achievable tasks increases as the variety of sensing and motion abilities of the robot system is extended, compared to a usually considered team of homogeneous robots. A number of methodologies and technologies required in order to achieve the long-term goal of cooperation of heterogeneous autonomous robots are discussed, including modeling tasks and robot abilities, task assignment and redistribution, robot behavior modeling and programming, robot middleware and robot simulation. Example solutions and their application to the cooperation of autonomous wheeled and humanoid robots are presented in this case study. The scenario describes a tightly coupled cooperative task, where the humanoid robot and the wheeled robot track a moving ball, which is to be approached and kicked by the humanoid robot into a goal. The task can be fulfilled successfully by combining the abilities of both robots.",Autonomous humanoid robot; Behavior control; Heterogeneous multi-robot team; Robot middleware; Robot simulator; Task distribution and allocation,"Towards cooperation of heterogeneous, autonomous robots: A case study of humanoid and wheeled robots",x,,,x,,,,,,,NO,
S1400,2,bkwd,conferencePaper,2017,"Li, Xinxin; Wang, Rui; Jiang, Yu; Guan, Yong; Li, Xiaojuan; Song, Xiaoyu",2017 22nd International Conference on Engineering of Complex Computer Systems (ICECCS),10.1109/ICECCS.2017.17,,"Robot control systems are complex cyber-physical systems which are difficult to develop. In this paper, we present a formal model-based automatic code synthesis method which can generate executable C++ code running on the world-wide used Robot Operating System (ROS). The internal interaction behaviors of robot systems are modeled as a network of timed automata. The safety requirements and specifications related to the model are formalized as CTL formulas and verified by Uppaal. We design a code synthesis method to generate the executable C++ code from the verified model. Compared to existing code generators based on timed automata, our method supports more complex structures and advanced features such as timer and committed location, and provides the important abstraction and mapping of ROS instructions, which realize the seamless connection between the generated code and ROS. A case study of grasping a cup by a robot with seven degrees of freedom manipulator is conducted and the generated codes are successfully applied to a ROS development environment.",Automata; Automatic code synthesis; C++ languages; Formal model; Generators; Manipulators; Robot system; Tools; Unified modeling language; Verification,Formal Modeling and Automatic Code Synthesis for Robot System,,,,,,,,,,,,
S1399,2,bkwd,conferencePaper,2016,"Adam, Sorin; Kuhrmann, Marco; Schultz, Ulrik Pagh",2016 IEEE 21st International Conference on Emerging Technologies and Factory Automation (ETFA),10.1109/ETFA.2016.7733545,,"Mobile robots are advanced systems that often need to operate in unstructured environments, which increases software complexity. Many components are key to the overall reliability and safety of a robot, yet reducing the risk of errors by making the software resilient is both complicated and expensive. A commercially successful robot has to remain safe while providing as much as possible from the functionality required; even in the presence of partial failures. In this paper, we propose a flexible approach to improve the reliability of existing robot software, which enables a wide range of strategies for graceful degradation in the presence of partial failures. We use standard virtualization techniques as a means to encapsulate the safety-critical parts and to separate these from the non-critical parts of the system. An automatically generated runtime monitoring component realizes a fast switching between different implementations of the non-critical parts of the system to ensure continuous service delivery even in partial failure situations. We present the overall architecture and insights into a reference implementation, and we demonstrate our approach by simulating software failures for a commercial mobile robot.",Computer architecture; Robots; Robustness; Safety; Software; Switches; Virtualization,Towards a virtual machine approach to resilient and safe mobile robots,x,,,,,,,,,,NO,
S1398,2,bkwd,journalArticle,2006,"Metta, Giorgio; Fitzpatrick, Paul; Natale, Lorenzo",International Journal of Advanced Robotic Systems,10.5772/5761,https://doi.org/10.5772/5761,"We describe YARP, Yet Another Robot Platform, an open-source project that encapsulates lessons from our experience in building humanoid robots. The goal of YARP is to minimize the effort devoted to infrastructure-level software development by facilitating code reuse, modularity and so maximize research-level development and collaboration. Humanoid robotics is a “bleeding edge” field of research, with constant flux in sensors, actuators, and processors. Code reuse and maintenance is therefore a significant challenge. We describe the main problems we faced and the solutions we adopted. In short, the main features of YARP include support for inter-process communication, image processing as well as a class hierarchy to ease code reuse across different hardware platforms. YARP is currently used and tested on Windows, Linux and QNX6 which are common operating systems used in robotics.",humanoid robotics; interprocess communication; software platform,YARP: Yet Another Robot Platform,,x,,,,,,,,,NO,
S1397,2,bkwd,journalArticle,2016,"Webster, Matt; Dixon, Clare; Fisher, Michael; Salem, Maha; Saunders, Joe; Koay, Kheng Lee; Dautenhahn, Kerstin; Saez-Pons, Joan",IEEE Transactions on Human-Machine Systems,10.1109/THMS.2015.2425139,,"It is essential for robots working in close proximity to people to be both safe and trustworthy. We present a case study on formal verification for a high-level planner/scheduler for the Care-O-bot, an autonomous personal robotic assistant. We describe how a model of the Care-O-bot and its environment was developed using Brahms, a multiagent workflow language. Formal verification was then carried out by automatically translating this model to the input language of an existing model checker. Four sample properties based on system requirements were verified. We then refined the environment model three times to increase its accuracy and the persuasiveness of the formal verification results. The first refinement uses a user activity log based on real-life experiments, but is deterministic. The second refinement uses the activities from the user activity log nondeterministically. The third refinement uses “conjoined activities” based on an observation that many user activities can overlap. The four samples properties were verified for each refinement of the environment model. Finally, we discuss the approach of environment model refinement with respect to this case study.",Autonomous systems; formal verification; human–robot teams; model checking; Navigation; Robot sensing systems; robotics; Software; TV; Watches,Toward Reliable Autonomous Robotic Assistants Through Formal Verification: A Case Study,x,,,,,,,,,,NO,
S1396,2,bkwd,conferencePaper,2014,"Eder, Kerstin; Harper, Chris; Leonards, Ute",The 23rd IEEE International Symposium on Robot and Human Interactive Communication,10.1109/ROMAN.2014.6926328,,"The success of the human-robot co-worker team in a flexible manufacturing environment where robots learn from demonstration heavily relies on the correct and safe operation of the robot. How this can be achieved is a challenge that requires addressing both technical as well as human-centric research questions. In this paper we discuss the state of the art in safety assurance, existing as well as emerging standards in this area, and the need for new approaches to safety assurance in the context of learning machines. We then focus on robotic learning from demonstration, the challenges these techniques pose to safety assurance and outline opportunities to integrate safety considerations into algorithms “by design”. Finally, from a human-centric perspective, we stipulate that, to achieve high levels of safety and ultimately trust, the robotic co-worker must meet the innate expectations of the humans it works with. It is our aim to stimulate a discussion focused on the safety aspects of human-in-the-loop robotics, and to foster multidisciplinary collaboration to address the research challenges identified.",Collaboration; Monitoring; Runtime; Safety; Service robots; Standards,Towards the safety of human-in-the-loop robotics: Challenges and opportunities for safety assurance of robotic co-workers',x,,,,,,,,,,NO,
S1395,2,bkwd,conferencePaper,2008,"Metta, Giorgio; Sandini, Giulio; Vernon, David; Natale, Lorenzo; Nori, Francesco",Proceedings of the 8th Workshop on Performance Metrics for Intelligent Systems,10.1145/1774674.1774683,https://doi.org/10.1145/1774674.1774683,"We report about the iCub, a humanoid robot for research in embodied cognition. At 104 cm tall, the iCub has the size of a three and half year old child. It will be able to crawl on all fours and sit up to manipulate objects. Its hands have been designed to support sophisticate manipulation skills. The iCub is distributed as Open Source following the GPL/FDL licenses. The entire design is available for download from the project homepage and repository (http://www.robotcub.org). In the following, we will concentrate on the description of the hardware and software systems. The scientific objectives of the project and its philosophical underpinning are described extensively elsewhere [1].",cognitive systems; humanoid robotics; open source; software modularity,The iCub humanoid robot: an open platform for research in embodied cognition,x,,,,,,,,,,NO,
S1394,2,bkwd,journalArticle,2012,"Iñigo-Blasco, Pablo; Diaz-del-Rio, Fernando; Romero-Ternero, M Carmen; Cagigas-Muñiz, Daniel; Vicente-Diaz, Saturnino",Robotics and Autonomous Systems,10.1016/j.robot.2012.02.004,https://www.sciencedirect.com/science/article/pii/S0921889012000322,"Robotics is an area of research in which the paradigm of Multi-Agent Systems (MAS) can prove to be highly useful. Multi-Agent Systems come in the form of cooperative robots in a team, sensor networks based on mobile robots, and robots in Intelligent Environments, to name but a few. However, the development of Multi-Agent Robotic Systems (MARS) still presents major challenges. Over the past decade, a high number of Robotics Software Frameworks (RSFs) have appeared which propose some solutions to the most recurrent problems in robotics. Some of these frameworks, such as ROS, YARP, OROCOS, ORCA, Open-RTM, and Open-RDK, possess certain characteristics and provide the basic infrastructure necessary for the development of MARS. The contribution of this work is the identification of such characteristics as well as the analysis of these frameworks in comparison with the general-purpose Multi-Agent System Frameworks (MASFs), such as JADE and Mobile-C.",Agents; Architecture; MAS; Middleware; Robotics; Software frameworks,Robotics software frameworks for multi-agent robotic systems development,,x,,,,,,,,,NO,
S1393,2,bkwd,conferencePaper,2014,"Huang, Jeff; Erdogan, Cansu; Zhang, Yi; Moore, Brandon; Luo, Qingzhou; Sundaresan, Aravind; Rosu, Grigore",Runtime Verification,10.1007/978-3-319-11164-3_20,,"We present ROSRV, a runtime verification framework for robotic applications on top of the Robot Operating System (ROS [8]), a widely used open-source framework for robot software development. ROSRV aims to address the safety and security issues of robots by providing a transparent monitoring infrastructure that intercepts and monitors the commands and messages passing through the system. Safety and security properties can be defined in a formal specification language, and are ensured by automatically generated monitors. ROSRV integrates seamlessly with ROS—no change in ROS nor the application code is needed. ROSRV has been applied and evaluated on a commercial robot.",Access Control Policy; Linear Temporal Logic; Robot Operating System; Runtime Verification; Virtual Machine Monitor,ROSRV: Runtime Verification for Robots,,,,,,,,,x,,NO,
S1392,2,bkwd,conferencePaper,2008,"Mohamed, Nader; Al-Jaroodi, Jameela; Jawhar, Imad","2008 IEEE Conference on Robotics, Automation and Mechatronics",10.1109/RAMECH.2008.4681485,,"The field of robotics relies heavily on various technologies such as mechatronics, computing systems, and wireless communication. Given the fast growing technological progress in these fields, robots can offer a wide range of applications. However real world integration and application development for such a distributed system composed of many robotic modules and networked robotic devices is very difficult. Therefore, middleware services provide a novel approach offering many possibilities and drastically enhancing the application development for robots. This paper surveys the current state of middleware approaches in this domain. It discusses middleware challenges in these systems and presents some representative middleware solutions specifically designed for robots. The selection of the studied methods tries to cover most of the middleware platforms, objectives and approaches that have been proposed by researchers in this field.",Mechatronics; Medical robotics; middleware; Middleware; Mobile robots; Orbital robotics; Robot sensing systems; robot system integration; Robot vision systems; robots; Sensor arrays; Space technology; Wireless communication,Middleware for Robotics: A Survey,x,,,,,,,,,,NO,
S1391,2,bkwd,journalArticle,2015,"Brugali, Davide",IEEE Robotics Automation Magazine,10.1109/MRA.2015.2452201,,"A model is an abstract representation of a real system or phenomenon [1]. The idea of a model is to capture important properties of reality and to eglect irrelevant details. The properties that are relevant and that can be neglected depend on the purpose of creating a model. A model can make a particular system or phenomenon easier to understand, quantify, visualize, simulate, or predict.",Analytical models; Atmospheric modeling; Ports (Computers); Robot sensing systems; Software development; Tutorials; Unified modeling language,"Model-Driven Software Engineering in Robotics: Models Are Designed to Use the Relevant Things, Thereby Reducing the Complexity and Cost in the Field of Robotics",x,,,,,,,,,,NO,
S1390,2,bkwd,conferencePaper,2012,"Dabbish, Laura; Stuart, Colleen; Tsay, Jason; Herbsleb, Jim",Proceedings of the ACM 2012 conference on Computer Supported Cooperative Work,10.1145/2145204.2145396,https://doi.org/10.1145/2145204.2145396,"Social applications on the web let users track and follow the activities of a large number of others regardless of location or affiliation. There is a potential for this transparency to radically improve collaboration and learning in complex knowledge-based activities. Based on a series of in-depth interviews with central and peripheral GitHub users, we examined the value of transparency for large-scale distributed collaborations and communities of practice. We find that people make a surprisingly rich set of social inferences from the networked activity information in GitHub, such as inferring someone else's technical goals and vision when they edit code, or guessing which of several similar projects has the best chance of thriving in the long term. Users combine these inferences into effective strategies for coordinating work, advancing technical skills and managing their reputation.",awareness; collaboration; coordination; open source software development; social computing; transparency,Social coding in GitHub: transparency and collaboration in an open software repository,x,,,,,,,,,,NO,
S1389,2,bkwd,conferencePaper,2008,"Hassan, Ahmed E.",2008 Frontiers of Software Maintenance,10.1109/FOSM.2008.4659248,,"Source control repositories, bug repositories, archived communications, deployment logs, and code repositories are examples of software repositories that are commonly available for most software projects. The mining software repositories (MSR) field analyzes and cross-links the rich data available in these repositories to uncover interesting and actionable information about software systems. By transforming these repositories from static record-keeping ones into active repositories, we can guide decision processes in modern software projects. For example, data in source control repositories, traditionally used to archive code, could be linked with data in bug repositories to help practitioners propagate complex changes and to warn them about risky code based on prior changes and bugs. In this paper, we present a brief history of the MSR field and discuss several recent achievements and results of using MSR techniques to support software research and practice. We then discuss the various opportunities and challenges that lie in the road ahead for this important and emerging field.",Complexity theory; Computer bugs; Data mining; History; Software; Software engineering; Software systems,The road ahead for Mining Software Repositories,x,,,,,,,,,,NO,
S1388,2,bkwd,conferencePaper,2013,"Linares-Vásquez, Mario; Bavota, Gabriele; Bernal-Cárdenas, Carlos; Di Penta, Massimiliano; Oliveto, Rocco; Poshyvanyk, Denys",Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering,10.1145/2491411.2491428,https://doi.org/10.1145/2491411.2491428,"During the recent years, the market of mobile software applications (apps) has maintained an impressive upward trajectory. Many small and large software development companies invest considerable resources to target available opportunities. As of today, the markets for such devices feature over 850K+ apps for Android and 900K+ for iOS. Availability, cost, functionality, and usability are just some factors that determine the success or lack of success for a given app. Among the other factors, reliability is an important criteria: users easily get frustrated by repeated failures, crashes, and other bugs; hence, abandoning some apps in favor of others. This paper reports a study analyzing how the fault- and change-proneness of APIs used by 7,097 (free) Android apps relates to applications' lack of success, estimated from user ratings. Results of this study provide important insights into a crucial issue: making heavy use of fault- and change-prone APIs can negatively impact the success of these apps.",Android; API changes; Empirical Studies; Mining Software Repositories,API change and fault proneness: a threat to the success of Android apps,x,,,x,,,,,,,NO,
S1387,2,bkwd,journalArticle,2015,"Bavota, Gabriele; Linares-Vásquez, Mario; Bernal-Cárdenas, Carlos Eduardo; Penta, Massimiliano Di; Oliveto, Rocco; Poshyvanyk, Denys",IEEE Transactions on Software Engineering,10.1109/TSE.2014.2367027,,"The mobile apps market is one of the fastest growing areas in the information technology. In digging their market share, developers must pay attention to building robust and reliable apps. In fact, users easily get frustrated by repeated failures, crashes, and other bugs; hence, they abandon some apps in favor of their competition. In this paper we investigate how the fault- and change-proneness of APIs used by Android apps relates to their success estimated as the average rating provided by the users to those apps. First, in a study conducted on 5,848 (free) apps, we analyzed how the ratings that an app had received correlated with the fault- and change-proneness of the APIs such app relied upon. After that, we surveyed 45 professional Android developers to assess (i) to what extent developers experienced problems when using APIs, and (ii) how much they felt these problems could be the cause for unfavorable user ratings. The results of our studies indicate that apps having high user ratings use APIs that are less fault- and change-prone than the APIs used by low rated apps. Also, most of the interviewed Android developers observed, in their development experience, a direct relationship between problems experienced with the adopted APIs and the users' ratings that their apps received.",android; Androids; API changes; Computer bugs; Educational institutions; Electronic mail; empirical studies; History; Humanoid robots; Mining software repositories; Software,The Impact of API Change- and Fault-Proneness on the User Ratings of Android Apps,x,,,,,,,,,,NO,
S1386,2,bkwd,book,2019,"Thomas, David; Hunt, Andrew",,,,"“One of the most significant books in my life.” –Obie Fernandez, Author, The Rails Way “Twenty years ago, the first edition of The Pragmatic Programmer completely changed the trajectory of my career. This new edition could do the same for yours.” –Mike Cohn, Author of Succeeding with Agile, Agile Estimating and Planning, and User Stories Applied “. . . filled with practical advice, both technical and professional, that will serve you and your projects well for years to come.” –Andrea Goulet, CEO, Corgibytes, Founder, LegacyCode.Rocks  “. . . lightning does strike twice, and this book is proof.” –VM (Vicky) Brasseur, Director of Open Source Strategy, Juniper Networks   The Pragmatic Programmer  is one of those rare tech books you’ll read, re-read, and read again over the years. Whether you’re new to the field or an experienced practitioner, you’ll come away with fresh insights each and every time. Dave Thomas and Andy Hunt wrote the first edition of this influential book in 1999 to help their clients create better software and rediscover the joy of coding. These lessons have helped a generation of programmers examine the very essence of software development, independent of any particular language, framework, or methodology, and the Pragmatic philosophy has spawned hundreds of books, screencasts, and audio books, as well as thousands of careers and success stories. Now, twenty years later, this new edition re-examines what it means to be a modern programmer. Topics range from personal responsibility and career development to architectural techniques for keeping your code flexible and easy to adapt and reuse. Read this book, and you’ll learn how to:  Fight software rot Learn continuously Avoid the trap of duplicating knowledge Write flexible, dynamic, and adaptable code Harness the power of basic tools Avoid programming by coincidence Learn real requirements Solve the underlying problems of concurrent code Guard against security vulnerabilities Build teams of Pragmatic Programmers Take responsibility for your work and career Test ruthlessly and effectively, including property-based testing Implement the Pragmatic Starter Kit Delight your users Written as a series of self-contained sections and filled with classic and fresh anecdotes, thoughtful examples, and interesting analogies,  The Pragmatic Programmer  illustrates the best approaches and major pitfalls of many different aspects of software development. Whether you’re a new coder, an experienced programmer, or a manager responsible for software projects, use these lessons daily, and you’ll quickly see improvements in personal productivity, accuracy, and job satisfaction. You’ll learn skills and develop habits and attitudes that form the foundation for long-term success in your career. You’ll become a Pragmatic Programmer.  Register your book for convenient access to downloads, updates, and/or corrections as they become available. See inside book for details.",Computers / Software Development & Engineering / General; Computers / Software Development & Engineering / Quality Assurance & Testing,"The Pragmatic Programmer: your journey to mastery, 20th Anniversary Edition",x,,,,,,,,,,NO,
S1385,2,bkwd,journalArticle,,"Krassa, Michael",,,,,,The Atlantic Online | March 1982 | Broken Windows | James Q. ...,x,,,,,,,,,,NO,
S1384,2,bkwd,conferencePaper,2014,"Trojanek, Piotr; Eder, Kerstin",2014 IEEE/RSJ International Conference on Intelligent Robots and Systems,10.1109/IROS.2014.6942753,,"Navigation algorithms are fundamental for mobile robots. While the correctness of the algorithms is important, it is equally important that they do not fail because of bugs in their implementation. Yet, even widely-used robot navigation code lacks proofs of correctness or credible coverage reports from testing. Robot software developers usually point towards the cost of manual verification or lack of automated tools that would handle their code. We demonstrate that the choice of programming language is essential both for finding bugs in the code and for proving their absence. Our re-implementation of three robot navigation algorithms in SPARK revealed bugs that for years have not been detected in their original code in C/C++. For one of the implementations we demonstrate that it is free from run-time errors. Our code and results are available online to encourage uptake by the robot software developers community.",Arrays; Libraries; Navigation; Robots; Software; Software algorithms; Sparks,Verification and testing of mobile robot navigation algorithms: A case study in SPARK,x,,,,,,,,,,NO,
S1383,2,bkwd,conferencePaper,2017,"Halder, Raju; Proença, José; Macedo, Nuno; Santos, André",2017 IEEE/ACM 5th International FME Workshop on Formal Methods in Software Engineering (FormaliSE),10.1109/FormaliSE.2017.9,,"Robotic technologies are continuously transforming the domestic and the industrial environments. Recently the Robotic Operating System (ROS), has been widely adopted both by industry and academia, becoming one of the most popular middleware frameworks for developing robot applications. Guaranteeing the correct behaviour of robotic systems is, however, challenging due to their potential for parameterization and heterogeneity. Although different approaches exist, focusing on concrete domain spaces for specific scenarios, no general approach to reason about ROS systems has yet arisen. This paper proposes an approach to model and verify ROS systems using real time properties, focusing on one of the main features of ROS, the communication between nodes. It takes low-level parameters into account, such as queue sizes and timeouts, and uses timed automata as the modelling language. The robot Kobuki is used as a complex case study, over which properties are automatically verified using the UPPAAL model checker, enabling the identification of problematic parameter combinations.",Automata; Clocks; Monitoring; Peer-to-peer computing; Safety; Service robots,Formal Verification of ROS-Based Robotic Applications Using Timed-Automata,,,,,,,,,x,,NO,
S1380,2,bkwd,conferencePaper,2018,"Santos, André; Cunha, Alcino; Macedo, Nuno","Proceedings of the 9th ACM SIGSOFT International Workshop on Automating TEST Case Design, Selection, and Evaluation",10.1145/3278186.3278195,https://doi.org/10.1145/3278186.3278195,"The Robot Operating System (ROS) is an open source framework for the development of robotic software, in which a typical system consists of multiple processes communicating under a publisher-subscriber architecture. A great deal of development time goes into orchestration and making sure that the communication interfaces comply with the expected contracts (e.g. receiving a message leads to the publication of another message). Orchestration mistakes are only detected during runtime, stressing the importance of component and integration testing in the verification process. Property-based Testing is fitting in this context, since it is based on the specification of contracts and treats tested components as black boxes, but there is no support for it in ROS. In this paper, we present a first approach towards automatic generation of test scripts for property-based testing of various configurations of a ROS system.",Property-based Testing; Robot Operating System; Software Testing; Test Automation,Property-based testing for the robot operating system,,,,,,,,,,,,
S1379,2,bkwd,conferencePaper,2013,"Cortesi, Agostino; Ferrara, Pietro; Chaki, Nabendu",IEEE ISR 2013,10.1109/ISR.2013.6739742,,"We overview the main semantics-based static analysis techniques for software verification: Data-flow analysis, Control-flow Analysis, Model Checking, and Abstract Interpretation. The complexity of control software, lying at the core of robotic systems, and the intensive use of numeric values pose several challenges for the formal verification of either functional or non-functional properties.",Abstract Interpretation; Abstracts; Automata; Computer languages; Formal Verification; Model checking; Robotics Software; Semantics; Software; Static Analysis,Static analysis techniques for robotics software verification,x,,,,,,,,,,NO,
S1378,2,bkwd,conferencePaper,2012,"Purandare, Rahul; Darsie, Javier; Elbaum, Sebastian; Dwyer, Matthew B.",2012 IEEE/RSJ International Conference on Intelligent Robots and Systems,10.1109/IROS.2012.6385719,,"Modern robotics systems rely on distributed event-based frameworks to facilitate the assembly of software out of collections of reusable components. These frameworks express component dependencies in data that encode event publish-subscribe relations. This loosely coupled architecture makes it difficult for developers to understand the dependencies and to predict the impacts of a change to a component as the components grow in number and complexity. Moreover, this encoding of dependencies renders traditional techniques for analyzing component dependencies inapplicable, because the dependencies are bound by communication channels rather than data. In this work, we present a program analysis technique that automatically extracts a model of component dependencies from distributed system source code. This model identifies not only the temporal dependencies among components, but also the conditions under which those dependencies are realized. We have implemented the analysis and applied it to systems developed in ROS. The resulting models are succinct and precise, which suggests that programmers will find them comprehensible, and they can be used to document important global dependencies in a system, to compare different versions to identify the impacts of component changes, and to help locate errors.",Analytical models; Complexity theory; Computer architecture; Grammar; Robots; Software; Torso,Extracting conditional component dependence for distributed robotic systems,,,,,,,,,x,,NO,
S1377,2,bkwd,conferencePaper,2017,"Santos, André; Cunha, Alcino; Macedo, Nuno; Arrais, Rafael; dos Santos, Filipe Neves",2017 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS.2017.8206237,,"The Robot Operating System (ROS) is nowadays one of the most popular frameworks for developing robotic applications. To ensure the (much needed) dependability and safety of such applications we forecast an increasing demand for ROS-specific coding standards, static analyzers, and tools alike. Unfortunately, the development of such standards and tools can be hampered by ROS modularity and configurability, namely the substantial number of primitives (and respective variants) that must, in principle, be considered. To quantify the severity of this problem, we have mined a large number of existing ROS packages to understand how its primitives are used in practice, and to determine which combinations of primitives are most popular. This paper presents and discusses the results of this study, and hopefully provides some guidance for future standardization efforts and tool developers.",C++ languages; Robots; Runtime; Software; Standards; Tools,Mining the usage patterns of ROS primitives,,,,,,,,,x,,NO,
S1376,2,bkwd,journalArticle,2016,"White, Ruffin; Christensen, Dr Henrik I.; Quigley, Dr Morgan",arXiv:1611.07060 [cs],,http://arxiv.org/abs/1611.07060,"SROS is a proposed addition to the ROS API and ecosystem to support modern cryptography and security measures. An overview of current progress will be presented, rationalizing each major advancement, including: over-the-wire cryptography for all data transport, namespaced access control enforcing graph policies/restrictions, and finally process profiles using Linux Security Modules to harden a node's resource access. By making the community aware of the vulnerabilities in ROS, as well as the proposed solutions provided by SROS, we intend to improve the state of security for future robotics subsystems.",Computer Science - Cryptography and Security; Computer Science - Robotics,"SROS: Securing ROS over the wire, in the graph, and through the kernel",,,,,x,,,,,,NO,
S1375,2,bkwd,journalArticle,2017,"Dieber, Bernhard; Breiling, Benjamin; Taurer, Sebastian; Kacianka, Severin; Rass, Stefan; Schartner, Peter",Robotics and Autonomous Systems,10.1016/j.robot.2017.09.017,https://www.sciencedirect.com/science/article/pii/S0921889017302762,"Future robotic systems will be situated in highly networked environments where they communicate with industrial control systems, cloud services or other systems at remote locations. In this trend of strong digitization of industrial systems (also sometimes referred to as Industry 4.0), cyber attacks are an increasing threat to the integrity of the robotic systems at the core of this new development. It is expected, that the Robot Operating System (ROS) will play an important role in robotics outside of pure research-oriented scenarios. ROS however has significant security issues which need to be addressed before such products should reach mass markets. In this paper we present the most common vulnerabilities of ROS, attack vectors to exploit those and several approaches to secure ROS and similar systems. We show how to secure ROS on an application level and describe a solution which is integrated directly into the ROS core. Our proposed solution has been implemented and tested with recent versions of ROS, and adds security to all communication channels without being invasive to the system kernel itself.",Industry 4.0; Robotics; ROS; Security,Security for the Robot Operating System,,,,,,,,,x,,NO,
S1374,2,bkwd,conferencePaper,2014,"Huang, Jeff; Erdogan, Cansu; Zhang, Yi; Moore, Brandon; Luo, Qingzhou; Sundaresan, Aravind; Rosu, Grigore",Runtime Verification,10.1007/978-3-319-11164-3_20,,"We present ROSRV, a runtime verification framework for robotic applications on top of the Robot Operating System (ROS [8]), a widely used open-source framework for robot software development. ROSRV aims to address the safety and security issues of robots by providing a transparent monitoring infrastructure that intercepts and monitors the commands and messages passing through the system. Safety and security properties can be defined in a formal specification language, and are ensured by automatically generated monitors. ROSRV integrates seamlessly with ROS—no change in ROS nor the application code is needed. ROSRV has been applied and evaluated on a commercial robot.",Access Control Policy; Linear Temporal Logic; Robot Operating System; Runtime Verification; Virtual Machine Monitor,ROSRV: Runtime Verification for Robots,,,,,,,,,x,,NO,
S1373,2,bkwd,journalArticle,2013,"Reichardt, Max; Föhst, Tobias; Berns, Karsten",Electronic Communications of the EASST,10.14279/tuj.eceasst.60.855,https://ubsrvweb09.ub.tu-berlin.de/eceasst/article/view/855,"Frameworks have fundamental impact on software quality of robot control systems. We propose systematic framework design aiming at high levels of support for all quality attributes that are relevant in the robotics domain. Design decisions are taken accordingly. We argue that certain areas of design are especially critical, as changing decisions there would likely require rewriting significant parts of the implementation. For these areas, quality-motivated solutions and benefits for actual applications are discussed. We illustrate and evaluate their implementations in our framework Finroc - after briefly introducing it. This includes a highly modular framework core and a well-performing, lock-free, zero-copying communication mechanism. Finroc is being used in complex and also in commercial robotic projects - which evinces that the approaches are suitable for real-world applications.",,On Software Quality-motivated Design of a Real-time Framework for Complex Robot Control Systems,x,,,x,,,,,,,NO,
S1372,2,bkwd,journalArticle,2017,"Hennersperger, Christoph; Fuerst, Bernhard; Virga, Salvatore; Zettinig, Oliver; Frisch, Benjamin; Neff, Thomas; Navab, Nassir",IEEE Transactions on Medical Imaging,10.1109/TMI.2016.2620723,,"Robotic ultrasound has the potential to assist and guide physicians during interventions. In this work, we present a set of methods and a workflow to enable autonomous MRI-guided ultrasound acquisitions. Our approach uses a structured-light 3D scanner for patient-to-robot and image-to-patient calibration, which in turn is used to plan 3D ultrasound trajectories. These MRI-based trajectories are followed autonomously by the robot and are further refined online using automatic MRI/US registration. Despite the low spatial resolution of structured light scanners, the initial planned acquisition path can be followed with an accuracy of 2.46 ± 0.96 mm. This leads to a good initialization of the MRI/US registration: the 3D-scan-based alignment for planning and acquisition shows an accuracy (distance between planned ultrasound and MRI) of 4.47 mm, and 0.97 mm after an online-update of the calibration based on a closed loop registration.",Automatic imaging; image-guidance; Imaging; Manipulators; medical robotics; multi-modal registration; Planning; Probes; robotic ultrasound; Three-dimensional displays; ultrasonic imaging; Ultrasonic imaging,Towards MRI-Based Autonomous Robotic US Acquisitions: A First Feasibility Study,x,,,,,,,,,,NO,
S1371,2,bkwd,conferencePaper,2016,"Santos, André; Cunha, Alcino; Macedo, Nuno; Lourenço, Cláudio",2016 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS.2016.7759661,,"Robots are being increasingly used in safety-critical contexts, such as transportation and health. The need for flexible behavior in these contexts, due to human interaction factors or unstructured operating environments, led to a transition from hardware- to software-based safety mechanisms in robotic systems, whose reliability and quality is imperative to guarantee. Source code static analysis is a key component in formal software verification. It consists on inspecting code, often using automated tools, to determine a set of relevant properties that are known to influence the occurrence of defects in the final product. This paper presents HAROS, a generic, plug-in-driven, framework to evaluate code quality, through static analysis, in the context of the Robot Operating System (ROS), one of the most widely used robotic middleware. This tool (equipped with plug-ins for computing metrics and conformance to coding standards) was applied to several publicly available ROS repositories, whose results are also reported in the paper, thus providing a first overview of the internal quality of the software being developed in this community.",Context; Measurement; Safety; Service robots; Software; Standards,A framework for quality assessment of ROS repositories,,,,,,,,,x,,NO,
S1370,2,bkwd,journalArticle,,"Quigley, Morgan; Gerkey, Brian; Conley, Ken; Faust, Josh; Foote, Tully; Leibs, Jeremy; Berger, Eric; Wheeler, Rob; Ng, Andrew",,,,"This paper gives an overview of ROS, an opensource robot operating system. ROS is not an operating system in the traditional sense of process management and scheduling; rather, it provides a structured communications layer above the host operating systems of a heterogenous compute cluster. In this paper, we discuss how ROS relates to existing robot software frameworks, and brieﬂy overview some of the available application software which uses ROS.",,ROS: an open-source Robot Operating System,,,,,,,,,x,,NO,
S1369,2,bkwd,journalArticle,2009,"Jackson, Daniel",Communications of the ACM,10.1145/1498765.1498787,https://doi.org/10.1145/1498765.1498787,Who could fault an approach that offers greater credibility at reduced cost?,,A direct path to dependable software,x,,,,,,,,,,NO,
S1368,2,bkwd,conferencePaper,2012,"Purandare, Rahul; Darsie, Javier; Elbaum, Sebastian; Dwyer, Matthew B.",2012 IEEE/RSJ International Conference on Intelligent Robots and Systems,10.1109/IROS.2012.6385719,,"Modern robotics systems rely on distributed event-based frameworks to facilitate the assembly of software out of collections of reusable components. These frameworks express component dependencies in data that encode event publish-subscribe relations. This loosely coupled architecture makes it difficult for developers to understand the dependencies and to predict the impacts of a change to a component as the components grow in number and complexity. Moreover, this encoding of dependencies renders traditional techniques for analyzing component dependencies inapplicable, because the dependencies are bound by communication channels rather than data. In this work, we present a program analysis technique that automatically extracts a model of component dependencies from distributed system source code. This model identifies not only the temporal dependencies among components, but also the conditions under which those dependencies are realized. We have implemented the analysis and applied it to systems developed in ROS. The resulting models are succinct and precise, which suggests that programmers will find them comprehensible, and they can be used to document important global dependencies in a system, to compare different versions to identify the impacts of component changes, and to help locate errors.",Analytical models; Complexity theory; Computer architecture; Grammar; Robots; Software; Torso,Extracting conditional component dependence for distributed robotic systems,,,,,,,,,x,,NO,
S1367,2,bkwd,conferencePaper,2014,"Huang, Jeff; Erdogan, Cansu; Zhang, Yi; Moore, Brandon; Luo, Qingzhou; Sundaresan, Aravind; Rosu, Grigore",Runtime Verification,10.1007/978-3-319-11164-3_20,,"We present ROSRV, a runtime verification framework for robotic applications on top of the Robot Operating System (ROS [8]), a widely used open-source framework for robot software development. ROSRV aims to address the safety and security issues of robots by providing a transparent monitoring infrastructure that intercepts and monitors the commands and messages passing through the system. Safety and security properties can be defined in a formal specification language, and are ensured by automatically generated monitors. ROSRV integrates seamlessly with ROS—no change in ROS nor the application code is needed. ROSRV has been applied and evaluated on a commercial robot.",Access Control Policy; Linear Temporal Logic; Robot Operating System; Runtime Verification; Virtual Machine Monitor,ROSRV: Runtime Verification for Robots,,,,,,,,,x,,NO,
S1366,2,bkwd,conferencePaper,2016,"Santos, André; Cunha, Alcino; Macedo, Nuno; Lourenço, Cláudio",2016 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS.2016.7759661,,"Robots are being increasingly used in safety-critical contexts, such as transportation and health. The need for flexible behavior in these contexts, due to human interaction factors or unstructured operating environments, led to a transition from hardware- to software-based safety mechanisms in robotic systems, whose reliability and quality is imperative to guarantee. Source code static analysis is a key component in formal software verification. It consists on inspecting code, often using automated tools, to determine a set of relevant properties that are known to influence the occurrence of defects in the final product. This paper presents HAROS, a generic, plug-in-driven, framework to evaluate code quality, through static analysis, in the context of the Robot Operating System (ROS), one of the most widely used robotic middleware. This tool (equipped with plug-ins for computing metrics and conformance to coding standards) was applied to several publicly available ROS repositories, whose results are also reported in the paper, thus providing a first overview of the internal quality of the software being developed in this community.",Context; Measurement; Safety; Service robots; Software; Standards,A framework for quality assessment of ROS repositories,,,,,,,,,x,,NO,
S1365,2,bkwd,conferencePaper,2017,"Sharma, Nishant; Elbaum, Sebastian; Detweiler, Carrick",2017 IEEE International Conference on Robotics and Automation (ICRA),10.1109/ICRA.2017.7989240,,"Changes to robotic systems as they are updated or upgraded often affect the flow of control and sensor data. Developers and users spend a significant amount of time tracing the impact of these changes that could otherwise have negative impacts on the robot's performance and behavior. Changes to the rates at which data is published from sensors, controllers, and other parts of the system are particularly subtle and difficult to detect. These rate changes, even if minor (e.g. lowering the frame rate of a camera), can propagate throughout the system and have broad impacts. In this work, we develop and implement an approach to help identify the set of components whose rate may be impacted by a system change. The approach builds on the insight that certain code patterns render component's outgoing data rate independent of the component's incoming data rate. We use that insight to reduce the number of components reported as affected by the change to minimize the number of components that must be reevaluated by the developer. A study of an implementation of the approach on three ROS systems shows that it can reduce the size of the impact set by up to 41% in cases when the changes have broad data impacts. The analysis is performed at compile time and only adds a third more to the compilation time.",Cameras; Publish-subscribe; Publishing; Robot sensing systems; Solids; Tools,Rate impact analysis in robotic systems,,,,,,,,,x,,NO,
S1364,2,bkwd,conferencePaper,2018,"Brunel, Julien; Chemouil, David; Cunha, Alcino; Macedo, Nuno",Proceedings of the 33rd ACM/IEEE International Conference on Automated Software Engineering,10.1145/3238147.3240475,https://doi.org/10.1145/3238147.3240475,"This paper presents the Electrum Analyzer, a free-software tool to validate and perform model checking of Electrum specifications. Electrum is an extension of Alloy that enriches its relational logic with LTL operators, thus simplifying the specification of dynamic systems. The Analyzer supports both automatic bounded model checking, with an encoding into SAT, and unbounded model checking, with an encoding into SMV. Instance, or counter-example, traces are presented back to the user in a unified visualizer. Features to speed up model checking are offered, including a decomposed parallel solving strategy and the extraction of symbolic bounds.",Formal specification language; model checking; model validation,The electrum analyzer: model checking relational first-order temporal specifications,x,,,,,,,,,,NO,
S1363,2,bkwd,conferencePaper,2018,"Alami, Adam; Dittrich, Yvonne; Wąsowski, Andrzej",Proceedings of the 11th International Workshop on Cooperative and Human Aspects of Software Engineering,10.1145/3195836.3195853,https://doi.org/10.1145/3195836.3195853,"ROS (Robot Operating System) is an open source community in robotics that is developing standard robotics operating system facilities such as hardware abstraction, low-level device control, communication middleware, and a wide range of software components for robotics functionality. This paper studies the quality assurance practices of the ROS community. We use qualitative methods to understand how ideology, priorities of the community, culture, sustainability, complexity, and adaptability of the community affect the implementation of quality assurance practices. Our analysis suggests that software engineering practices require social and cultural alignment and adaptation to the community particularities to achieve seamless implementation in open source environments. This alignment should be incorporated into the design and implementation of quality assurance practices in open source communities.",open source software; OSS community; quality assurance,Influencers of quality assurance in an open source community,,,,,,,,,x,,NO,
S1362,2,bkwd,conferencePaper,2018,"Witte, Thomas; Tichy, Matthias",Proceedings of the 1st International Workshop on Robotics Software Engineering,10.1145/3196558.3196559,https://doi.org/10.1145/3196558.3196559,"Context: The software architecture of complex robot systems is usually divided into components. The software is then the configuration and combination of those components and their connectors. Objective: In the Robot Operating System (ROS), this architectural configuration, the ROS node graph, is partly defined in code and created at run-time. The static information about the architecture in the configuration is limited and checking the consistency at development time is not possible. The full software has to be manually executed to check the consistency and debug configuration errors. Method: We propose an approach and a corresponding tool to analyze ROS nodes and their launch files to check consistency and issue warnings if potential problems are detected. The approach uses both static analysis of the launch files as well as dynamic analysis of individual ROS nodes to reconstruct the node graph without executing the whole launch configuration. The nodes are executed in a sandbox to prevent side effects and enable the integration of the analysis tool, e.g., into automated testing systems. Results: The evaluation on internal and publicly available ROS projects shows that we are able to reconstruct the complete architecture of the system if the nodes implement a common lifecycle. Conclusion: The approach enables ROS developers to avoid creating incompatible architectures and check consistency already at development time. The approach can be extended to also monitor architectural consistency at run time.",dynamic analysis; ROS; roslaunch; software architecture description,Checking consistency of robot software architectures in ROS,,,,,,,,,,,,
S1361,2,bkwd,conferencePaper,2019,"Santos, André; Cunha, Alcino; Macedo, Nuno",2019 Third IEEE International Conference on Robotic Computing (IRC),10.1109/IRC.2019.00018,,"The Robot Operating System (ROS) is one of the most popular open source robotic frameworks, and has contributed significantly to the fast development of robotics. Even though ROS provides many ready-made components, a robotic system is inherently complex, in particular regarding the architecture and orchestration of such components. Availability and analysis of a system's architecture at compile time is fundamental to ease comprehension and development of higher-quality software. However, ROS developers have to overcome this complexity relying mostly on testing and runtime visualisers. This work aims to enhance static-time support by proposing, firstly, a metamodel to describe the software architecture of ROS systems (the ROS Computation Graph) and, secondly, model extraction and visualisation tools for such architectural models. The provided tools allow users to specify custom-made queries over these models, enabling the static verification of relevant properties that had to be (manually) checked at runtime before.",Computational modeling; Computer architecture; robotics; Robots; Runtime; Software; software architecture; software quality; static analysis; Tools; Visualization,Static-Time Extraction and Analysis of the ROS Computation Graph,,,,,,,,,x,,NO,
S1360,2,bkwd,conferencePaper,2019,"Hammoudeh Garcia, Nadia; Deval, Ludovic; Lüdtke, Mathias; Santos, Andre; Kahl, Björn; Bordignon, Mirko",2019 ACM/IEEE 22nd International Conference on Model Driven Engineering Languages and Systems (MODELS),10.1109/MODELS.2019.00-11,,"In principle, Model-Driven Engineering (MDE) addresses central aspects of robotics software development. Domain experts could leverage the expressiveness of models; implementation details over different hardware could be handled by automatic code generation. In practice, most evidence points to manual code development as the norm, despite several MDE efforts in robotics. Possible reasons for this disconnect are the wide ranges of applications and target platforms making all-encompassing MDE IDEs hard to develop and maintain, with developers reverting to writing code manually. Acknowledging this, and given the opportunity to leverage a large corpus of open-source software widely adopted by the robotics community, we pursue modeling as a complement, rather than an alternative, to manually written code. Our previous work introduced metamodels to describe components, their interactions, and their resulting composition, as inspired by, but not limited to, the de-facto standard Robot Operating System (ROS). In this paper we put such metamodels into use through two contributions. First, we automate the generation of models from manually written artifacts through extraction from source code and runtime system monitoring. Second, we make available an easy-to-use web infrastructure to perform the extraction, together with a growing database of models so generated. Our aim with this tooling, publicly available both as-a-service and as source code, is to lower the MDE barrier for practitioners and leverage models to 1) improve the understanding of manually written code; 2) perform correctness checks; and 3) systematize the definition and adoption of best practices through large-scale generation of models from existing code. A comprehensive example is provided as a walk-through for robotics software practitioners.",development environments; models; ROS,Bootstrapping MDE Development from ROS Manual Code - Part 2: Model Generation,,,,,,,,,x,,NO,
S1359,2,bkwd,conferencePaper,2020,"Neto, Tiago; Arrais, Rafael; Sousa, Armando; Santos, André; Veiga, Germano",Robot 2019: Fourth Iberian Robotics Conference,10.1007/978-3-030-35990-4_51,,"Modern industry is shifting towards flexible, advanced robotic systems to meet the increasing demand for custom-made products with low manufacturing costs and to promote a collaborative environment for humans and robots. As a consequence of this industrial revolution, some traditional, mechanical- and hardware-based safety mechanisms are discarded in favour of a safer, more dependable robot software. This work presents a case study of assessing and improving the internal quality of a European research mobile manipulator, operating in a real industrial environment, using modern static analysis tools geared for robotic software. Following an iterative approach, we managed to fix about 90% of the reported issues, resulting in code that is easier to use and maintain.",Mobile manipulator; ROS; Safety; Software static analysis,Applying Software Static Analysis to ROS: The Case Study of the FASTEN European Project,,,,x,,,,,,,NO,
S1358,2,bkwd,conferencePaper,2020,"Ferrando, Angelo; Cardoso, Rafael C.; Fisher, Michael; Ancona, Davide; Franceschini, Luca; Mascardi, Viviana",Towards Autonomous Robotic Systems,10.1007/978-3-030-63486-5_40,,"Recently, robotic applications have been seeing widespread use across industry, often tackling safety-critical scenarios where software reliability is paramount. These scenarios often have unpredictable environments and, therefore, it is crucial to be able to provide assurances about the system at runtime. In this paper, we introduce ROSMonitoring, a framework to support Runtime Verification (RV) of robotic applications developed using the Robot Operating System (ROS). The main advantages of ROSMonitoring compared to the state of the art are its portability across multiple ROS distributions and its agnosticism w.r.t. the specification formalism. We describe the architecture behind ROSMonitoring and show how it can be used in a traditional ROS example. To better evaluate our approach, we apply it to a practical example using a simulation of the Mars curiosity rover. Finally, we report the results of some experiments to check how well our framework scales.",,ROSMonitoring: A Runtime Verification Framework for ROS,,,,,,,,,x,,NO,
S1357,2,bkwd,conferencePaper,2020,"Carvalho, Renato; Cunha, Alcino; Macedo, Nuno; Santos, André",2020 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS45743.2020.9341085,,"Robots are currently deployed in safety-critical domains but proper techniques to assess the functional safety of their software are yet to be adopted. This is particularly critical in ROS, where highly configurable robots are built by composing third-party modules. To promote adoption, we advocate the use of lightweight formal methods, automatic techniques with minimal user input and intuitive feedback. This paper proposes a technique to automatically verify system-wide safety properties of ROS-based applications at static time. It is based in the formalization of ROS architectural models and node behaviour in Electrum, over which system-wide specifications are subsequently model checked. To automate the analysis, it is deployed as a plug-in for HAROS, a framework for the assessment of ROS software quality aimed at the ROS community. The technique is evaluated in a real robot, AgRob V16, with positive results.",Computer architecture; Intelligent robots; Middleware; Model checking; Safety; Scalability; Software quality,Verification of system-wide safety properties of ROS applications,,,,x,,,,x,,,NO,
S1356,2,bkwd,conferencePaper,2001,"Crandall, J.W.; Goodrich, M.A.","2001 IEEE International Conference on Systems, Man and Cybernetics. e-Systems and e-Man for Cybernetics in Cyberspace (Cat.No.01CH37236)",10.1109/ICSMC.2001.973517,http://ieeexplore.ieee.org/document/973517/,"Human-robot interaction is becoming an increasingly important research area. In this paper, we present our work on designing a human-robot system with adjustable autonomy and describe not only the prototype interface but also the corresponding robot behaviors. In our approach, we grant the human meta-level control over the level of robot autonomy, but we allow the robot a varying amount of self-direction with each level. Within this framework of adjustable autonomy, we explore appropriate interface concepts for controlling multiple robots from multiple platforms.",,Experiments in adjustable autonomy,x,,,x,,,,,,,NO,
S1355,2,bkwd,conferencePaper,2015,"Romay, Alberto; Kohlbrecher, Stefan; Conner, David C.; von Stryk, Oskar",2015 IEEE-RAS 15th International Conference on Humanoid Robots (Humanoids),10.1109/HUMANOIDS.2015.7363543,,"The investigations of this paper are motivated by the scenario of a supervised semi-autonomous humanoid robot entering a mainly unknown, potentially degraded human environment to perform highly diverse disaster recovery tasks. For this purpose, the robot must be enabled to use any object it can find in the environment as tool for achieving its current manipulation task. This requires the use of potential unknown objects as well as known objects for new purposes (e.g. using a drill as a hammer). A recently proposed object template manipulation approach is extended to provide a semi-autonomous humanoid robot assisted by a remote human supervisor with the versatility needed to utilize objects in the described manner applying affordances [1] from other previously known objects. For an Atlas humanoid robot it is demonstrated how using a small set of such object templates with well defined affordances can be used to solve manipulation tasks using new unknown objects.",End effectors; Hoses; Humanoid robots; Robot kinematics; Robot sensing systems; Semantics,Achieving versatile manipulation tasks with unknown objects by supervised humanoid robots based on object templates,x,,,,,,,,,,NO,
S1354,2,bkwd,report,1992,"Coulter, R. C.",,,https://apps.dtic.mil/sti/citations/ADA255524,"The main purpose of this technical report is to describe in detail the implementation of the pure pursuit path tracking algorithm. Given the general success of the algorithm over the past few years, it seems likely that it will be used again in land-based navigation problems. This report also includes a geometric derivation of the method, and presents some insights into the performance of the algorithm as a function of its parameters.",,Implementation of the Pure Pursuit Path Tracking Algorithm,x,,,,,,,,,,NO,
S1352,2,bkwd,webpage,,,,,https://www.frontiersin.org/articles/10.3389/frobt.2016.00031/full,,,Frontiers | A Comprehensive Software Framework for Complex Locomotion and Manipulation Tasks Applicable to Different Types of Humanoid Robots | Robotics and AI,x,,,,,,,,,,NO,
S1351,2,bkwd,journalArticle,2015,"Kohlbrecher, Stefan; Romay, Alberto; Stumpf, Alexander; Gupta, Anant; Stryk, Oskar von; Bacim, Felipe; Bowman, Doug A.; Goins, Alex; Balasubramanian, Ravi; Conner, David C.",Journal of Field Robotics,10.1002/rob.21558,https://onlinelibrary.wiley.com/doi/abs/10.1002/rob.21558,"Team ViGIR entered the 2013 DARPA Robotics Challenge (DRC) with a focus on developing software to enable an operator to guide a humanoid robot through the series of challenge tasks emulating disaster response scenarios. The overarching philosophy was to make our operators full team members and not just mere supervisors. We designed our operator control station (OCS) to allow multiple operators to request and share information as needed to maintain situational awareness under bandwidth constraints, while directing the robot to perform tasks with most planning and control taking place onboard the robot. Given the limited development time, we leveraged a number of open source libraries in both our onboard software and our OCS design; this included significant use of the robot operating system libraries and toolchain. This paper describes the high level approach, including the OCS design and major onboard components, and it presents our DRC Trials results. The paper concludes with a number of lessons learned that are being applied to the final phase of the competition and are useful for related projects as well.",,Human-robot Teaming for Rescue Missions: Team ViGIR's Approach to the 2013 DARPA Robotics Challenge Trials,x,,,,,,,,,,NO,
S1350,2,bkwd,journalArticle,2010,"Bohren, Jonathan; Cousins, Steve",IEEE Robotics Automation Magazine,10.1109/MRA.2010.938836,,,,The SMACH High-Level Executive [ROS News],,x,,,,,,,,,NO,
S1349,2,bkwd,journalArticle,2009,"Pivtoraiko, Mihail; Knepper, Ross A.; Kelly, Alonzo",Journal of Field Robotics,10.1002/rob.20285,https://onlinelibrary.wiley.com/doi/abs/10.1002/rob.20285,"We present an approach to the problem of differentially constrained mobile robot motion planning in arbitrary cost fields. The approach is based on deterministic search in a specially discretized state space. We compute a set of elementary motions that connects each discrete state value to a set of its reachable neighbors via feasible motions. Thus, this set of motions induces a connected search graph. The motions are carefully designed to terminate at discrete states, whose dimensions include relevant state variables (e.g., position, heading, curvature, and velocity). The discrete states, and thus the motions, repeat at regular intervals, forming a lattice. We ensure that all paths in the graph encode feasible motions via the imposition of continuity constraints on state variables at graph vertices and compliance of the graph edges with a differential equation comprising the vehicle model. The resulting state lattice permits fast full configuration space cost evaluation and collision detection. Experimental results with research prototype rovers demonstrate that the planner allows us to exploit the entire envelope of vehicle maneuverability in rough terrain, while featuring real-time performance. © 2009 Wiley Periodicals, Inc.",,Differentially constrained mobile robot motion planning in state lattices,x,,,x,,,,,,,NO,
S1348,2,bkwd,journalArticle,2012,"Chitta, Sachin; Sucan, Ioan; Cousins, Steve",IEEE Robotics & Automation Magazine,10.1109/MRA.2011.2181749,http://ieeexplore.ieee.org/document/6174325/,,,MoveIt! [ROS Topics],,,,,x,,,,,,NO,
S1347,2,bkwd,journalArticle,2007,"Grisetti, Giorgio; Stachniss, Cyrill; Burgard, Wolfram",IEEE Transactions on Robotics,10.1109/TRO.2006.889486,,"Recently, Rao-Blackwellized particle filters (RBPF) have been introduced as an effective means to solve the simultaneous localization and mapping problem. This approach uses a particle filter in which each particle carries an individual map of the environment. Accordingly, a key question is how to reduce the number of particles. In this paper, we present adaptive techniques for reducing this number in a RBPF for learning grid maps. We propose an approach to compute an accurate proposal distribution, taking into account not only the movement of the robot, but also the most recent observation. This drastically decreases the uncertainty about the robot's pose in the prediction step of the filter. Furthermore, we present an approach to selectively carry out resampling operations, which seriously reduces the problem of particle depletion. Experimental results carried out with real mobile robots in large-scale indoor, as well as outdoor, environments illustrate the advantages of our methods over previous approaches",Adaptive resampling; Computer science; Contracts; Distributed computing; improved proposal; Mobile robots; motion model; Orbital robotics; Particle filters; Proposals; Rao-Blackwellized particle filter (RBPF); Robot sensing systems; Simultaneous localization and mapping; simultaneous localization and mapping (SLAM); Uncertainty,Improved Techniques for Grid Mapping With Rao-Blackwellized Particle Filters,x,,,,,,,,,,NO,
S1346,2,bkwd,conferencePaper,2001,"Fox, Dieter",In Advances in Neural Information Processing Systems (NIPS,,,"We present a statistical approach to adapting the sample set size of particle filters on-thefly. The key idea of the KLD-sampling method is to bound the error introduced by the samplebased representation of the particle filter. Thereby, our approach chooses a small number of samples if the density is focused on a small subspace of the state space, and it chooses a large number of samples if the state uncertainty is high. Both the implementation and computation overhead of this approach are small. Extensive experiments using mobile robot localization as a test application show that our approach yields drastic improvements over particle filters with fixed sample set sizes and over a previously introduced adaptation technique. 1",,KLD-Sampling: Adaptive Particle Filters and Mobile Robot Localization,x,,,,,,,,,,NO,
S1345,2,bkwd,conferencePaper,2016,"Krajník, Tomáš; Pulido Fentanes, Jaime; Hanheide, Marc; Duckett, Tom",2016 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS.2016.7759671,,"We present a lifelong mapping and localisation system for long-term autonomous operation of mobile robots in changing environments. The core of the system is a spatio-temporal occupancy grid that explicitly represents the persistence and periodicity of the individual cells and can predict the probability of their occupancy in the future. During navigation, our robot builds temporally local maps and integrates then into the global spatio-temporal grid. Through re-observation of the same locations, the spatio-temporal grid learns the long-term environment dynamics and gains the ability to predict the future environment states. This predictive ability allows to generate time-specific 2d maps used by the robot's localisation and planning modules. By analysing data from a long-term deployment of the robot in a human-populated environment, we show that the proposed representation improves localisation accuracy and the efficiency of path planning. We also show how to integrate the method into the ROS navigation stack for use by other roboticists.",long-term autonomy; mobile robotics; Navigation; Planning; Predictive models; Robot kinematics; Robot sensing systems; Two dimensional displays,Persistent localization and life-long mapping in changing environments using the Frequency Map Enhancement,x,,,,,,,,,,NO,
S1344,2,bkwd,conferencePaper,2015,"Xu, Qunshan; Zhao, Jianghai; Zhang, Chunxia; He, Feng",2015 IEEE International Conference on Mechatronics and Automation (ICMA),10.1109/ICMA.2015.7237831,,"The presented work describes how to implement an autonomous navigation system on wheeled mobile robots based on Robot Operating System (ROS). ROS contains many reusable software stacks and we have analyzed location issues, map building and autonomous navigation packages in this work. With regard to our own designed robot, the hardware and software architectures are presented. Besides, robotic kinematics of motion has been discussed for the four-wheel differential drive mechanism of our robot. An inertial measurement unit is used to assist in providing a more accurate odometry model and precisely localizing robot itself within the world during the process of navigation. Experimental results carried out with a service robot are shown in this paper to demonstrate the performance of the designed system.",Autonomous mobile robots; Mobile robots; navigation; Navigation; odometry model; Robot kinematics; robot operating system; Simultaneous localization and mapping; Wheels,Design and implementation of an ROS based autonomous navigation system,,x,,x,,,,,,,NO,
S1343,2,bkwd,conferencePaper,2014,"Lu, David V.; Hershberger, Dave; Smart, William D.",2014 IEEE/RSJ International Conference on Intelligent Robots and Systems,10.1109/IROS.2014.6942636,,"Many navigation systems, including the ubiquitous ROS navigation stack, perform path-planning on a single costmap, in which the majority of information is stored in a single grid. This approach is quite successful at generating collision-free paths of minimal length, but it can struggle in dynamic, people-filled environments when the values in the costmap expand beyond occupied or free space. We have created and implemented a new method called layered costmaps, which work by separating the processing of costmap data into semantically-separated layers. Each layer tracks one type of obstacle or constraint, and then modifies a master costmap which is used for the path planning. We show how the algorithm can be integrated with the open-source ROS navigation stack, and how our approach is easier to fine-tune to specific environmental contexts than the existing monolithic one. Our design also results in faster path planning in practical use, and exhibits a cleaner separation of concerns that the original architecture. The new algorithm also makes it possible to represent complex cost values in order to create navigation behavior for a wide range of contexts.",Collision avoidance; Context; Navigation; Path planning; Robot sensing systems; Semantics,Layered costmaps for context-sensitive navigation,,x,,,,,,,,,NO,
S1342,2,bkwd,conferencePaper,2013,"Reid, Robert; Cann, Andrew; Meiklejohn, Calum; Poli, Liam; Boeing, Adrian; Braunl, Thomas",2013 IEEE Intelligent Vehicles Symposium (IV),10.1109/IVS.2013.6629610,,"This article describes WAMbot, a multi-robot system designed to navigate, explore and map large-scale urban environments while performing visual object recognition. The system can be easily adapted and deployed into a variety of scenarios such as search and rescue or surveillance. The original WAMbot system was developed for the Multi Autonomous Ground-robotic International Challenge in 2010 (MAGIC 2010). It successfully passed a competitive down-selection process and placed 4th in the final challenge. Our ongoing work has been to modularize the WAMbot system further, and standardize it using the open source Robot Operating System (ROS) software framework. We describe the core components, or stacks, in the new WAMbot system including: 1) a large-scale mapping stack capable of building 500×500m global maps from over 20 robots in real-time, 2) an efficient, frontier-based multi-robot exploration stack, 3) a navigation stack including a centralized global planner with decentralized local navigation and 4) an intuitive graph-based visual object recognition pipeline.",Cameras; Navigation; Object recognition; Robot kinematics; Simultaneous localization and mapping; Visualization,"Cooperative multi-robot navigation, exploration, mapping and object detection with ROS",,x,,,,,,,,,NO,
S1341,2,bkwd,journalArticle,,"Likhachev, Maxim",,,,,,Search-based Planning Library SBPL,x,,,,,,,,,,NO,
S1340,2,bkwd,book,2014,"O'Kane, Jason M.",,,,,,A gentle introduction to ROS,,,,,x,,,,,,NO,
S1339,2,bkwd,journalArticle,2012,"Sucan, Ioan A.; Moll, Mark; Kavraki, Lydia E.",IEEE Robotics Automation Magazine,10.1109/MRA.2012.2205651,,"The open motion planning library (OMPL) is a new library for sampling-based motion planning, which contains implementations of many state-of-the-art planning algorithms. The library is designed in a way that it allows the user to easily solve a variety of complex motion planning problems with minimal input. OMPL facilitates the addition of new motion planning algorithms, and it can be conveniently interfaced with other software components. A simple graphical user interface (GUI) built on top of the library, a number of tutorials, demos, and programming assignments are designed to teach students about sampling-based motion planning. The library is also available for use through Robot Operating System (ROS).",Aerospace electronics; Benchmark testing; Libraries; Planning; Robots; Software; Software algorithms,The Open Motion Planning Library,,x,,,,,,,,,NO,
S1338,2,bkwd,conferencePaper,2011,"Rusu, Radu Bogdan; Cousins, Steve",2011 IEEE International Conference on Robotics and Automation,10.1109/ICRA.2011.5980567,,"With the advent of new, low-cost 3D sensing hardware such as the Kinect, and continued efforts in advanced point cloud processing, 3D perception gains more and more importance in robotics, as well as other fields. In this paper we present one of our most recent initiatives in the areas of point cloud perception: PCL (Point Cloud Library - http://pointclouds.org). PCL presents an advanced and extensive approach to the subject of 3D perception, and it's meant to provide support for all the common 3D building blocks that applications need. The library contains state-of-the art algorithms for: filtering, feature estimation, surface reconstruction, registration, model fitting and segmentation. PCL is supported by an international community of robotics and perception researchers. We provide a brief walkthrough of PCL including its algorithmic capabilities and implementation strategies.",,3D is here: Point Cloud Library (PCL),x,,,,,,,,,,NO,
S1337,2,bkwd,journalArticle,2015,"Agüero, Carlos E.; Koenig, Nate; Chen, Ian; Boyer, Hugo; Peters, Steven; Hsu, John; Gerkey, Brian; Paepcke, Steffi; Rivero, Jose L.; Manzo, Justin; Krotkov, Eric; Pratt, Gill",IEEE Transactions on Automation Science and Engineering,10.1109/TASE.2014.2368997,,"This paper presents the software framework established to facilitate cloud-hosted robot simulation. The framework addresses the challenges associated with conducting a task-oriented and real-time robot competition, the Defense Advanced Research Projects Agency (DARPA) Virtual Robotics Challenge (VRC), designed to mimic reality. The core of the framework is the Gazebo simulator, a platform to simulate robots, objects, and environments, as well as the enhancements made for the VRC to maintain a high fidelity simulation using a high degree of freedom and multisensor robot. The other major component used is the CloudSim tool, designed to enhance the automation of robotics simulation using existing cloud technologies. The results from the VRC and a discussion are also detailed in this work. Note to Practitioners - Advances in robot simulation, cloud hosted infrastructure, and web technology have made it possible to accurately and efficiently simulate complex robots and environments on remote servers while providing realistic data streams for human-in-the-loop robot control. This paper presents the software and hardware frameworks established to facilitate cloud-hosted robot simulation, and addresses the challenges associated with conducting a task-oriented robot competition designed to mimic reality. The competition that spurred this innovation was the VRC, a precursor to the DARPA Robotics Challenge, in which teams from around the world utilized custom human-robot interfaces and control code to solve disaster response-related tasks in simulation. Winners of the VRC received both funding and access to Atlas, a humanoid robot developed by Boston Dynamics. The Gazebo simulator, an open source and high fidelity robot simulator, was improved upon to met the needs of the VRC competition. Additionally, CloudSim was created to act as an interface between users and the cloud-hosted simulations. As a result of this work, we have achieved automated deployment of cloud resources for robotic simulations, near real-time simulation performance, and simulation accuracy that closely mimics real hardware. These tools have been released under open source licenses and are freely available, and can be used to help reduce robot and algorithm design and development time, and increase robot software robustness.",Cloud robotics; Computational modeling; Computer architecture; Computers; real-time robot simulation; Real-time systems; Robot sensing systems; robotic disaster response; Servers,Inside the Virtual Robotics Challenge: Simulating Real-Time Robotic Disaster Response,x,,,x,,,,,,,NO,
S1336,2,bkwd,journalArticle,2011,"Cousins, S.",IEEE Robotics & Automation Magazine,10.1109/MRA.2010.940147,https://www.infona.pl//resource/bwmeta1.element.ieee-art-000005751985,"This paper discusses about open-source robot operating system (ROS). ROS has expanded to include dozens of robots and an exponentially growing amount of code. Robot operating system has served as one of the premier libraries for robotics code in the world. Software shared through ROS is available for anyone to use, edit, and update.",,Exponential Growth of ROS [ROS Topics],,,,,x,,,,,,NO,
S1335,2,bkwd,book,2015,"Quigley, Morgan; Gerkey, Brian; Smart, William D.",,,,"Want to develop novel robot applications, but don’t know how to write a mapping or object-recognition system? You’re not alone, but you’re certainly not without help. By combining real-world examples with valuable knowledge from the Robot Operating System (ROS) community, this practical book provides a set of motivating recipes for solving specific robotics use cases.Ideal for enthusiasts, from students in robotics clubs to professional robotics scientists and engineers, each recipe describes a complete solution using ROS open source libraries and tools. You’ll learn how to complete tasks described in the recipes, as well as how to configure and recombine components for other tasks. If you’re familiar with Python, you’re ready to go.Learn fundamentals, including key ROS concepts, tools, and patternsProgram robots that perform an increasingly complex set of behaviors, using the powerful packages in ROSSee how to easily add perception and navigation abilities to your robotsIntegrate your own sensors, actuators, software libraries, and even a whole robot into the ROS ecosystemLearn tips and tricks for using ROS tools and community resources, debugging robot behavior, and using C++ in ROS",Computers / Computer Science; Computers / Languages / Python; Computers / Programming / Open Source; TECHNOLOGY & ENGINEERING / Engineering (General),Programming Robots with ROS: A Practical Introduction to the Robot Operating System,,,,,,,,,x,,NO,
S1334,2,bkwd,journalArticle,,"Quigley, Morgan; Gerkey, Brian; Conley, Ken; Faust, Josh; Foote, Tully; Leibs, Jeremy; Berger, Eric; Wheeler, Rob; Ng, Andrew",,,,"This paper gives an overview of ROS, an opensource robot operating system. ROS is not an operating system in the traditional sense of process management and scheduling; rather, it provides a structured communications layer above the host operating systems of a heterogenous compute cluster. In this paper, we discuss how ROS relates to existing robot software frameworks, and brieﬂy overview some of the available application software which uses ROS.",,ROS: an open-source Robot Operating System,,x,,,,,,,,,NO,
S1333,2,bkwd,journalArticle,2015,"Fallon, Maurice; Kuindersma, Scott; Karumanchi, Sisir; Antone, Matthew; Schneider, Toby; Dai, Hongkai; D'Arpino, Claudia Pérez; Deits, Robin; DiCicco, Matt; Fourie, Dehann; Koolen, Twan; Marion, Pat; Posa, Michael; Valenzuela, Andrés; Yu, Kuan-Ting; Shah, Julie; Iagnemma, Karl; Tedrake, Russ; Teller, Seth",Journal of Field Robotics,10.1002/rob.21546,https://onlinelibrary.wiley.com/doi/abs/10.1002/rob.21546,"The DARPA Robotics Challenge Trials held in December 2013 provided a landmark demonstration of dexterous mobile robots executing a variety of tasks aided by a remote human operator using only data from the robot's sensor suite transmitted over a constrained, field-realistic communications link. We describe the design considerations, architecture, implementation, and performance of the software that Team MIT developed to command and control an Atlas humanoid robot. Our design emphasized human interaction with an efficient motion planner, where operators expressed desired robot actions in terms of affordances fit using perception and manipulated in a custom user interface. We highlight several important lessons we learned while developing our system on a highly compressed schedule.",,An Architecture for Online Affordance-based Perception and Whole-body Planning,x,,,,,,,,,,NO,
S1332,2,bkwd,journalArticle,2017,"Johnson, Matthew; Shrewsbury, Brandon; Bertrand, Sylvain; Calvert, Duncan; Wu, Tingfan; Duran, Daniel; Stephen, Douglas; Mertins, Nathan; Carff, John; Rifenburgh, William; Smith, Jesper; Schmidt-Wetekam, Chris; Faconti, Davide; Graber-Tilton, Alex; Eyssette, Nicolas; Meier, Tobias; Kalkov, Igor; Craig, Travis; Payton, Nick; McCrory, Stephen; Wiedebach, Georg; Layton, Brooke; Neuhaus, Peter; Pratt, Jerry",Journal of Field Robotics,10.1002/rob.21674,https://onlinelibrary.wiley.com/doi/abs/10.1002/rob.21674,"This article presents a retrospective analysis of Team IHMC's experience throughout the DARPA Robotics Challenge (DRC), where we took first or second place overall in each of the three phases. As an extremely demanding challenge typical of DARPA, the DRC required rapid research and development to push the boundaries of robotics and set a new benchmark for complex robotic behavior. We present how we addressed each of the eight tasks of the DRC and review our performance in the Finals. While the ambitious competition schedule limited extensive experimentation, we will review the data we collected during the approximately three years of our participation. We discuss some of the significant lessons learned that contributed to our success in the DRC. These include hardware lessons, software lessons, and human-robot integration lessons. We describe refinements to the coactive design methodology that helped our designers connect human–machine interaction theory to both implementation and empirical data. This approach helped our team focus our limited resources on the issues most critical to success. In addition to helping readers understand our experiences in developing on a Boston Dynamics Atlas robot for the DRC, we hope this article will provide insights that apply more widely to robotics development and design of human–machine systems.",,Team IHMC's Lessons Learned from the DARPA Robotics Challenge: Finding Data in the Rubble,,,,,x,,,,,,NO,
S1331,2,bkwd,journalArticle,2008,"Bacha, Andrew; Bauman, Cheryl; Faruque, Ruel; Fleming, Michael; Terwelp, Chris; Reinholtz, Charles; Hong, Dennis; Wicks, Al; Alberi, Thomas; Anderson, David; Cacciola, Stephen; Currier, Patrick; Dalton, Aaron; Farmer, Jesse; Hurdus, Jesse; Kimmel, Shawn; King, Peter; Taylor, Andrew; Covern, David Van; Webster, Mike",Journal of Field Robotics,10.1002/rob.20248,https://onlinelibrary.wiley.com/doi/abs/10.1002/rob.20248,"The DARPA Urban Challenge required robotic vehicles to travel more than 90 km through an urban environment without human intervention and included situations such as stop intersections, traffic merges, parking, and roadblocks. Team VictorTango separated the problem into three parts: base vehicle, perception, and planning. A Ford Escape outfitted with a custom drive-by-wire system and computers formed the basis for Odin. Perception used laser scanners, global positioning system, and a priori knowledge to identify obstacles, cars, and roads. Planning relied on a hybrid deliberative/reactive architecture to analyze the situation, select the appropriate behavior, and plan a safe path. All vehicle modules communicated using the JAUS (Joint Architecture for Unmanned Systems) standard. The performance of these components in the Urban Challenge is discussed and successes noted. The result of VictorTango's work was successful completion of the Urban Challenge and a third-place finish. © 2008 Wiley Periodicals, Inc.",,Odin: Team VictorTango's entry in the DARPA Urban Challenge,x,,,x,,,,,,,NO,
S1330,2,bkwd,journalArticle,2008,"Montemerlo, Michael; Becker, Jan; Bhat, Suhrid; Dahlkamp, Hendrik; Dolgov, Dmitri; Ettinger, Scott; Haehnel, Dirk; Hilden, Tim; Hoffmann, Gabe; Huhnke, Burkhard; Johnston, Doug; Klumpp, Stefan; Langer, Dirk; Levandowski, Anthony; Levinson, Jesse; Marcil, Julien; Orenstein, David; Paefgen, Johannes; Penny, Isaac; Petrovskaya, Anna; Pflueger, Mike; Stanek, Ganymed; Stavens, David; Vogt, Antone; Thrun, Sebastian",Journal of Field Robotics,10.1002/rob.20258,https://onlinelibrary.wiley.com/doi/abs/10.1002/rob.20258,"This article presents the architecture of Junior, a robotic vehicle capable of navigating urban environments autonomously. In doing so, the vehicle is able to select its own routes, perceive and interact with other traffic, and execute various urban driving skills including lane changes, U-turns, parking, and merging into moving traffic. The vehicle successfully finished and won second place in the DARPA Urban Challenge, a robot competition organized by the U.S. Government. © 2008 Wiley Periodicals, Inc.",,Junior: The Stanford entry in the Urban Challenge,x,,,x,,,,,,,NO,
S1329,2,bkwd,journalArticle,2008,"Urmson, Chris; Anhalt, Joshua; Bagnell, Drew; Baker, Christopher; Bittner, Robert; Clark, M. N.; Dolan, John; Duggins, Dave; Galatali, Tugrul; Geyer, Chris; Gittleman, Michele; Harbaugh, Sam; Hebert, Martial; Howard, Thomas M.; Kolski, Sascha; Kelly, Alonzo; Likhachev, Maxim; McNaughton, Matt; Miller, Nick; Peterson, Kevin; Pilnick, Brian; Rajkumar, Raj; Rybski, Paul; Salesky, Bryan; Seo, Young-Woo; Singh, Sanjiv; Snider, Jarrod; Stentz, Anthony; Whittaker, William “Red”; Wolkowicki, Ziv; Ziglar, Jason; Bae, Hong; Brown, Thomas; Demitrish, Daniel; Litkouhi, Bakhtiar; Nickolaou, Jim; Sadekar, Varsha; Zhang, Wende; Struble, Joshua; Taylor, Michael; Darms, Michael; Ferguson, Dave",Journal of Field Robotics,10.1002/rob.20255,https://onlinelibrary.wiley.com/doi/abs/10.1002/rob.20255,"Boss is an autonomous vehicle that uses on-board sensors (global positioning system, lasers, radars, and cameras) to track other vehicles, detect static obstacles, and localize itself relative to a road model. A three-layer planning system combines mission, behavioral, and motion planning to drive in urban environments. The mission planning layer considers which street to take to achieve a mission goal. The behavioral layer determines when to change lanes and precedence at intersections and performs error recovery maneuvers. The motion planning layer selects actions to avoid obstacles while making progress toward local goals. The system was developed from the ground up to address the requirements of the DARPA Urban Challenge using a spiral system development process with a heavy emphasis on regular, regressive system testing. During the National Qualification Event and the 85-km Urban Challenge Final Event, Boss demonstrated some of its capabilities, qualifying first and winning the challenge. © 2008 Wiley Periodicals, Inc.",,Autonomous driving in urban environments: Boss and the Urban Challenge,x,,,,,,,,,,NO,
S1328,2,bkwd,journalArticle,2006,"Thrun, Sebastian; Montemerlo, Mike; Dahlkamp, Hendrik; Stavens, David; Aron, Andrei; Diebel, James; Fong, Philip; Gale, John; Halpenny, Morgan; Hoffmann, Gabriel; Lau, Kenny; Oakley, Celia; Palatucci, Mark; Pratt, Vaughan; Stang, Pascal; Strohband, Sven; Dupont, Cedric; Jendrossek, Lars-Erik; Koelen, Christian; Markey, Charles; Rummel, Carlo; Niekerk, Joe van; Jensen, Eric; Alessandrini, Philippe; Bradski, Gary; Davies, Bob; Ettinger, Scott; Kaehler, Adrian; Nefian, Ara; Mahoney, Pamela",Journal of Field Robotics,10.1002/rob.20147,https://onlinelibrary.wiley.com/doi/abs/10.1002/rob.20147,"This article describes the robot Stanley, which won the 2005 DARPA Grand Challenge. Stanley was developed for high-speed desert driving without manual intervention. The robot's software system relied predominately on state-of-the-art artificial intelligence technologies, such as machine learning and probabilistic reasoning. This paper describes the major components of this architecture, and discusses the results of the Grand Challenge race. © 2006 Wiley Periodicals, Inc.",,Stanley: The robot that won the DARPA Grand Challenge,x,,,,,,,,,,NO,
S1327,2,bkwd,journalArticle,1997,"Arkin, Ronald C.; Balch, Tucker",Journal of Experimental & Theoretical Artificial Intelligence,10.1080/095281397147068,https://doi.org/10.1080/095281397147068,"This paper reviews key concepts of the Autonomous Robot Architecture (AuRA). Its structure, strengths, and roots in biology are presented. AuRA is a hybrid deliberative/ reactive robotic architecture that has been developed and refined over the past decade. In this article, particular focus is placed on the reactive behavioural component of this hybrid architecture. Various real world robots that have been implemented using this architectural paradigm are discussed, including a case study of a multiagent robotic team that competed and won the 1994 AAAI Mobile Robot Competition.",,AuRA: principles and practice in review,x,,,,,,,,,,NO,
S1326,2,bkwd,conferencePaper,2016,"Schillinger, Philipp; Kohlbrecher, Stefan; von Stryk, Oskar",2016 IEEE International Conference on Robotics and Automation (ICRA),10.1109/ICRA.2016.7487442,,"Motivated by the DARPA Robotics Challenge (DRC), the application of operator assisted (semi-)autonomous robots with highly complex locomotion and manipulation abilities is considered for solving complex tasks in potentially unknown and unstructured environments. Because of the limited a priori knowledge about the state of the environment and tasks needed to achieve a complex mission, a sufficiently complete a priori design of high level robot behaviors is not possible. Most of the situational knowledge required for such behavior design is gathered only during runtime and needs to be interpreted by a human operator. However, current behavior control approaches only allow for very limited adaptation at runtime and no flexible operator interaction. In this paper an approach for definition and execution of complex robot behaviors based on hierarchical state machines is presented, allowing to flexibly change the structure of behaviors on the fly during runtime through assistance of a remote operator. The efficiency of the proposed approach is demonstrated and evaluated not only in an example scenario, but also by application in two robot competitions.",Collaboration; Context; Navigation; Robot kinematics; Runtime; XML,Human-robot collaborative high-level control with application to rescue robotics,x,,,,,,,,,,NO,
S1325,2,bkwd,conferencePaper,2010,"Marder-Eppstein, Eitan; Berger, Eric; Foote, Tully; Gerkey, Brian; Konolige, Kurt",2010 IEEE International Conference on Robotics and Automation,10.1109/ROBOT.2010.5509725,,"This paper describes a navigation system that allowed a robot to complete 26.2 miles of autonomous navigation in a real office environment. We present the methods required to achieve this level of robustness, including an efficient Voxel-based 3D mapping algorithm that explicitly models unknown space. We also provide an open-source implementation of the algorithms used, as well as simulated environments in which our results can be verified.",Mobile robots; Open source software; Orbital robotics; Robot sensing systems; Robotics and automation; Robustness; Sensor arrays; Sonar navigation; Space technology; USA Councils,The Office Marathon: Robust navigation in an indoor office environment,x,,,,,,,,,,NO,
S1324,2,bkwd,journalArticle,2017,"Romay, Alberto; Kohlbrecher, Stefan; Stumpf, Alexander; von Stryk, Oskar; Maniatopoulos, Spyros; Kress-Gazit, Hadas; Schillinger, Philipp; Conner, David C.",Journal of Field Robotics,10.1002/rob.21671,https://onlinelibrary.wiley.com/doi/abs/10.1002/rob.21671,"Team ViGIR and Team Hector participated in the DARPA Robotics Challenge (DRC) Finals, held June 2015 in Pomona, California, along with 21 other teams from around the world. Both teams competed using the same high-level software, in conjunction with independently developed low-level software specific to their humanoid robots. On the basis of previous work on operator-centric manipulation control at the level of affordances, we developed an approach that allows one or more human operators to share control authority with a high-level behavior controller. This collaborative autonomy decreases the completion time of manipulation tasks, increases the reliability of the human-robot team, and allows the operators to adjust the robotic system's autonomy on-the-fly. This article discusses the technical challenges we faced and overcame during our efforts to allow the human operators to interact with the robotic system at a higher level of abstraction and share control authority with it. We introduce and evaluate the proposed approach in the context of our two teams' participation in the DRC Finals. We also present additional, systematic experiments conducted in the lab afterward. Finally, we present a discussion about the lessons learned while transitioning between operator-centered manipulation control and behavior-centered manipulation control during competition.",,Collaborative Autonomy between High-level Behaviors and Human Operators for Remote Manipulation Tasks using Different Humanoid Robots,x,,,x,,,,,,,NO,
S1323,2,bkwd,journalArticle,2015,"DeDonato, Mathew; Dimitrov, Velin; Du, Ruixiang; Giovacchini, Ryan; Knoedler, Kevin; Long, Xianchao; Polido, Felipe; Gennert, Michael A.; Padır, Taşkın; Feng, Siyuan; Moriguchi, Hirotaka; Whitman, Eric; Xinjilefu, X.; Atkeson, Christopher G.",Journal of Field Robotics,10.1002/rob.21567,https://onlinelibrary.wiley.com/doi/abs/10.1002/rob.21567,"The DARPA Robotics Challenge (DRC) requires teams to integrate mobility, manipulation, and perception to accomplish several disaster-response tasks. We describe our hardware choices and software architecture, which enable human-in-the-loop control of a 28 degree-of-freedom Atlas humanoid robot over a limited bandwidth link. We discuss our methods, results, and lessons learned for the DRC Trials tasks. The effectiveness of our system architecture was demonstrated as the WPI-CMU DRC Team scored 11 out of a possible 32 points, ranked seventh (out of 16) at the DRC Trials, and was selected as a finalist for the DRC Finals.",,Human-in-the-loop Control of a Humanoid Robot for Disaster Response: A Report from the DARPA Robotics Challenge Trials,x,,,,,,,,,,NO,
S1322,2,bkwd,journalArticle,2015,"Stentz, Anthony; Herman, Herman; Kelly, Alonzo; Meyhofer, Eric; Haynes, G. Clark; Stager, David; Zajac, Brian; Bagnell, J. Andrew; Brindza, Jordan; Dellin, Christopher; George, Michael; Gonzalez-Mora, Jose; Hyde, Sean; Jones, Morgan; Laverne, Michel; Likhachev, Maxim; Lister, Levi; Powers, Matt; Ramos, Oscar; Ray, Justin; Rice, David; Scheifflee, Justin; Sidki, Raumi; Srinivasa, Siddhartha; Strabala, Kyle; Tardif, Jean-Philippe; Valois, Jean-Sebastien; Weghe, J. Michael Vande; Wagner, Michael; Wellington, Carl",Journal of Field Robotics,10.1002/rob.21569,https://onlinelibrary.wiley.com/doi/abs/10.1002/rob.21569,"We have developed the CHIMP (CMU Highly Intelligent Mobile Platform) robot as a platform for executing complex tasks in dangerous, degraded, human-engineered environments. CHIMP has a near-human form factor, work-envelope, strength, and dexterity to work effectively in these environments. It avoids the need for complex control by maintaining static rather than dynamic stability. Utilizing various sensors embedded in the robot's head, CHIMP generates full three-dimensional representations of its environment and transmits these models to a human operator to achieve latency-free situational awareness. This awareness is used to visualize the robot within its environment and preview candidate free-space motions. Operators using CHIMP are able to select between task, workspace, and joint space control modes to trade between speed and generality. Thus, they are able to perform remote tasks quickly, confidently, and reliably, due to the overall design of the robot and software. CHIMP's hardware was designed, built, and tested over 15 months leading up to the DARPA Robotics Challenge. The software was developed in parallel using surrogate hardware and simulation tools. Over a six-week span prior to the DRC Trials, the software was ported to the robot, the system was debugged, and the tasks were practiced continuously. Given the aggressive schedule leading to the DRC Trials, development of CHIMP focused primarily on manipulation tasks. Nonetheless, our team finished 3rd out of 16. With an upcoming year to develop new software for CHIMP, we look forward to improving the robot's capability and increasing its speed to compete in the DRC Finals.",,"CHIMP, the CMU Highly Intelligent Mobile Platform",x,,,,,,,,,,NO,
S1321,2,bkwd,journalArticle,,"Quigley, Morgan; Gerkey, Brian; Conley, Ken; Faust, Josh; Foote, Tully; Leibs, Jeremy; Berger, Eric; Wheeler, Rob; Ng, Andrew",,,,"This paper gives an overview of ROS, an opensource robot operating system. ROS is not an operating system in the traditional sense of process management and scheduling; rather, it provides a structured communications layer above the host operating systems of a heterogenous compute cluster. In this paper, we discuss how ROS relates to existing robot software frameworks, and brieﬂy overview some of the available application software which uses ROS.",,ROS: an open-source Robot Operating System,,x,,,,,,,,,NO,
S1320,2,bkwd,book,2010,"Utting, Mark; Legeard, Bruno",,,,"Practical Model-Based Testing gives a practical introduction to model-based testing, showing how to write models for testing purposes and how to use model-based testing tools to generate test suites. It is aimed at testers and software developers who wish to use model-based testing, rather than at tool-developers or academics. The book focuses on the mainstream practice of functional black-box testing and covers different styles of models, especially transition-based models (UML state machines) and pre/post models (UML/OCL specifications and B notation). The steps of applying model-based testing are demonstrated on examples and case studies from a variety of software domains, including embedded software and information systems. From this book you will learn: The basic principles and terminology of model-based testingHow model-based testing differs from other testing processesHow model-based testing fits into typical software lifecycles such as agile methods and the Unified ProcessThe benefits and limitations of model-based testing, its cost effectiveness and how it can reduce time-to-marketA step-by-step process for applying model-based testingHow to write good models for model-based testingHow to use a variety of test selection criteria to control the tests that are generated from your modelsHow model-based testing can connect to existing automated test execution platforms such as Mercury Test Director, Java JUnit, and proprietary test execution environmentsPresents the basic principles and terminology of model-based testingShows how model-based testing fits into the software lifecycle, its cost-effectiveness, and how it can reduce time to marketOffers guidance on how to use different kinds of modeling techniques, useful test generation strategies, how to apply model-based testing techniques to real applications using case studies",Computers / Languages / General; Computers / Programming / General; Computers / Programming / Object Oriented,Practical Model-Based Testing: A Tools Approach,x,,,,,,,,,,NO,
S1319,2,bkwd,conferencePaper,2014,"Monajjemi, Valiallah; Wawerla, Jens; Vaughan, Richard",2014 Canadian Conference on Computer and Robot Vision,10.1109/CRV.2014.36,,"We introduce Drums, a new tool for monitoring and debugging distributed robot systems, and a complement to robot middleware systems. Drums provides online time-series monitoring of the underlying resources that are partially abstracted away by middleware like ROS. Interfacing with the middleware, Drums provides de-abstraction and de-multiplexing of middleware services to reveal the system-level interactions of your controller code, the middleware, OS and the robot(s) environment. We show worked examples of Drums' utility for debugging realistic problems, and propose it as a tool for quality of service monitoring and introspection for robust autonomous systems.",Computer architecture; Distributed Monitoring; Fault Detection and Diagnosis; Libraries; Middleware; Monitoring; Robot Monitoring System; Robots; Sockets,Drums: A Middleware-Aware Distributed Robot Monitoring System,,x,,,,,,,,,NO,
S1318,2,bkwd,conferencePaper,2014,"Kunze, Lars; Doreswamy, Keerthi Kumar; Hawes, Nick",2014 IEEE International Conference on Robotics and Automation (ICRA),10.1109/ICRA.2014.6906604,,"Finding objects in human environments requires autonomous mobile robots to reason about potential object locations and to plan to perceive them accordingly. By using information about the 3D structure of the environment, knowledge about landmark objects and their spatial relationship to the sought object, search can be improved by directing the robot towards the most likely object locations. In this paper we have designed, implemented and evaluated an approach for searching for objects on the basis of Qualitative Spatial Relations (QSRs) such as left-of and in-front-of. On the basis of QSRs between landmarks and the sought object we generate metric poses of potential object locations using an extended version of the ternary point calculus and employ this information for view planning. Preliminary results show that search methods based on QSRs are faster and more reliable than methods not considering them.",Keyboards; Monitoring; Robots; Search problems; Three-dimensional displays; Visualization,Using Qualitative Spatial Relations for indirect object search,x,,,,,,,,,,NO,
S1317,2,bkwd,conferencePaper,2014,"Kunze, Lars; Burbridge, Chris; Alberti, Marina; Thippur, Akshaya; Folkesson, John; Jensfelt, Patric; Hawes, Nick",2014 IEEE/RSJ International Conference on Intelligent Robots and Systems,10.1109/IROS.2014.6942963,,"Many robot perception systems are built to only consider intrinsic object features to recognise the class of an object. By integrating both top-down spatial relational reasoning and bottom-up object class recognition the overall performance of a perception system can be improved. In this paper we present a unified framework that combines a 3D object class recognition system with learned, spatial models of object relations. In robot experiments we show that our combined approach improves the classification results on real world office desks compared to pure bottom-up perception. Hence, by using spatial knowledge during object class recognition perception becomes more efficient and robust and robots can understand scenes more effectively.",Cognition; Context; Keyboards; Measurement; Robots; Three-dimensional displays; Training,Combining top-down spatial reasoning and bottom-up object class recognition for scene understanding,x,,,,,,,,,,NO,
S1316,2,bkwd,conferencePaper,2014,"Krajník, Tomáš; Fentanes, Jaime P.; Mozos, Oscar M.; Duckett, Tom; Ekekrantz, Johan; Hanheide, Marc",2014 IEEE/RSJ International Conference on Intelligent Robots and Systems,10.1109/IROS.2014.6943205,,"This paper presents a new approach for topological localisation of service robots in dynamic indoor environments. In contrast to typical localisation approaches that rely mainly on static parts of the environment, our approach makes explicit use of information about changes by learning and modelling the spatio-temporal dynamics of the environment where the robot is acting. The proposed spatio-temporal world model is able to predict environmental changes in time, allowing the robot to improve its localisation capabilities during long-term operations in populated environments. To investigate the proposed approach, we have enabled a mobile robot to autonomously patrol a populated environment over a period of one week while building the proposed model representation. We demonstrate that the experience learned during one week is applicable for topological localization even after a hiatus of three months by showing that the localization error rate is significantly lower compared to static environment representations.",Feature extraction; Fourier transforms; Mathematical model; mobile robotics; Predictive models; Service robots; spatio-temporal representations; Three-dimensional displays; topological localisation,Long-term topological localisation for service robots in dynamic environments using spectral maps,x,,,,,,,,,,NO,
S1315,2,bkwd,conferencePaper,2013,"Jiang, Hengle; Elbaum, Sebastian; Detweiler, Carrick",2013 IEEE/RSJ International Conference on Intelligent Robots and Systems,10.1109/IROS.2013.6696608,,"System monitoring can help to detect abnormalities and avoid failures. Crafting monitors for today's robotic systems, however, can be very difficult due to the systems' inherent complexity. In this work we address this challenge through an approach that automatically infers system invariants and synthesizes those invariants into monitors. The approach is novel in that it derives invariants by observing the messages passed between system nodes and the invariants types are tailored to match the spatial, temporal, and operational attributes of robotic systems. Further, the generated monitor can be seamlessly integrated into systems built on top of publish-subscribe architectures. An application of the technique on a system consisting of a unmanned aerial vehicle (UAV) landing on a moving platform shows that it can significantly reduce the number of crashes in unexpected landing scenarios.",Context; Engines; Message passing; Monitoring; Robots; Standards; Training,Reducing failure rates of robotic systems though inferred invariants monitoring,x,,,,,,,,,,NO,
S1314,2,bkwd,bookSection,2008,"Hessel, Anders; Larsen, Kim G.; Mikucionis, Marius; Nielsen, Brian; Pettersson, Paul; Skou, Arne","Formal Methods and Testing: An Outcome of the FORTEST Network, Revised Selected Papers",,https://doi.org/10.1007/978-3-540-78917-8_3,"This chapter presents principles and techniques for model-based black-box conformance testing of real-time systems using the Uppaal model-checking tool-suite. The basis for testing is given as a network of concurrent timed automata specified by the test engineer. Relativized input/output conformance serves as the notion of implementation correctness, essentially timed trace inclusion taking environment assumptions into account. Test cases can be generated offline and later executed, or they can be generated and executed online. For both approaches this chapter discusses how to specify test objectives, derive test sequences, apply these to the system under test, and assign a verdict.",Coverage Criterion; Implementation Under Test; Test Case Generation; Test Generation; Test Purpose,Testing Real-Time Systems Using UPPAAL,x,,,,,,,,,,NO,
S1313,2,bkwd,conferencePaper,2011,"Golombek, Raphael; Wrede, Sebastian; Hanheide, Marc; Heckmann, Martin",2011 IEEE/RSJ International Conference on Intelligent Robots and Systems,10.1109/IROS.2011.6095034,,In this paper we demonstrate the online applicability of the fault detection and diagnosis approach which we previously developed and published in [1]. In our former work we showed that a purely data driven fault detection approach can be successfully built based on monitored inter-component communication data of a robotic system and used for a-posteriori fault detection. Here we propose an extension to this approach which is capable of online learning of the fault model as well as for online fault detection. We evaluate the application of our approach in the context of a RoboCup task executed by our service robot BIRON in corporation with an expert user.,Computational modeling; Data models; Delay; Fault detection; Hidden Markov models; Monitoring; Robots,Online data-driven fault detection for robotic systems,x,,,,,,,,,,NO,
S1312,2,bkwd,conferencePaper,2015,"Fentanes, Jaime Pulido; Lacerda, Bruno; Krajník, Tomáš; Hawes, Nick; Hanheide, Marc",2015 IEEE International Conference on Robotics and Automation (ICRA),10.1109/ICRA.2015.7139315,,"In planning for deliberation or navigation in real-world robotic systems, one of the big challenges is to cope with change. It lies in the nature of planning that it has to make assumptions about the future state of the world, and the robot's chances of successively accomplishing actions in this future. Hence, a robot's plan can only be as good as its predictions about the world. In this paper, we present a novel approach to specifically represent changes that stem from periodic events in the environment (e.g. a door being opened or closed), which impact on the success probability of planned actions. We show that our approach to model the probability of action success as a set of superimposed periodic processes allows the robot to predict action outcomes in a long-term data obtained in two real-life offices better than a static model. We furthermore discuss and showcase how this knowledge gathered can be successfully employed in a probabilistic planning framework to devise better navigation plans. The key contributions of this paper are (i) the formation of the spectral model of action outcomes from non-uniform sampling, the (ii) analysis of its predictive power using two long-term datasets, and (iii) the application of the predicted outcomes in an MDP-based planning framework.",Analytical models; Data models; long term; mobile robotics; Mobile robots; Navigation; path planning; Planning; Predictive models; spatio-temporal representations; topological map,Now or later? Predicting and maximising success of navigation actions from long-term experience,x,,,,,,,,,,NO,
S1311,2,bkwd,conferencePaper,2014,"Elbaum, Sebastian; Rosenblum, David S.",Proceedings of the 22nd ACM SIGSOFT International Symposium on Foundations of Software Engineering,10.1145/2635868.2666608,https://doi.org/10.1145/2635868.2666608,"Uncertainty is becoming more prevalent in the software systems we build, introducing challenges in the way we develop software, especially in software testing. In this work we explore how uncertainty affects software testing, how it is managed currently, and how it could be treated more effectively.",Fault Masking; Hidden Markov Models; Software Testing; Uncertainty Quantification,Known unknowns: testing in the presence of uncertainty,x,,,,,,,,,,NO,
S1310,2,bkwd,conferencePaper,2012,"Echeverria, Gilberto; Lemaignan, Séverin; Degroote, Arnaud; Lacroix, Simon; Karg, Michael; Koch, Pierrick; Lesire, Charles; Stinckwich, Serge","Simulation, Modeling, and Programming for Autonomous Robots",10.1007/978-3-642-34327-8_20,,"MORSE is a robotic simulation software developed by roboticists from several research laboratories. It is a framework to evaluate robotic algorithms and their integration in complex environments, modeled with the Blender 3D real-time engine which brings realistic rendering and physics simulation. The simulations can be specified at various levels of abstraction. This enables researchers to focus on their field of interest, that can range from processing low-level sensor data to the integration of a complete team of robots. After nearly three years of development, MORSE is a mature tool with a large collection of components, that provides many innovative features: software-in-the-loop connectivity, multiple middleware support, configurable components, varying levels of simulation abstraction, distributed implementation for large scale multi-robot simulations and a human avatar that can interact with robots in virtual environments. This paper presents the current state of MORSE, highlighting its unique features in use cases.",High Level Architecture; Human Avatar; Python Script; Real Robot; Simulated World,Simulating Complex Robotic Scenarios with MORSE,x,,,x,,,,,,,NO,
S1309,2,bkwd,conferencePaper,2014,"Bihlmaier, Andreas; Wörn, Heinz","Simulation, Modeling, and Programming for Autonomous Robots",10.1007/978-3-319-11900-7_22,,"We introduce Robot Unit Testing (RUT) as a methodology to bring modern testing methods into robotics. Through RUT the range of robotics software that can be automatically tested is extended beyond current practice. A robotics simulator is used to bridge the gap between well automated tests that only check a robot’s software and time consuming, inherently manual tests on robots of alloy and circuits. An in-depth realization of RUT is shown, which is based on the Robot Operating System (ROS) framework and the Gazebo simulator due to their prominence in robotics research and inherent suitability for the RUT methodology.",,Robot Unit Testing,,,,x,,,,,x,,NO,
S1308,2,bkwd,conferencePaper,2012,,Proceedings of the International Conference on Health Informatics,10.5220/0003783503820385,http://www.scitepress.org/DigitalLibrary/Link.aspx?doi=10.5220/0003783503820385,,,MODEL BASED CONTINUAL PLANNING AND CONTROL FOR ASSISTIVE ROBOTS:,x,,,x,,,,,,,NO,
S1307,2,bkwd,bookSection,2004,"Bengtsson, Johan; Yi, Wang",Lectures on Concurrency and Petri Nets: Advances in Petri Nets,,https://doi.org/10.1007/978-3-540-27755-2_3,"This chapter is to provide a tutorial and pointers to results and related work on timed automata with a focus on semantical and algorithmic aspects of verification tools. We present the concrete and abstract semantics of timed automata (based on transition rules, regions and zones), decision problems, and algorithms for verification. A detailed description on DBM (Difference Bound Matrices) is included, which is the central data structure behind several verification tools for timed systems. As an example, we give a brief introduction to the tool Uppaal.",Canonical Form; Commit Location; Operational Semantic; Reachability Analysis; Symbolic State,"Timed Automata: Semantics, Algorithms and Tools",x,,,,,,,,,,NO,
S1306,2,bkwd,journalArticle,,"Amir, Yair; Danilov, Claudiu; Miskin-Amir, Michal; Schultz, John; Stanton, Jonathan",,,,,,The Spread Toolkit: Architecture and Performance,x,,,x,,,,,,,NO,
S1305,2,bkwd,webpage,,,,,https://ieeexplore.ieee.org/abstract/document/6942806/,"We present a novel method for re-creating the static structure of cluttered office environments - which we define as the “meta-room” - from multiple observations collected by an autonomous robot equipped with an RGB-D depth camera over extended periods of time. Our method works directly with point clusters by identifying what has changed from one observation to the next, removing the dynamic elements and at the same time adding previously occluded objects to reconstruct the underlying static structure as accurately as possible. The process of constructing the meta-rooms is iterative and it is designed to incorporate new data as it becomes available, as well as to be robust to environment changes. The latest estimate of the meta-room is used to differentiate and extract clusters of dynamic objects from observations. In addition, we present a method for re-identifying the extracted dynamic objects across observations thus mapping their spatial behaviour over extended periods of time.",,Meta-rooms: Building and maintaining long term spatial models in a dynamic world,,,,,x,,,,,,NO,
S1303,2,bkwd,journalArticle,2007,"Roy, Chanchal Kumar; Cordy, James R.","School of Computing TR 2007-541, Queen’s University",,,"Code duplication or copying a code fragment and then reuse by pasting with or without any modifications is a well known code smell in software maintenance. Several studies show that about 5 % to 20 % of a software systems can contain duplicated code, which is basically the results of copying existing code fragments and using then by pasting with or without minor modifications. One of the major shortcomings of such duplicated fragments is that if a bug is detected in a code fragment, all the other fragments similar to it should be investigated to check the possible existence of the same bug in the similar fragments. Refactoring of the duplicated code is another prime issue in software maintenance although several studies claim that refactoring of certain clones are not desirable and there is a risk of removing them. However, it is also widely agreed that clones should at least be detected. In this paper, we survey the state of the art in clone detection research. First, we describe the clone terms commonly used in the literature along with their corresponding mappings to the commonly used clone types. Second, we provide a review of the existing",,A Survey on Software Clone Detection Research,x,,,,,,,,,,NO,
S1301,2,bkwd,conferencePaper,2002,"Monden, A.; Nakae, D.; Kamiya, T.; Sato, S.; Matsumoto, K.",Proceedings Eighth IEEE Symposium on Software Metrics,10.1109/METRIC.2002.1011328,,"Existing research suggests that the code clone (duplicated code) is one of the factors that degrades the design and the structure of software and lowers the software quality such as readability and changeability. However, the influence of code clones on software quality has not been quantitatively clarified yet. We have tried to quantitatively clarify the relation between code clones and the software reliability and maintainability of twenty year old software. As a result, we found that modules having code clones (clone-included modules) are more reliable than modules having no code clone (non-clone modules) on average. Nevertheless, the modules having very large code clones (more than 200 SLOC) are less reliable than non-clone modules. We also found that clone-included modules are less maintainable (having greater revision number on average) than non-clone modules; and, modules having larger code clone are less maintainable than modules having smaller code clone.",Aging; Cloning; Computer industry; Costs; Degradation; Electronic switching systems; Software maintenance; Software quality,Software quality analysis by code clones in industrial legacy software,x,,,x,,,,,,,NO,
S1300,2,bkwd,conferencePaper,2015,"Claes, Maelick; Mens, Tom; Di Cosmo, Roberto; Vouillon, Jérôme",2015 IEEE/ACM 12th Working Conference on Mining Software Repositories,10.1109/MSR.2015.27,,"Users and developers of software distributions are often confronted with installation problems due to conflicting packages. A prototypical example of this are the Linux distributions such as Debian. Conflicts between packages have been studied under different points of view in the literature, in particular for the Debian operating system, but little is known about how these package conflicts evolve over time. This article presents an extensive analysis of the evolution of package incompatibilities, spanning a decade of the life of the Debian stable and testing distributions for its most popular architecture, i386. Using the technique of survival analysis, this empirical study sheds some light on the origin and evolution of package incompatibilities, and provides the basis for building indicators that may be used to improve the quality of package-based distributions.",analysis; Computer architecture; conflict; debian; dependency; distribution; empirical; evolution; Kernel; Linux; maintenance; Market research; Metadata; package; software; Testing,A Historical Analysis of Debian Package Incompatibilities,x,,,x,,,,,,,NO,
S1299,2,bkwd,conferencePaper,2010,"Lungu, Mircea; Robbes, Romain; Lanza, Michele",Proceedings of the IEEE/ACM international conference on Automated software engineering,10.1145/1858996.1859058,https://doi.org/10.1145/1858996.1859058,"In large software systems, knowing the dependencies between modules or components is critical to assess the impact of changes. To recover the dependencies, fact extractors analyze the system as a whole and build the dependency graph, parsing the system down to the statement level. At the level of software ecosystems, which are collections of software projects, the dependencies that need to be recovered reside not only within the individual systems, but also between the libraries, frameworks, and entire software systems that make up the complete ecosystem; scaling issues arise. In this paper we present and evaluate several variants of a lightweight and scalable approach to recover dependencies between the software projects of an ecosystem. We evaluate our recovery algorithms on the Squeak 3.10 Universe, an ecosystem containing more than 200 software projects.",dependency analysis; software ecosystems; static analysis,Recovering inter-project dependencies in software ecosystems,x,,,,,,,,,,NO,
S1297,2,bkwd,conferencePaper,2003,"Lakhotia, A.; Li, Junwei; Walenstein, A.; Yang, Yun","11th IEEE International Workshop on Program Comprehension, 2003.",10.1109/WPC.2003.1199215,,"Source code clones are copies or near-copies of other portions of code, often created by copying and pasting portions of source code. This working session is concerned with building a communal research infrastructure for clone detection. The intention of this working session is to try to build a consensus on how to continue to build a benchmark suite and results archive for clone- and source comparison-related research and development. The working session is structured to foster discussion and debates over what should be collected in the archive, and how best to do it.",Benchmark testing; Buildings; Cloning; Computer science; Infrared detectors; Laboratories; Research and development; Software systems; Software testing; System testing,Towards a clone detection benchmark suite and results archive,x,,,x,,,,,,,NO,
S1296,2,bkwd,conferencePaper,1993,"Johnson, J. Howard",Proceedings of the 1993 conference of the Centre for Advanced Studies on Collaborative research: software engineering - Volume 1,,,A prototype implementation of a mechanism that uses fingerprints to identify exact repetitions of text in large program source trees has been built and successfully applied to a legacy source of over 300 megabytes. This prototype system has provided useful information as well as establishing the scalability of the technology. The approach will form the basis of a suite of tools for the visualization and understanding of programs and will complement other approaches currently under investigation.,,Identifying redundancy in source code using fingerprints,x,,,,,,,,,,NO,
S1293,2,bkwd,conferencePaper,2015,"Abate, Pietro; Di Cosmo, Roberto; Gesbert, Louis; Le Fessant, Fabrice; Treinen, Ralf; Zacchiroli, Stefano",2015 IEEE/ACM 12th Working Conference on Mining Software Repositories,10.1109/MSR.2015.10,,"Component repositories play an increasingly relevant role in software life-cycle management, from software distribution to end-user, to deployment and upgrade management. Software components shipped via such repositories are equipped with rich metadata that describe their relationship (e.g., Dependencies and conflicts) with other components. In this practice paper we show how to use a tool, distcheck, that uses component metadata to identify all the components in a repository that cannot be installed (e.g., Due to unsatisfiable dependencies), provides detailed information to help developers understanding the cause of the problem, and fix it in the repository. We report about detailed analyses of several repositories: the Debian distribution, the OPAM package collection, and Drupal modules. In each case, distcheck is able to efficiently identify not installable components and provide valuable explanations of the issues. Our experience provides solid ground for generalizing the use of distcheck to other component repositories.",component repositories; dependency solving; History; installability; Libraries; Linux; Metadata; quality assurance; Quality assurance; Software; software components; software packages; Testing,Mining Component Repositories for Installability Issues,x,,,,,,,,,,NO,
S1292,2,bkwd,journalArticle,,"Quigley, Morgan; Gerkey, Brian; Conley, Ken; Faust, Josh; Foote, Tully; Leibs, Jeremy; Berger, Eric; Wheeler, Rob; Ng, Andrew",,,,"This paper gives an overview of ROS, an opensource robot operating system. ROS is not an operating system in the traditional sense of process management and scheduling; rather, it provides a structured communications layer above the host operating systems of a heterogenous compute cluster. In this paper, we discuss how ROS relates to existing robot software frameworks, and brieﬂy overview some of the available application software which uses ROS.",,ROS: an open-source Robot Operating System,,x,,x,,,,,,,NO,
S1291,2,bkwd,conferencePaper,2010,"del Bianco, Vieri; Lavazza, Luigi; Morasca, Sandro; Taibi, Davide; Tosi, Davide",Open Source Software: New Horizons,10.1007/978-3-642-13244-5_2,,"The quality of Open Source Software (OSS) is generally much debated. Some state that it is generally higher than closed-source counterparts, while others are more skeptical. The authors have collected the opinions of the users concerning the quality of 44 OSS products in a systematic manner, so that it is now possible to present the actual opinions of real users about the quality of OSS products. Among the results reported in the paper are: the distribution of trustworthiness of OSS based on our survey; a comparison of the trustworthiness of the surveyed products with respect to both open and closed-source competitors; the identification of the qualities that affect the perception of trustworthiness, based on rigorous statistical analysis.",Open Source Software quality; perceived quality; trustworthiness,An Investigation of the Users’ Perception of OSS Quality,x,,,x,,,,,,,NO,
S1290,2,bkwd,journalArticle,2007,,,10.7551/mitpress/5326.003.0019,https://direct.mit.edu/books/book/3816/chapter/125244/Adopting-Open-Source-Software-Engineering-OSSE,,,Adopting Open Source Software Engineering (OSSE)Practices by Adopting OSSE Tools,x,,,,,,,,,,NO,
S1289,2,bkwd,conferencePaper,2006,"de Groot, Adriaan; Kügler, Sebastian; Adams, Paul J.; Gousios, Giorgos",Open Source Systems,10.1007/0-387-34226-5_6,,This paper describes how a Software Quality Observatory works to evaluate and quantify the quality of an Open Source project. Such a quality measurement can be used by organizations intending to deploy an Open Source solution to pick one of the available projects for use. We offer a case description of how the Software Quality Observatory will be applied to the KDE project to document and evaluate its quality practices for outsiders.,Open Source software; software quality evaluation; static code analysis,Call for Quality: Open Source Software Quality Observation,x,,,x,,,,,,,NO,
S1288,2,bkwd,conferencePaper,2001,"Hars, A.; Ou, Shaosong",Proceedings of the 34th Annual Hawaii International Conference on System Sciences,10.1109/HICSS.2001.927045,,"The success of the Linux operating system has demonstrated the viability of an alternative form of software development: open source software, which challenges traditional assumptions about software markets. Understanding what drives open source developers to participate in open source projects is crucial for assessing the impact of open source software. The article identifies two broad types of motivations that account for their participation in open source projects. The first category includes internal factors such as intrinsic motivation and altruism, and the second category focuses on external rewards such as expected future returns and personal needs. The article also reports the results of a survey administered to open source programmers.",Business; Counting circuits; History; Licenses; Linux; Open source software; Operating systems; Programming profession; Software measurement; Sun,Working for free? Motivations of participating in open source projects,x,,,x,,,,,,,NO,
S1287,2,bkwd,conferencePaper,2013,"Dubois, Daniel J.; Tamburrelli, Giordano",Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering,10.1145/2491411.2494589,https://doi.org/10.1145/2491411.2494589,"In this paper we outline the idea to adopt gamification techniques to engage, train, monitor, and motivate all the players involved in the development of complex software artifacts, from the inception to the deployment and maintenance. The paper introduces the concept of gamification and proposes a research approach to understand how its principles may be successfully applied to the process of software development. Applying gamification to software engineering is not as straightforward as it may appear since it has to be casted to the peculiarities of this domain. Existing literature in the area has already recognized the possible use of such technology in the context of software development, however how to design and use gamification in this context is still an open question. This leads to several research challenges which are organized in a fascinating research agenda that is part of the contribution of this paper. Finally, to support the proposed ideas we present a preliminary experiment that shows the effect of gamification on the performance of students involved in a software engineering project.",gamification; reward; serious games; Software development,Understanding gamification mechanisms for software development,x,,,,,,,,,,NO,
S1286,2,bkwd,journalArticle,2006,"Roberts, Jeffrey A.; Hann, Il-Horn; Slaughter, Sandra A.",Management Science,10.1287/mnsc.1060.0554,https://pubsonline.informs.org/doi/abs/10.1287/mnsc.1060.0554,"Understanding what motivates participation is a central theme in the research on open source software (OSS) development. Our study contributes by revealing how the different motivations of OSS developers are interrelated, how these motivations influence participation leading to performance, and how past performance influences subsequent motivations. Drawing on theories of intrinsic and extrinsic motivation, we develop a theoretical model relating the motivations, participation, and performance of OSS developers. We evaluate our model using survey and archival data collected from a longitudinal field study of software developers in the Apache projects. Our results reveal several important findings. First, we find that developers’ motivations are not independent but rather are related in complex ways. Being paid to contribute to Apache projects is positively related to developers’ status motivations but negatively related to their use-value motivations. Perhaps surprisingly, we find no evidence of diminished intrinsic motivation in the presence of extrinsic motivations; rather, status motivations enhance intrinsic motivations. Second, we find that different motivations have an impact on participation in different ways. Developers’ paid participation and status motivations lead to above-average contribution levels, but use-value motivations lead to below-average contribution levels, and intrinsic motivations do not significantly impact average contribution levels. Third, we find that developers’ contribution levels positively impact their performance rankings. Finally, our results suggest that past-performance rankings enhance developers’ subsequent status motivations.",extrinsic motivation; intrinsic motivation; open source software; software development performance,"Understanding the Motivations, Participation, and Performance of Open Source Software Developers: A Longitudinal Study of the Apache Projects",x,,,,,,,,,,NO,
S1285,2,bkwd,report,2000,"von Hippel, Eric A.; Lakhani, Karim R.",,,https://papers.ssrn.com/abstract=290305,"Open source software products represent the leading edge of innovation development and diffusion systems conducted for and by users themselves - no manufacturer required. Research into this phenomenon has so far focused on how the major tasks of software development are organized and motivated. But a complete user system requires the execution of ""mundane but necessary"" tasks as well. In this paper, we explore how the mundane but necessary task of field support for open source Apache server software is organized, and how and why users are motivated to participate in providing it. We find that the present system works well and that information providers are largely rewarded by benefits directly received from a related task. We also find, however, that the present help system is by and for only a few - and that changes would be needed if and as volume increases. General lessons for user-based innovation systems includes the clear willingness of users to openly reveal their proprietary information. This bodes well for the efficiency of user-only innovation systems. Open revealing is rational behavior if the information has low competitive value and/or if information providers think that other users know the same thing they do, and would reveal the information if they did not.",Eric A. von Hippel; How Open Source Software Works: 'Free' User-to-User Assistance?; Karim R. Lakhani; SSRN,How Open Source Software Works: 'Free' User-to-User Assistance?,x,,,,,,,,,,NO,
S1284,2,bkwd,journalArticle,2021,"Azevedo, Fábio; Cardoso, Jaime S.; Ferreira, André; Fernandes, Tiago; Moreira, Miguel; Campos, Luís",Drones,10.3390/drones5020051,https://www.mdpi.com/2504-446X/5/2/51,"The usage of unmanned aerial vehicles (UAV) has increased in recent years and new application scenarios have emerged. Some of them involve tasks that require a high degree of autonomy, leading to increasingly complex systems. In order for a robot to be autonomous, it requires appropriate perception sensors that interpret the environment and enable the correct execution of the main task of mobile robotics: navigation. In the case of UAVs, ﬂying at low altitude greatly increases the probability of encountering obstacles, so they need a fast, simple, and robust method of collision avoidance. This work covers the problem of navigation in unknown scenarios by implementing a simple, yet robust, environment-reactive approach. The implementation is done with both CPU and GPU map representations to allow wider coverage of possible applications. This method searches for obstacles that cross a cylindrical safety volume, and selects an escape point from a spiral for avoiding the obstacle. The algorithm is able to successfully navigate in complex scenarios, using both a high and low-power computer, typically found aboard UAVs, relying only on a depth camera with a limited FOV and range. Depending on the conﬁguration, the algorithm can process point clouds at nearly 40 Hz in Jetson Nano, while checking for threats at 10 kHz. Some preliminary tests were conducted with real-world scenarios, showing both the advantages and limitations of CPU and GPU-based methodologies.",,Efficient Reactive Obstacle Avoidance Using Spirals for Escape,x,,,,,,,,,,NO,
S1283,2,bkwd,conferencePaper,2016,"Heikkilä, Tapio; Dobrowiecki, Tadeusz; Dalgaard, Lars",2016 12th IEEE/ASME International Conference on Mechatronic and Embedded Systems and Applications (MESA),10.1109/MESA.2016.7587120,,"In this concept paper the notion of the configurations and configurability is interpreted in the context of robotic and automation systems. A review is given on related methods and techniques, and how configurations relate to system and software life cycles. The modeling principles for configuration based design are outlined and a proposal is made for the design process based on systems and software product line principles, including a completely new way to reuse system model data by storing them as semantic descriptions in SW delivery packages, to be queried by system designers. A tentative design example is presented.",Automation; Configuration; Ontologies; Robot Operating System; Robot sensing systems; Software; Standards; System and Software Product Line; Unified modeling language,Dealing with configurability in robot systems,x,,,,,,,,,,NO,
S1282,2,bkwd,journalArticle,2019,"Sidharta, Hanugra Aulia; Sidharta, Sidharta; Sari, Wina Permana","Kinetik: Game Technology, Information System, Computer Network, Computing, Electronics, and Control",10.22219/kinetik.v4i2.731,https://kinetik.umm.ac.id/index.php/kinetik/article/view/731,"PETIS (Programable Vehicle with Integrated Sensor) is a research project with goal make a robot that move independently with specific purpose. Due complexity of PETIS, research divide into several important sequence. In this research author focus on sense of sight for PETIS, LIDAR chosen due flexible and comprehensive. There is many LIDAR sensor in marketplace, LDS-01 as one of commercial LIDAR sensor available on market, produced by ROBOTIS as one of lowcost LIDAR sensor. Compare with another sensor that cost more than $1000, LDS-01 just cost lower than $500. On this research study focus with LDS-01 sensor reading, include hardware, software connection, and data handling. Based on this research LDS-01 as LIDAR sensor can read obstacle with minimum 29,9 cm and maximal 290,7 cm. Comparing with datasheet LDS-01 should work from 12 cm through 350 cm.",,2D Mapping and boundary detection using 2D LIDAR sensor for prototyping Autonomous PETIS (Programable Vehicle with Integrated Sensor),x,,,x,,,,,,,NO,
S1281,2,bkwd,conferencePaper,2020,"Kolak, Sophia; Afzal, Afsoon; Le Goues, Claire; Hilton, Michael; Timperley, Christopher Steven",2020 IEEE International Conference on Software Maintenance and Evolution (ICSME),10.1109/ICSME46990.2020.00048,,"Over the past eleven years, the Robot Operating System (ROS), has grown from a small research project into the most popular framework for robotics development. Composed of packages released on the Rosdistro package manager, ROS aims to simplify development by providing reusable libraries, tools and conventions for building a robot. Still, developing a complete robot is a difficult task that involves bridging many technical disciplines. Experts who create computer vision packages, for instance, may need to rely on software designed by mechanical engineers to implement motor control. As building a robot requires domain expertise in software, mechanical, and electrical engineering, as well as artificial intelligence and robotics, ROS faces knowledge based barriers to collaboration.In this paper, we examine how the necessity of domain specific knowledge impacts the open source collaboration model. We create a comprehensive corpus of package metadata and dependencies over three years in the ROS ecosystem, analyze how collaboration is structured, and study the dependency network evolution. We find that the most widely used ROS packages belong to a small cluster of foundational working groups (FWGs), each organized around a different domain in robotics. We show that the FWGs are growing at a slower rate than the rest of the ecosystem, in terms of their membership and number of packages, yet the number of dependencies on FWGs is increasing at a faster rate. In addition, we mined all ROS packages on GitHub, and showed that 82% rely exclusively on functionality provided by FWGs. Finally, we investigate these highly influential groups and describe the unique model of collaboration they support in ROS.",Buildings; collaboration; Collaboration; Ecosystems; robot operating system; robotics software; Robots; software ecosystem; software evolution; Software maintenance; Task analysis; Tools,It Takes a Village to Build a Robot: An Empirical Study of The ROS Ecosystem,,,,,,,,,,,,
S1280,2,bkwd,document,2020,"Kolak, Sophia; Afzal, Afsoon; Le Goues, Claire; Hilton, Michael; Timperley, Christopher Steven",,,https://zenodo.org/record/3997720,"Over the past eleven years, the Robot Operating System (ROS), has grown from a small research project into the most popular framework for robotics development. Composed of packages released on the Rosdistro package manager, ROS aims to simplify development by providing reusable libraries, tools and conventions for building a robot. Still, developing a complete robot is a difficult task that involves bridging many technical disciplines. Experts who create computer vision packages, for instance, may need to rely on software designed by mechanical engineers to implement motor control. As building a robot requires domain expertise in software, mechanical, and electrical engineering, as well as artificial intelligence and robotics, ROS faces knowledge based barriers to collaboration. In this paper, we examine how the necessity of domain specific knowledge impacts the open source collaboration model. We create a comprehensive corpus of package metadata and dependencies over three years in the ROS ecosystem, analyze how collaboration is structured, and study the dependency network evolution. We find that the most widely used ROS packages belong to a small cluster of foundational working groups (FWGs), each organized around a different domain in robotics. We show that the FWGs are growing at a slower rate than the rest of the ecosystem, in terms of their membership and number of packages, yet the number of dependencies on FWGs is increasing at a faster rate. In addition, we mined all ROS packages on GitHub, and showed that 82% rely exclusively on functionality provided by FWGs. Finally, we investigate these highly influential groups and describe the unique model of collaboration they support in ROS.",robot operating system; robotic software; software ecosystem; software evolution,It Takes a Village to Build a Robot: An Empirical Study of The ROS Ecosystem - Replication Package,,,,,x,,,,,,NO,
S1279,2,bkwd,webpage,,,,,https://aaai.org/ocs/index.php/AAAI/AAAI17/paper/view/14555,,,Grimm,x,,,,,,,,,,NO,
S1278,2,bkwd,journalArticle,2018,"Ahmad, Aakash; Pahl, Claus; Altamimi, Ahmed B.; Alreshidi, Abdulrahman",Journal of Computer Science and Technology,10.1007/s11390-018-1887-3,https://doi.org/10.1007/s11390-018-1887-3,"Modern software systems are subject to a continuous evolution under frequently varying requirements and changes in systems’ operational environments. Lehman’s law of continuing change demands for long-living and continuously evolving software to prolong its productive life and economic value by accommodating changes in existing software. Reusable knowledge and practices have proven to be successful for continuous development and evolution of the software effectively and efficiently. However, challenges such as empirical acquisition and systematic application of the reusable knowledge and practices must be addressed to enable or enhance software evolution. We investigate architecture change logs — mining histories of architecture-centric software evolution — to discover change patterns that 1) support reusability of architectural changes and 2) enhance the efficiency of the architecture evolution process. We model architecture change logs as a graph and apply graph-based formalism (i.e., graph mining techniques) to discover software architecture change patterns. We have developed a prototype that enables tool-driven automation and user decision support during software evolution. We have used the ISO-IEC-9126 model to qualitatively evaluate the proposed solution. The evaluation results suggest that the proposed solution 1) enables the reusability of frequent architectural changes and 2) enhances the efficiency of architecture-centric software evolution process. The proposed solution promotes research efforts to exploit the history of architectural changes to empirically discover knowledge that can guide architecture-centric software evolution.",,Mining Patterns from Change Logs to Support Reuse-Driven Evolution of Software Architectures,x,,,,,,,,,,NO,
S1277,2,bkwd,journalArticle,2021,"Malavolta, Ivano; Lewis, Grace A.; Schmerl, Bradley; Lago, Patricia; Garlan, David",Journal of Systems and Software,10.1016/j.jss.2021.110969,https://www.sciencedirect.com/science/article/pii/S0164121221000662,"Context: The Robot Operating System (ROS) is the de-facto standard for robotics software. However, ROS-based systems are getting larger and more complex and could benefit from good software architecture practices. Goal: We aim at (i) unveiling the state-of-the-practice in terms of targeted quality attributes and architecture documentation in ROS-based systems, and (ii) providing empirically-grounded guidance to roboticists about how to properly architect ROS-based systems. Methods: We designed and conducted an observational study where we (i) built a dataset of 335 GitHub repositories containing real open-source ROS-based systems, and (ii) mined the repositories to extract and synthesize quantitative and qualitative findings about how roboticists are architecting ROS-based systems. Results: First, we extracted an empirically-grounded overview of the state of the practice for architecting and documenting ROS-based systems. Second, we synthesized a catalog of 47 architecting guidelines for ROS-based systems. Third, the extracted guidelines were validated by 119 roboticists working on real-world open-source ROS-based systems. Conclusion: Roboticists can use our architecting guidelines for applying good design principles to develop robots that meet quality requirements, and researchers can use our results as evidence-based indications about how real-world ROS systems are architected today, thus inspiring future research contributions.",Robotics; ROS; Software architecture,Mining guidelines for architecting robotics software,,,,,,,,,x,,NO,
S1276,2,bkwd,conferencePaper,2021,"Albonico, Michel; Malavolta, Ivano; Pinto, Gustavo; Guzman, Emitza; Chinnappan, Katerina; Lago, Patricia",2021 IEEE/ACM 18th International Conference on Mining Software Repositories (MSR),10.1109/MSR52588.2021.00060,,"Robots are becoming more and more commonplace in many industry settings. This successful adoption can be partly attributed to (1) their increasingly affordable cost and (2) the possibility of developing intelligent, software-driven robots. Unfortunately, robotics software consumes significant amounts of energy. Moreover, robots are often battery-driven, meaning that even a small energy improvement can help reduce its energy footprint and increase its autonomy and user experience.In this paper, we study the Robot Operating System (ROS) ecosystem, the de-facto standard for developing and prototyping robotics software. We analyze 527 energy-related data points (including commits, pull-requests and issues on ROS-related repositories, ROS-related questions on StackOverflow, ROS Discourse, ROS Answers and the official ROS Wiki).Our results include a quantification of the interest of roboticists on software energy efficiency, 10 recurrent causes and 14 solutions of energy-related issues, and their implied trade-offs with respect to other quality attributes. Those contributions support roboticists and researchers towards having energy-efficient software in future robotics projects.",Data mining; Ecosystems; Energy consumption; Energy efficiency; Industries; Mining software repository; Operating systems; Robotics; Service robots; Software; Software engeineering,Mining Energy-Related Practices in Robotics Software,,,,,,,,,x,,NO,
S1275,2,bkwd,journalArticle,2017,"Remy, Sekou L.",arXiv:1712.05986 [cs],,http://arxiv.org/abs/1712.05986,"In this work, our aim is to identify whether the choice of virtualization strategy influences the performance of simulations in robotics. Performance is quantified in the error between a reference trajectory and the actual trajectory for the ball moving along the surface of a smooth plate. The two-sample Kolmogorov-Smirnov test is used to assess significance of variations in performance under the different experimental settings. Our results show that the selection of virtualization technology does have a significant effect on simulation, and moreover this effect can be amplified by the use of some operating systems. While these results are a strong cause for caution, they also provide reason for optimism for those considering 'repeatable robotics research' using virtualization.",Computer Science - Networking and Internet Architecture; Computer Science - Robotics,Assessing virtualization effects in simulations of distributed robotics,x,,,x,,,,,,,NO,
S1274,2,bkwd,conferencePaper,2020,"Malavolta, Ivano; Lewis, Grace; Schmerl, Bradley; Lago, Patricia; Garlan, David",Proceedings of the ACM/IEEE 42nd International Conference on Software Engineering: Software Engineering in Practice,10.1145/3377813.3381358,https://doi.org/10.1145/3377813.3381358,"The Robot Operating System (ROS) is the de-facto standard for robotic software. If on one hand ROS is helping roboticists, e.g., by providing a standardized communication platform, on the other hand ROS-based systems are getting larger and more complex and could benefit from good software architecture practices. This paper presents an observational study aimed at (i) unveiling the state-of-the-practice for architecting ROS-based systems and (ii) providing guidance to roboticists about how to properly architect ROS-based systems. To achieve these goals, we (i) build a dataset of 335 GitHub repositories containing real open-source ROS-based systems, (ii) mine the repositories for extracting the state of the practice about how roboticists are architecting them, and (iii) synthesize a catalog of 49 evidence-based guidelines for architecting ROS-based systems. The guidelines have been validated by 77 roboticists working on real-world open-source ROS-based systems.",,How do you architect your robots? state of the practice and guidelines for ROS-based systems,,,,x,,,,,x,,NO,
S1273,2,bkwd,journalArticle,2019,"Estefo, Pablo; Simmonds, Jocelyn; Robbes, Romain; Fabry, Johan",Journal of Systems and Software,10.1016/j.jss.2019.02.024,https://www.sciencedirect.com/science/article/pii/S0164121219300342,"ROS, the Robot Operating System, offers a core set of software for operating robots that can be extended by creating or using existing packages, making it possible to write robotic software that can be reused on different hardware platforms. With thousands of packages available per stable distribution, encapsulating algorithms, sensor drivers, etc., it is the de facto middleware for robotics. Like any software ecosystem, ROS must evolve in order to keep meeting the requirements of its users. In practice, packages may end up being abandoned between releases: no one may be available to update a package, or newer packages offer similar functionality. As such, we wanted to identify and understand the evolution challenges faced by the ROS ecosystem. In this article, we report our findings after interviewing 19 ROS developers in depth, followed by a focus group (4 participants) and an online survey of 119 ROS community members. We specifically focused on the issues surrounding package reuse and how to contribute to existing packages. To conclude, we discuss the implications of our findings, and propose five recommendations for overcoming the identified issues, with the goal of improving the health of the ROS ecosystem.",Package management; Robot Operating System; Software ecosystems,The Robot Operating System: Package reuse and community dynamics,,,,,,,,,x,,NO,
S1272,2,bkwd,journalArticle,,"Quigley, Morgan; Gerkey, Brian; Conley, Ken; Faust, Josh; Foote, Tully; Leibs, Jeremy; Berger, Eric; Wheeler, Rob; Ng, Andrew",,,,"This paper gives an overview of ROS, an opensource robot operating system. ROS is not an operating system in the traditional sense of process management and scheduling; rather, it provides a structured communications layer above the host operating systems of a heterogenous compute cluster. In this paper, we discuss how ROS relates to existing robot software frameworks, and brieﬂy overview some of the available application software which uses ROS.",,ROS: an open-source Robot Operating System,,x,,,,,,,,,NO,
S1271,2,bkwd,webpage,,,,,https://arxiv.org/abs/1112.5761,,,[1112.5761] Semantics and Algorithms for Parametric Monitoring,x,,,x,,,,,,,NO,
S1270,2,bkwd,conferencePaper,2011,"Kalakrishnan, Mrinal; Chitta, Sachin; Theodorou, Evangelos; Pastor, Peter; Schaal, Stefan",2011 IEEE International Conference on Robotics and Automation,10.1109/ICRA.2011.5980280,,"We present a new approach to motion planning using a stochastic trajectory optimization framework. The approach relies on generating noisy trajectories to explore the space around an initial (possibly infeasible) trajectory, which are then combined to produced an updated trajectory with lower cost. A cost function based on a combination of obstacle and smoothness cost is optimized in each iteration. No gradient information is required for the particular optimization algorithm that we use and so general costs for which derivatives may not be available (e.g. costs corresponding to constraints and motor torques) can be included in the cost function. We demonstrate the approach both in simulation and on a mobile manipulation system for unconstrained and constrained tasks. We experimentally show that the stochastic nature of STOMP allows it to overcome local minima that gradient-based methods like CHOMP can get stuck in.",Acceleration; Cost function; Noise measurement; Optimal control; Planning; Trajectory,STOMP: Stochastic trajectory optimization for motion planning,x,,,,,,,,,,NO,
S1269,2,bkwd,conferencePaper,2011,"Pitzer, Benjamin; Styer, Michael; Bersch, Christian; DuHadway, Charles; Becker, Jan",2011 IEEE International Conference on Robotics and Automation,10.1109/ICRA.2011.5980259,,"Reliability and availability are major concerns for autonomous systems. A personal robot has to solve complex tasks, such as loading a dishwasher or folding laundry, which are very difficult to automate robustly. In order for a robot to perform better in those applications, it needs to be capable of accepting help from a human operator. Shared autonomy is a system model based on human-robot dialogue. This work aims at bridging the gap between full human control and full autonomy for tasks in the domain of personal robotics. One of the hardest problems for personal robotic systems is perception: perceiving and inferring about objects in the robot's environment. We present a system capable of solving the perceptual inference in combination with a human, such that a human operator functions as a resource for the robot and helps to compensate for limitations of autonomy. In this paper, we show how a human-robot team can work together effectively to solve complex perception tasks. We present a system that asks a human operator to identify objects it doesn't recognize or find. In various experiments with the PR2 robot we show that this shared autonomy system performs more robustly than the robot system alone and that it is capable of tasks which are difficult to accomplish by an autonomous agent.",Humans; Image color analysis; Image segmentation; Mobile communication; Navigation; Robot sensing systems,Towards perceptual shared autonomy for robotic mobile manipulation,x,,,,,,,,,,NO,
S1268,2,bkwd,webpage,,,,,https://ieeexplore.ieee.org/abstract/document/5979793/,"In this paper we propose a novel approach to detect and reconstruct transparent objects. This approach makes use of the fact that many transparent objects, especially the ones consisting of usual glass, absorb light in certain wavelengths [1]. Given a controlled illumination, this absorption is measurable in the intensity response by comparison to the background. We show the usage of a standard infrared emitter and the intensity sensor of a time of flight (ToF) camera to reconstruct the structure given we have a second view point. The structure can not be measured by the usual 3D measurements of the ToF camera. We take advantage of this fact by deriving this internal sensory contradiction from two ToF images and reconstruct an approximated surface of the original transparent object. Therefor we are using a perspectively invariant matching in the intensity channels from the first to the second view of initially acquired candidates. For each matched pixel in the first view a 3D movement can be predicted given their original 3D measurement and the known distance to the second camera position. If their line of sight did not pass a transparent object or suffered any other major defect, this prediction will highly correspond to the actual measured 3D points of the second view. Otherwise, if a detectable error occurs, we approximate a more exact point to point matching and reconstruct the original shape by triangulating the points in the stereo setup. We tested our approach using a mobile platform with one Swissranger SR4k. As this platform is mobile, we were able to create a stereo setup by moving it. Our results show a detection of transparent objects on tables while simultaneously identifying opaque objects that also existed in the test setup. The viability of our results is demonstrated by a successful automated manipulation of the respective transparent object.",,Transparent object detection and reconstruction on a mobile platform,x,,,,,,,,,,NO,
S1267,2,bkwd,journalArticle,2014,"Jensen, Kjeld; Larsen, Morten; Nielsen, Søren H.; Larsen, Leon B.; Olsen, Kent S.; Jørgensen, Rasmus N.",Robotics,10.3390/robotics3020207,https://www.mdpi.com/2218-6581/3/2/207,"Robotics in precision agriculture has the potential to improve competitiveness and increase sustainability compared to current crop production methods and has become an increasingly active area of research. Tractor guidance systems for supervised navigation and implement control have reached the market, and prototypes of field robots performing precision agriculture tasks without human intervention also exist. But research in advanced cognitive perception and behaviour that is required to enable a more efficient, reliable and safe autonomy becomes increasingly demanding due to the growing software complexity. A lack of collaboration between research groups contributes to the problem. Scientific publications describe methods and results from the work, but little field robot software is released and documented for others to use. We hypothesize that a common open software platform tailored to field robots in precision agriculture will significantly decrease development time and resources required to perform experiments due to efficient reuse of existing work across projects and robot platforms. In this work we present the FroboMind software platform and evaluate the performance when applied to precision agriculture tasks.",field robots; FroboMind; precision agriculture; ROS,Towards an Open Software Platform for Field Robots in Precision Agriculture,,x,,,,,,,,,NO,
S1266,2,bkwd,journalArticle,2013,"Larsen, Leon Bonde; Olsen, Kent Stark; Ahrenkiel, Linda; Jensen, Kjeld",,,https://portal.findresearcher.sdu.dk/en/publications/extracurricular-activities-targeted-towards-increasing-the-number,,,Extracurricular Activities Targeted towards Increasing the Number of Engineers Working in the Field of Precision Agriculture,x,,,,,,,,,,NO,
S1265,2,bkwd,journalArticle,2014,"Larsen, Morten; Adam, Marian Sorin; Schultz, Ulrik Pagh; Jørgensen, Rasmus","Proceedings of the Second International Conference on Robotics, Associated High-Technologies and Equipment for Agriculture and Forestry: New trends in mobile robotics, perception and actuation for agriculture and forestry",,https://portal.findresearcher.sdu.dk/en/publications/towards-automatic-consistency-checking-of-software-components-in-,,,Towards automatic consistency checking of software components in field robotics,x,,,x,,,,,,,NO,
S1264,2,bkwd,journalArticle,2011,"Steck, Andreas; Lotz, Alex; Schlegel, Christian",ACM SIGPLAN Notices,10.1145/2189751.2047875,https://doi.org/10.1145/2189751.2047875,"The development of service robots has gained more and more attention over the last years. A major challenge on the way towards industrial-strength service robotic systems is to make the step from code-driven to model-driven engineering. In this work we propose to put models into the focus of the whole life-cycle of robotic systems covering design-time as well as run-time. We describe how to explicate parameters, properties and resource information in the models at design-time and how to take these information into account by the run-time system of the robot to support its decision making process. We underpin our work by an exhaustive real-world example which is completely developed with our tools.",component based software engineering; model-driven engineering; run-time model usage; service robotics,Model-driven engineering and run-time model-usage in service robotics,x,,,,,,,,,,NO,
S1263,2,bkwd,conferencePaper,2013,"Yakymets, N.; Dhouib, S.; Jaber, H.; Lanusse, A.",2013 IEEE/RSJ International Conference on Intelligent Robots and Systems,10.1109/IROS.2013.6696493,,"Robotic systems (RSs) are often used for performing critical tasks with little or no human intervention. Such RSs must satisfy certain dependability requirements including reliability, availability, security and safety. In this paper, we focus on the safety aspect and propose a methodology and associated framework for safety assessment of RSs in the early phases of development. The methodology relies upon model-driven engineering approach and describes a preliminary safety assessment of safety-critical RSs using fault tree (FT) analysis (FTA). The framework supports a domain specific language for RSs called RobotML and includes facilities (i) to automatically generate or manually construct FTs and perform both qualitative and quantitative FTA, (ii) to make semantic connections with formal verification and FTA tools, (iii) to represent FTA results in the RobotML modeling environment. In the case study, we illustrate the proposed methodology and framework by considering a mobile robot developed in the scope of the Proteus project.",Fault trees; Hazards; Mobile robots; Robot sensing systems; Unified modeling language,Model-driven safety assessment of robotic systems,x,,,,,,,,,,NO,
S1262,2,bkwd,journalArticle,,"Blanke, Mogens; Blas, Morten Rufus; Hansen, Søren; Andersen, Jens Christian; Caponetti, Fabio",,,,,,Autonomous Robot Supervision using Fault Diagnosis and Semantic Mapping in an Orchard,x,,,,,,,,,,NO,
S1261,2,bkwd,conferencePaper,2010,"Schlegel, Christian; Steck, Andreas; Brugali, Davide; Knoll, Alois","Simulation, Modeling, and Programming for Autonomous Robots",10.1007/978-3-642-17319-6_31,,"Advanced software engineering is the key factor in the design of future complex cognitive robots. It will decide about their robustness, (run-time) adaptivity, cost-effectiveness and usability.We present a novel overall vision of a model-driven engineering approach for robotics that fuses strategies for robustness by design and robustness by adaptation. It enables rigid definitions of quality-of-service, re-configurability and physics-based simulation as well as for seamless system level integration of disparate technologies and resource awareness.We report on steps towards implementing this idea driven by a first robotics meta-model with first explications of non-functional properties. A model-driven toolchain provides the model transformation and code generation steps. It also provides design time analysis of resource parameters (e.g. schedulability analysis of realtime tasks) as step towards resource awareness in the development of integrated robotic systems.",Online Simulation; Resource Awareness; Robot Control System; Robotic System; Schedulability Analysis,Design Abstraction and Processes in Robotics: From Code-Driven to Model-Driven Engineering,x,,,x,,,,,,,NO,
S1260,2,bkwd,bookSection,2011,"Powell, David; Arlat, Jean; Deswarte, Yves; Kanoun, Karama",Dependable and Historic Computing: Essays Dedicated to Brian Randell on the Occasion of His 75th Birthday,,https://doi.org/10.1007/978-3-642-24541-1_32,"The idea that diverse or dissimilar computations could be used to detect errors can be traced back to Dynosius Lardner’s analysis of Babbage’s mechanical computers in the early 19th century. In the modern era of electronic computers, diverse redundancy techniques were pioneered in the 1970’s by Elmendorf, Randell, Aviz̆ienis and Chen. Since then, the tolerance of design faults has been a very active research topic, which has had practical impact on real critical applications. In this paper, we present a brief history of the topic and then describe two contemporary studies on the application of diversity in the fields of robotics and security.",design-fault; fault-tolerance; N-self-checking components; N-version programming; recovery blocks; software-fault; vulnerability,Tolerance of Design Faults,x,,,,,,,,,,NO,
S1259,2,bkwd,conferencePaper,2012,"Crestani, Didier; Godary-Dejean, Karen",,,https://hal-lirmm.ccsd.cnrs.fr/lirmm-00804370,"Due to the future development of robotic autonomous systems in human environment, the fault tolerance paradigm will be a central issue in robotics. This article presents a survey of fault tolerance concepts, means and implementations in robotic architectures.",,Fault Tolerance in Control Architectures for Mobile Robots: Fantasy or Reality?,x,,,x,,,,,,,NO,
S1258,2,bkwd,bookSection,1991,"Dhillon, B. S.",Robot Reliability and Safety,,https://doi.org/10.1007/978-1-4612-3148-6_8,"The subject of robot reliability is very complex and there are numerous interlocking variables in evaluating and accomplishing various reliability levels. A successful robot installation has to be safe and reliable. A robot with poor reliability leads to many problems: high maintenance cost, unsafe conditions, inconvenience, and so on. Nevertheless, the American National Standard for Industrial Robots and Robot Systems—Safety Requirements [1] specifically calls for the design and construction of robots in such a way that any single, reasonably foreseeable failure will not lead to the robot’s hazardous motion. There are many different types of parts which are used in robots: electrical, electronic, hydraulic, pneumatic, and mechanical. This makes the task of producing highly reliable robots rather a challenging one. Furthermore, the environments in which the robots have to operate may be harsh and may vary enormously from one installation to another even for identical models.",Constant Failure Rate; Fault Tree Analysis; Industrial Robot; Mean Time Between Failure; Robot Safety,Robot Reliability,x,,,,,,,,,,NO,
S1257,2,bkwd,conferencePaper,2014,"Gherardi, Luca; Brugali, Davide",2014 IEEE International Conference on Robotics and Automation (ICRA),10.1109/ICRA.2014.6907806,,"During the last years robotic researchers have been able of developing extremely complex applications. The complexity of these applications is reflected by the variety of functionalities involved, which are provided by a significant number of components. Although the reuse of software components is becoming a best-practice, the reuse of reference architectures, which model sub-systems providing functionalities common to a great number of applications, is still uncommon. This paper provides two contributions to this topic: (a) a development process that defines how reference architectures can be exploited for building robotic applications, (b) the HyperFlex software toolchain, which has been developed for supporting the design and the reuse of reference architectures. The idea presented in this paper is simple yet powerful: instead of building complex applications by reusing single components, even more complex applications can be developed by reusing reference architectures of mature sub-systems.",Architecture; Computer architecture; Context; Joints; Ports (Computers); Robots; Software,Modeling and reusing robotic software architectures: The HyperFlex toolchain,x,,,x,,,,,,,NO,
S1256,2,bkwd,journalArticle,,"Quigley, Morgan; Gerkey, Brian; Conley, Ken; Faust, Josh; Foote, Tully; Leibs, Jeremy; Berger, Eric; Wheeler, Rob; Ng, Andrew",,,,"This paper gives an overview of ROS, an opensource robot operating system. ROS is not an operating system in the traditional sense of process management and scheduling; rather, it provides a structured communications layer above the host operating systems of a heterogenous compute cluster. In this paper, we discuss how ROS relates to existing robot software frameworks, and brieﬂy overview some of the available application software which uses ROS.",,ROS: an open-source Robot Operating System,,x,,,,,,,,,NO,
S1255,2,bkwd,conferencePaper,2011,"Lotz, Alex; Steck, Andreas; Schlegel, Christian",2011 15th International Conference on Advanced Robotics (ICAR),10.1109/ICAR.2011.6088591,,"Component Based Software Engineering is a common approach to master complexity in service robotic systems. Moreover, these systems must be robust and safe. Common robotic middlewares and frameworks provide component models with well defined communication mechanisms. However, generic means are missing to gain insight into running components. Components must be monitored (i) during their development for debugging purposes, (ii) during their integration into a system for verification and error detection purposes and (iii) at runtime for administration and online diagnosis purposes. This paper presents a generic concept for runtime monitoring of robotics software components which is independent of any specific robotic middleware and framework. After that, a reference implementation shows a concrete integration of the concept into the SmartSoft component model. Two real world scenarios at the end demonstrate the usage of monitoring.",Middleware; Monitoring; Robots; Runtime; Semantics; Sensors,Runtime monitoring of robotics software components: Increasing robustness of service robotic systems,x,,,,,,,,,,NO,
S1254,2,bkwd,conferencePaper,2001,"Bruyninckx, H.",Proceedings 2001 ICRA. IEEE International Conference on Robotics and Automation (Cat. No.01CH37164),10.1109/ROBOT.2001.933002,,"This paper introduces the OROCOS project that aims at becoming a general-purpose and open robot control software package. OROCOS follows the open source development model that has been proven to work in many other general-purpose software packages, such as Linux, Apache, Perl or LATEX. The paper focuses on the long-term vision of this start-up project, motivates which strategic and innovative design decisions are to be taken (a CORBA-like component architecture being the most important one), and lists other projects on which OROCOS could build. The success of OROCOS depends critically on how many researchers and engineers can be motivated to contribute code, documentation and feedback to the project.",Communication standards; Computer industry; Consumer electronics; Industrial electronics; Linux; Manufacturing industries; Open source software; Robot control; Service robots; Software packages,Open robot control software: the OROCOS project,x,,,,,,,,,,NO,
S1253,2,bkwd,journalArticle,2011,"Nebot, Patricio; Torres-Sospedra, Joaquín; Martínez, Rafael J.",Sensors,10.3390/s110404385,https://www.mdpi.com/1424-8220/11/4/4385,"The control architecture is one of the most important part of agricultural robotics and other robotic systems. Furthermore its importance increases when the system involves a group of heterogeneous robots that should cooperate to achieve a global goal. A new control architecture is introduced in this paper for groups of robots in charge of doing maintenance tasks in agricultural environments. Some important features such as scalability, code reuse, hardware abstraction and data distribution have been considered in the design of the new architecture. Furthermore, coordination and cooperation among the different elements in the system is allowed in the proposed control system. By integrating a network oriented device server Player, Java Agent Development Framework (JADE) and High Level Architecture (HLA), the previous concepts have been considered in the new architecture presented in this paper. HLA can be considered the most important part because it not only allows the data distribution and implicit communication among the parts of the system but also allows to simultaneously operate with simulated and real entities, thus allowing the use of hybrid systems in the development of applications.",agricultural robotics; control architecture; HLA-based system; hybrid systems; improved simulation system,A New HLA-Based Distributed Control Architecture for Agricultural Teams of Robots in Hybrid Applications with Real and Simulated Devices or Environments,x,,,,,,,,,,NO,
S1252,2,bkwd,conferencePaper,2012,"Griepentrog, H. W.; Jæger-Hansen, Claes Lund; Ravn, Ole; Andersen, Nils Axel; Andersen, Jens Christian; Nakanishi, T.",,,https://orbit.dtu.dk/en/publications/multilayer-controller-for-field-robots-high-portability-and-modul,,,Multilayer controller for field robots - High portability and modularity to ease implementation,x,,,x,,,,,,,NO,
S1251,2,bkwd,journalArticle,2012,"Bouraine, Sara; Fraichard, Thierry; Salhi, Hassen",Autonomous Robots,10.1007/s10514-011-9258-8,https://doi.org/10.1007/s10514-011-9258-8,"This paper addresses the problem of navigating in a provably safe manner a mobile robot with a limited field-of-view placed in a unknown dynamic environment. In such a situation, absolute motion safety (in the sense that no collision will ever take place whatever happens in the environment) is impossible to guarantee in general. It is therefore settled for a weaker level of motion safety dubbed passive motion safety: it guarantees that, if a collision takes place, the robot will be at rest.",,Provably safe navigation for mobile robots with limited field-of-views in dynamic environments,x,,,x,,,,,,,NO,
S1250,2,bkwd,journalArticle,2009,"Griepentrog, Hans W.; Andersen, N.A.; Andersen, Jens Christian; Blanke, Mogens; Heinemann, O.; Madsen, Tommy; Nielsen, J.; Pedersen, S.M.; Ravn, Ole; Wulfsohn, Dvoralai","Precision Agriculture 2009 - Papers Presented at the 7th European Conference on Precision Agriculture, ECPA 2009",,,"High levels of reliability and safety are necessary and can be achieved by novel developments within automated perception, diagnosis and decision making and fault tolerant operation. The aim is to add functionality to an existing robot prototype so that it will behave in a safe, reliable and effective manner under unmanned operation. The existing machine system and the proposed operation conditions were assessed by a machine safety consultant to check the compliance of existing legal requirements. Based on legal safety consultancy and a failure modes and effects analysis a redesign of the machine system was completed. The supposed operation is spraying and mowing in semi-public orchards. The machine will be unmanned but not unattended. An operator prepares, checks and starts the machine in the operation area. During machine operation the operator is around and is supposed to complete other working tasks. An additional stereo vision camera and a laser scanner will provide more information about the machine environment to avoid collision with obstacles and improves the machine navigation, this will contribute to reduce the dependency on GPS information. Signal monitoring software was developed to achieve higher levels of reliable and fault tolerant control. An additional safety circuit including bumper switches allow the machine to stop when other collision sensors fail.",,Safe and reliable: Further development of a field robot,x,,,,,,,,,,NO,
S1249,2,bkwd,webpage,,,,,https://doi.org/10.13031/2013.41743,,,A Safety Architecture for Autonomous Agricultural Vehicles,x,,,x,,,,,,,NO,
S1248,2,bkwd,conferencePaper,2003,"Rosu, G.; Chen, Feng","18th IEEE International Conference on Automated Software Engineering, 2003. Proceedings.",10.1109/ASE.2003.1240326,,"Measurement unit safety policy checking is a topic in software analysis concerned with ensuring that programs do not violate basic principles of units of measurement. Such violations can hide significant domain-specific errors which are hard or impossible to find otherwise. Measurement unit analysis by means of automatic deduction is addressed in this paper. We draw general design principles for measurement unit certification tools and discuss our prototype for the C language, which includes both dynamic and static checkers. Our approach is based on assume/assert annotations of code, which are properly interpreted by our deduction-based tools and ignored by standard compilers. We do not modify the language in order to support units. The approach can be extended to incorporate other safety policies without great efforts.",Certification; Computer languages; Computer science; Libraries; Measurement units; Packaging; Program processors; Prototypes; Software measurement; Software safety,Certifying measurement unit safety policy,x,,,,,,,,,,NO,
S1247,2,bkwd,conferencePaper,2018,"Kate, Sayali; Ore, John-Paul; Zhang, Xiangyu; Elbaum, Sebastian; Xu, Zhaogui",Proceedings of the 2018 26th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering,10.1145/3236024.3236035,https://doi.org/10.1145/3236024.3236035,"Program variables used in robotic and cyber-physical systems often have implicit physical units that cannot be determined from their variable types. Inferring an abstract physical unit type for variables and checking their physical unit type consistency is of particular importance for validating the correctness of such systems. For instance, a variable with the unit of ‘meter’ should not be assigned to another variable with the unit of ‘degree-per-second’. Existing solutions have various limitations such as requiring developers to annotate variables with physical units and only handling variables that are directly or transitively used in popular robotic libraries with known physical unit information. We observe that there are a lot of physical unit hints in these softwares such as variable names and specific forms of expressions. These hints have uncertainty as developers may not respect conventions. We propose to model them with probability distributions and conduct probabilistic inference. At the end, our technique produces a unit distribution for each variable. Unit inconsistencies can then be detected using the highly probable unit assignments. Experimental results on 30 programs show that our technique can infer units for 159.3% more variables compared to the state-of-the-art with more than 88.7% true positives, and inconsistencies detection on 90 programs shows that our technique reports 103.3% more inconsistencies with 85.3% true positives.",abstract type inference; dimensional analysis; physical units; probabilistic inference; robotic systems; static analysis; unit consistency,Phys: probabilistic physical unit assignment and inconsistency detection,x,,,,,,,,,,NO,
S1246,2,bkwd,journalArticle,,"Quigley, Morgan; Gerkey, Brian; Conley, Ken; Faust, Josh; Foote, Tully; Leibs, Jeremy; Berger, Eric; Wheeler, Rob; Ng, Andrew",,,,"This paper gives an overview of ROS, an opensource robot operating system. ROS is not an operating system in the traditional sense of process management and scheduling; rather, it provides a structured communications layer above the host operating systems of a heterogenous compute cluster. In this paper, we discuss how ROS relates to existing robot software frameworks, and brieﬂy overview some of the available application software which uses ROS.",,ROS: an open-source Robot Operating System,,,,x,,,,,,,NO,
S1245,2,bkwd,journalArticle,2019,"Raychev, Veselin; Vechev, Martin; Krause, Andreas",Communications of the ACM,10.1145/3306204,https://doi.org/10.1145/3306204,"We present a new approach for predicting program properties from large codebases (aka ""Big Code""). Our approach learns a probabilistic model from ""Big Code"" and uses this model to predict properties of new, unseen programs. The key idea of our work is to transform the program into a representation that allows us to formulate the problem of inferring program properties as structured prediction in machine learning. This enables us to leverage powerful probabilistic models such as Conditional Random Fields (CRFs) and perform joint prediction of program properties. As an example of our approach, we built a scalable prediction engine called JSNICE for solving two kinds of tasks in the context of JavaScript: predicting (syntactic) names of identifiers and predicting (semantic) type annotations of variables. Experimentally, JSNICE predicts correct names for 63% of name identifiers and its type annotation predictions are correct in 81% of cases. Since its public release at http://jsnice.org, JSNice has become a popular system with hundreds of thousands of uses. By formulating the problem of inferring program properties as structured prediction, our work opens up the possibility for a range of new ""Big Code"" applications such as de-obfuscators, decompilers, invariant generators, and others.",,Predicting program properties from 'big code',x,,,,,,,,,,NO,
S1244,2,bkwd,journalArticle,2009,"Livshits, Benjamin; Nori, Aditya V.; Rajamani, Sriram K.; Banerjee, Anindya",ACM SIGPLAN Notices,10.1145/1543135.1542485,https://doi.org/10.1145/1543135.1542485,"The last several years have seen a proliferation of static and runtime analysis tools for finding security violations that are caused by explicit information flow in programs. Much of this interest has been caused by the increase in the number of vulnerabilities such as cross-site scripting and SQL injection. In fact, these explicit information flow vulnerabilities commonly found in Web applications now outnumber vulnerabilities such as buffer overruns common in type-unsafe languages such as C and C++. Tools checking for these vulnerabilities require a specification to operate. In most cases the task of providing such a specification is delegated to the user. Moreover, the efficacy of these tools is only as good as the specification. Unfortunately, writing a comprehensive specification presents a major challenge: parts of the specification are easy to miss, leading to missed vulnerabilities; similarly, incorrect specifications may lead to false positives. This paper proposes Merlin, a new approach for automatically inferring explicit information flow specifications from program code. Such specifications greatly reduce manual labor, and enhance the quality of results, while using tools that check for security violations caused by explicit information flow. Beginning with a data propagation graph, which represents interprocedural flow of information in the program, Merlin aims to automatically infer an information flow specification. Merlin models information flow paths in the propagation graph using probabilistic constraints. A naive modeling requires an exponential number of constraints, one per path in the propagation graph. For scalability, we approximate these path constraints using constraints on chosen triples of nodes, resulting in a cubic number of constraints. We characterize this approximation as a probabilistic abstraction, using the theory of probabilistic refinement developed by McIver and Morgan. We solve the resulting system of probabilistic constraints using factor graphs, which are a well-known structure for performing probabilistic inference. We experimentally validate the Merlin approach by applying it to 10 large business-critical Web applications that have been analyzed with CAT.NET, a state-of-the-art static analysis tool for .NET. We find a total of 167 new confirmed specifications, which result in a total of 322 additional vulnerabilities across the 10 benchmarks. More accurate specifications also reduce the false positive rate: in our experiments, Merlin-inferred specifications result in 13 false positives being removed; this constitutes a 15% reduction in the CAT.NET false positive rate on these 10 programs. The final false positive rate for CAT.NET after applying Merlin in our experiments drops to under 1%.",security analysis tools; specification inference,Merlin: specification inference for explicit information flow problems,x,,,,,,,,,,NO,
S1243,2,bkwd,journalArticle,,"Lin, Zhiqiang; Rhee, Junghwan; Wu, Chao; Zhang, Xiangyu; Xu, Dongyan",,,,"Uncovering semantic data of interest in memory pages without memory mapping information is an important capability in computer forensics. Existing memory mappingguided techniques do not work in that scenario as pointers in the un-mappable memory cannot be resolved and navigated. To address this problem, we present a probabilistic inference-based approach called DIMSUM to enable the recognition of data structure instances from un-mappable memory. Given a set of memory pages and the speciﬁcation of a target data structure, DIMSUM will identify instances of the data structure in those pages with quantiﬁable conﬁdence. More speciﬁcally, it builds graphical models based on boolean constraints generated from the data structure and the memory page contents. Probabilistic inference is performed on the graphical models to generate results ranked with probabilities. Our experiments with realworld applications on both Linux and Android platforms show that DIMSUM achieves higher effectiveness than nonprobabilistic approaches without memory mapping information.",,DIMSUM: Discovering Semantic Data of Interest from Un-mappable Memory with Conﬁdence,x,,,,,,,,,,NO,
S1242,2,bkwd,conferencePaper,2018,"Kate, Sayali; Ore, John-Paul; Zhang, Xiangyu; Elbaum, Sebastian; Xu, Zhaogui",Proceedings of the 2018 26th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering,10.1145/3236024.3236035,https://doi.org/10.1145/3236024.3236035,"Program variables used in robotic and cyber-physical systems often have implicit physical units that cannot be determined from their variable types. Inferring an abstract physical unit type for variables and checking their physical unit type consistency is of particular importance for validating the correctness of such systems. For instance, a variable with the unit of ‘meter’ should not be assigned to another variable with the unit of ‘degree-per-second’. Existing solutions have various limitations such as requiring developers to annotate variables with physical units and only handling variables that are directly or transitively used in popular robotic libraries with known physical unit information. We observe that there are a lot of physical unit hints in these softwares such as variable names and specific forms of expressions. These hints have uncertainty as developers may not respect conventions. We propose to model them with probability distributions and conduct probabilistic inference. At the end, our technique produces a unit distribution for each variable. Unit inconsistencies can then be detected using the highly probable unit assignments. Experimental results on 30 programs show that our technique can infer units for 159.3% more variables compared to the state-of-the-art with more than 88.7% true positives, and inconsistencies detection on 90 programs shows that our technique reports 103.3% more inconsistencies with 85.3% true positives.",abstract type inference; dimensional analysis; physical units; probabilistic inference; robotic systems; static analysis; unit consistency,Phys: probabilistic physical unit assignment and inconsistency detection,x,,,x,,,,,,,NO,
S1241,2,bkwd,book,2009,"Koller, Daphne; Friedman, Nir",,,,"A general framework for constructing and using probabilistic models of complex systems that would enable a computer to use available information for making decisions. Most tasks require a person or an automated system to reason--to reach conclusions based on available information. The framework of probabilistic graphical models, presented in this book, provides a general approach for this task. The approach is model-based, allowing interpretable models to be constructed and then manipulated by reasoning algorithms. These models can also be learned automatically from data, allowing the approach to be used in cases where manually constructing a model is difficult or even impossible. Because uncertainty is an inescapable aspect of most real-world applications, the book focuses on probabilistic models, which make the uncertainty explicit and provide models that are more faithful to reality. Probabilistic Graphical Models discusses a variety of models, spanning Bayesian networks, undirected Markov networks, discrete and continuous models, and extensions to deal with dynamical systems and relational data. For each class of models, the text describes the three fundamental cornerstones: representation, inference, and learning, presenting both basic concepts and advanced techniques. Finally, the book considers the use of the proposed framework for causal reasoning and decision making under uncertainty. The main text in each chapter provides the detailed technical development of the key ideas. Most chapters also include boxes with additional material: skill boxes, which describe techniques; case study boxes, which discuss empirical cases related to the approach described in the text, including applications in computer vision, robotics, natural language understanding, and computational biology; and concept boxes, which present significant concepts drawn from the material in the chapter. Instructors (and readers) can group chapters in various combinations, from core topics to more technically advanced material, to suit their particular needs.",Computers / Machine Theory,Probabilistic Graphical Models: Principles and Techniques,x,,,x,,,,,,,NO,
S1240,2,bkwd,book,2010,"Horváth, Zoltán; Plasmeijer, Rinus; Zsók, Viktoria",,,,"This volume presents the revised lecture notes of selected talks given at the Third Central European Functional Programming School, CEFP 2009, held in May 2009 in Komárno, Slovakia. It was co-organized with the TFP 2009 conference. The summer school included a three days warm-up session organized in Budapest, Hungary also in May, 2009. The 11 revised full papers presented were carefully reviewed and selected. The lectures cover a wide range of topics such as design patterns, semantics, types, and advanced programming in various functional programming languages.",Computers / Information Technology; Computers / Languages / General; Computers / Networking / Hardware; Computers / Programming / General; Computers / Software Development & Engineering / General; Mathematics / Discrete Mathematics; Mathematics / Logic,"Central European Functional Programming School: Third Summer School, CEFP 2009, Budapest, Hungary, May 21-23, 2009 and Komárno, Slovakia, May 25-30, 2009, Revised Selected Lectures",x,,,x,,,,,,,NO,
S1239,2,bkwd,journalArticle,1978,"Karr, Michael; Loveman, David B.",Communications of the ACM,10.1145/359488.359501,https://doi.org/10.1145/359488.359501,"The issues of how a programming language might aid in keeping track of physical units (feet, sec, etc.) are discussed. A method is given for the introduction of relationships among units (a watt is volts*amps, a yard is three feet) and subsequent automatic conversion based upon these relationships. Various proposals for syntax are considered.",compiler construction; language design; language syntax; units,Incorporation of units into programming languages,x,,,x,,,,,,,NO,
S1238,2,bkwd,bookSection,2006,"Jiang, Lingxiao; Su, Zhendong",Proceedings of the 28th international conference on Software engineering,,https://doi.org/10.1145/1134285.1134323,"Misuse of measurement units is a common source of errors in scientific applications, but standard type systems do not prevent such errors. Dimensional analysis in physics can be used to manually detect such errors in physical equations. It is, however, not feasible to perform such manual analysis for programs computing physical equations because of code complexity. In this paper, we present a type system to automatically detect potential errors involving measurement units. It is constraint-based: we model units as types and flow of units as constraints. However, standard type checking algorithms are not powerful enough to handle units because of their abelian group nature (e.g., being commutative, multiplicative, and associative). Our system combines techniques such as type inference and Gaussian Elimination to overcome this problem. We have implemented Osprey, a prototype of the system for C programs, and evaluated it on various test programs, including computational physics and mechanical engineering applications. Osprey discovered unknown errors in mature code; it is precise with few false positives; it is also efficient and scales to large programs---we have successfully used it to analyze programs with hundreds of thousands of lines of code.",constraint-based analysis; dimensional analysis; Gaussian elimination; measurement units; type systems,Osprey: a practical type system for validating dimensional unit correctness of C programs,x,,,x,,,,,,,NO,
S1237,2,bkwd,journalArticle,1988,"Hilfinger, Paul N.",ACM Transactions on Programming Languages and Systems,10.1145/42190.42346,https://doi.org/10.1145/42190.42346,"This paper illustrates the use of Ada's abstraction facilities—notably, operator overloading and type parameterization—to define an oft-requested feature: a way to attribute units of measure to variables and values. The definition given allows the programmer to specify units of measure for variables, constants, and parameters; checks uses of these entities for dimensional consistency; allows arithmetic between them, where legal; and provides scale conversions between commensurate units. It is not constrained to a particular system of measurement (such as the metric or English systems). Although the definition is in standard Ada and requires nothing special of the compiler, certain reasonable design choices in the compiler, discussed here at some length, can make its implementation particularly efficient.",,An Ada package for dimensional analysis,x,,,,,,,,,,NO,
S1234,2,bkwd,journalArticle,,"Dietz, Laura; Dallmeier, Valentin; Zeller, Andreas; Scheffer, Tobias",,,,"We devise a graphical model that supports the process of debugging software by guiding developers to code that is likely to contain defects. The model is trained using execution traces of passing test runs; it reﬂects the distribution over transitional patterns of code positions. Given a failing test case, the model determines the least likely transitional pattern in the execution trace. The model is designed such that Bayesian inference has a closed-form solution. We evaluate the Bernoulli graph model on data of the software projects AspectJ and Rhino.",,Localizing Bugs in Program Executions,x,,,x,,,,,,,NO,
S1233,2,bkwd,conferencePaper,2006,"Guo, Philip J.; Perkins, Jeff H.; McCamant, Stephen; Ernst, Michael D.",Proceedings of the 2006 international symposium on Software testing and analysis,10.1145/1146238.1146268,https://doi.org/10.1145/1146238.1146268,"An abstract type groups variables that are used for related purposes in a program. We describe a dynamic unification-based analysis for inferring abstract types. Initially, each run-time value gets a unique abstract type. A run-time interaction among values indicates that they have the same abstract type, so their abstract types are unified. Also at run time, abstract types for variables are accumulated from abstract types for values. The notion of interaction may be customized, permitting the analysis to compute finer or coarser abstract types; these different notions of abstract type are useful for different tasks. We have implemented the analysis for compiled x86 binaries and for Java bytecodes. Our experiments indicate that the inferred abstract types are useful for program comprehension, improve both the results and the run time of a follow-on program analysis, and are more precise than the output of a comparable static analysis, without suffering from overfitting.",abstract types; C; C++; dynamic analysis; interaction; Java; mixed-level analysis; type inference; units; values and variables,Dynamic inference of abstract types,x,,,,,,,,,,NO,
S1232,2,bkwd,conferencePaper,2018,"Kate, Sayali; Ore, John-Paul; Zhang, Xiangyu; Elbaum, Sebastian; Xu, Zhaogui",Proceedings of the 2018 26th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering,10.1145/3236024.3236035,https://doi.org/10.1145/3236024.3236035,"Program variables used in robotic and cyber-physical systems often have implicit physical units that cannot be determined from their variable types. Inferring an abstract physical unit type for variables and checking their physical unit type consistency is of particular importance for validating the correctness of such systems. For instance, a variable with the unit of ‘meter’ should not be assigned to another variable with the unit of ‘degree-per-second’. Existing solutions have various limitations such as requiring developers to annotate variables with physical units and only handling variables that are directly or transitively used in popular robotic libraries with known physical unit information. We observe that there are a lot of physical unit hints in these softwares such as variable names and specific forms of expressions. These hints have uncertainty as developers may not respect conventions. We propose to model them with probability distributions and conduct probabilistic inference. At the end, our technique produces a unit distribution for each variable. Unit inconsistencies can then be detected using the highly probable unit assignments. Experimental results on 30 programs show that our technique can infer units for 159.3% more variables compared to the state-of-the-art with more than 88.7% true positives, and inconsistencies detection on 90 programs shows that our technique reports 103.3% more inconsistencies with 85.3% true positives.",abstract type inference; dimensional analysis; physical units; probabilistic inference; robotic systems; static analysis; unit consistency,Phys: probabilistic physical unit assignment and inconsistency detection,x,,,x,,,,,,,NO,
S1231,2,bkwd,journalArticle,1986,"Pearl, Judea",Artificial Intelligence,10.1016/0004-3702(86)90072-X,https://www.sciencedirect.com/science/article/pii/000437028690072X,"Belief networks are directed acyclic graphs in which the nodes represent propositions (or variables), the arcs signify direct dependencies between the linked propositions, and the strengths of these dependencies are quantified by conditional probabilities. A network of this sort can be used to represent the generic knowledge of a domain expert, and it turns into a computational architecture if the links are used not merely for storing factual knowledge but also for directing and activating the data flow in the computations which manipulate this knowledge. The first part of the paper deals with the task of fusing and propagating the impacts of new information through the networks in such a way that, when equilibrium is reached, each proposition will be assigned a measure of belief consistent with the axioms of probability theory. It is shown that if the network is singly connected (e.g. tree-structured), then probabilities can be updated by local propagation in an isomorphic network of parallel and autonomous processors and that the impact of new information can be imparted to all propositions in time proportional to the longest path in the network. The second part of the paper deals with the problem of finding a tree-structured representation for a collection of probabilistically coupled propositions using auxiliary (dummy) variables, colloquially called “hidden causes.” It is shown that if such a tree-structured representation exists, then it is possible to uniquely uncover the topology of the tree by observing pairwise dependencies among the available propositions (i.e., the leaves of the tree). The entire tree structure, including the strengths of all internal relationships, can be reconstructed in time proportional to n log n, where n is the number of leaves.",,"Fusion, propagation, and structuring in belief networks",x,,,x,,,,,,,NO,
S1230,2,bkwd,conferencePaper,2017,"Ore, John-Paul; Detweiler, Carrick; Elbaum, Sebastian",Proceedings of the 26th ACM SIGSOFT International Symposium on Software Testing and Analysis,10.1145/3092703.3098219,https://doi.org/10.1145/3092703.3098219,"Systems that interact with the physical world use software that represents and manipulates physical quantities. To operate correctly, these systems must obey the rules of how quantities with physical units can be combined, compared, and manipulated. Incorrectly manipulating physical quantities can cause faults that go undetected by the type system, likely manifesting later as incorrect behavior. Existing approaches for inconsistency detection require code annotation, physical unit libraries, or specialized programming languages. We introduce Phriky-Units, a static analysis tool that detects physical unit inconsistencies in robotic software without developer annotations. It does so by capitalizing on existing shared libraries that handle standardized physical units, common in the cyber-physical domain, to link class attributes of shared libraries to physical units. In this work, we describe how Phriky-Units works, provide details of the implementation, and explain how Phriky-Units can be used. Finally we present a summary of an empirical evaluation showing it has an 87% true positive rate for a class of inconsistencies we detect with high-confidence.",dimensional analysis; physical units; program analysis; robotic systems; static analysis; type checking; unit consistency,"Phriky-units: a lightweight, annotation-free physical unit inconsistency detection tool",x,,,x,,,,,,,NO,
S1229,2,bkwd,webpage,,,,,https://dl.acm.org/doi/abs/10.1145/3092703.3092722,,,Lightweight detection of physical unit inconsistencies without program annotations | Proceedings of the 26th ACM SIGSOFT International Symposium on Software Testing and Analysis,x,,,,,,,,,,NO,
S1228,2,bkwd,journalArticle,,"Mooij, Joris M; Mooij, Joris; Org, Libdai",,,,"This paper describes the software package libDAI, a free & open source C++ library that provides implementations of various exact and approximate inference methods for graphical models with discrete-valued variables. libDAI supports directed graphical models (Bayesian networks) as well as undirected ones (Markov random ﬁelds and factor graphs). It offers various approximations of the partition sum, marginal probability distributions and maximum probability states. Parameter learning is also supported. A feature comparison with other open source software packages for approximate inference is given. libDAI is licensed under the GPL v2+ license and is available at http://www.libdai.org.",,libDAI: A Free and Open Source C++ Library for Discrete Approximate Inference in Graphical Models,x,,,x,,,,,,,NO,
S1227,2,bkwd,book,2004,"Nielson, Flemming; Nielson, Hanne R.; Hankin, Chris",,,,"Program analysis concerns static techniques for computing reliable approximate information about the dynamic behaviour of programs. Applications include compilers (for code improvement), software validation (for detecting errors in algorithms or breaches of security) and transformations between data representation (for solving problems such as the Y2K problem). This book is unique in giving an overview of the four major approaches to program analysis: data flow analysis, constraint based analysis, abstract interpretation, and type and effect systems. The presentation demonstrates the extensive similarities between the approaches; this will aid the reader in choosing the right approach and in enhancing it with insights from the other approaches. The book covers basic semantic properties as well as more advanced algorithmic techniques. The book is aimed at M.Sc. and Ph.D. students but will be valuable also for experienced researchers and professionals.",Computers / Information Technology; Computers / Programming / General; Computers / Programming Languages / General; Computers / Software Development & Engineering / General,Principles of Program Analysis,x,,,,,,,,,,NO,
S1226,2,bkwd,conferencePaper,2017,"Misailovic, Sasa","Proceedings of the 2017 International Conference on Compilers, Architectures and Synthesis for Embedded Systems Companion",10.1145/3125501.3125524,https://doi.org/10.1145/3125501.3125524,"Popular application domains such as multimedia processing, machine learning, and big-data analytics operate on inherently noisy data and make decisions under uncertainty. While these applications are often good candidates for both algorithmic and system-level approximation, a major open challenge is how to analyze the influence of noisy data and candidate approximations on the application's outputs. At the same time, probabilistic programming languages provide an intuitive way to model uncertainty by expressing complex probabilistic models as computer programs. The talk will give an overview of PSI (http://www.psisolver.org), a system for exact symbolic inference. PSI computes succinct symbolic representations of the joint posterior distribution represented by a probabilistic program using static analysis. PSI supports programs with both discrete and continuous distributions. It can compute answers to various posterior distribution queries, expectation queries and assertion queries using its own back-end for symbolic reasoning. This talk will present how we can represent some problems in approximate computing as probabilistic programs and use PSI to automatically get symbolic expressions that represent the distributions of the output error.",,Probabilistic reasoning for analysis of approximate computations,x,,,,,,,,,,NO,
S1225,2,bkwd,book,1998,"Fellbaum, Christiane",,,,"WordNet is an on-line lexical reference system whose design isinspired by current psycholinguistic theories of human lexical memory;version 1.6 is the most up-to-date version of the system.WordNet, an electronic lexical database, is considered to be the most important resource available to researchers in computational linguistics, text analysis, and many related areas. Its design is inspired by current psycholinguistic and computational theories of human lexical memory. English nouns, verbs, adjectives, and adverbs are organized into synonym sets, each representing one underlying lexicalized concept. Different relations link the synonym sets.The purpose of this volume is twofold. First, it discusses the design of WordNet and the theoretical motivations behind it. Second, it provides a survey of representative applications, including word sense identification, information retrieval, selectional preferences of verbs, and lexical chains. ContributorsReem Al-Halimi, Robert C. Berwick, J. F. M. Burg, Martin Chodorow, Christiane Fellbaum, Joachim Grabowski, Sanda Harabagiu, Marti A. Hearst, Graeme Hirst, Douglas A. Jones, Rick Kazman, Karen T. Kohl, Shari Landes, Claudia Leacock, George A. Miller, Katherine J. Miller, Dan Moldovan, Naoyuki Nomura, Uta Priss, Philip Resnik, David St-Onge, Randee Tengi, Reind P. van de Riet, Ellen Voorhees",Language Arts & Disciplines / Linguistics / General,WordNet: An Electronic Lexical Database,x,,,,,,,,,,NO,
S1224,2,bkwd,conferencePaper,2007,"Kagdi, Huzefa; Collard, Michael L.; Maletic, Jonathan I.",Fourth International Workshop on Mining Software Repositories (MSR'07:ICSE Workshops 2007),10.1109/MSR.2007.3,,"Two approaches for mining function-call usage patterns from source code are compared The first approach, itemset mining, has recently been applied to this problem. The other approach, sequential-pattern mining, has not been previously applied to this problem. Here, a call-usage pattern is a composition of function calls that occur in a function definition. Both approaches look for frequently occurring patterns that represent standard usage of functions and identify possible errors. Itemset mining produces unordered patterns, i.e., sets of function calls, whereas, sequential-pattern mining produces partially ordered patterns, i.e., sequences of function calls. The trade-off between the additional ordering context given by sequential-pattern mining and the efficiency of itemset mining is investigated. The two approaches are applied to the Lima kernel v2.6.14 and results show that mining ordered patterns is worth the additional cost.",Computational efficiency; Computer science; Costs; Data mining; Fault diagnosis; Inspection; Itemsets; Kernel; Linux; Software systems,Comparing Approaches to Mining Source Code for Call-Usage Patterns,x,,,,,,,,,,NO,
S1223,2,bkwd,journalArticle,2013,"Khatoon, Shaheen; Li, Guohui; Mahmood, Azhar",Intelligent Data Analysis,10.3233/IDA-130589,https://content.iospress.com/articles/intelligent-data-analysis/ida00589,"Program source code substantially is structured and contains semantically rich programming constructs such as variables, functions, data structures, and program structures which indicate patterns. Mining source code by using different data mining tec",,Comparison and evaluation of source code mining tools and techniques: A qualitative approach,x,,,,,,,,,,NO,
S1222,2,bkwd,conferencePaper,2015,"Ingibergsson, Johann Thor Mogensen; Schultz, Ulrik Pagh; Kuhrmann, Marco",Product-Focused Software Process Improvement,10.1007/978-3-319-26844-6_25,,"Robotics has recently seen an increasing development, and the areas addressed within robotics has extended into domains we consider safety-critical, fostering the development of standards that facilitate the development of safe robots. Safety standards describe concepts to maintain desired reactions or performance in malfunctioning systems, and influence industry regarding software development and project management. However, academia seemingly did not reach the same degree of utilisation of standards. This paper presents the findings from a systematic mapping study in which we study the state-of-the-art in developing software for safety-critical software for autonomous field robots. The purpose of the study is to identify practices used for the development of autonomous field robots and how these practices relate to available safety standards. Our findings from reviewing 49 papers show that standards, if at all, are barely used. The majority of the papers propose various solutions to achieve safety, and about half of the papers refer to non-standardised approaches that mainly address the methodical rather than the development level. The present study thus shows an emerging field still on the quest for suitable approaches to develop safety-critical software, awaiting appropriate standards for this support.",Autonomous field robots; Development practices; Safety; Standards; Systematic mapping study,On the Use of Safety Certification Practices in Autonomous Field Robot Software Development: A Systematic Mapping Study,x,,,,,,,,,,NO,
S1221,2,bkwd,conferencePaper,2014,"Trojanek, Piotr; Eder, Kerstin",2014 IEEE/RSJ International Conference on Intelligent Robots and Systems,10.1109/IROS.2014.6942753,,"Navigation algorithms are fundamental for mobile robots. While the correctness of the algorithms is important, it is equally important that they do not fail because of bugs in their implementation. Yet, even widely-used robot navigation code lacks proofs of correctness or credible coverage reports from testing. Robot software developers usually point towards the cost of manual verification or lack of automated tools that would handle their code. We demonstrate that the choice of programming language is essential both for finding bugs in the code and for proving their absence. Our re-implementation of three robot navigation algorithms in SPARK revealed bugs that for years have not been detected in their original code in C/C++. For one of the implementations we demonstrate that it is free from run-time errors. Our code and results are available online to encourage uptake by the robot software developers community.",Arrays; Libraries; Navigation; Robots; Software; Software algorithms; Sparks,Verification and testing of mobile robot navigation algorithms: A case study in SPARK,x,,,,,,,,,,NO,
S1220,2,bkwd,conferencePaper,2013,"Cortesi, Agostino; Ferrara, Pietro; Chaki, Nabendu",IEEE ISR 2013,10.1109/ISR.2013.6739742,,"We overview the main semantics-based static analysis techniques for software verification: Data-flow analysis, Control-flow Analysis, Model Checking, and Abstract Interpretation. The complexity of control software, lying at the core of robotic systems, and the intensive use of numeric values pose several challenges for the formal verification of either functional or non-functional properties.",Abstract Interpretation; Abstracts; Automata; Computer languages; Formal Verification; Model checking; Robotics Software; Semantics; Software; Static Analysis,Static analysis techniques for robotics software verification,x,,,,,,,,,,NO,
S1219,2,bkwd,conferencePaper,2011,"Bohren, Jonathan; Rusu, Radu Bogdan; Gil Jones, E.; Marder-Eppstein, Eitan; Pantofaru, Caroline; Wise, Melonee; Mösenlechner, Lorenz; Meeussen, Wim; Holzer, Stefan",2011 IEEE International Conference on Robotics and Automation,10.1109/ICRA.2011.5980058,,"As autonomous personal robots come of age, we expect certain applications to be executed with a high degree of repeatability and robustness. In order to explore these applications and their challenges, we need tools and strategies that allow us to develop them rapidly. Serving drinks (i.e., locating, fetching, and delivering), is one such application with well-defined environments for operation, requirements for human interfacing, and metrics for successful completion. In this paper we present our experiences and results while building an autonomous robotic assistant using the PR21 platform and ROS2. The system integrates several new components that are built on top of the PR2's current capabilities. Perception components include dynamic obstacle identification, mechanisms for identifying the refrigerator, types of drinks, and human faces. Planning components include navigation, arm motion planning with goal and path constraints, and grasping modules. One of the main contributions of this paper is a new task-level executive system, SMACH, based on hierarchical concurrent state machines, which controls the overall behavior of the system. We provide in-depth discussions on the solutions that we found in accomplishing our goal, and the implementation strategies that let us achieve them.",Cameras; Grasping; Navigation; Planning; Robot sensing systems; Three dimensional displays,Towards autonomous robotic butlers: Lessons learned with the PR2,,x,,,,,,,,,NO,
S1218,2,bkwd,conferencePaper,2016,"Santos, André; Cunha, Alcino; Macedo, Nuno; Lourenço, Cláudio",2016 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS.2016.7759661,,"Robots are being increasingly used in safety-critical contexts, such as transportation and health. The need for flexible behavior in these contexts, due to human interaction factors or unstructured operating environments, led to a transition from hardware- to software-based safety mechanisms in robotic systems, whose reliability and quality is imperative to guarantee. Source code static analysis is a key component in formal software verification. It consists on inspecting code, often using automated tools, to determine a set of relevant properties that are known to influence the occurrence of defects in the final product. This paper presents HAROS, a generic, plug-in-driven, framework to evaluate code quality, through static analysis, in the context of the Robot Operating System (ROS), one of the most widely used robotic middleware. This tool (equipped with plug-ins for computing metrics and conformance to coding standards) was applied to several publicly available ROS repositories, whose results are also reported in the paper, thus providing a first overview of the internal quality of the software being developed in this community.",Context; Measurement; Safety; Service robots; Software; Standards,A framework for quality assessment of ROS repositories,,,,,,,,,x,,NO,
S1217,2,bkwd,conferencePaper,2016,"Santos, André; Cunha, Alcino; Macedo, Nuno; Lourenço, Cláudio",2016 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS.2016.7759661,,"Robots are being increasingly used in safety-critical contexts, such as transportation and health. The need for flexible behavior in these contexts, due to human interaction factors or unstructured operating environments, led to a transition from hardware- to software-based safety mechanisms in robotic systems, whose reliability and quality is imperative to guarantee. Source code static analysis is a key component in formal software verification. It consists on inspecting code, often using automated tools, to determine a set of relevant properties that are known to influence the occurrence of defects in the final product. This paper presents HAROS, a generic, plug-in-driven, framework to evaluate code quality, through static analysis, in the context of the Robot Operating System (ROS), one of the most widely used robotic middleware. This tool (equipped with plug-ins for computing metrics and conformance to coding standards) was applied to several publicly available ROS repositories, whose results are also reported in the paper, thus providing a first overview of the internal quality of the software being developed in this community.",Context; Measurement; Safety; Service robots; Software; Standards,A framework for quality assessment of ROS repositories,,,,,,,,,x,,NO,
S1216,2,bkwd,conferencePaper,2018,"Witte, Thomas; Tichy, Matthias",2018 IEEE/ACM 1st International Workshop on Robotics Software Engineering (RoSE),,,"Context: The software architecture of complex robot systems is usually divided into components. The software is then the configuration and combination of those components and their connectors. Objective: In the Robot Operating System (ROS), this architectural configuration, the ROS node graph, is partly defined in code and created at run-time. The static information about the architecture in the configuration is limited and checking the consistency at development time is not possible. The full software has to be manually executed to check the consistency and debug configuration errors. Method: We propose an approach and a corresponding tool to analyze ROS nodes and their launch files to check consistency and issue warnings if potential problems are detected. The approach uses both static analysis of the launch files as well as dynamic analysis of individual ROS nodes to reconstruct the node graph without executing the whole launch configuration. The nodes are executed in a sandbox to prevent side effects and enable the integration of the analysis tool, e.g., into automated testing systems. Results: The evaluation on internal and publicly available ROS projects shows that we are able to reconstruct the complete architecture of the system if the nodes implement a common lifecycle. Conclusion: The approach enables ROS developers to avoid creating incompatible architectures and check consistency already at development time. The approach can be extended to also monitor architectural consistency at run time.",Computer architecture; dynamic analysis; Peer-to-peer computing; Prototypes; Robots; ROS; roslaunch; Software architecture; software architecture description; Testing; Tools,Checking Consistency of Robot Software Architectures in ROS,,,,,,,,,,,,
S1215,2,bkwd,conferencePaper,2017,"Ore, John-Paul; Elbaum, Sebastian; Detweiler, Carrick",2017 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS.2017.8202229,,"This work presents a study of robot software using the Robot Operating System (ROS), focusing on detecting inconsistencies in physical unit manipulation. We discuss how dimensional analysis, the rules governing how physical quantities are combined, can be used to detect inconsistencies in robot software that are otherwise difficult to detect. Using a corpus of ROS software with 5.9M lines of code, we measure the frequency of these dimensional inconsistencies and find them in 6% (211 / 3,484) of repositories that use ROS. We find that the inconsistency type `Assigning multiple units to a variable' accounts for 75% of inconsistencies in ROS code. We identify the ROS classes and physical units most likely to be involved with dimensional inconsistencies, and find that the ROS Message type geometry_msgs::Twist is involved in over half of all inconsistencies and is used by developers in ways contrary to Twist's intent. We further analyze the frequency of physical units used in ROS programs as a proxy for assessing how developers use ROS, and discuss the practical implications of our results including how to detect and avoid these inconsistencies.",C++ languages; Geometry; Libraries; Meters; Robots; Software; Tools,Dimensional inconsistencies in code and ROS messages: A study of 5.9M lines of code,,x,,,,,,,,,NO,
S1214,2,bkwd,journalArticle,2012,"Täubig, Holger; Frese, Udo; Hertzberg, Christoph; Lüth, Christoph; Mohr, Stefan; Vorobev, Elena; Walter, Dennis",Autonomous Robots,10.1007/s10514-011-9271-y,https://doi.org/10.1007/s10514-011-9271-y,"When autonomous robots begin to share the human living and working spaces, safety becomes paramount. It is legally required that the safety of such systems is ensured, e.g. by certification according to relevant standards such as IEC 61508. However, such safety considerations are usually not addressed in academic robotics. In this paper we report on one such successful endeavor, which is concerned with designing, implementing, and certifying a collision avoidance safety function for autonomous vehicles and static obstacles. The safety function calculates a safety zone for the vehicle, depending on its current motion, which is as large as required but as small as feasible, thus ensuring safety against collision with static obstacles. We outline the algorithm which was specifically designed with safety in mind, and present our verification methodology which is based on formal proof and verification using the theorem prover Isabelle. The implementation and our methodology have been certified for use in applications up to SIL 3 of IEC 61508 by a certification authority (TÜV Süd Rail GmbH, Germany). Throughout, issues we recognized as being important for a successful application of formal methods in robotics are highlighted. Moreover, we argue that formal analysis deepens the understanding of the algorithm, and hence is valuable even outside the safety context.",,Guaranteeing functional safety: design for provability and computer-aided verification,x,,,,,,,,,,NO,
S1213,2,bkwd,conferencePaper,2015,"Ingibergsson, Johann Thor Mogensen; Schultz, Ulrik Pagh; Kuhrmann, Marco",Product-Focused Software Process Improvement,10.1007/978-3-319-26844-6_25,,"Robotics has recently seen an increasing development, and the areas addressed within robotics has extended into domains we consider safety-critical, fostering the development of standards that facilitate the development of safe robots. Safety standards describe concepts to maintain desired reactions or performance in malfunctioning systems, and influence industry regarding software development and project management. However, academia seemingly did not reach the same degree of utilisation of standards. This paper presents the findings from a systematic mapping study in which we study the state-of-the-art in developing software for safety-critical software for autonomous field robots. The purpose of the study is to identify practices used for the development of autonomous field robots and how these practices relate to available safety standards. Our findings from reviewing 49 papers show that standards, if at all, are barely used. The majority of the papers propose various solutions to achieve safety, and about half of the papers refer to non-standardised approaches that mainly address the methodical rather than the development level. The present study thus shows an emerging field still on the quest for suitable approaches to develop safety-critical software, awaiting appropriate standards for this support.",Autonomous field robots; Development practices; Safety; Standards; Systematic mapping study,On the Use of Safety Certification Practices in Autonomous Field Robot Software Development: A Systematic Mapping Study,x,,,,,,,,,,NO,
S1212,2,bkwd,conferencePaper,2011,"Christakis, Maria; Sagonas, Konstantinos",Practical Aspects of Declarative Languages,10.1007/978-3-642-18378-2_3,,"Concurrent programming is hard and prone to subtle errors. In this paper we present a static analysis that is able to detect some commonly occurring kinds of message passing errors in languages with dynamic process creation and communication based on asynchronous message passing. Our analysis is completely automatic, fast, and strikes a proper balance between soundness and completeness: it is effective in detecting errors and avoids false alarms by computing a close approximation of the interprocess communication topology of programs. We have integrated our analysis in dialyzer, a widely used tool for detecting software defects in Erlang programs, and demonstrate its effectiveness on libraries and applications of considerable size. Despite the fact that these applications have been developed over a long period of time and are reasonably well-tested, our analysis has managed to detect a significant number of previously unknown message passing errors in their code.",Call Graph; Communication Graph; False Alarm; Message Passing; Program Point,Detection of Asynchronous Message Passing Errors Using Static Analysis,x,,,x,,,,,,,NO,
S1211,2,bkwd,conferencePaper,2010,"Ganesan, Dharmalingam; Lindvall, Mikael; Ruley, Lamont; Wiegand, Robert; Ly, Vuong; Tsui, Tina",2010 17th Working Conference on Reverse Engineering,10.1109/WCRE.2010.27,,"Architectural styles impose constraints on both the topology and the interaction behavior of involved parties. In this paper, we propose an approach for analyzing implemented systems based on the publisher subscriber architectural style. From the style definition, we derive a set of reusable questions and show that some of them can be answered statically whereas others are best answered using dynamic analysis. The paper explains how the results of static analysis can be used to orchestrate dynamic analysis. The proposed method was successfully applied on the NASA's Goddard Mission Services Evolution Center (GMSEC) software product line. The results show that the GMSEC has a) a novel reusable vendor-independent middleware abstraction layer that allows the NASA's missions to configure the middleware of interest without changing the publishers' or subscribers' source code, and b) a high-priority bug due to behavioral discrepancies, which were eluded during testing and code reviews, among different implementations of the same APIs for different vendors.",Architectural Styles; Colored Petri Nets; Component-Connector Views; Computer architecture; Computer languages; Middleware; Monitoring; Probes; Software; Software architecture; Static and Dynamic Analysis; Vendors,Architectural Analysis of Systems Based on the Publisher-Subscriber Style,x,,,,,,,,,,NO,
S1210,2,bkwd,conferencePaper,2014,"Yamaguchi, Fabian; Golde, Nico; Arp, Daniel; Rieck, Konrad",2014 IEEE Symposium on Security and Privacy,10.1109/SP.2014.44,,"The vast majority of security breaches encountered today are a direct result of insecure code. Consequently, the protection of computer systems critically depends on the rigorous identification of vulnerabilities in software, a tedious and error-prone process requiring significant expertise. Unfortunately, a single flaw suffices to undermine the security of a system and thus the sheer amount of code to audit plays into the attacker's cards. In this paper, we present a method to effectively mine large amounts of source code for vulnerabilities. To this end, we introduce a novel representation of source code called a code property graph that merges concepts of classic program analysis, namely abstract syntax trees, control flow graphs and program dependence graphs, into a joint data structure. This comprehensive representation enables us to elegantly model templates for common vulnerabilities with graph traversals that, for instance, can identify buffer overflows, integer overflows, format string vulnerabilities, or memory disclosures. We implement our approach using a popular graph database and demonstrate its efficacy by identifying 18 previously unknown vulnerabilities in the source code of the Linux kernel.",Abstracts; Databases; Graph Databases; Joints; Kernel; Security; Static Analysis; Syntactics; Vulnerabilities,Modeling and Discovering Vulnerabilities with Code Property Graphs,x,,,,,,,,,,NO,
S1209,2,bkwd,journalArticle,2001,"Holzmann, Gerard J.; Smith, Margaret H.","Software Testing, Verification and Reliability",10.1002/stvr.228,https://onlinelibrary.wiley.com/doi/abs/10.1002/stvr.228,"To formally verify a large software application, the standard method is to invest a considerable amount of time and expertise into the manual construction of an abstract model, which is then analysed for its properties by either a mechanized or a human prover. There are two problems with this approach. The first problem is that this verification method can be no more reliable than the humans that perform the manual steps. If the average rate of error for human work is a function of the problem size, this holds not only for the construction of the original application, but also for the construction of the model. The standard verification trajectory therefore tends to become less reliable for larger applications. The second problem is one of timing and relevance. Software applications built by teams of programmers can change rapidly, often daily. Manually constructing an accurate abstraction of any one version of the application, though, can take weeks, which may jeopardize the validity of the results. In this paper a different verification method that avoids these problems is discussed. This method, which may be the precursor of a new class of testing techniques, was originally developed to allow for a thorough testing of parts of the software of a new commercial telephone switch. Here it is argued, though, that the method also has broad applicability to distributed software systems design in general.",automata; logic verification; model checking; model extraction; software testing; software verification; Spin; systems design,Software model checking: extracting verification models from source code†,x,,,,,,,,,,NO,
S1208,2,bkwd,conferencePaper,2017,"Ribeiro, Pedro; Miyazawa, Alvaro; Li, Wei; Cavalcanti, Ana; Timmis, Jon",Integrated Formal Methods,10.1007/978-3-319-66845-1_2,,"Designing robotic systems can be very challenging, yet controllers are often specified using informal notations with development driven primarily by simulations and physical experiments, without relation to abstract models of requirements. The ability to perform formal analysis and replicate results across different robotic platforms is hindered by the lack of well-defined formal notations. In this paper we present a timed state-machine based formal notation for robotics that is informed by current practice. We motivate our work with an example from swarm robotics and define a compositional CSP-based discrete timed semantics suitable for refinement. Our results support verification and, importantly, enable rigorous connection with sound simulations and deployments.",CSP; Process algebra; Refinement; Robotics; Semantics,Modelling and Verification of Timed Robotic Controllers,x,,,,,,,,,,NO,
S1207,2,bkwd,conferencePaper,2017,"Miyazawa, Alvaro; Ribeiro, Pedro; Li, Wei; Cavalcanti, Ana; Timmis, Jon",2017 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS.2017.8206238,,"Robot software controllers are often concurrent and time critical, and requires modern engineering approaches for validation and verification. With this motivation, we have developed a tool and techniques for graphical modelling with support for automatic generation of underlying mathematical definitions for model checking. It is possible to check automatically both general properties, like absence of deadlock, and specific application properties. We cater both for timed and untimed modelling and verification. Our approach has been tried in examples used in a variety of robotic applications.",Chemicals; Computational modeling; Detectors; Mathematical model; Robot sensing systems; Unified modeling language,Automatic property checking of robotic applications,x,,,,,,,,,,NO,
S1206,2,bkwd,conferencePaper,2016,"Foughali, Mohammed; Berthomieu, Bernard; Dal Zilio, Silvano; Ingrand, Félix; Mallet, Anthony",Formal Methods and Software Engineering,10.1007/978-3-319-47846-3_24,,"Software is an essential part of robotic systems. As robots and autonomous systems are more and more deployed in human environments, we need to use elaborate validation and verification techniques in order to gain a higher level of trust in our systems. This motivates our determination to apply formal verification methods to robotics software. In this paper, we describe our results obtained using model-checking on the functional layer of an autonomous robot. We implement an automatic translation from GenoM, a robotics model-based software engineering framework, to the formal specification language Fiacre. This translation takes into account the semantics of the robotics middleware. TINA, our model-checking toolbox, can be used on the synthesized models to prove real-time properties of the functional modules implementation on the robot. We illustrate our approach using a realistic autonomous navigation example.",Execution Task; Formal Verification; Functional Layer; Model Check; Reachability Graph,Model Checking Real-Time Properties on the Functional Layer of Autonomous Robots,x,,,,,,,,,,NO,
S1205,2,bkwd,conferencePaper,2013,"Gribov, Vladislav; Voos, Holger",2013 IEEE 18th Conference on Emerging Technologies Factory Automation (ETFA),10.1109/ETFA.2013.6647969,,"In this paper, a safety oriented model based software engineering process for autonomous robots is proposed. Herein, the main focus is on the modeling of the safety case based on the standard ISO/DIS 13482. Combined with a safe multilayer robot software architecture it allows to trace the safety requirements and to model safety relevant properties on the early design stages in order to build a reliable chain of evidence. The introduced engineering processes consist of the Domain Engineering, which is dealing with the development of a set of interlinked formalized safety cases and software components. Finally, the proposed engineering process is demonstrated on the example of the assembly assistant robot and ROS (Robot Operating System).",Hazards; Peer-to-peer computing; Service robots; Software; Unified modeling language,Safety oriented software engineering process for autonomous robots,x,x,,,,,,,,,NO,
S1203,2,bkwd,conferencePaper,2016,"Brunner, Sebastian G.; Steinmetz, Franz; Belder, Rico; Dömel, Andreas",2016 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS.2016.7759506,,"Robotic tasks are becoming increasingly complex, and with this also the robotic systems. This requires new tools to manage this complexity and to orchestrate the systems to fulfill demanding autonomous tasks. For this purpose, we developed a new graphical tool targeting at the creation and execution of robotic tasks, called RAFCON. These tasks are described in hierarchical state machines supporting concurrency. A formal notation of this concept is given. The tool provides many debugging mechanisms and a GUI with a graphical editor, allowing for intuitive visual programming and fast prototyping. The application of RAFCON for an autonomous mobile robot in the SpaceBotCamp competition has already proved to be successful.",Complexity theory; Concurrent computing; Graphical user interfaces; Programming profession; Robots; Visualization,"RAFCON: A graphical tool for engineering complex, robotic tasks",x,,,x,,,,,,,NO,
S1202,2,bkwd,journalArticle,2016,"Kumar, Pranav Srinivas; Emfinger, William; Karsai, Gabor; Watkins, Dexter; Gasser, Benjamin; Anilkumar, Amrutur",Electronics,10.3390/electronics5030053,https://www.mdpi.com/2079-9292/5/3/53,"This paper presents the Robot Operating System Model-driven development tool suite, (ROSMOD) an integrated development environment for rapid prototyping component-based software for the Robot Operating System (ROS) middleware. ROSMOD is well suited for the design, development and deployment of large-scale distributed applications on embedded devices. We present the various features of ROSMOD including the modeling language, the graphical user interface, code generators, and deployment infrastructure. We demonstrate the utility of this tool with a real-world case study: an Autonomous Ground Support Equipment (AGSE) robot that was designed and prototyped using ROSMOD for the NASA Student Launch competition, 2014–2015.",cyber-physical; development; distributed; embedded; model-driven; rapid; real-time; robotics; systems,"ROSMOD: A Toolsuite for Modeling, Generating, Deploying, and Managing Distributed Real-time Component-based Software using ROS",,,,x,,,,,x,,NO,
S1201,2,bkwd,conferencePaper,2017,"Santos, André; Cunha, Alcino; Macedo, Nuno; Arrais, Rafael; dos Santos, Filipe Neves",2017 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS.2017.8206237,,"The Robot Operating System (ROS) is nowadays one of the most popular frameworks for developing robotic applications. To ensure the (much needed) dependability and safety of such applications we forecast an increasing demand for ROS-specific coding standards, static analyzers, and tools alike. Unfortunately, the development of such standards and tools can be hampered by ROS modularity and configurability, namely the substantial number of primitives (and respective variants) that must, in principle, be considered. To quantify the severity of this problem, we have mined a large number of existing ROS packages to understand how its primitives are used in practice, and to determine which combinations of primitives are most popular. This paper presents and discusses the results of this study, and hopefully provides some guidance for future standardization efforts and tool developers.",C++ languages; Robots; Runtime; Software; Standards; Tools,Mining the usage patterns of ROS primitives,,,,x,,,,,x,,NO,
S1200,2,bkwd,journalArticle,,"Quigley, Morgan; Gerkey, Brian; Conley, Ken; Faust, Josh; Foote, Tully; Leibs, Jeremy; Berger, Eric; Wheeler, Rob; Ng, Andrew",,,,"This paper gives an overview of ROS, an opensource robot operating system. ROS is not an operating system in the traditional sense of process management and scheduling; rather, it provides a structured communications layer above the host operating systems of a heterogenous compute cluster. In this paper, we discuss how ROS relates to existing robot software frameworks, and brieﬂy overview some of the available application software which uses ROS.",,ROS: an open-source Robot Operating System,,x,,x,,,,,,,NO,
S1199,2,bkwd,journalArticle,1994,"Chidamber, S.R.; Kemerer, C.F.",IEEE Transactions on Software Engineering,10.1109/32.295895,,"Given the central role that software development plays in the delivery and application of information technology, managers are increasingly focusing on process improvement in the software development area. This demand has spurred the provision of a number of new and/or improved approaches to software development, with perhaps the most prominent being object-orientation (OO). In addition, the focus on process improvement has increased the demand for software measures, or metrics with which to manage the process. The need for such metrics is particularly acute when an organization is adopting a new technology for which established practices have yet to be developed. This research addresses these needs through the development and implementation of a new suite of metrics for OO design. Metrics developed in previous research, while contributing to the field's understanding of software development processes, have generally been subject to serious criticisms, including the lack of a theoretical base. Following Wand and Weber (1989), the theoretical base chosen for the metrics was the ontology of Bunge (1977). Six design metrics are developed, and then analytically evaluated against Weyuker's (1988) proposed set of measurement principles. An automated data collection tool was then developed and implemented to collect an empirical sample of these metrics at two field sites in order to demonstrate their feasibility and suggest ways in which managers may use these metrics for process improvement.<>",Application software; Engineering management; Information management; Information technology; Ontologies; Programming; Software development management; Software engineering; Software measurement; Technology management,A metrics suite for object oriented design,x,,,,,,,,,,NO,
S1198,2,bkwd,journalArticle,1976,"McCabe, T.J.",IEEE Transactions on Software Engineering,10.1109/TSE.1976.233837,,"This paper describes a graph-theoretic complexity measure and illustrates how it can be used to manage and control program complexity. The paper first explains how the graph-theory concepts apply and gives an intuitive explanation of the graph concepts in programming terms. The control graphs of several actual Fortran programs are then presented to illustrate the correlation between intuitive complexity and the graph-theoretic complexity. Several properties of the graph-theoretic complexity are then proved which show, for example, that complexity is independent of physical size (adding or subtracting functional statements leaves complexity unchanged) and complexity depends only on the decision structure of a program.",Basis; complexity measure; control flow; decomposition; Fluid flow measurement; graph theory; Graph theory; independence; linear; Linear programming; modularization; National security; programming; reduction; software; Software engineering; Software maintenance; Software measurement; Software systems; Software testing; System testing; testing,A Complexity Measure,x,,,,,,,,,,NO,
S1197,2,bkwd,conferencePaper,1992,"Oman, P.; Hagemeister, J.",,10.1109/ICSM.1992.242525,https://www.computer.org/csdl/proceedings-article/icsm/1992/00242525/12OmNyrqzy2,It is noted that the factors of software that determine or influence maintainability can be organized into a hierarchical structure of measurable attributes. For each of these attributes the authors show a metric definition consistent with the published definitions of the software characteristic being measured. The result is a tree structure of maintainability metrics which can be used for purposes of evaluating the relative maintainability of the software system. The authors define metrics for measuring the maintainability of a target software system and discuss how those metrics can be combined into a single index of maintainability.<>,,Metrics for assessing a software system's maintainability,x,,,,,,,,,,NO,
S1196,2,bkwd,conferencePaper,2014,"Ray, Baishakhi; Posnett, Daryl; Filkov, Vladimir; Devanbu, Premkumar",Proceedings of the 22nd ACM SIGSOFT International Symposium on Foundations of Software Engineering,10.1145/2635868.2635922,https://doi.org/10.1145/2635868.2635922,"What is the effect of programming languages on software quality? This question has been a topic of much debate for a very long time. In this study, we gather a very large data set from GitHub (729 projects, 80 Million SLOC, 29,000 authors, 1.5 million commits, in 17 languages) in an attempt to shed some empirical light on this question. This reasonably large sample size allows us to use a mixed-methods approach, combining multiple regression modeling with visualization and text analytics, to study the effect of language features such as static v.s. dynamic typing, strong v.s. weak typing on software quality. By triangulating findings from different methods, and controlling for confounding effects such as team size, project size, and project history, we report that language design does have a significant, but modest effect on software quality. Most notably, it does appear that strong typing is modestly better than weak typing, and among functional languages, static typing is also somewhat better than dynamic typing. We also find that functional languages are somewhat better than procedural languages. It is worth noting that these modest effects arising from language design are overwhelmingly dominated by the process factors such as project size, team size, and commit size. However, we hasten to caution the reader that even these modest effects might quite possibly be due to other, intangible process factors, e.g., the preference of certain personality types for functional, static and strongly typed languages.",bug fix; code quality; empirical research; programming language; regression analysis; software domain; type system,A large scale study of programming languages and code quality in github,x,,,,,,,,,,NO,
S1195,2,bkwd,conferencePaper,2013,"Cortesi, Agostino; Ferrara, Pietro; Chaki, Nabendu",IEEE ISR 2013,10.1109/ISR.2013.6739742,,"We overview the main semantics-based static analysis techniques for software verification: Data-flow analysis, Control-flow Analysis, Model Checking, and Abstract Interpretation. The complexity of control software, lying at the core of robotic systems, and the intensive use of numeric values pose several challenges for the formal verification of either functional or non-functional properties.",Abstract Interpretation; Abstracts; Automata; Computer languages; Formal Verification; Model checking; Robotics Software; Semantics; Software; Static Analysis,Static analysis techniques for robotics software verification,x,,,,,,,,,,NO,
S1194,2,bkwd,journalArticle,2013,"Reichardt, Max; Föhst, Tobias; Berns, Karsten",Electronic Communications of the EASST,10.14279/tuj.eceasst.60.855,https://ubsrvweb09.ub.tu-berlin.de/eceasst/article/view/855,"Frameworks have fundamental impact on software quality of robot control systems. We propose systematic framework design aiming at high levels of support for all quality attributes that are relevant in the robotics domain. Design decisions are taken accordingly. We argue that certain areas of design are especially critical, as changing decisions there would likely require rewriting significant parts of the implementation. For these areas, quality-motivated solutions and benefits for actual applications are discussed. We illustrate and evaluate their implementations in our framework Finroc - after briefly introducing it. This includes a highly modular framework core and a well-performing, lock-free, zero-copying communication mechanism. Finroc is being used in complex and also in commercial robotic projects - which evinces that the approaches are suitable for real-world applications.",,On Software Quality-motivated Design of a Real-time Framework for Complex Robot Control Systems,x,,,x,,,,,,,NO,
S1193,2,bkwd,conferencePaper,2008,"Tapp, Chris",SAE International Journal of Passenger Cars - Electronic and Electrical Systems,,https://trid.trb.org/view/1429834,,,An Introduction to MISRA C++,x,,,,,,,,,,NO,
S1192,2,bkwd,bookSection,2019,"Come, David; Brunel, Julien; Doose, David",Robotic Intelligence,,https://www.worldscientific.com/doi/abs/10.1142/9789811203480_0012,,C++; code query; formal methods; ROS; temporal logic,Improving code quality in ROS packages using a temporal extension of first-order logic,,,,x,,,,,x,,NO,
S1191,2,bkwd,bookSection,,"Goforth, Andre",AIAA Infotech@Aerospace (I@A) Conference,,https://arc.aiaa.org/doi/abs/10.2514/6.2013-5222,,,The Role and Impact of Software Coding Standards On System Integrity,x,,,,,,,,,,NO,
S1190,2,bkwd,journalArticle,2008,"Ayewah, Nathaniel; Pugh, William; Hovemeyer, David; Morgenthaler, J. David; Penix, John",IEEE Software,10.1109/MS.2008.130,,"Static analysis examines code in the absence of input data and without running the code. It can detect potential security violations (SQL injection), runtime errors (dereferencing a null pointer) and logical inconsistencies (a conditional test that can't possibly be true). Although a rich body of literature exists on algorithms and analytical frameworks used by such tools, reports describing experiences in industry are much harder to come by. The authors describe FindBugs, an open source static-analysis tool for Java, and experiences using it in production settings. FindBugs evaluates what kinds of defects can be effectively detected with relatively simple techniques and helps developers understand how to incorporate such tools into software development.",bug patterns; code quality; Computer bugs; Educational institutions; FindBugs; Java; Open source software; Production; Programming; Security; software defects; software quality; Software quality; Software tools; static analysis; Testing,Using Static Analysis to Find Bugs,x,,,,,,,,,,NO,
S1189,2,bkwd,conferencePaper,2004,"Kaner, Cem; Member, Senior; Bond, Walter P.",In METRICS 2004. IEEE CS,,,"Construct validity is about the question, how we know that we're measuring the attribute that we think we're measuring?  This is discussed in formal, theoretical ways in the computing literature (in terms of the representational theory of measurement) but  rarely in simpler ways that foster application by practitioners. Construct validity starts with a thorough analysis of the construct, the  attribute we are attempting to measure. In the IEEE Standard 1061, direct measures need not be validated. ""Direct"" measurement of  an attribute involves a metric that depends only on the value of the attribute, but few or no software engineering attributes or tasks  are so simple that measures of them can be direct. Thus, all metrics should be validated. The paper continues with a framework for  evaluating proposed metrics, and applies it to two uses of bug counts. Bug counts capture only a small part of the meaning of the  attributes they are being used to measure. Multidimensional analyses of attributes appear promising as a means of capturing the  quality of the attribute in question. Analysis fragments run throughout the paper, illustrating the breakdown of an attribute or task of  interest into sub-attributes for grouped study.",,Software Engineering Metrics: What Do They Measure and How Do We Know?,x,,,,,,,,,,NO,
S1187,2,bkwd,conferencePaper,2013,"Rahman, Foyzur; Devanbu, Premkumar",2013 35th International Conference on Software Engineering (ICSE),10.1109/ICSE.2013.6606589,,"Defect prediction techniques could potentially help us to focus quality-assurance efforts on the most defect-prone files. Modern statistical tools make it very easy to quickly build and deploy prediction models. Software metrics are at the heart of prediction models; understanding how and especially why different types of metrics are effective is very important for successful model deployment. In this paper we analyze the applicability and efficacy of process and code metrics from several different perspectives. We build many prediction models across 85 releases of 12 large open source projects to address the performance, stability, portability and stasis of different sets of metrics. Our results suggest that code metrics, despite widespread use in the defect prediction literature, are generally less useful than process metrics for prediction. Second, we find that code metrics have high stasis; they don't change very much from release to release. This leads to stagnation in the prediction models, leading to the same files being repeatedly predicted as defective; unfortunately, these recurringly defective files turn out to be comparatively less defect-dense.",Complexity theory; Measurement; Object oriented modeling; Predictive models; Software; Support vector machines; Training,"How, and why, process metrics are better",x,,,,,,,,,,NO,
S1185,2,bkwd,journalArticle,2014,"Holzmann, Gerard J.",Communications of the ACM,10.1145/2560217.2560218,https://doi.org/10.1145/2560217.2560218,Redundant software (and hardware) ensured Curiosity reached its destination and functioned as its designers intended.,,Mars code,x,,,,,,,,,,NO,
S1184,2,bkwd,journalArticle,2013,"Radjenović, Danijel; Heričko, Marjan; Torkar, Richard; Živkovič, Aleš",Information and Software Technology,10.1016/j.infsof.2013.02.009,https://www.sciencedirect.com/science/article/pii/S0950584913000426,Context Software metrics may be used in fault prediction models to improve software quality by predicting fault location. Objective This paper aims to identify software metrics and to assess their applicability in software fault prediction. We investigated the influence of context on metrics’ selection and performance. Method This systematic literature review includes 106 papers published between 1991 and 2011. The selected papers are classified according to metrics and context properties. Results Object-oriented metrics (49%) were used nearly twice as often compared to traditional source code metrics (27%) or process metrics (24%). Chidamber and Kemerer’s (CK) object-oriented metrics were most frequently used. According to the selected studies there are significant differences between the metrics used in fault prediction performance. Object-oriented and process metrics have been reported to be more successful in finding faults compared to traditional size and complexity metrics. Process metrics seem to be better at predicting post-release faults compared to any static code metrics. Conclusion More studies should be performed on large industrial software systems to find metrics more relevant for the industry and to answer the question as to which metrics should be used in a given context.,Software fault prediction; Software metric; Systematic literature review,Software fault prediction metrics: A systematic literature review,x,,,,,,,,,,NO,
S1183,2,bkwd,conferencePaper,2015,"Ingibergsson, Johann Thor Mogensen; Schultz, Ulrik Pagh; Kuhrmann, Marco",Product-Focused Software Process Improvement,10.1007/978-3-319-26844-6_25,,"Robotics has recently seen an increasing development, and the areas addressed within robotics has extended into domains we consider safety-critical, fostering the development of standards that facilitate the development of safe robots. Safety standards describe concepts to maintain desired reactions or performance in malfunctioning systems, and influence industry regarding software development and project management. However, academia seemingly did not reach the same degree of utilisation of standards. This paper presents the findings from a systematic mapping study in which we study the state-of-the-art in developing software for safety-critical software for autonomous field robots. The purpose of the study is to identify practices used for the development of autonomous field robots and how these practices relate to available safety standards. Our findings from reviewing 49 papers show that standards, if at all, are barely used. The majority of the papers propose various solutions to achieve safety, and about half of the papers refer to non-standardised approaches that mainly address the methodical rather than the development level. The present study thus shows an emerging field still on the quest for suitable approaches to develop safety-critical software, awaiting appropriate standards for this support.",Autonomous field robots; Development practices; Safety; Standards; Systematic mapping study,On the Use of Safety Certification Practices in Autonomous Field Robot Software Development: A Systematic Mapping Study,x,,,,,,,,,,NO,
S1182,2,bkwd,journalArticle,2013,"Trojanek, Piotr",arXiv:1302.5085 [cs],,http://arxiv.org/abs/1302.5085,"In this paper we apply a model-driven engineering approach to designing domain-specific solutions for robot control system development. We present a case study of the complete process, including identification of the domain meta-model, graphical notation definition and source code generation for subsumption architecture -- a well-known example of robot control architecture. Our goal is to show that both the definition of the robot-control architecture and its supporting tools fits well into the typical workflow of model-driven engineering development.",Computer Science - Robotics; Computer Science - Software Engineering,Model-driven engineering approach to design and implementation of robot control system,x,,,x,,,,,,,NO,
S1181,2,bkwd,journalArticle,2010,"Steck, Andreas; Schlegel, Christian",arXiv:1009.4877 [cs],,http://arxiv.org/abs/1009.4877,"Engineering the software development process in robotics is one of the basic necessities towards industrial-strength service robotic systems. A major challenge is to make the step from code-driven to model-driven systems. This is essential to replace hand-crafted single-unit systems by systems composed out of components with explicitly stated properties. Furthermore, this fosters reuse by separating robotics knowledge from short-cycled implementational technologies. Altogether, this is one but important step towards ""able"" robots. This paper reports on a model-driven development process for robotic systems. The process consists of a robotics metamodel with first explications of non-functional properties. A model-driven toolchain based on Eclipse provides the model transformation and code generation steps. It also provides design time analysis of resource parameters (e.g. schedulability analysis of realtime tasks) as a first step towards overall resource awareness in the development of integrated robotic systems. The overall approach is underpinned by several real world scenarios.",Computer Science - Robotics,Towards Quality of Service and Resource Aware Robotic Systems through Model-Driven Software Development,x,,,,,,,,,,NO,
S1180,2,bkwd,conferencePaper,2009,"Schlegel, Christian; Hassler, Thomas; Lotz, Alex; Steck, Andreas",2009 International Conference on Advanced Robotics,,,"Engineering the software development process in robotics is one of the basic necessities towards industrial-strength service robotic systems. A major challenge is to make the step from code-driven to model-driven systems. This is essential to replace hand-crafted single-unit systems by systems composed out of components with explicitly stated properties. Furthermore, this fosters reuse by separating robotics knowledge from short-cycled implementational technologies. Altogether, this is one but important step towards ldquoablerdquo robots. This paper reports on a practical approach to gain more insights into how a model-driven software approach can be applied to robotics systems.",Aerospace electronics; Automotive engineering; Computer industry; Computer science; Design engineering; Programming; Robotics and automation; Service robots; Software engineering; Software systems,Robotic software systems: From code-driven to model-driven designs,x,,,x,,,,,,,NO,
S1179,2,bkwd,journalArticle,,"Quigley, Morgan; Gerkey, Brian; Conley, Ken; Faust, Josh; Foote, Tully; Leibs, Jeremy; Berger, Eric; Wheeler, Rob; Ng, Andrew",,,,"This paper gives an overview of ROS, an opensource robot operating system. ROS is not an operating system in the traditional sense of process management and scheduling; rather, it provides a structured communications layer above the host operating systems of a heterogenous compute cluster. In this paper, we discuss how ROS relates to existing robot software frameworks, and brieﬂy overview some of the available application software which uses ROS.",,ROS: an open-source Robot Operating System,,x,,x,,,,,,,NO,
S1178,2,bkwd,conferencePaper,2012,"Kilgo, Paul; Syriani, Eugene; Anderson, Monica","Simulation, Modeling, and Programming for Autonomous Robots",10.1007/978-3-642-34327-8_14,,"In robotics we are often faced with the problem of repeatedly writing robot drivers for the same devices, but different robot frameworks. In an effort to counter this, a domain specific language for generating robot drivers was developed. However, descriptions tend to get verbose fast and the adopted syntax was difficult for programmers. This paper outlines an attempt to shift away from a textual syntax and toward a visual syntax, instead relying on the textual syntax to communicate the model to other tools. In addition, a formalism for defining ROS nodes is presented and a model transformation for mapping RDIS messages to ROS messages and vice-versa is created.",Concrete Syntax; Model Transformation; Object Management Group; Operational Semantic; Visual Modeling,A Visual Modeling Language for RDIS and ROS Nodes Using AToM3,,?,,x,,,,x,,,NO,
S1177,2,bkwd,conferencePaper,2002,"Lara, Juan de; Vangheluwe, Hans",Fundamental Approaches to Software Engineering,10.1007/3-540-45923-5_12,,"This article introduces the combined use of multi-formalism modelling and meta-modelling to facilitate computer assisted modelling of complex systems. The approach allows one to model different parts of a system using different formalisms. Models can be automatically converted between formalisms thanks to information found in a Formalism Transformation Graph (FTG), proposed by the authors. To aid in the automatic generation of multi-formalism modelling tools, formalisms are modelled in their own right (at a meta-level) within an appropriate formalism. This has been implemented in the interactive tool AToM3. This tool is used to describe formalisms commonly used in the simulation of dynamical systems, as well as to generate custom tools to process (create, edit, transform, simulate, optimise, ...) models expressed in the corresponding formalism. AToM3 relies on graph rewriting techniques and graph grammars to perform the transformations between formalisms as well as for other tasks, such as code generation and operational semantics specification.",Automatic Code Generation; Graph Grammars; Meta-Modeling; Modeling; Modeling and Simulation; Multi-Formalism,AToM3: A Tool for Multi-formalism and Meta-modelling,x,,,,,,,,,,NO,
S1176,2,bkwd,conferencePaper,2003,"Gerkey, Brian P.; Vaughan, Richard T.; Howard, Andrew",In Proceedings of the 11th International Conference on Advanced Robotics,,,"This paper describes the Player/Stage software tools applied to multi-robot, distributed-robot and sensor network systems. Player is a robot device server that provides network transparent robot control. Player seeks to constrain controller design as little as possible; it is device independent, non-locking and language- and style-neutral. Stage is a lightweight, highly configurable robot simulator that supports large populations. Player/Stage is a community Free Software project. Current usage of Player and Stage is reviewed, and some interesting research opportunities opened up by this infrastructure are identified. 1",,The Player/Stage Project: Tools for Multi-Robot and Distributed Sensor Systems,x,,,,,,,,,,NO,
S1175,2,bkwd,conferencePaper,2005,"Baillie, J.-C.",2005 IEEE/RSJ International Conference on Intelligent Robots and Systems,10.1109/IROS.2005.1545467,,"The growing diversity and complexity of existing robotic devices like humanoids, animal-like robots or wheeled robots, lead to the development of several incompatible software interfaces to control these robots. We believe that there is a need for a standard which could be universal, powerful and easy to use. The open source project URBI, a universal robotic body interface, aims at providing the ground for such a standard. It is based on a client/server architecture where the server is running on the robot and accessed by the client, on the robot or remotely via TCP/IP. The URBI language is a scripted language used by the client and capable of controlling the joints of the robot or access its sensors, camera, speakers or any accessible part of the machine. We present in this article an introduction to URBI and we describe how URBI differs from currently existing solutions. As an example making use of URBI-specific features, we present a simple perturbative approach to walk pattern generation, with URBI running on a ERS7 Aibo robot.",Aibo; Cameras; Computer languages; Control Architecture and Programming; Human-Robot Interfaces; Humanoid robots; Mobile robots; Natural languages; Open source software; Programming Language; Robot control; Robot sensing systems; Robot vision systems; Standard; TCPIP,URBI: towards a universal robotic low-level programming language,x,,,,,,,,,,NO,
S1173,2,bkwd,conferencePaper,2012,"Anderson, Monica; Bowman, Jason; Kilgo, Paul",2012 IEEE International Conference on Robotics and Automation,10.1109/ICRA.2012.6225197,,"Researchers have focused on frameworks and specialized languages that ease the reuse of previously developed software artifacts on new platforms by using domain concepts as a programming API rather than robot specific APIs. This approach relies upon the existence of a customized device driver program that maps the specific device API to the framework-based domain concepts. While this approach works well to isolate device semantics to a generalizable domain model, a customized driver is required to match each device to each framework or language. To that end, it may be worthwhile to explore the science of interfacing devices to frameworks. In this paper, we expand the previously presented RDIS to be more generalizable by redefining RDIS in terms of the robot device and framework domains. We introduce several high-level domain concepts that describe the invariant features of devices while providing parameterization for attributes that vary. We consider relevant threading models and a decomposition that insulates the application interface or framework connection from the robot-specific primitives. In addition to efficiencies that can be gained in providing declarative device to framework connectivity, new approaches in this space could be the basis for more user friendly development environments that use a discovery mechanism for presenting available control and access mechanisms.",Abstracts; Arrays; Encoding; Hardware; Message systems; Robots; Semantics,RDIS: Generalizing domain concepts to specify device to framework mappings,x,,,,,,,,,,NO,
S1171,2,bkwd,book,2012,"Wohlin, Claes; Runeson, Per; Höst, Martin; Ohlsson, Magnus C.; Regnell, Björn; Wesslén, Anders",,,,"Like other sciences and engineering disciplines, software engineering requires a cycle of model building, experimentation, and learning. Experiments are valuable tools for all software engineers who are involved in evaluating and choosing between different methods, techniques, languages and tools. The purpose of Experimentation in Software Engineering is to introduce students, teachers, researchers, and practitioners to empirical studies in software engineering, using controlled experiments. The introduction to experimentation is provided through a process perspective, and the focus is on the steps that we have to go through to perform an experiment. The book is divided into three parts. The first part provides a background of theories and methods used in experimentation. Part II then devotes one chapter to each of the five experiment steps: scoping, planning, execution, analysis, and result presentation. Part III completes the presentation with two examples. Assignments and statistical material are provided in appendixes. Overall the book provides indispensable information regarding empirical studies in particular for experiments, but also for case studies, systematic literature reviews, and surveys. It is a revision of the authors’ book, which was published in 2000. In addition, substantial new material, e.g. concerning systematic literature reviews and case study research, is introduced. The book is self-contained and it is suitable as a course book in undergraduate or graduate studies where the need for empirical studies in software engineering is stressed. Exercises and assignments are included to combine the more theoretical material with practical aspects. Researchers will also benefit from the book, learning more about how to conduct empirical studies, and likewise practitioners may use it as a “cookbook” when evaluating new methods or techniques before implementing them in their organization.",Computers / Information Technology; Computers / Software Development & Engineering / General; Social Science / Methodology; Social Science / Research,Experimentation in Software Engineering,x,,,,,,,,,,NO,
S1170,2,bkwd,conferencePaper,2018,"Witte, Thomas; Tichy, Matthias",2018 IEEE/ACM 1st International Workshop on Robotics Software Engineering (RoSE),,,"Context: The software architecture of complex robot systems is usually divided into components. The software is then the configuration and combination of those components and their connectors. Objective: In the Robot Operating System (ROS), this architectural configuration, the ROS node graph, is partly defined in code and created at run-time. The static information about the architecture in the configuration is limited and checking the consistency at development time is not possible. The full software has to be manually executed to check the consistency and debug configuration errors. Method: We propose an approach and a corresponding tool to analyze ROS nodes and their launch files to check consistency and issue warnings if potential problems are detected. The approach uses both static analysis of the launch files as well as dynamic analysis of individual ROS nodes to reconstruct the node graph without executing the whole launch configuration. The nodes are executed in a sandbox to prevent side effects and enable the integration of the analysis tool, e.g., into automated testing systems. Results: The evaluation on internal and publicly available ROS projects shows that we are able to reconstruct the complete architecture of the system if the nodes implement a common lifecycle. Conclusion: The approach enables ROS developers to avoid creating incompatible architectures and check consistency already at development time. The approach can be extended to also monitor architectural consistency at run time.",Computer architecture; dynamic analysis; Peer-to-peer computing; Prototypes; Robots; ROS; roslaunch; Software architecture; software architecture description; Testing; Tools,Checking Consistency of Robot Software Architectures in ROS,,,,,,,,,x,,NO,
S1169,2,bkwd,journalArticle,2019,"Vilches, Víctor Mayoral; Kirschgens, Laura Alzola; Calvo, Asier Bilbao; Cordero, Alejandro Hernández; Pisón, Rodrigo Izquierdo; Vilches, David Mayoral; Rosas, Aday Muñiz; Mendia, Gorka Olalde; Juan, Lander Usategi San; Ugarte, Irati Zamalloa; Gil-Uriarte, Endika; Tews, Erik; Peter, Andreas",arXiv:1806.04042 [cs],,http://arxiv.org/abs/1806.04042,"Robots have gained relevance in society, increasingly performing critical tasks. Nonetheless, robot security is being underestimated. Robotics security is a complex landscape, which often requires a cross-disciplinar perspective to which classical security lags behind. To address this issue, we present the Robot Security Framework (RSF), a methodology to perform systematic security assessments in robots. We propose, adapt and develop specific terminology and provide guidelines to enable a holistic security assessment following four main layers (Physical, Network, Firmware and Application). We argue that modern robotics should regard as equally relevant internal and external communication security. Finally, we advocate against ""security by obscurity"". We conclude that the field of security in robotics deserves further research efforts.",Computer Science - Cryptography and Security; Computer Science - Robotics,"Introducing the Robot Security Framework (RSF), a standardized methodology to perform security assessments in robotics",,x,,x,,,,,,,NO,
S1168,2,bkwd,conferencePaper,2013,"van der Ven, Jan Salvador; Bosch, Jan",Software Architecture,10.1007/978-3-642-39031-9_15,,"Software architects are often forced to make design decisions based on limited information. In this paper, we present an approach that allows software architects to study information about design decisions made by hundreds or more software architects by automatically analyzing the version management data of large open-source repositories. The contribution is, first, that it develops a conceptual model to reason about the automatic derivation of specifically medium level architectural design decisions. Second, we show that it is indeed possible to derive these design decisions automatically from open source projects. This provides a basis for statistical and quantitative reasoning about software architecture design decisions that allows software architects to make better-informed decisions.",Architectural Knowledge; Architecture; Components; Design Decisions; Open Source Projects,Making the Right Decision: Supporting Architects with Design Decision Data,x,,,,,,,,,,NO,
S1167,2,bkwd,journalArticle,2013,"Vaismoradi, Mojtaba; Turunen, Hannele; Bondas, Terese",Nursing & Health Sciences,10.1111/nhs.12048,https://onlinelibrary.wiley.com/doi/abs/10.1111/nhs.12048,"Qualitative content analysis and thematic analysis are two commonly used approaches in data analysis of nursing research, but boundaries between the two have not been clearly specified. In other words, they are being used interchangeably and it seems difficult for the researcher to choose between them. In this respect, this paper describes and discusses the boundaries between qualitative content analysis and thematic analysis and presents implications to improve the consistency between the purpose of related studies and the method of data analyses. This is a discussion paper, comprising an analytical overview and discussion of the definitions, aims, philosophical background, data gathering, and analysis of content analysis and thematic analysis, and addressing their methodological subtleties. It is concluded that in spite of many similarities between the approaches, including cutting across data and searching for patterns and themes, their main difference lies in the opportunity for quantification of data. It means that measuring the frequency of different categories and themes is possible in content analysis with caution as a proxy for significance.",content analysis; nursing; qualitative descriptive research; thematic analysis,Content analysis and thematic analysis: Implications for conducting a qualitative descriptive study,x,,,x,,,,,,,NO,
S1166,2,bkwd,conferencePaper,2000,"Thiele, L.; Chakraborty, S.; Naedele, M.",2000 IEEE International Symposium on Circuits and Systems (ISCAS),10.1109/ISCAS.2000.858698,,"This paper establishes a link between three areas, namely Max-Plus Linear System Theory as used for dealing with certain classes of discrete event systems, Network Calculus for establishing time bounds in communication networks, and real-time scheduling. In particular, it is shown that important results from scheduling theory can be easily derived and unified using Max-Plus Algebra. Based on the proposed network theory for real-time systems, the first polynomial algorithm for the feasibility analysis and optimal priority assignment for a general task model is derived.",Algebra; Calculus; Communication networks; Computer networks; Discrete event systems; Linear systems; Polynomials; Processor scheduling; Real time systems; Scheduling algorithm,Real-time calculus for scheduling hard real-time systems,x,,,,,,,,,,NO,
S1165,2,bkwd,conferencePaper,2020,"Swanborn, Stan; Malavolta, Ivano",Proceedings of the 35th IEEE/ACM International Conference on Automated Software Engineering Workshops,10.1145/3417113.3422997,https://doi.org/10.1145/3417113.3422997,"Nowadays, robots are widely used in many areas of our lifes, such as autonomous storage, self-driving vehicles, drones, industrial automation, etc. Energy is a critical factor for robotic systems, especially for mobile robots where energy is a finite resource (e.g., surveillance autonomous rovers). Since software is becoming the central focus of modern robotic systems, it is important to understand how it influences the energy consumption of the entire system. However, there is no systematic study of the state of the art in energy efficiency of robotics software that could guide research or practitioners in finding solutions and tools to develop robotic systems with energy efficiency in mind. The goal of this paper is to present a review of existing research on energy efficiency in robotics software. Specifically, we investigate on (i) the used metrics for energy efficiency, (ii) the application domains within the robotics area covered by research on energy efficiency, (iii) the identified major energy consumers within a robotic system, (iv) how existing approaches are evaluated, (v) the used energy models, (vi) the techniques supporting the development of energy-efficient robotics software, and (vii) which quality attributes tend to be traded off when dealing with energy efficiency in robotics. We also provide a replication package to assess, extend, and/or replicate the study. The results of this work can guide researchers and practitioners in robotics and software engineering in better reasoning and contributing to energy-efficient robotics software.",,Energy efficiency in robotics software: a systematic literature review,x,,,x,,,,,,,NO,
S1164,2,bkwd,journalArticle,1991,"Stankovic, J.A.; Ramamritham, K.",IEEE Software,10.1109/52.88945,,"A real-time operating system kernel, called the Spring kernel, that provides some of the basic support required for large, complex, next-generation real-time systems, especially in meeting timing constraints, is presented. The approach meets the need to build predictable yet flexible real-time systems. Most current real-time operating systems contain the same basic paradigms found in time-sharing operating systems and often use a basic priority-scheduling mechanism that provides no direct support for meeting timing constraints. Spring uses two criteria to classify tasks' interaction with and effects on the environment: importance and timing requirements. Implementation experience with Spring is described.<>",Computer aided manufacturing; Delay; Kernel; Laboratories; Operating systems; Real time systems; Springs; Switches; Time sharing computer systems; Timing,The Spring kernel: a new paradigm for real-time systems,x,,,x,,,,,,,NO,
S1163,2,bkwd,conferencePaper,2018,"Soliman, Mohamed; Rekaby Salama, Amr; Galster, Matthias; Zimmermann, Olaf; Riebisch, Matthias",2018 IEEE International Conference on Software Architecture (ICSA),10.1109/ICSA.2018.00028,,"To make good architecture design decisions, developers need to know suitable architecture solution alternatives. However, with the rapid and continuous increase of solution alternatives (e.g. technologies, patterns, tactics), it is challenging to acquire architecture knowledge and to ensure that this knowledge is up to date. Our goal is to improve how architects search for architecturally relevant information in online developer communities. We developed a new search approach for architecturally relevant information using Stack Overflow as an example of an online developer community. Our search approach differs from a conventional keyword-based search in that it considers semantic information of architecturally relevant concepts in Stack Overflow. We also implemented the search approach as a web-based search engine. To show the effectiveness of the search approach compared to a conventional keyword-based search, we conducted an experiment with 16 practitioners. To ensure realism of the experiment, tasks given to practitioners are based on real scenarios identified in interviews with a different set of practitioners. The experiment showed that the new search approach outperforms a conventional keyword based search.",Business; Computer architecture; developer communities; Electronic mail; Information Retrieval; Ontologies; Search problems; Semantics; software architecture; software architecture knowledge; Stack Overflow; Text Classification,Improving the Search for Architecture Knowledge in Online Developer Communities,x,,,x,,,,,,,NO,
S1162,2,bkwd,journalArticle,1994,"Shin, K.G.; Ramanathan, P.",Proceedings of the IEEE,10.1109/5.259423,,This paper surveys the state of the art in real-time computing. It introduces basic concepts and identifies key issues in the design of real-time systems. Solutions proposed in literature for tackling these issues are also briefly discussed.<>,Application software; Automobiles; Computer displays; Computer science; Environmental economics; Humans; Processor scheduling; Real time systems; Resource management; Wheels,Real-time computing: a new discipline of computer science and engineering,x,,,x,,,,,,,NO,
S1161,2,bkwd,webpage,,,,,https://acme.able.cs.cmu.edu/pubs/show.php?id=192&type=both,,,SHOW publication #192 - ABLE Publications,x,,,,,,,,,,NO,
S1160,2,bkwd,journalArticle,,"Quigley, Morgan; Gerkey, Brian; Conley, Ken; Faust, Josh; Foote, Tully; Leibs, Jeremy; Berger, Eric; Wheeler, Rob; Ng, Andrew",,,,"This paper gives an overview of ROS, an opensource robot operating system. ROS is not an operating system in the traditional sense of process management and scheduling; rather, it provides a structured communications layer above the host operating systems of a heterogenous compute cluster. In this paper, we discuss how ROS relates to existing robot software frameworks, and brieﬂy overview some of the available application software which uses ROS.",,ROS: an open-source Robot Operating System,,x,,,,,,,,,NO,
S1158,2,bkwd,webpage,,,,,https://scholar.google.com/scholar_lookup?title=Redis&publication_year=2020&author=S.J.A.%20Redis,,,REDIS: Redis Vol1 Nº1 Revista Completa - Google Scholar,x,,,,,,,,,,NO,
S1157,2,bkwd,book,2015,"Quigley, Morgan; Gerkey, Brian; Smart, William D.",,,,"Want to develop novel robot applications, but don’t know how to write a mapping or object-recognition system? You’re not alone, but you’re certainly not without help. By combining real-world examples with valuable knowledge from the Robot Operating System (ROS) community, this practical book provides a set of motivating recipes for solving specific robotics use cases.Ideal for enthusiasts, from students in robotics clubs to professional robotics scientists and engineers, each recipe describes a complete solution using ROS open source libraries and tools. You’ll learn how to complete tasks described in the recipes, as well as how to configure and recombine components for other tasks. If you’re familiar with Python, you’re ready to go.Learn fundamentals, including key ROS concepts, tools, and patternsProgram robots that perform an increasingly complex set of behaviors, using the powerful packages in ROSSee how to easily add perception and navigation abilities to your robotsIntegrate your own sensors, actuators, software libraries, and even a whole robot into the ROS ecosystemLearn tips and tricks for using ROS tools and community resources, debugging robot behavior, and using C++ in ROS",Computers / Computer Science; Computers / Languages / Python; Computers / Programming / Open Source; TECHNOLOGY & ENGINEERING / Engineering (General),Programming Robots with ROS: A Practical Introduction to the Robot Operating System,,,,,,,,,x,,NO,
S1156,2,bkwd,journalArticle,2015,"Pyo, Yoonseok; Nakashima, Kouhei; Kuwahata, Shunya; Kurazume, Ryo; Tsuji, Tokuo; Morooka, Ken’ichi; Hasegawa, Tsutomu",Robotics and Autonomous Systems,10.1016/j.robot.2015.07.010,https://www.sciencedirect.com/science/article/pii/S0921889015001542,"Daily life assistance is one of the most important applications for service robots. For comfortable assistance, service robots must recognize the surrounding conditions correctly, including human motion, the position of objects, and obstacles. However, since the everyday environment is complex and unpredictable, it is almost impossible to sense all of the necessary information using only a robot and sensors attached to it. In order to realize a service robot for daily life assistance, we have been developing an informationally structured environment using distributed sensors embedded in the environment. The present paper introduces a service robot system with an informationally structured environment referred to the ROS–TMS. This system enables the integration of various data from distributed sensors, as well as storage of these data in an on-line database and the planning of the service motion of a robot using real-time information about the surroundings. In addition, we discuss experiments such as detection and fetch-and-give tasks using the developed real environment and robot.",Distributed sensor; Informationally structured environment; Intelligent space; Motion planning; Robot operating system; Service robot,Service robot system with an informationally structured environment,,x,,x,,,,,,,NO,
S1155,2,bkwd,conferencePaper,2012,"Purandare, Rahul; Darsie, Javier; Elbaum, Sebastian; Dwyer, Matthew B.",2012 IEEE/RSJ International Conference on Intelligent Robots and Systems,10.1109/IROS.2012.6385719,,"Modern robotics systems rely on distributed event-based frameworks to facilitate the assembly of software out of collections of reusable components. These frameworks express component dependencies in data that encode event publish-subscribe relations. This loosely coupled architecture makes it difficult for developers to understand the dependencies and to predict the impacts of a change to a component as the components grow in number and complexity. Moreover, this encoding of dependencies renders traditional techniques for analyzing component dependencies inapplicable, because the dependencies are bound by communication channels rather than data. In this work, we present a program analysis technique that automatically extracts a model of component dependencies from distributed system source code. This model identifies not only the temporal dependencies among components, but also the conditions under which those dependencies are realized. We have implemented the analysis and applied it to systems developed in ROS. The resulting models are succinct and precise, which suggests that programmers will find them comprehensible, and they can be used to document important global dependencies in a system, to compare different versions to identify the impacts of component changes, and to help locate errors.",Analytical models; Complexity theory; Computer architecture; Grammar; Robots; Software; Torso,Extracting conditional component dependence for distributed robotic systems,,,,x,,,,,x,,NO,
S1154,2,bkwd,conferencePaper,2019,"Pichler, Marc; Dieber, Bernhard; Pinzger, Martin",2019 Third IEEE International Conference on Robotic Computing (IRC),10.1109/IRC.2019.00020,,"Since its beginnings ten years ago, the Robot Operating System (ROS) has created a huge community of developers and researchers and is now the most widespread open-source framework for robotics development. It is used in research, prototyping but also in commercial products and supports a wide range of robotic platforms, sensors and highlevel data processing functions. While for a research platform, quality of the software developed with it is typically of lower importance, ROS is gradually moving towards industrial applications making software quality a premier topic. In this paper, we want to gain insights on how ROS is used in practice, how high the quality of the ROS packages and applications is, and where potential pitfalls in the use of ROS lie. To achieve this, we have analyzed several thousands of open-source ROS packages found on GitHub and Bitbucket for their quality and their interdependencies. Our results include packages on the rosdistro index and, more importantly, packages that are not. From our results we show common issues in ROS-applications, quality implications, and also which packages of what quality are particularly popular.",dependency analysis; Indexes; Open source software; repository quality; ros; Service robots; software quality; Software quality; Tools,Can I Depend on you? Mapping the Dependency and Quality Landscape of ROS Packages,,,,,,,,x,,,NO,
S1153,2,bkwd,journalArticle,2003,"Peltz, C.",Computer,10.1109/MC.2003.1236471,,"Combining Web services to create higher level, cross-organizational business processes requires standards to model the interactions. Several standards are working their way through industry channels and into vendor products.",Availability; Collaboration; Companies; Computer architecture; Engines; Information technology; Logic; Process design; Scalability; Web services,Web services orchestration and choreography,,x,,,,,,,,,NO,
S1152,2,bkwd,webpage,,,,,https://www.sciencedirect.com/science/article/abs/pii/S1383762117300954,,,Automotive Architecture Framework: The experience of Volvo Cars - ScienceDirect,x,,,,,,,,,,NO,
S1151,2,bkwd,book,2011,"Myers, Glenford J.; Sandler, Corey; Badgett, Tom",,,,"The classic, landmark work on software testing The hardware and software of computing have changed markedly in the three decades since the first edition of The Art of Software Testing, but this book's powerful underlying analysis has stood the test of time. Whereas most books on software testing target particular development techniques, languages, or testing methods, The Art of Software Testing, Third Edition provides a brief but powerful and comprehensive presentation of time-proven software testing approaches. If your software development project is mission critical, this book is an investment that will pay for itself with the first bug you find. The new Third Edition explains how to apply the book's classic principles to today's hot topics including:  Testing apps for iPhones, iPads, BlackBerrys, Androids, and other mobile devices Collaborative (user) programming and testing Testing for Internet applications, e-commerce, and agile programming environments  Whether you're a student looking for a testing guide you'll use for the rest of your career, or an IT manager overseeing a software development team, The Art of Software Testing, Third Edition is an expensive book that will pay for itself many times over.",Business & Economics / Reference; Computers / Information Technology,The Art of Software Testing,x,,,,,,,,,,NO,
S1148,2,bkwd,journalArticle,2012,"Mitka, Eleftheria; Gasteratos, Antonios; Kyriakoulis, Nikolaos; Mouroutsos, Spyridon G.",Safety Science,10.1016/j.ssci.2012.05.009,https://www.sciencedirect.com/science/article/pii/S0925753512001294,"Domestic robotics is a growing sector with the potential for a large number of commercial applications. Robotics technologies have been successfully applied in industrial production lines, yet, for them to be successful in a dynamic household environment the need for increased reliability, robustness and other special capabilities become paramount. We are not far from the time when people will live and interact with robots and, thus, safety becoming the fundamental issue to observe. Robot designers should produce safe products for humans no matter what failure, malfunction or mishandle may occur. Thus, respective safety procedures ought to be applied to domestic robots as well. The most critical challenge is to preserve safety of humans without forfeiting a single token of the efficiency required to perform any task. In this technical communication, the authors address the need for safety regulations in domestic robotics and, while they do not intend to replace any current robot safety standards or guidelines, the proposed work may serve as a supplement to the standards. Since specific safety standards for domestic robots are not available, we propose that their safety verification should be carried out on the base of well-applied standards that developed in other areas and discussed here. The communication in hand provides the ground upon which a standard on domestic robots can be built. Moreover, it proposes a systemic approach that explicitly relates the system and user requirements to a list of safety problems, in order to achieve an adequate level of safety in domestic robotics.",Domestic robots; Requirements; Standardization; Systemic method,Safety certification requirements for domestic robots,x,,,x,,,,,,,NO,
S1147,2,bkwd,conferencePaper,2014,"Mirakhorli, Mehdi; Fakhry, Ahmed; Grechko, Artem; Wieloch, Matteusz; Cleland-Huang, Jane",Proceedings of the 22nd ACM SIGSOFT International Symposium on Foundations of Software Engineering,10.1145/2635868.2661671,https://doi.org/10.1145/2635868.2661671,"The quality of a software architecture is largely dependent upon the underlying architectural decisions at the framework, tactic, and pattern levels. Decisions to adopt certain solutions determine the extent to which desired qualities such as security, availability, and performance are achieved in the delivered system. In this tool demo, we present our Eclipse plug-in named Archie as a solution for maintaining architectural qualities in the design and code despite long-term maintenance and evolution activities. Archie detects architectural tactics such as heartbeat, resource pooling, and role-based access control (RBAC) in the source code of a project; constructs traceability links between the tactics, design models, rationales and source code; and then uses these to monitor the environment for architecturally significant changes and to keep developers informed of underlying design decisions and their associated rationales.",Architecture; Degradation; Patterns; Tactics,"Archie: a tool for detecting, monitoring, and preserving architecturally significant code",x,,,x,,,,,,,NO,
S1146,2,bkwd,conferencePaper,2015,"Mirakhorli, Mehdi; Cleland-Huang, Jane",2015 IEEE/ACM 12th Working Conference on Mining Software Repositories,10.1109/MSR.2015.44,,"Architectural qualities such as reliability, performance, and security, are often realized in a software system through the adoption of tactical design decisions such as the decision to use redundant processes, a heartbeat monitor, or a specific authentication mechanism. Such decisions are critical for delivering a system that meets its quality requirements. Despite the stability of high-level decisions, our analysis has shown that tactic-related classes tend to be modified more frequently than other classes and are therefore stronger predictors of change than traditional Object-Oriented coupling and cohesion metrics. In this paper we present the results from this initial study, including an analysis of why tactic-related classes are changed, and a discussion of the implications of these findings for maintaining architectural quality over the lifetime of a software system.",Complexity theory; Computer bugs; Heart beat; Measurement; Reliability; Software; Software engineering,"Modifications, Tweaks, and Bug Fixes in Architectural Tactics",x,,,x,,,,,,,NO,
S1145,2,bkwd,journalArticle,1992,"Meyer, B.",Computer,10.1109/2.161279,,"Methodological guidelines for object-oriented software construction that improve the reliability of the resulting software systems are presented. It is shown that the object-oriented techniques rely on the theory of design by contract, which underlies the design of the Eiffel analysis, design, and programming language and of the supporting libraries, from which a number of examples are drawn. The theory of contract design and the role of assertions in that theory are discussed.<>",Books; Computer bugs; Contracts; Guidelines; Object oriented programming; Pressing; Reliability theory; Robustness; Software engineering; Software systems,Applying 'design by contract',x,,,,,,,,,,NO,
S1144,2,bkwd,journalArticle,2005,"Malek, S.; Mikic-Rakic, M.; Medvidovic, N.",IEEE Transactions on Software Engineering,10.1109/TSE.2005.29,,"A recent emergence of small, resource-constrained, and highly mobile computing platforms presents numerous new challenges for software developers. We refer to development in this new setting as programming-in-the-small-and-many (Prism). This paper provides a description and evaluation of Prism-MW, a middleware platform intended to support software architecture-based development in the Prism setting. Prism-MW provides efficient and scalable implementation-level support for the key aspects of Prism application architectures, including their architectural styles. Additionally, Prism-MW is extensible to support different application requirements suitable for the Prism setting. Prism-MW has been applied in a number of applications and used as an educational tool in graduate-level software architecture and embedded systems courses. Recently, Prism-MW has been successfully evaluated by a major industrial organization for use in one of their key distributed embedded systems. Our experience with the middleware indicates that the principles of architecture-based software development can be successfully, and flexibly, applied in the Prism setting.",Application software; architectural style; Computer architecture; Connectors; Embedded system; Guidelines; Index Terms- Software architecture; middleware; Middleware; Mobile computing; Prism-MW.; Software architecture; Software engineering; Software systems,"A style-aware architectural middleware for resource-constrained, distributed systems",x,,,,,,,,,,NO,
S1143,2,bkwd,webpage,,,,,https://www.sciencedirect.com/science/article/pii/S0164121221000662,,,Mining guidelines for architecting robotics software - ScienceDirect,x,,,,,,,,,,NO,
S1142,2,bkwd,conferencePaper,2020,"Malavolta, Ivano; Lewis, Grace; Schmerl, Bradley; Lago, Patricia; Garlan, David",2020 IEEE/ACM 42nd International Conference on Software Engineering: Software Engineering in Practice (ICSE-SEIP),,,"The Robot Operating System (ROS) is the de-facto standard for robotic software. If on one hand ROS is helping roboticists, e.g., by providing a standardized communication platform, on the other hand ROS-based systems are getting larger and more complex and could benefit from good software architecture practices. This paper presents an observational study aimed at (i) unveiling the state-of the-practice for architecting ROS-based systems and (ii) providing guidance to roboticists about how to properly architect ROS-based systems. To achieve these goals, we (i) build a dataset of 335 GitHub repositories containing real open-source ROS-based systems, (ii) mine the repositories for extracting the state of the practice about how roboticists are architecting them, and (iii) synthesize a catalog of 49 evidence-based guidelines for architecting ROS-based systems. The guidelines have been validated by 77 roboticists working on real-world open-source ROS-based systems.",Computer architecture; Data mining; Documentation; Guidelines; Mining Software Repositories; Open source software; Robotics; Robots; Service robots; Software Architecture,How do you Architect your Robots? State of the Practice and Guidelines for ROS-based Systems,,,,,,,,,x,,NO,
S1141,2,bkwd,conferencePaper,2021,"Malavolta, Ivano; Chinnappan, Katerina; Swanborn, Stan; Lewis, Grace A.; Lago, Patricia",2021 IEEE/ACM 18th International Conference on Mining Software Repositories (MSR),10.1109/MSR52588.2021.00042,,"In today’s world, reducing energy consumption should be the goal for any organization and any system, including robotics software systems. However, state of the practice in robotics software development focuses primarily on achieving functionality and performance, with minimal recognition of energy-efficiency as a driving software quality. The goal of this paper is to identify, synthesize, and empirically evaluate architectural tactics for energy-efficiency applied by practitioners in real robotics projects. Four tactics were identified by mining software repository techniques applied to the ROS ecosystem. The tactics were evaluated via experimentation on a real, commodity robotics system. Results show that the application of green architectural tactics tends to largely improve the energy-efficiency of the robot (7.9% energy savings when all tactics are applied) and that the movement strategy and the physical environment where the robot operates strongly influence how energy is consumed by the robot.",Ecosystems; Energy efficiency; Energy efficient software; Green products; Mission critical systems; Organizations; Robotics software; Software Architecture; Software quality; Software systems,Mining the ROS ecosystem for Green Architectural Tactics in Robotics and an Empirical Evaluation,,,,,,,,,x,,NO,
S1140,2,bkwd,conferencePaper,2018,"Le, Duc Minh; Link, Daniel; Shahbazian, Arman; Medvidovic, Nenad",2018 IEEE International Conference on Software Architecture (ICSA),10.1109/ICSA.2018.00027,,"Architecture is the set of principal design decisions about a software system. In practice, new architectural decisions are added and existing ones reversed or modified throughout a system's lifetime. Frequently, these decisions deviate from the architect's well-considered intent, and software systems regularly exhibit increased architectural decay as they evolve. The manifestations of such ill-considered design decisions are seen as “architectural smells”. To date, there has been no in-depth study of the characteristics or trends involving this phenomenon. Instead, when referring to architectural smells and their negative effects, both researchers and practitioners had to rely on folklore and their personal, inherently limited experience. In this paper, we report on the systematic step we have taken in investigating the nature and impact of architectural smells. We have selected a set of representative architectural smells from literature and analyzed their instances in 421 versions from 8 open-source software systems. We have (1) developed algorithms to automatically detect instances of multiple architectural smell types, and (2) analyzed relationships between the detected smells and the lists of issues reported in the systems' respective issue trackers. Our study shows that architectural smells have tangible negative consequences in the form of implementation issues as well as code commits requiring increased maintenance effort throughout a system's lifetime.",Architectural-Decay; Architectural-Smells; Computer architecture; Connectors; Couplings; Detection algorithms; Implementation-Issues; Software architecture; Software systems; Software-Maintenance,An Empirical Study of Architectural Decay in Open-Source Software,x,,,,,,,,,,NO,
S1139,2,bkwd,book,2010,"Lidwell, William; Holden, Kritina; Butler, Jill",,,,"Universal Principles of Design, Revised and Updated is a comprehensive, cross-disciplinary encyclopedia covering 125 laws, guidelines, human biases, and general considerations important to successful design. Richly illustrated and easy to navigate, it pairs clear explanations of every design concept with visual examples of the ideas applied in practice. From the 80/20 Rule to the Weakest Link, every major design concept is defined and illustrated. Whether a marketing campaign or a museum exhibit, a video game or a complex control system, the design we see is the culmination of many concepts and practices brought together from a variety of disciplines. Because no one can be an expert on everything, designers have always had to scramble to find the information and know-how required to make a design work—until now. Just a few of the principles that will broaden your design knowledge, promote brainstorming, and help you check the quality of your work:Baby-Face BiasExpectation EffectGolden RationOckham's RazorProximityScaling FallacyThe book is organized alphabetically so that principles can be easily and quickly referenced by name. For those interested in addressing a specific problem of design, the principles havealso been indexed by questions commonly confronting designers (How can I help people learn from my design? How can I enhance the usability of a design? How can I make better design decisions? ...). Each principle is presented in a two-page format. The left-hand page contains a succinct definition, a full description of the principle, examples of its use, and guidelines for use. Side notes appear to the right of the text, and provide elaborations and references. The right-hand page contains visual examples and related graphics to support a deeper understanding of the principle. This landmark reference is the standard for designers, engineers, architects, and students who seek to broaden and improve their design expertise.",Design / Graphic Arts / Commercial & Corporate; Design / Graphic Arts / General; Design / Reference,"Universal Principles of Design, Revised and Updated: 125 Ways to Enhance Usability, Influence Perception, Increase Appeal, Make Better Design Decisions, and Teach Through Design",,,,,x,,,,,,NO,
S1138,2,bkwd,journalArticle,2020,"Lamarre, Olivier; Limoyo, Oliver; Marić, Filip; Kelly, Jonathan",The International Journal of Robotics Research,10.1177/0278364920908922,https://doi.org/10.1177/0278364920908922,"Future exploratory missions to the Moon and to Mars will involve solar-powered rovers; careful vehicle energy management is critical to the success of such missions. This article describes a unique dataset gathered by a small, four-wheeled rover at a planetary analog test facility in Canada. The rover was equipped with a suite of sensors designed to enable the study of energy-aware navigation and path planning algorithms. The sensors included a colour omnidirectional stereo camera, a monocular camera, an inertial measurement unit, a pyranometer, drive power consumption monitors, wheel encoders, and a GPS receiver. In total, the rover drove more than 1.2 km over varied terrain at the analog test site. All data is presented in human-readable text files and as standard-format images; additional Robot Operating System (ROS) parsing tools and several georeferenced aerial maps of the test environment are also included. A series of potential research use cases is described.",energy-aware path planning; localization and mapping; long-term autonomy; Planetary robotics; terrain assessment,The Canadian Planetary Emulation Terrain Energy-Aware Rover Navigation Dataset,,x,,,,,,,,,NO,
S1137,2,bkwd,journalArticle,2013,"Khaleghi, Bahador; Khamis, Alaa; Karray, Fakhreddine O.; Razavi, Saiedeh N.",Information Fusion,10.1016/j.inffus.2011.08.001,https://www.sciencedirect.com/science/article/pii/S1566253511000558,"There has been an ever-increasing interest in multi-disciplinary research on multisensor data fusion technology, driven by its versatility and diverse areas of application. Therefore, there seems to be a real need for an analytical review of recent developments in the data fusion domain. This paper proposes a comprehensive review of the data fusion state of the art, exploring its conceptualizations, benefits, and challenging aspects, as well as existing methodologies. In addition, several future directions of research in the data fusion community are highlighted and described.",Fusion methodologies; Multisensor data fusion; Taxonomy,Multisensor data fusion: A review of the state-of-the-art,x,,,,,,,,,,NO,
S1136,2,bkwd,journalArticle,2017,"Jiang, Hengle; Elbaum, Sebastian; Detweiler, Carrick",Autonomous Robots,10.1007/s10514-016-9576-y,http://link.springer.com/10.1007/s10514-016-9576-y,"System monitoring can help to detect anomalies, but crafting monitors for robot systems is difﬁcult due to the inherent complexity, changing, and uncertain operating environment. We address this challenge by automatically inferring system invariants and synthesizing those invariants into monitors to detect faults with an approach inspired by state of the art software engineering methods. Our approach is novel in that: (1) It automatically derives invariants from messages; (2) The invariants types are tailored to match the spatial, temporal, and architectural attributes of robotic systems; and (3) It automatically classiﬁes and synthesizes invariants into an online invariants monitor node. We have assessed the approach in the context of two unmanned aerial vehicle systems running robot operating system. We found that monitoring the inferred invariants can reduce system failure rates when facing unexpected contexts from 76 to 11 %, and can detect differences between the lab environment and the ﬁeld deployments.",,Inferring and monitoring invariants in robotic systems,x,,,,,,,,,,NO,
S1135,2,bkwd,journalArticle,2016,"Kalliamvakou, Eirini; Gousios, Georgios; Blincoe, Kelly; Singer, Leif; German, Daniel M.; Damian, Daniela",Empirical Software Engineering,10.1007/s10664-015-9393-5,https://doi.org/10.1007/s10664-015-9393-5,"With over 10 million git repositories, GitHub is becoming one of the most important sources of software artifacts on the Internet. Researchers mine the information stored in GitHub’s event logs to understand how its users employ the site to collaborate on software, but so far there have been no studies describing the quality and properties of the available GitHub data. We document the results of an empirical study aimed at understanding the characteristics of the repositories and users in GitHub; we see how users take advantage of GitHub’s main features and how their activity is tracked on GitHub and related datasets to point out misalignment between the real and mined data. Our results indicate that while GitHub is a rich source of data on software development, mining GitHub for research purposes should take various potential perils into consideration. For example, we show that the majority of the projects are personal and inactive, and that almost 40 % of all pull requests do not appear as merged even though they were. Also, approximately half of GitHub’s registered users do not have public activity, while the activity of GitHub users in repositories is not always easy to pinpoint. We use our identified perils to see if they can pose validity threats; we review selected papers from the MSR 2014 Mining Challenge and see if there are potential impacts to consider. We provide a set of recommendations for software engineering researchers on how to approach the data in GitHub.",,An in-depth study of the promises and perils of mining GitHub,x,,,,,,,,,,NO,
S1134,2,bkwd,conferencePaper,2019,"Jamshidi, Pooyan; Cámara, Javier; Schmerl, Bradley; Käestner, Christian; Garlan, David",2019 IEEE/ACM 14th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS),10.1109/SEAMS.2019.00015,,"Modern cyber-physical systems (e.g., robotics systems) are typically composed of physical and software components, the characteristics of which are likely to change over time. Assumptions about parts of the system made at design time may not hold at run time, especially when a system is deployed for long periods (e.g., over decades). Self-adaptation is designed to find reconfigurations of systems to handle such run-time inconsistencies. Planners can be used to find and enact optimal reconfigurations in such an evolving context. However, for systems that are highly configurable, such planning becomes intractable due to the size of the adaptation space. To overcome this challenge, in this paper we explore an approach that (a) uses machine learning to find Pareto-optimal configurations without needing to explore every configuration and (b) restricts the search space to such configurations to make planning tractable. We explore this in the context of robot missions that need to consider task timeliness and energy consumption. An independent evaluation shows that our approach results in high-quality adaptation plans in uncertain and adversarial environments.","Adaptation models; Energy consumption; Machine learning; Machine learning, artificial intelligence, quantitative planning, self-adaptive systems, robotics systems; Planning; Robot sensing systems; Software",Machine Learning Meets Quantitative Planning: Enabling Self-Adaptation in Autonomous Robots,x,,,,,,,,,,NO,
S1133,2,bkwd,bookSection,2017,"Hönig, Wolfgang; Ayanian, Nora",Robot Operating System (ROS): The Complete Reference  (Volume 2),,https://doi.org/10.1007/978-3-319-54927-9_3,"This tutorial chapter will teach readers how to use ROS to fly a small quadcopter both individually and as a group. We will discuss the hardware platform, the Bitcraze Crazyflie 2.0, which is well suited for swarm robotics due to its small size and weight. After first introducing the crazyflie_ros stack and its use on an individual robot, we will extend scenarios of hovering and waypoint following from a single robot to the more complex multi-UAV case. Readers will gain insight into physical challenges, such as radio interference, and how to solve them in practice. Ultimately, this chapter will prepare readers not only to use the stack as-is, but also to extend it or to develop their own innovations on other robot platforms.",Crazyflie; Multi-Robot-System; ROS; Swarm; UAV,Flying Multiple UAVs Using ROS,,x,,,,,,,,,NO,
S1132,2,bkwd,journalArticle,2013,"Holzmann, Gerard J.",IEEE Software,10.1109/MS.2013.32,,"How much software does it take to land a spacecraft safely on Mars, and how do you make all that code reliable? This column describes such a software development process. The first Web extra at http://mars.jpl.nasa.gov/multimedia/videos/movies/miam20121218/miam20121218-1280.mov is a 60-second video from NASA's Jet Propulsion Laboratory that shows how NASA's Mars rover drivers operate the vehicles from millions of miles away. The second Web extra at http://mars.jpl.nasa.gov/multimedia/videos/movies/msl20120827_curiositycommunicates/msl20120827_curiositycommunicates-1280.mov is an animated video showing how NASA's Curiosity rover communicates with Earth via two of NASA's Mars orbiters, Mars Reconnaissance Orbiter (MRO) and Odyssey, and the European Space Agency's Mars Express. The third Web extra at http://mars.jpl.nasa.gov/multimedia/videos/movies/CoM20121207/CoM20121207-1280.mov is a video discussing the scientific study by NASA's Curiosity Mars rover at Rocknest.",Encoding; Hardware; impact; Mars; Performance evaluation; software; Software devlopment; Space missions; Space vehicles; spacecraft,Landing a Spacecraft on Mars,x,,,,,,,,,,NO,
S1131,2,bkwd,conferencePaper,2017,"Hofmeister, Johannes; Siegmund, Janet; Holt, Daniel V.","2017 IEEE 24th International Conference on Software Analysis, Evolution and Reengineering (SANER)",10.1109/SANER.2017.7884623,,"Developers spend the majority of their time comprehending code, a process in which identifier names play a key role. Although many identifier naming styles exist, they often lack an empirical basis and it is not quite clear whether short or long identifier names facilitate comprehension. In this paper, we investigate the effect of different identifier naming styles (letters, abbreviations, words) on program comprehension, and whether these effects arise because of their length or their semantics. We conducted an experimental study with 72 professional C# developers, who looked for defects in source-code snippets. We used a within-subjects design, such that each developer saw all three versions of identifier naming styles and we measured the time it took them to find a defect. We found that words lead to, on average, 19% faster comprehension speed compared to letters and abbreviations, but we did not find a significant difference in speed between letters and abbreviations. The results of our study suggest that defects in code are more difficult to detect when code contains only letters and abbreviations. Words as identifier names facilitate program comprehension and can help to save costs and improve software quality.",C# languages; Context; Psychology; Semantics; Software quality; Syntactics; Time measurement,Shorter identifier names take longer to comprehend,x,,,,,,,,,,NO,
S1130,2,bkwd,conferencePaper,2017,"Halder, Raju; Proença, José; Macedo, Nuno; Santos, André",2017 IEEE/ACM 5th International FME Workshop on Formal Methods in Software Engineering (FormaliSE),10.1109/FormaliSE.2017.9,,"Robotic technologies are continuously transforming the domestic and the industrial environments. Recently the Robotic Operating System (ROS), has been widely adopted both by industry and academia, becoming one of the most popular middleware frameworks for developing robot applications. Guaranteeing the correct behaviour of robotic systems is, however, challenging due to their potential for parameterization and heterogeneity. Although different approaches exist, focusing on concrete domain spaces for specific scenarios, no general approach to reason about ROS systems has yet arisen. This paper proposes an approach to model and verify ROS systems using real time properties, focusing on one of the main features of ROS, the communication between nodes. It takes low-level parameters into account, such as queue sizes and timeouts, and uses timed automata as the modelling language. The robot Kobuki is used as a complex case study, over which properties are automatically verified using the UPPAAL model checker, enabling the identification of problematic parameter combinations.",Automata; Clocks; Monitoring; Peer-to-peer computing; Safety; Service robots,Formal Verification of ROS-Based Robotic Applications Using Timed-Automata,,,,,,,,,x,,NO,
S1129,2,bkwd,journalArticle,2018,"Harrison, William; Downs, Anthony; Schlenoff, Craig",AI Magazine,10.1609/aimag.v39i4.2795,https://ojs.aaai.org/index.php/aimagazine/article/view/2795,"The Agile Robotics for Industrial Automation Competition (ARIAC) is an annual simulation-based competition initiated in 2017. The competition challenges teams to design industrial robotic system control code to function in a dynamic environment. Each team’s system is faced with challenges such as dropped parts, and must address these challenges and continue to function without operator intervention.",,The Agile Robotics for Industrial Automation Competition,x,,,x,,,,,,,NO,
S1128,2,bkwd,journalArticle,2016,"Guiochet, Jérémie",Safety Science,10.1016/j.ssci.2015.12.017,https://www.sciencedirect.com/science/article/pii/S092575351500346X,"New safety critical systems are about to appear in our everyday life: advanced robots able to interact with humans and perform tasks at home, in hospitals, or at work. A hazardous behavior of those systems, induced by failures or extreme environment conditions, may lead to catastrophic consequences. Well-known risk analysis methods used in other critical domains (e.g., avionics, nuclear, medical, transportation), have to be extended or adapted due to the non-deterministic behavior of those systems, evolving in unstructured environments. One major challenge is thus to develop methods that can be applied at the very beginning of the development process, to identify hazards induced by robot tasks and their interactions with humans. In this paper we present a method which is based on an adaptation of a hazard identification technique, HAZOP (Hazard Operability), coupled with a system description notation, UML (Unified Modeling Language). This systematic approach has been applied successfully in research projects, and is now applied by robot manufacturers. Some results of those studies are presented and discussed to explain the benefits and limits of our method.",Hazard identification; HAZOP; Risk analysis; Robot safety; UML,Hazard analysis of human–robot interactions with HAZOP–UML,x,,,,,,,,,,NO,
S1127,2,bkwd,conferencePaper,2013,"Gousios, Georgios",2013 10th Working Conference on Mining Software Repositories (MSR),10.1109/MSR.2013.6624034,,"During the last few years, GitHub has emerged as a popular project hosting, mirroring and collaboration platform. GitHub provides an extensive REST API, which enables researchers to retrieve high-quality, interconnected data. The GHTorent project has been collecting data for all public projects available on Github for more than a year. In this paper, we present the dataset details and construction process and outline the challenges and research opportunities emerging from it.",Collaboration; Data collection; Data mining; Databases; dataset; GitHub; History; Organizations; repository; Software engineering,The GHTorent dataset and tool suite,x,,,,,,,,,,NO,
S1126,2,bkwd,webpage,,,,,https://www.hjp.at/doc/rfc/rfc6455.html,,,hjp: doc: RFC 6455: The WebSocket Protocol,x,,,,,,,,,,NO,
S1125,2,bkwd,journalArticle,2019,"Estefo, Pablo; Simmonds, Jocelyn; Robbes, Romain; Fabry, Johan",Journal of Systems and Software,10.1016/j.jss.2019.02.024,https://www.sciencedirect.com/science/article/pii/S0164121219300342,"ROS, the Robot Operating System, offers a core set of software for operating robots that can be extended by creating or using existing packages, making it possible to write robotic software that can be reused on different hardware platforms. With thousands of packages available per stable distribution, encapsulating algorithms, sensor drivers, etc., it is the de facto middleware for robotics. Like any software ecosystem, ROS must evolve in order to keep meeting the requirements of its users. In practice, packages may end up being abandoned between releases: no one may be available to update a package, or newer packages offer similar functionality. As such, we wanted to identify and understand the evolution challenges faced by the ROS ecosystem. In this article, we report our findings after interviewing 19 ROS developers in depth, followed by a focus group (4 participants) and an online survey of 119 ROS community members. We specifically focused on the issues surrounding package reuse and how to contribute to existing packages. To conclude, we discuss the implications of our findings, and propose five recommendations for overcoming the identified issues, with the goal of improving the health of the ROS ecosystem.",Package management; Robot Operating System; Software ecosystems,The Robot Operating System: Package reuse and community dynamics,,,,,,,,,,,,
S1124,2,bkwd,conferencePaper,2015,"Estefo, Pablo; Robbes, Romain; Fabry, Johan",2015 34th International Conference of the Chilean Computer Science Society (SCCC),10.1109/SCCC.2015.7416575,,"The middleware for robotics ROS has become the de-facto standard for developing robot applications. Thanks to our experience using ROS we conjectured that the quality of code of ROS is low, yielding a poor user experience for ROS users and posing important barriers to robot software development. In this work we present a first quantification of code quality of the ROS ecosystem through an analysis of code duplication in launchfiles. Our experience led us to believe that these configuration files exhibit a significant amount of code duplication, and this study shows that it is indeed the case. We find that 25% of packages with multiple launchfiles have duplicated code, and that clones are highly similar.",Cloning; Ecosystems; Robot kinematics; Software; Visualization; XML,Code duplication in ROS launchfiles,,,,,,,,x,,,NO,
S1123,2,bkwd,journalArticle,2019,"Estefo, Pablo; Simmonds, Jocelyn; Robbes, Romain; Fabry, Johan",Journal of Systems and Software,10.1016/j.jss.2019.02.024,https://www.sciencedirect.com/science/article/pii/S0164121219300342,"ROS, the Robot Operating System, offers a core set of software for operating robots that can be extended by creating or using existing packages, making it possible to write robotic software that can be reused on different hardware platforms. With thousands of packages available per stable distribution, encapsulating algorithms, sensor drivers, etc., it is the de facto middleware for robotics. Like any software ecosystem, ROS must evolve in order to keep meeting the requirements of its users. In practice, packages may end up being abandoned between releases: no one may be available to update a package, or newer packages offer similar functionality. As such, we wanted to identify and understand the evolution challenges faced by the ROS ecosystem. In this article, we report our findings after interviewing 19 ROS developers in depth, followed by a focus group (4 participants) and an online survey of 119 ROS community members. We specifically focused on the issues surrounding package reuse and how to contribute to existing packages. To conclude, we discuss the implications of our findings, and propose five recommendations for overcoming the identified issues, with the goal of improving the health of the ROS ecosystem.",Package management; Robot Operating System; Software ecosystems,The Robot Operating System: Package reuse and community dynamics,,,,x,,,,,,,NO,
S1122,2,bkwd,conferencePaper,2017,"Ellingson, Gary; McLain, Tim",2017 International Conference on Unmanned Aircraft Systems (ICUAS),10.1109/ICUAS.2017.7991397,,"This paper presents a fixed-wing autopilot code base called ROSplane. ROSplane utilizes the ROSflight board, firmware, and driver, which was developed to make autopilot development faster, easier and cheaper. By leveraging a textbook and university course content, the autopilot facilitates education and accelerates research and development. The textbook provides high-level documentation for the code. The code is structured to facilitate learning by providing a framework for student assignments. The addition of ROSplane software and documentation make ROSflight closer to a plug-and-play solution while maintaining simplicity and usability for researchers and students. ROSplane has been used in a graduate level flight dynamics class, demonstrated through test flights, and modified for research purposes.",Aircraft; Atmospheric modeling; Computational modeling; Education; Sensors; Software; Unmanned aerial vehicles,ROSplane: Fixed-wing autopilot for education and research,,x,,,,,,,,,NO,
S1121,2,bkwd,conferencePaper,2009,"Edwards, Jonathan",Proceedings of the 24th ACM SIGPLAN conference companion on Object oriented programming systems languages and applications,10.1145/1639950.1640058,https://doi.org/10.1145/1639950.1640058,"Side effects are both the essence and bane of imperative programming. The programmer must carefully coordinate actions to manage their side effects upon each other. Such coordination is complex, error-prone, and fragile. Coherent reaction is a new model of change-driven computation that coordinates effects automatically. State changes trigger events called reactions that in turn change other states. A coherent execution order is one in which each reaction executes before any others that are affected by its changes. A coherent order is discovered iteratively by detecting incoherencies as they occur and backtracking their effects. Unlike alternative solutions, much of the power of imperative programming is retained, as is the common sense notion of mutable state. Automatically coordinating actions lets the programmer express what to do, not when to do it. Coherent reactions are embodied in the Coherence language, which is specialized for interactive applications like those common on the desktop and web. The fundamental building block of Coherence is the dynamically typed mutable tree. The fundamental abstraction mechanism is the virtual tree, whose value is lazily computed, and whose behavior is generated by coherent reactions.",bidirectional functions; functional reactive programming; interactive systems; reactive systems; synchronous reactive programming; trees,Coherent reaction,x,,,,,,,,,,NO,
S1120,2,bkwd,document,,"Dunkley, Oliver; Engel, Jakob; Cremers, Daniel",,,,"Abstract — We present a 25 g nano-quadrotor equipped with a micro PAL-camera and wireless video transmitter, with which we demonstrate autonomous hovering and figure flying using a visual-inertial SLAM system running on a ground-based laptop. To our knowledge this is the lightest quadrotor capable of visual-inertial navigation with off-board processing. Further we show autonomous flight with external pose-estimation, using both a motion capture system or an RGB-D camera. The hardware is low-cost, robust, easily accessible and has freely available detailed specifications. We release all code in the form of an open-source ROS package to stimulate and facilitate further research into using nano-quadrotors as visual-inertial based autonomous platforms. I.",,Visual-Inertial Navigation for a Camera-Equipped 25 g Nano-Quadrotor,,,,,x,,,,,,NO,
S1119,2,bkwd,bookSection,2020,"Dieber, Bernhard; White, Ruffin; Taurer, Sebastian; Breiling, Benjamin; Caiazza, Gianluca; Christensen, Henrik; Cortesi, Agostino",Robot Operating System (ROS): The Complete Reference (Volume 4),,https://doi.org/10.1007/978-3-030-20190-6_8,"ROS is the most popular framework in robotics research and it also grows in terms of industrial use. This makes ROS a worthwhile target for attackers especially since security is not addressed by the core framework itself. Its open architecture and flexibility are also the reasons why ROS suffers from security issues. For example, in ROS it is possible to isolate single nodes from the rest of the application without the ROS master, the other nodes or even the node itself (i.e., its business code) noticing it. This is true for publishers, subscribers and services alike. This makes attacks very difficult to spot at runtime. Penetration testing is the most common security testing practice. The goal is to test an application for possible security flaws. To better facilitate penetration testing for ROS, we introduce ROSPenTo and Roschaos, tools that make use of the vulnerabilities of ROS and demonstrate how ROS applications can be sabotaged by an attacker. In this tutorial you will learn about the ROS XML-RPC API, which is our main attack point. You will see, how API attacks on ROS work in depth. You will get to know Roschaos and ROSPentTo, two tools, which can be used to manipulate running ROS applications.",Penetration testing; ROS; Security,Penetration Testing ROS,,,,,,,,,x,,NO,
S1118,2,bkwd,conferencePaper,2016,"Ruscio, Davide Di; Malavolta, Ivano; Pelliccione, Patrizio; Tivoli, Massimo",Proceedings of the ACM/IEEE 19th International Conference on Model Driven Engineering Languages and Systems,10.1145/2976767.2976794,https://doi.org/10.1145/2976767.2976794,"Drones are increasingly popular since they promise to simplify a myriad of everyday tasks. Currently vendors provide low-level APIs and basic primitives to program drones, making mission development a task-specific and error-prone activity. As a consequence, current approaches are affordable only for users that have a strong technical expertise. Then, it emerges the need for software engineering techniques supporting the definition, development, and realization of missions involving swarms of autonomous drones while guaranteeing the safety today's users expect. In this paper we consider mission specifications expressed through a domain-specific modeling language which can be effectively used by end-users with no technical expertise, e.g., firefighters and rescue workers. Our generation method automatically derives the lower level logic that each drone must perform to accomplish the specified mission, prevents collisions between drones and obstacles, and ensures the preservation of no-fly zones.",,Automatic generation of detailed flight plans from high-level mission descriptions,x,,,,,,,,,,NO,
S1117,2,bkwd,conferencePaper,2007,"Di Nitto, Elisabetta; Di Penta, Massimiliano; Gambi, Alessio; Ripa, Gianluca; Villani, Maria Luisa",Service-Oriented Computing – ICSOC 2007,10.1007/978-3-540-74974-5_24,,"Software systems built by composing existing services are more and more capturing the interest of researchers and practitioners. The envisaged long term scenario is that services, offered by some competing providers, are chosen by some consumers and used for their own purpose, possibly, in conjunction with other services. In the case the consumer is not anymore satisfied by the performance of some service, he can try to replace it with some other service. This implies the creation of a global market of services and poses new requirements concerning validation of exploited services, security of transactions engaged with services, trustworthiness, creation and negotiation of Service Level Agreements with these services. In this paper we focus on the last aspect and present our approach for negotiation of Service Level Agreements. Our architecture supports the actuation of various negotiation processes and offers a search-based algorithm to assist the negotiating parts in the achievement of an agreement.",Negotiation; Optimization Heuristics; Quality of Service; Service Level Agreements,Negotiation of Service Level Agreements: An Architecture and a Search-Based Approach,x,,,,,,,,,,NO,
S1116,2,bkwd,conferencePaper,2015,"Curran, William; Thornton, Thomas; Arvey, Benjamin; Smart, William D.",2015 IEEE International Conference on Robotics and Automation (ICRA),10.1109/ICRA.2015.7140071,,"The ROS ecosystem is an interconnected web of packages, nodes and people with no efficient means to compare, assess or visualize them. We develop a set of tools consisting of various metrics, a data visualization web app, and an active monitoring system. With these tools, we measure the current state of the ecosystem as well as determine where the community should direct their efforts. We also encourage the community to provide input on potential applications, additional metrics, and further improvements to address the needs of the ROS ecosystem. We incentivize this input by gamifying community contributions to the infrastructure. Encouraging user-driven improvements to the ROS infrastructure through the use of a leaderboard and friendly competition will advance ROS development and community support far into the future.",Communities; Ecosystems; Measurement; Open source software; Peer-to-peer computing; Robots,Evaluating impact in the ROS ecosystem,,,,,,,x,,,,NO,
S1115,2,bkwd,conferencePaper,2011,"Cruzes, Daniela S.; Dyba, Tore",2011 International Symposium on Empirical Software Engineering and Measurement,10.1109/ESEM.2011.36,,"Thematic analysis is an approach that is often used for identifying, analyzing, and reporting patterns (themes) within data in primary qualitative research. 'Thematic synthesis' draws on the principles of thematic analysis and identifies the recurring themes or issues from multiple studies, interprets and explains these themes, and draws conclusions in systematic reviews. This paper conceptualizes the thematic synthesis approach in software engineering as a scientific inquiry involving five steps that parallel those of primary research. The process and outcome associated with each step are described and illustrated with examples from systematic reviews in software engineering.",Context; Data mining; Encoding; evidence-based and empirical software engineering; Organizations; research synthesis; secondary research; Software; Software engineering; systematic review; Systematics,Recommended Steps for Thematic Synthesis in Software Engineering,x,,,x,,,,,,,NO,
S1114,2,bkwd,conferencePaper,2019,"Cimino, Mario; Lega, Massimiliano; Monaco, Manilo; Vaglini, Gigliola",Proceedings of the 8th International Conference on Pattern Recognition Applications and Methods,10.5220/0007581708370844,http://www.scitepress.org/DigitalLibrary/Link.aspx?doi=10.5220/0007581708370844,,,Adaptive Exploration of a UAVs Swarm for Distributed Targets Detection and Tracking:,x,,,,,,,,,,NO,
S1113,2,bkwd,bookSection,2017,"Crick, Christopher; Jay, Graylin; Osentoski, Sarah; Pitzer, Benjamin; Jenkins, Odest Chadwicke",Robotics Research : The 15th International Symposium ISRR,,https://doi.org/10.1007/978-3-319-29363-9_28,"We present rosbridge, a middleware abstraction layer which provides robotics technology with a standard, minimalist applications development framework accessible to applications programmers who are not themselves roboticists. Rosbridge provides a simple, socket-based programmatic access to robot interfaces and algorithms provided (for now) by ROS, the open-source “Robot Operating System”, the current state-of-the-art in robot middleware. In particular, it facilitates the use of web technologies such as Javascript for the purpose of broadening the use and usefulness of robotic technology. We demonstrate potential applications in the interface design, education, human-robot interaction and remote laboratory environments.",Application Developer; Camera Stream; Code Sharing; Large Point Cloud; Robot Architecture,Rosbridge: ROS for Non-ROS Users,,x,,,,,,,,,NO,
S1112,2,bkwd,conferencePaper,2003,"Clements, P.; Garlan, D.; Little, R.; Nord, R.; Stafford, J.","25th International Conference on Software Engineering, 2003. Proceedings.",10.1109/ICSE.2003.1201264,,"This lecture maps the concepts and templates explored in this tutorial with well-known architectural prescriptions, including the 4+1 approach of the Rational Unified Process, the Siemens Four Views approach, and the ANSI/IEEE-1471-2000 recommended best practice for documenting architectures for software-intensive systems. The lecture concludes by re-capping the highlights of the tutorial, and asking for feedback.",Computer architecture; Computer science; Design engineering; Documentation; Machine vision; Pattern recognition; Programming; Robustness; Software architecture; Software engineering,Documenting software architectures: views and beyond,x,,,,,,,,,,NO,
S1111,2,bkwd,conferencePaper,2017,"Ciccozzi, Federico; Di Ruscio, Davide; Malavolta, Ivano; Pelliccione, Patrizio; Tumova, Jana",2017 IEEE/ACM 39th International Conference on Software Engineering Companion (ICSE-C),10.1109/ICSE-C.2017.167,,"The production of software for robotic systems is often case-specific, without fully following established engineering approaches. Systematic approaches, methods, models, and tools are pivotal for the creation of robotic systems for real-world applications and turn-key solutions. Well-defined (software) engineering approaches are considered the ""make or break"" factor in the development of complex robotic systems. The shift towards well-defined engineering approaches will stimulate component supply-chains and significantly reshape the robotics marketplace. The goal of this technical briefing is to provide an overview on the state of the art and practice concerning solutions and open challenges in the engineering of software required to develop and manage robotic systems. Model-Driven Engineering (MDE) is discussed as a promising technology to raise the level of abstraction, promote reuse, facilitate integration, boost automation and promote early analysis in such a complex domain.",Automation; Model driven engineering; Model-Driven Engineering; Robot sensing systems; Robotics; Software engineering; Software Engineering; Systematics,Engineering the software of robotic systems,x,,,,,,,,,,NO,
S1110,2,bkwd,conferencePaper,2012,"Cherrier, Sylvain; Ghamri-Doudane, Yacine M.; Lohier, Stéphane; Roussel, Gilles",2012 IEEE Symposium on Computers and Communications (ISCC),10.1109/ISCC.2012.6249331,,"Wireless Sensor and Actuator Networks (WSAN) and permanent connections to the Internet converge to be an emerging and promising field: Machine-To-Machine (M2M) services. To take advantages of this new field, hardware and software infrastructure compliance must be verified. Services expected by M2M alter the organization of WSAN. The software design in this area can be divided into two main categories: a centralized approach (Orchestration) where a monolithic application collects data and sends orders, and a distributed approach (Choreography) in which nodes offer and use services in a collaborative way. In this paper, we study the impact of these two architectures over WSAN. First, a mathematical analysis shows the improvement offered by choreography, thanks to the use of shorter paths between nodes. Then, an application experiments these two architectural designs to measure the impact on a real testbed. Both the theoretical mathematical analysis and the real platform experiment gives better results for the Choreography in terms of network reliability and path length. Our work quantifies the benefits obtained and provides histograms and numerical results.",Actuators; Choreography; Collaboration; Computer architecture; Machine-To-Machine; Mathematical analysis; Orchestration; Organizations; Services Oriented Architecture; Vegetation; Wireless Sensor and Actuators Network; Wireless sensor networks,Services collaboration in Wireless Sensor and Actuator Networks: Orchestration versus Choreography,x,,,,,,,,,,NO,
S1109,2,bkwd,conferencePaper,2010,"Butler, Simon; Wermelinger, Michel; Yu, Yijun; Sharp, Helen",2010 14th European Conference on Software Maintenance and Reengineering,10.1109/CSMR.2010.27,,"Given the importance of identifier names and the value of naming conventions to program comprehension, we speculated in previous work whether a connection exists between the quality of identifier names and software quality. We found that flawed identifiers in Java classes were associated with source code found to be of low quality by static analysis. This paper extends that work in three directions. First, we show that the association also holds at the finer granularity level of Java methods. This in turn makes it possible to, secondly, apply existing method-level quality and readability metrics, and see that flawed identifiers still impact on this richer notion of code quality and comprehension. Third, we check whether the association can be used in a practical way. We adopt techniques used to evaluate medical diagnostic tests in order to identify which particular identifier naming flaws could be used as a light-weight diagnostic of potentially problematic Java source code for maintenance.",Complexity theory; Dictionaries; Guidelines; Java; programming; Readability metrics; Sensitivity; software metrics; software quality,Exploring the Influence of Identifier Names on Code Quality: An Empirical Study,x,,,x,,,,,,,NO,
S1108,2,bkwd,journalArticle,2009,"Brugali, Davide; Prassler, Erwin",IEEE Robotics Automation Magazine,10.1109/MRA.2009.932127,,"This special issue on software engineering (SE) for robotics captures a snapshot of current research issues and state-of-the-practice in robotic software development, a topic that has recently received increasing attention from the robotics community, thanks to some popular initiatives such as the Microsoft move into robotics.",Application software; Cognitive robotics; Control systems; Intelligent robots; Programming; Robot sensing systems; Robotics and automation; Software engineering; Software reusability; Software systems,Software engineering for robotics [From the Guest Editors],,,,,,,,,x,,NO,
S1107,2,bkwd,journalArticle,2019,"Bozhinoski, Darko; Di Ruscio, Davide; Malavolta, Ivano; Pelliccione, Patrizio; Crnkovic, Ivica",Journal of Systems and Software,10.1016/j.jss.2019.02.021,https://www.sciencedirect.com/science/article/pii/S0164121219300317,"Robotic research is making huge progress. However, existing solutions are facing a number of challenges preventing them from being used in our everyday tasks: (i) robots operate in unknown environments, (ii) robots collaborate with each other and even with humans, and (iii) robots shall never injure people or create damages. Researchers are targeting those challenges from various perspectives, producing a fragmented research landscape. We aim at providing a comprehensive and replicable picture of the state of the art from a software engineering perspective on existing solutions aiming at managing safety for mobile robotic systems. We apply the systematic mapping methodology on an initial set of 1274 potentially relevant research papers, we selected 58 primary studies and analyzed them according to a systematically-defined classification framework. This work contributes with (i) a classification framework for methods or techniques for managing safety when dealing with the software of mobile robotic systems (MSRs), (ii) a map of current software methods or techniques for software safety for MRSs, (iii) an elaboration on emerging challenges and implications for future research, and (iv) a replication package for independent replication and verification of this study. Our results confirm that generally existing solutions are not yet ready to be used in everyday life. There is the need of turn-key solutions ready to deal with all the challenges mentioned above.",Safety for mobile robots; Software; Systematic mapping study,Safety for mobile robotic systems: A systematic mapping study from a software engineering perspective,x,,,,,,,,,,NO,
S1106,2,bkwd,webpage,,,,,https://dl.acm.org/doi/abs/10.5555/1717879,,,Scada | Guide books,x,,,x,,,,,,,NO,
S1105,2,bkwd,conferencePaper,2019,"Bedu, Laure; Tinh, Olivier; Petrillo, Fabio",2019 Working Conference on Software Visualization (VISSOFT),10.1109/VISSOFT.2019.00013,,"Software visualization (SV) allows us to visualize different aspects and artifacts related to software, thus helping engineers understanding its underlying design and functionalities in a more efficient and faster way. In this paper, we conducted a tertiary systematic literature review to identify, classify, and evaluate the current state of the art on software visualization from 48 software visualization secondary studies, following three perspectives: publication trends, software visualization topics and techniques, and issues related to research field. Hence, we summarized the main findings among popular sub-fields of SV, identifying potential research directions and fifteen shared recommendations for developers, instructors and researchers. Our main findings are the lack of rigorous evaluation or theories support to assess SV tools effectiveness, the disconnection between tool design and their scope, and the dispersal of the research community.",Information Visualization; Literature Review; Recommendations; SLR; Software Engineering; Software Visualization; Tertiary; Visualization techniques,A Tertiary Systematic Literature Review on Software Visualization,x,,,,,,,,,,NO,
S1104,2,bkwd,conferencePaper,2017,"Bhat, Manoj; Shumaiev, Klym; Biesdorf, Andreas; Hohenstein, Uwe; Matthes, Florian",Software Architecture,10.1007/978-3-319-65831-5_10,,"The need to explicitly document design decisions has been emphasized both in research and in industry. To address design concerns, software architects and developers implicitly capture design decisions in tools such as issue management systems. These design decisions are not explicitly labeled and are not integrated with the architecture knowledge management tools. Automatically extracting design decisions will aid architectural knowledge management tools to learn from the past decisions and to guide architects while making decisions in similar context. In this paper, we propose a two-phase supervised machine learning based approach to first, automatically detect design decisions from issues and second, to automatically classify the identified design decisions into different decision categories. We have manually analyzed and labeled more than 1,500 issues from two large open source repositories and have used this dataset for generating the machine learning models. We have made the dataset publicly available that will serve as a starting point for researchers to further reference and investigate the design decision detection and classification problem. Our evaluation shows that by using linear support vector machines, we can detect design decisions with 91.29% accuracy and classify them with an accuracy of 82.79%. This provides a quantitative basis for learning from past design decisions to support stakeholders in making better and informed design decisions.",Design decisions; Machine learning; Software architecture,Automatic Extraction of Design Decisions from Issue Management Systems: A Machine Learning Based Approach,x,,,,,,,,,,NO,
S1103,2,bkwd,book,2003,"Bass, Len; Clements, Paul; Kazman, Rick",,,,"This award-winning book, substantially updated to reflect the latest developments in the field, introduces the concepts and best practices of software architecture--how a software system is structured and how that system's elements are meant to interact. Distinct from the details of implementation, algorithm, and data representation, an architecture holds the key to achieving system quality, is a reusable asset that can be applied to subsequent systems, and is crucial to a software organization's business strategy.  Drawing on their own extensive experience, the authors cover the essential technical topics for designing, specifying, and validating a system. They also emphasize the importance of the business context in which large systems are designed. Their aim is to present software architecture in a real-world setting, reflecting both the opportunities and constraints that companies encounter. To that end, case studies that describe successful architectures illustrate key points of both technical and organizational discussions.  Topics new to this edition include:  Architecture design and analysis, including the Architecture Tradeoff Analysis Method (ATAM)  Capturing quality requirements and achieving them through quality scenarios and tactics  Using architecture reconstruction to recover undocumented architectures  Documenting architectures using the Unified Modeling Language (UML) New case studies, including Web-based examples and a wireless Enterprise JavaBeans™ (EJB) system designed to support wearable computers The financial aspects of architectures, including use of the Cost Benefit Analysis Method (CBAM) to make decisions   If you design, develop, or manage the building of large software systems (or plan to do so), or if you are interested in acquiring such systems for your corporation or government agency, use  Software Architecture in Practice, Second Edition,  to get up to speed on the current state of software architecture.",Computers / Software Development & Engineering / General,Software Architecture in Practice,x,,,,,,,,,,NO,
S1102,2,bkwd,journalArticle,2021,"Arvanitou, Elvira-Maria; Ampatzoglou, Apostolos; Chatzigeorgiou, Alexander; Carver, Jeffrey C.",Journal of Systems and Software,10.1016/j.jss.2020.110848,https://www.sciencedirect.com/science/article/pii/S0164121220302387,"Background: The development of scientific software applications is far from trivial, due to the constant increase in the necessary complexity of these applications, their increasing size, and their need for intensive maintenance and reuse. Aim: To this end, developers of scientific software (who usually lack a formal computer science background) need to use appropriate software engineering (SE) practices. This paper describes the results of a systematic mapping study on the use of SE for scientific application development and their impact on software quality. Method: To achieve this goal we have performed a systematic mapping study on 359 papers. We first describe a catalog of SE practices used in scientific software development. Then, we discuss the quality attributes of interest that drive the application of these practices, as well as tentative side-effects of applying the practices on qualities. Results: The main findings indicate that scientific software developers are focusing on practices that improve implementation productivity, such as code reuse, use of third-party libraries, and the application of “good” programming techniques. In addition, apart from the finding that performance is a key-driver for many of these applications, scientific software developers also find maintainability and productivity to be important. Conclusions: The results of the study are compared to existing literature, are interpreted under a software engineering prism, and various implications for researchers and practitioners are provided. One of the key findings of the study, which is considered as important for driving future research endeavors is the lack of evidence on the trade-offs that need to be made when applying a software practice, i.e., negative (indirect) effects on other quality attributes.",High performance computing; Scientific computing; Software engineering practices,Software engineering practices for scientific software development: A systematic mapping study,x,,,,,,,,,,NO,
S1101,2,bkwd,conferencePaper,2018,"Alkadhi, Rana; Nonnenmacher, Manuel; Guzman, Emitza; Bruegge, Bernd","2018 IEEE 25th International Conference on Software Analysis, Evolution and Reengineering (SANER)",10.1109/SANER.2018.8330223,,"Developers make various decisions during software development. The rationale behind these decisions is of great importance during software evolution of long living software systems. However, current practices for documenting rationale often fall short and rationale remains hidden in the heads of developers or embedded in development artifacts. Further challenges are faced for capturing rationale in OSS projects; in which developers are geographically distributed and rely mostly on written communication channels to support and coordinate their activities. In this paper, we present an empirical study to understand how OSS developers discuss rationale in IRC channels and explore the possibility of automatic extraction of rationale elements by analyzing IRC messages of development teams. To achieve this, we manually analyzed 7,500 messages of three large OSS projects and identified all fine-grained elements of rationale. We evaluated various machine learning algorithms for automatically detecting and classifying rationale in IRC messages. Our results show that 1) rationale is discussed on average in 25% of IRC messages, 2) code committers contributed on average 54% of the discussed rationale, and 3) machine learning algorithms can detect rationale with 0.76 precision and 0.79 recall, and classify messages into finer-grained rationale elements with an average of 0.45 precision and 0.43 recall.",Data collection; Documentation; History; Machine learning algorithms; Software systems; Taxonomy,How do developers discuss rationale?,x,,,x,,,,,,,NO,
S1100,2,bkwd,journalArticle,2019,"Aldrich, Jonathan; Garlan, David; Kaestner, Christian; Le Goues, Claire; Mohseni-Kabir, Anahita; Ruchkin, Ivan; Samuel, Selva; Schmerl, Bradley; Timperley, Christopher Steven; Veloso, Manuela; Voysey, Ian; Biswas, Joydeep; Guha, Arjun; Holtz, Jarrett; Camara, Javier; Jamshidi, Pooyan",IEEE Software,10.1109/MS.2018.2885058,,"We developed model-based adaptation, an approach that leverages models of software and its environment to enable automated adaptation. The goal of our approach is to build long-lasting software systems that can effectively adapt to changes in their environment.",Adaptation models; Biological system modeling; Robot sensing systems; Robots; Software development; Task analysis,Model-Based Adaptation for Robotics Software,x,,,,,,,,,,NO,
S1099,2,bkwd,journalArticle,2021,"Albonico, Michel; Malavolta, Ivano; Pinto, Gustavo; Guzman, Emitza; Chinnappan, Katerina; Lago, Patricia",arXiv:2103.13762 [cs],,http://arxiv.org/abs/2103.13762,"Robots are becoming more and more commonplace in many industry settings. This successful adoption can be partly attributed to (1) their increasingly affordable cost and (2) the possibility of developing intelligent, software-driven robots. Unfortunately, robotics software consumes significant amounts of energy. Moreover, robots are often battery-driven, meaning that even a small energy improvement can help reduce its energy footprint and increase its autonomy and user experience. In this paper, we study the Robot Operating System (ROS) ecosystem, the de-facto standard for developing and prototyping robotics software. We analyze 527 energy-related data points (including commits, pull-requests, and issues on ROS-related repositories, ROS-related questions on StackOverflow, ROS Discourse, ROS Answers, and the official ROS Wiki). Our results include a quantification of the interest of roboticists on software energy efficiency, 10 recurrent causes, and 14 solutions of energy-related issues, and their implied trade-offs with respect to other quality attributes. Those contributions support roboticists and researchers towards having energy-efficient software in future robotics projects.",Computer Science - Robotics; Computer Science - Software Engineering,Mining Energy-Related Practices in Robotics Software,,,,,,,,,x,,NO,
S1098,2,bkwd,journalArticle,1986,"Basili, Victor R.; Selby, Richard W.; Hutchens, David H.",IEEE Transactions on Software Engineering,10.1109/TSE.1986.6312975,,"A framework is presented for analyzing most of the experimental work performed in software engineering over the past several years. The framework of experimentation consists of four categories corresponding to phases of the experimentation process: definition, planning, operation, and interpretation. A variety of experiments are described within the framework and their contribution to the software engineering discipline is discussed. Some recommendations for the application of the experimental process in software engineering are included.",Controlled experiment; data collection and analysis; Debugging; Educational institutions; empirical study; experimental design; Measurement; Programming; Software; Software engineering; software metrics; software technology measurement and evaluation; Testing,Experimentation in software engineering,x,,,,,,,,,,NO,
S1097,2,bkwd,conferencePaper,2018,"Witte, Thomas; Tichy, Matthias",2018 IEEE/ACM 1st International Workshop on Robotics Software Engineering (RoSE),,,"Context: The software architecture of complex robot systems is usually divided into components. The software is then the configuration and combination of those components and their connectors. Objective: In the Robot Operating System (ROS), this architectural configuration, the ROS node graph, is partly defined in code and created at run-time. The static information about the architecture in the configuration is limited and checking the consistency at development time is not possible. The full software has to be manually executed to check the consistency and debug configuration errors. Method: We propose an approach and a corresponding tool to analyze ROS nodes and their launch files to check consistency and issue warnings if potential problems are detected. The approach uses both static analysis of the launch files as well as dynamic analysis of individual ROS nodes to reconstruct the node graph without executing the whole launch configuration. The nodes are executed in a sandbox to prevent side effects and enable the integration of the analysis tool, e.g., into automated testing systems. Results: The evaluation on internal and publicly available ROS projects shows that we are able to reconstruct the complete architecture of the system if the nodes implement a common lifecycle. Conclusion: The approach enables ROS developers to avoid creating incompatible architectures and check consistency already at development time. The approach can be extended to also monitor architectural consistency at run time.",Computer architecture; dynamic analysis; Peer-to-peer computing; Prototypes; Robots; ROS; roslaunch; Software architecture; software architecture description; Testing; Tools,Checking Consistency of Robot Software Architectures in ROS,,,,x,,,,,x,,NO,
S1096,2,bkwd,conferencePaper,2018,"Vegas, Sira",Proceedings of the 40th International Conference on Software Engineering: Companion Proceeedings,10.1145/3183440.3183466,https://doi.org/10.1145/3183440.3183466,"Experimentation is a key issue in science and engineering. But it is one of software engineering's stumbling blocks. Quite a lot of experiments are run nowadays, but it is a risky business. Software engineering has some special features, leading to some experimentation issues being conceived of differently than in other disciplines. The aim of this technical briefing is to help participants to avoid common pitfalls when analyzing the results of software engineering experiments. The technical briefing is not intended as a data analysis course, because there is already plenty of literature on this subject. It reviews several key issues that we have identified in published software engineering experiments, and addresses them based on the knowledge acquired after 19 years running experiments.",analysis of experiments; controlled experiments; software engineering experimentation,Analyzing software engineering experiments: everything you always wanted to know but were afraid to ask,x,,,x,,,,,,,NO,
S1095,2,bkwd,journalArticle,2019,"Ullah, Faheem; Ali Babar, Muhammad",Journal of Systems and Software,10.1016/j.jss.2019.01.051,https://www.sciencedirect.com/science/article/pii/S0164121219300172,"Context Big Data Cybersecurity Analytics (BDCA) systems leverage big data technologies for analyzing security events data to protect organizational networks, computers, and data from cyber attacks. Objective We aimed at identifying the most frequently reported quality attributes and architectural tactics for BDCA systems. Method We used Systematic Literature Review (SLR) method for reviewing 74 papers. Result Our findings are twofold: (i) identification of 12 most frequently reported quality attributes for BDCA systems; and (ii) identification and codification of 17 architectural tactics for addressing the identified quality attributes. The identified tactics include six performance tactics, four accuracy tactics, two scalability tactics, three reliability tactics, and one security and usability tactic each. Conclusion Our study reveals that in the context of BDCA (a) performance, accuracy and scalability are the most important quality concerns (b) data analytics is the most critical architectural component (c) despite the significance of interoperability, modifiability, adaptability, generality, stealthiness, and privacy assurance, these quality attributes lack explicit architectural support (d) empirical investigation is required to evaluate the impact of the codified tactics and explore the quality trade-offs and dependencies among the tactics and (e) the reported tactics need to be modelled using a standardized modelling language such as UML.",Architectural tactic; Big data; Cybersecurity; Quality attribute,Architectural Tactics for Big Data Cybersecurity Analytics Systems: A Review,x,,,,,,,,,,NO,
S1094,2,bkwd,webpage,,,,,https://9lib.org/document/6qmek7z8-report-effect-estimates-revisited-overview-recommended-measures-effect.html,Recent years have witnessed a growing number of published  reports that point out the need for reporting various effect  size estimates in the context of null hypothesis testing (H 0 ),,The need to report effect size estimates revisited. An overview of some recommended measures of effect size,x,,,,,,,,,,NO,
S1093,2,bkwd,journalArticle,2002,"Thissen, David; Steinberg, Lynne; Kuang, Daniel",Journal of Educational and Behavioral Statistics,10.3102/10769986027001077,https://doi.org/10.3102/10769986027001077,"Williams, Jones, and Tukey (1999) showed that a sequential approach to controlling the false discovery rate in multiple comparisons, due to Benjamini and Hochberg (1995), yields much greater power than the widely used Bonferroni technique that limits the familywise Type I error rate. The Benjamini-Hochberg (B-H) procedure has since been adopted for use in reporting results from the National Assessment of Educational Progress (NAEP), as well as in other research applications. This short note illustrates that the B-H procedure is extremely simple to implement using widely available spreadsheet software. Given its easy implementation, it is feasible to include the B-H procedure in introductory instruction in inferential statistics, augmenting or replacing the Bonferroni technique.",Excel; false discovery; multiple comparisons rate,Quick and Easy Implementation of the Benjamini-Hochberg Procedure for Controlling the False Positive Rate in Multiple Comparisons,x,,,,,,,,,,NO,
S1092,2,bkwd,conferencePaper,2020,"Swanborn, Stan; Malavolta, Ivano",Proceedings of the 35th IEEE/ACM International Conference on Automated Software Engineering Workshops,10.1145/3417113.3422997,https://doi.org/10.1145/3417113.3422997,"Nowadays, robots are widely used in many areas of our lifes, such as autonomous storage, self-driving vehicles, drones, industrial automation, etc. Energy is a critical factor for robotic systems, especially for mobile robots where energy is a finite resource (e.g., surveillance autonomous rovers). Since software is becoming the central focus of modern robotic systems, it is important to understand how it influences the energy consumption of the entire system. However, there is no systematic study of the state of the art in energy efficiency of robotics software that could guide research or practitioners in finding solutions and tools to develop robotic systems with energy efficiency in mind. The goal of this paper is to present a review of existing research on energy efficiency in robotics software. Specifically, we investigate on (i) the used metrics for energy efficiency, (ii) the application domains within the robotics area covered by research on energy efficiency, (iii) the identified major energy consumers within a robotic system, (iv) how existing approaches are evaluated, (v) the used energy models, (vi) the techniques supporting the development of energy-efficient robotics software, and (vii) which quality attributes tend to be traded off when dealing with energy efficiency in robotics. We also provide a replication package to assess, extend, and/or replicate the study. The results of this work can guide researchers and practitioners in robotics and software engineering in better reasoning and contributing to energy-efficient robotics software.",,Energy efficiency in robotics software: a systematic literature review,x,,,,,,,,,,NO,
S1091,2,bkwd,journalArticle,2008,"Cleary, Richard J",The American Statistician,10.1198/tas.2008.s108,https://doi.org/10.1198/tas.2008.s108,,,Statistics: Informed Decisions Using Data and An Introduction to Statistical Analysis for Business and Industry: A Problem Solving Approach,x,,,,,,,,,,NO,
S1090,2,bkwd,conferencePaper,2018,"Siar, Mohammad Vahid Samet; Fakharian, Ahmad",2018 8th Conference of AI Robotics and 10th RoboCup Iranopen International Symposium (IRANOPEN),10.1109/RIOS.2018.8406625,,"Robotics and automation can increase safety, production, efficiency, and product quality in many cases. Robots, including mechanical arms, have evolved substantially over recent years. The mechanical arms have the ability to perform various pre-planned operations in various industries. Therefore, they require faster, more accurate and better control. On the other hand, optimizing energy consumption is one of the major concerns of all societies and industries today. In this paper, we want to minimize the energy consumption of arm robots by optimizing energy consumption and using optimized control algorithms and control systems. We plan to design a path with optimal energy consumption for a robotic arm, which has certain characteristics and limitations such as speed and acceleration limitations and limitations, such as the existence of obstacles. Optimizing the energy consumption of this robot is carried out along its path through optimal control. In order to optimize the above-mentioned controller parameters, an optimization algorithm is used in this research, which is one of the most valid and most used optimization algorithms. To validate the results of applying the control system on the robot, we simulate the performance results, and ultimately discuss the output data from this evaluation.",Acceleration; arm robot; Collision avoidance; Energy consumption; genetic algorithm; Manipulators; optimal control; Optimal control; optimization; Service robots; trajectory planning,Energy efficiency in the robot arm using genetic algorithm,x,,,x,,,,,,,NO,
S1089,2,bkwd,journalArticle,2018,"Santos, Eddie Antonio; McLean, Carson; Solinas, Christopher; Hindle, Abram",Journal of Systems and Software,10.1016/j.jss.2018.07.077,https://www.sciencedirect.com/science/article/pii/S0164121218301456,"Context: Virtual machines provide isolation of services at the cost of hypervisors and more resource usage. This spurred the growth of systems like Docker that enable single hosts to isolate several applications, similar to VMs, within a low-overhead abstraction called containers. Motivation: Although containers tout low overhead performance, how much do they increase energy use? Methodology: This work statistically compares the energy consumption of three application workloads in Docker and on bare-metal Linux. Results: In all cases, there was a statistically significant (t-test and Wilcoxon p < .05) increase in energy consumption when running tests in Docker, mostly due to the performance of I/O system calls. Developers worried about I/O overhead could consider baremetal deployments over Docker container deployments.",Cloud computing; Containerization; Docker; Energy consumption; Microservice; Virtualization,How does docker affect energy consumption? Evaluating workloads in and out of Docker containers,x,,,,,,,,,,NO,
S1088,2,bkwd,conferencePaper,2018,"Rezeck, Paulo; Frade, Bruna; Soares, Jessica; Pinto, Luan; Cadar, Felipe; Azpurua, Hector; Macharet, Douglas G.; Chaimowicz, Luiz; Freitas, Gustavo; M. Campos, Mario F.","2018 Latin American Robotic Symposium, 2018 Brazilian Symposium on Robotics (SBR) and 2018 Workshop on Robotics in Education (WRE)",10.1109/LARS/SBR/WRE.2018.00039,,"Considering the increasing use of sophisticated machinery in remote and hazardous environments, the field of teleoperation aim to improve the human capabilities for the remote manipulation of equipment by providing a human operator with the necessary information to endow the interaction with the remote location as transparent as possible. In this context, a haptic interface allows an operator to perceive the remote environment via tactile feedback or other bodily sensations. Furthermore, it is bi-directional, been capable of both reading and writing input from and to the human user. In this work, we propose a framework for the remote operation of a servo motor robotic arm using haptic feedback. The objective is to provide the sense or presence through a tactile interface using torque feedback from the device motors and a 3D visualization of the arm in real time. As a result, we observed how the load carried by the manipulator during the path impacted accuracy and precision. Also, we perceived the influence of the torque variation of the motors causing users fatigue and mitigated this problem by applying a complementary filter in the force feedback.",Force; Force feedback; Grippers; haptic feedback; Manipulators; robotic arm; robotics; teleoperation; Torque,Framework for Haptic Teleoperation of a Remote Robotic Arm Device,x,,,,,,,,,,NO,
S1087,2,bkwd,journalArticle,,"Quigley, Morgan; Gerkey, Brian; Conley, Ken; Faust, Josh; Foote, Tully; Leibs, Jeremy; Berger, Eric; Wheeler, Rob; Ng, Andrew",,,,"This paper gives an overview of ROS, an opensource robot operating system. ROS is not an operating system in the traditional sense of process management and scheduling; rather, it provides a structured communications layer above the host operating systems of a heterogenous compute cluster. In this paper, we discuss how ROS relates to existing robot software frameworks, and brieﬂy overview some of the available application software which uses ROS.",,ROS: an open-source Robot Operating System,,x,,,,,,,,,NO,
S1086,2,bkwd,conferencePaper,2014,"Rajaraman, Swaminathan Vasanth; Siekkinen, Matti; Hoque, Mohammad A.","2014 IEEE 25th Annual International Symposium on Personal, Indoor, and Mobile Radio Communication (PIMRC)",10.1109/PIMRC.2014.7136502,,"Smartphones are frequently used to shoot and share videos online and emerging applications, such as Augmented Reality, will increase the usage of the camera. Unfortunately, shooting and streaming video drains a modern smartphone's battery very quickly. We report results from a measurement study to dissect the smartphone energy consumption when using such an application. Our main findings are that the majority of power is drawn already when the camera is in focus mode and not yet recording. This power is drawn by the camera internal hardware and some other hardware of the smartphone related to the video processing, and none of this hardware seems to scale the power draw with the video resolution or bit rate. We also study the effectiveness of two simple optimization techniques, namely frame bundling to optimize the radio usage and more aggressive frequency and voltage scaling to reduce the computational power draw. We conclude that while the mechanisms are effective, their potential is overshadowed by the large power draw of other hardware.",Cameras; Hardware; Image sensors; Power demand; Power measurement; Streaming media; Wireless communication,Energy consumption anatomy of live video streaming from a smartphone,x,,,,,,,,,,NO,
S1085,2,bkwd,conferencePaper,2014,"Procaccianti, Giuseppe; Lago, Patricia; Lewis, Grace A.",2014 IEEE/IFIP Conference on Software Architecture,10.1109/WICSA.2014.30,,"Energy efficiency is a primary concern for the ICT sector. In particular, the widespread adoption of cloud computing technologies has drawn attention to the massive energy consumption of data centers. Although hardware constantly improves with respect to energy efficiency, this should also be a main concern for software. In previous work we analyzed the literature and elicited a set of techniques for addressing energy efficiency in cloud-based software architectures. In this work we codified these techniques in the form of Green Architectural Tactics. These tactics will help architects extend their design reasoning towards energy efficiency and to apply reusable solutions for greener software.",Architectural Tactics; Cloud computing; Cloud Computing; Energy consumption; Energy Efficiency; Green products; Monitoring; Servers; Software Architecture,Green Architectural Tactics for the Cloud,x,,,,,,,,,,NO,
S1084,2,bkwd,conferencePaper,2014,"Pinto, Gustavo; Castor, Fernando; Liu, Yu David",Proceedings of the 11th Working Conference on Mining Software Repositories,10.1145/2597073.2597110,https://doi.org/10.1145/2597073.2597110,"A growing number of software solutions have been proposed to address application-level energy consumption problems in the last few years. However, little is known about how much software developers are concerned about energy consumption, what aspects of energy consumption they consider important, and what solutions they have in mind for improving energy efficiency. In this paper we present the first empirical study on understanding the views of application programmers on software energy consumption problems. Using StackOverflow as our primary data source, we analyze a carefully curated sample of more than 300 questions and 550 answers from more than 800 users. With this data, we observed a number of interesting findings. Our study shows that practitioners are aware of the energy consumption problems: the questions they ask are not only diverse -- we found 5 main themes of questions -- but also often more interesting and challenging when compared to the control question set. Even though energy consumption-related questions are popular when considering a number of different popularity measures, the same cannot be said about the quality of their answers. In addition, we observed that some of these answers are often flawed or vague. We contrast the advice provided by these answers with the state-of-the-art research on energy consumption. Our summary of software energy consumption problems may help researchers focus on what matters the most to software developers and end users.",Practitioners; Q&A; Software Energy Consumption,Mining questions about software energy consumption,x,,,,,,,,,,NO,
S1083,2,bkwd,journalArticle,2017,"Pinto, Gustavo; Castor, Fernando",Communications of the ACM,10.1145/3154384,https://doi.org/10.1145/3154384,Development of energy-efficient software is hindered by a lack of knowledge and a lack of tools.,,Energy efficiency: a new concern for application software developers,x,,,,,,,,,,NO,
S1082,2,bkwd,journalArticle,2010,"Lange, D. J. B. A. Kranenburg-de",IEEE robotics & automation magazine,10.1109/mra.2010.938848,https://research.utwente.nl/en/publications/robotics-activities-in-the-netherlands,,,Robotics Activities in The Netherlands,x,,,,,,,,,,NO,
S1081,2,bkwd,conferencePaper,2011,"Pathak, Abhinav; Hu, Y. Charlie; Zhang, Ming; Bahl, Paramvir; Wang, Yi-Min",Proceedings of the sixth conference on Computer systems,10.1145/1966445.1966460,https://doi.org/10.1145/1966445.1966460,"Accurate, fine-grained online energy estimation and accounting of mobile devices such as smartphones is of critical importance to understanding and debugging the energy consumption of mobile applications. We observe that state-of-the-art, utilization-based power modeling correlates the (actual) utilization of a hardware component with its power state, and hence is insufficient in capturing several power behavior not directly related to the component utilization in modern smartphones. Such behavior arise due to various low level power optimizations programmed in the device drivers. We propose a new, system-call-based power modeling approach which gracefully encompasses both utilization-based and non-utilization-based power behavior. We present the detailed design of such a power modeling scheme and its implementation on Android and Windows Mobile. Our experimental results using a diverse set of applications confirm that the new model significantly improves the fine-grained as well as whole-application energy consumption accuracy. We further demonstrate fine-grained energy accounting enabled by such a fined-grained power model, via amanually implemented eprof, the energy counterpart of the classic gprof tool, for profiling application energy drain.",energy; mobile; smartphone,Fine-grained power modeling for smartphones using system call tracing,x,,,,,,,,,,NO,
S1080,2,bkwd,conferencePaper,2016,"Nagappan, Meiyappan; Shihab, Emad","2016 IEEE 23rd International Conference on Software Analysis, Evolution, and Reengineering (SANER)",10.1109/SANER.2016.88,,"There has been tremendous growth in the use of mobile devices over the last few years. This growth has fueled the development of millions of software applications for these mobile devices often called as 'apps'. Current estimates indicate that there are hundreds of thousands of mobile app developers. As a result, in recent years, there has been an increasing amount of software engineering research conducted on mobile apps to help such mobile app developers. In this paper, we discuss current and future research trends within the framework of the various stages in the software development life-cycle: requirements (including non-functional), design and development, testing, and maintenance. While there are several non-functional requirements, we focus on the topics of energy and security in our paper, since mobile apps are not necessarily built by large companies that can afford to get experts for solving these two topics. For the same reason we also discuss the monetizing aspects of a mobile app at the end of the paper. For each topic of interest, we first present the recent advances done in these stages and then we present the challenges present in current work, followed by the future opportunities and the risks present in pursuing such research.",Feature extraction; Google; Mining app markets; Mobile apps; Mobile communication; Smart phones; Software; Software engineering,Future Trends in Software Engineering Research for Mobile Apps,x,,,x,,,,,,,NO,
S1079,2,bkwd,conferencePaper,2015,"Moura, Irineu; Pinto, Gustavo; Ebert, Felipe; Castor, Fernando",2015 IEEE/ACM 12th Working Conference on Mining Software Repositories,10.1109/MSR.2015.13,,"Over the last years, energy consumption has become a first-class citizen in software development practice. While energy-efficient solutions on lower-level layers of the software stack are well-established, there is convincing evidence that even better results can be achieved by encouraging practitioners to participate in the process. For instance, previous work has shown that using a newer version of a concurrent data structure can yield a 2.19x energy savings when compared to the old associative implementation [75]. Nonetheless, little is known about how much software engineers are employing energy-efficient solutions in their applications and what solutions they employ for improving energy-efficiency. In this paper we present a qualitative study of ""energy-aware commits"". Using Github as our primary data source, we perform a thorough analysis on an initial sample of 2,189 commits and carefully curate a set of 371 energy-aware commits spread over 317 real-world non-trivial applications. Our study reveals that software developers heavily rely on low-level energy management approaches, such as frequency scaling and multiple levels of idleness. Also, our findings suggest that ill-chosen energy saving techniques can impact the correctness of an application. Yet, we found what we call ""energy-aware interfaces"", which are means for clients (e.g., Developers or end-users) to save energy in their applications just by using a function, abstracting away the low-level implementation details.",Computer bugs; Data mining; Energy consumption; Kernel; Libraries; Manuals,Mining Energy-Aware Commits,x,,,,,,,,,,NO,
S1078,2,bkwd,journalArticle,2014,"Meike, Davis; Pellicciari, Marcello; Berselli, Giovanni",IEEE Transactions on Automation Science and Engineering,10.1109/TASE.2013.2285813,,"This paper quantitatively reports about potential energy savings on robotic assembly lines for the automotive industry. At first, a detailed system model is described, which improves previously published results by explicitly considering both manipulator and electrical drive dynamics. The model closely captures experimental data in terms of actuation torques and servodrive voltages, which are directly used to derive the plant input power. Two practical methods are then evaluated for reducing the overall energy consumption. The methods rely on: 1) implementation of energy-optimal trajectories obtained by means of time scaling, concerning the robots' motion from the last process point to the home positions and 2) reduction of energy consumption by releasing the actuator brakes earlier when the robots are kept stationary. Simulation results, based on the production timing characteristics measured at a real plant, clearly shows that the system energy consumption can be effectively reduced without negative effects on the production rate. Note to Practitioners - The global industry trend towards sustainability demands energy optimization as a primary goal. Currently, industrial multirobot systems are not efficiently programmed as long as effective simulation tools are mostly lacking. In this context, a detailed model of the production line is proposed, which can be readily integrated into commercial tools for robot programming. Furthermore, the impact of practical optimization methods which are readily applicable to existing equipment is quantitatively highlighted. The key aspect of the proposed approach is that both the production rate of each cell and the robot hardware limitations are considered as strict constraints, so that no significant changes to the plant are required.",Computational modeling; Energy efficient robotics; Inverters; Production; robotic manufacturing; Service robots; Torque; Trajectory; trajectory planning; virtual prototyping,Energy Efficient Use of Multirobot Production Lines in the Automotive Industry: Detailed System Modeling and Optimization,x,,,,,,,,,,NO,
S1077,2,bkwd,conferencePaper,2006,"Mei, Yongguo; Lu, Yung-Hsiang; Lee, C.S.G.; Hu, Y.C.","Proceedings 2006 IEEE International Conference on Robotics and Automation, 2006. ICRA 2006.",10.1109/ROBOT.2006.1641761,,"Mobile robots can be used in many applications, including exploration in an unknown area. Robots usually carry limited energy so energy conservation is vital. This paper presents an approach for energy-efficient robot exploration. Our approach determines the next target for the robot to visit based upon orientation information. The robot plans the path between the current position to the next target in an energy-efficient way. Our method reduces repeated coverage, a common problem for most existing utility-based target selecting methods. We conduct simulations for both random and structured environments, and compare our method with a utility-based method that chooses the middle cell from the widest opening. Results show that our method can reduce energy consumption by 42% and traveling distance by 41%",Application software; Costs; Energy conservation; Energy consumption; Energy efficiency; Mobile robots; Orbital robotics; Path planning; Power engineering and energy; Robot sensing systems,Energy-efficient mobile robot exploration,x,,,,,,,,,,NO,
S1076,2,bkwd,conferencePaper,2015,"Malik, Haroon; Zhao, Peng; Godfrey, Michael",2015 IEEE/ACM 12th Working Conference on Mining Software Repositories,10.1109/MSR.2015.53,,"The popularity of smartphones - small computers that run on battery power - has exploded in the last decade. Unsurprisingly, power consumption is an overarching concern for mobile app developers, who are anxious to learn about power-related problems that are encountered by others. In this paper, we present an empirical study exploring the characteristics of energy-related questions posed in Stack Overflow, issues faced by the developers, and the most significantly discussed APIs. We extracted a sample of 5009 Stack Overflow questions, and manually analyzed 1000 posts of Android-related energy questions. Our study shows that developers are most concerned about energy-related issues that concern improper implementations, sensor, and radio utilization.",Androids; API; Batteries; Energy; Energy consumption; Humanoid robots; Mobile communication; Power; Smart phones; Software; StackOverflow,Going Green: An Exploratory Analysis of Energy-Related Questions,x,,,,,,,,,,NO,
S1075,2,bkwd,conferencePaper,2020,"Malavolta, Ivano; Lewis, Grace; Schmerl, Bradley; Lago, Patricia; Garlan, David",2020 IEEE/ACM 42nd International Conference on Software Engineering: Software Engineering in Practice (ICSE-SEIP),,,"The Robot Operating System (ROS) is the de-facto standard for robotic software. If on one hand ROS is helping roboticists, e.g., by providing a standardized communication platform, on the other hand ROS-based systems are getting larger and more complex and could benefit from good software architecture practices. This paper presents an observational study aimed at (i) unveiling the state-of the-practice for architecting ROS-based systems and (ii) providing guidance to roboticists about how to properly architect ROS-based systems. To achieve these goals, we (i) build a dataset of 335 GitHub repositories containing real open-source ROS-based systems, (ii) mine the repositories for extracting the state of the practice about how roboticists are architecting them, and (iii) synthesize a catalog of 49 evidence-based guidelines for architecting ROS-based systems. The guidelines have been validated by 77 roboticists working on real-world open-source ROS-based systems.",Computer architecture; Data mining; Documentation; Guidelines; Mining Software Repositories; Open source software; Robotics; Robots; Service robots; Software Architecture,How do you Architect your Robots? State of the Practice and Guidelines for ROS-based Systems,,,,,,,,,x,,NO,
S1074,2,bkwd,conferencePaper,2013,"Licea, Daniel Bonilla; McLernon, Des; Ghogho, Mounir; Zaidi, Syed Ali Raza",21st European Signal Processing Conference (EUSIPCO 2013),,,"There are emerging applications in which a robot must explore some physical area or do some surveillance task and then communicate with a base station (BS) to transmit its information. Often this working environment has rich scattering and so the wireless channel will experience small scale fading. In this paper we develop an algorithm whereby the robot visits a specific number of locations with a pre-determined geometry, and transmits its data from one of these locations in an optimum way that minimizes the overall energy consumption. We show analytically (and via simulation) that this approach can both reduce the total energy required and obtain a diversity gain for robotic wireless communications.",Channel estimation; Diversity reception; Geometry; machine-to-machine communications; mobility diversity; Robot kinematics; robotic communications; Trajectory; Wireless communication,An energy saving robot mobility diversity algorithm for wireless communications,x,,,x,,,,,,,NO,
S1073,2,bkwd,journalArticle,2015,"Lewis, Grace; Lago, Patricia",Journal of Systems and Software,10.1016/j.jss.2015.06.005,https://www.sciencedirect.com/science/article/pii/S0164121215001211,"Mobile devices have become for many the preferred way of interacting with the Internet, social media and the enterprise. However, mobile devices still do not have the computing power and battery life that will allow them to perform effectively over long periods of time, or for executing applications that require extensive communication, computation, or low latency. Cyber-foraging is a technique to enable mobile devices to extend their computing power and storage by offloading computation or data to more powerful servers located in the cloud or in single-hop proximity. This article presents the results of a systematic literature review (SLR) on architectures that support cyber-foraging. Elements of the identified architectures were codified in the form of Architectural Tactics for Cyber-Foraging. These tactics will help architects extend their design reasoning toward cyber-foraging as a way to support the mobile applications of the present and the future.",Cyber-foraging; Mobile cloud computing; Software architecture,Architectural tactics for cyber-foraging: Results of a systematic literature review,x,,,,,,,,,,NO,
S1072,2,bkwd,conferencePaper,2015,"Lewis, Grace; Lago, Patricia",2015 11th International ACM SIGSOFT Conference on Quality of Software Architectures (QoSA),10.1145/2737182.2737188,,"Mobile devices have become for many the preferred way of interacting with the Internet, social media and the enterprise. However, mobile devices still do not have the computing power or battery life that will allow them to perform effectively over long periods of time or for executing applications that require extensive communication or computation, or low latency. Cyber-foraging is a technique enabling mobile devices to extend their computing power and storage by offloading computation or data to more powerful servers located in the cloud or in single-hop proximity. This paper presents a catalog of architectural tactics for cyber-foraging that was derived from the results of a systematic literature review on architectures for cyber-foraging systems. Elements of the architectures identified in the primary studies were codified in the form of Architectural Tactics for Cyber-Foraging. These tactics will help architects extend their design reasoning towards cyber-foraging as a way to support the mobile applications of the present and the future.",architectural tactics; Batteries; Cloud computing; Computer architecture; cyber-foraging; Mobile applications; mobile cloud computing; Mobile communication; mobile computing; Mobile handsets; Servers; software architecture,A catalog of architectural tactics for cyber-foraging,x,,,,,,,,,,NO,
S1071,2,bkwd,journalArticle,1952,"Kruskal, William H.; Wallis, W.   Allen",Journal of the American Statistical Association,10.1080/01621459.1952.10483441,https://www.tandfonline.com/doi/abs/10.1080/01621459.1952.10483441,"Given C samples, with n i observations in the ith sample, a test of the hypothesis that the samples are from the same population may be made by ranking the observations from from 1 to Σn i (giving each observation in a group of ties the mean of the ranks tied for), finding the C sums of ranks, and computing a statistic H. Under the stated hypothesis, H is distributed approximately as χ2(C – 1), unless the samples are too small, in which case special approximations or exact tables are provided. One of the most important applications of the test is in detecting differences among the population means.* * Based in part on research supported by the Office of Naval Research at the Statistical Research Center, University of Chicago.",,Use of Ranks in One-Criterion Variance Analysis,x,,,,,,,,,,NO,
S1070,2,bkwd,conferencePaper,2015,"Kjærgaard, Mikkel Baun; Kuhrmann, Marco",Proceedings of the 11th International ACM SIGSOFT Conference on Quality of Software Architectures,10.1145/2737182.2737196,https://doi.org/10.1145/2737182.2737196,"Mobile sensing denotes the use of mobile devices and their integrated sensors for sensing and learning physical and social phenomena, and to use derived information for sharing, informing, and persuading humans. From the perspective of software architecture, mobile sensing bears several design challenges regarding, e.g., use of battery powered mobile devices, and collection and processing of sensor data. In this paper, we present tactics to address these architecture design challenges. We discuss the two architectural qualities energy efficiency and resource adaptability, and describe them using general scenario-generation tables to support the systematic specification of architecture requirements. Furthermore, we develop a catalog of architectural tactics distilled from literature to enable developers to systematically apply proven methods. For each tactic, we provide examples to relate the respective tactics to particular cases illustrating their use in practice. Finally, we provide a preliminary validation of the proposed systematized tactics catalog, which was conducted with student teams. Our preliminary findings show that the tactics are beneficial to provide a guideline and to create awareness of the special challenges of energy-efficient and resource-adaptable architecture design.",architecture tactics; mobile sensing; software architecture,On Architectural Qualities and Tactics for Mobile Sensing,x,,,,,,,,,,NO,
S1069,2,bkwd,document,2007,"Kitchenham, B.; Charters, S.",,,,,,Guidelines for performing Systematic Literature Reviews in Software Engineering,x,,,,,,,,,,NO,
S1068,2,bkwd,journalArticle,2013,"Holzmann, Gerard J.",IEEE Software,10.1109/MS.2013.32,,"How much software does it take to land a spacecraft safely on Mars, and how do you make all that code reliable? This column describes such a software development process. The first Web extra at http://mars.jpl.nasa.gov/multimedia/videos/movies/miam20121218/miam20121218-1280.mov is a 60-second video from NASA's Jet Propulsion Laboratory that shows how NASA's Mars rover drivers operate the vehicles from millions of miles away. The second Web extra at http://mars.jpl.nasa.gov/multimedia/videos/movies/msl20120827_curiositycommunicates/msl20120827_curiositycommunicates-1280.mov is an animated video showing how NASA's Curiosity rover communicates with Earth via two of NASA's Mars orbiters, Mars Reconnaissance Orbiter (MRO) and Odyssey, and the European Space Agency's Mars Express. The third Web extra at http://mars.jpl.nasa.gov/multimedia/videos/movies/CoM20121207/CoM20121207-1280.mov is a video discussing the scientific study by NASA's Curiosity Mars rover at Rocknest.",Encoding; Hardware; impact; Mars; Performance evaluation; software; Software devlopment; Space missions; Space vehicles; spacecraft,Landing a Spacecraft on Mars,x,,,,,,,,,,NO,
S1067,2,bkwd,book,2013,"Hollander, Myles; Wolfe, Douglas A.; Chicken, Eric",,,,"Praise for the Second Edition “This book should be an essential part of the personal library of every practicing statistician.”—Technometrics   Thoroughly revised and updated, the new edition of Nonparametric Statistical Methods includes additional modern topics and procedures, more practical data sets, and new problems from real-life situations. The book continues to emphasize the importance of nonparametric methods as a significant branch of modern statistics and equips readers with the conceptual and technical skills necessary to select and apply the appropriate procedures for any given situation. Written by leading statisticians, Nonparametric Statistical Methods, Third Edition provides readers with crucial nonparametric techniques in a variety of settings, emphasizing the assumptions underlying the methods. The book provides an extensive array of examples that clearly illustrate how to use nonparametric approaches for handling one- or two-sample location and dispersion problems, dichotomous data, and one-way and two-way layout problems. In addition, the Third Edition features:  The use of the freely available R software to aid in computation and simulation, including many new R programs written explicitly for this new edition New chapters that address density estimation, wavelets, smoothing, ranked set sampling, and Bayesian nonparametrics Problems that illustrate examples from agricultural science, astronomy, biology, criminology, education, engineering, environmental science, geology, home economics, medicine, oceanography, physics, psychology, sociology, and space science  Nonparametric Statistical Methods, Third Edition is an excellent reference for applied statisticians and practitioners who seek a review of nonparametric methods and their relevant applications. The book is also an ideal textbook for upper-undergraduate and first-year graduate courses in applied nonparametric statistics.",Mathematics / Applied; Mathematics / Probability & Statistics / Bayesian Analysis; Mathematics / Probability & Statistics / Regression Analysis; Mathematics / Probability & Statistics / Stochastic Processes,Nonparametric Statistical Methods,x,,,x,,,,,,,NO,
S1066,2,bkwd,conferencePaper,2014,"Hindle, Abram; Wilson, Alex; Rasmussen, Kent; Barlow, E. Jed; Campbell, Joshua Charles; Romansky, Stephen",Proceedings of the 11th Working Conference on Mining Software Repositories,10.1145/2597073.2597097,https://doi.org/10.1145/2597073.2597097,"Green Mining is a field of MSR that studies software energy consumption and relies on software performance data. Unfortunately there is a severe lack of publicly available software power use performance data. This means that green mining researchers must generate this data themselves by writing tests, building multiple revisions of a product, and then running these tests multiple times (10+) for each software revision while measuring power use. Then, they must aggregate these measurements to estimate the energy consumed by the tests for each software revision. This is time consuming and is made more difficult by the constraints of mobile devices and their OSes. In this paper we propose, implement, and demonstrate Green Miner: the first dedicated hardware mining software repositories testbed. The Green Miner physically measures the energy consumption of mobile devices (Android phones) and automates the testing of applications, and the reporting of measurements back to developers and researchers. The Green Miner has already produced valuable results for commercial Android application developers, and has been shown to replicate other power studies' results.",Android; Software Change; Software Energy Consumption,GreenMiner: a hardware based mining software repositories software energy consumption framework,x,,,,,,,,,,NO,
S1065,2,bkwd,conferencePaper,2013,"Hao, Shuai; Li, Ding; Halfond, William G. J.; Govindan, Ramesh",2013 35th International Conference on Software Engineering (ICSE),10.1109/ICSE.2013.6606555,,"Optimizing the energy efficiency of mobile applications can greatly increase user satisfaction. However, developers lack viable techniques for estimating the energy consumption of their applications. This paper proposes a new approach that is both lightweight in terms of its developer requirements and provides fine-grained estimates of energy consumption at the code level. It achieves this using a novel combination of program analysis and per-instruction energy modeling. In evaluation, our approach is able to estimate energy consumption to within 10% of the ground truth for a set of mobile applications from the Google Play store. Additionally, it provides useful and meaningful feedback to developers that helps them to understand application energy consumption behavior.",Cost function; Energy consumption; fine-grained energy estimation; Generators; Hardware; Instruments; Mobile app; Mobile communication; program analysis; Software,Estimating mobile application energy consumption using program analysis,x,,,,,,,,,,NO,
S1064,2,bkwd,book,2005,"Grissom, Robert J.; Kim, John J.",,,,"The goal of this book is to inform a broad readership (broad with respect to fields of research and extent of statistical knowledge) about a variety of measures and estimators of effect sizes for research, their proper applications and interpretations, and their limitations. Its focus is on analyzing post-research results. Effect Sizes for Research provides an evenhanded account of controversial issues in the field, such as the role of significance testing. Consistent with the trend toward greater use of robust statistical methods, the book pays much attention to the statistical assumptions of the methods and to robust measures of effect size. Effect Sizes for Research discusses different effect sizes for a variety of variables, designs, circumstances, aid purposes. It covers standardized differences between means, correlational measures, strength of association, and confidence intervals, as well as less known measures such as stochastic superiority. The book clearly demonstrates how the choice of an appropriate measure might depend on such factors as whether variables are categorical, ordinal, or continuous; satisfying assumptions; the sampling method; and the source of variability in the population. (PsycINFO Database Record (c) 2016 APA, all rights reserved)",Effect Size (Statistical); Experimentation; Knowledge of Results; Methodology; Statistical Analysis; Statistical Measurement; Testing,Effect sizes for research: A broad practical approach,x,,,,,,,,,,NO,
S1063,2,bkwd,journalArticle,2013,"Galceran, Enric; Carreras, Marc",Robotics and Autonomous Systems,10.1016/j.robot.2013.09.004,https://www.sciencedirect.com/science/article/pii/S092188901300167X,"Coverage Path Planning (CPP) is the task of determining a path that passes over all points of an area or volume of interest while avoiding obstacles. This task is integral to many robotic applications, such as vacuum cleaning robots, painter robots, autonomous underwater vehicles creating image mosaics, demining robots, lawn mowers, automated harvesters, window cleaners and inspection of complex structures, just to name a few. A considerable body of research has addressed the CPP problem. However, no updated surveys on CPP reflecting recent advances in the field have been presented in the past ten years. In this paper, we present a review of the most successful CPP methods, focusing on the achievements made in the past decade. Furthermore, we discuss reported field applications of the described CPP methods. This work aims to become a starting point for researchers who are initiating their endeavors in CPP. Likewise, this work aims to present a comprehensive review of the recent breakthroughs in the field, providing links to the most interesting and successful works.",Coverage path planning; Motion planning; Path planning,A survey on coverage path planning for robotics,x,,,,,,,,,,NO,
S1062,2,bkwd,conferencePaper,2020,"Fischer-Nielsen, Anders; Fu, Zhoulai; Su, Ting; Wąsowski, Andrzej",2020 IEEE/ACM 42nd International Conference on Software Engineering: Software Engineering in Practice (ICSE-SEIP),,,"A dependency bug is a software fault that manifests itself when accessing an unavailable asset. Dependency bugs are pervasive and we all hate them. This paper presents a case study of dependency bugs in the Robot Operating System (ROS), applying mixed methods: a qualitative investigation of 78 dependency bug reports, a quantitative analysis of 1354 ROS bug reports against 19553 reports in the top 30 GitHub projects, and a design of three dependency linters evaluated on 406 ROS packages.The paper presents a definition and a taxonomy of dependency bugs extracted from data. It describes multiple facets of these bugs and estimates that as many as 15% (!) of all reported bugs are dependency bugs. We show that lightweight tools can find dependency bugs efficiently, although it is challenging to decide which tools to build and difficult to build general tools. We present the research problem to the community, and posit that it should be feasible to eradicate it from software development practice.",bugs; build failures; Computer bugs; empirical software engineering; evolution; integration; Libraries; modularity; Operating systems; Robot kinematics; Robots; ROS; Software development management; Tools,The Forgotten Case of the Dependency Bugs : On the Example of the Robot Operating System,,,,,,,,,x,,NO,
S1061,2,bkwd,journalArticle,2019,"Estefo, Pablo; Simmonds, Jocelyn; Robbes, Romain; Fabry, Johan",Journal of Systems and Software,10.1016/j.jss.2019.02.024,https://www.sciencedirect.com/science/article/pii/S0164121219300342,"ROS, the Robot Operating System, offers a core set of software for operating robots that can be extended by creating or using existing packages, making it possible to write robotic software that can be reused on different hardware platforms. With thousands of packages available per stable distribution, encapsulating algorithms, sensor drivers, etc., it is the de facto middleware for robotics. Like any software ecosystem, ROS must evolve in order to keep meeting the requirements of its users. In practice, packages may end up being abandoned between releases: no one may be available to update a package, or newer packages offer similar functionality. As such, we wanted to identify and understand the evolution challenges faced by the ROS ecosystem. In this article, we report our findings after interviewing 19 ROS developers in depth, followed by a focus group (4 participants) and an online survey of 119 ROS community members. We specifically focused on the issues surrounding package reuse and how to contribute to existing packages. To conclude, we discuss the implications of our findings, and propose five recommendations for overcoming the identified issues, with the goal of improving the health of the ROS ecosystem.",Package management; Robot Operating System; Software ecosystems,The Robot Operating System: Package reuse and community dynamics,x,,,x,,,,,,,NO,
S1060,2,bkwd,conferencePaper,2011,"Cruzes, Daniela S.; Dyba, Tore",2011 International Symposium on Empirical Software Engineering and Measurement,10.1109/ESEM.2011.36,,"Thematic analysis is an approach that is often used for identifying, analyzing, and reporting patterns (themes) within data in primary qualitative research. 'Thematic synthesis' draws on the principles of thematic analysis and identifies the recurring themes or issues from multiple studies, interprets and explains these themes, and draws conclusions in systematic reviews. This paper conceptualizes the thematic synthesis approach in software engineering as a scientific inquiry involving five steps that parallel those of primary research. The process and outcome associated with each step are described and illustrated with examples from systematic reviews in software engineering.",Context; Data mining; Encoding; evidence-based and empirical software engineering; Organizations; research synthesis; secondary research; Software; Software engineering; systematic review; Systematics,Recommended Steps for Thematic Synthesis in Software Engineering,x,,,x,,,,,,,NO,
S1059,2,bkwd,journalArticle,2019,"Cruz, Luis; Abreu, Rui",Empirical Software Engineering,10.1007/s10664-019-09682-0,https://doi.org/10.1007/s10664-019-09682-0,"Software engineers make use of design patterns for reasons that range from performance to code comprehensibility. Several design patterns capturing the body of knowledge of best practices have been proposed in the past, namely creational, structural and behavioral patterns. However, with the advent of mobile devices, it becomes a necessity a catalog of design patterns for energy efficiency. In this work, we inspect commits, issues and pull requests of 1027 Android and 756 iOS apps to identify common practices when improving energy efficiency. This analysis yielded a catalog, available online, with 22 design patterns related to improving the energy efficiency of mobile apps. We argue that this catalog might be of relevance to other domains such as Cyber-Physical Systems and Internet of Things. As a side contribution, an analysis of the differences between Android and iOS devices shows that the Android community is more energy-aware.",,Catalog of energy patterns for mobile applications,x,,,x,,,,,,,NO,
S1058,2,bkwd,journalArticle,1968,"Cohen, Jacob",Psychological Bulletin,10.1037/h0026256,,"A previously described coefficient of agreement for nominal scales, kappa, treats all disagreements equally. A generalization to weighted kappa (Kw) is presented. The Kw provides for the incorpation of ratio-scaled degrees of disagreement (or agreement) to each of the cells of the k * k table of joint nominal scale assignments such that disagreements of varying gravity (or agreements of varying degree) are weighted accordingly. Although providing for partial credit, Kw is fully chance corrected. Its sampling characteristics and procedures for hypothesis testing and setting confidence limits are given. Under certain conditions, Kw equals product-moment r. The use of unequal weights for symmetrical cells makes Kw suitable as a measure of validity. (PsycINFO Database Record (c) 2016 APA, all rights reserved)",Mathematics (Concepts); Scaling (Testing); Statistical Analysis; Testing Methods,Weighted kappa: Nominal scale agreement provision for scaled disagreement or partial credit,x,,,,,,,,,,NO,
S1057,2,bkwd,journalArticle,1993,"Cliff, Norman",Psychological Bulletin,10.1037/0033-2909.114.3.494,,"Much behavioral research involves comparing the central tendencies of different groups, or of the same Ss under different conditions, and the usual analysis is some form of mean comparison. This article suggests that an ordinal statistic, d, is often more appropriate. d compares the number of times a score from one group or condition is higher than one from the other, compared with the reverse. Compared to mean comparisons, d is more robust and equally or more powerful; it is invariant under transformation; and it often conforms more closely to the experimeter's research hypothesis. It is suggested that inferences from d be based on sample estimates of its variance rather than on the more traditional assumption of identical distributions. The statistic is extended to simple repeated measures designs, and ways of extending its use to more complex designs are suggested. (PsycINFO Database Record (c) 2016 APA, all rights reserved)",Statistical Analysis,Dominance statistics: Ordinal analyses to answer ordinal questions,x,,,,,,,,,,NO,
S1056,2,bkwd,conferencePaper,2003,"Clements, P.; Garlan, D.; Little, R.; Nord, R.; Stafford, J.","25th International Conference on Software Engineering, 2003. Proceedings.",10.1109/ICSE.2003.1201264,,"This lecture maps the concepts and templates explored in this tutorial with well-known architectural prescriptions, including the 4+1 approach of the Rational Unified Process, the Siemens Four Views approach, and the ANSI/IEEE-1471-2000 recommended best practice for documenting architectures for software-intensive systems. The lecture concludes by re-capping the highlights of the tutorial, and asking for feedback.",Computer architecture; Computer science; Design engineering; Documentation; Machine vision; Pattern recognition; Programming; Robustness; Software architecture; Software engineering,Documenting software architectures: views and beyond,x,,,,,,,,,,NO,
S1055,2,bkwd,conferencePaper,2017,"Ciccozzi, Federico; Di Ruscio, Davide; Malavolta, Ivano; Pelliccione, Patrizio; Tumova, Jana",2017 IEEE/ACM 39th International Conference on Software Engineering Companion (ICSE-C),10.1109/ICSE-C.2017.167,,"The production of software for robotic systems is often case-specific, without fully following established engineering approaches. Systematic approaches, methods, models, and tools are pivotal for the creation of robotic systems for real-world applications and turn-key solutions. Well-defined (software) engineering approaches are considered the ""make or break"" factor in the development of complex robotic systems. The shift towards well-defined engineering approaches will stimulate component supply-chains and significantly reshape the robotics marketplace. The goal of this technical briefing is to provide an overview on the state of the art and practice concerning solutions and open challenges in the engineering of software required to develop and manage robotic systems. Model-Driven Engineering (MDE) is discussed as a promising technology to raise the level of abstraction, promote reuse, facilitate integration, boost automation and promote early analysis in such a complex domain.",Automation; Model driven engineering; Model-Driven Engineering; Robot sensing systems; Robotics; Software engineering; Software Engineering; Systematics,Engineering the software of robotic systems,x,,,x,,,,,,,NO,
S1054,2,bkwd,conferencePaper,2016,"Chowdhury, Shaiful Alam; Hindle, Abram",Proceedings of the 13th International Conference on Mining Software Repositories,10.1145/2901739.2903494,https://doi.org/10.1145/2901739.2903494,"The improvement in battery technology for battery-driven devices is insignificant compared to their computing ability. In spite of the overwhelming advances in processing ability, adoption of sophisticated applications is hindered by the fear of shorter battery life. This is one of the several reasons software developers are becoming conscious of writing energy efficient code. Research has been conducted to model software energy consumption, to reduce energy drains, and to understand developers expertise on energy efficiency. In this paper, however, we investigate the nature of energy-aware software projects. We observed that projects concerned with energy issues are larger and more popular than the projects that do not address energy consumption. Energy related code changes are larger than others (e.g., bug fixes). In addition, our initial results suggest that energy efficiency is mostly addressed on certain platforms and applications.",,Characterizing energy-aware software projects: are they different?,x,,,,,,,,,,NO,
S1052,2,bkwd,journalArticle,2012,"Beloglazov, Anton; Abawajy, Jemal; Buyya, Rajkumar",Future Generation Computer Systems,10.1016/j.future.2011.04.017,https://www.sciencedirect.com/science/article/pii/S0167739X11000689,"Cloud computing offers utility-oriented IT services to users worldwide. Based on a pay-as-you-go model, it enables hosting of pervasive applications from consumer, scientific, and business domains. However, data centers hosting Cloud applications consume huge amounts of electrical energy, contributing to high operational costs and carbon footprints to the environment. Therefore, we need Green Cloud computing solutions that can not only minimize operational costs but also reduce the environmental impact. In this paper, we define an architectural framework and principles for energy-efficient Cloud computing. Based on this architecture, we present our vision, open research challenges, and resource provisioning and allocation algorithms for energy-efficient management of Cloud computing environments. The proposed energy-aware allocation heuristics provision data center resources to client applications in a way that improves energy efficiency of the data center, while delivering the negotiated Quality of Service (QoS). In particular, in this paper we conduct a survey of research in energy-efficient computing and propose: (a) architectural principles for energy-efficient management of Clouds; (b) energy-efficient resource allocation policies and scheduling algorithms considering QoS expectations and power usage characteristics of the devices; and (c) a number of open research challenges, addressing which can bring substantial benefits to both resource providers and consumers. We have validated our approach by conducting a performance evaluation study using the CloudSim toolkit. The results demonstrate that Cloud computing model has immense potential as it offers significant cost savings and demonstrates high potential for the improvement of energy efficiency under dynamic workload scenarios.",Cloud computing; Dynamic consolidation; Energy efficiency; Green IT; Resource management; Virtualization,Energy-aware resource allocation heuristics for efficient management of data centers for Cloud computing,x,,,x,,,,,,,NO,
S1051,2,bkwd,book,2002,"Beetz, Michael",,,,"Robotic agents, such as autonomous office couriers or robot tourguides, must be both reliable and efficient. Thus, they have to flexibly interleave their tasks, exploit opportunities, quickly plan their course of action, and, if necessary, revise their intended activities. This book makes three major contributions to improving the capabilities of robotic agents:  - first, a plan representation method is introduced which allows for specifying flexible and reliable behavior  - second, probabilistic hybrid action models are presented as a realistic causal model for predicting the behavior generated by modern concurrent percept-driven robot plans  - third, the system XFRMLEARN capable of learning structured symbolic navigation plans is described in detail.",Computers / Computer Science; Computers / Expert Systems; Computers / Intelligence (AI) & Semantics; Computers / Networking / Hardware; Technology & Engineering / Automation; Technology & Engineering / Manufacturing; Technology & Engineering / Robotics,Plan-Based Control of Robotic Agents: Improving the Capabilities of Autonomous Robots,x,,,x,,,,,,,NO,
S1050,2,bkwd,conferencePaper,2016,"Bavota, Gabriele","2016 IEEE 23rd International Conference on Software Analysis, Evolution, and Reengineering (SANER)",10.1109/SANER.2016.47,,"The amount of unstructured data available to software engineering researchers in versioning systems, issue trackers, achieved communications, and many other repositories is continuously growing over time. The mining of such data represents an unprecedented opportunity for researchers to investigate new research questions and to build a new generation of recommender systems supporting development and maintenance activities. This paper describes works on the application of Mining Unstructured Data (MUD) in software engineering. The paper briefly reviews the types of unstructured data available to researchers providing pointers to basic mining techniques to exploit them. Then, an overview of the existing applications of MUD in software engineering is provided with a specific focus on textual data present in software repositories and code components. The paper also discusses perils the ""miner"" should avoid while mining unstructured data and lists possible future trends for the field.",Data mining; future trends; Matrix decomposition; mining unstructured data; Multiuser detection; Natural language processing; Pattern matching; Software; Software engineering,Mining Unstructured Data in Software Repositories: Current and Future Trends,x,,,,,,,,,,NO,
S1049,2,bkwd,book,2003,"Bass, Len; Clements, Paul; Kazman, Rick",,,,"This award-winning book, substantially updated to reflect the latest developments in the field, introduces the concepts and best practices of software architecture--how a software system is structured and how that system's elements are meant to interact. Distinct from the details of implementation, algorithm, and data representation, an architecture holds the key to achieving system quality, is a reusable asset that can be applied to subsequent systems, and is crucial to a software organization's business strategy.  Drawing on their own extensive experience, the authors cover the essential technical topics for designing, specifying, and validating a system. They also emphasize the importance of the business context in which large systems are designed. Their aim is to present software architecture in a real-world setting, reflecting both the opportunities and constraints that companies encounter. To that end, case studies that describe successful architectures illustrate key points of both technical and organizational discussions.  Topics new to this edition include:  Architecture design and analysis, including the Architecture Tradeoff Analysis Method (ATAM)  Capturing quality requirements and achieving them through quality scenarios and tactics  Using architecture reconstruction to recover undocumented architectures  Documenting architectures using the Unified Modeling Language (UML) New case studies, including Web-based examples and a wireless Enterprise JavaBeans™ (EJB) system designed to support wearable computers The financial aspects of architectures, including use of the Cost Benefit Analysis Method (CBAM) to make decisions   If you design, develop, or manage the building of large software systems (or plan to do so), or if you are interested in acquiring such systems for your corporation or government agency, use  Software Architecture in Practice, Second Edition,  to get up to speed on the current state of software architecture.",Computers / Software Development & Engineering / General,Software Architecture in Practice,x,,,,,,,,,,NO,
S1048,2,bkwd,journalArticle,1988,"Basili, V.R.; Rombach, H.D.",IEEE Transactions on Software Engineering,10.1109/32.6156,,"Experience from a dozen years of analyzing software engineering processes and products is summarized as a set of software engineering and measurement principles that argue for software engineering process models that integrate sound planning and analysis into the construction process. In the TAME (Tailoring A Measurement Environment) project at the University of Maryland, such an improvement-oriented software engineering process model was developed that uses the goal/question/metric paradigm to integrate the constructive and analytic aspects of software development. The model provides a mechanism for formalizing the characterization and planning tasks, controlling and improving projects based on quantitative analysis, learning in a deeper and more systematic way about the software process and product, and feeding the appropriate experience back into the current and future projects. The TAME system is an instantiation of the TAME software engineering process model as an ISEE (integrated software engineering environment). The first in a series of TAME system prototypes has been developed. An assessment of experience with this first limited prototype is presented including a reassessment of its initial architecture.<>",Computer architecture; Computer science; NASA; Personnel; Process planning; Programming; Prototypes; Software engineering; Software measurement; Software prototyping,The TAME project: towards improvement-oriented software environments,x,,,,,,,,,,NO,
S1047,2,bkwd,journalArticle,2018,"Banerjee, Abhijeet; Chong, Lee Kee; Ballabriga, Clément; Roychoudhury, Abhik",IEEE Transactions on Software Engineering,10.1109/TSE.2017.2689012,,"Increased usage of mobile devices, such as smartphones and tablets, has led to widespread popularity and usage of mobile apps. If not carefully developed, such apps may demonstrate energy-inefficient behaviour, where one or more energy-intensive hardware components (such as Wifi, GPS, etc) are left in a high-power state, even when no apps are using these components. We refer to such kind of energy-inefficiencies as energy bugs. Executing an app with an energy bug causes the mobile device to exhibit poor energy consumption behaviour and a drastically shortened battery life. Since mobiles apps can have huge input domains, therefore exhaustive exploration is often impractical. We believe that there is a need for a framework that can systematically detect and fix energy bugs in mobile apps in a scalable fashion. To address this need, we have developed EnergyPatch, a framework that uses a combination of static and dynamic analysis techniques to detect, validate and repair energy bugs in Android apps. The use of a light-weight, static analysis technique enables EnergyPatch to quickly narrow down to the potential program paths along which energy bugs may occur. Subsequent exploration of these potentially buggy program paths using a dynamic analysis technique helps in validations of the reported bugs and to generate test cases. Finally, EnergyPatch generates repair expressions to fix the validated energy bugs. Evaluation with real-life apps from repositories such as F-droid and Github, shows that EnergyPatch is scalable and can produce results in reasonable amount of time. Additionally, we observed that the repair expressions generated by EnergyPatch could bring down the energy consumption on tested apps up to 60 percent.",Androids; Batteries; Computer bugs; energy bugs; Energy consumption; energy-aware test generation; Humanoid robots; Maintenance engineering; Mobile apps; Mobile handsets; non-functional testing,EnergyPatch: Repairing Resource Leaks to Improve Energy-Efficiency of Android Apps,x,,,x,,,,,,,NO,
S1046,2,bkwd,journalArticle,2021,"Albonico, Michel; Malavolta, Ivano; Pinto, Gustavo; Guzman, Emitza; Chinnappan, Katerina; Lago, Patricia",arXiv:2103.13762 [cs],,http://arxiv.org/abs/2103.13762,"Robots are becoming more and more commonplace in many industry settings. This successful adoption can be partly attributed to (1) their increasingly affordable cost and (2) the possibility of developing intelligent, software-driven robots. Unfortunately, robotics software consumes significant amounts of energy. Moreover, robots are often battery-driven, meaning that even a small energy improvement can help reduce its energy footprint and increase its autonomy and user experience. In this paper, we study the Robot Operating System (ROS) ecosystem, the de-facto standard for developing and prototyping robotics software. We analyze 527 energy-related data points (including commits, pull-requests, and issues on ROS-related repositories, ROS-related questions on StackOverflow, ROS Discourse, ROS Answers, and the official ROS Wiki). Our results include a quantification of the interest of roboticists on software energy efficiency, 10 recurrent causes, and 14 solutions of energy-related issues, and their implied trade-offs with respect to other quality attributes. Those contributions support roboticists and researchers towards having energy-efficient software in future robotics projects.",Computer Science - Robotics; Computer Science - Software Engineering,Mining Energy-Related Practices in Robotics Software,,,,x,,,,,x,,NO,
S1045,2,bkwd,journalArticle,2019,"Ardito, Luca; Coppola, Riccardo; Morisio, Maurizio; Torchiano, Marco",Scientific Programming,10.1155/2019/5284645,https://www.hindawi.com/journals/sp/2019/5284645/,"Energy consumption information for devices, as available in the literature, is typically obtained with ad hoc approaches, thus making replication and consumption data comparison difficult. We propose a process for measuring the energy consumption of a software application. The process contains four phases, each providing a structured deliverable that reports the information required to replicate the measurement. The process also guides the researcher on a threat to validity analysis to be included in each deliverable. This analysis ensures better reliability, trust, and confidence to reuse the collected consumption data. Such a process produces a structured consumption data for any kind of electronic device (IoT devices, mobile phones, personal computers, servers, etc.), which can be published and shared with other researchers fostering comparison or further investigations. A real case example demonstrates how to apply the process and how to create the required deliverables.",,Methodological Guidelines for Measuring Energy Consumption of Software Applications,x,,,x,,,,,,,NO,
S1044,2,bkwd,webpage,,,Physics Stack Exchange,,https://physics.stackexchange.com/questions/46113/why-is-an-electric-motor-more-efficient-at-higher-loads,,,classical mechanics - Why is an electric motor more efficient at higher loads?,x,,,x,,,,,,,NO,
S1043,2,bkwd,webpage,,,,,http://wiki.ros.org/turtlebot3_bringup,,,turtlebot3_bringup - ROS Wiki,,,,,x,,,,,,NO,
S1042,2,bkwd,webpage,,,,,https://www.ieee-ras.org/technical-committees/146-technical-committees/software-engineering-for-robotics-and-automation,"Technical Committees (TC) focus on the research content of the IEEE Robotics & Automation Society by tracking technical developments and encouraging innovation in: applications, theory, models, metrics, experiments, architectures, products, initiatives, and other technical areas.",,TC Software Engineering for Robotics and Automation - IEEE Robotics and Automation Society,x,,,,,,,,,,NO,
S1041,2,bkwd,journalArticle,2002,"M. Arden, Wolfgang",Current Opinion in Solid State and Materials Science,10.1016/S1359-0286(02)00116-X,https://www.sciencedirect.com/science/article/pii/S135902860200116X,"The paper will give an overview on the structure and the contents of the International Technology Roadmap for Semiconductors (ITRS), with special emphasis on the ‘ITRS 2001’ edition. The scope of the ITRS covers the next 15 years. The outlook in semiconductor manufacturing expects the continuous application of silicon technology where CMOS based devices will carry the development of the industry at least for one more decade. New device architectures and concepts based on silicon wafer material are being developed to support the development of the IC industry for another one or two decades. The paper will highlight the key issues of future requirements on semiconductor structures and processes for manufacturing technologies on silicon. These will cover material aspects for front end processing, interconnect, lithography, and new devices.",,The International Technology Roadmap for Semiconductors—Perspectives and challenges for the next 15 years,x,,,,,,,,,,NO,
S1039,2,bkwd,conferencePaper,2018,"Witte, Thomas; Tichy, Matthias",2018 IEEE/ACM 1st International Workshop on Robotics Software Engineering (RoSE),,,"Context: The software architecture of complex robot systems is usually divided into components. The software is then the configuration and combination of those components and their connectors. Objective: In the Robot Operating System (ROS), this architectural configuration, the ROS node graph, is partly defined in code and created at run-time. The static information about the architecture in the configuration is limited and checking the consistency at development time is not possible. The full software has to be manually executed to check the consistency and debug configuration errors. Method: We propose an approach and a corresponding tool to analyze ROS nodes and their launch files to check consistency and issue warnings if potential problems are detected. The approach uses both static analysis of the launch files as well as dynamic analysis of individual ROS nodes to reconstruct the node graph without executing the whole launch configuration. The nodes are executed in a sandbox to prevent side effects and enable the integration of the analysis tool, e.g., into automated testing systems. Results: The evaluation on internal and publicly available ROS projects shows that we are able to reconstruct the complete architecture of the system if the nodes implement a common lifecycle. Conclusion: The approach enables ROS developers to avoid creating incompatible architectures and check consistency already at development time. The approach can be extended to also monitor architectural consistency at run time.",Computer architecture; Testing; dynamic analysis; Software architecture; Prototypes; Tools; Peer-to-peer computing; Robots; ROS; roslaunch; software architecture description,Checking Consistency of Robot Software Architectures in ROS,,,,,,,,,x,,NO,
S1038,2,bkwd,book,2012,"Wohlin, Claes; Runeson, Per; Höst, Martin; Ohlsson, Magnus C.; Regnell, Björn; Wesslén, Anders",,,,"Like other sciences and engineering disciplines, software engineering requires a cycle of model building, experimentation, and learning. Experiments are valuable tools for all software engineers who are involved in evaluating and choosing between different methods, techniques, languages and tools. The purpose of Experimentation in Software Engineering is to introduce students, teachers, researchers, and practitioners to empirical studies in software engineering, using controlled experiments. The introduction to experimentation is provided through a process perspective, and the focus is on the steps that we have to go through to perform an experiment. The book is divided into three parts. The first part provides a background of theories and methods used in experimentation. Part II then devotes one chapter to each of the five experiment steps: scoping, planning, execution, analysis, and result presentation. Part III completes the presentation with two examples. Assignments and statistical material are provided in appendixes. Overall the book provides indispensable information regarding empirical studies in particular for experiments, but also for case studies, systematic literature reviews, and surveys. It is a revision of the authors’ book, which was published in 2000. In addition, substantial new material, e.g. concerning systematic literature reviews and case study research, is introduced. The book is self-contained and it is suitable as a course book in undergraduate or graduate studies where the need for empirical studies in software engineering is stressed. Exercises and assignments are included to combine the more theoretical material with practical aspects. Researchers will also benefit from the book, learning more about how to conduct empirical studies, and likewise practitioners may use it as a “cookbook” when evaluating new methods or techniques before implementing them in their organization.",Computers / Information Technology; Computers / Software Development & Engineering / General; Social Science / Research; Social Science / Methodology,Experimentation in Software Engineering,x,,,,,,,,,,NO,
S1037,2,bkwd,book,2008,,,,,,,Cambridge Advanced Learner's Dictionary,x,,,,,,,,,,NO,
S1036,2,bkwd,conferencePaper,2013,"van der Ven, Jan Salvador; Bosch, Jan",Software Architecture,10.1007/978-3-642-39031-9_15,,"Software architects are often forced to make design decisions based on limited information. In this paper, we present an approach that allows software architects to study information about design decisions made by hundreds or more software architects by automatically analyzing the version management data of large open-source repositories. The contribution is, first, that it develops a conceptual model to reason about the automatic derivation of specifically medium level architectural design decisions. Second, we show that it is indeed possible to derive these design decisions automatically from open source projects. This provides a basis for statistical and quantitative reasoning about software architecture design decisions that allows software architects to make better-informed decisions.",Architecture; Architectural Knowledge; Components; Design Decisions; Open Source Projects,Making the Right Decision: Supporting Architects with Design Decision Data,x,,,,,,,,,,NO,
S1035,2,bkwd,conferencePaper,2018,"Soliman, Mohamed; Rekaby Salama, Amr; Galster, Matthias; Zimmermann, Olaf; Riebisch, Matthias",2018 IEEE International Conference on Software Architecture (ICSA),10.1109/ICSA.2018.00028,,"To make good architecture design decisions, developers need to know suitable architecture solution alternatives. However, with the rapid and continuous increase of solution alternatives (e.g. technologies, patterns, tactics), it is challenging to acquire architecture knowledge and to ensure that this knowledge is up to date. Our goal is to improve how architects search for architecturally relevant information in online developer communities. We developed a new search approach for architecturally relevant information using Stack Overflow as an example of an online developer community. Our search approach differs from a conventional keyword-based search in that it considers semantic information of architecturally relevant concepts in Stack Overflow. We also implemented the search approach as a web-based search engine. To show the effectiveness of the search approach compared to a conventional keyword-based search, we conducted an experiment with 16 practitioners. To ensure realism of the experiment, tasks given to practitioners are based on real scenarios identified in interviews with a different set of practitioners. The experiment showed that the new search approach outperforms a conventional keyword based search.",Computer architecture; Ontologies; software architecture; Electronic mail; Semantics; Business; Search problems; Stack Overflow; developer communities; Information Retrieval; software architecture knowledge; Text Classification,Improving the Search for Architecture Knowledge in Online Developer Communities,x,,,x,,,,,,,NO,
S1034,2,bkwd,conferencePaper,2019,"Santos, André; Cunha, Alcino; Macedo, Nuno",2019 Third IEEE International Conference on Robotic Computing (IRC),10.1109/IRC.2019.00018,,"The Robot Operating System (ROS) is one of the most popular open source robotic frameworks, and has contributed significantly to the fast development of robotics. Even though ROS provides many ready-made components, a robotic system is inherently complex, in particular regarding the architecture and orchestration of such components. Availability and analysis of a system's architecture at compile time is fundamental to ease comprehension and development of higher-quality software. However, ROS developers have to overcome this complexity relying mostly on testing and runtime visualisers. This work aims to enhance static-time support by proposing, firstly, a metamodel to describe the software architecture of ROS systems (the ROS Computation Graph) and, secondly, model extraction and visualisation tools for such architectural models. The provided tools allow users to specify custom-made queries over these models, enabling the static verification of relevant properties that had to be (manually) checked at runtime before.",Computer architecture; Runtime; Software; Computational modeling; software architecture; software quality; Visualization; static analysis; Tools; robotics; Robots,Static-Time Extraction and Analysis of the ROS Computation Graph,,,,,,,,,x,,NO,
S1033,2,bkwd,conferencePaper,2020,"Malavolta, Ivano; Lewis, Grace; Schmerl, Bradley; Lago, Patricia; Garlan, David",2020 IEEE/ACM 42nd International Conference on Software Engineering: Software Engineering in Practice (ICSE-SEIP),,,"The Robot Operating System (ROS) is the de-facto standard for robotic software. If on one hand ROS is helping roboticists, e.g., by providing a standardized communication platform, on the other hand ROS-based systems are getting larger and more complex and could benefit from good software architecture practices. This paper presents an observational study aimed at (i) unveiling the state-of the-practice for architecting ROS-based systems and (ii) providing guidance to roboticists about how to properly architect ROS-based systems. To achieve these goals, we (i) build a dataset of 335 GitHub repositories containing real open-source ROS-based systems, (ii) mine the repositories for extracting the state of the practice about how roboticists are architecting them, and (iii) synthesize a catalog of 49 evidence-based guidelines for architecting ROS-based systems. The guidelines have been validated by 77 roboticists working on real-world open-source ROS-based systems.",Computer architecture; Data mining; Documentation; Guidelines; Robotics; Open source software; Software Architecture; Robots; Mining Software Repositories; Service robots,How do you Architect your Robots? State of the Practice and Guidelines for ROS-based Systems,,,,,,,,,x,,NO,
S1032,2,bkwd,journalArticle,,"Quigley, Morgan; Gerkey, Brian; Conley, Ken; Faust, Josh; Foote, Tully; Leibs, Jeremy; Berger, Eric; Wheeler, Rob; Ng, Andrew",,,,"This paper gives an overview of ROS, an opensource robot operating system. ROS is not an operating system in the traditional sense of process management and scheduling; rather, it provides a structured communications layer above the host operating systems of a heterogenous compute cluster. In this paper, we discuss how ROS relates to existing robot software frameworks, and brieﬂy overview some of the available application software which uses ROS.",,ROS: an open-source Robot Operating System,,x,,,,,,,,,NO,
S1031,2,bkwd,conferencePaper,2012,"Purandare, Rahul; Darsie, Javier; Elbaum, Sebastian; Dwyer, Matthew B.",2012 IEEE/RSJ International Conference on Intelligent Robots and Systems,10.1109/IROS.2012.6385719,,"Modern robotics systems rely on distributed event-based frameworks to facilitate the assembly of software out of collections of reusable components. These frameworks express component dependencies in data that encode event publish-subscribe relations. This loosely coupled architecture makes it difficult for developers to understand the dependencies and to predict the impacts of a change to a component as the components grow in number and complexity. Moreover, this encoding of dependencies renders traditional techniques for analyzing component dependencies inapplicable, because the dependencies are bound by communication channels rather than data. In this work, we present a program analysis technique that automatically extracts a model of component dependencies from distributed system source code. This model identifies not only the temporal dependencies among components, but also the conditions under which those dependencies are realized. We have implemented the analysis and applied it to systems developed in ROS. The resulting models are succinct and precise, which suggests that programmers will find them comprehensible, and they can be used to document important global dependencies in a system, to compare different versions to identify the impacts of component changes, and to help locate errors.",Computer architecture; Software; Analytical models; Complexity theory; Grammar; Robots; Torso,Extracting conditional component dependence for distributed robotic systems,,,,,,,,,x,,NO,
S1030,2,bkwd,conferencePaper,2019,"Pichler, Marc; Dieber, Bernhard; Pinzger, Martin",2019 Third IEEE International Conference on Robotic Computing (IRC),10.1109/IRC.2019.00020,,"Since its beginnings ten years ago, the Robot Operating System (ROS) has created a huge community of developers and researchers and is now the most widespread open-source framework for robotics development. It is used in research, prototyping but also in commercial products and supports a wide range of robotic platforms, sensors and highlevel data processing functions. While for a research platform, quality of the software developed with it is typically of lower importance, ROS is gradually moving towards industrial applications making software quality a premier topic. In this paper, we want to gain insights on how ROS is used in practice, how high the quality of the ROS packages and applications is, and where potential pitfalls in the use of ROS lie. To achieve this, we have analyzed several thousands of open-source ROS packages found on GitHub and Bitbucket for their quality and their interdependencies. Our results include packages on the rosdistro index and, more importantly, packages that are not. From our results we show common issues in ROS-applications, quality implications, and also which packages of what quality are particularly popular.",software quality; Indexes; Tools; Open source software; Service robots; dependency analysis; repository quality; ros; Software quality,Can I Depend on you? Mapping the Dependency and Quality Landscape of ROS Packages,,,,,,,,,x,,NO,
S1029,2,bkwd,conferencePaper,2014,"Mirakhorli, Mehdi; Fakhry, Ahmed; Grechko, Artem; Wieloch, Matteusz; Cleland-Huang, Jane",Proceedings of the 22nd ACM SIGSOFT International Symposium on Foundations of Software Engineering,10.1145/2635868.2661671,https://doi.org/10.1145/2635868.2661671,"The quality of a software architecture is largely dependent upon the underlying architectural decisions at the framework, tactic, and pattern levels. Decisions to adopt certain solutions determine the extent to which desired qualities such as security, availability, and performance are achieved in the delivered system. In this tool demo, we present our Eclipse plug-in named Archie as a solution for maintaining architectural qualities in the design and code despite long-term maintenance and evolution activities. Archie detects architectural tactics such as heartbeat, resource pooling, and role-based access control (RBAC) in the source code of a project; constructs traceability links between the tactics, design models, rationales and source code; and then uses these to monitor the environment for architecturally significant changes and to keep developers informed of underlying design decisions and their associated rationales.",Degradation; Architecture; Patterns; Tactics,"Archie: a tool for detecting, monitoring, and preserving architecturally significant code",x,,,,,,,,,,NO,
S1028,2,bkwd,conferencePaper,2015,"Mirakhorli, Mehdi; Cleland-Huang, Jane",2015 IEEE/ACM 12th Working Conference on Mining Software Repositories,10.1109/MSR.2015.44,,"Architectural qualities such as reliability, performance, and security, are often realized in a software system through the adoption of tactical design decisions such as the decision to use redundant processes, a heartbeat monitor, or a specific authentication mechanism. Such decisions are critical for delivering a system that meets its quality requirements. Despite the stability of high-level decisions, our analysis has shown that tactic-related classes tend to be modified more frequently than other classes and are therefore stronger predictors of change than traditional Object-Oriented coupling and cohesion metrics. In this paper we present the results from this initial study, including an analysis of why tactic-related classes are changed, and a discussion of the implications of these findings for maintaining architectural quality over the lifetime of a software system.",Software engineering; Software; Computer bugs; Measurement; Complexity theory; Reliability; Heart beat,"Modifications, Tweaks, and Bug Fixes in Architectural Tactics",x,,,,,,,,,,NO,
S1027,2,bkwd,book,2010,"Lidwell, William; Holden, Kritina; Butler, Jill",,,,"Universal Principles of Design, Revised and Updated is a comprehensive, cross-disciplinary encyclopedia covering 125 laws, guidelines, human biases, and general considerations important to successful design. Richly illustrated and easy to navigate, it pairs clear explanations of every design concept with visual examples of the ideas applied in practice. From the 80/20 Rule to the Weakest Link, every major design concept is defined and illustrated. Whether a marketing campaign or a museum exhibit, a video game or a complex control system, the design we see is the culmination of many concepts and practices brought together from a variety of disciplines. Because no one can be an expert on everything, designers have always had to scramble to find the information and know-how required to make a design work—until now. Just a few of the principles that will broaden your design knowledge, promote brainstorming, and help you check the quality of your work:Baby-Face BiasExpectation EffectGolden RationOckham's RazorProximityScaling FallacyThe book is organized alphabetically so that principles can be easily and quickly referenced by name. For those interested in addressing a specific problem of design, the principles havealso been indexed by questions commonly confronting designers (How can I help people learn from my design? How can I enhance the usability of a design? How can I make better design decisions? ...). Each principle is presented in a two-page format. The left-hand page contains a succinct definition, a full description of the principle, examples of its use, and guidelines for use. Side notes appear to the right of the text, and provide elaborations and references. The right-hand page contains visual examples and related graphics to support a deeper understanding of the principle. This landmark reference is the standard for designers, engineers, architects, and students who seek to broaden and improve their design expertise.",Design / Graphic Arts / Commercial & Corporate; Design / Graphic Arts / General; Design / Reference,"Universal Principles of Design, Revised and Updated: 125 Ways to Enhance Usability, Influence Perception, Increase Appeal, Make Better Design Decisions, and Teach Through Design",,,,,x,,,,,,NO,
S1026,2,bkwd,conferencePaper,2018,"Le, Duc Minh; Link, Daniel; Shahbazian, Arman; Medvidovic, Nenad",2018 IEEE International Conference on Software Architecture (ICSA),10.1109/ICSA.2018.00027,,"Architecture is the set of principal design decisions about a software system. In practice, new architectural decisions are added and existing ones reversed or modified throughout a system's lifetime. Frequently, these decisions deviate from the architect's well-considered intent, and software systems regularly exhibit increased architectural decay as they evolve. The manifestations of such ill-considered design decisions are seen as “architectural smells”. To date, there has been no in-depth study of the characteristics or trends involving this phenomenon. Instead, when referring to architectural smells and their negative effects, both researchers and practitioners had to rely on folklore and their personal, inherently limited experience. In this paper, we report on the systematic step we have taken in investigating the nature and impact of architectural smells. We have selected a set of representative architectural smells from literature and analyzed their instances in 421 versions from 8 open-source software systems. We have (1) developed algorithms to automatically detect instances of multiple architectural smell types, and (2) analyzed relationships between the detected smells and the lists of issues reported in the systems' respective issue trackers. Our study shows that architectural smells have tangible negative consequences in the form of implementation issues as well as code commits requiring increased maintenance effort throughout a system's lifetime.",Computer architecture; Software systems; Software architecture; Couplings; Connectors; Architectural-Decay; Architectural-Smells; Detection algorithms; Implementation-Issues; Software-Maintenance,An Empirical Study of Architectural Decay in Open-Source Software,x,,,,,,,,,,NO,
S1025,2,bkwd,conferencePaper,2014,"Kalliamvakou, Eirini; Gousios, Georgios; Blincoe, Kelly; Singer, Leif; German, Daniel M.; Damian, Daniela",Proceedings of the 11th Working Conference on Mining Software Repositories,10.1145/2597073.2597074,https://doi.org/10.1145/2597073.2597074,"With over 10 million git repositories, GitHub is becoming one of the most important source of software artifacts on the Internet. Researchers are starting to mine the information stored in GitHub's event logs, trying to understand how its users employ the site to collaborate on software. However, so far there have been no studies describing the quality and properties of the data available from GitHub. We document the results of an empirical study aimed at understanding the characteristics of the repositories in GitHub and how users take advantage of GitHub's main features---namely commits, pull requests, and issues. Our results indicate that, while GitHub is a rich source of data on software development, mining GitHub for research purposes should take various potential perils into consideration. We show, for example, that the majority of the projects are personal and inactive; that GitHub is also being used for free storage and as a Web hosting service; and that almost 40% of all pull requests do not appear as merged, even though they were. We provide a set of recommendations for software engineering researchers on how to approach the data in GitHub.",Mining software repositories; bias; code reviews; git; github,The promises and perils of mining GitHub,x,,,,,,,,,,NO,
S1024,2,bkwd,conferencePaper,2019,"Jamshidi, Pooyan; Cámara, Javier; Schmerl, Bradley; Käestner, Christian; Garlan, David",2019 IEEE/ACM 14th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS),10.1109/SEAMS.2019.00015,,"Modern cyber-physical systems (e.g., robotics systems) are typically composed of physical and software components, the characteristics of which are likely to change over time. Assumptions about parts of the system made at design time may not hold at run time, especially when a system is deployed for long periods (e.g., over decades). Self-adaptation is designed to find reconfigurations of systems to handle such run-time inconsistencies. Planners can be used to find and enact optimal reconfigurations in such an evolving context. However, for systems that are highly configurable, such planning becomes intractable due to the size of the adaptation space. To overcome this challenge, in this paper we explore an approach that (a) uses machine learning to find Pareto-optimal configurations without needing to explore every configuration and (b) restricts the search space to such configurations to make planning tractable. We explore this in the context of robot missions that need to consider task timeliness and energy consumption. An independent evaluation shows that our approach results in high-quality adaptation plans in uncertain and adversarial environments.","Software; Machine learning; Adaptation models; Energy consumption; Robot sensing systems; Planning; Machine learning, artificial intelligence, quantitative planning, self-adaptive systems, robotics systems",Machine Learning Meets Quantitative Planning: Enabling Self-Adaptation in Autonomous Robots,x,,,,,,,,,,NO,
S1023,2,bkwd,conferencePaper,2019,"Ingrand, Felix",2019 Third IEEE International Conference on Robotic Computing (IRC),10.1109/IRC.2019.00059,,"The consequences of autonomous systems software failures can be potentially dramatic. There is no need to darken the picture, but still, it seems unlikely that people, insurance companies and certification agencies will let autonomous systems fly or drive around without requiring their makers and programmers to prove that the most critical parts of the software are robust and reliable. This is already the case for aeronautic, rail transportation, nuclear plants, medical devices, etc. were software must be certified, which possibly involve its formal validation and verification (V&V). Moreover, autonomous systems go further and embed onboard deliberation functions. This is what make them really autonomous, but open new challenges. We propose to consider the overall problem of V&V of autonomous systems software and examine the current situation with respect to the various type of software used. In particular, we point out that the availability of formal models is rather different depending on the type of component considered. We distinguish these different cases and stress the areas where we think we need to focus our efforts as to improve the overall robustness of autonomous systems.",Task analysis; Software; Mathematical model; formal methods; Automobiles; Robots; Safety; autonomous robots; Autonomous systems; robotics software; validation and verification,Recent Trends in Formal Validation and Verification of Autonomous Robots Software,x,,,,,,,,,,NO,
S1022,2,bkwd,conferencePaper,2017,"Hofmeister, Johannes; Siegmund, Janet; Holt, Daniel V.","2017 IEEE 24th International Conference on Software Analysis, Evolution and Reengineering (SANER)",10.1109/SANER.2017.7884623,,"Developers spend the majority of their time comprehending code, a process in which identifier names play a key role. Although many identifier naming styles exist, they often lack an empirical basis and it is not quite clear whether short or long identifier names facilitate comprehension. In this paper, we investigate the effect of different identifier naming styles (letters, abbreviations, words) on program comprehension, and whether these effects arise because of their length or their semantics. We conducted an experimental study with 72 professional C# developers, who looked for defects in source-code snippets. We used a within-subjects design, such that each developer saw all three versions of identifier naming styles and we measured the time it took them to find a defect. We found that words lead to, on average, 19% faster comprehension speed compared to letters and abbreviations, but we did not find a significant difference in speed between letters and abbreviations. The results of our study suggest that defects in code are more difficult to detect when code contains only letters and abbreviations. Words as identifier names facilitate program comprehension and can help to save costs and improve software quality.",Syntactics; Context; Semantics; Time measurement; Psychology; Software quality; C# languages,Shorter identifier names take longer to comprehend,x,,,,,,,,,,NO,
S1021,2,bkwd,journalArticle,2018,"Harrison, William; Downs, Anthony; Schlenoff, Craig",AI Magazine,10.1609/aimag.v39i4.2795,https://ojs.aaai.org/index.php/aimagazine/article/view/2795,"The Agile Robotics for Industrial Automation Competition (ARIAC) is an annual simulation-based competition initiated in 2017. The competition challenges teams to design industrial robotic system control code to function in a dynamic environment. Each team’s system is faced with challenges such as dropped parts, and must address these challenges and continue to function without operator intervention.",,The Agile Robotics for Industrial Automation Competition,x,,,,,,,,,,NO,
S1020,2,bkwd,conferencePaper,2017,"Halder, Raju; Proença, José; Macedo, Nuno; Santos, André",2017 IEEE/ACM 5th International FME Workshop on Formal Methods in Software Engineering (FormaliSE),10.1109/FormaliSE.2017.9,,"Robotic technologies are continuously transforming the domestic and the industrial environments. Recently the Robotic Operating System (ROS), has been widely adopted both by industry and academia, becoming one of the most popular middleware frameworks for developing robot applications. Guaranteeing the correct behaviour of robotic systems is, however, challenging due to their potential for parameterization and heterogeneity. Although different approaches exist, focusing on concrete domain spaces for specific scenarios, no general approach to reason about ROS systems has yet arisen. This paper proposes an approach to model and verify ROS systems using real time properties, focusing on one of the main features of ROS, the communication between nodes. It takes low-level parameters into account, such as queue sizes and timeouts, and uses timed automata as the modelling language. The robot Kobuki is used as a complex case study, over which properties are automatically verified using the UPPAAL model checker, enabling the identification of problematic parameter combinations.",Monitoring; Clocks; Automata; Peer-to-peer computing; Service robots; Safety,Formal Verification of ROS-Based Robotic Applications Using Timed-Automata,,,,,,,,,x,,NO,
S1019,2,bkwd,conferencePaper,2013,"Gousios, Georgios",2013 10th Working Conference on Mining Software Repositories (MSR),10.1109/MSR.2013.6624034,,"During the last few years, GitHub has emerged as a popular project hosting, mirroring and collaboration platform. GitHub provides an extensive REST API, which enables researchers to retrieve high-quality, interconnected data. The GHTorent project has been collecting data for all public projects available on Github for more than a year. In this paper, we present the dataset details and construction process and outline the challenges and research opportunities emerging from it.",Software engineering; Databases; Organizations; Data mining; History; Collaboration; Data collection; dataset; GitHub; repository,The GHTorent dataset and tool suite,x,,,,,,,,,,NO,
S1018,2,bkwd,conferencePaper,2020,"Malavolta, Ivano; Lewis, Grace; Schmerl, Bradley; Lago, Patricia; Garlan, David",2020 IEEE/ACM 42nd International Conference on Software Engineering: Software Engineering in Practice (ICSE-SEIP),,,"The Robot Operating System (ROS) is the de-facto standard for robotic software. If on one hand ROS is helping roboticists, e.g., by providing a standardized communication platform, on the other hand ROS-based systems are getting larger and more complex and could benefit from good software architecture practices. This paper presents an observational study aimed at (i) unveiling the state-of the-practice for architecting ROS-based systems and (ii) providing guidance to roboticists about how to properly architect ROS-based systems. To achieve these goals, we (i) build a dataset of 335 GitHub repositories containing real open-source ROS-based systems, (ii) mine the repositories for extracting the state of the practice about how roboticists are architecting them, and (iii) synthesize a catalog of 49 evidence-based guidelines for architecting ROS-based systems. The guidelines have been validated by 77 roboticists working on real-world open-source ROS-based systems.",Computer architecture; Data mining; Documentation; Guidelines; Robotics; Open source software; Software Architecture; Robots; Mining Software Repositories; Service robots,How do you Architect your Robots? State of the Practice and Guidelines for ROS-based Systems,,,,x,,,,,x,,NO,
S1017,2,bkwd,journalArticle,2019,"Estefo, Pablo; Simmonds, Jocelyn; Robbes, Romain; Fabry, Johan",Journal of Systems and Software,10.1016/j.jss.2019.02.024,https://www.sciencedirect.com/science/article/pii/S0164121219300342,"ROS, the Robot Operating System, offers a core set of software for operating robots that can be extended by creating or using existing packages, making it possible to write robotic software that can be reused on different hardware platforms. With thousands of packages available per stable distribution, encapsulating algorithms, sensor drivers, etc., it is the de facto middleware for robotics. Like any software ecosystem, ROS must evolve in order to keep meeting the requirements of its users. In practice, packages may end up being abandoned between releases: no one may be available to update a package, or newer packages offer similar functionality. As such, we wanted to identify and understand the evolution challenges faced by the ROS ecosystem. In this article, we report our findings after interviewing 19 ROS developers in depth, followed by a focus group (4 participants) and an online survey of 119 ROS community members. We specifically focused on the issues surrounding package reuse and how to contribute to existing packages. To conclude, we discuss the implications of our findings, and propose five recommendations for overcoming the identified issues, with the goal of improving the health of the ROS ecosystem.",Robot Operating System; Package management; Software ecosystems,The Robot Operating System: Package reuse and community dynamics,,,,,,,,,x,,NO,
S1016,2,bkwd,conferencePaper,2015,"Curran, William; Thornton, Thomas; Arvey, Benjamin; Smart, William D.",2015 IEEE International Conference on Robotics and Automation (ICRA),10.1109/ICRA.2015.7140071,,"The ROS ecosystem is an interconnected web of packages, nodes and people with no efficient means to compare, assess or visualize them. We develop a set of tools consisting of various metrics, a data visualization web app, and an active monitoring system. With these tools, we measure the current state of the ecosystem as well as determine where the community should direct their efforts. We also encourage the community to provide input on potential applications, additional metrics, and further improvements to address the needs of the ROS ecosystem. We incentivize this input by gamifying community contributions to the infrastructure. Encouraging user-driven improvements to the ROS infrastructure through the use of a leaderboard and friendly competition will advance ROS development and community support far into the future.",Measurement; Ecosystems; Communities; Peer-to-peer computing; Open source software; Robots,Evaluating impact in the ROS ecosystem,,,,,,,,x,,,NO,
S1015,2,bkwd,journalArticle,,"Collett, Toby H J; MacDonald, Bruce A; Gerkey, Brian",,,,Player/Stage has become a de facto standard in the open source robotics community. We describe recent work on restructuring the Player robot device server into a system that more closely aligns with the idea of a robot framework. The general requirements for a robot framework are also discussed.,,Player 2.0: Toward a Practical Robot Programming Framework,x,,,,,,,,,,NO,
S1014,2,bkwd,conferencePaper,2011,"Cruzes, Daniela S.; Dyba, Tore",2011 International Symposium on Empirical Software Engineering and Measurement,10.1109/ESEM.2011.36,,"Thematic analysis is an approach that is often used for identifying, analyzing, and reporting patterns (themes) within data in primary qualitative research. 'Thematic synthesis' draws on the principles of thematic analysis and identifies the recurring themes or issues from multiple studies, interprets and explains these themes, and draws conclusions in systematic reviews. This paper conceptualizes the thematic synthesis approach in software engineering as a scientific inquiry involving five steps that parallel those of primary research. The process and outcome associated with each step are described and illustrated with examples from systematic reviews in software engineering.",Software engineering; Organizations; Software; systematic review; Data mining; Context; Encoding; Systematics; evidence-based and empirical software engineering; research synthesis; secondary research,Recommended Steps for Thematic Synthesis in Software Engineering,x,,,x,,,,,,,NO,
S1013,2,bkwd,journalArticle,2012,"Langer, Maria; Beighley, Lynn",Operating Systems,,,,,Master the newest version of OS X quickly with the task-based OS X Mountain Lion: Visual QuickStart Guide,x,,,,,,,,,,NO,
S1012,2,bkwd,journalArticle,2012,"Langer, Maria; Beighley, Lynn",Operating Systems,,,,,Master the newest version of OS X quickly with the task-based OS X Mountain Lion: Visual QuickStart Guide,x,,,,,,,,,,NO,
S1011,2,bkwd,conferencePaper,2003,"Clements, P.; Garlan, D.; Little, R.; Nord, R.; Stafford, J.","25th International Conference on Software Engineering, 2003. Proceedings.",10.1109/ICSE.2003.1201264,,"This lecture maps the concepts and templates explored in this tutorial with well-known architectural prescriptions, including the 4+1 approach of the Rational Unified Process, the Siemens Four Views approach, and the ANSI/IEEE-1471-2000 recommended best practice for documenting architectures for software-intensive systems. The lecture concludes by re-capping the highlights of the tutorial, and asking for feedback.",Computer architecture; Software engineering; Programming; Pattern recognition; Computer science; Documentation; Software architecture; Robustness; Design engineering; Machine vision,Documenting software architectures: views and beyond,x,,,,,,,,,,NO,
S1010,2,bkwd,conferencePaper,2017,"Ciccozzi, Federico; Di Ruscio, Davide; Malavolta, Ivano; Pelliccione, Patrizio; Tumova, Jana",2017 IEEE/ACM 39th International Conference on Software Engineering Companion (ICSE-C),10.1109/ICSE-C.2017.167,,"The production of software for robotic systems is often case-specific, without fully following established engineering approaches. Systematic approaches, methods, models, and tools are pivotal for the creation of robotic systems for real-world applications and turn-key solutions. Well-defined (software) engineering approaches are considered the ""make or break"" factor in the development of complex robotic systems. The shift towards well-defined engineering approaches will stimulate component supply-chains and significantly reshape the robotics marketplace. The goal of this technical briefing is to provide an overview on the state of the art and practice concerning solutions and open challenges in the engineering of software required to develop and manage robotic systems. Model-Driven Engineering (MDE) is discussed as a promising technology to raise the level of abstraction, promote reuse, facilitate integration, boost automation and promote early analysis in such a complex domain.",Software engineering; Software Engineering; Automation; Robotics; Robot sensing systems; Systematics; Model-Driven Engineering; Model driven engineering,Engineering the software of robotic systems,x,,,,,,,,,,NO,
S1009,2,bkwd,conferencePaper,2010,"Butler, Simon; Wermelinger, Michel; Yu, Yijun; Sharp, Helen",2010 14th European Conference on Software Maintenance and Reengineering,10.1109/CSMR.2010.27,,"Given the importance of identifier names and the value of naming conventions to program comprehension, we speculated in previous work whether a connection exists between the quality of identifier names and software quality. We found that flawed identifiers in Java classes were associated with source code found to be of low quality by static analysis. This paper extends that work in three directions. First, we show that the association also holds at the finer granularity level of Java methods. This in turn makes it possible to, secondly, apply existing method-level quality and readability metrics, and see that flawed identifiers still impact on this richer notion of code quality and comprehension. Third, we check whether the association can be used in a practical way. We adopt techniques used to evaluate medical diagnostic tests in order to identify which particular identifier naming flaws could be used as a light-weight diagnostic of potentially problematic Java source code for maintenance.",Java; software metrics; Complexity theory; software quality; Dictionaries; Guidelines; Sensitivity; programming; Readability metrics,Exploring the Influence of Identifier Names on Code Quality: An Empirical Study,x,,,,,,,,,,NO,
S1007,2,bkwd,bookSection,2007,"Brooks, Alex; Kaupp, Tobias; Makarenko, Alexei; Williams, Stefan; Orebäck, Anders",Software Engineering for Experimental Robotics,,https://doi.org/10.1007/978-3-540-68951-5_13,SummaryThis Chapter describes Orca: an open-source project which applies Component-Based Software Engineering principles to robotics. It provides the means for defining and implementing interfaces such that components developed independently are likely to be inter-operable. In addition it provides a repository of free re-useable components. Orca attempts to be widely applicable by imposing minimal design constraints. This Chapter describes lessons learned while using Orca and steps taken to improve the framework based on those lessons. Improvements revolve around middleware issues and the problems encountered while scaling to larger distributed systems. Results are presented from systems that were implemented.,,Orca: A Component Model and Repository,x,,,,,,,,,,NO,
S1006,2,bkwd,conferencePaper,2017,"Bhat, Manoj; Shumaiev, Klym; Biesdorf, Andreas; Hohenstein, Uwe; Matthes, Florian",Software Architecture,10.1007/978-3-319-65831-5_10,,"The need to explicitly document design decisions has been emphasized both in research and in industry. To address design concerns, software architects and developers implicitly capture design decisions in tools such as issue management systems. These design decisions are not explicitly labeled and are not integrated with the architecture knowledge management tools. Automatically extracting design decisions will aid architectural knowledge management tools to learn from the past decisions and to guide architects while making decisions in similar context. In this paper, we propose a two-phase supervised machine learning based approach to first, automatically detect design decisions from issues and second, to automatically classify the identified design decisions into different decision categories. We have manually analyzed and labeled more than 1,500 issues from two large open source repositories and have used this dataset for generating the machine learning models. We have made the dataset publicly available that will serve as a starting point for researchers to further reference and investigate the design decision detection and classification problem. Our evaluation shows that by using linear support vector machines, we can detect design decisions with 91.29% accuracy and classify them with an accuracy of 82.79%. This provides a quantitative basis for learning from past design decisions to support stakeholders in making better and informed design decisions.",Machine learning; Software architecture; Design decisions,Automatic Extraction of Design Decisions from Issue Management Systems: A Machine Learning Based Approach,x,,,,,,,,,,NO,
S1005,2,bkwd,conferencePaper,2018,"Alkadhi, Rana; Nonnenmacher, Manuel; Guzman, Emitza; Bruegge, Bernd","2018 IEEE 25th International Conference on Software Analysis, Evolution and Reengineering (SANER)",10.1109/SANER.2018.8330223,,"Developers make various decisions during software development. The rationale behind these decisions is of great importance during software evolution of long living software systems. However, current practices for documenting rationale often fall short and rationale remains hidden in the heads of developers or embedded in development artifacts. Further challenges are faced for capturing rationale in OSS projects; in which developers are geographically distributed and rely mostly on written communication channels to support and coordinate their activities. In this paper, we present an empirical study to understand how OSS developers discuss rationale in IRC channels and explore the possibility of automatic extraction of rationale elements by analyzing IRC messages of development teams. To achieve this, we manually analyzed 7,500 messages of three large OSS projects and identified all fine-grained elements of rationale. We evaluated various machine learning algorithms for automatically detecting and classifying rationale in IRC messages. Our results show that 1) rationale is discussed on average in 25% of IRC messages, 2) code committers contributed on average 54% of the discussed rationale, and 3) machine learning algorithms can detect rationale with 0.76 precision and 0.79 recall, and classify messages into finer-grained rationale elements with an average of 0.45 precision and 0.43 recall.",Software systems; Documentation; History; Data collection; Machine learning algorithms; Taxonomy,How do developers discuss rationale?,x,,,,,,,,,,NO,
S1004,2,bkwd,journalArticle,2019,"Aldrich, Jonathan; Garlan, David; Kaestner, Christian; Le Goues, Claire; Mohseni-Kabir, Anahita; Ruchkin, Ivan; Samuel, Selva; Schmerl, Bradley; Timperley, Christopher Steven; Veloso, Manuela; Voysey, Ian; Biswas, Joydeep; Guha, Arjun; Holtz, Jarrett; Camara, Javier; Jamshidi, Pooyan",IEEE Software,10.1109/MS.2018.2885058,,"We developed model-based adaptation, an approach that leverages models of software and its environment to enable automated adaptation. The goal of our approach is to build long-lasting software systems that can effectively adapt to changes in their environment.",Task analysis; Adaptation models; Biological system modeling; Software development; Robot sensing systems; Robots,Model-Based Adaptation for Robotics Software,x,,,,,,,,,,NO,
S1003,2,bkwd,bookSection,2018,"Ben-Ari, Mordechai; Mondada, Francesco",Elements of Robotics,,https://doi.org/10.1007/978-3-319-62533-1_5,"The focus in this book is on mobile robots that move on a surface. When the robot moves for a period of time its new position can be determined by odometry: integrating the velocity of the robot over the period of its motion to obtain distance or integrating the acceleration to get velocity and integrating again to obtain distance. If the robot changes its heading as it moves, trigonometry is needed to compute the new position. Odometry is subject to errors caused by uncertainty in the components of the robot and unevenness of the surface. Wheel encoders enable more accurate odometry. Inertial navigation systems perform odometry based on accurate measurement of linear and angular acceleration. The degrees of freedom (DOF) of a system is the number dimensions through which it can move. The number of actuators of the robot can be more or less than the DOF. The DOF can be different from the degrees of mobility (DOM), which are the DOF that can be directly accessed. The concept of holonomic motion relates the DOF and the DOM.",Mobile Robot; Inertial Navigation System (INS); Odometry; Swedish Wheels; Wheel Encoders,Robotic Motion and Odometry,x,,,,,,,,,,NO,
S1002,2,bkwd,conferencePaper,2018,"Okumuş, Fatih; Kocamaz, Adnan Fatih",2018 International Conference on Artificial Intelligence and Data Processing (IDAP),10.1109/IDAP.2018.8620785,,"The use of mobile robots in industrial applications is increasing day by day. As a result of this increase, efficiency in the use of mobile robots has also become important. In particular, path planning is a significant area of research to improve efficiency in mobile robot navigation. In path planning, it is aimed to find optimum and obstacle free paths to the starting and ending points to fulfill multiple tasks. In this paper, A *, D * and PSO algorithms, frequently used to optimize the path multiple robots reach targets in an environment with obstacles, have been compared. In addition, a mobile robot simulation software has been developed to measure the performance of algorithms. At the end of the study, the performance of the algorithms was showed by measuring the path lengths and the process time of algorithms.",Software; Software algorithms; Heuristic algorithms; Navigation; navigation; Mobile robots; Path planning; path planning; obstacle avoidance,Comparing Path Planning Algorithms for Multiple Mobile Robots,x,,,x,,,,,,,NO,
S1001,2,bkwd,journalArticle,2019,"Estefo, Pablo; Simmonds, Jocelyn; Robbes, Romain; Fabry, Johan",Journal of Systems and Software,10.1016/j.jss.2019.02.024,https://www.sciencedirect.com/science/article/pii/S0164121219300342,"ROS, the Robot Operating System, offers a core set of software for operating robots that can be extended by creating or using existing packages, making it possible to write robotic software that can be reused on different hardware platforms. With thousands of packages available per stable distribution, encapsulating algorithms, sensor drivers, etc., it is the de facto middleware for robotics. Like any software ecosystem, ROS must evolve in order to keep meeting the requirements of its users. In practice, packages may end up being abandoned between releases: no one may be available to update a package, or newer packages offer similar functionality. As such, we wanted to identify and understand the evolution challenges faced by the ROS ecosystem. In this article, we report our findings after interviewing 19 ROS developers in depth, followed by a focus group (4 participants) and an online survey of 119 ROS community members. We specifically focused on the issues surrounding package reuse and how to contribute to existing packages. To conclude, we discuss the implications of our findings, and propose five recommendations for overcoming the identified issues, with the goal of improving the health of the ROS ecosystem.",Robot Operating System; Package management; Software ecosystems,The Robot Operating System: Package reuse and community dynamics,,,,,,,,,x,,NO,
S1000,2,bkwd,conferencePaper,2018,"Gao, Qian; Cheng, Hongtai",2018 IEEE International Conference on Robotics and Biomimetics (ROBIO),10.1109/ROBIO.2018.8665101,,"Mobile robot cannot work well when dealing with computation-intensive tasks because of its limited onboard computing and storage resources. The cloud robotics technology is able to solve this issue by expanding and offloading the robot's computations and data to the cloud. Most of the cloud robotics frameworks are compatible with ROS to fully utilize its rich packages and tool-sets. However, because of the interfacing and network structure problem, integrating cloud service to existing robot system usually requires much human effort. CloudROS is a cloud robotics framework which completely based on ROS and can be seamlessly integrated to ROS networks. All cloud services are provided as ROS nodes which can join the local robot's ROS network. The non-ROS protocols are masked by ROS service interface. In this paper, a mobile robot is designed to verify the effectiveness of the CloudROS architecture. The robot uses Raspberry Pi 3 as the main controller and microphone, stereo cameras to sense the world. The image processing, mapping building and navigation, human-robot interaction, data storing and remote monitoring functions are all realized through the cloud services. The experiments verify the effectiveness of the CloudROS framework and potentials of such a low-cost mobile robot.",Conferences; Robots; Biomimetics,Design of a CloudROS enabled Mobile Robot,,x,,,,,,,,,NO,
S1298,2,bkwd,journalArticle,2006,"Li, Z.; Lu, S.; Myagmar, S.; Zhou, Y.",IEEE Transactions on Software Engineering,10.1109/TSE.2006.28,,"Recent studies have shown that large software suites contain significant amounts of replicated code. It is assumed that some of this replication is due to copy-and-paste activity and that a significant proportion of bugs in operating systems are due to copy-paste errors. Existing static code analyzers are either not scalable to large software suites or do not perform robustly where replicated code is modified with insertions and deletions. Furthermore, the existing tools do not detect copy-paste related bugs. In this paper, we propose a tool, CP-Miner, that uses data mining techniques to efficiently identify copy-pasted code in large software suites and detects copy-paste bugs. Specifically, it takes less than 20 minutes for CP-Miner to identify 190,000 copy-pasted segments in Linux and 150,000 in FreeBSD. Moreover, CP-Miner has detected many new bugs in popular operating systems, 49 in Linux and 31 in FreeBSD, most of which have since been confirmed by the corresponding developers and have been rectified in the following releases. In addition, we have found some interesting characteristics of copy-paste in operating system code. Specifically, we analyze the distribution of copy-pasted code by size (number lines of code), granularity (basic blocks and functions), and modification within copy-pasted code. We also analyze copy-paste across different modules and various software versions.",Cloning; code duplication; code reuse; Computer bugs; Data mining; data mining.; debugging aids; Kernel; Large-scale systems; Linux; Operating systems; Performance analysis; Programming profession; Software analysis; Software performance,CP-Miner: finding copy-paste and related bugs in large-scale software code,,,,,,,,,,,,
S1295,2,bkwd,journalArticle,2009,"Ducasse, Stéphane; Girba, Tudor; Kuhn, Adrian; Renggli, Lukas",Software & Systems Modeling,10.1007/s10270-008-0081-4,https://doi.org/10.1007/s10270-008-0081-4,"Object-oriented modelling languages such as EMOF are often used to specify domain specific meta-models. However, these modelling languages lack the ability to describe behavior or operational semantics. Several approaches have used a subset of Java mixed with OCL as executable meta-languages. In this experience report we show how we use Smalltalk as an executable meta-language in the context of the Moose reengineering environment. We present how we implemented EMOF and its behavioral aspects. Over the last decade we validated this approach through incrementally building a meta-described reengineering environment. Such an approach bridges the gap between a code-oriented view and a meta-model driven one. It avoids the creation of yet another language and reuses the infrastructure and run-time of the underlying implementation language. It offers an uniform way of letting developers focus on their tasks while at the same time allowing them to meta-describe their domain model. The advantage of our approach is that developers use the same tools and environment they use for their regular tasks. Still the approach is not Smalltalk specific but can be applied to language offering an introspective API such as Ruby, Python, CLOS, Java and C#.",,Meta-environment and executable meta-language using smalltalk: an experience report,,,,,,,,,,,,
S1302,2,bkwd,conferencePaper,2012,"Robbes, Romain; Lungu, Mircea; Röthlisberger, David",Proceedings of the ACM SIGSOFT 20th International Symposium on the Foundations of Software Engineering,10.1145/2393596.2393662,https://doi.org/10.1145/2393596.2393662,"When the Application Programming Interface (API) of a framework or library changes, its clients must be adapted. This change propagation---known as a ripple effect---is a problem that has garnered interest: several approaches have been proposed in the literature to react to these changes. Although studies of ripple effects exist at the single system level, no study has been performed on the actual extent and impact of these API changes in practice, on an entire software ecosystem associated with a community of developers. This paper reports on an empirical study of API deprecations that led to ripple effects across an entire ecosystem. Our case study subject is the development community gravitating around the Squeak and Pharo software ecosystems: seven years of evolution, more than 3,000 contributors, and more than 2,600 distinct systems. We analyzed 577 methods and 186 classes that were deprecated, and answer research questions regarding the frequency, magnitude, duration, adaptation, and consistency of the ripple effects triggered by API changes.",ecosystems; empirical studies; mining software repositories,How do developers react to API deprecation? the case of a smalltalk ecosystem,,,,,,,,,,,,
S1172,2,bkwd,journalArticle,2020,"Wohlrab, Rebekka; Knauss, Eric; Pelliccione, Patrizio",Journal of Systems and Software,10.1016/j.jss.2019.110516,https://www.sciencedirect.com/science/article/pii/S0164121219302900,"In large-scale automotive companies, various requirements engineering (RE) practices are used across teams. RE practices manifest in Requirements Information Models (RIM) that define what concepts and information should be captured for requirements. Collaboration of practitioners from different parts of an organization is required to define a suitable RIM that balances support for diverse practices in individual teams with the alignment needed for a shared view and team support on system level. There exists no guidance for this challenging task. This paper presents a mixed methods study to examine the role of RIMs in balancing alignment and diversity of RE practices in four automotive companies. Our analysis is based on data from systems engineering tools, 11 semi-structured interviews, and a survey to validate findings and suggestions. We found that balancing alignment and diversity of RE practices is important to consider when defining RIMs. We further investigated enablers for this balance and actions that practitioners take to achieve it. From these factors, we derived and evaluated recommendations for managing RIMs in practice that take into account the lifecycle of requirements and allow for diverse practices across sub-disciplines in early development, while enforcing alignment of requirements that are close to release.",Aligning software engineering practices; Automotive software engineering; Large-scale software development; Mixed methods research; Requirements information models,Why and how to balance alignment and diversity of requirements engineering practices in automotive,,,,,,,,,,,,
S1159,2,bkwd,journalArticle,2018,"Raza, Sayyed Jaffar Ali; Gupta, Nitish A.; Chitaliya, Nisarg; Sukthankar, Gita R.",arXiv:1802.10138 [cs],,http://arxiv.org/abs/1802.10138,"This paper presents a practical approach towards implementing pathfinding algorithms on real-world and low-cost non- commercial hardware platforms. While using robotics simulation platforms as a test-bed for our algorithms we easily overlook real- world exogenous problems that are developed by external factors. Such problems involve robot wheel slips, asynchronous motors, abnormal sensory data or unstable power sources. The real-world dynamics tend to be very painful even for executing simple algorithms like a Wavefront planner or A-star search. This paper addresses designing techniques that tend to be robust as well as reusable for any hardware platforms; covering problems like controlling asynchronous drives, odometry offset issues and handling abnormal sensory feedback. The algorithm implementation medium and hardware design tools have been kept general in order to present our work as a serving platform for future researchers and robotics enthusiast working in the field of path planning robotics.",Computer Science - Robotics,Real-World Modeling of a Pathfinding Robot Using Robot Operating System (ROS),,,,,,,x,,,,NO,
S1149,2,bkwd,journalArticle,2016,"Montesi, Fabrizio; Weber, Janine",arXiv:1609.05830 [cs],,http://arxiv.org/abs/1609.05830,"We review some of the most widely used patterns for the programming of microservices: circuit breaker, service discovery, and API gateway. By systematically analysing different deployment strategies for these patterns, we reach new insight especially for the application of circuit breakers. We also evaluate the applicability of Jolie, a language for the programming of microservices, for these patterns and report on other standard frameworks offering similar solutions. Finally, considerations for future developments are presented.","Computer Science - Distributed, Parallel, and Cluster Computing; Computer Science - Software Engineering","Circuit Breakers, Discovery, and API Gateways in Microservices",,,,,,,,,,,,
S1382,2,bkwd,conferencePaper,2017,"Ore, John-Paul; Elbaum, Sebastian; Detweiler, Carrick",2017 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS.2017.8202229,,"This work presents a study of robot software using the Robot Operating System (ROS), focusing on detecting inconsistencies in physical unit manipulation. We discuss how dimensional analysis, the rules governing how physical quantities are combined, can be used to detect inconsistencies in robot software that are otherwise difficult to detect. Using a corpus of ROS software with 5.9M lines of code, we measure the frequency of these dimensional inconsistencies and find them in 6% (211 / 3,484) of repositories that use ROS. We find that the inconsistency type `Assigning multiple units to a variable' accounts for 75% of inconsistencies in ROS code. We identify the ROS classes and physical units most likely to be involved with dimensional inconsistencies, and find that the ROS Message type geometry_msgs::Twist is involved in over half of all inconsistencies and is used by developers in ways contrary to Twist's intent. We further analyze the frequency of physical units used in ROS programs as a proxy for assessing how developers use ROS, and discuss the practical implications of our results including how to detect and avoid these inconsistencies.",C++ languages; Geometry; Libraries; Meters; Robots; Software; Tools,Dimensional inconsistencies in code and ROS messages: A study of 5.9M lines of code,,,,x,,,,,,,NO,
S1150,2,bkwd,conferencePaper,2016,"Moore, Thomas; Stouch, Daniel",Intelligent Autonomous Systems 13,10.1007/978-3-319-08338-4_25,,"Accurate state estimation for a mobile robot often requires the fusion of data from multiple sensors. Software that performs sensor fusion should therefore support the inclusion of a wide array of heterogeneous sensors. This paper presents a software package, robot_localization, for the robot operating system (ROS). The package currently contains an implementation of an extended Kalman filter (EKF). It can support an unlimited number of inputs from multiple sensor types, and allows users to customize which sensor data fields are fused with the current state estimate. In this work, we motivate our design decisions, discuss implementation details, and provide results from real-world tests.",Extended kalman filter; Localization; Robot operating system; Sensor fusion,A Generalized Extended Kalman Filter Implementation for the Robot Operating System,,,,,,,,,,,,
S1053,2,bkwd,journalArticle,2009,"Brugali, Davide; Prassler, Erwin",IEEE Robotics Automation Magazine,10.1109/MRA.2009.932127,,"This special issue on software engineering (SE) for robotics captures a snapshot of current research issues and state-of-the-practice in robotic software development, a topic that has recently received increasing attention from the robotics community, thanks to some popular initiatives such as the Microsoft move into robotics.",Application software; Cognitive robotics; Control systems; Intelligent robots; Programming; Robot sensing systems; Robotics and automation; Software engineering; Software reusability; Software systems,Software engineering for robotics [From the Guest Editors],,,,,,,,,,,,
S1040,2,bkwd,webpage,,,,,https://www.therobotreport.com/top-10-ros-based-robotics-companies-2019/,,,Top 10 ROS-based robotics companies to know in 2019,,,,x,,,,,,,NO,
S1008,2,bkwd,journalArticle,2009,"Brugali, Davide; Prassler, Erwin",IEEE Robotics Automation Magazine,10.1109/MRA.2009.932127,,"This special issue on software engineering (SE) for robotics captures a snapshot of current research issues and state-of-the-practice in robotic software development, a topic that has recently received increasing attention from the robotics community, thanks to some popular initiatives such as the Microsoft move into robotics.",Software engineering; Programming; Application software; Software systems; Control systems; Robot sensing systems; Intelligent robots; Robotics and automation; Software reusability; Cognitive robotics,Software engineering for robotics [From the Guest Editors],,,,,,,,,,,,
S977,2,bkwd,conferencePaper,2011,"Bohren, Jonathan; Rusu, Radu Bogdan; Gil Jones, E.; Marder-Eppstein, Eitan; Pantofaru, Caroline; Wise, Melonee; Mösenlechner, Lorenz; Meeussen, Wim; Holzer, Stefan",2011 IEEE International Conference on Robotics and Automation,10.1109/ICRA.2011.5980058,,"As autonomous personal robots come of age, we expect certain applications to be executed with a high degree of repeatability and robustness. In order to explore these applications and their challenges, we need tools and strategies that allow us to develop them rapidly. Serving drinks (i.e., locating, fetching, and delivering), is one such application with well-defined environments for operation, requirements for human interfacing, and metrics for successful completion. In this paper we present our experiences and results while building an autonomous robotic assistant using the PR21 platform and ROS2. The system integrates several new components that are built on top of the PR2's current capabilities. Perception components include dynamic obstacle identification, mechanisms for identifying the refrigerator, types of drinks, and human faces. Planning components include navigation, arm motion planning with goal and path constraints, and grasping modules. One of the main contributions of this paper is a new task-level executive system, SMACH, based on hierarchical concurrent state machines, which controls the overall behavior of the system. We provide in-depth discussions on the solutions that we found in accomplishing our goal, and the implementation strategies that let us achieve them.",Navigation; Cameras; Robot sensing systems; Planning; Grasping; Three dimensional displays,Towards autonomous robotic butlers: Lessons learned with the PR2,,,,,,,,,,,,
S1304,2,bkwd,journalArticle,,"Quigley, Morgan; Gerkey, Brian; Conley, Ken; Faust, Josh; Foote, Tully; Leibs, Jeremy; Berger, Eric; Wheeler, Rob; Ng, Andrew",,,,"This paper gives an overview of ROS, an opensource robot operating system. ROS is not an operating system in the traditional sense of process management and scheduling; rather, it provides a structured communications layer above the host operating systems of a heterogenous compute cluster. In this paper, we discuss how ROS relates to existing robot software frameworks, and brieﬂy overview some of the available application software which uses ROS.",,ROS: an open-source Robot Operating System,,,,x,,,,,,,NO,
S1236,2,bkwd,conferencePaper,2015,"Haq, Irfan Ul; Caballero, Juan; Ernst, Michael D.",Proceedings of the 13th International Workshop on Dynamic Analysis,10.1145/2823363.2823366,https://doi.org/10.1145/2823363.2823366,"A common programming mistake is for incompatible variables to interact, e.g., storing euros in a variable that should hold dollars, or using an array index with the wrong array. This paper proposes a novel approach for identifying undesired interactions between program variables. Our approach uses two different mechanisms to identify related variables. Natural language processing (NLP) identifies variables with related names that may have related semantics. Abstract type inference (ATI) identifies variables that interact with each other. Any discrepancies between these two mechanisms may indicate a programming error. We have implemented our approach in a tool called Ayudante. We evaluated Ayudante using two open-source programs: the Exim mail server and grep. Although these programs have been extensively tested and in deployment for years, Ayudante’s first report for grep revealed a programming mistake.",natural language processing; NLP; testing; Undesired variable interactions,Ayudante: identifying undesired variable interactions,,,,,,,,,,,,
S991,2,bkwd,bookSection,2020,"Dieber, Bernhard; White, Ruffin; Taurer, Sebastian; Breiling, Benjamin; Caiazza, Gianluca; Christensen, Henrik; Cortesi, Agostino",Robot Operating System (ROS): The Complete Reference (Volume 4),,https://doi.org/10.1007/978-3-030-20190-6_8,"ROS is the most popular framework in robotics research and it also grows in terms of industrial use. This makes ROS a worthwhile target for attackers especially since security is not addressed by the core framework itself. Its open architecture and flexibility are also the reasons why ROS suffers from security issues. For example, in ROS it is possible to isolate single nodes from the rest of the application without the ROS master, the other nodes or even the node itself (i.e., its business code) noticing it. This is true for publishers, subscribers and services alike. This makes attacks very difficult to spot at runtime. Penetration testing is the most common security testing practice. The goal is to test an application for possible security flaws. To better facilitate penetration testing for ROS, we introduce ROSPenTo and Roschaos, tools that make use of the vulnerabilities of ROS and demonstrate how ROS applications can be sabotaged by an attacker. In this tutorial you will learn about the ROS XML-RPC API, which is our main attack point. You will see, how API attacks on ROS work in depth. You will get to know Roschaos and ROSPentTo, two tools, which can be used to manipulate running ROS applications.",Security; ROS; Penetration testing,Penetration Testing ROS,,,,,,,,,,,,
S976,2,bkwd,journalArticle,,"Quigley, Morgan; Gerkey, Brian; Conley, Ken; Faust, Josh; Foote, Tully; Leibs, Jeremy; Berger, Eric; Wheeler, Rob; Ng, Andrew",,,,"This paper gives an overview of ROS, an opensource robot operating system. ROS is not an operating system in the traditional sense of process management and scheduling; rather, it provides a structured communications layer above the host operating systems of a heterogenous compute cluster. In this paper, we discuss how ROS relates to existing robot software frameworks, and brieﬂy overview some of the available application software which uses ROS.",,ROS: an open-source Robot Operating System,,,,,,,,,,,,
S973,2,bkwd,conferencePaper,2016,"Awad, Ramez; Heppner, Georg; Roennau, Arne; Bordignon, Mirko",2016 IEEE 21st International Conference on Emerging Technologies and Factory Automation (ETFA),10.1109/ETFA.2016.7733581,,"In this work, the ReApp Engineering Workbench and its underlying semantically enriched app models are presented. The usage of a model, which describes the apps functionality, interfaces and other attributes, allows the utilization of engineering tools for code generation and automated testing. Further, it ensures the compatibility of the generated interfaces, which in turn enhances the reusability of the developed apps in larger applications.",Hardware; Unified modeling language; Biological system modeling; Robot kinematics; Model driven engineering,ROS engineering workbench based on semantically enriched app models for improved reusability,,,,,,,,,,,,
S917,2,bkwd,conferencePaper,2016,"Santos, André; Cunha, Alcino; Macedo, Nuno; Lourenço, Cláudio",2016 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS.2016.7759661,,"Robots are being increasingly used in safety-critical contexts, such as transportation and health. The need for flexible behavior in these contexts, due to human interaction factors or unstructured operating environments, led to a transition from hardware- to software-based safety mechanisms in robotic systems, whose reliability and quality is imperative to guarantee. Source code static analysis is a key component in formal software verification. It consists on inspecting code, often using automated tools, to determine a set of relevant properties that are known to influence the occurrence of defects in the final product. This paper presents HAROS, a generic, plug-in-driven, framework to evaluate code quality, through static analysis, in the context of the Robot Operating System (ROS), one of the most widely used robotic middleware. This tool (equipped with plug-ins for computing metrics and conformance to coding standards) was applied to several publicly available ROS repositories, whose results are also reported in the paper, thus providing a first overview of the internal quality of the software being developed in this community.",Standards; Software; Measurement; Context; Service robots; Safety,A framework for quality assessment of ROS repositories,,,,,,,,,,,,
S906,2,bkwd,journalArticle,2016,"Kumar, Pranav Srinivas; Emfinger, William; Karsai, Gabor; Watkins, Dexter; Gasser, Benjamin; Anilkumar, Amrutur",Electronics,10.3390/electronics5030053,https://www.mdpi.com/2079-9292/5/3/53,"This paper presents the Robot Operating System Model-driven development tool suite, (ROSMOD) an integrated development environment for rapid prototyping component-based software for the Robot Operating System (ROS) middleware. ROSMOD is well suited for the design, development and deployment of large-scale distributed applications on embedded devices. We present the various features of ROSMOD including the modeling language, the graphical user interface, code generators, and deployment infrastructure. We demonstrate the utility of this tool with a real-world case study: an Autonomous Ground Support Equipment (AGSE) robot that was designed and prototyped using ROSMOD for the NASA Student Launch competition, 2014–2015.",robotics; real-time; distributed; embedded; cyber-physical; development; model-driven; rapid; systems,"ROSMOD: A Toolsuite for Modeling, Generating, Deploying, and Managing Distributed Real-time Component-based Software using ROS",,,,,,,,,,,,
S902,2,bkwd,conferencePaper,2016,"Hua, Yingbing; Zander, Stefan; Bordignon, Mirko; Hein, Björn",2016 IEEE 21st International Conference on Emerging Technologies and Factory Automation (ETFA),10.1109/ETFA.2016.7733579,,"One of the major investment for applying industrial robots in production resides in the software development, which is an interdisciplinary and heterogeneous engineering process. This paper presents a novel model-driven approach that uses AutomationML as modeling framework and ontological reasoning as inference framework for constructing robotic application using Robot Operating System (ROS). We show how different robotic components can be classified and modeled with AutomationML, how these components can be composed together to a production system, and how the AutomationML models can be processed semantically by utilizing Semantic Web technologies and ontological reasoning. By applying model-to-text transformation techniques, executable ROS code can be generated from the models that foster fast prototyping and the reuse of robotic software.",Software; Ontologies; Semantics; Automation; Unified modeling language; Service robots,From AutomationML to ROS: A model-driven approach for software engineering of industrial robotics using ontological reasoning,,,,,,,,,,,,
S845,2,forward,conferencePaper,2019,"Lagraa, Sofiane; Cailac, Maxime; Rivera, Sean; Beck, Frédéric; State, Radu",Real-Time Attack Detection on Robot Cameras: A Self-Driving Car Application,2019 Third IEEE International Conference on Robotic Computing (IRC),10.1109/IRC.2019.00023,,"The Robot Operating System (ROS) are being deployed for multiple life critical activities such as self-driving cars, drones, and industries. However, the security has been persistently neglected, especially the image flows incoming from camera robots. In this paper, we perform a structured security assessment of robot cameras using ROS. We points out a relevant number of security flaws that can be used to take over the flows incoming from the robot cameras. Furthermore, we propose an intrusion detection system to detect abnormal flows. Our defense approach is based on images comparisons and unsupervised anomaly detection method. We experiment our approach on robot cameras embedded on a self-driving car.",attack detection; Cameras; images processing; intrusion detection system; Operating systems; Perturbation methods; robot; Robot vision systems; ROS; Security; Service robots,Real-Time Attack Detection on Robot Cameras: A Self-Driving Car Application,,,,,,,,,,,
S817,2,forward,journalArticle,2021,"Malavolta, Ivano; Lewis, Grace A.; Schmerl, Bradley; Lago, Patricia; Garlan, David",Journal of Systems and Software,10.1016/j.jss.2021.110969,https://www.sciencedirect.com/science/article/pii/S0164121221000662,"Context: The Robot Operating System (ROS) is the de-facto standard for robotics software. However, ROS-based systems are getting larger and more complex and could benefit from good software architecture practices. Goal: We aim at (i) unveiling the state-of-the-practice in terms of targeted quality attributes and architecture documentation in ROS-based systems, and (ii) providing empirically-grounded guidance to roboticists about how to properly architect ROS-based systems. Methods: We designed and conducted an observational study where we (i) built a dataset of 335 GitHub repositories containing real open-source ROS-based systems, and (ii) mined the repositories to extract and synthesize quantitative and qualitative findings about how roboticists are architecting ROS-based systems. Results: First, we extracted an empirically-grounded overview of the state of the practice for architecting and documenting ROS-based systems. Second, we synthesized a catalog of 47 architecting guidelines for ROS-based systems. Third, the extracted guidelines were validated by 119 roboticists working on real-world open-source ROS-based systems. Conclusion: Roboticists can use our architecting guidelines for applying good design principles to develop robots that meet quality requirements, and researchers can use our results as evidence-based indications about how real-world ROS systems are architected today, thus inspiring future research contributions.",Robotics; ROS; Software architecture,Mining guidelines for architecting robotics software,,,,,,,,,,,,
S757,2,forward,thesis,2018,"Foughali, Mohammed; Ghallab, Malik; Ingrand, Félix",,,https://www.theses.fr/2018ISAT0033,"Les systèmes robotiques et autonomes ne cessent d’évoluer et deviennent de plus en plus impliqués dans les missions à coût considérable et/ou dans les milieux humains. Par conséquent, les simulations et campagnes de tests ne sont plus adaptées à la problématique de sûreté et fiabilité des systèmes robotiques et autonomes compte tenu (i) du caractère sérieux des défaillances éventuelles dans les contextes susmentionnés (un dommage à un robot très coûteux ou plus dramatiquement une atteinte aux vies humaines) et (ii) de la nature non exhaustive de ces techniques (les tests et simulations peuvent toujours passer à côté d’un scénario d’exécution catastrophique.Les méthodes formelles, quant à elles, peinent à s’imposer dans le domaine de la robotique autonome, notamment au niveau fonctionnel des robots, i.e. les composants logiciels interagissant directement avec les capteurs et les actionneurs. Elle est due à plusieurs facteurs. D’abord, les composants fonctionnels reflètent un degré de complexité conséquent, ce qui mène souvent à une explosion combinatoire de l’espace d’états atteignables (comme l’exploration se veut exhaustive). En outre, les composants fonctionnels sont décrits à travers des languages et frameworks informels (ROS, GenoM, etc.). Leurs spécifications doivent alors être traduites en des modèles formels avant de pouvoir y appliquer les méthodes formelles associées. Ceci est souvent pénible, lent, exposé à des erreurs, et non automatique, ce qui implique un investissement dans le temps aux limites de la rentabilité. Nous proposons, dans cette thèse, de connecter GenoM3, un framework de développement et déploiement de composants fonctionnels robotiques, à des langages formels et leurs outils de vérification respectifs. Cette connexion se veut automatique: nous développons des templates en mesure de traduire n’importe quelle spécification de GenoM3 en langages formels. Ceci passe par une formalisation de GenoM3: une sémantique formelle opérationnelle est donnée au langage. Une traduction à partir de cette sémantique est réalisée vers des langages formels et prouvée correcte par bisimulation. Nous comparons de différents langages cibles, formalismes et techniques et tirerons les conclusions de cette comparaison. La modélisation se veut aussi, et surtout, efficace. Un modèle correct n’est pas forcément utile. En effet, le passage à l’échelle est particulièrement important.Cette thèse porte donc sur l'applicabilité des méthodes formelles aux compo-sants fonctionnels des systèmes robotiques et autonomes. Le but est d'aller vers des robots autonomes plus sûrs avec un comportement plus connu et prévisible. Cela passe par la mise en place d'un mécanisme de génération automatique de modèles formels à partir de modules fonctionnels de sys-tèmes robotiques et autonomes. Les langages et outils cibles sont Fiacre/TINA et UPPAAL (model checking), UPPAAL-SMC (statistical model checking), BIP/RTD-Finder (SAT solving), et BIP/Engine (enforcement de propriétés en ligne). Les modèles générés sont exploités pour vérifier des propriétés quali-tatives ou temps-réel, souvent critiques pour les systèmes robotiques et auto-nomes considérés. Parmi ces propriétés, on peut citer, à titre d'exemple, l'ordonnançabilité des tâches périodiques, la réactivité des tâches spora-diques, l'absence d’interblocages, la vivacité conditionnée (un évènement tou-jours finit par suivre un autre), la vivacité conditionnée bornée (un évène-ment toujours suit un autre dans un intervalle de temps borné), l'accessibilité (des états “indésirables” ne sont jamais atteints), etc.La thèse propose éga-lement une analyse du feedback expérimental afin de guider les ingénieurs à exploiter ces méthodes et techniques de vérification efficacement sur les mo-dèles automatiquement générés.",004; 511.3; 511.5; 629.831 3; Computer science; Formal methods; Informatique; Méthodes formelles; Méthodes formelles (informatique); Real-time; Robotics; Robotique; Software engineering; Temps-réel; Verification; Vérification,Vérification Formelle des Modules Fonctionnels de Systèmes Robotiques et Autonomes,,,,,,,,,,,,
S742,2,forward,book,2019,"Dehnavi, Saeid; Sedaghatbaf, Ali; Salmani, Bahare; Sirjani, Marjan; Kargahi, Mehdi; Khamespanah, Ehsan",,,,"Robotic technology helps humans in different areas such as manufacturing, health care and education. Due to the ubiquitous revolution, today's focus is on mobile robots and their applications in a variety of cyber-physical systems. There are several powerful robot middlewares, such as ROS and YARP to manage the complexity of robotic software implementation. However, they do not provide support for assuring important properties such as timeliness and safety. We believe that integrating model checking with a robot middleware helps developers design and implement high quality robotic software. By defining a general conceptual model for robotic programs, in this paper we present an integration of Timed Rebeca modeling language (and its model checker) with ROS to automatically synthesize verified ROS-based robotic software. For this integration, first the conceptual model is mapped to a Timed Rebeca model which is used to verify the desired properties on the model. The Timed Rebeca model may be modified several times until the properties are satisfied. Finally, the verified Timed Rebeca model is translated to a ROS program based on a set of mapping rules. Conducting experiments on some small-scale case studies indicate the usefulness and applicability of the proposed integration method.",,ReRebeca : A new framework to design verified ROS-based robotic programs,,,,,,,,,,,,
S741,2,forward,conferencePaper,2021,"Chauhan, Muhammad Aufeef; Babar, Muhammad Ali; Grainger, Steven",2021 IEEE 18th International Conference on Software Architecture Companion (ICSA-C),10.1109/ICSA-C52384.2021.00018,,"Collaborative autonomous systems operating at edges, e.g., TurtleBots, need adaptive security mechanisms (i.e., Confidentiality, Integrity, Availability) that meet the changing mission requirements and the available processing capacities. We have designed and implemented a security platform that supports secure communication among autonomous systems of robots (e.g., TurtleBots), security of Robot Operating System (ROS) communication network, the integrity of the information exchanged among the robots and secured availability of the data and access to services. For designing the security platform, we have used architecture and design patterns along with the respective security protocols. Our solution provides seamless security incorporation in heterogeneous collaborative autonomous entities. We have leveraged architectural strategies to incorporate publickey encryption, maintain global order of events and incorporate fault tolerance. We assert that the presented security platform can facilitate easy adoption of secure control, communication and information gathering in collaborative autonomous systems with resource constraint edge nodes.",Autonomous systems; Autonomous Systems Architecture; Availability; Collaboration; Computer architecture; Confidentiality; Integrity; Operating systems; Protocols; Robot Operating Systems (ROS); Runtime; Security as a Service; Security Requirements.; Software architecture; TurtleBots,Designing a Security Platform for Collaborating Autonomous Systems - An Experience Report,,,,,,,,,,,,
S717,2,forward,journalArticle,2019,"Dehnavi, Saeid; Sedaghatbaf, Ali; Salmani, Bahar; Sirjani, Marjan; Kargahi, Mehdi; Khamespanah, Ehsan",Procedia Computer Science,10.1016/j.procs.2019.08.012,https://www.sciencedirect.com/science/article/pii/S1877050919309263,"Robotic technology helps humans in different areas such as manufacturing, health care and education. Due to the ubiquitous revolution, today’s focus is on mobile robots and their applications in a variety of cyber-physical systems. ROS is a wll-known and powerful middleware that facilitates software development for mobile robots. However, this middleware does not support assuring properties such as timeliness and safety of ROS-based software. In this paper we present an integration of Timed Rebeca modeling language with ROS to synthesize verified robotic software. First, a conceptual model of robotic programs is developed using Timed Rebeca. After verifying a set of user-defined correctness properties on this model, it is translated to a ROS program automatically. Experiments on some small-scale case studies illustrates the applicability of the proposed integration method.",Formal Verification; Mobility; Model Checking; Model-Based Design; Robotics; ROS; Timed Rebeca,Towards an Actor-based Approach to Design Verified ROS-based Robotic Programs using Rebeca,,,,,,,,,,,,
S656,2,forward,journalArticle,2021,"Hammoudeh García, Nadia; Deshpande, Harshavardhan; Santos, André; Kahl, Björn; Bordignon, Mirko",Software and Systems Modeling,10.1007/s10270-021-00873-2,https://doi.org/10.1007/s10270-021-00873-2,"Model-driven engineering (MDE) addresses central aspects of robotics software development. MDE could enable domain experts to leverage the expressiveness of models, while implementation details on different hardware platforms would be handled by automatic code generation. Today, despite strong MDE efforts in the robotics research community, most evidence points to manual code development being the norm. A possible reason for MDE not being accepted by robot software developers could be the wide range of applications and target platforms, which make all-encompassing MDE IDEs hard to develop and maintain. Therefore, we chose to leverage a large corpus of open-source software widely adopted by the robotics community to extract common structures and gain insight on how and where MDE can support the developers to work more efficiently. We pursue modeling as a complement, rather than imposing MDE as separate solution. Our previous work introduced metamodels to describe components, their interactions, and their resulting composition. In this paper, we present two methods based on metamodels for automated generation of models from manually written artifacts: (1) through static code analysis and (2) by monitoring the execution of a running system. For both methods, we present tools that leverage the potentials of our contributions, with a special focus on their application at runtime to observe and diagnose a real system during its execution. A comprehensive example is provided as a walk-through for robotics software practitioners.",,Bootstrapping MDE development from ROS manual code: Part 2—Model generation and leveraging models at runtime,,,,,,,,,,,,
S648,2,forward,conferencePaper,2020,"Malavolta, Ivano; Lewis, Grace; Schmerl, Bradley; Lago, Patricia; Garlan, David",2020 IEEE/ACM 42nd International Conference on Software Engineering: Software Engineering in Practice (ICSE-SEIP),,,"The Robot Operating System (ROS) is the de-facto standard for robotic software. If on one hand ROS is helping roboticists, e.g., by providing a standardized communication platform, on the other hand ROS-based systems are getting larger and more complex and could benefit from good software architecture practices. This paper presents an observational study aimed at (i) unveiling the state-of the-practice for architecting ROS-based systems and (ii) providing guidance to roboticists about how to properly architect ROS-based systems. To achieve these goals, we (i) build a dataset of 335 GitHub repositories containing real open-source ROS-based systems, (ii) mine the repositories for extracting the state of the practice about how roboticists are architecting them, and (iii) synthesize a catalog of 49 evidence-based guidelines for architecting ROS-based systems. The guidelines have been validated by 77 roboticists working on real-world open-source ROS-based systems.",Computer architecture; Data mining; Documentation; Guidelines; Mining Software Repositories; Open source software; Robotics; Robots; Service robots; Software Architecture,How do you Architect your Robots? State of the Practice and Guidelines for ROS-based Systems,,,,,,,,,,,,
S643,2,forward,conferencePaper,2021,"Trezzy, Mickaël; Ober, Ileana; Ober, Iulian; Oliveira, Raquel","2021 IEEE International Workshop of Electronics, Control, Measurement, Signals and their application to Mechatronics (ECMSM)",10.1109/ECMSM51310.2021.9468864,,"Despite the popularity of the Robot Operating System (ROS), Model-Driven Engineering (MDE) methods remain not commonly used in the community. The use of such methods would allow to reason at a higher level of abstraction and increase the accessibility of field engineers to effectively write ROS applications, while opening the way to more advanced model analysis for validation and verification. In a previous work, we made an in-depth comparative study to choose which MDE approach to apply when developing ROS applications. This study led us to choose graphical Domain-Specific Languages (DSL) as the means to facilitate the development of ROS applications. In this paper we present the MDE4ROS framework, a graphical DSL we defined to allow high level robotics applications development. This framework aims to provide a better view of the system during the development using a graphical representation and to enable higher level of abstraction with code generation of the ROS system. To illustrate our proposal we use MDE4ROS to develop a TurtleBot use case and we present an analysis of the results.",DSL; MDE; Model driven engineering; Operating systems; Particle measurements; Proposals; Robotics; ROS; Space exploration; Syntactics,Leveraging domain specific modeling to increase accessibility of robot programming,,,,,,,,,,,,
S631,2,forward,journalArticle,2018,"Colwell, Ian",,,https://uwspace.uwaterloo.ca/handle/10012/13398,"Automated vehicles need to operate safely in a wide range of environments and hazards. The complex systems that make up an automated vehicle must also ensure safety in the event of system failures. This thesis proposes an approach and architectural design for achieving maximum functionality in the case of system failures. The Operational Design Domain (ODD) defines the domain over which the automated vehicle can operate safely. We propose modifying a runtime representation of the ODD based on current system capabilities. This enables the system to react with context-appropriate responses depending on the remaining degraded functionality. In addition to proposing an architectural design, we have implemented the approach to prove its viability. An analysis of the approach also highlights the strengths and weaknesses of the approach and how best to apply it. The proof of concept has shown promising directions for future work and moved our automated vehicle research platform closer to achieving level 4 automation.    A ROS-based architecture extraction tool is also presented. This tool helped guide the architectural development and integration of the automated vehicle research platform in use at the University of Waterloo, and improve the visibility of safety and testing procedures for the team.",,Runtime Restriction of the Operational Design Domain: A Safety Concept for Automated Vehicles,,,,,,,,,,,,
S606,2,forward,conferencePaper,2021,"Swanborn, Stan; Malavolta, Ivano",2021 IEEE/ACM 43rd International Conference on Software Engineering: Companion Proceedings (ICSE-Companion),10.1109/ICSE-Companion52605.2021.00029,,"Software is becoming the core aspect in robotics development and it is growing in terms of complexity and size. However, roboticists and researchers are struggling in ensuring and even measuring the quality of their software with respect to run-time properties such as energy efficiency and performance. This paper presents Robot Runner, a tool for streamlining the execution of measurement-based experiments involving robotics software. The tool is able to automatically setup, start, resume, and fully replicate user-defined experiments. Thanks to its plugin-based architecture, the tool is fully independent of the number, type, and complexity of the used robots (both real and simulated). GitHub repository – https://github.com/S2-group/robot-runner Youtube video – https://youtu.be/le-SAXI2k1E",Complexity theory; Empirical software engineering; Energy measurement; Robotics software; Robots; ROS; Software; Software engineering; Software measurement; Tools,Robot Runner: A Tool for Automatically Executing Experiments on Robotics Software,,,,,,,,,,,,
S592,2,forward,conferencePaper,2021,"Malavolta, Ivano; Chinnappan, Katerina; Swanborn, Stan; Lewis, Grace A.; Lago, Patricia",2021 IEEE/ACM 18th International Conference on Mining Software Repositories (MSR),10.1109/MSR52588.2021.00042,,"In today’s world, reducing energy consumption should be the goal for any organization and any system, including robotics software systems. However, state of the practice in robotics software development focuses primarily on achieving functionality and performance, with minimal recognition of energy-efficiency as a driving software quality. The goal of this paper is to identify, synthesize, and empirically evaluate architectural tactics for energy-efficiency applied by practitioners in real robotics projects. Four tactics were identified by mining software repository techniques applied to the ROS ecosystem. The tactics were evaluated via experimentation on a real, commodity robotics system. Results show that the application of green architectural tactics tends to largely improve the energy-efficiency of the robot (7.9% energy savings when all tactics are applied) and that the movement strategy and the physical environment where the robot operates strongly influence how energy is consumed by the robot.",Ecosystems; Energy efficiency; Energy efficient software; Green products; Mission critical systems; Organizations; Robotics software; Software Architecture; Software quality; Software systems,Mining the ROS ecosystem for Green Architectural Tactics in Robotics and an Empirical Evaluation,,,,,,,,,,,,
S580,2,forward,conferencePaper,2020,"Stoll, Hannes; Koch, Eduard; Sax, Eric",2020 IEEE 23rd International Conference on Intelligent Transportation Systems (ITSC),10.1109/ITSC45102.2020.9294319,,"In modern cars, software functions and services account for a large part of value creation and competitive differentiation. Several tools exist to address the development of such electrical/electronic architectures (E/E-A). In industry, the proprietary tool PREEvision developed by Vector Informatik GmbH is widely used to support the development for AUTOSAR, while in science and research, tools and ecosystems such as the Robot Operating System (ROS) are preferred because of their open-source nature. This leads to a multitude of freely available ROS components whose reusability in industrial AUTOSAR-based projects is desirable. Therefore, in this paper we present an approach to transform models between both worlds and thus to link them. This enables the further use of already existing components.",Biological system modeling; Robot sensing systems; Robots; Service robots; Software; Tools; Unified modeling language,Integration of ROS communication interfaces in a model-based tool for the description of AUTOSAR-compliant electrical/electronic architectures (E/E-A) in vehicle development,,,,,,,,,,,,
S576,2,forward,conferencePaper,2020,"Wehrmeister, Marco Aurelio",2020 25th IEEE International Conference on Emerging Technologies and Factory Automation (ETFA),10.1109/ETFA46521.2020.9212077,,"This work proposes an approach to generate automatically the embedded software for distributed Cyber-Physical Systems implemented using the Robotic Operating System (ROS) framework. For that, the Aspect-oriented Model Driven Engineering for Real-Time systems (AMoDE-RT) design approach has been extended in order to support the C++ code generation using the semantics and libraries available in ROS framework which is widely used in both academia and industry to implement the embedded software for robotic systems. The system architecture, behavior, requirements and constraints are specified in a UML/MARTE model. The information specified in the high-level model is used as input for a tool that generates a great part of the embedded software for all distributed computing devices. The main goal is to foster the use of Model-Driven Engineering in the context of cyber-physical systems design aiming the rapid prototyping via simulation and also the generation of the actual implementation of the system components. The proposed approach has been validated through a case study that demonstrates the feasibility to implement a ROS/C++ software for industrial systems. The results indicate that the proposed approach can be applied to complex systems comprising a larger number of interacting devices, whereas keeping the high-level of abstraction for system specification in UML/MARTE models.",code generation; embedded software; MARTE; Model-Driven Engineering; Robot Operating System; UML,Generating ROS-based Software for Industrial Cyber-Physical Systems from UML/MARTE,,,,,,,,,,,,
S1403,2,bkwd,conferencePaper,2016,"Rozier, Kristin Yvonne","Verified Software. Theories, Tools, and Experiments",10.1007/978-3-319-48869-1_2,,"Advancement of AI-enhanced control in autonomous systems stands on the shoulders of formal methods, which make possible the rigorous safety analysis autonomous systems require. An aircraft cannot operate autonomously unless it has design-time reasoning to ensure correct operation of the autopilot and runtime reasoning to ensure system health management, or the ability to detect and respond to off-nominal situations. Formal methods are highly dependent on the specifications over which they reason; there is no escaping the “garbage in, garbage out” reality. Specification is difficult, unglamorous, and arguably the biggest bottleneck facing verification and validation of aerospace, and other, autonomous systems.This VSTTE invited talk and paper examines the outlook for the practice of formal specification, and highlights the on-going challenges of specification, from design-time to runtime system health management. We exemplify these challenges for specifications in Linear Temporal Logic (LTL) though the focus is not limited to that specification language. We pose challenge questions for specification that will shape both the future of formal methods, and our ability to more automatically verify and validate autonomous systems of greater variety and scale. We call for further research into LTL Genesis.",Linear Temporal Logic; Linear Temporal Logic Formula; Model Check; Sanity Check; Unman Aerial System,Specification: The Biggest Bottleneck in Formal Methods and Autonomy,,,,,,,,,,,,
S1402,2,bkwd,journalArticle,2011,"Bogue, Robert",Industrial Robot: An International Journal,10.1108/01439911111122699,https://doi.org/10.1108/01439911111122699,"Purpose – This paper aims to review of the use of robots in two healthcare applications: surgery and prosthetics. Design/methodology/approach – Following a brief introduction, this paper first considers robotic surgery and discusses a selection of commercial products, applications and recent technological advances. It then considers recent developments in robotic prosthetics. Findings – It is shown that surgical robots are being employed in an ever‐growing range of clinical procedures. Systems employing tactile feedback are under development. Improved robotic prosthetics are the topic of a major research effort and recent developments include hands and grippers, walking aids and novel control techniques, including thought‐activated systems which exploit advances in brain‐computer interface technology. Originality/value – This paper provides details of recent developments and applications of robotic surgery and prosthetics.",Health care; Prosthetic devices; Robotics; Surgery; User interfaces,Robots in healthcare,,,,,,,,,,,,
S1353,2,bkwd,conferencePaper,2016,"Maniatopoulos, Spyros; Schillinger, Philipp; Pong, Vitchyr; Conner, David C.; Kress-Gazit, Hadas",2016 IEEE International Conference on Robotics and Automation (ICRA),10.1109/ICRA.2016.7487613,,"In this work, we take a step towards bridging the gap between the theory of formal synthesis and its application to real-world, complex, robotic systems. In particular, we present an end-to-end approach for the automatic generation of code that implements high-level robot behaviors in a verifiably correct manner, including reaction to the possible failures of low-level actions. We start with a description of the system defined a priori. Thus, a non-expert user need only specify a high-level task. We automatically construct a formal specification, in a fragment of Linear Temporal Logic (LTL), that encodes the system's capabilities and constraints, the task, and the desired reaction to low-level failures. We then synthesize a reactive mission plan that is guaranteed to satisfy the formal specification, i.e., achieve the task's goals or correctly react to failures. Lastly, we automatically generate a state machine that instantiates the synthesized symbolic plan in software. We showcase our approach using Team ViGIR's software and Atlas humanoid robot and present lab experiments, thus demonstrating the application of formal synthesis techniques to complex robotic systems. The proposed approach has been implemented and open-sourced as a collection of Robot Operating System (ROS) packages, which are adaptable to other systems.",Automata; Context; Humanoid robots; Planning; Safety; Software,Reactive high-level behavior synthesis for an Atlas humanoid robot,,,,x,,,,,,,NO,
S1294,2,bkwd,conferencePaper,2015,"Blincoe, Kelly; Harrison, Francis; Damian, Daniela",2015 IEEE/ACM 12th Working Conference on Mining Software Repositories,10.1109/MSR.2015.26,,"Software projects are not developed in isolation. Recent research has shifted to studying software ecosystems, communities of projects that depend on each other and are developed together. However, identifying technical dependencies at the ecosystem level can be challenging. In this paper, we propose a new method, known as reference coupling, for detecting technical dependencies between projects. The method establishes dependencies through user-specified cross-references between projects. We use our method to identify ecosystems in GitHub-hosted projects, and we identify several characteristics of the identified ecosystems. We find that most ecosystems are centered around one project and are interconnected with other ecosystems. The predominant type of ecosystems are those that develop tools to support software development. We also found that the project owners' social behaviour aligns well with the technical dependencies within the ecosystem, but project contributors' social behaviour does not align with these dependencies. We conclude with a discussion on future research that is enabled by our reference coupling method.",Communities; Couplings; cross-reference; Databases; Ecosystems; Encoding; GitHub; Reference Coupling; Software; Technical Dependencies; Visualization,Ecosystems in GitHub and a Method for Ecosystem Identification Using Reference Coupling,,,,,,,,,,,,
S1235,2,bkwd,conferencePaper,2009,"Hangal, Sudheendra; Lam, Monica S.",2009 IEEE 31st International Conference on Software Engineering,10.1109/ICSE.2009.5070517,,"This paper introduces UniFi, a tool that attempts to automatically detect dimension errors in Java programs. UniFi infers dimensional relationships across primitive type and string variables in a program, using an inter-procedural, context-sensitive analysis. It then monitors these dimensional relationships as the program evolves, flagging inconsistencies that may be errors. UniFi requires no programmer annotations, and supports arbitrary program-specific dimensions, thus providing fine-grained dimensional consistency checking. UniFi exploits features of object-oriented languages, but can be used for other languages as well. We have run UniFi on real-life Java code and found that it is useful in exposing dimension errors. We present a case study of using UniFi on nightly builds of a 19,000 line code base as it evolved over 10 months.",Computer displays; Computer errors; Computer languages; Computer science; Equations; Intrusion detection; Java; Physics; Programming profession; Software debugging,Automatic dimension inference and checking for object-oriented programs,,,,,,,,,,,,
S1188,2,bkwd,journalArticle,,"Quigley, Morgan; Gerkey, Brian; Conley, Ken; Faust, Josh; Foote, Tully; Leibs, Jeremy; Berger, Eric; Wheeler, Rob; Ng, Andrew",,,,"This paper gives an overview of ROS, an opensource robot operating system. ROS is not an operating system in the traditional sense of process management and scheduling; rather, it provides a structured communications layer above the host operating systems of a heterogenous compute cluster. In this paper, we discuss how ROS relates to existing robot software frameworks, and brieﬂy overview some of the available application software which uses ROS.",,ROS: an open-source Robot Operating System,,,,x,,,,,,,NO,
S1186,2,bkwd,journalArticle,2012,"Elkady, Ayssam; Sobh, Tarek",Journal of Robotics,10.1155/2012/959013,https://www.hindawi.com/journals/jr/2012/959013/,"Autonomous robots are complex systems that require the interaction between numerous heterogeneous components (software and hardware). Because of the increase in complexity of robotic applications and the diverse range of hardware, robotic middleware is designed to manage the complexity and heterogeneity of the hardware and applications, promote the integration of new technologies, simplify software design, hide the complexity of low-level communication and the sensor heterogeneity of the sensors, improve software quality, reuse robotic software infrastructure across multiple research efforts, and to reduce production costs. This paper presents a literature survey and attribute-based bibliography of the current state of the art in robotic middleware design. The main aim of the survey is to assist robotic middleware researchers in evaluating the strengths and weaknesses of current approaches and their appropriateness for their applications. Furthermore, we provide a comprehensive set of appropriate bibliographic references that are classified based on middleware attributes.",,Robotics Middleware: A Comprehensive Literature Survey and Attribute-Based Bibliography,,,,x,,,,,,,NO,
S1174,2,bkwd,journalArticle,2013,"Anderson, Monia; Crawford, Chris; Kilgo, Paul; Stanforth, Megan",arXiv:1302.6149 [cs],,http://arxiv.org/abs/1302.6149,"There is no dearth of new robots that provide both generalized and customized platforms for learning and research. Unfortunately as we attempt to adapt existing software components, we are faced with an explosion of device drivers that interface each hardware platform with existing frameworks. We certainly gain the efficiencies of reusing algorithms and tools developed across platforms but only once the device driver is created. We propose a domain specific language that describes the development and runtime interface of a robot and defines its link to existing frameworks. The Robot Device Interface Specification (RDIS) takes advantage of the internal firmware present on many existing devices by defining the communication mechanism, syntax and semantics in such a way to enable the generation of automatic interface links and resource discovery. We present the current domain model as it relates to differential drive robots as a mechanism to use the RDIS to link described robots to HTML5 via web sockets and ROS (Robot Operating System).",Computer Science - Robotics,Work in Progress: Enabling robot device discovery through robot device descriptions,,,,x,,,,,,,NO,
S1480,3,fwd,journalArticle,2021,"Santos, Luís Carlos; Santos, André; Santos, Filipe Neves; Valente, António",Robotics,10.3390/robotics10030103,"Software for robotic systems is becoming progressively more complex despite the existence of established software ecosystems like ROS, as the problems we delegate to robots become more and more challenging. Ensuring that the software works as intended is a crucial (but not trivial) task, although proper quality assurance processes are rarely seen in the open-source robotics community. This paper explains how we analyzed and improved a specialized path planner for steep-slope vineyards regarding its software dependability. The analysis revealed previously unknown bugs in the system, with a relatively low property specification effort. We argue that the benefits of similar quality assurance processes far outweigh the costs and should be more widespread in the robotics domain.",agricultural robotics; path planning; robotics; safety software verification,A Case Study on Improving the Software Dependability of a ROS Path Planner for Steep Slope Vineyards,,,,,,,,,,,YES,,
S1486,3,fwd,journalArticle,2019,"Spellini, Stefano; Lora, Michele; Fummi, Franco; Chattopadhyay, Sudipta",ACM Transactions on Embedded Computing Systems,10.1145/3358197,"This paper presents a methodology that relies on Assume-Guarantee Contracts to decompose the problem of synthesizing control software for a multi-robot system. Initially, each contract describes either a component (e.g., a robot) or an aspect of the system. Then, the design problem is decomposed into different synthesis and verification sub-problems, allowing to tackle the complexity involved in the design process. The design problem is then recomposed by exploiting the rigorousness provided by contracts. This allows us to achieve system-level simulation capable to be used for validating the entire design. Once validated, the software synthesized during the process can be integrated into Robot Operating System (ROS) nodes and executed using state-of-the-practice packages and tools for modern robotic systems. We apply the methodology to generate a control strategy for an autonomous goods transportation system. Our results show a massive reduction of the time required to obtain automatically the control software implementing a multi-robot mission.",Contract-based design; robotic operating system,Compositional Design of Multi-Robot Systems Control Software on ROS,,,,,,,,,,,YES,,
S1496,3,fwd,conferencePaper,2020,"Carvalho, Renato; Cunha, Alcino; Macedo, Nuno; Santos, André",2020 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS45743.2020.9341085,"Robots are currently deployed in safety-critical domains but proper techniques to assess the functional safety of their software are yet to be adopted. This is particularly critical in ROS, where highly configurable robots are built by composing third-party modules. To promote adoption, we advocate the use of lightweight formal methods, automatic techniques with minimal user input and intuitive feedback. This paper proposes a technique to automatically verify system-wide safety properties of ROS-based applications at static time. It is based in the formalization of ROS architectural models and node behaviour in Electrum, over which system-wide specifications are subsequently model checked. To automate the analysis, it is deployed as a plug-in for HAROS, a framework for the assessment of ROS software quality aimed at the ROS community. The technique is evaluated in a real robot, AgRob V16, with positive results.",Computer architecture; Intelligent robots; Middleware; Model checking; Safety; Scalability; Software quality,Verification of system-wide safety properties of ROS applications,,,,,,,,,,,YES,,
S1565,3,bkwd,journalArticle,2011,"Lütkebohle, Ingo; Philippsen, Roland; Pradeep, Vijay; Marder-Eppstein, Eitan; Wachsmuth, Sven",Journal of Software Engineering for Robotics,,DiVA portal is a finding tool for research publications and student theses written at the following 50 universities and research institutions.,,Generic middleware support for coordinating robot software components : The Task-State-Pattern,x,,,,,,,,,,NO,,
S1481,3,fwd,journalArticle,2021,"Santos, André; Cunha, Alcino; Macedo, Nuno",arXiv:2103.01603 [cs],,"This tool paper presents the High-Assurance ROS (HAROS) framework. HAROS is a framework for the analysis and quality improvement of robotics software developed using the popular Robot Operating System (ROS). It builds on a static analysis foundation to automatically extract models from the source code. Such models are later used to enable other sorts of analyses, such as Model Checking, Runtime Verification, and Property-based Testing. It has been applied to multiple real-world examples, helping developers find and correct various issues.",Computer Science - Robotics; Computer Science - Software Engineering; D.2.1; D.2.4; D.2.5; D.2.8; D.2.9,The High-Assurance ROS Framework,,,,,x,,,,,,NO,,
S1507,3,bkwd,conferencePaper,2014,"Abal, Iago; Brabrand, Claus; Wasowski, Andrzej",Proceedings of the 29th ACM/IEEE international conference on Automated software engineering,10.1145/2642937.2642990,"Feature-sensitive verification pursues effective analysis of the exponentially many variants of a program family. However, researchers lack examples of concrete bugs induced by variability, occurring in real large-scale systems. Such a collection of bugs is a requirement for goal-oriented research, serving to evaluate tool implementations of feature-sensitive analyses by testing them on real bugs. We present a qualitative study of 42 variability bugs collected from bug-fixing commits to the Linux kernel repository. We analyze each of the bugs, and record the results in a database. In addition, we provide self-contained simplified C99 versions of the bugs, facilitating understanding and tool evaluation. Our study provides insights into the nature and occurrence of variability bugs in a large C software system, and shows in what ways variability affects and increases the complexity of software bugs.",bugs; feature interactions; linux; software variability,42 variability bugs in the linux kernel: a qualitative analysis,x,,,,,,,,,,NO,,
S1568,3,bkwd,webpage,,,,,"Application domains of robotic systems are growing in complexity. It seems therefore plausible that robotic software will continue to be designed to be executed on distributed computer architectures interconnected through a network. It is a common practice today to rely on best-effort performance and assume that the latter are adequate given enough computational and networking resources. This approach however does not make best use of the available resources and, maybe more importantly, does not guarantee that performance remain constant over time. Real-time and Quality of Service become therefore important aspects in the software architecture of a robot. This article describes an approach for introducing these concepts in a publish-subscribe software middleware. The key contribution of our approach is that it leverages on the services provided by the operating system (scheduling priority and packet QoS) and abstracts them in a set of levels of priority that can be assigned dynamically, and with the granularity of individual communication channels. We implemented our approach on the YARP middleware and performed an experimental evaluation that demonstrates its benefit for increasing determinism and reducing latency in data communication. We further demonstrate this in a real-robot experiment that shows increased performance in a closed-loop scenario.",,A best-effort approach for run-time channel prioritization in real-time robotic application,,,,,x,,,,,,NO,,
S1499,3,bkwd,journalArticle,2008,"Emanuelsson, Pär; Nilsson, Ulf",Electronic Notes in Theoretical Computer Science,10.1016/j.entcs.2008.06.039,"Tools based on static analysis can be used to find defects in programs. Tools that do shallow analyses based on pattern matching have existed since the 1980's and although they can analyze large programs they have the drawback of producing a massive amount of warnings that have to be manually analyzed to see if they are real defects or not. Recent technology advances has brought forward tools that do deeper analyses that discover more defects and produce a limited amount of false warnings. These tools can still handle large industrial applications with millions lines of code. This article surveys the underlying supporting technology of three state-of-the-art static analysis tools. The survey relies on information in research articles and manuals, and includes the types of defects checked for (such as memory management, arithmetics, security vulnerabilities), soundness, value and aliasing analyses, incrementality and IDE integration. This survey is complemented by practical experiences from evaluations at the Ericsson telecom company.",dataflow analysis; defects; security vulnerabilities; Static analysis,A Comparative Study of Industrial Static Analysis Tools,x,,,,,,,,,,NO,,
S1512,3,bkwd,conferencePaper,2017,"Di Franco, Anthony; Guo, Hui; Rubio-González, Cindy",2017 32nd IEEE/ACM International Conference on Automated Software Engineering (ASE),10.1109/ASE.2017.8115662,"Numerical software is used in a wide variety of applications including safety-critical systems, which have stringent correctness requirements, and whose failures have catastrophic consequences that endanger human life. Numerical bugs are known to be particularly difficult to diagnose and fix, largely due to the use of approximate representations of numbers such as floating point. Understanding the characteristics of numerical bugs is the first step to combat them more effectively. In this paper, we present the first comprehensive study of real-world numerical bugs. Specifically, we identify and carefully examine 269 numerical bugs from five widely-used numerical software libraries: NumPy, SciPy, LAPACK, GNU Scientific Library, and Elemental. We propose a categorization of numerical bugs, and discuss their frequency, symptoms and fixes. Our study opens new directions in the areas of program analysis, testing, and automated program repair of numerical software, and provides a collection of real-world numerical bugs.",Computer bugs; Libraries; Maintenance engineering; Roundoff errors; Semantics; Software; Tools,A comprehensive study of real-world numerical bug characteristics,x,,,,,,,,,,NO,,
S1520,3,bkwd,conferencePaper,2018,"Ratti, Nisha; Kaur, Parminder",Advances in Computer and Computational Sciences,10.1007/978-981-10-3773-3_33,"Component-based approach has been used for programming widely. Some problems creep up as softwares are developed using commercial-off-the-shelf components (COTS). Important issues related to component-based development has been addressed in this paper. As COTS components are used for developing software, there is a problem of coupling and cohesion. Another problem to be handled is to track the changes made in the source code during the development. Different available tools for the same purposes are studied and analysed. It is found that there is a need to design a tool which can manage all the already discussed problems in an efficient manner. The proposed tool will try to give the solution in order to manage the configuration of the system efficiently.",Code dependencies; Component; Component-Based systems; Configuration management; Version control system,A Conceptual Framework for Analysing the Source Code Dependencies,x,,,,,,,,,,NO,,
S1503,3,bkwd,conferencePaper,2016,"Santos, André; Cunha, Alcino; Macedo, Nuno; Lourenço, Cláudio",2016 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS.2016.7759661,"Robots are being increasingly used in safety-critical contexts, such as transportation and health. The need for flexible behavior in these contexts, due to human interaction factors or unstructured operating environments, led to a transition from hardware- to software-based safety mechanisms in robotic systems, whose reliability and quality is imperative to guarantee. Source code static analysis is a key component in formal software verification. It consists on inspecting code, often using automated tools, to determine a set of relevant properties that are known to influence the occurrence of defects in the final product. This paper presents HAROS, a generic, plug-in-driven, framework to evaluate code quality, through static analysis, in the context of the Robot Operating System (ROS), one of the most widely used robotic middleware. This tool (equipped with plug-ins for computing metrics and conformance to coding standards) was applied to several publicly available ROS repositories, whose results are also reported in the paper, thus providing a first overview of the internal quality of the software being developed in this community.",Context; Measurement; Safety; Service robots; Software; Standards,A framework for quality assessment of ROS repositories,,,,,,,x,,,,NO,,
S1524,3,bkwd,conferencePaper,2016,"Santos, André; Cunha, Alcino; Macedo, Nuno; Lourenço, Cláudio",2016 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS.2016.7759661,"Robots are being increasingly used in safety-critical contexts, such as transportation and health. The need for flexible behavior in these contexts, due to human interaction factors or unstructured operating environments, led to a transition from hardware- to software-based safety mechanisms in robotic systems, whose reliability and quality is imperative to guarantee. Source code static analysis is a key component in formal software verification. It consists on inspecting code, often using automated tools, to determine a set of relevant properties that are known to influence the occurrence of defects in the final product. This paper presents HAROS, a generic, plug-in-driven, framework to evaluate code quality, through static analysis, in the context of the Robot Operating System (ROS), one of the most widely used robotic middleware. This tool (equipped with plug-ins for computing metrics and conformance to coding standards) was applied to several publicly available ROS repositories, whose results are also reported in the paper, thus providing a first overview of the internal quality of the software being developed in this community.",Context; Measurement; Safety; Service robots; Software; Standards,A framework for quality assessment of ROS repositories,,,,,,,,,x,,NO,,
S1494,3,fwd,conferencePaper,2019,"von Zabiensky, Florian; Kreutzer, Michael; Bienhaus, Diethelm",Intelligent Human Systems Integration 2019,10.1007/978-3-030-11051-2_81,"Electronic Travel Aids (ETAs) are devices that support people who are blind or visual impaired in tasks as obstacle detection/avoidance or navigation. ETAs consist of sensing, processing and presentation components. Many research projects develop new kinds of ETAs, introducing new presentation or sensing components. An optimal ETA should be a distributed system where each component is a communicating node. In this work we propose an MDD workflow to develop distributed ETAs. This workflow uses AADL to describe the system, its components and their communication. This supports an easy exchange of a component in its system model. So, research projects, for new presentation devices or presentation components, only have to change the node they are working on instead of developing a whole new system. Automatic code generation assures that the newly developed ETA component fits into the system.",AADL; Development workflow; Electronic travel aids; MDD; ROS 2,A Model Driven Development Approach Using AADL and Code Generation to Develop Modular Distributed Electronic Travel Aid Devices,,,,,,,x,,,,NO,,
S1509,3,bkwd,journalArticle,2018,"Black, Paul E.",Journal of Research of the National Institute of Standards and Technology,10.6028/jres.123.005,"The Software Assurance Reference Dataset (SARD) is a growing collection of over 170 000 programs with precisely located bugs. The programs are in C, C++, Java, PHP, and C# and cover more than 150 classes of weaknesses, such as SQL injection, cross-site scripting (XSS), buffer overflow, and use of a broken cryptographic algorithm. Most are automatically generated synthetic programs, each a few pages of code long, but there are also over 7000 full-sized applications. In addition, SARD has production code and has hundreds of cases written by hand. The code is typical quality. It is neither pristine nor obfuscated. Many cases have corresponding “good” cases, in which weaknesses are fixed, to test for false positives.",,A Software Assurance Reference Dataset: Thousands of Programs With Known Bugs,x,,,,,,,,,,NO,,
S1518,3,bkwd,conferencePaper,2015,"Neron, Pierre; Tolmach, Andrew; Visser, Eelco; Wachsmuth, Guido",Programming Languages and Systems,10.1007/978-3-662-46669-8_9,"We describe a language-independent theory for name binding and resolution, suitable for programming languages with complex scoping rules including both lexical scoping and modules. We formulate name resolution as a two-stage problem. First a language-independent scope graph is constructed using language-specific rules from an abstract syntax tree. Then references in the scope graph are resolved to corresponding declarations using a language-independent resolution process. We introduce a resolution calculus as a concise, declarative, and languageindependent specification of name resolution. We develop a resolution algorithm that is sound and complete with respect to the calculus. Based on the resolution calculus we develop language-independent definitions of α-equivalence and rename refactoring. We illustrate the approach using a small example language with modules. In addition, we show how our approach provides a model for a range of name binding patterns in existing languages.",Abstract Syntax Tree; Binding Pattern; Code Completion; Resolution Algorithm; Visibility Policy,A Theory of Name Resolution,x,,,,,,,,,,NO,,
S1516,3,bkwd,conferencePaper,2010,"Sahoo, Swarup Kumar; Criswell, John; Adve, Vikram",2010 ACM/IEEE 32nd International Conference on Software Engineering,10.1145/1806799.1806870,"Reproducing bug symptoms is a prerequisite for performing automatic bug diagnosis. Do bugs have characteristics that ease or hinder automatic bug diagnosis? In this paper, we conduct a thorough empirical study of several key characteristics of bugs that affect reproducibility at the production site. We examine randomly selected bug reports of six server applications and consider their implications on automatic bug diagnosis tools. Our results are promising. From the study, we find that nearly 82% of bug symptoms can be reproduced deterministically by re-running with the same set of inputs at the production site. We further find that very few input requests are needed to reproduce most failures; in fact, just one input request after session establishment suffices to reproduce the failure in nearly 77% of the cases. We describe the implications of the results on reproducing software failures and designing automated diagnosis tools for production runs.",bug characteristics; bug reports; Computer bugs; Databases; network servers; Production; Protocols; Reliability; Servers; Software; testing,An empirical study of reported bugs in server software with implications for automated bug diagnosis,x,,,,,,,,,,NO,,
S1484,3,fwd,conferencePaper,2021,"Wang, Dinghua; Li, Shuqing; Xiao, Guanping; Liu, Yepang; Sui, Yulei",Proceedings of the 29th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering,10.1145/3468264.3468559,"Unmanned aerial vehicles (UAVs) are becoming increasingly important and widely used in modern society. Software bugs in these systems can cause severe issues, such as system crashes, hangs, and undefined behaviors. Some bugs can also be exploited by hackers to launch security attacks, resulting in catastrophic consequences. Therefore, techniques that can help detect and fix software bugs in UAVs are highly desirable. However, although there are many existing studies on bugs in various types of software, the characteristics of UAV software bugs have never been systematically studied. This impedes the development of tools for assuring the dependability of UAVs. To bridge this gap, we conducted the first large-scale empirical study on two well-known open-source autopilot software platforms for UAVs, namely PX4 and Ardupilot, to characterize bugs in UAVs. Through analyzing 569 bugs from these two projects, we observed eight types of UAV-specific bugs (i.e., limit, math, inconsistency, priority, parameter, hardware support, correction, and initialization) and learned their root causes. Based on the bug taxonomy, we summarized common bug patterns and repairing strategies. We further identified five challenges associated with detecting and fixing such UAV-specific bugs. Our study can help researchers and practitioners to better understand the threats to the dependability of UAV systems and facilitate the future development of UAV bug diagnosis tools.",empirical study; software bugs; Unmanned aerial vehicles,An exploratory study of autopilot software bugs in unmanned aerial vehicles,x,,,,,,,,,,NO,,
S1540,3,bkwd,conferencePaper,2011,"Olson, Edwin",2011 IEEE International Conference on Robotics and Automation,10.1109/ICRA.2011.5979561,"While the use of naturally-occurring features is a central focus of machine perception, artificial features (fiducials) play an important role in creating controllable experiments, ground truthing, and in simplifying the development of systems where perception is not the central objective. We describe a new visual fiducial system that uses a 2D bar code style ""tag"", allowing full 6 DOF localization of features from a single image. Our system improves upon previous systems, incorporating a fast and robust line detection system, a stronger digital coding system, and greater robustness to occlusion, warping, and lens distortion. While similar in concept to the ARTag system, our method is fully open and the algorithms are documented in detail.",Detectors; Encoding; Image segmentation; Payloads; Robots; Robustness; Visualization,AprilTag: A robust and flexible visual fiducial system,x,,,,,,,,,,NO,,
S1567,3,bkwd,journalArticle,2015,"Ore, John-Paul; Elbaum, Sebastian; Burgin, Amy; Detweiler, Carrick",Journal of Field Robotics,10.1002/rob.21591,"Obtaining spatially separated, high-frequency water samples from rivers and lakes is critical to enhance our understanding and effective management of freshwater resources. In this work, we present an aerial water sampler and assess the system through field experiments. The aerial water sampler has the potential to vastly increase the speed and range at which scientists obtain water samples while reducing cost and effort. The water sampling system includes 1) a mechanism to capture three 20 ml samples per mission, 2) sensors and algorithms for altitude approximation over water, and 3) software components that integrate and analyze sensor data, control the vehicle, drive the sampling mechanism, and manage risk. We validate the system in the lab, characterize key sensors, develop a framework for quantifying risk, and present results of outdoor experiments that characterize the performance of the system under windy conditions. In addition, we compare water samples from local lakes obtained by our system to samples obtained by traditional sampling techniques. We find that even winds of 5.8 m/s have little impact on the water sampling system and that the samples collected are consistent with traditional techniques for most properties. These experiments show that despite the challenges associated with flying precisely over water, it is possible to quickly obtain scientifically useful water samples with an unmanned aerial vehicle.",,Autonomous Aerial Water Sampling,,x,,,,,,,,,NO,,
S1548,3,bkwd,conferencePaper,2014,"Bubeck, Alexander; Weisshardt, Florian; Verl, Alexander",ISR/Robotik 2014; 41st International Symposium on Robotics,,Software integration is still a challenging and time consuming task and therefore a major part of the development of industrial and domestic service robot applications. The presented toolchain BRIDE is able to streamline this process by the separation of user roles and the separation of developer concerns of software components to ensure a frame-work independent implementation. The impact of the BRIDE toolchain in the development process is demonstrated in a case study on the SyncMM mobile manipulation control framework.,,BRIDE - A toolchain for framework-independent development of industrial service robot applications,x,,,,,,,,,,NO,,
S1510,3,bkwd,journalArticle,2015,"Doychev, Goran; Köpf, Boris; Mauborgne, Laurent; Reineke, Jan",ACM Transactions on Information and System Security,10.1145/2756550,"We present CacheAudit, a versatile framework for the automatic, static analysis of cache side channels. CacheAudit takes as input a program binary and a cache configuration and derives formal, quantitative security guarantees for a comprehensive set of side-channel adversaries, namely, those based on observing cache states, traces of hits and misses, and execution times. Our technical contributions include novel abstractions to efficiently compute precise overapproximations of the possible side-channel observations for each of these adversaries. These approximations then yield upper bounds on the amount of information that is revealed. In case studies, we apply CacheAudit to binary executables of algorithms for sorting and encryption, including the AES implementation from the PolarSSL library, and the reference implementations of the finalists of the eSTREAM stream cipher competition. The results we obtain exhibit the influence of cache size, line size, associativity, replacement policy, and coding style on the security of the executables and include the first formal proofs of security for implementations with countermeasures such as preloading and data-independent memory access patterns.",caches; Side-channel attacks,CacheAudit: A Tool for the Static Analysis of Cache Side Channels,x,,,,,,,,,,NO,,
S1495,3,fwd,conferencePaper,2019,"Pichler, Marc; Dieber, Bernhard; Pinzger, Martin",2019 Third IEEE International Conference on Robotic Computing (IRC),10.1109/IRC.2019.00020,"Since its beginnings ten years ago, the Robot Operating System (ROS) has created a huge community of developers and researchers and is now the most widespread open-source framework for robotics development. It is used in research, prototyping but also in commercial products and supports a wide range of robotic platforms, sensors and highlevel data processing functions. While for a research platform, quality of the software developed with it is typically of lower importance, ROS is gradually moving towards industrial applications making software quality a premier topic. In this paper, we want to gain insights on how ROS is used in practice, how high the quality of the ROS packages and applications is, and where potential pitfalls in the use of ROS lie. To achieve this, we have analyzed several thousands of open-source ROS packages found on GitHub and Bitbucket for their quality and their interdependencies. Our results include packages on the rosdistro index and, more importantly, packages that are not. From our results we show common issues in ROS-applications, quality implications, and also which packages of what quality are particularly popular.",dependency analysis; Indexes; Open source software; repository quality; ros; Service robots; software quality; Software quality; Tools,Can I Depend on you? Mapping the Dependency and Quality Landscape of ROS Packages,,,,,,,x,,,,NO,,
S1571,3,bkwd,conferencePaper,2005,"Ren, Xiaoxia; Ryder, B.G.; Stoerzer, M.; Tip, F.","Proceedings. 27th International Conference on Software Engineering, 2005. ICSE 2005.",10.1109/ICSE.2005.1553643,"Chianti is a change impact analysis tool for Java that is implemented in the context of the eclipse environment. Chianti analyzes two versions of a Java program, decomposes their difference into a set of atomic changes, and a partial order inter-dependences of these changes is calculated. Change impact is then reported in terms of affected (regression or unit) tests whose execution behavior may have been modified by the applied changes. For each affected test, Chianti also determines a set of affecting changes that were responsible for the test's modified behavior. This latter step of isolating failure inducing changes for one specific test from irrelevant changes can be used as a debugging technique in situations where a test fails unexpectedly after a long editing session.",Algorithm design and analysis; Debugging; Java; Logic programming; Logic testing; Object oriented programming; Programming profession; Software engineering; Software systems; Software testing,Chianti: a change impact analysis tool for Java programs,,,,x,,,,,,,NO,,
S1572,3,bkwd,conferencePaper,2015,"Rusakov, Andrey; Shin, Jiwon; Meyer, Bertrand",2015 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS.2015.7353865,"Software design patterns are reusable solutions to commonly occurring problems in software development. Growing complexity of robotics software increases the importance of applying proper software engineering principles and methods such as design patterns to robotics. Concurrency design patterns are particularly interesting to robotics because robots often have many components that can operate in parallel. However, there has not yet been any established set of reusable concurrency design patterns for robotics. For this purpose, we choose six known concurrency patterns - Future, Periodic timer, Invoke later, Active object, Cooperative cancellation, and Guarded suspension. We demonstrate how these patterns could be used for solving common robotic coordination tasks. We also discuss advantages and disadvantages of the patterns and how existing robotics programming frameworks can support them.",Concurrent computing; Programming; Robot kinematics; Robot sensing systems; Software; Software engineering,Concurrency patterns for easier robotic coordination,,x,,,,,,,,,NO,,
S1544,3,bkwd,conferencePaper,2014,"Weng Wong, Kai; Ehlers, Rüdiger; Kress-Gazit, Hadas",Robotics: Science and Systems X,10.15607/RSS.2014.X.012,"Synthesis of correct-by-construction robot controllers from high-level speciﬁcations has the advantage of providing guaranteed robot behavior under different environments. Typically, when such controllers are synthesized, assumptions that the user makes about the behavior of the environment, if any, are incorporated into the resulting controller. In practice, however, the environment assumptions may be unknown to the user, thus preventing the application of synthesis. Even if environment assumptions are available, they may not hold during the robot’s execution due to modeling errors or unforeseen anomalous operating conditions.",,Correct High-level Robot Behavior in Environments with Unexpected Events,x,,,,,,,,,,NO,,
S1519,3,bkwd,conferencePaper,2012,"Pfeiffer, Rolf-Helge; Wąsowski, Andrzej",Model Driven Engineering Languages and Systems,10.1007/978-3-642-33666-9_12,"Contemporary software systems combine many artifacts specified in various modeling and programming languages, domainspecific and general purpose as well. Since multi-language systems are so widespread, working on them calls for tools with cross-language support mechanisms such as (1) visualization, (2) static checking, (3) navigation, and (4) refactoring of cross-language relations. We investigate whether these four mechanisms indeed improve efficiency and quality of development of multi-language systems. We run a controlled experiment in which 22 participants perform typical software evolution tasks on the JTrac web application using a prototype tool implementing these mechanisms. The results speak clearly for integration of cross-language support mechanisms into software development tools, and justify research on automatic inference, manipulation and handling of cross-language relations.",Error Marker; Experienced Developer; Java Code; Source Code; Static Check,Cross-Language Support Mechanisms Significantly Aid Software Development,x,,,,,,,,,,NO,,
S1488,3,fwd,conferencePaper,2019,"Sandoval, Sergio; Thulasiraman, Preetha",2019 IEEE International Systems Conference (SysCon),10.1109/SYSCON.2019.8836824,"The Robot Operating System (ROS) is a widely adopted standard robotic middleware. However, its preliminary design is devoid of any network security features. Military grade unmanned systems must be guarded against network threats. ROS 2 is built upon the Data Distribution Service (DDS) standard and is designed to provide solutions to identified ROS 1 security vulnerabilities by incorporating authentication, encryption, and process profile features, which rely on public key infrastructure. The Department of Defense is looking to use ROS 2 for its military-centric robotics platform. This paper seeks to demonstrate that ROS 2 and its DDS security architecture can serve as a functional platform for use in military grade unmanned systems, particularly in unmanned Naval aerial swarms. In this paper, we focus on the viability of ROS 2 to safeguard communications between swarms and a ground control station (GCS). We test ROS 2's ability to mitigate and withstand certain cyber threats, specifically that of rogue nodes injecting unauthorized data and accessing services that will disable parts of the UAV swarm. We use the Gazebo robotics simulator to target individual UAVs to ascertain the effectiveness of our attack vectors under specific conditions. We demonstrate the effectiveness of ROS 2 in mitigating the chosen attack vectors but observed a measurable operational delay within our simulations.",Authentication; autonomous systems; cyber security; Drones; Encryption; Robots; ROS; Standards; UAV swarms,Cyber Security Assessment of the Robot Operating System 2 for Aerial Networks,,x,,,,,,,,,NO,,
S1489,3,fwd,report,2018,"Sandoval, Sergio",,,"Unmanned systems have gained in prominence as platforms from which to conduct military operations. The Robot Operating System ROS is a widely adopted standard robotic middleware however, its preliminary design is devoid of any network security features. Military grade unmanned systems must be guarded against network threats. ROS 2.0 is built upon the Data Distribution Service standard and is designed to provide solutions to identified ROS 1.0 security vulnerabilities by incorporating authentication, encryption, and process profile features. The Department of Defense is looking to use ROS 2.0 for its military-centric robotics platform. Through our work, we demonstrated that ROS 2.0 can serve as a functional platform for use in military grade unmanned systems. We tested the viability of ROS 2.0 to safeguard communications between an unmanned aerial swarm and a ground control station against rogue node and message-spoofing attacks. Our experiments employ the PX4 Multi Vehicle Simulation swarming three iris-quadcopter aerial drones within a Gazebo 9 simulation environment, utilizing QGroundControl as our ground control station. Drones were targeted individually to ascertain the effectiveness of our attack vectors under specific conditions. We demonstrated the effectiveness of ROS 2.0 in mitigating the chosen attack vectors but observed a measurable operational delay within our simulations.",,Cyber Security Testing of the Robot Operating System in Unmanned Aerial Systems,,,x,,,,,,,,NO,,
S1505,3,bkwd,conferencePaper,2008,"Sha, Lui; Gopalakrishnan, Sathish; Liu, Xue; Wang, Qixin","2008 IEEE International Conference on Sensor Networks, Ubiquitous, and Trustworthy Computing (sutc 2008)",10.1109/SUTC.2008.85,"The report of the President's Council of Advisors on Science and Technology (PCAST) has placed CPS on the top of the priority list for federal research investment [6]. This article first reviews some of the challenges and promises of CPS, followed by an articulation of some specific challenges and promises that are more closely related to the sensor networks, ubiquitous and trustworthy computing conference.",Aging; Computer networks; Costs; Councils; Diseases; Energy consumption; Pervasive computing; Physics computing; Sensor systems; Transportation,Cyber-Physical Systems: A New Frontier,x,,,,,,,,,,NO,,
S1483,3,fwd,conferencePaper,2020,"Wąsowski, Andrzej",Proceedings of the 14th International Working Conference on Variability Modelling of Software-Intensive Systems,10.1145/3377024.3377712,"For years, the software reuse community (including the variability community) has used cost reduction as the main argument for software reuse. Software reuse methods are often contrasted with cloning[9]. We commonly hear that already when a piece of code, a subsystem or a product, would be copied three times, it pays off to manage a single generalized reusable artifact [8]. Evolving software from cloned to integrated variants is seen as a maturation [2].",dependency bugs; evolution; robot operating system; software reuse; technical debt,"Dependency bugs: the dark side of variability, reuse and modularity",x,,,,,,,,,,NO,,
S1558,3,bkwd,conferencePaper,2016,"Cai, Haipeng; Thain, Douglas",2016 31st IEEE/ACM International Conference on Automated Software Engineering (ASE),,"Dynamic impact analysis is a fundamental technique for understanding the impact of specific program entities, or changes to them, on the rest of the program for concrete executions. However, existing techniques are either inapplicable or of very limited utility for distributed programs running in multiple concurrent processes. This paper presents DISTIA, a dynamic analysis of distributed systems that predicts impacts propagated both within and across process boundaries by partially ordering distributed method-execution events, inferring causality from the ordered events, and exploiting message-passing semantics. We applied DISTIA to large distributed systems of various architectures and sizes, for which it on average finishes the entire analysis within one minute and safely reduces impact-set sizes by over 43% relative to existing options with run-time overhead less than 8%. Moreover, two case studies initially demonstrated the precision of DISTIA and its utility in distributed system understanding. While conservative thus subject to false positives, DistIA balances precision and efficiency to offer cost-effective options for evolving distributed programs.",Algorithm design and analysis; Clocks; distributed systems; dynamic partial ordering; Heuristic algorithms; Impact analysis; Message passing; Performance analysis; Servers; Software,DistIA: A cost-effective dynamic impact analysis for distributed programs,x,,,,,,,,,,NO,,
S1536,3,bkwd,conferencePaper,2016,"Lauer, Michael; Amy, Matthieu; Fabre, Jean-Charles; Roy, Matthieu; Excoffon, William; Stoicescu, Miruna",2016 IEEE 17th International Symposium on High Assurance Systems Engineering (HASE),10.1109/HASE.2016.30,"Systems are expected to evolve during their service life in order to cope with changes of various natures, ranging from fluctuations in available resources to additional features requested by users. For dependable embedded systems, the challenge is even greater, as evolution must not impair dependability attributes. Resilient computing implies maintaining dependability properties when facing changes. Resilience encompasses several aspects, among which evolvability, i.e., the capacity of a system to evolve during its service life. In this paper, we discuss the evolution of systems with respect to their dependability mechanisms, and show how such mechanisms can evolve accordingly. From a component-based approach that enables to clarify the concepts, the process and the techniques to be used to address resilient computing, in particular regarding the adaptation of fault tolerance (or safety) mechanisms, we show how Adaptive Fault Tolerance (AFT) can be implemented with ROS. Beyond implementation, we draw the lessons learned from this work and discuss the limits of this runtime support to implement such resilient computing features in embedded systems.",Adaptation models; adaptive fault-tolerance; component-based software engineering; Fault tolerance; Fault tolerant systems; Hardware; Resilient computing; ROS; Runtime; Safety; Software,Engineering Adaptive Fault-Tolerance Mechanisms for Resilient Computing on ROS,,x,,,,,,,,,NO,,
S1506,3,bkwd,conferencePaper,2018,"Toscano, César; Arrais, Rafael; Veiga, Germano",ROBOT 2017: Third Iberian Robotics Conference,10.1007/978-3-319-70836-2_51,"This paper proposes a logistic planner with supplementary 3D spatial representations to enhance and interact with traditional logistic systems on the context of mobile manipulators performing internal logistics operations. By defining a hierarchical structure, the logistic world model, as the central entity synchronized between multiple system components, the reliability and accuracy of the logistic system is strengthened. The proposed approach aims at implementing a robust and intuitive solution for the set-up of mobile manipulator based logistic systems. The logistic planner includes a web based interface for fast setup of the warehouse layout based on robot sensing, as well as the definition of missions for the fleet of robotic systems.",Cyber-physical systems; Logistic system; Mobile manipulators; Service-oriented architectures; Vertical integration; World model,Enhancement of Industrial Logistic Systems with Semantic 3D Representations for Mobile Manipulators,x,,,,,,,,,,NO,,
S1569,3,bkwd,conferencePaper,2012,"Purandare, Rahul; Darsie, Javier; Elbaum, Sebastian; Dwyer, Matthew B.",2012 IEEE/RSJ International Conference on Intelligent Robots and Systems,10.1109/IROS.2012.6385719,"Modern robotics systems rely on distributed event-based frameworks to facilitate the assembly of software out of collections of reusable components. These frameworks express component dependencies in data that encode event publish-subscribe relations. This loosely coupled architecture makes it difficult for developers to understand the dependencies and to predict the impacts of a change to a component as the components grow in number and complexity. Moreover, this encoding of dependencies renders traditional techniques for analyzing component dependencies inapplicable, because the dependencies are bound by communication channels rather than data. In this work, we present a program analysis technique that automatically extracts a model of component dependencies from distributed system source code. This model identifies not only the temporal dependencies among components, but also the conditions under which those dependencies are realized. We have implemented the analysis and applied it to systems developed in ROS. The resulting models are succinct and precise, which suggests that programmers will find them comprehensible, and they can be used to document important global dependencies in a system, to compare different versions to identify the impacts of component changes, and to help locate errors.",Analytical models; Complexity theory; Computer architecture; Grammar; Robots; Software; Torso,Extracting conditional component dependence for distributed robotic systems,,,,,,,x,,,,NO,,
S1513,3,bkwd,conferencePaper,2007,"Hovemeyer, David; Pugh, William",Proceedings of the 7th ACM SIGPLAN-SIGSOFT workshop on Program analysis for software tools and engineering,10.1145/1251535.1251537,"In the summer of 2006, the FindBugs project was challenged to improve the null pointer analysis in FindBugs so that we could find more null pointer bugs. In particular, we were challenged to try to do as well as a publicly available analysis by Reasoning, Inc on version 4.1.24 of Apache Tomcat. Reasoning's report is a result of running their own static analysis tool and using manual auditing to remove false positives. Reasoning reported a total of 9 null pointer warnings in Tomcat 4.1.24, of which only 2 were reported by FindBugs 1.0. While we wanted to improve the analysis in FindBugs, we wanted to retain our current low level of false positives. As of result of the work presented in this paper, FindBugs now reports 4 of the 9 warnings in Tomcat, shows that one of the warnings reported by Reasoning is a false positive, and classifies the remaining 4 as being dependent on the feasibility of a particular path, which cannot be easier ascertained by a local examination of the source code. Moreover, we found 24 additional null pointer bugs in Tomcat that had been missed by Reasoning, and overall doubled the number of null pointer bugs found by FindBugs while improving the quality and significance of reported defects.",bug patterns; bugs; FindBugs; Java; null pointers; software quality; static analysis,"Finding more null pointer bugs, but not too many",x,,,,,,,,,,NO,,
S1533,3,bkwd,conferencePaper,2016,"Hua, Yingbing; Zander, Stefan; Bordignon, Mirko; Hein, Björn",2016 IEEE 21st International Conference on Emerging Technologies and Factory Automation (ETFA),10.1109/ETFA.2016.7733579,"One of the major investment for applying industrial robots in production resides in the software development, which is an interdisciplinary and heterogeneous engineering process. This paper presents a novel model-driven approach that uses AutomationML as modeling framework and ontological reasoning as inference framework for constructing robotic application using Robot Operating System (ROS). We show how different robotic components can be classified and modeled with AutomationML, how these components can be composed together to a production system, and how the AutomationML models can be processed semantically by utilizing Semantic Web technologies and ontological reasoning. By applying model-to-text transformation techniques, executable ROS code can be generated from the models that foster fast prototyping and the reuse of robotic software.",Automation; Ontologies; Semantics; Service robots; Software; Unified modeling language,From AutomationML to ROS: A model-driven approach for software engineering of industrial robotics using ontological reasoning,,,,,,,x,,,,NO,,
S1551,3,bkwd,journalArticle,2008,"Hugues, Jerome; Zalila, Bechir; Pautet, Laurent; Kordon, Fabrice",ACM Transactions on Embedded Computing Systems,10.1145/1376804.1376810,"Building distributed deal-time embedded systems requires a stringent methodology, from early requirement capture to full implementation. However, there is a strong link between the requirements and the final implementation (e.g., scheduling and resource dimensioning). Therefore, a rapid prototyping process based on automation of tedious and error-prone tasks (analysis and code generation) is required to speed up the development cycle. In this article, we show how the AADL (Architecture Analysis and Design Language), which appeared in late 2004, helps solve these issues thanks to a dedicated tool suite. We then detail the prototyping process and its current implementation: Ocarina.",AADL; distributed; DRE; embedded; Ocarina; PolyORB-HI; real-time,From the prototype to the final embedded system using the Ocarina AADL tool suite,,,,,,,x,,,,NO,,
S1560,3,bkwd,conferencePaper,2002,"Ellson, John; Gansner, Emden; Koutsofios, Lefteris; North, Stephen C.; Woodhull, Gordon",Graph Drawing,10.1007/3-540-45848-4_57,"Graphviz is a heterogeneous collection of graph drawing tools containing batch layout programs (dot, neato, fdp, twopi); a platform for incremental layout (Dynagraph); customizable graph editors (dotty, Grappa); a server for including graphs in Web pages (WebDot); support for graphs as COM objects (Montage); utility programs useful in graph visualization; and libraries for attributed graphs. The software is available under an Open Source license. The article[1] provides a detailed description of the package.",,Graphviz— Open Source Graph Drawing Tools,,,,x,,,,,,,NO,,
S1542,3,bkwd,conferencePaper,2015,"Ruiz, Elvis; Acuña, Raul; Véélez, Pedro; Fernández-López, Gerardo",2015 12th Latin American Robotics Symposium and 2015 3rd Brazilian Symposium on Robotics (LARS-SBR),10.1109/LARS-SBR.2015.24,"Autonomous navigation involves solving problems of perception, localization, planning and control. Based on how these problems can be solved it is possible to have a deliberative, reactive or deliberative-reactive (hybrid) navigation. Additionally, navigation must meet security requirements for both the robot and humans operating in the same workspace. Thus, a navigation system for differential hybrid mobile robots in structured environments was designed, which integrates the advantages of a high level deliberative planner with a reactive low-level control and easing some of its weaknesses. For this, a fuzzy logic controller was implemented. The proposed system was tested with a simulated robot Amigobot with a Kinect sensor using V-REP and ROS.",control; Fuzzy control; Fuzzy logic; Kinect; mobile robots; Navigation; path-planning; Robot sensing systems; ROS; Security; Yttrium,Hybrid Deliberative Reactive Navigation System for Mobile Robots Using ROS and Fuzzy Logic Control,,x,,,,,,,,,NO,,
S1562,3,bkwd,conferencePaper,2013,"Garcia, Joshua; Popescu, Daniel; Safi, Gholamreza; Halfond, William G. J.; Medvidovic, Nenad",Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering,10.1145/2491411.2491462,"Distributed event-based (DEB) systems contain highly-decoupled components that interact by exchanging messages. This enables flexible system composition and adaptation, but also makes DEB systems difficult to maintain. Most existing program analysis techniques to support maintenance are not well suited to DEB systems, while those that are tend to suffer from inaccuracy or make assumptions that limit their applicability. This paper presents Eos, a static analysis technique that identifies message information useful for maintaining a DEB system, namely, message types and message flow within a system. Eos has been evaluated on six off-the-shelf DEB systems spanning five different middleware platforms, and has exhibited excellent accuracy and efficiency. Furthermore, a case study involving a range of maintenance activities undertaken on three existing DEB systems shows that, on average, Eos enables an engineer to identify the scope and impact of required changes more accurately than existing alternatives.",distributed event-based systems; maintenance; message flow,Identifying message flow in distributed event-based systems,,x,,,,,,,,,NO,,
S1557,3,bkwd,conferencePaper,1993,"Arnold, R.S.; Bohner, S.A.",1993 Conference on Software Maintenance,10.1109/ICSM.1993.366933,"The term impact analysis is used with many meanings. A three-part framework for characterizing and comparing diverse impact analysis approaches is defined. The parts correspond to how an approach is used to accomplish impact analysis, how an approach does impact analysis internally, and the effectiveness of the impact analysis approach. To illustrate the framework's application, five impact analysis approaches are illustrated according to it.<>",Inspection; Software engineering; Software systems; Software tools; Terminology,Impact analysis-Towards a framework for comparison,,,,x,,,,,,,NO,,
S1563,3,bkwd,conferencePaper,2003,"Law, J.; Rothermel, G.","14th International Symposium on Software Reliability Engineering, 2003. ISSRE 2003.",10.1109/ISSRE.2003.1251064,"Impact analysis - determining the potential effects of changes on a software system - plays an important role in helping engineers revalidate modified software. In previous work we presented a new impact analysis technique. PathImpact, for performing dynamic impact analysis at the level of procedures, and we showed empirically that the technique can be cost-effective in comparison to prominent prior techniques. A drawback of that approach as presented, however, is that when attempting to apply the technique to a new version of a system as that system and its test suite evolves, the process of recomputing the data required by the technique for that version can be excessively expensive. In this paper, therefore, we present algorithms that allow the data needed by PathImpact to be collected incrementally. We present the results of a controlled experiment investigating the costs and benefits of this incremental approach relative to the approach of completely recomputing prerequisite data.",Computer science; Costs; Information analysis; Performance analysis; Risk analysis; Software measurement; Software systems; Software testing; System testing; Time factors,Incremental dynamic impact analysis for evolving software systems,,,,x,,,,,,,NO,,
S1500,3,bkwd,journalArticle,2014,"Lasi, Heiner; Fettke, Peter; Kemper, Hans-Georg; Feld, Thomas; Hoffmann, Michael",Business & Information Systems Engineering,10.1007/s12599-014-0334-4,,,Industry 4.0,x,,,,,,,,,,NO,,
S1493,3,fwd,conferencePaper,2020,"Stoll, Hannes; Koch, Eduard; Sax, Eric",2020 IEEE 23rd International Conference on Intelligent Transportation Systems (ITSC),10.1109/ITSC45102.2020.9294319,"In modern cars, software functions and services account for a large part of value creation and competitive differentiation. Several tools exist to address the development of such electrical/electronic architectures (E/E-A). In industry, the proprietary tool PREEvision developed by Vector Informatik GmbH is widely used to support the development for AUTOSAR, while in science and research, tools and ecosystems such as the Robot Operating System (ROS) are preferred because of their open-source nature. This leads to a multitude of freely available ROS components whose reusability in industrial AUTOSAR-based projects is desirable. Therefore, in this paper we present an approach to transform models between both worlds and thus to link them. This enables the further use of already existing components.",Biological system modeling; Robot sensing systems; Robots; Service robots; Software; Tools; Unified modeling language,Integration of ROS communication interfaces in a model-based tool for the description of AUTOSAR-compliant electrical/electronic architectures (E/E-A) in vehicle development,,x,,,,,,,,,NO,,
S1564,3,bkwd,book,2017,"Lee, Edward Ashford; Seshia, Sanjit A.",,,"An introduction to the engineering principles of embedded systems, with a focus on modeling, design, and analysis of cyber-physical systems.The most visible use of computers and software is processing information for human consumption. The vast majority of computers in use, however, are much less visible. They run the engine, brakes, seatbelts, airbag, and audio system in your car. They digitally encode your voice and construct a radio signal to send it from your cell phone to a base station. They command robots on a factory floor, power generation in a power plant, processes in a chemical plant, and traffic lights in a city. These less visible computers are called embedded systems, and the software they run is called embedded software. The principal challenges in designing and analyzing embedded systems stem from their interaction with physical processes. This book takes a cyber-physical approach to embedded systems, introducing the engineering concepts underlying embedded systems as a technology and as a subject of study. The focus is on modeling, design, and analysis of cyber-physical systems, which integrate computation, networking, and physical processes. The second edition offers two new chapters, several new exercises, and other improvements. The book can be used as a textbook at the advanced undergraduate or introductory graduate level and as a professional reference for practicing engineers and computer scientists. Readers should have some familiarity with machine structures, computer programming, basic discrete mathematics and algorithms, and signals and systems.",Computers / Computer Science; Technology & Engineering / Electrical,Introduction to Embedded Systems: A Cyber-Physical Systems Approach,,,,,x,,,,,,NO,,
S1522,3,bkwd,journalArticle,2005,"Rescorla, E.",IEEE Security Privacy,10.1109/MSP.2005.17,"Despite the large amount of effort that goes toward finding and patching security holes, the available data does not show a clear improvement in software quality as a result. This article aims to measure the effect of vulnerability finding. Any attempt to measure this kind of effect is inherently rough, depending as it does on imperfect data and several simplifying assumptions. Because I'm looking for evidence of usefulness, where possible, I bias such assumptions in favor of a positive result - explicitly calling out those assumptions biased in the opposite direction. Thus, the analysis in this article represents the best-case scenario, consistent with the data and my ability to analyze it, for the vulnerability finding's usefulness",blackhat; Computer security; Costs; Data privacy; Data security; Information security; Large-scale systems; Packaging; software patches; Software quality; Solid modeling; vulnerability disclosure; whitehat,Is finding security holes a good idea?,x,,,,,,,,,,NO,,
S1485,3,fwd,bookSection,2020,"Kubota, Alyssa; Peterson, Emma I. C.; Rajendren, Vaishali; Kress-Gazit, Hadas; Riek, Laurel D.",Proceedings of the 2020 ACM/IEEE International Conference on Human-Robot Interaction,,"JESSIE is a robotic system that enables novice programmers to program social robots by expressing high-level specifications. We employ control synthesis with a tangible front-end to allow users to define complex behavior for which we automatically generate control code. We demonstrate JESSIE in the context of enabling clinicians to create personalized treatments for people with mild cognitive impairment (MCI) on a Kuri robot, in little time and without error. We evaluated JESSIE with neuropsychologists who reported high usability and learnability. They gave suggestions for improvement, including increased support for personalization, multi-party programming, collaborative goal setting, and re-tasking robot role post-deployment, which each raise technical and sociotechnical issues in HRI. We exhibit JESSIE's reproducibility by replicating a clinician-created program on a TurtleBot~2. As an open-source means of accessing control synthesis, JESSIE supports reproducibility, scalability, and accessibility of personalized robots for HRI.",control synthesis; dementia; healthcare robotics; human robot interaction; neurorehabilitation; robotics,JESSIE: Synthesizing Social Robot Behaviors for Personalized Neurorehabilitation and Beyond,x,,,,,,,,,,NO,,
S1511,3,bkwd,conferencePaper,2018,"Fan, Lingling; Su, Ting; Chen, Sen; Meng, Guozhu; Liu, Yang; Xu, Lihua; Pu, Geguang; Su, Zhendong",2018 IEEE/ACM 40th International Conference on Software Engineering (ICSE),10.1145/3180155.3180222,"Mobile apps have become ubiquitous. For app developers, it is a key priority to ensure their apps' correctness and reliability. However, many apps still suffer from occasional to frequent crashes, weakening their competitive edge. Large-scale, deep analyses of the characteristics of real-world app crashes can provide useful insights to guide developers, or help improve testing and analysis tools. However, such studies do not exist - this paper fills this gap. Over a four-month long effort, we have collected 16,245 unique exception traces from 2,486 open-source Android apps, and observed that framework-specific exceptions account for the majority of these crashes. We then extensively investigated the 8,243 framework-specific exceptions (which took six person-months): (1) identifying their characteristics (e.g., manifestation locations, common fault categories), (2) evaluating their manifestation via state-of-the-art bug detection techniques, and (3) reviewing their fixes. Besides the insights they provide, these findings motivate and enable follow-up research on mobile apps, such as bug detection, fault localization and patch generation. In addition, to demonstrate the utility of our findings, we have optimized Stoat, a dynamic testing tool, and implemented ExLocator, an exception localization tool, for Android apps. Stoat is able to quickly uncover three previously-unknown, confirmed/fixed crashes in Gmail and Google+; ExLocator is capable of precisely locating the root causes of identified exceptions in real-world apps. Our substantial dataset is made publicly available to share with and benefit the community.",Androids; Computer bugs; Empirical study; Google; Humanoid robots; mobile app bugs; static analysis; testing; Testing; Tools,Large-Scale Analysis of Framework-Specific Exceptions in Android Apps,x,,,,,,,,,,NO,,
S1482,3,fwd,journalArticle,2021,"Albonico, Michel; Malavolta, Ivano; Pinto, Gustavo; Guzman, Emitza; Chinnappan, Katerina; Lago, Patricia",arXiv:2103.13762 [cs],,"Robots are becoming more and more commonplace in many industry settings. This successful adoption can be partly attributed to (1) their increasingly affordable cost and (2) the possibility of developing intelligent, software-driven robots. Unfortunately, robotics software consumes significant amounts of energy. Moreover, robots are often battery-driven, meaning that even a small energy improvement can help reduce its energy footprint and increase its autonomy and user experience. In this paper, we study the Robot Operating System (ROS) ecosystem, the de-facto standard for developing and prototyping robotics software. We analyze 527 energy-related data points (including commits, pull-requests, and issues on ROS-related repositories, ROS-related questions on StackOverflow, ROS Discourse, ROS Answers, and the official ROS Wiki). Our results include a quantification of the interest of roboticists on software energy efficiency, 10 recurrent causes, and 14 solutions of energy-related issues, and their implied trade-offs with respect to other quality attributes. Those contributions support roboticists and researchers towards having energy-efficient software in future robotics projects.",Computer Science - Robotics; Computer Science - Software Engineering,Mining Energy-Related Practices in Robotics Software,,,,,,,x,,,,NO,,
S1502,3,bkwd,conferencePaper,2017,"Santos, André; Cunha, Alcino; Macedo, Nuno; Arrais, Rafael; dos Santos, Filipe Neves",2017 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS.2017.8206237,"The Robot Operating System (ROS) is nowadays one of the most popular frameworks for developing robotic applications. To ensure the (much needed) dependability and safety of such applications we forecast an increasing demand for ROS-specific coding standards, static analyzers, and tools alike. Unfortunately, the development of such standards and tools can be hampered by ROS modularity and configurability, namely the substantial number of primitives (and respective variants) that must, in principle, be considered. To quantify the severity of this problem, we have mined a large number of existing ROS packages to understand how its primitives are used in practice, and to determine which combinations of primitives are most popular. This paper presents and discusses the results of this study, and hopefully provides some guidance for future standardization efforts and tool developers.",C++ languages; Robots; Runtime; Software; Standards; Tools,Mining the usage patterns of ROS primitives,,,,,,,x,,,,NO,,
S1523,3,bkwd,conferencePaper,2017,"Santos, André; Cunha, Alcino; Macedo, Nuno; Arrais, Rafael; dos Santos, Filipe Neves",2017 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS.2017.8206237,"The Robot Operating System (ROS) is nowadays one of the most popular frameworks for developing robotic applications. To ensure the (much needed) dependability and safety of such applications we forecast an increasing demand for ROS-specific coding standards, static analyzers, and tools alike. Unfortunately, the development of such standards and tools can be hampered by ROS modularity and configurability, namely the substantial number of primitives (and respective variants) that must, in principle, be considered. To quantify the severity of this problem, we have mined a large number of existing ROS packages to understand how its primitives are used in practice, and to determine which combinations of primitives are most popular. This paper presents and discusses the results of this study, and hopefully provides some guidance for future standardization efforts and tool developers.",C++ languages; Robots; Runtime; Software; Standards; Tools,Mining the usage patterns of ROS primitives,,,,,,,,,x,,NO,,
S1492,3,fwd,conferencePaper,2017,"Hu, Xinwen; Zhuang, Yi; Cao, Zining; Ye, Tong; Li, Mi",2017 12th International Conference on Intelligent Systems and Knowledge Engineering (ISKE),10.1109/ISKE.2017.8258789,"With the rapid development of embedded software, embedded software has a highly security demand, such as confidentiality and integrity. UML provides the foundation for the construction and analysis of embedded software, but it cannot provide accurate semantics for the validation of embedded software security properties. Using the formal method based on Z language to model the security properties of embedded software, can provide the rigorous semantics for the security properties of embedded software, which can help to discover its early design errors and reduce the cost of testing and maintenance. Developing the model transformation tool of UML model to Z model, which can avoid repetitive modeling of the manual establishment of Z model, reduce the possibility of introducing artificial logic error in the model. Verifying the correctness of the confidentiality and integrity model by using the formal verification tool Z/EVES, which can make the embedded software satisfy the user's security requirement. This paper construct the static structure model and dynamic behavior model of embedded software confidentiality and integrity modeling based on Z at first; and then establish the model transformation rules of UML modeling elements to Z modeling elements, which is designed and implemented based on the XSLT technology; finally, the formal model is validated by using the verification tool Z/EVES through the example of a bicycle parking embedded software, and the correctness of the embedded software security model presented in this paper is explained.",Access control; Computational modeling; Confidentiality; Embedded software; Integrity; Model transformation; Tools; Unified modeling language; Z language,Modeling and validation for embedded software confidentiality and integrity,x,,,,,,,,,,NO,,
S1550,3,bkwd,conferencePaper,2014,"Biggs, Geoffrey; Fujiwara, Kiyoshi; Anada, Keiju","Simulation, Modeling, and Programming for Autonomous Robots",10.1007/978-3-319-11900-7_13,"As the complexity of robots deployed in the real world increases, the use of formal specifications in the development of safety-critical robot systems is becoming increasingly important. A formal specification gives confidence in the correctness, completeness, and accuracy of a system design. In this paper, we present a formal specification of a redundant control architecture for a mobile robot in the form of a model. The model is created using the Architecture Analysis and Design Language (AADL). This formal language allows the model to be analysed to prove system properties of interest. In this case, we are interested in proving the response time of the robot to external obstacles and to internal errors. We present the model and the results of these analyses with the goal of proving that the architecture is sufficiently safe for use in a safe robot wheelchair.",Control Architecture; Drive Unit; Formal Method; International Electrotechnical Commission; Motor Controller,Modelling and Analysis of a Redundant Mobile Robot Architecture Using AADL,,x,,,,,,,,,NO,,
S1526,3,bkwd,journalArticle,2010,"Zhang, Hongyu; Kim, Sunghun",IEEE Software,10.1109/MS.2010.66,"Quality control charts, especially c-charts, can help monitor software quality evolution for defects over time. c-charts of the Eclipse and Gnome systems showed that for systems experiencing active maintenance and updates, quality evolution is complicated and dynamic. The authors identify six quality evolution patterns and describe their implications. Quality assurance teams can use c-charts and patterns to monitor quality evolution and prioritize their efforts.",maintenance management; Monitoring; Quality assurance; Quality control; quality evolution; software engineering; software quality; Software quality; software quality assurance; statistical process control,Monitoring Software Quality Evolution for Defects,x,,,,,,,,,,NO,,
S1508,3,bkwd,conferencePaper,2010,"D'Ambros, Marco; Bacchelli, Alberto; Lanza, Michele",2010 10th International Conference on Quality Software,10.1109/QSIC.2010.58,"The presence of design flaws in a software system has a negative impact on the quality of the software, as they indicate violations of design practices and principles, which make a software system harder to understand, maintain, and evolve. Software defects are tangible effects of poor software quality. In this paper we study the relationship between software defects and a number of design flaws. We found that, while some design flaws are more frequent, none of them can be considered more harmful with respect to software defects. We also analyzed the correlation between the introduction of new flaws and the generation of defects.",Computer bugs; Correlation; Couplings; Data mining; Joining processes; Software defects; Software quality and design; Software systems,On the Impact of Design Flaws on Software Defects,x,,,,,,,,,,NO,,
S1538,3,bkwd,conferencePaper,2013,"Livingston, Scott C.; Prabhakar, Pavithra; Jose, Alex B.; Murray, Richard M.",2013 IEEE International Conference on Robotics and Automation,10.1109/ICRA.2013.6631229,"We present a method for mending strategies for GR(1) specifications. Given the addition or removal of edges from the game graph describing a problem (essentially transition rules in a GR(1) specification), we apply a μ-calculus formula to a neighborhood of states to obtain a “local strategy” that navigates around the invalidated parts of an original synthesized strategy. Our method may thus avoid global resynthesis while recovering correctness with respect to the new specification. We illustrate the results both in simulation and on physical hardware for a planar robot surveillance task.",Automata; Control systems; Equations; Games; Measurement; Safety,Patching task-level robot controllers based on a local μ-calculus formula,x,,,,,,,,,,NO,,
S1514,3,bkwd,conferencePaper,2018,"Kate, Sayali; Ore, John-Paul; Zhang, Xiangyu; Elbaum, Sebastian; Xu, Zhaogui",Proceedings of the 2018 26th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering,10.1145/3236024.3236035,"Program variables used in robotic and cyber-physical systems often have implicit physical units that cannot be determined from their variable types. Inferring an abstract physical unit type for variables and checking their physical unit type consistency is of particular importance for validating the correctness of such systems. For instance, a variable with the unit of ‘meter’ should not be assigned to another variable with the unit of ‘degree-per-second’. Existing solutions have various limitations such as requiring developers to annotate variables with physical units and only handling variables that are directly or transitively used in popular robotic libraries with known physical unit information. We observe that there are a lot of physical unit hints in these softwares such as variable names and specific forms of expressions. These hints have uncertainty as developers may not respect conventions. We propose to model them with probability distributions and conduct probabilistic inference. At the end, our technique produces a unit distribution for each variable. Unit inconsistencies can then be detected using the highly probable unit assignments. Experimental results on 30 programs show that our technique can infer units for 159.3% more variables compared to the state-of-the-art with more than 88.7% true positives, and inconsistencies detection on 90 programs shows that our technique reports 103.3% more inconsistencies with 85.3% true positives.",abstract type inference; dimensional analysis; physical units; probabilistic inference; robotic systems; static analysis; unit consistency,Phys: probabilistic physical unit assignment and inconsistency detection,x,,,,,,,,,,NO,,
S1556,3,bkwd,conferencePaper,2011,"Acharya, Mithun; Robinson, Brian",2011 33rd International Conference on Software Engineering (ICSE),10.1145/1985793.1985898,"Change impact analysis, i.e., knowing the potential consequences of a software change, is critical for the risk analysis, developer effort estimation, and regression testing of evolving software. Static program slicing is an attractive option for enabling routine change impact analysis for newly committed changesets during daily software build. For small programs with a few thousand lines of code, static program slicing scales well and can assist precise change impact analysis. However, as we demonstrate in this paper, static program slicing faces unique challenges when applied routinely on large and evolving industrial software systems. Despite recent advances in static program slicing, to our knowledge, there have been no studies of static change impact analysis applied on large and evolving industrial software systems. In this paper, we share our experiences in designing a static change impact analysis framework for such software systems. We have implemented our framework as a tool called Imp and have applied Imp on an industrial codebase with over a million lines of C/ C++ code with promising empirical results.",Accuracy; Algorithm design and analysis; change impact analysis; Data structures; empirical study; Explosions; Software engineering; Software systems; static program slicing,Practical change impact analysis based on static program slicing for industrial software systems,x,,,,,,,,,,NO,,
S1543,3,bkwd,conferencePaper,2013,"Wong, Kai Weng; Finucane, Cameron; Kress-Gazit, Hadas",2013 IEEE/RSJ International Conference on Intelligent Robots and Systems,10.1109/IROS.2013.6696636,"This paper illustrates the Linear Temporal Logic MissiOn Planning (LTLMoP) toolkit. LTLMoP is an open source software package that transforms high-level specifications for robot behavior, captured using a structured English grammar, into a robot controller that guarantees the robot will complete its task, if the task is feasible. If the task cannot be guaranteed, LTLMoP provides feedback to the user as to what the problem is. Due to its modular nature, users can control a variety of different robots using LTLMoP, both simulated and physical, with the same specification. It shows an example robot waiter scenario, with LTLMoP controlling both a PR2 in simulation (using Gazebo), showcasing the interface between LTLMoP and the Robot Operating System (ROS)2, as well as an Aldebaran Nao humanoid in the lab.",Educational institutions; Grammar; Intelligent robots; Planning; Robot control; Robot sensing systems,"Provably-correct robot control with LTLMoP, OMPL and ROS",,x,,,,,,,,,NO,,
S1525,3,bkwd,conferencePaper,2015,"Vasilescu, Bogdan; Yu, Yue; Wang, Huaimin; Devanbu, Premkumar; Filkov, Vladimir",Proceedings of the 2015 10th Joint Meeting on Foundations of Software Engineering,10.1145/2786805.2786850,"Software processes comprise many steps; coding is followed by building, integration testing, system testing, deployment, operations, among others. Software process integration and automation have been areas of key concern in software engineering, ever since the pioneering work of Osterweil; market pressures for Agility, and open, decentralized, software development have provided additional pressures for progress in this area. But do these innovations actually help projects? Given the numerous confounding factors that can influence project performance, it can be a challenge to discern the effects of process integration and automation. Software project ecosystems such as GitHub provide a new opportunity in this regard: one can readily find large numbers of projects in various stages of process integration and automation, and gather data on various influencing factors as well as productivity and quality outcomes. In this paper we use large, historical data on process metrics and outcomes in GitHub projects to discern the effects of one specific innovation in process automation: continuous integration. Our main finding is that continuous integration improves the productivity of project teams, who can integrate more outside contributions, without an observable diminishment in code quality.",Continuous integration; GitHub; pull requests,Quality and productivity outcomes relating to continuous integration in GitHub,x,,,,,,,,,,NO,,
S1527,3,bkwd,journalArticle,2003,"Zhao, Luyin; Elbaum, Sebastian",Journal of Systems and Software,10.1016/S0164-1212(02)00064-X,"The open source development model has defied traditional software development practices by generating widely accepted products (e.g., Linux, Apache, Perl) while following unconventional principles such as the distribution of free source code and massive user participation. Those achievements have initiated and supported many declarations about the potential of the open source model to accelerate the development of reliable software. However, the pronouncements in favor or against this model have been usually argumentative, lacking of empirical evidence to support either position. Our work uses a survey to overcome those limitations. The study explores how software quality assurance is performed under the open source model, how it differs from more traditional software development models, and whether some of those differences could translate into practical advantages given the right circumstances. The findings indicate that open source has certainly introduced a new dimension in large-scale distributed software development. However, we also discovered that the potential of open source might not be exploitable under all scenarios. Furthermore, we found that many of the open source quality assurance activities are still evolving.",Open source; Quality assurance; Software development models; Survey,Quality assurance under the open source development model,x,,,,,,,,,,NO,,
S1537,3,bkwd,conferencePaper,2010,"Wongpiromsarn, Tichakorn; Topcu, Ufuk; Murray, Richard M.",Proceedings of the 13th ACM international conference on Hybrid systems: computation and control,10.1145/1755952.1755968,"In this paper, we describe a receding horizon framework that satisfies a class of linear temporal logic specifications sufficient to describe a wide range of properties including safety, stability, progress, obligation, response and guarantee. The resulting embedded control software consists of a goal generator, a trajectory planner, and a continuous controller. The goal generator essentially reduces the trajectory generation problem to a sequence of smaller problems of short horizon while preserving the desired system-level temporal properties. Subsequently, in each iteration, the trajectory planner solves the corresponding short-horizon problem with the currently observed state as the initial state and generates a feasible trajectory to be implemented by the continuous controller. Based on the simulation property, we show that the composition of the goal generator, trajectory planner and continuous controller and the corresponding receding horizon framework guarantee the correctness of the system. To handle failures that may occur due to a mismatch between the actual system and its model, we propose a response mechanism and illustrate, through an example, how the system is capable of responding to certain failures and continues to exhibit a correct behavior.",embedded control software; linear temporal logic; receding horizon control,Receding horizon control for temporal logic specifications,x,,,,,,,,,,NO,,
S1559,3,bkwd,journalArticle,2014,"Coleman, David; Sucan, Ioan; Chitta, Sachin; Correll, Nikolaus",arXiv:1404.3785 [cs],,"Developing robot agnostic software frameworks involves synthesizing the disparate fields of robotic theory and software engineering while simultaneously accounting for a large variability in hardware designs and control paradigms. As the capabilities of robotic software frameworks increase, the setup difficulty and learning curve for new users also increase. If the entry barriers for configuring and using the software on robots is too high, even the most powerful of frameworks are useless. A growing need exists in robotic software engineering to aid users in getting started with, and customizing, the software framework as necessary for particular robotic applications. In this paper a case study is presented for the best practices found for lowering the barrier of entry in the MoveIt! framework, an open-source tool for mobile manipulation in ROS, that allows users to 1) quickly get basic motion planning functionality with minimal initial setup, 2) automate its configuration and optimization, and 3) easily customize its components. A graphical interface that assists the user in configuring MoveIt! is the cornerstone of our approach, coupled with the use of an existing standardized robot model for input, automatically generated robot-specific configuration files, and a plugin-based architecture for extensibility. These best practices are summarized into a set of barrier to entry design principles applicable to other robotic software. The approaches for lowering the entry barrier are evaluated by usage statistics, a user survey, and compared against our design objectives for their effectiveness to users.",Computer Science - Robotics,Reducing the Barrier to Entry of Complex Robotic Software: a MoveIt! Case Study,,x,,,,,,,,,NO,,
S1491,3,fwd,conferencePaper,2019,"Mitrevski, Alex; Plöger, Paul G.",RoboCup 2019: Robot World Cup XXIII,10.1007/978-3-030-35699-6_32,"When developing robot functionalities, finite state machines are commonly used due to their straightforward semantics and simple implementation. State machines are also a natural implementation choice when designing robot experiments, as they generally lead to reproducible program execution. In practice, the implementation of state machines can lead to significant code repetition and may necessitate unnecessary code interaction when reparameterisation is required. In this paper, we present a small Python library that allows state machines to be specified, configured, and dynamically created using a minimal domain-specific language. We illustrate the use of the library in three different use cases - scenario definition in the context of the RoboCup@Home competition, experiment design in the context of the ROPOD project (ROPOD is an Innovation Action funded by the European Commission under grant no. 731848 within the Horizon 2020 framework program), as well as specification transfer between robots.",Experiment design; Rapid prototyping; State machines,Reusable Specification of State Machines for Rapid Robot Functionality Prototyping,x,,,,,,,,,,NO,,
S1487,3,fwd,journalArticle,2018,"Widodo, N. S.; Akbar, S. A.; Rahman, A.",IOP Conference Series: Materials Science and Engineering,10.1088/1757-899X/384/1/012058,"Robot Operating system (ROS) is collection of software frameworks for robot software development. Researchers that work with ROS will have an opportunity to use or to be exact to reuse any software framework from another researcher as long as they use a similar robot platform, or similar device that has been include in the ROS. This paper present a design for a low cost rotating Lidar that compatible with ROS. As all we know distance measurement is the basic for building an autonomous capability for robots. Rotating lidar is among one the most popular device used to acquire this kind of information. However most of them are not suitable for low budget project because of their high cost. The design presented here tries to build a low cost rotating lidar based on Lidar Lite device with the compatibility with the ROS. The design incorporate a control board based on a microcontroller.",,Robot Operating System (ROS) Compatible Low Cost Rotating Light Detection and Ranging (Lidar) Design,,x,,,,,,,,,NO,,
S1545,3,bkwd,journalArticle,2012,"Elkady, Ayssam; Sobh, Tarek",Journal of Robotics,10.1155/2012/959013,"Autonomous robots are complex systems that require the interaction between numerous heterogeneous components (software and hardware). Because of the increase in complexity of robotic applications and the diverse range of hardware, robotic middleware is designed to manage the complexity and heterogeneity of the hardware and applications, promote the integration of new technologies, simplify software design, hide the complexity of low-level communication and the sensor heterogeneity of the sensors, improve software quality, reuse robotic software infrastructure across multiple research efforts, and to reduce production costs. This paper presents a literature survey and attribute-based bibliography of the current state of the art in robotic middleware design. The main aim of the survey is to assist robotic middleware researchers in evaluating the strengths and weaknesses of current approaches and their appropriateness for their applications. Furthermore, we provide a comprehensive set of appropriate bibliographic references that are classified based on middleware attributes.",,Robotics Middleware: A Comprehensive Literature Survey and Attribute-Based Bibliography,x,,,,,,,,,,NO,,
S1554,3,bkwd,conferencePaper,2012,"Dhouib, Saadia; Kchir, Selma; Stinckwich, Serge; Ziadi, Tewfik; Ziane, Mikal","Simulation, Modeling, and Programming for Autonomous Robots",10.1007/978-3-642-34327-8_16,"A large number of robotic software have been developed but cannot or can hardly interoperate with each other because of their dependencies on specific hardware or software platform is hard-wired into the code. Consequently, robotic software is hard and expensive to develop because there is little opportunity of reuse and because low-level details must be taken into account in early phases. Moreover, robotic experts can hardly develop their application without programming knowledge or the help of programming experts and robotic software is difficult to adapt to hardware or target-platform changes. In this paper we report on the development of RobotML, a Robotic Modeling Language that eases the design of robotic applications, their simulation and their deployment to multiple target execution platforms.",Domain-Specific Languages; Generative Programming; MDE; robotic application,"RobotML, a Domain-Specific Language to Design, Simulate and Deploy Robotic Applications",,,,,,,x,,,,NO,,
S1501,3,bkwd,journalArticle,,"Quigley, Morgan; Gerkey, Brian; Conley, Ken; Faust, Josh; Foote, Tully; Leibs, Jeremy; Berger, Eric; Wheeler, Rob; Ng, Andrew",,,"This paper gives an overview of ROS, an opensource robot operating system. ROS is not an operating system in the traditional sense of process management and scheduling; rather, it provides a structured communications layer above the host operating systems of a heterogenous compute cluster. In this paper, we discuss how ROS relates to existing robot software frameworks, and brieﬂy overview some of the available application software which uses ROS.",,ROS: an open-source Robot Operating System,,,,,,,,x,,,NO,,
S1521,3,bkwd,journalArticle,,"Quigley, Morgan; Gerkey, Brian; Conley, Ken; Faust, Josh; Foote, Tully; Leibs, Jeremy; Berger, Eric; Wheeler, Rob; Ng, Andrew",,,"This paper gives an overview of ROS, an opensource robot operating system. ROS is not an operating system in the traditional sense of process management and scheduling; rather, it provides a structured communications layer above the host operating systems of a heterogenous compute cluster. In this paper, we discuss how ROS relates to existing robot software frameworks, and brieﬂy overview some of the available application software which uses ROS.",,ROS: an open-source Robot Operating System,,,,,,,x,,,,NO,,
S1541,3,bkwd,journalArticle,,"Quigley, Morgan; Gerkey, Brian; Conley, Ken; Faust, Josh; Foote, Tully; Leibs, Jeremy; Berger, Eric; Wheeler, Rob; Ng, Andrew",,,"This paper gives an overview of ROS, an opensource robot operating system. ROS is not an operating system in the traditional sense of process management and scheduling; rather, it provides a structured communications layer above the host operating systems of a heterogenous compute cluster. In this paper, we discuss how ROS relates to existing robot software frameworks, and brieﬂy overview some of the available application software which uses ROS.",,ROS: an open-source Robot Operating System,,,,,,,x,,,,NO,,
S1547,3,bkwd,journalArticle,,"Quigley, Morgan; Gerkey, Brian; Conley, Ken; Faust, Josh; Foote, Tully; Leibs, Jeremy; Berger, Eric; Wheeler, Rob; Ng, Andrew",,,"This paper gives an overview of ROS, an opensource robot operating system. ROS is not an operating system in the traditional sense of process management and scheduling; rather, it provides a structured communications layer above the host operating systems of a heterogenous compute cluster. In this paper, we discuss how ROS relates to existing robot software frameworks, and brieﬂy overview some of the available application software which uses ROS.",,ROS: an open-source Robot Operating System,,,,,,,x,,,,NO,,
S1570,3,bkwd,journalArticle,,"Quigley, Morgan; Gerkey, Brian; Conley, Ken; Faust, Josh; Foote, Tully; Leibs, Jeremy; Berger, Eric; Wheeler, Rob; Ng, Andrew",,,"This paper gives an overview of ROS, an opensource robot operating system. ROS is not an operating system in the traditional sense of process management and scheduling; rather, it provides a structured communications layer above the host operating systems of a heterogenous compute cluster. In this paper, we discuss how ROS relates to existing robot software frameworks, and brieﬂy overview some of the available application software which uses ROS.",,ROS: an open-source Robot Operating System,,,,,,,x,,,,NO,,
S1534,3,bkwd,conferencePaper,2014,"Huang, Jeff; Erdogan, Cansu; Zhang, Yi; Moore, Brandon; Luo, Qingzhou; Sundaresan, Aravind; Rosu, Grigore",Runtime Verification,10.1007/978-3-319-11164-3_20,"We present ROSRV, a runtime verification framework for robotic applications on top of the Robot Operating System (ROS [8]), a widely used open-source framework for robot software development. ROSRV aims to address the safety and security issues of robots by providing a transparent monitoring infrastructure that intercepts and monitors the commands and messages passing through the system. Safety and security properties can be defined in a formal specification language, and are ensured by automatically generated monitors. ROSRV integrates seamlessly with ROS—no change in ROS nor the application code is needed. ROSRV has been applied and evaluated on a commercial robot.",Access Control Policy; Linear Temporal Logic; Robot Operating System; Runtime Verification; Virtual Machine Monitor,ROSRV: Runtime Verification for Robots,,,,,,,x,,,,NO,,
S1529,3,bkwd,conferencePaper,2010,"Bhatia, Amit; Kavraki, Lydia E.; Vardi, Moshe Y.",2010 IEEE International Conference on Robotics and Automation,10.1109/ROBOT.2010.5509503,"This paper presents a geometry-based, multi-layered synergistic approach to solve motion planning problems for mobile robots involving temporal goals. The temporal goals are described over subsets of the workspace (called propositions) using temporal logic. A multi-layered synergistic framework has been proposed recently for solving planning problems involving significant discrete structure. In this framework, a high-level planner uses a discrete abstraction of the system and the exploration information to suggest feasible high-level plans. A low-level sampling-based planner uses the physical model of the system, and the suggested high-level plans, to explore the state-space for feasible solutions. In this paper, we advocate the use of geometry within the above framework to solve motion planning problems involving temporal goals. We present a technique to construct the discrete abstraction using the geometry of the obstacles and the propositions defined over the workspace. Furthermore, we show through experiments that the use of geometry results in significant computational speedups compared to previous work. Traces corresponding to trajectories of the system are defined employing the sampling interval used by the low-level algorithm. The applicability of the approach is shown for second-order nonlinear robot models in challenging workspace environments with obstacles, and for a variety of temporal logic specifications.",Computational geometry; Logic; Mobile robots; Motion planning; Robotics and automation; Sampling methods; Solid modeling; Sun; USA Councils; Vehicle dynamics,Sampling-based motion planning with temporal goals,x,,,,,,,,,,NO,,
S1532,3,bkwd,conferencePaper,2016,"Ehlers, Rüdiger; Raman, Vasumathi",Computer Aided Verification,10.1007/978-3-319-41540-6_18,"Applying reactive synthesis in practice often requires modifications of the synthesis algorithm in order to obtain useful implementations. We present slugs, a generalized reactivity(1) synthesis tool that has a powerful plugin architecture for modifying any aspect of the synthesis process to fit the application. Slugs comes pre-equipped with a variety of plugins that improve the quality of the synthesized solutions along criteria such as quick response, cost-optimality, and error-resilience. We demonstrate the utility and scalability of the tool on an example from robotics.",Binary Decision Diagrams (BDDs); Liveness Assumptions; Robotics; Slug Distribution; Synthesis Algorithm,Slugs: Extensible GR(1) Synthesis,x,,,,,,,,,,NO,,
S1479,3,fwd,conferencePaper,2020,"Mao, Xinjun; Huang, Hao; Wang, Shuo",2020 27th Asia-Pacific Software Engineering Conference (APSEC),10.1109/APSEC51365.2020.00018,"Software engineering for autonomous robot (SE4AR) is an emerging interdisciplinary field with the aims to support the development, running and evolution of software systems for autonomous robot - a safety and mission critical cyber-physical system. Such field has recently gained increasing attentions from both academia and industry and made rapid progresses in the past years. However, many challenges pose on the SE4AR due to the specific features and complexities of autonomous robot software (ARS) and several open problems should be tackled in the future researches. This paper aims to present a comprehensive investigation on the researches and practices of SE4AR. Our contributions are three-fold as follows: an in-depth analysis on the development challenges, a systematic review on the current progresses, and an open discussion of weaknesses in current researches and opportunities in future researches.",autonomous robot software; Autonomous robots; Complexity theory; cyber-physical system; Industries; Service robots; software engineering; Software engineering; Software systems; Systematics,"Software Engineering for Autonomous Robot: Challenges, Progresses and Opportunities",x,,,,,,,,,,NO,,
S1490,3,fwd,conferencePaper,2019,"Santos, André; Cunha, Alcino; Macedo, Nuno",2019 Third IEEE International Conference on Robotic Computing (IRC),10.1109/IRC.2019.00018,"The Robot Operating System (ROS) is one of the most popular open source robotic frameworks, and has contributed significantly to the fast development of robotics. Even though ROS provides many ready-made components, a robotic system is inherently complex, in particular regarding the architecture and orchestration of such components. Availability and analysis of a system's architecture at compile time is fundamental to ease comprehension and development of higher-quality software. However, ROS developers have to overcome this complexity relying mostly on testing and runtime visualisers. This work aims to enhance static-time support by proposing, firstly, a metamodel to describe the software architecture of ROS systems (the ROS Computation Graph) and, secondly, model extraction and visualisation tools for such architectural models. The provided tools allow users to specify custom-made queries over these models, enabling the static verification of relevant properties that had to be (manually) checked at runtime before.",Computational modeling; Computer architecture; robotics; Robots; Runtime; Software; software architecture; software quality; static analysis; Tools; Visualization,Static-Time Extraction and Analysis of the ROS Computation Graph,,,,,,,x,,,,NO,,
S1504,3,bkwd,conferencePaper,2019,"Santos, André; Cunha, Alcino; Macedo, Nuno",2019 Third IEEE International Conference on Robotic Computing (IRC),10.1109/IRC.2019.00018,"The Robot Operating System (ROS) is one of the most popular open source robotic frameworks, and has contributed significantly to the fast development of robotics. Even though ROS provides many ready-made components, a robotic system is inherently complex, in particular regarding the architecture and orchestration of such components. Availability and analysis of a system's architecture at compile time is fundamental to ease comprehension and development of higher-quality software. However, ROS developers have to overcome this complexity relying mostly on testing and runtime visualisers. This work aims to enhance static-time support by proposing, firstly, a metamodel to describe the software architecture of ROS systems (the ROS Computation Graph) and, secondly, model extraction and visualisation tools for such architectural models. The provided tools allow users to specify custom-made queries over these models, enabling the static verification of relevant properties that had to be (manually) checked at runtime before.",Computational modeling; Computer architecture; robotics; Robots; Runtime; Software; software architecture; software quality; static analysis; Tools; Visualization,Static-Time Extraction and Analysis of the ROS Computation Graph,,,,,,,,,x,,NO,,
S1528,3,bkwd,journalArticle,2007,"Belta, Calin; Bicchi, Antonio; Egerstedt, Magnus; Frazzoli, Emilio; Klavins, Eric; Pappas, George J.",IEEE Robotics Automation Magazine,10.1109/MRA.2007.339624,"In this paper, different research trends that use symbolic techniques for robot motion planning and control are illustrated. As it often happens in new research areas, contributions to this topic started at about the same time by different groups with different emphasis, approaches, and notation. This article tries to describe a framework in which many of the current methods and ideas can be placed and to provide a coherent picture of what the authors want to do, what have they got so far, and what the main missing pieces are. Generally speaking, the aim of symbolic control as is envisioned in this article is to enable the usage of methods of formal logic, languages, and automata theory for solving effectively complex planning problems for robots and teams of robots. The results presented in this article can be divided in two groups: top-down approaches, whereby formal logic tools are employed on rather abstract models of robots; and bottom up approaches, whose aim is to provide means by which such abstractions are possible and effective. The two ends do not quite tie as yet, and much work remains to be done in both directions to obtain generally applicable methods. However, the prospects of symbolic control of robots are definitely promising, and the challenging nature of problems to be solved warrants for the interest of a wide community of researchers",Automata; Communication system control; Control systems; Mobile robots; Motion control; Motion planning; Robot control; Robot motion; Robot sensing systems; Robotics and automation,Symbolic planning and control of robot motion [Grand Challenges of Robotics],x,,,,,,,,,,NO,,
S1530,3,bkwd,conferencePaper,2006,"Piterman, Nir; Pnueli, Amir; Sa’ar, Yaniv","Verification, Model Checking, and Abstract Interpretation",10.1007/11609773_24,"We consider the problem of synthesizing digital designs from their ltl specification. In spite of the theoretical double exponential lower bound for the general case, we show that for many expressive specifications of hardware designs the problem can be solved in time N 3, where N is the size of the state space of the design. We describe the context of the problem, as part of the Prosyd European Project which aims to provide a property-based development flow for hardware designs. Within this project, synthesis plays an important role, first in order to check whether a given specification is realizable, and then for synthesizing part of the developed system.",,Synthesis of Reactive(1) Designs,x,,,,,,,,,,NO,,
S1517,3,bkwd,conferencePaper,2016,"Miné, Antoine; Mauborgne, Laurent; Rival, Xavier; Feret, Jerome; Cousot, Patrick; Kästner, Daniel; Wilhelm, Stephan; Ferdinand, Christian",8th European Congress on Embedded Real Time Software and Systems (ERTS 2016),,"We present an extension of Astrée to concurrent C software. Astrée is a sound static analyzer for run-time errors previously limited to sequential C software. Our extension employs a scalable abstraction which covers all possible thread interleavings, and soundly reports all run-time errors and data races: when the analyzer does not report any alarm, the program is proven free from those classes of errors. We show how this extension is able to support a variety of operating systems (such as POSIX threads, ARINC 653, OSEK/AUTOSAR) and report on experimental results obtained on concurrent software from different domains, including large industrial software.",,Taking Static Analysis to the Next Level: Proving the Absence of Run-Time Errors and Data Races with Astrée,x,,,,,,,,,,NO,,
S1535,3,bkwd,journalArticle,2009,"Kress-Gazit, Hadas; Fainekos, Georgios E.; Pappas, George J.",IEEE Transactions on Robotics,10.1109/TRO.2009.2030225,"This paper provides a framework to automatically generate a hybrid controller that guarantees that the robot can achieve its task when a robot model, a class of admissible environments, and a high-level task or behavior for the robot are provided. The desired task specifications, which are expressed in a fragment of linear temporal logic (LTL), can capture complex robot behaviors such as search and rescue, coverage, and collision avoidance. In addition, our framework explicitly captures sensor specifications that depend on the environment with which the robot is interacting, which results in a novel paradigm for sensor-based temporal-logic-motion planning. As one robot is part of the environment of another robot, our sensor-based framework very naturally captures multirobot specifications in a decentralized manner. Our computational approach is based on first creating discrete controllers satisfying specific LTL formulas. If feasible, the discrete controller is then used to guide the sensor-based composition of continuous controllers, which results in a hybrid controller satisfying the high-level specification but only if the environment is admissible.",Automatic control; Automatic generation control; Controller synthesis; hybrid control; Hybrid power systems; Laboratories; Logic; Motion control; motion planning; Motion planning; Motion-planning; Robot sensing systems; Robotics and automation; sensor-based planning; temporal logic,Temporal-Logic-Based Reactive Mission and Motion Planning,x,,,,,,,,,,NO,,
S1549,3,bkwd,report,2006,"Feiler, Peter H.; Gluch, David P.; Hudak, John J.",,,"In November 2004, the Society of Automotive Engineers SAE released the aerospace standard AS5506, named the Architecture Analysis Design Language AADL. The AADL is a modeling language that supports early and repeated analyses of a systems architecture with respect to performance-critical properties through an extendable notation, a tool framework, and precisely defined semantics. The language employs formal modeling concepts for the description and analysis of application system architectures in terms of distinct components and their interactions. It includes abstractions of software, computational hardware, and system components for a specifying and analyzing real-time embedded and high dependability systems, complex systems of systems, and specialized performance capability systems and b mapping of software onto computational hardware elements. The AADL is especially effective for model-based analysis and specification of complex real-time embedded systems. This technical note is an introduction to the concepts, language structure, and application of the AADL.",,The Architecture Analysis & Design Language (AADL): An Introduction,x,,,,,,,,,,NO,,
S1546,3,bkwd,conferencePaper,2013,"Bruyninckx, Herman; Klotzbücher, Markus; Hochgeschwender, Nico; Kraetzschmar, Gerhard; Gherardi, Luca; Brugali, Davide",Proceedings of the 28th Annual ACM Symposium on Applied Computing,10.1145/2480362.2480693,"Because robotic systems get more complex all the time, developers around the world have, during the last decade, created component-based software frameworks (Orocos, Open-RTM, ROS, OPRoS, SmartSoft) to support the development and reuse of ""large grained"" pieces of robotics software. This paper introduces the BRICS Component Model (BCM) to provide robotics developers with a set of guidelines, metamodels and tools for structuring as much as possible the development of, both, individual components and component-based architectures, using one or more of the aforementioned software frameworks at the same time, without introducing any framework- or application-specific details. The BCM is built upon two complementary paradigms: the ""5Cs"" (separation of concerns between the development aspects of Computation, Communication, Coordination, Configuration and Composition) and the meta-modeling approach from Model-Driven Engineering.",component models; reusable software; robotics; software architectures,The BRICS component model: a model-based development paradigm for complex robotics software systems,,,,,,,x,,,,NO,,
S1497,3,fwd,journalArticle,2021,"Santos, André; Cunha, Alcino; Macedo, Nuno",arXiv:2103.01603 [cs],,"This tool paper presents the High-Assurance ROS (HAROS) framework. HAROS is a framework for the analysis and quality improvement of robotics software developed using the popular Robot Operating System (ROS). It builds on a static analysis foundation to automatically extract models from the source code. Such models are later used to enable other sorts of analyses, such as Model Checking, Runtime Verification, and Property-based Testing. It has been applied to multiple real-world examples, helping developers find and correct various issues.",Computer Science - Robotics; Computer Science - Software Engineering; D.2.1; D.2.4; D.2.5; D.2.8; D.2.9,The High-Assurance ROS Framework,,,,,,,,,x,,NO,,
S1566,3,bkwd,conferencePaper,2010,"Maia, Mirna Carelli Oliveira; Bittencourt, Roberto Almeida; Figueiredo, Jorge Cesar Abrantes de; Guerrero, Dalton Dario Serey",2010 14th European Conference on Software Maintenance and Reengineering,10.1109/CSMR.2010.48,"Change impact analysis techniques that underestimate impact may cause important financial losses from the point of view of an IT services company. Thus, reducing false-negatives in these techniques is a goal with strong practical relevance. This work presents a technique that uses both static and dynamic analysis of object-oriented source code to improve resulting impact estimates in terms of recall. The technique consists of three steps: static analysis to identify structural dependencies between code entities, dynamic analysis to identify dependencies based on a succession relation derived from execution traces, and a ranking of results from both analyses that takes into account the relevance of dynamic dependencies. Evaluation was performed through prototype development and a multiple-case quantitative case study that compared our solution against a static technique and a dynamic one. Results showed that our hybrid technique improved recall between 90 and 115% compared to the static technique, and between 21.2 and 39% compared to the dynamic one.",Companies; dynamic analysis; IEEE Computer Society; impact analysis; Measurement; Performance analysis; software change; Software systems; static analysis; USA Councils,The Hybrid Technique for Object-Oriented Software Change Impact Analysis,x,,,,,,,,,,NO,,
S1561,3,bkwd,journalArticle,2003,"Eugster, Patrick Th.; Felber, Pascal A.; Guerraoui, Rachid; Kermarrec, Anne-Marie",ACM Computing Surveys,10.1145/857076.857078,"Well adapted to the loosely coupled nature of distributed interaction in large-scale applications, the publish/subscribe communication paradigm has recently received increasing attention. With systems based on the publish/subscribe interaction scheme, subscribers register their interest in an event, or a pattern of events, and are subsequently asynchronously notified of events generated by publishers. Many variants of the paradigm have recently been proposed, each variant being specifically adapted to some given application or network model. This paper factors out the common denominator underlying these variants: full decoupling of the communicating entities in time, space, and synchronization. We use these three decoupling dimensions to better identify commonalities and divergences with traditional interaction paradigms. The many variations on the theme of publish/subscribe are classified and synthesized. In particular, their respective benefits and shortcomings are discussed both in terms of interfaces and implementations.",Distribution; interaction; publish/subscribe,The many faces of publish/subscribe,,,,x,,,,,,,NO,,
S1552,3,bkwd,report,2019,"Feiler, Peter",,,"Eclipse-based Open Source AADL Tool Environment OSATE No cost license under EPL license, Download site osate.org, Issue tracking httpsgithub.comosateosate2issues, Release cycle bi-monthly stable, nightly builds, Reference implementation of core AADL and annex standards, AADL core language V2.2 plus any approved errata, Error Model V2 Annex, ARINC653 Annex, Behavior Annex, Data Modeling Annex, Code Generation Annex, Research prototyping platform, University and industrial research and pilot projects at international level.",,The Open Source AADL Tool Environment (OSATE),,,,,x,,,,,,NO,,
S1553,3,bkwd,conferencePaper,2006,"Feiler, Peter H.; Lewis, Bruce A.; Vestal, Steve","2006 IEEE Conference on Computer Aided Control System Design, 2006 IEEE International Conference on Control Applications, 2006 IEEE International Symposium on Intelligent Control",10.1109/CACSD-CCA-ISIC.2006.4776814,"The Society of Automotive Engineers (SAE) Architecture Analysis & Design Language, AS5506, provides a means for the formal specification of the hardware and software architecture of embedded computer systems and system of systems. It was designed to support a full Model Based Development lifecycle including system specification, analysis, system tuning, integration, and upgrade over the lifecycle. It was designed to support the integration of multiple forms of analyses and to be extensible in a standard way for additional analysis approaches. A system can be automatically integrated from AADL models when fully specified and when source code is provided for the software components. Analysis of large complex systems has been demonstrated in the avionics domain.",Aerospace electronics; Automotive engineering; Computer architecture; Design engineering; Embedded computing; Formal specifications; Hardware; Performance analysis; Software architecture; Systems engineering and theory,The SAE Architecture Analysis amp; Design Language (AADL) a standard for engineering performance critical systems,x,,,,,,,,,,NO,,
S1531,3,bkwd,journalArticle,2010,"Bohren, Jonathan; Cousins, Steve",IEEE Robotics Automation Magazine,10.1109/MRA.2010.938836,,,The SMACH High-Level Executive [ROS News],x,,,,,,,,,,NO,,
S1498,3,fwd,journalArticle,2017,"Sharma, Sahil","Biological Systems Engineering--Dissertations, Theses, and Student Research",,,,USE OF LONG TERM WEATHER DATA AND SPATIALLY DELINEATED FIELD ATTRIBUTES TO PREDICT WATER AND ENERGY CONSERVATION FROM VARIABLE RATE IRRIGATION,x,,,,,,,,,,NO,,
S1539,3,bkwd,conferencePaper,2015,"Meng, Wenrui; Park, Junkil; Sokolsky, Oleg; Weirich, Stephanie; Lee, Insup",NASA Formal Methods,10.1007/978-3-319-17524-9_18,"The paper considers the problem of model-based deployment of platform-independent control code on a specific platform. The approach is based on automatic generation of platform-specific glue code from an architectural model of the system. We present a tool, ROSGen, that generates the glue code based on a declarative specification of platform interfaces. Our implementation targets the popular Robot Operating System (ROS) platform. We demonstrate that the code generation process is amenable to formal verification. The code generator is implemented in Coq and relies on the infrastructure provided by the CompCert and VST tool. We prove that the generated code always correctly connects the controller function to sensors and actuators in the robot. We use ROSGen to implement a cruise control system on the LandShark robot.",Architectural Model; Controller Function; Global Variable; Separation Logic; Unmanned Ground Vehicle,Verified ROS-Based Deployment of Platform-Independent Control Systems,,x,,,,,,,,,NO,,
S1555,3,bkwd,journalArticle,2013,"Malavolta, Ivano; Lago, Patricia; Muccini, Henry; Pelliccione, Patrizio; Tang, Antony",IEEE Transactions on Software Engineering,10.1109/TSE.2012.74,"Many times we are faced with the proliferation of definitions, concepts, languages, and tools in certain (research) topics. But often there is a gap between what is provided by existing technologies and what is needed by their users. The strengths, limitations, and needs of the available technologies can be dubious. The same applies to software architectures, and specifically to languages designed to represent architectural models. Tens of different architectural languages have been introduced by the research and industrial communities in the last two decades. However, it is unclear if they fulfill the user's perceived needs in architectural description. As a way to plan for next generation languages for architectural description, this study analyzes practitioners' perceived strengths, limitations, and needs associated with existing languages for software architecture modeling in industry. We run a survey by interviewing 48 practitioners from 40 different IT companies in 15 countries. Each participant is asked to fill in a questionnaire of 51 questions. By analyzing the data collected through this study, we have concluded that 1) while practitioners are generally satisfied with the design capabilities provided by the languages they use, they are dissatisfied with the architectural language analysis features and their abilities to define extra-functional properties; 2) architectural languages used in practice mostly originate from industrial development instead of from academic research; 3) more formality and better usability are required of an architectural language.",ADL; architecture description languages; Communities; Computer architecture; empirical study; Google; Industries; Software; Software architecture; survey; Unified modeling language,What Industry Needs from Architectural Languages: A Survey,x,,,,,,,,,,NO,,
S1515,3,bkwd,conferencePaper,2014,"Kerzazi, Noureddine; Khomh, Foutse; Adams, Bram",2014 IEEE International Conference on Software Maintenance and Evolution,10.1109/ICSME.2014.26,"To detect integration errors as quickly as possible, organizations use automated build systems. Such systems ensure that (1) the developers are able to integrate their parts into an executable whole, (2) the testers are able to test the built system, (3) and the release engineers are able to leverage the generated build to produce the upcoming release. The flipside of automated builds is that any incorrect change can break the build, and hence testing and releasing, and (even worse) block other developers from continuing their work, delaying the project even further. To measure the impact of such build breakage, this empirical study analyzes 3,214 builds produced in a large software company over a period of 6 months. We found a high ratio of build breakage (17.9%), and also quantified the cost of such build breakage as more than 336.18 man-hours. Interviews with 28 software engineers from the company helped to understand the circumstances under which builds are broken and the effects of build breakages on the collaboration and coordination of teams. We quantitatively investigated the main factors impacting build breakage and found that build failures correlate with the number of simultaneous contributors on branches, the type of work items performed on a branch, and the roles played by the stakeholders of the builds (for example developers vs. Integrators).",Automated Builds; Collaboration; Companies; Context; Data Mining; Empirical Software Engineering; Interviews; Software; Software Quality; Statistical analysis,Why Do Automated Builds Break? An Empirical Study,x,,,,,,,,,,NO,,
S1567,4,fwd,journalArticle,2020,"Cardoso, Rafael C.; Dennis, Louise A.; Farrell, Marie; Fisher, Michael; Luckcuck, Matt",Electronic Proceedings in Theoretical Computer Science,"Software engineering of modular robotic systems is a challenging task, however, verifying that the developed components all behave as they should individually and as a whole presents its own unique set of challenges. In particular, distinct components in a modular robotic system often require different verification techniques to ensure that they behave as expected. Ensuring whole system consistency when individual components are verified using a variety of techniques and formalisms is difficult. This paper discusses how to use compositional verification to integrate the various verification techniques that are applied to modular robotic software, using a First-Order Logic (FOL) contract that captures each component's assumptions and guarantees. These contracts can then be used to guide the verification of the individual components, be it by testing or the use of a formal method. We provide an illustrative example of an autonomous robot used in remote inspection. We also discuss a way of defining confidence for the verification associated with each component.",Computer Science - Logic in Computer Science; Computer Science - Robotics; Computer Science - Software Engineering,Towards Compositional Verification for Modular Robotic Systems,,x,,,,,,,,,,NO,,
S1568,4,fwd,conferencePaper,2020,"Spellini, Stefano; Chirico, Roberta; Panato, Marco; Lora, Michele; Fummi, Franco","2020 Design, Automation Test in Europe Conference Exhibition (DATE)","The advent of Industry 4.0 is making production processes every day more complicated. As such, early process validation is becoming crucial to avoid production errors thus decreasing costs. In this paper, we present an approach to validate production recipes. Initially, the recipe is specified according to the ISA-95 standard, while the production plant is described using AutomationML. These specifications are formalized into a hierarchy of assume-guarantee contracts. Each contract specifies a set of temporal behaviors, characterizing the different machines composing the production line, their actions and interaction. Then, the formal specifications provided by the contracts are systematically synthesized to automatically generate a digital twin for the production line. Finally, the digital twin is used to evaluate, and validate, both the functional and the extra-functional characteristics of the system.The methodology has been applied to validate the production of a product requiring additive manufacturing, robotic assembling and transportation.",Contracts; Data models; Design Automation; Digital twin; Digital Twin; Manufacturing; Production; Simulation and Validation; Smart Manufacturing; Standards,Production Recipe Validation through Formalization and Digital Twin Generation,,x,,,,,,,,,,NO,,
S1569,4,fwd,webpage,,,,,,Virtual Prototyping a Production Line Using Assume–Guarantee Contracts | IEEE Journals & Magazine | IEEE Xplore,,,,,,x,,,,,,NO,,
S1570,4,fwd,journalArticle,2020,"Feng, Wenrong; Li, Xiantao; Jiang, Xiuhao; Tian, Xu; Hu, Bin; Long, Zhang",DEStech Transactions on Computer Science and Engineering,"As the laboratory becomes more open, the flow of laboratory personnel has increased, which has brought challenges to the daily management of the laboratory. At present, the difficulty of daily laboratory management lies in the cumbersome personnel statistics and the heavy workload of safety monitoring. In response to this problem, this paper proposes a laboratory supervision robot with autonomous movement, autonomous monitoring, face recognition, and management information. First, a face recognition algorithm is designed based on convolutional neural network. Then the robot control system is designed using the robot operating system (ROS). Based on the simultaneous localization and mapping (SLAM) technology, the Gmapping algorithm is used to realize the autonomous movement of the robot, which provides a reference for the design of the laboratory supervision robot.",,Design and Analysis of Laboratory Supervision Robot Based on Robot Operating System,,,x,,,,,,,,,NO,,
S1571,4,fwd,journalArticle,2020,"Cardoso, Rafael C.; Dennis, Louise A.; Farrell, Marie; Fisher, Michael; Luckcuck, Matt",Electronic Proceedings in Theoretical Computer Science,,,Towards Compositional Verification for Modular Robotic Systems,,x,,,,,,,,,,NO,,
S1572,4,fwd,conferencePaper,2021,"Majetta, Kristin; Bräunig, Jan; Sohrmann, Christoph; Jancke, Roland; Mayer, Dirk",Proceedings of the 10th International Conference on Smart Cities and Green ICT Systems,,,Model-based Systems Design for Green IoT Systems:,,x,,,,,,,,,,NO,,
S1573,4,fwd,journalArticle,2021,"Baltazar, André Rodrigues; Santos, Filipe Neves dos; Moreira, António Paulo; Valente, António; Cunha, José Boaventura",Electronics,"The automation of agricultural processes is expected to positively impact the environment by reducing waste and increasing food security, maximising resource use. Precision spraying is a method used to reduce the losses during pesticides application, reducing chemical residues in the soil. In this work, we developed a smart and novel electric sprayer that can be assembled on a robot. The sprayer has a crop perception system that calculates the leaf density based on a support vector machine (SVM) classifier using image histograms (local binary pattern (LBP), vegetation index, average, and hue). This density can then be used as a reference value to feed a controller that determines the air flow, the water rate, and the water density of the sprayer. This perception system was developed and tested with a created dataset available to the scientific community and represents a significant contribution. The results of the leaf density classifier show an accuracy score that varies between 80% and 85%. The conducted tests prove that the solution has the potential to increase the spraying accuracy and precision.",agricultural robots; image processing; precision spraying,Smarter Robotic Sprayer System for Precision Agriculture,,x,,,,,,,,,,NO,,
S1574,4,fwd,journalArticle,2021,"Santos, André; Cunha, Alcino; Macedo, Nuno",arXiv:2103.01603 [cs],"This tool paper presents the High-Assurance ROS (HAROS) framework. HAROS is a framework for the analysis and quality improvement of robotics software developed using the popular Robot Operating System (ROS). It builds on a static analysis foundation to automatically extract models from the source code. Such models are later used to enable other sorts of analyses, such as Model Checking, Runtime Verification, and Property-based Testing. It has been applied to multiple real-world examples, helping developers find and correct various issues.",Computer Science - Robotics; Computer Science - Software Engineering; D.2.1; D.2.4; D.2.5; D.2.8; D.2.9,The High-Assurance ROS Framework,,,,,,x,,,,,,NO,,
S1575,4,fwd,journalArticle,2021,"Santos, Luís Carlos; Santos, André; Santos, Filipe Neves; Valente, António",Robotics,"Software for robotic systems is becoming progressively more complex despite the existence of established software ecosystems like ROS, as the problems we delegate to robots become more and more challenging. Ensuring that the software works as intended is a crucial (but not trivial) task, although proper quality assurance processes are rarely seen in the open-source robotics community. This paper explains how we analyzed and improved a specialized path planner for steep-slope vineyards regarding its software dependability. The analysis revealed previously unknown bugs in the system, with a relatively low property specification effort. We argue that the benefits of similar quality assurance processes far outweigh the costs and should be more widespread in the robotics domain.",agricultural robotics; path planning; robotics; safety software verification,A Case Study on Improving the Software Dependability of a ROS Path Planner for Steep Slope Vineyards,,,,,,,,x,,,,NO,,
S1576,4,bkwd,journalArticle,2018,"Leeson, George W.",Journal of Population Ageing,,,"The Growth, Ageing and Urbanisation of our World",,x,,,,,,,,,,NO,,
S1577,4,bkwd,webpage,,,,,,"Human resources for agricultural organizations of agro-industrial region, areas for improvement.",,x,,,,,,,,,,NO,,
S1578,4,bkwd,conferencePaper,2020,"Santos, Luís C.; Santos, Filipe N.; Solteiro Pires, E. J.; Valente, António; Costa, Pedro; Magalhães, Sandro",2020 IEEE International Conference on Autonomous Robot Systems and Competitions (ICARSC),"The world's population is estimated to reach nine billion people by the year 2050, which indicates that agricultural productivity must increase sustainably. The mechanisation and automatisation of agricultural tasks is an essential step to face population growth. Ground robots have been developed along the last decade for several agricultural applications, being, the autonomous and safe navigation one of the hardest challenge in this development. Moving autonomously, a mobile platform involves different tasks, such as localisation, mapping, motion control, and path planning, a crucial step for autonomous operations. This article performs a survey of different applications for path planning techniques applied to various agricultural contexts. This paper analyses different agricultural applications and details about the employed path planning method. The conclusion indicates that path planning has been successfully applied to agrarian robots for field coverage and point-to-point navigation, being that coverage path planning is slightly more advanced in this field.",agricultural robotics; Agriculture; Autonomous navigation; heuristic; Heuristic algorithms; Navigation; Optimization; Path planning; Path Planning; Robots; survey; Task analysis,Path Planning for ground robots in agriculture: a short review,,x,,,,,,,,,,NO,,
S1579,4,bkwd,journalArticle,2020,"Santos, Luís; Santos, Filipe; Mendes, Jorge; Costa, Pedro; Lima, José; Reis, Ricardo; Shinde, Pranjali",Robotica,"Steep slope vineyards are a complex scenario for the development of ground robots. Planning a safe robot trajectory is one of the biggest challenges in this scenario, characterized by irregular surfaces and strong slopes (more than 35°). Moving the robot through a pile of stones, spots with high slope or/and with wrong robot yaw may result in an abrupt fall of the robot, damaging the equipment and centenary vines, and sometimes imposing injuries to humans. This paper presents a novel approach for path planning aware of center of mass of the robot for application in sloppy terrains. Agricultural robotic path planning (AgRobPP) is a framework that considers the A* algorithm by expanding inner functions to deal with three main inputs: multi-layer occupation grid map, altitude map and robot’s center of mass. This multi-layer grid map is updated by obstacles taking into account the terrain slope and maximum robot posture. AgRobPP is also extended with algorithms for local trajectory replanning during the execution of a trajectory that is blocked by the presence of an obstacle, always assuring the safety of the re-planned path. AgRobPP has a novel PointCloud translator algorithm called PointCloud to grid map and digital elevation model (PC2GD), which extracts the occupation grid map and digital elevation model from a PointCloud. This can be used in AgRobPP core algorithms and farm management intelligent systems as well. AgRobPP algorithms demonstrate a great performance with the real data acquired from AgRob V16, a robotic platform developed for autonomous navigation in steep slope vineyards.",Agricultural robots; Center of mass; Path planning; Vineyard,Path Planning Aware of Robot’s Center of Mass for Steep Slope Vineyards,,x,,,,,,,,,,NO,,
S1580,4,bkwd,journalArticle,2020,"Santos, Luís Carlos; Aguiar, André Silva; Santos, Filipe Neves; Valente, António; Petry, Marcelo",Robotics,"Robotics will significantly impact large sectors of the economy with relatively low productivity, such as Agri-Food production. Deploying agricultural robots on the farm is still a challenging task. When it comes to localising the robot, there is a need for a preliminary map, which is obtained from a first robot visit to the farm. Mapping is a semi-autonomous task that requires a human operator to drive the robot throughout the environment using a control pad. Visual and geometric features are used by Simultaneous Localisation and Mapping (SLAM) Algorithms to model and recognise places, and track the robot&rsquo;s motion. In agricultural fields, this represents a time-consuming operation. This work proposes a novel solution&mdash;called AgRoBPP-bridge&mdash;to autonomously extract Occupancy Grid and Topological maps from satellites images. These preliminary maps are used by the robot in its first visit, reducing the need of human intervention and making the path planning algorithms more efficient. AgRoBPP-bridge consists of two stages: vineyards row detection and topological map extraction. For vineyards row detection, we explored two approaches, one that is based on conventional machine learning technique, by considering Support Vector Machine with Local Binary Pattern-based features, and another one found in deep learning techniques (ResNET and DenseNET). From the vineyards row detection, we extracted an occupation grid map and, by considering advanced image processing techniques and Voronoi diagrams concept, we obtained a topological map. Our results demonstrated an overall accuracy higher than 85% for detecting vineyards and free paths for robot navigation. The Support Vector Machine (SVM)-based approach demonstrated the best performance in terms of precision and computational resources consumption. AgRoBPP-bridge shows to be a relevant contribution to simplify the deployment of robots in agriculture.",agricultural robotics; deep learning; path planning; steep slope vineyard; support vector machine; topological map,Occupancy Grid and Topological Maps Extraction from Satellite Images for Path Planning in Agricultural Robots,,x,,,,,,,,,,NO,,
S1581,4,bkwd,conferencePaper,2021,"Santos, Luís C.; Aguiar, André S.; Santos, Filipe N.; Valente, António; Ventura, José Boa; Sousa, Armando J.",Intelligent Systems and Applications,"Agricultural robotics is nowadays a complex, challenging, and relevant research topic for the sustainability of our society. Some agricultural environments present harsh conditions to robotics operability. In the case of steep-slope vineyards, there are several robotic challenges: terrain irregularities, characteristics of illumination, and inaccuracy/unavailability of the Global Navigation Satellite System. Under these conditions, robotics navigation, mapping, and localization become a challenging task. Performing these tasks with safety and accuracy, a reliable and advanced Navigation stack for robots working in a steep slope vineyard is required. This paper presents the integration of several robotic components, path planning aware of robot centre of gravity and terrain slope, occupation grid map extraction from satellite images, a localization and mapping procedure based on high-level visual features reliable under GNSS signals blockage/missing, for steep-slope robots.",Agricultural robotics; Autonomous navigation; Localization; Mapping; Path planning,Navigation Stack for Robots Working in Steep Slope Vineyard,,x,,,,,,,,,,NO,,
S1582,4,bkwd,journalArticle,2021,"Aguiar, André Silva; dos Santos, Filipe Neves; Sobreira, Héber; Cunha, José Boaventura; Sousa, Armando Jorge",Robotics and Autonomous Systems,"Developing safe autonomous robotic applications for outdoor agricultural environments is a research field that still presents many challenges. Simultaneous Localization and Mapping can be crucial to endow the robot to localize itself with accuracy and, consequently, perform tasks such as crop monitoring and harvesting autonomously. In these environments, the robotic localization and mapping systems usually benefit from the high density of visual features. When using filter-based solutions to localize the robot, such an environment usually uses a high number of particles to perform accurately. These two facts can lead to computationally expensive localization algorithms that are intended to perform in real-time. This work proposes a refinement step to a standard high-dimensional filter-based localization solution through the novelty of downsampling the filter using an online clustering algorithm and applying a scan-match procedure to each cluster. Thus, this approach allows scan-matchers without high computational cost, even in high dimensional filters. Experiments using real data in an agricultural environment show that this approach improves the Particle Filter performance estimating the robot pose. Additionally, results show that this approach can build a precise 3D reconstruction of agricultural environments using visual scans, i.e., 3D scans with RGB information.",Agricultural robotics; Clustering; SLAM,Particle filter refinement based on clustering procedures for high-dimensional localization and mapping systems,,x,,,,,,,,,,NO,,
S1583,4,bkwd,conferencePaper,2015,"Ingibergsson, Johann Thor Mogensen; Schultz, Ulrik Pagh; Kuhrmann, Marco",Product-Focused Software Process Improvement,"Robotics has recently seen an increasing development, and the areas addressed within robotics has extended into domains we consider safety-critical, fostering the development of standards that facilitate the development of safe robots. Safety standards describe concepts to maintain desired reactions or performance in malfunctioning systems, and influence industry regarding software development and project management. However, academia seemingly did not reach the same degree of utilisation of standards. This paper presents the findings from a systematic mapping study in which we study the state-of-the-art in developing software for safety-critical software for autonomous field robots. The purpose of the study is to identify practices used for the development of autonomous field robots and how these practices relate to available safety standards. Our findings from reviewing 49 papers show that standards, if at all, are barely used. The majority of the papers propose various solutions to achieve safety, and about half of the papers refer to non-standardised approaches that mainly address the methodical rather than the development level. The present study thus shows an emerging field still on the quest for suitable approaches to develop safety-critical software, awaiting appropriate standards for this support.",Autonomous field robots; Development practices; Safety; Standards; Systematic mapping study,On the Use of Safety Certification Practices in Autonomous Field Robot Software Development: A Systematic Mapping Study,,x,,,,,,,,,,NO,,
S1584,4,bkwd,conferencePaper,2016,"Santos, André; Cunha, Alcino; Macedo, Nuno; Lourenço, Cláudio",2016 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),"Robots are being increasingly used in safety-critical contexts, such as transportation and health. The need for flexible behavior in these contexts, due to human interaction factors or unstructured operating environments, led to a transition from hardware- to software-based safety mechanisms in robotic systems, whose reliability and quality is imperative to guarantee. Source code static analysis is a key component in formal software verification. It consists on inspecting code, often using automated tools, to determine a set of relevant properties that are known to influence the occurrence of defects in the final product. This paper presents HAROS, a generic, plug-in-driven, framework to evaluate code quality, through static analysis, in the context of the Robot Operating System (ROS), one of the most widely used robotic middleware. This tool (equipped with plug-ins for computing metrics and conformance to coding standards) was applied to several publicly available ROS repositories, whose results are also reported in the paper, thus providing a first overview of the internal quality of the software being developed in this community.",Context; Measurement; Safety; Service robots; Software; Standards,A framework for quality assessment of ROS repositories,,,,,,,,x,,,,NO,,
S1585,4,bkwd,journalArticle,2016,"Webster, Matt; Dixon, Clare; Fisher, Michael; Salem, Maha; Saunders, Joe; Koay, Kheng Lee; Dautenhahn, Kerstin; Saez-Pons, Joan",IEEE Transactions on Human-Machine Systems,"It is essential for robots working in close proximity to people to be both safe and trustworthy. We present a case study on formal verification for a high-level planner/scheduler for the Care-O-bot, an autonomous personal robotic assistant. We describe how a model of the Care-O-bot and its environment was developed using Brahms, a multiagent workflow language. Formal verification was then carried out by automatically translating this model to the input language of an existing model checker. Four sample properties based on system requirements were verified. We then refined the environment model three times to increase its accuracy and the persuasiveness of the formal verification results. The first refinement uses a user activity log based on real-life experiments, but is deterministic. The second refinement uses the activities from the user activity log nondeterministically. The third refinement uses “conjoined activities” based on an observation that many user activities can overlap. The four samples properties were verified for each refinement of the environment model. Finally, we discuss the approach of environment model refinement with respect to this case study.",Autonomous systems; formal verification; human–robot teams; model checking; Navigation; Robot sensing systems; robotics; Software; TV; Watches,Toward Reliable Autonomous Robotic Assistants Through Formal Verification: A Case Study,,x,,,,,,,,,,NO,,
S1586,4,bkwd,conferencePaper,2018,"Mansoor, Niloofar; Saddler, Jonathan A.; Silva, Bruno; Bagheri, Hamid; Cohen, Myra B.; Farritor, Shane",Proceedings of the 2018 26th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering,"Safety-critical applications often use dependability cases to validate that specified properties are invariant, or to demonstrate a counter example showing how that property might be violated. However, most dependability cases are written with a single product in mind. At the same time, software product lines (families of related software products) have been studied with the goal of modeling variability and commonality, and building family based techniques for both analysis and testing. However, there has been little work on building an end to end dependability case for a software product line (where a property is modeled, a counter example is found and then validated as a true positive via testing), and none that we know of in an emerging safety-critical domain, that of robotic surgery. In this paper, we study a family of surgical robots, that combine hardware and software, and are highly configurable, representing over 1300 unique robots. At the same time, they are considered safety-critical and should have associated dependability cases. We perform a case study to understand how we can bring together lightweight formal analysis, feature modeling, and testing to provide an end to end pipeline to find potential violations of important safety properties. In the process, we learned that there are some interesting and open challenges for the research community, which if solved will lead towards more dependable safety-critical cyber-physical systems.",Alloy; cyber-physical systems; software product lines; testing and analysis,Modeling and testing a family of surgical robots: an experience report,,x,,,,,,,,,,NO,,
S1587,4,bkwd,conferencePaper,2020,"Neto, Tiago; Arrais, Rafael; Sousa, Armando; Santos, André; Veiga, Germano",Robot 2019: Fourth Iberian Robotics Conference,"Modern industry is shifting towards flexible, advanced robotic systems to meet the increasing demand for custom-made products with low manufacturing costs and to promote a collaborative environment for humans and robots. As a consequence of this industrial revolution, some traditional, mechanical- and hardware-based safety mechanisms are discarded in favour of a safer, more dependable robot software. This work presents a case study of assessing and improving the internal quality of a European research mobile manipulator, operating in a real industrial environment, using modern static analysis tools geared for robotic software. Following an iterative approach, we managed to fix about 90% of the reported issues, resulting in code that is easier to use and maintain.",Mobile manipulator; ROS; Safety; Software static analysis,Applying Software Static Analysis to ROS: The Case Study of the FASTEN European Project,,,,,,,,x,,,,NO,,
S1588,4,bkwd,conferencePaper,2014,"Adam, Sorin; Larsen, Morten; Jensen, Kjeld; Schultz, Ulrik Pagh","Simulation, Modeling, and Programming for Autonomous Robots","Safety is a key challenge in robotics, in particular for mobile robots operating in an open and unpredictable environment. To address the safety challenge, various software-based approaches have been proposed, but none of them provide a clearly specified and isolated safety layer. In this paper, we propose that safety-critical concerns regarding the robot software be explicitly declared separately from the main program, in terms of externally observable properties of the software. Concretely, we use a Domain-Specific Language (DSL) to declaratively specify a set of safety-related rules that the software must obey, as well as corresponding corrective actions that trigger when rules are violated. Our prototype DSL is integrated with ROS, is shown to be capable of specifying safety-related constraints, and is experimentally demonstrated to enforce safety behaviour in existing robot software. We believe our approach could be extended to other fields to similarly simplify safety certification.",Hardware Fault; Mobile Robot; Safety Rule; Test Node; Velocity Command,Towards Rule-Based Dynamic Safety Monitoring for Mobile Robots,,,,,,,,x,,,,NO,,
S1589,4,bkwd,conferencePaper,2018,"Luo, Chenxia; Wang, Rui; Jiang, Yu; Yang, Kang; Guan, Yong; Li, Xiaojuan; Shi, Zhiping",2018 IEEE 42nd Annual Computer Software and Applications Conference (COMPSAC),"The robot has attracted much attention to anticipate improved quality of human life. Real-time obstacle avoidance is one of hot spots of the research. Runtime verification is a real-time and lightweight verification technology to verify the properties in many fields. In this case study, we use the JavaMOP, a runtime verification tool to verify the implementations' correctness of the safety strategies for avoiding collision as a complement to the design. The design of the safety strategies can be classified as the pre-contact safety strategy and the post-contact safety strategy. The former can avoid obstacles and the latter can reduce the physical damage after a collision. Additionally, this case study also proposes a new method of dynamic parameter selection. It can automatically update the parameters during the operation of the robot without having to get familiar with and to modify robot programs. Because some special parameters may change as mutative factors or be updated by engineers' experience in the uncertain environment, they cannot be fixed. We follow the JavaMOP specification to describe informal requirements using the FSM and ptLTL languages. Finally, the experimental results verify the correctness of the safety strategies and the effectiveness of dynamic parameter selection.","Collision avoidance; Monitoring; Robot sensing systems; Runtime; runtime verification, JavaMOP, collide avoidance, dynamic parameter selection; Safety",Runtime Verification of Robots Collision Avoidance Case Study,,x,,,,,,,,,,NO,,
S1590,4,bkwd,conferencePaper,2019,"Ulus, Dogan; Belta, Calin",Runtime Verification,"This paper presents an application of specification based runtime verification techniques to control mobile robots in a reactive manner. In our case study, we develop a layered control architecture where runtime monitors constructed from formal specifications are embedded into the navigation stack. We use temporal logic and regular expressions to describe safety requirements and mission specifications, respectively. An immediate benefit of our approach is that it leverages simple requirements and objectives of traditional control applications to more complex specifications in a non-intrusive and compositional way. Finally, we demonstrate a simulation of robots controlled by the proposed architecture and we discuss further extensions of our approach.",,Reactive Control Meets Runtime Verification: A Case Study of Navigation,,x,,,,,,,,,,NO,,
S1591,4,bkwd,conferencePaper,2019,"Lesire, Charles; Roussel, Stéphanie; Doose, David; Grand, Christophe",2019 International Conference on Robotics and Automation (ICRA),"Fault-tolerant architectures are mandatory to ensure the robustness of autonomous robots performing missions in complex and uncertain environments. The first step of a fault-tolerant mechanism is the detection of a faulty behavior of the system. It is then important to provide tools to help robot developers specify relevant observers. It is moreover crucial to guarantee a correct implementation of the observers, i.e. that the observers do not miss data and do not trigger unsuitable recovery actions in case of false detection. In this paper, we propose a specification language for observers that uses Past-Time LTL to express complex formulas on data produced by software components, and timed constraints on the evaluations of these formulas. We moreover provide an implementation of this specification that guarantees a real-time evaluation of the observers. We briefly describe the observers we have specified for a patrolling mission, and we evaluate the performance of our approach compared to state of the art on a benchmark in which we detect errors on a laser range sensor.",Monitoring; Observers; Real-time systems; Robot sensing systems; Safety; Timing,Synthesis of Real-Time Observers from Past-Time Linear Temporal Logic and Timed Specification,,x,,,,,,,,,,NO,,
S1592,4,bkwd,conferencePaper,2019,"Santos, Luís; Santos, Filipe N.; Filipe, Vitor; Shinde, Pranjali",Progress in Artificial Intelligence,"Steep slope vineyards are a complex scenario for the development of ground robots due to the harsh terrain conditions and unstable localization systems. Automate vineyard tasks (like monitoring, pruning, spraying, and harvesting) requires advanced robotic path planning approaches. These approaches usually resort to Simultaneous Localization and Mapping (SLAM) techniques to acquire environment information, which requires previous navigation of the robot through the entire vineyard. The analysis of satellite or aerial images could represent an alternative to SLAM techniques, to build the first version of occupation grid map (needed by robots). The state of the art for aerial vineyard images analysis is limited to flat vineyards with straight vine’s row. This work considers a machine learning based approach (SVM classifier with Local Binary Pattern (LBP) based descriptor) to perform the vineyard segmentation from public satellite imagery. In the experiments with a dataset of satellite images from vineyards of Douro region, the proposed method achieved accuracy over 90%.",Agricultural robotics; Machine learning; Path planning; Satellite images; Vineyard,Vineyard Segmentation from Satellite Imagery Using Machine Learning,,x,,,,,,,,,,NO,,
S1593,4,bkwd,conferencePaper,2019,"Santos, Luís; Santos, Filipe N.; Magalhães, Sandro; Costa, Pedro; Reis, Ricardo",2019 IEEE International Conference on Autonomous Robot Systems and Competitions (ICARSC),"Robotic platforms are being developed for precision agriculture, to execute repetitive and long term tasks. Autonomous monitoring, pruning, spraying and harvesting are some of these agricultural tasks, which requires an advanced path planning system aware of maximum robot capabilities (mobile platform and arms), terrain slopes and plant/fruits position. The state of the art path planning systems have two limitations: are not optimized for large regions and the path planning is not aware of agricultural tasks requirements. This work presents two solutions to overcome these limitations. It considers the VGR2TO (Vineyard Grid Map to Topological) approach to extract from a 2D grid map a topological map, to reduce the total amount of memory needed by the path planning algorithm and to reduce path search space. Besides, introduces an extension to the chosen algorithm, the Astar algorithm, to ensure a safe path and a maximum distance from the vine trees to enable robotic operations on the tree and its fruits.",agricultural robotics; Heuristic algorithms; Navigation; path planning; Path planning; Robots; Task analysis; Tools; topological map; Vegetation; vineyard,Path Planning approach with the extraction of Topological Maps from Occupancy Grid Maps in steep slope vineyards,,x,,,,,,,,,,NO,,
S1594,4,bkwd,conferencePaper,2020,"Carvalho, Renato; Cunha, Alcino; Macedo, Nuno; Santos, André",2020 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),"Robots are currently deployed in safety-critical domains but proper techniques to assess the functional safety of their software are yet to be adopted. This is particularly critical in ROS, where highly configurable robots are built by composing third-party modules. To promote adoption, we advocate the use of lightweight formal methods, automatic techniques with minimal user input and intuitive feedback. This paper proposes a technique to automatically verify system-wide safety properties of ROS-based applications at static time. It is based in the formalization of ROS architectural models and node behaviour in Electrum, over which system-wide specifications are subsequently model checked. To automate the analysis, it is deployed as a plug-in for HAROS, a framework for the assessment of ROS software quality aimed at the ROS community. The technique is evaluated in a real robot, AgRob V16, with positive results.",Computer architecture; Intelligent robots; Middleware; Model checking; Safety; Scalability; Software quality,Verification of system-wide safety properties of ROS applications,,,,,,,,x,,,,NO,,
S1595,4,bkwd,conferencePaper,2019,"Santos, André; Cunha, Alcino; Macedo, Nuno",2019 Third IEEE International Conference on Robotic Computing (IRC),"The Robot Operating System (ROS) is one of the most popular open source robotic frameworks, and has contributed significantly to the fast development of robotics. Even though ROS provides many ready-made components, a robotic system is inherently complex, in particular regarding the architecture and orchestration of such components. Availability and analysis of a system's architecture at compile time is fundamental to ease comprehension and development of higher-quality software. However, ROS developers have to overcome this complexity relying mostly on testing and runtime visualisers. This work aims to enhance static-time support by proposing, firstly, a metamodel to describe the software architecture of ROS systems (the ROS Computation Graph) and, secondly, model extraction and visualisation tools for such architectural models. The provided tools allow users to specify custom-made queries over these models, enabling the static verification of relevant properties that had to be (manually) checked at runtime before.",Computational modeling; Computer architecture; robotics; Robots; Runtime; Software; software architecture; software quality; static analysis; Tools; Visualization,Static-Time Extraction and Analysis of the ROS Computation Graph,,,,,,,,x,,,,NO,,
S1596,4,bkwd,webpage,,,,,,Special Session: Embedded Software for Robotics: Challenges and Future Directions | IEEE Conference Publication | IEEE Xplore,,,,,,x,,,,,,NO,,
S1597,4,bkwd,webpage,,,,,,Optimized selection of reliable and cost-effective cyber-physical system architectures | IEEE Conference Publication | IEEE Xplore,,,,,,x,,,,,,NO,,
S1598,4,bkwd,journalArticle,2012,"Bloem, Roderick; Jobstmann, Barbara; Piterman, Nir; Pnueli, Amir; Saʼar, Yaniv",Journal of Computer and System Sciences,"We address the problem of automatically synthesizing digital designs from linear-time specifications. We consider various classes of specifications that can be synthesized with effort quadratic in the number of states of the reactive system, where we measure effort in symbolic steps. The synthesis algorithm is based on a novel type of game called General Reactivity of rank 1 (gr(1)), with a winning condition of the form(□ ◊p1∧⋯∧□ ◊pm)→(□ ◊q1∧⋯∧□ ◊qn), where each pi and qi is a Boolean combination of atomic propositions. We show symbolic algorithms to solve this game, to build a winning strategy and several ways to optimize the winning strategy and to extract a system from it. We also show how to use gr(1) games to solve the synthesis of ltl specifications in many interesting cases. As empirical evidence to the generality and efficiency of our approach we include a significant case study. We describe the formal specifications and the synthesis process applied to a bus arbiter, which is a realistic industrial hardware specification of modest size.",Game theory; Property synthesis; Realizability,Synthesis of Reactive(1) designs,,x,,,,,,,,,,NO,,
S1599,4,bkwd,journalArticle,2010,"Bombieri, Nicola; Di Guglielmo, Giuseppe; Ferrari, Michele; Fummi, Franco; Pravadelli, Graziano; Stefanni, Francesco; Venturelli, Alessandro",EURASIP Journal on Embedded Systems,,,HIFSuite: Tools for HDL Code Conversion and Manipulation,,x,,,,,,,,,,NO,,
S1600,4,bkwd,conferencePaper,2012,"Bresolin, Davide; Di Guglielmo, Luigi; Geretti, Luca; Muradore, Riccardo; Fiorini, Paolo; Villa, Tiziano",2012 15th Euromicro Conference on Digital System Design,"The relevance of formal verification methods is widely recognized in the computer science and embedded systems community. Recently, such methods have been introduced also within the control community, to help designers in developing control architectures for complex robotics systems. Robotic systems typically mix continuous and discrete behaviors that cannot be modeled faithfully using neither continuous-only nor discrete-only formalisms. The interaction of continuous and discrete dynamics makes the formal treatment of this kind of systems computationally very demanding, and justifies the need of studying new methods and algorithms. In this paper, we outline the current state-of-the-art, and describe some open problems in verification, refinement and implementation of autonomous robotic systems. We motivate the relevance of our analysis by means of an Autonomous Robotic Surgery test case.",Automata; Autonomous robotic systems; Delay; End effectors; Force; Formal verification; Hybrid systems; Implementation; Refinement; Semantics; Surgery,Open Problems in Verification and Refinement of Autonomous Robotic Systems,,x,,,,,,,,,,NO,,
S1601,4,bkwd,conferencePaper,2001,"Bruyninckx, H.",Proceedings 2001 ICRA. IEEE International Conference on Robotics and Automation (Cat. No.01CH37164),"This paper introduces the OROCOS project that aims at becoming a general-purpose and open robot control software package. OROCOS follows the open source development model that has been proven to work in many other general-purpose software packages, such as Linux, Apache, Perl or LATEX. The paper focuses on the long-term vision of this start-up project, motivates which strategic and innovative design decisions are to be taken (a CORBA-like component architecture being the most important one), and lists other projects on which OROCOS could build. The success of OROCOS depends critically on how many researchers and engineers can be motivated to contribute code, documentation and feedback to the project.",Communication standards; Computer industry; Consumer electronics; Industrial electronics; Linux; Manufacturing industries; Open source software; Robot control; Service robots; Software packages,Open robot control software: the OROCOS project,,,,,x,,,,,,,NO,,
S1602,4,bkwd,journalArticle,2003,"Clarke, Edmund; Grumberg, Orna; Jha, Somesh; Lu, Yuan; Veith, Helmut",Journal of the ACM,"The state explosion problem remains a major hurdle in applying symbolic model checking to large hardware designs. State space abstraction, having been essential for verifying designs of industrial complexity, is typically a manual process, requiring considerable creativity and insight.In this article, we present an automatic iterative abstraction-refinement methodology that extends symbolic model checking. In our method, the initial abstract model is generated by an automatic analysis of the control structures in the program to be verified. Abstract models may admit erroneous (or ""spurious"") counterexamples. We devise new symbolic techniques that analyze such counterexamples and refine the abstract model correspondingly. We describe aSMV, a prototype implementation of our methodology in NuSMV. Practical experiments including a large Fujitsu IP core design with about 500 latches and 10000 lines of SMV code confirm the effectiveness of our approach.",Abstraction; hardware verification; symbolic model checking; temporal logic,Counterexample-guided abstraction refinement for symbolic model checking,,,,,x,,,,,,,NO,,
S1603,4,bkwd,journalArticle,2018,"Benveniste, Albert; Caillaud, Benoît; Nickovic, Dejan; Passerone, Roberto; Raclet, Jean-Baptiste; Reinkemeier, Philipp; Sangiovanni-Vincentelli, Alberto; Damm, Werner; Henzinger, Thomas A.; Larsen, Kim G.",Foundations and Trends® in Electronic Design Automation,,,Contracts for System Design,,x,,,,,,,,,,NO,,
S1604,4,bkwd,conferencePaper,2017,"Desai, Ankush; Saha, Indranil; Yang, Jianqiao; Qadeer, Shaz; Seshia, Sanjit A.",Proceedings of the 8th International Conference on Cyber-Physical Systems,"Distributed mobile robotics (DMR) involves teams of networked robots navigating in a physical space to achieve tasks in a coordinated fashion. A major challenge in DMR is to program the ensemble of robots with formal guarantees and high assurance of correct operation. To this end, we introduce Drona, a framework for building reliable DMR applications. This paper makes three central contributions: (1) We present a novel and provably correct decentralized asynchronous motion planner that can perform on-the-fly collision-free planning for dynamically generated tasks. Moreover, the motion planner is the first to take into account the fact that distributed robots may have clocks that are only synchronized up to a tolerance, i.e., they are almost synchronous; (2) We formalize the DMR system as a mixed-synchronous system, and present a sound abstraction-based verification approach for DMR systems, and (3) Drona provides a state-machine based language for safe event-driven programming of a DMR system and the code generated by the compiler can be executed on platforms such as the robot operating system (ROS). To demonstrate the efficacy of Drona, we build and verify a priority mail delivery system. Using our abstraction-based verification approach we were able to find, within a few minutes, bugs which could not be found by performing random simulation for several hours. Our verified decentralized motion-planner scales efficiently for large number of robots (upto 128 robots) and workspace sizes (upto a 256×256 grid).",distributed robotics; multi-robot motion planning; programming language for robotics; safe mobile robotics; verification,DRONA: a framework for safe distributed mobile robotics,,,x,,,,,,,,,NO,,
S1605,4,bkwd,conferencePaper,2016,"Ehlers, Rüdiger; Raman, Vasumathi",Computer Aided Verification,"Applying reactive synthesis in practice often requires modifications of the synthesis algorithm in order to obtain useful implementations. We present slugs, a generalized reactivity(1) synthesis tool that has a powerful plugin architecture for modifying any aspect of the synthesis process to fit the application. Slugs comes pre-equipped with a variety of plugins that improve the quality of the synthesized solutions along criteria such as quick response, cost-optimality, and error-resilience. We demonstrate the utility and scalability of the tool on an example from robotics.",Binary Decision Diagrams (BDDs); Liveness Assumptions; Robotics; Slug Distribution; Synthesis Algorithm,Slugs: Extensible GR(1) Synthesis,,x,,,,,,,,,,NO,,
S1606,4,bkwd,journalArticle,1989,"Elfes, A.",Computer,"An approach to robot perception and world modeling that uses a probabilistic tesselated representation of spatial information called the occupancy grid is reviewed. The occupancy grid is a multidimensional random field that maintains stochastic estimates of the occupancy state of the cells in a spatial lattice. To construct a sensor-derived map of the robot's world, the cell state estimates are obtained by interpreting the incoming range readings using probabilistic sensor models. Bayesian estimation procedures allow the incremental updating of the occupancy grid, using readings taken from several sensors over multiple points of view. The use of occupancy grids from mapping and for navigation is examined. Operations on occupancy grids and extensions of the occupancy grid framework are briefly considered.<>",Decision making; Mobile robots; Navigation; Path planning; Remotely operated vehicles; Robot kinematics; Robot sensing systems; Robustness; Service robots; State estimation,Using occupancy grids for mobile robot perception and navigation,,,,,x,,,,,,,NO,,
S1607,4,bkwd,journalArticle,2016,"Feldman, Yishai A.; Broodney, Henry",INCOSE International Symposium,"The classical systems engineering practice is mostly process centric, but with the recent advances in Information Technologies, we have started to engage in model-based and other software-supported activities that make us more efficient and our products better. The subject of this paper is a pursuit of further improvements in the software tools supporting the systems engineers, this time an attempt to transform the regular textual requirements into computer-readable artifacts that will enable software tools to better analyze a requirement set and to automate cross-lifecycle exchange of information leading to increased automation and higher quality. The paper starts by describing an experiment targeted at requirements formalization, continues with the insights gained from the experiment, and finishes with the insights that the authors have reached on a reasonable and incremental roadmap to a fully synergetic interaction between Requirements Engineers and their supporting tools.",,A Cognitive Journey for Requirements Engineering,,x,,,,,,,,,,NO,,
S1608,4,bkwd,conferencePaper,2016,"Filippidis, Ioannis; Dathathri, Sumanth; Livingston, Scott C.; Ozay, Necmiye; Murray, Richard M.",2016 IEEE Conference on Control Applications (CCA),"This tutorial describes TuLiP, the Temporal Logic Planning toolbox, a collection of tools for designing controllers for hybrid systems from specifications in temporal logic. The tools support a workflow that starts from a description of desired behavior, and of the system to be controlled. The system can have discrete state, or be a hybrid dynamical system with a mixed discrete and continuous state space. The desired behavior can be represented with temporal logic and discrete transition systems. The system description can include uncontrollable variables that take discrete or continuous values, and represent disturbances and other environmental factors that affect the dynamics, as well as communication signals that affect controller decisions. A control design problem is solved in phases that involve abstraction, discrete synthesis, and continuous feedback control. Abstraction yields a discrete description of system dynamics in logic. For piecewise affine dynamical systems, this abstraction is constructed automatically, guided by the geometry of the dynamics and under logical constraints from the specification. The resulting logic formulae describe admissible discrete behaviors that capture both controlled and environment variables. The discrete description resulting from abstraction is then conjoined with the desired logic specification. To find a controller, the toolbox solves a game of infinite duration. Existence of a discrete (winning) strategy for the controlled variables in this game is a proof certificate for the existence of a controller for the original problem, which guarantees satisfaction of the specification. This discrete strategy, concretized by using continuous controllers, yields a feedback controller for the original hybrid system. The toolbox frontend is written in Python, with backends in C, Python, and Cython. The tutorial starts with an overview of the theory behind TuLiP, and of its software architecture, organized into specification frontends and backends that implement algorithms for abstraction, solving games, and interfaces to other tools. Then, the main elements for writing a specification for input to TuLiP are introduced. These include logic formulae, discrete transition systems annotated with predicates, and hybrid dynamical systems, with linear or piecewise affine continuous dynamics. The working principles of the algorithms for predicate abstraction and discrete game solving using nested fixpoints are explained, by following the input specification through the various transformations that compile it to a symbolic representation that scales well to solving large games. The tutorial concludes with several design examples that demonstrate the toolbox's capabilities.",Algorithm design and analysis; Control systems; Games; Heuristic algorithms; Planning; Tutorials; Writing,Control design for hybrid systems with TuLiP: The Temporal Logic Planning toolbox,,x,,,,,,,,,,NO,,
S1609,4,bkwd,conferencePaper,2010,"Finucane, Cameron; Jing, Gangyuan; Kress-Gazit, Hadas",2010 IEEE/RSJ International Conference on Intelligent Robots and Systems,"The Linear Temporal Logic MissiOn Planning (LTLMoP) toolkit is a software package designed to assist in the rapid development, implementation, and testing of high-level robot controllers. In this toolkit, structured English and Linear Temporal Logic are used to write high-level reactive task specifications, which are then automatically transformed into correct robot controllers that can be used to drive either a simulated or a real robot. LTLMoP's modular design makes it ideal for research in areas such as controller synthesis, semantic parsing, motion planning, and human-robot interaction.",Actuators; Automata; controller synthesis; Grammar; hybrid control; language; mission planning; Motion planning; Planning; Robot kinematics; Robot sensing systems; sensor-based planning; temporal logics,"LTLMoP: Experimenting with language, Temporal Logic and robot control",,x,,,,,,,,,,NO,,
S1610,4,bkwd,conferencePaper,2014,"Fummi, Franco; Lora, Michele; Stefanni, Francesco; Trachanis, Dimitrios; Vanhese, Jahn; Vinco, Sara","2014 Design, Automation Test in Europe Conference Exhibition (DATE)","Design of smart systems needs to cover a wide variety of domains, ranging from analogue to digital, with power devices, micro-sensors and actuators, up to MEMS. This high level of heterogeneity makes design a very challenging task, as each domain is supported by specific languages, modeling formalisms and simulation frameworks. A major issue is furthermore posed by simulation, that heavily impacts the design and verification loop and that is very hard to be built in such an heterogeneous context. On the other hand, achieving efficient simulation would indeed make smart system design feasible with respect to budget constraints. This work provides a formalization of the typical abstraction levels and design domains of a smart system. This taxonomy allows to identify a precise role in the design flow for co-simulation and simulation scenarios. Moreover, a methodology is proposed to move from the co-simulated heterogeneity to a simulatable homogeneous representation in C++ of the entire smart system. The impact of heterogeneous or homogeneous models of computation is also examined. Experimental results prove the effectiveness of the proposed C++ generation for reaching high-speed simulation.",Actuators; Automata; Computational modeling; Mathematical model; Sensors; Synchronization; Taxonomy,Moving from co-simulation to simulation for effective smart systems design,,x,,,,,,,,,,NO,,
S1611,4,bkwd,journalArticle,2004,"Gerkey, Brian P.; Matarić, Maja J.",The International Journal of Robotics Research,"Despite more than a decade of experimental work in multi-robot systems, important theoretical aspects of multi-robot coordination mechanisms have, to date, been largely untreated. To address this issue, we focus on the problem of multi-robot task allocation (MRTA). Most work on MRTA has been ad hoc and empirical, with many coordination architectures having been proposed and validated in a proof-of-concept fashion, but infrequently analyzed. With the goal of bringing objective grounding to this important area of research, we present a formal study of MRTA problems. A domain-independent taxonomy of MRTA problems is given, and it is shown how many such problems can be viewed as instances of other, well-studied, optimization problems. We demonstrate how relevant theory from operations research and combinatorial optimization can be used for analysis and greater understanding of existing approaches to task allocation, and to show how the same theory can be used in the synthesis of new approaches.",coordination; multi-robot systems; task allocation; utility,A Formal Analysis and Taxonomy of Task Allocation in Multi-Robot Systems,,,,,x,,,,,,,NO,,
S1612,4,bkwd,journalArticle,1997,"Holzmann, G.J.",IEEE Transactions on Software Engineering,"SPIN is an efficient verification system for models of distributed software systems. It has been used to detect design errors in applications ranging from high-level descriptions of distributed algorithms to detailed code for controlling telephone exchanges. The paper gives an overview of the design and structure of the verifier, reviews its theoretical foundation, and gives an overview of significant practical applications.",Algorithm design and analysis; Application software; Concurrent computing; Control system synthesis; Design methodology; Distributed algorithms; Error correction codes; Message passing; Software systems; Telephony,The model checker SPIN,,,,,x,,,,,,,NO,,
S1613,4,bkwd,journalArticle,2012,"Iñigo-Blasco, Pablo; Diaz-del-Rio, Fernando; Romero-Ternero, M Carmen; Cagigas-Muñiz, Daniel; Vicente-Diaz, Saturnino",Robotics and Autonomous Systems,"Robotics is an area of research in which the paradigm of Multi-Agent Systems (MAS) can prove to be highly useful. Multi-Agent Systems come in the form of cooperative robots in a team, sensor networks based on mobile robots, and robots in Intelligent Environments, to name but a few. However, the development of Multi-Agent Robotic Systems (MARS) still presents major challenges. Over the past decade, a high number of Robotics Software Frameworks (RSFs) have appeared which propose some solutions to the most recurrent problems in robotics. Some of these frameworks, such as ROS, YARP, OROCOS, ORCA, Open-RTM, and Open-RDK, possess certain characteristics and provide the basic infrastructure necessary for the development of MARS. The contribution of this work is the identification of such characteristics as well as the analysis of these frameworks in comparison with the general-purpose Multi-Agent System Frameworks (MASFs), such as JADE and Mobile-C.",Agents; Architecture; MAS; Middleware; Robotics; Software frameworks,Robotics software frameworks for multi-agent robotic systems development,,x,,,,,,,,,,NO,,
S1614,4,bkwd,journalArticle,2000,"Keutzer, K.; Newton, A.R.; Rabaey, J.M.; Sangiovanni-Vincentelli, A.",IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems,"System-level design issues become critical as implementation technology evolves toward increasingly complex integrated circuits and the time-to-market pressure continues relentlessly. To cope with these issues, new methodologies that emphasize re-use at all levels of abstraction are a ""must"", and this is a major focus of our work in the Gigascale Silicon Research Center. We present some important concepts for system design that are likely to provide at least some of the gains in productivity postulated above. In particular, we focus on a method that separates parts of the design process and makes them nearly independent so that complexity could be mastered. In this domain, architecture-function co-design and communication-based design are introduced and motivated. Platforms are essential elements of this design paradigm. We define system platforms and we argue about their use and relevance. Then we present an application of the design methodology to the design of wireless systems. Finally, we present a new approach to platform-based design called modern embedded systems, compilers, architectures and languages, based on highly concurrent and software programmable architectures and associated design tools.",Application software; Computer architecture; Design methodology; Embedded system; Integrated circuit technology; Process design; Productivity; Silicon; System-level design; Time to market,System-level design: orthogonalization of concerns and platform-based design,,x,,,,,,,,,,NO,,
S1615,4,bkwd,conferencePaper,2004,"Koenig, N.; Howard, A.",2004 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS) (IEEE Cat. No.04CH37566),"Simulators have played a critical role in robotics research as tools for quick and efficient testing of new concepts, strategies, and algorithms. To date, most simulators have been restricted to 2D worlds, and few have matured to the point where they are both highly capable and easily adaptable. Gazebo is designed to fill this niche by creating a 3D dynamic multi-robot environment capable of recreating the complex worlds that would be encountered by the next generation of mobile robots. Its open source status, fine grained control, and high fidelity place Gazebo in a unique position to become more than just a stepping stone between the drawing board and real hardware: data visualization, simulation of remote environments, and even reverse engineering of blackbox systems are all possible applications. Gazebo is developed in cooperation with the Player and Stage projects (Gerkey, B. P., et al., July 2003), (Gerkey, B. P., et al., May 2001), (Vaughan, R. T., et al., Oct. 2003), and is available from http://playerstage.sourceforge.net/gazebo/ gazebo.html.",Computational modeling; Educational robots; Friction; Mobile robots; Open source software; Packaging; Robot sensing systems; Service robots; Testing; Vehicle dynamics,"Design and use paradigms for Gazebo, an open-source multi-robot simulator",,,,,x,,,,,,,NO,,
S1616,4,bkwd,journalArticle,2009,"Kress-Gazit, Hadas; Fainekos, Georgios E.; Pappas, George J.",IEEE Transactions on Robotics,"This paper provides a framework to automatically generate a hybrid controller that guarantees that the robot can achieve its task when a robot model, a class of admissible environments, and a high-level task or behavior for the robot are provided. The desired task specifications, which are expressed in a fragment of linear temporal logic (LTL), can capture complex robot behaviors such as search and rescue, coverage, and collision avoidance. In addition, our framework explicitly captures sensor specifications that depend on the environment with which the robot is interacting, which results in a novel paradigm for sensor-based temporal-logic-motion planning. As one robot is part of the environment of another robot, our sensor-based framework very naturally captures multirobot specifications in a decentralized manner. Our computational approach is based on first creating discrete controllers satisfying specific LTL formulas. If feasible, the discrete controller is then used to guide the sensor-based composition of continuous controllers, which results in a hybrid controller satisfying the high-level specification but only if the environment is admissible.",Automatic control; Automatic generation control; Controller synthesis; hybrid control; Hybrid power systems; Laboratories; Logic; Motion control; motion planning; Motion planning; Motion-planning; Robot sensing systems; Robotics and automation; sensor-based planning; temporal logic,Temporal-Logic-Based Reactive Mission and Motion Planning,,x,,,,,,,,,,NO,,
S1617,4,bkwd,conferencePaper,2000,"Clarke, Edmund; Grumberg, Orna; Jha, Somesh; Lu, Yuan; Veith, Helmut",Computer Aided Verification,We present an automatic iterative abstraction-refinement methodology in which the initial abstract model is generated by an automatic analysis of the control structures in the program to be verified. Abstract models may admit erroneous (or “spurious”) counterexamples. We devise new symbolic techniques which analyze such counterexamples and refine the abstract model correspondingly. The refinement algorithm keeps the size of the abstract state space small due to the use of abstraction functions which distinguish many degrees of abstraction for each program variable. We describe an implementation of our methodology in NuSMV. Practical experiments including a large Fujitsu IP core design with about 500 latches and 10000 lines of SMV code confirm the effectiveness of our approach.,Abstract Model; Atomic Formula; Kripke Structure; Localization Reduction; Model Check,Counterexample-Guided Abstraction Refinement,,,,,x,,,,,,,NO,,
S1618,4,bkwd,journalArticle,2019,"Lora, Michele; Vinco, Sara; Fummi, Franco",IEEE Transactions on Computers,"Virtual platforms are a powerful support for the development and early validation of embedded SW. However, complex smart devices are built by aggregating heterogeneous components provided by different vendors, thus requiring the development of custom ad-hoc virtual platforms. Even worse, components of the underneath HW platform may belong to different design domains, that are usually expressed using a huge variety of different languages. This high degree of heterogeneity in terms of both design and specification languages must be effectively managed by the design flow so to help engineers in assembling the final system. This paper proposes a meet-in-the-middle approach to create virtual platforms of heterogeneous systems. The starting point is a set of heterogeneous models, developed by adopting the designer's favorite language and formalism. The methodology envisions the adoption of existing automatic translation and abstraction tools to automatically integrate models of components into a single homogeneous system-level executable description. The approach is supported by an analysis of the typical design flow, that leads to the definition of design domain/abstraction level taxonomies. Such taxonomies are then used to identify what characteristics would allow efficient system-level simulation, and the corresponding transformations to be applied to the starting models to achieve a “holistic” system executable representation. The benefit of such an approach is particularly evident on any kind of highly heterogeneous systems, such as smart devices. The proposed methodology has been applied to two case studies with different degrees of heterogeneity, with the goal exemplifying its adoption on concrete scenarios and to prove its effectiveness.",Buildings; Computational modeling; heterogeneous systems; Libraries; modeling; platform based design; simulation; Smart devices; Smart system integration; system-level design; Taxonomy; Tools; Unified modeling language; virtual platforms; virtual prototyping,"Translation, Abstraction and Integration for Effective Smart System Design",,x,,,,,,,,,,NO,,
S1619,4,bkwd,conferencePaper,2016,"Maniatopoulos, Spyros; Schillinger, Philipp; Pong, Vitchyr; Conner, David C.; Kress-Gazit, Hadas",2016 IEEE International Conference on Robotics and Automation (ICRA),"In this work, we take a step towards bridging the gap between the theory of formal synthesis and its application to real-world, complex, robotic systems. In particular, we present an end-to-end approach for the automatic generation of code that implements high-level robot behaviors in a verifiably correct manner, including reaction to the possible failures of low-level actions. We start with a description of the system defined a priori. Thus, a non-expert user need only specify a high-level task. We automatically construct a formal specification, in a fragment of Linear Temporal Logic (LTL), that encodes the system's capabilities and constraints, the task, and the desired reaction to low-level failures. We then synthesize a reactive mission plan that is guaranteed to satisfy the formal specification, i.e., achieve the task's goals or correctly react to failures. Lastly, we automatically generate a state machine that instantiates the synthesized symbolic plan in software. We showcase our approach using Team ViGIR's software and Atlas humanoid robot and present lab experiments, thus demonstrating the application of formal synthesis techniques to complex robotic systems. The proposed approach has been implemented and open-sourced as a collection of Robot Operating System (ROS) packages, which are adaptable to other systems.",Automata; Context; Humanoid robots; Planning; Safety; Software,Reactive high-level behavior synthesis for an Atlas humanoid robot,,,,,,,,x,,,,NO,,
S1620,4,bkwd,conferencePaper,2018,"McDonald Hayhurst, John Wesley; Conner, David C.",SoutheastCon 2018,"This paper describes a system wide approach to synthesizing executable robot behaviors based on system capabilities. The approach builds upon prior work with the Flexible Behavior Engine (FlexBE), which uses hierarchical finite state machines (HFSM) to implement and execute robot behaviors. This paper extends prior work that integrated Linear Temporal Logic (LTL)-based automata synthesis into FlexBE by automatically generating the required configuration files based on distributed specifications of deployed system capabilities. Given this information, an end user can use existing tools to synthesize a reactive behavioral state machine (if realizable) given task specifications. The paper describes experiments executing synthesized state machines on a small wheeled mobile robot called TurtleBot running the ROS Kinetic system.",Automata; Computer architecture; Engines; Robot kinematics; Task analysis; Tools,Towards Capability-Based Synthesis of Executable Robot Behaviors,,x,,,,,,,,,,NO,,
S1621,4,bkwd,conferencePaper,2006,"Piterman, Nir; Pnueli, Amir; Sa’ar, Yaniv","Verification, Model Checking, and Abstract Interpretation","We consider the problem of synthesizing digital designs from their ltl specification. In spite of the theoretical double exponential lower bound for the general case, we show that for many expressive specifications of hardware designs the problem can be solved in time N 3, where N is the size of the state space of the design. We describe the context of the problem, as part of the Prosyd European Project which aims to provide a property-based development flow for hardware designs. Within this project, synthesis plays an important role, first in order to check whether a given specification is realizable, and then for synthesizing part of the developed system.",,Synthesis of Reactive(1) Designs,,,,,x,,,,,,,NO,,
S1622,4,bkwd,conferencePaper,2014,"Nuzzo, Pierluigi; Iannopollo, Antonio; Tripakis, Stavros; Sangiovanni-Vincentelli, Alberto",2014 Twelfth ACM/IEEE Conference on Formal Methods and Models for Codesign (MEMOCODE),"Contract-based design is emerging as a unifying compositional paradigm for the specification, design and verification of large-scale complex systems. Different contract frameworks are currently available, but we lack a clear understanding of the relations between them. In this paper, we investigate the relation between interface theories (specifically, relational interfaces) and assume-guarantee (A/G) contracts. We introduce a natural transformation of interfaces to A/G contracts represented by linear temporal logic. Then, we analyze differences and correspondences between key operators and relations in the two theories (i.e. composition, refinement and conjunction), by studying their preservation properties under the proposed transformation. We show that the transformation preserves refinement, but does not generally preserve serial composition and conjunction. Then, we present an assumption-projection operator to make it possible to preserve serial composition and compatibility checking. Finally, we provide illustrative examples that shed light on the effectiveness of both frameworks for requirement formalization, early detection of integration errors, and use of abstraction-refinement.",Abstracts; Automata; Contracts; Cost accounting; Law; Mathematical model,Are interface theories equivalent to contract theories?,,x,,,,,,,,,,NO,,
S1623,4,bkwd,conferencePaper,2018,"Nuzzo, Pierluigi; Lora, Michele; Feldman, Yishai A.; Sangiovanni-Vincentelli, Alberto L.","2018 Design, Automation Test in Europe Conference Exhibition (DATE)","This paper presents CHASE, a framework for requirement capture, formalization, and validation for cyber-physical systems. CHASE combines a practical front-end formal specification language based on patterns with a rigorous verification back-end based on assume-guarantee contracts. The front-end language can express temporal properties of networks using a declarative style, and supports automatic translation from natural-language constructs to low-level mathematical languages. The verification back-end leverages the mathematical formalism of contracts to reason about system requirements and determine inconsistencies and dependencies between them. CHASE features a modular and extensible software infrastructure that can support different domain-specific languages, modeling formalisms, and analysis tools. We illustrate its effectiveness on industrial design examples, including control of aircraft power distribution networks and arbitration of a mixed-criticality automotive bus.",Aircraft; Contactors; Contracts; Electronic mail; Generators; Power systems; Tools,CHASE: Contract-based requirement engineering for cyber-physical system design,,x,,,,,,,,,,NO,,
S1624,4,bkwd,bookSection,2018,"Nuzzo, Pierluigi; Sangiovanni-Vincentelli, Alberto L.",Principles of Modeling: Essays Dedicated to Edward A. Lee on the Occasion of His 60th Birthday,"We propose the notions of heterogeneous refinement and vertical contracts as additions for any contract framework to provide full methodological support for multi-view and multi-layer system design with heterogeneous models. We rethink the relation of contract refinement in the context of layered design and discuss how it can be extended, via heterogeneous refinement and vertical contracts, to deal with hierarchies of models that present heterogeneous architectures as well as behaviors expressed by heterogeneous formalisms. We then show via design examples that such an extension can, indeed, encompass a richer set of design refinement relations, including support for synthesis methods and optimized mappings of specifications into implementations.",Assume-guarantee contracts; Contract-based design; Cyber-physical systems; Design automation; Embedded systems; Platform-Based Design; System design; Vertical contracts,Hierarchical System Design with Vertical Contracts,,x,,,,,,,,,,NO,,
S1625,4,bkwd,journalArticle,2015,"Nuzzo, Pierluigi; Sangiovanni-Vincentelli, Alberto L.; Bresolin, Davide; Geretti, Luca; Villa, Tiziano",Proceedings of the IEEE,"We introduce a platform-based design methodology that uses contracts to specify and abstract the components of a cyber-physical system (CPS), and provide formal support to the entire CPS design flow. The design is carried out as a sequence of refinement steps from a high-level specification to an implementation built out of a library of components at the lower level. We review formalisms and tools that can be used to specify, analyze, or synthesize the design at different levels of abstraction. For each level, we highlight how the contract operations can be concretely computed as well as the research challenges that should be faced to fully implement them. We illustrate our approach on the design of embedded controllers for aircraft electric power distribution systems.",Algorithm design and analysis; Computational modeling; contract-based design; Cyber-physical systems; Design methodology; horizontal and vertical contracts; Mathematical model; platform-based design methodology; system design automation,A Platform-Based Design Methodology With Contracts and Related Tools for the Design of Cyber-Physical Systems,,x,,,,,,,,,,NO,,
S1626,4,bkwd,journalArticle,2009,"Passerone, Roberto; Hafaiedh, Imene Ben; Graf, Susanne; Benveniste, Albert; Cancila, Daniela; Cuccuru, Arnaud; Gerard, Sebastien; Terrier, Francois; Damm, Werner; Ferrari, Alberto; Mangeruca, Leonardo; Josko, Bernhard; Peikenkamp, Thomas; Sangiovanni-Vincentelli, Alberto",IEEE Design Test of Computers,"This article provides an overview of current efforts in Europe for using metamodeling in the integrated development of critical systems such as automotive electronics. It distinguishes between lightweight versus heavyweight approaches, surveys a number of related current European projects, and gives details about the Speeds project to illustrate the role of metamodeling-driven system engineering.",Analytical models; Assembly systems; Concurrent computing; design and test; Design engineering; Design methodology; embedded systems; Europe; European research projects; Feature extraction; language design; metamodeling; Metamodeling; model-based design; Productivity; Speeds; Systems engineering and theory,"Metamodels in Europe: Languages, Tools, and Applications",,x,,,,,,,,,,NO,,
S1627,4,bkwd,conferencePaper,2020,"Tsoi, Nathan; Hussein, Mohamed; Espinoza, Jeacy; Ruiz, Xavier; Vázquez, Marynel",Proceedings of the 8th International Conference on Human-Agent Interaction,"Social navigation research is performed on a variety of robotic platforms, scenarios, and environments. Making comparisons between navigation algorithms is challenging because of the effort involved in building these systems and the diversity of platforms used by the community; nonetheless, evaluation is critical to understanding progress in the field. In a step towards reproducible evaluation of social navigation algorithms, we propose the Social Environment for Autonomous Navigation (SEAN). SEAN is a high visual fidelity, open source, and extensible social navigation simulation platform which includes a toolkit for evaluation of navigation algorithms. We demonstrate SEAN and its evaluation toolkit in two environments with dynamic pedestrians and using two different robots.",human-robot interaction; social robot navigation,SEAN: Social Environment for Autonomous Navigation,,x,,,,,,,,,,NO,,
S1628,4,bkwd,webpage,,,,"Explore millions of resources from scholarly journals, books, newspapers, videos and more, on the ProQuest Platform.",,Modular synthesis of reactive systems - ProQuest,,,,,,x,,,,,,NO,,
S1629,4,bkwd,conferencePaper,2018,"Spellini, Stefano; Lora, Michele; Chattopadhyay, Sudipta; Fummi, Franco",2018 International Conference on Hardware/Software Codesign and System Synthesis (CODES+ISSS),"This paper summarizes the first steps toward an automatic framework, relying on Assume-Guarantee Contracts, for the verification of robotics applications. Classic HW and SW design and verification techniques are inadequate for robots due to the involved complexity. In this paper we advocate that contract-based methodologies allow safe problem decomposition easing system-level validation.",Contracts; Model checking; Robot sensing systems; Safety; Tools,Work-in-Progress: Introducing Assume-Guarantee Contracts for Verifying Robotic Applications,,x,,,,,,,,,,NO,,
S1630,4,bkwd,conferencePaper,2017,"Wong, Kai Weng; Kress-Gazit, Hadas",2017 First IEEE International Conference on Robotic Computing (IRC),"In this paper we describe a streamlined process for transforming high-level tasks into executable implementations created with the Robot Operating System (ROS). We leverage both the vast availability and functionalities of ROS packages and recent advances in automatically synthesizing provably-correct controllers from high-level specifications. Specifically, we propose a framework for seamless integration of provably-correct controllers with ROS: we automatically detect possible failures related to the mapping between the controller and the ROS nodes connected to the controller, and we automatically provide feedback to the user in the form of suggested changes to the specification when possible faults are detected.",Formal Methods; Linear Temporal Logic (LTL); Monitoring; Operating systems; Process control; Robot kinematics; Robot Mission Planning; Robot Operating System (ROS); Robot sensing systems; Servers,From High-Level Task Specification to Robot Operating System (ROS) Implementation,,,,,,,,x,,,,NO,,
S1651,1,Backward,conferencePaper,2013,"McClean, Jarrod; Stull, Christopher; Farrar, Charles; Mascareñas, David",Unmanned Systems Technology XV,10.1117/12.2016189,https://www.spiedigitallibrary.org/conference-proceedings-of-spie/8741/874110/A-preliminary-cyber-physical-security-assessment-of-the-Robot-Operating/10.1117/12.2016189.full,"Over the course of the last few years, the Robot Operating System (ROS) has become a highly popular software framework for robotics research. ROS has a very active developer community and is widely used for robotics research in both academia and government labs. The prevalence and modularity of ROS cause many people to ask the question: “What prevents ROS from being used in commercial or government applications?” One of the main problems that is preventing this increased use of ROS in these applications is the question of characterizing its security (or lack thereof). In the summer of 2012, a crowd sourced cyber-physical security contest was launched at the cyber security conference DEF CON 20 to begin the process of characterizing the security of ROS. A small-scale, car-like robot was configured as a cyber-physical security “honeypot” running ROS. DEFFCON-20 attendees were invited to find exploits and vulnerabilities in the robot while network traffic was collected. The results of this experiment provided some interesting insights and opened up many security questions pertaining to deployed robotic systems. The Federal Aviation Administration is tasked with opening up the civil airspace to commercial drones by September 2015 and driverless cars are already legal for research purposes in a number of states. Given the integration of these robotic devices into our daily lives, the authors pose the following question: “What security exploits can a motivated person with little-to-no experience in cyber security execute, given the wide availability of free cyber security penetration testing tools such as Metasploit?” This research focuses on applying common, low-cost, low-overhead, cyber-attacks on a robot featuring ROS. This work documents the effectiveness of those attacks.",,A preliminary cyber-physical security assessment of the Robot Operating System (ROS),-,,YES,YES,YES,YES,,,,NO,,
S1693,1,Backward,conferencePaper,2012,"Meyer, Johannes; Sendobry, Alexander; Kohlbrecher, Stefan; Klingauf, Uwe; von Stryk, Oskar","Simulation, Modeling, and Programming for Autonomous Robots",10.1007/978-3-642-34327-8_36,,"Quadrotor UAVs have successfully been used both in research and for commercial applications in recent years and there has been significant progress in the design of robust control software and hardware. Nevertheless, testing of prototype UAV systems still means risk of damage due to failures. Motivated by this, a system for the comprehensive simulation of quadrotor UAVs is presented in this paper. Unlike existing solutions, the presented system is integrated with ROS and the Gazebo simulator. This comprehensive approach allows simultaneous simulation of diverse aspects such as flight dynamics, onboard sensors like IMUs, external imaging sensors and complex environments. The dynamics model of the quadrotor has been parameterized using wind tunnel tests and validated by a comparison of simulated and real flight data. The applicability for simulation of complex UAV systems is demonstrated using LIDAR-based and visual SLAM approaches available as open source software.",Comprehensive Simulation; Inertial Measurement Unit; Robot Operating System; Ultrasonic Sensor; Wind Tunnel Test,Comprehensive Simulation of Quadrotor UAVs Using ROS and Gazebo,-,,YES,YES,YES,,,,,YES,,
S1637,1,Backward,conferencePaper,2016,"Abadi, Martin; Barham, Paul; Chen, Jianmin; Chen, Zhifeng; Davis, Andy; Dean, Jeffrey; Devin, Matthieu; Ghemawat, Sanjay; Irving, Geoffrey; Isard, Michael; Kudlur, Manjunath; Levenberg, Josh; Monga, Rajat; Moore, Sherry; Murray, Derek G.; Steiner, Benoit; Tucker, Paul; Vasudevan, Vijay; Warden, Pete; Wicke, Martin; Yu, Yuan; Zheng, Xiaoqiang",,,https://www.usenix.org/conference/osdi16/technical-sessions/presentation/abadi,,,TensorFlow: A System for {Large-Scale} Machine Learning,-,NO,,,YES,,,,,NO,,
S1638,1,Backward,conferencePaper,2013,"Durumeric, Zakir; Wustrow, Eric; Halderman, J. Alex",,,https://www.usenix.org/conference/usenixsecurity13/technical-sessions/paper/durumeric,,,ZMap: Fast Internet-wide Scanning and Its Security Applications,-,NO,,,YES,,,,,NO,,
S1639,1,Backward,journalArticle,,"Ballard, Dana H",,,,"Most robotics computations refer to a single worldbased frame of reference; however, several advantages accrue with the introduction of a second frame, termed a task frame. A task frame is a coordinate frame that can be attached to different objects that are to be manipulated. The task frame is related to the world-based coordinate frame by a simple geometric transformation. The virtues of such a frame are: (1) certain actions that are difficult to specify in the world frame are easily expressed in the task frame: (2) the task-frame to task-uorld transformation provides a formalism for describing physical actions; and (3) the task frame can be related to the world frame by proprioception.",,1984 - Task Frames in Robot Manipulation,-,NO,,,NO,,,,,NO,,
S1640,1,Backward,conferencePaper,2011,"Rusu, Radu Bogdan; Cousins, Steve",2011 IEEE International Conference on Robotics and Automation,10.1109/ICRA.2011.5980567,,"With the advent of new, low-cost 3D sensing hardware such as the Kinect, and continued efforts in advanced point cloud processing, 3D perception gains more and more importance in robotics, as well as other fields. In this paper we present one of our most recent initiatives in the areas of point cloud perception: PCL (Point Cloud Library - http://pointclouds.org). PCL presents an advanced and extensive approach to the subject of 3D perception, and it's meant to provide support for all the common 3D building blocks that applications need. The library contains state-of-the art algorithms for: filtering, feature estimation, surface reconstruction, registration, model fitting and segmentation. PCL is supported by an international community of robotics and perception researchers. We provide a brief walkthrough of PCL including its algorithmic capabilities and implementation strategies.",,3D is here: Point Cloud Library (PCL),-,NO,,,YES,,NO,,,NO,,
S1641,1,Backward,conferencePaper,2013,"Topalidou-Kyniazopoulou, Angeliki; Spanoudakis, Nikolaos I.; Lagoudakis, Michail G.",RoboCup 2012: Robot Soccer World Cup XVI,10.1007/978-3-642-39250-4_21,,"The development of high-level behavior for autonomous robots is a time-consuming task even for experts. This paper presents a Computer-Aided Software Engineering (CASE) tool, named Kouretes Statechart Editor (KSE), which enables the developer to easily specify a desired robot behavior as a statechart model utilizing a variety of base robot functionalities (vision, localization, locomotion, motion skills, communication). A statechart is a compact platform-independent formal model used widely in software engineering for designing software systems. KSE adopts the Agent Systems Engineering Methodology (ASEME) model-driven approach. Thus, KSE guides the developer through a series of design steps within a graphical environment that leads to automatic source code generation. We use KSE for developing the behavior of the Nao humanoid robots of our team Kouretes competing in the Standard Platform League of the RoboCup competition.",Case Tool; Eclipse Modeling Framework; Graphical Modeling Framework; Robot Behavior; Transition Expression,A CASE Tool for Robot Behavior Development,-,NO,,,YES,,,,,NO,,
S1642,1,Backward,conferencePaper,2011,"Pordel, Mostafa; Khalilzad, Nima Moghaddami; Yekeh, Farahnaz; Asplund, Lars",2011 IEEE 3rd International Conference on Communication Software and Networks,10.1109/ICCSN.2011.6014162,,"FPGA has been used in many robotics projects for real-time image processing. It provides reliable systems with low execution time and simplified timing analysis. Many of these systems take a lot of time in development and testing phases. In some cases, it is not possible to test the system in real environments very often, due to accessibility, availability or cost problems. This paper is the result of a case study on vision systems for two robotics projects in which the vision team consisted of seven students working for six months fulltime on developing and implementing different image algorithms. While FPGA has been used for real-time image processing, some steps have been taken in order to reduce the development and testing phases. The main focus of the project is to integrate different testing methods with FPGA development. It includes a component based solution that uses a two-way communication with a PC controller for system evaluation and testing. Once the data is acquired from the vision board, the system stores it and simulates the same environment that has been captured earlier by feeding back the obtained data to FPGA. This approach addresses and implements a debugging methodology for FPGA based solutions which accelerate the development phase. In order to transfer massive information of images, RMII which is an interface for Ethernet communication, has been investigated and implemented. The provided solution makes changes easier, saves time and solves the problems mentioned earlier.",Clocks; Component Based; Field programmable gate arrays; FPGA; Monitoring; Process control; Reliability; Robotics; Robots; Switches; Testability; Vision,"A component based architecture to improve testability, targeted FPGA-based vision systems",-,NO,,,YES,,,,,NO,,
S1643,1,Backward,journalArticle,2013,"Korsah, G. Ayorkor; Stentz, Anthony; Dias, M. Bernardine",The International Journal of Robotics Research,10.1177/0278364913496484,https://doi.org/10.1177/0278364913496484,"Task allocation is an important aspect of many multi-robot systems. The features and complexity of multi-robot task allocation (MRTA) problems are dictated by the requirements of the particular domain under consideration. These problems can range from those involving instantaneous distribution of simple, independent tasks among members of a homogenous team, to those requiring the time-extended scheduling of complex interrelated multi-step tasks for members of a heterogenous team related by several constraints. The existing widely used taxonomy for task allocation in multi-robot systems was designed for problems with independent tasks and does not deal with problems with interrelated utilities and constraints. While that taxonomy was a ground-breaking contribution to the MRTA literature, a survey of recent work in MRTA reveals that it is no longer a sufficient taxonomy, due to the increasing importance of interrelated utilities and constraints in realistic MRTA problems under consideration. Thus, in this paper, we present a new, comprehensive taxonomy, iTax, that explicitly takes into consideration the issues of interrelated utilities and constraints. Our taxonomy maps categories of MRTA problems to existing mathematical models from combinatorial optimization and operations research, and hence draws important parallels between robotics and these fields.",multi-robot coordination; task allocation; taxonomy,A comprehensive taxonomy for multi-robot task allocation,-,NO,,,YES,,,,,NO,,
S1644,1,Backward,conferencePaper,2017,"Abeykoon, Iroshan; Feng, Xiaohua","2017 IEEE International Conference on Internet of Things (iThings) and IEEE Green Computing and Communications (GreenCom) and IEEE Cyber, Physical and Social Computing (CPSCom) and IEEE Smart Data (SmartData)",10.1109/iThings-GreenCom-CPSCom-SmartData.2017.131,,"The Robot Operating System (ROS) is a framework that is mostly used in industrial applications such as automotive, healthcare and manufacturing and it is not immune from potential future hacking. By carrying out various types of cyber-attacks, hackers can disrupt the normal operation of a robot. It is easy to get control of communication between a robot and a human due to the open communication network after carrying out malicious attacks to jam the network. As a result, hackers can change commands which are sent by an operator to the robot, making usual activities impossible. For instance, in a case of ROS hacking, man-in-the-middle attacks, Trojans, backdoor attacks, and so on, can change the behaviour of robots to something completely different than expected.Therefore, forensic analysts require a specific method to forensically investigate ROS. This is a new area in the computer forensics field. Therefore, it is proposed to create an analytical framework to facilitate the forensic investigation of the Robot Operating System and methodologies and standards for acquiring related digital evidence using forensic tools. This study addresses a formalized and structured methodology that would assist the forensic investigation approach.This research will help to enhance the gathering, identification and preservation of evidence related to forensics investigations of the Robot Operating System. The forensic analysts could adapt the examination procedure of hacked ROS with a focused, crime-specific, forensics framework.",Association of Chief Police Officers; Computer crime; Computer Emergency Response Team; Digital forensics; Forensics Tool Kit; Law enforcement; Operating systems; Robot Operating System; Robots; Tools,A Forensic Investigation of the Robot Operating System,-,,NO,,YES,,,,,NO,,
S1645,1,Backward,journalArticle,2004,"Gerkey, Brian P.; Matarić, Maja J.",The International Journal of Robotics Research,10.1177/0278364904045564,https://doi.org/10.1177/0278364904045564,"Despite more than a decade of experimental work in multi-robot systems, important theoretical aspects of multi-robot coordination mechanisms have, to date, been largely untreated. To address this issue, we focus on the problem of multi-robot task allocation (MRTA). Most work on MRTA has been ad hoc and empirical, with many coordination architectures having been proposed and validated in a proof-of-concept fashion, but infrequently analyzed. With the goal of bringing objective grounding to this important area of research, we present a formal study of MRTA problems. A domain-independent taxonomy of MRTA problems is given, and it is shown how many such problems can be viewed as instances of other, well-studied, optimization problems. We demonstrate how relevant theory from operations research and combinatorial optimization can be used for analysis and greater understanding of existing approaches to task allocation, and to show how the same theory can be used in the synthesis of new approaches.",coordination; multi-robot systems; task allocation; utility,A Formal Analysis and Taxonomy of Task Allocation in Multi-Robot Systems,-,NO,,,NO,,NO,,,NO,,
S1646,1,Backward,journalArticle,2014,"Fitzpatrick, Paul; Ceseracciu, Elena; Domenichelli, Daniele E; Paikan, Ali; Metta, Giorgio; Natale, Lorenzo",,,,"Robotics is changing. The amount of software available (and needed) is growing. For better or worse, the glue that holds that software together, the middleware, has a big impact on its viability. YARP is a middleware for robotics, with over a decade’s continuous use on various humanoid robots. YARP was designed to help code survive changes, to easily experiment with new code and integrate with other systems. In a world of constant transition, with a steady stream of hardware and software upgrades, YARP helps code last long enough to make a real impact, and avoid premature loss of good code through middleware muddles. We review the features of YARP that support this ﬂexibility, describing those situations in which they have been practically useful. We argue that there are practices that any middleware author can adopt that beneﬁt users of other middleware and raise costs to those users when neglected. Altruism is not required: we also argue a middleware’s own users will beneﬁt from such practices right now (when collaborating) and in the future (when upgrading to a new version of the middleware). These concerns are not usually the ﬁrst things on a user’s mind when choosing a middleware, but a responsible middleware author will foresee them and prepare a happy ending rather than a trap.",,A middle way for robotics middleware,-,NO,,,YES,,,,,NO,,
S1647,1,Backward,conferencePaper,2003,"Ranganathan, Anand; Campbell, Roy H.",Middleware 2003,10.1007/3-540-44892-6_8,,"Ubiquitous Computing advocates the construction of massively distributed systems that help transform physical spaces into computationally active and intelligent environments. The design of systems and applications in these environments needs to take account of heterogeneous devices, mobile users and rapidly changing contexts. Most importantly, agents in ubiquitous and mobile environments need to be context-aware so that they can adapt themselves to different situations. In this paper, we argue that ubiquitous computing environments must provide middleware support for context-awareness. We also propose a middleware that facilitates the development of context-aware agents. The middleware allows agents to acquire contextual information easily, reason about it using different logics and then adapt themselves to changing contexts. Another key issue in these environments is allowing autonomous, heterogeneous agents to have a common semantic understanding of contextual information. Our middleware tackles this problem by using ontologies to define different types of contextual information. This middleware is part of Gaia, our infrastructure for enabling Smart Spaces.",,A Middleware for Context-Aware Agents in Ubiquitous Computing Environments,-,NO,,,NO,,,,,NO,,
S1648,1,Backward,conferencePaper,2013,"Iturrate, Iñigo; Martín, Gustavo; García-Zubia, Javier; Angulo, Ignacio; Dziabenko, Olga; Orduña, Pablo; Alves, Gustavo; Fidalgo, André",2013 1st International Conference of the Portuguese Society for Engineering Education (CISPEE),10.1109/CISPEE.2013.6701970,,"Within the pedagogical community, Serious Games have arisen as a viable alternative to traditional course-based learning materials. Until now, they have been based strictly on software solutions. Meanwhile, research into Remote Laboratories has shown that they are a viable, low-cost solution for experimentation in an engineering context, providing uninterrupted access, low-maintenance requirements, and a heightened sense of reality when compared to simulations. This paper will propose a solution where both approaches are combined to deliver a Remote Laboratory-based Serious Game for use in engineering and school education. The platform for this system is the WebLab-Deusto Framework, already well-tested within the remote laboratory context, and based on open standards. The laboratory allows users to control a mobile robot in a labyrinth environment and take part in an interactive game where they must locate and correctly answer several questions, the subject of which can be adapted to educators' needs. It also integrates the Google Blockly graphical programming language, allowing students to learn basic programming and logic principles without needing to understand complex syntax.",Computers; Educational institutions; Games; Google Blockly; remote laboratories; Remote laboratories; robot; Robot sensing systems; Serious Games; STEM education; WebLab-Deusto,A mobile robot platform for open learning based on serious games and remote laboratories,-,NO,,,YES,,,,,NO,,
S1649,1,Backward,conferencePaper,2015,"Wei, Xu; Fengyang, Duan; Qingjie, Zhang; Bing, Zhu; Hongchang, Sun",The 27th Chinese Control and Decision Conference (2015 CCDC),10.1109/CCDC.2015.7161666,,"Consistent state of the system is the basis of reaching the target area at the same time in rendezvous of multi-UAV, and consensus algorithm is an effective method of multi-UAV system to achieve a consistent state. In order to shorten the convergence time of system state, on the base of the mathematical model of multi-UAV rendezvousing problem, the basic consensus algorithm and the consensus algorithm based on the past state difference have been improved. A new fast consensus algorithm was designed with a parameter, and theorems about efficiency and convergence of the new algorithm were mathematically proved. Simulation results verify the effectiveness and feasibility of the new algorithm.",Algorithm design and analysis; consensus algorithm; Convergence; convergence speed; Decentralized control; Eigenvalues and eigenfunctions; Electronic mail; Heuristic algorithms; Mathematical model; multi-UAV system; rendezvous; state difference,A new fast consensus algorithm applied in rendezvous of multi-UAV,-,NO,,,YES,,,,,NO,,
S1650,1,Backward,journalArticle,2017,"Bonsignorio, Fabio",IEEE Robotics & Automation Magazine,10.1109/MRA.2017.2722918,,"The reproducibility of experimental results is a key characteristic of the scientific method. Despite that, in robotics and artificial intelligence (AI)—maybe for good reason—replicating experiments in many cases has, so far, been limited or outright lacking. Reporting practices and formats are a key issue if we want to have reproducible robotics and AI papers. After years of discussions in a long series of workshops, the time is ripe for addressing this issue. The first-ever special issue of a high level, reputable robotics publication claiming the reproducibility of the published results was in this magazine in September 2015. Reproducibility is now a priority for the IEEE, as shown by the fact that the organization recently decided to integrate the Code Ocean platform in the websites of several magazines and journals.",Artificial intelligence; Research and development; Robot kinematics,A New Kind of Article for Reproducible Research in Intelligent Robotics [From the Field],-,NO,,,YES,,,,,NO,,
S1652,1,Backward,journalArticle,2016,"Bayındır, Levent",Neurocomputing,10.1016/j.neucom.2015.05.116,https://www.sciencedirect.com/science/article/pii/S0925231215010486,"Swarm intelligence principles have been widely studied and applied to a number of different tasks where a group of autonomous robots is used to solve a problem with a distributed approach, i.e. without central coordination. A survey of such tasks is presented, illustrating various algorithms that have been used to tackle the challenges imposed by each task. Aggregation, flocking, foraging, object clustering and sorting, navigation, path formation, deployment, collaborative manipulation and task allocation problems are described in detail, and a high-level overview is provided for other swarm robotics tasks. For each of the main tasks, (1) swarm design methods are identified, (2) past works are divided in task-specific categories, and (3) mathematical models and performance metrics are described. Consistently with the swarm intelligence paradigm, the main focus is on studies characterized by distributed control, simplicity of individual robots and locality of sensing and communication. Distributed algorithms are shown to bring cooperation between agents, obtained in various forms and often without explicitly programming a cooperative behavior in the single robot controllers. Offline and online learning approaches are described, and some examples of past works utilizing these approaches are reviewed.",Cooperation; Distributed task; Swarm robotics,A review of swarm robotics tasks,-,NO,,,YES,,,,,NO,,
S1653,1,Backward,journalArticle,2002,"Lawhead, Pamela B.; Duncan, Michaele E.; Bland, Constance G.; Goldweber, Michael; Schep, Madeleine; Barnes, David J.; Hollingsworth, Ralph G.",ACM SIGCSE Bulletin,10.1145/782941.783002,https://doi.org/10.1145/782941.783002,"In this paper, we describe a recent trend in the introductory computer science curriculum which advocates conceptualizing computation primarily as coordinated concurrent activities [8], [9], [10]. Consistent with this philosophy is the focus on the event-driven model of computation [7]. While one can utilize these approaches with any thread and/or event supporting object-oriented language (e.g. Java) in a desktop programming environment, they become particularly worthwhile when used in conjunction with physical robots. This paper argues the case for the benefits of this approach and provides sample exercises that illustrate the use of this pedagogy using Lego Mindstorms RCX bricks programmed in Java for use in introductory programming.",2nd tier students; computer controlled models; computing and interaction; CS1; CS2; Java; object-oriented; robotics,A road map for teaching introductory programming using LEGO© mindstorms robots,-,NO,,,NO,,,,,NO,,
S1654,1,Backward,book,2004,"Cambon, Stéphane; Gravot, Fabien; Alami, Rachid",,,,"We have developed an original planner, aSyMov, that has been specially designed to address intricate robot planning problems where geometric constraints cannot be simply ""abstracted"" in a way that has no influence on the symbolic plan. This paper presents the ingredients that allowed us to establish an effective link between the representations used by a symbolic task planner and the represen- tations used by a realistic motion and manipulation planning library. The architecture and the main plan search strategies are presented to- gether with an illustrative example solved by a prototype implemen- tation of aSyMov. At each step of the planning process both sym- bolic and geometric constraints are considered. Besides, the plan- ning process tries to arbitrate between finding a plan with the level of knowledge it has already acquired, or ""investing"" more in a deeper knowledge of the topology of the different configuration spaces it manipulates.",,A Robot Task Planner that Merges Symbolic and Geometric Reasoning.,NO,,,,NO,,,,,NO,,
S1655,1,Backward,journalArticle,2019,"Erős, Endre; Dahl, Martin; Bengtsson, Kristofer; Hanna, Atieh; Falkman, Petter",Procedia Manufacturing,10.1016/j.promfg.2020.01.045,https://www.sciencedirect.com/science/article/pii/S2351978920300469,"Collaborative robots are becoming part of intelligent automation systems in modern industry. Development and control of such systems differs from traditional automation methods and consequently leads to new challenges. Thankfully, Robot Operating System (ROS) provides a communication platform and a vast variety of tools and utilities that can aid that development. However, it is hard to use ROS in large-scale automation systems due to communication issues in a distributed setup, hence the development of ROS2. In this paper, a ROS2 based communication architecture is presented together with an industrial use-case of a collaborative and intelligent automation system.",collaborative robots; communication architecture; intelligent automation; multi-master; robot operating system; robot programming,A ROS2 based communication architecture for control in collaborative and intelligent automation systems,-,NO,,,YES,,,,,NO,,
S1656,1,Backward,webpage,,,,,https://link.springer.com/chapter/10.1007/978-3-540-89076-8_12,,,A Software Platform for Component Based RT-System Development: OpenRTM-Aist | SpringerLink,NO,,,,NO,,,,,NO,,
S1657,1,Backward,conferencePaper,2009,"Denning, Tamara; Matuszek, Cynthia; Koscher, Karl; Smith, Joshua R.; Kohno, Tadayoshi",Proceedings of the 11th international conference on Ubiquitous computing,10.1145/1620545.1620564,https://doi.org/10.1145/1620545.1620564,"Future homes will be populated with large numbers of robots with diverse functionalities, ranging from chore robots to elder care robots to entertainment robots. While household robots will offer numerous benefits, they also have the potential to introduce new security and privacy vulnerabilities into the home. Our research consists of three parts. First, to serve as a foundation for our study, we experimentally analyze three of today's household robots for security and privacy vulnerabilities: the WowWee Rovio, the Erector Spykee, and the WowWee RoboSapien V2. Second, we synthesize the results of our experimental analyses and identify key lessons and challenges for securing future household robots. Finally, we use our experiments and lessons learned to construct a set of design questions aimed at facilitating the future development of household robots that are secure and preserve their users' privacy.",cyber-physical systems; domestic robots; household robots; multi-robot attack; privacy; robots; security; single-robot attack; ubiquitous robots,A spotlight on security and privacy risks with future household robots: attacks and lessons,-,NO,,,YES,,,,,NO,,
S1658,1,Backward,webpage,,,,,https://www.worldscientific.com/doi/abs/10.1142/9789814329927_0052,,,A STEP TOWARD 'PLUG AND PLAY' ROBOTICS WITH SoC TECHNOLOGY | Emerging Trends in Mobile Robotics,NO,,,,NO,,,,,NO,,
S1659,1,Backward,conferencePaper,2005,"Ren, Wei; Beard, R.W.; Atkins, E.M.","Proceedings of the 2005, American Control Conference, 2005.",10.1109/ACC.2005.1470239,,"As a distributed solution to multi-agent coordination, consensus or agreement problems have been studied extensively in the literature. This paper provides a survey of consensus problems in multi-agent cooperative control with the goal of promoting research in this area. Theoretical results regarding consensus seeking under both time-invariant and dynamically changing information exchange topologies are summarized. Applications of consensus protocols to multiagent coordination are investigated. Future research directions and open problems are also proposed.",Air traffic control; Automatic control; Control systems; Mobile robots; Multiagent systems; Protocols; Topology; Tree graphs; Unmanned aerial vehicles; Wireless sensor networks,A survey of consensus problems in multi-agent coordination,-,NO,,,NO,,,,,NO,,
S1660,1,Backward,journalArticle,,"Compton, Michael; Henson, Cory; Lefort, Laurent; Neuhaus, Holger; Sheth, Amit",,,,"Semantic sensor networks use declarative descriptions of sensors promote reuse and integration, and to help solve the diﬃculties of installing, querying and maintaining complex, heterogeneous sensor networks. This paper reviews the state of the art for the semantic speciﬁcation of sensors, one of the fundamental technologies in the semantic sensor network vision. Twelve sensor ontologies are reviewed and analysed for the range and expressive power of their concepts. The reasoning and search technology developed in conjunction with these ontologies is also reviewed, as is technology for annotating OGC standards with links to ontologies. Sensor concepts that cannot be expressed accurately by current sensor ontologies are also discussed.",,A Survey of the Semantic Speciﬁcation of Sensors,-,NO,,,NO,,,,,NO,,
S1661,1,Backward,conferencePaper,2010,"Sørensen, Anders Stengaard; Falsig, Simon",2010 IEEE/RSJ International Conference on Intelligent Robots and Systems,10.1109/IROS.2010.5650606,,"To sustain advanced interdisciplinary teaching and learning in the rapidly growing and diversifying field of robotics, we have successfully employed FPGA based System on Chip (SoC) technology to provide abstraction between high level software and low level I/O- and control hardware. Our approach is to provides students with a simple FPGA based framework for hardware access, and hardware I/O development, which is independent of computer platform and programming language, and enable the students to add to, or change I/O hardware in accordance with their skills. We have tested the framework in an embedded systems course and various student projects, and have found that it greatly enhance the students abilities to control hardware from software, and dramatically reduce the time spent on software ↔ hardware interfacing. As the framework is also scalable, it can support projects from controlling a single LED, to complex modular and aggregated robots with demands for high bandwidths and low jitter in the control loop.",Complexity theory; Computers; Field programmable gate arrays; Hardware; Random access memory; Robots; Software,A System on Chip approach to enhanced learning in interdisciplinary robotics,-,NO,,,YES,,,,,NO,,
S1662,1,Backward,conferencePaper,2012,"Esteller-Curto, Roger; del Pobil, Angel P.; Cervera, Enric; Marin, Raul",2012 Sixth International Conference on Innovative Mobile and Internet Services in Ubiquitous Computing,10.1109/IMIS.2012.132,,"Using the Internet to control and access real devices such as robots opens the door to new opportunities as the design of telelaboratories that permit the implementation of new algorithms using specific and detailed constrains. This is fundamental for designing benchmarks that allow the experiments to be made in a more scientific manner, taking into account that these experiments should be able to be reproduced in the future by other people under the same circumstances. This fact is fundamental to the implementation of new algorithms that can be compared with previous results from other scientific teams. The authors of this article consider that an interesting way to rapidly evaluate and benchmark a new robotic manipulation algorithm is by including into the system the possibility to upload Mat lab programs. This tool is normally used by the engineers for prototyping, including a huge set of already existing and standardized algorithms, some of them related to vision and robotic control. This paper presents the system architecture of an Internet robotic system that permits uploading a Mat lab algorithm to control a robotic arm/hand by means of visual servoing techniques. The system can specify a particular experiment with a set of initial states by using an XML representation, and evaluate the results by grasping a particular set of objects. Therefore, this system architecture presents the following challenges, firstly, to be used as a test-bed for visual servoing control applications, and secondly to benchmark these algorithms. At the moment of writing the system is under construction and the software and hardware architecture is being tested. Every component of the architecture is designed following high modularity principles, offering its services through the net. This permits to accomplish the requirements of the architecture: interchangable parts and two-target design, trying to minimize its complexity.",Benchmark testing; benchmarking; Cameras; Computer architecture; Internet; Matlab; MATLAB; REST; robotics; system architecture; Visual servoing,A Test-Bed Internet Based Architecture Proposal for Benchmarking of Visual Servoing Techniques,-,NO,,,YES,,,,,NO,,
S1663,1,Backward,conferencePaper,2016,"Pinciroli, Carlo; Lee-Brown, Adam; Beltrame, Giovanni",Proceedings of the 9th EAI International Conference on Bio-inspired Information and Communications Technologies (formerly BIONETICS),10.4108/eai.3-12-2015.2262503,http://eudl.eu/doi/10.4108/eai.3-12-2015.2262503,"In this paper, we present a system to allow a swarm of robots to agree on a set of (key,value) pairs. This system enables a form of information sharing that has the potential to be an asset for coordination in complex environments, such as globally optimized task allocation. Taking inspiration from the environment-mediated communication of social insects, we call the system virtual stigmergy. Experimental evaluation indicates that virtual stigmergy can work in a wide variety of running conditions including heavy packet loss, and can cope with random motion trajectories.",,A Tuple Space for Data Sharing in Robot Swarms,-,NO,,,YES,,,,,NO,,
S1664,1,Backward,bookSection,2013,"Muir, James A.",Advances in Network Analysis and its Applications,,https://doi.org/10.1007/978-3-642-30904-5_9,"White-box cryptography concerns the design and analysis of implementations of cryptographic algorithms engineered to execute on untrusted platforms. Such implementations are said to operate in a white-box attack context. This is an attack model where all details of the implementation are completely visible to an attacker: not only do they see input and output, they see every intermediate computation that happens along the way. The goal of a white-box attacker when targeting an implementation of a cipher is typically to extract the cryptographic key; thus, white-box implementations have been designed to thwart this goal (i.e., to make key extraction difficult/infeasible). The academic study of white-box cryptography was initiated in 2002 in the seminal work of Chow et al. (White-box cryptography and an AES implementation. In: Selected areas in cryptography: 9th annual international workshop, SAC 2002. Lecture notes in computer science, vol 2595, pp 250–270, 2003). Here, we review the first white-box AES implementation proposed by Chow et al. and give detailed information on how to construct it. We provide a number of diagrams that summarize the flow of data through the various look-up tables in the implementation, which helps clarify the overall design. We then briefly review the impressive 2004 cryptanalysis by Billet et al. (Cryptanalysis of a white box AES implementation. In: Selected areas in cryptography: 11th international workshop, SAC 2004. Lecture notes in computer science, vol 3357, pp 227–240, 2005). The BGE attack can used to extract an AES key from Chow et al.’s original white-box AES implementation with a work factor of about 230, and this fact has motivated subsequent work on improved AES implementations.",Block Cipher; Digital Right Management; Digital Right Management System; Input Encodings; Output Encodings,A Tutorial on White-Box AES,-,NO,,,YES,,,,,NO,,
S1665,1,Backward,journalArticle,2018,"Stooke, Adam; Abbeel, P.",undefined,,https://www.semanticscholar.org/reader/67ee02edb5d969c0657314ed6c1a6ed62121ac29,An academic search engine that utilizes artificial intelligence methods to provide highly relevant results and novel tools to filter them with ease.,,Accelerated Methods for Deep Reinforcement Learning,-,NO,,,YES,,,,,NO,,
S1666,1,Backward,book,2018,"Thorvald, P.; Case, K.",,,,"The urgent need to keep pace with the accelerating globalization of manufacturing in the 21st century has produced rapid advancements in technology, research and innovation. This book presents the proceedings of the 16th International Conference on Manufacturing Research incorporating the 33nd National Conference on Manufacturing Research (ICMR 2018), held in Skövde, Sweden, in September 2018. The aim of the conference is to create a friendly and inclusive environment, bringing together researchers, academics and industrialists with practical and theoretical knowledge to share and discuss emerging trends and new challenges. The book is divided into 12 parts, covering areas such as the manufacturing process; robots; product design and development; smart manufacturing; and lean, among others. Covering both cutting-edge research and recent industrial applications, the book will appeal to all those with an interest in recent advances in manufacturing technology.",Technology & Engineering / Industrial Technology,"Advances in Manufacturing Technology XXXII: Proceedings of the 16th International Conference on Manufacturing Research, incorporating the 33rd National Conference on Manufacturing Research, September 11 – 13, 2018, University of Skövde, Sweden",NO,,,,YES,,,,,NO,,
S1667,1,Backward,journalArticle,2012,"Kwon, Dai-Young; Kim, Han-Sung; Shim, Jae-Kwoun; Lee, Won-Gyu",IEEE Transactions on Education,10.1109/TE.2012.2190071,,"Tangible programming tools enable children to easily learn the programming process, previously considered to be difficult for them. While various tangible programming tools have been developed, there is still a lack of available tools to help students experience the general programming process. This study therefore developed a tool called Algorithmic Bricks (A-Bricks), to improve the programming language experience by considering and utilizing characteristics of procedural language. Specifically, elements such as sequence, repetition, condition, function, and parameter were used to develop A-Bricks. In addition, this study observed the benefits of A-Bricks and confirmed its potential as a tangible educational programming tool by comparing and analyzing elementary school students using A-Bricks to control groups using Scratch.",Computer science education; Debugging; educational robot; Joining processes; procedural programming; Programming profession; Robots; tangible user interface; Usability; User interfaces,Algorithmic Bricks: A Tangible Robot Programming Tool for Elementary School Students,-,NO,,,YES,,,,,NO,,
S1668,1,Backward,conferencePaper,2006,"Toscher, S.; Reinemann, T.; Kasper, R.",First NASA/ESA Conference on Adaptive Hardware and Systems (AHS'06),10.1109/AHS.2006.17,,"Adaptive systems based on reconfigurable hardware provide an attractive platform for the implementation of mechatronic controller functionality. Such control algorithms comprise various operating states, parameter sets or algorithms that depend on changing external conditions. This paper presents an implemented and tested adaptive mechatronic control system, supporting the partial reconfiguration of real-time controller functionality. It provides a distributed reconfiguration and activation management as well as on/off-chip communication solutions including a delta-sigma ADC and an USB 2.0 interface. All functionality and the reconfiguration management are implemented directly in hardware using bit serial methods. This approach avoids real-time problems and takes advantage of high level parallel signal processing",Adaptive control; Adaptive systems; Communication system control; Control systems; Hardware; Mechatronics; Programmable control; Real time systems; Signal processing algorithms; System testing,An Adaptive FPGA-Based Mechatronic Control System Supporting Partial Reconfiguration of Controller Functionalities,-,NO,,,NO,,,,,NO,,
S1669,1,Backward,journalArticle,1979,"Lozano-Pérez, Tomás; Wesley, Michael A.",Communications of the ACM,10.1145/359156.359164,https://dl.acm.org/doi/10.1145/359156.359164,"This paper describes a collision avoidance algorithm for planning a safe path for a polyhedral object moving among known polyhedral objects. The algorithm transforms the obstacles so that they represent the locus of forbidden positions for an arbitrary reference point on the moving object. A trajectory of this reference point which avoids all forbidden regions is free of collisions. Trajectories are found by searching a network which indicates, for each vertex in the transformed obstacles, which other vertices can be reached safely.",,An algorithm for planning collision-free paths among polyhedral obstacles,-,NO,,,NO,,,,,NO,,
S1670,1,Backward,conferencePaper,2013,"Fürler, Lukas; Nagrath, Vineet; Malik, Aamir Saeed; Meriaudeau, Fabrice",2013 International Conference on Communication Systems and Network Technologies,10.1109/CSNT.2013.62,,"This paper presents the development process of an auto-operated telepresence system for the Nao humanoid robot with the main functionality of directing the robot autonomously to an operator-defined target location within a static workspace. The workspace is observed by an array of top-view cameras, which are used to localize the robot by means of a color-based marker detection technique. The system is accessible world-wide to the remote operator through any Internet-capable device via a web-based control interface. The web server responsible for coordinating the communication between system and operator is hosted on a cloud-based infrastructure online. The system was realized as a case study for the Agent Relation Charts (ARCs), a new model driven design methodology for multi-agent cloud-based systems conceived at the Le2i laboratory in Le Creusot, France.",Agent Relation Charts; Cameras; Cloud Computing; Humanoid robots; Multi Agent Systems; Nao Humanoid Robot; Robot kinematics; Robot vision systems; Teleoperation; Telepresence; Telerobotics; Web servers,An Auto-Operated Telepresence System for the Nao Humanoid Robot,-,NO,,,YES,,,,,NO,,
S1671,1,Backward,conferencePaper,2017,"Quarta, Davide; Pogliani, Marcello; Polino, Mario; Maggi, Federico; Zanchettin, Andrea Maria; Zanero, Stefano",2017 IEEE Symposium on Security and Privacy (SP),10.1109/SP.2017.20,,"Industrial robots, automated manufacturing, and efficient logistics processes are at the heart of the upcoming fourth industrial revolution. While there are seminal studies on the vulnerabilities of cyber-physical systems in the industry, as of today there has been no systematic analysis of the security of industrial robot controllers. We examine the standard architecture of an industrial robot and analyze a concrete deployment from a systems security standpoint. Then, we propose an attacker model and confront it with the minimal set of requirements that industrial robots should honor: precision in sensing the environment, correctness in execution of control logic, and safety for human operators. Following an experimental and practical approach, we then show how our modeled attacker can subvert such requirements through the exploitation of software vulnerabilities, leading to severe consequences that are unique to the robotics domain. We conclude by discussing safety standards and security challenges in industrial robotics.",CPS; industrial robot; Internet; Production; Robot sensing systems; Safety; Security; Service robots; system security,An Experimental Security Analysis of an Industrial Robot Controller,-,NO,,,YES,,,,,NO,,
S1672,1,Backward,journalArticle,2010,"Shin, Sooyeon; Kwon, Taekyoung; Jo, Gil-Yong; Park, Youngman; Rhy, Haekyu",IEEE Transactions on Industrial Informatics,10.1109/TII.2010.2051556,,"Wireless industrial sensor networks are necessary for industrial applications, so that wireless sensor nodes sense around themselves and detect anomaly events in the harsh industrial environments. Due to the harshness, anomaly events such as adversarial intrusions may result in harmful and disastrous situations for industrial applications but it is difficult to detect them over wireless medium. Intrusion detection is an essential requirement for security, but as far as we know, there have not been such studies for wireless industrial sensor networks in the literature. The previous intrusion detection methods proposed for wireless sensor networks consider networks rather in general senses and restrict capabilities to specific attacks only. In this paper, we first study intrusion detection for wireless industrial sensor networks, through various experiments and design of a hierarchical framework. We classify and select better methodologies against various intrusions. Subsequently, we find novel results on the previous methodologies. We also propose a new hierarchical framework for intrusion detection as well as data processing. Throughout the experiments on the proposed framework, we stress the significance of one-hop clustering, which was neglected in the previous studies. Finally, we construct required logical protocols in the hierarchical framework; hierarchical intrusion detection and prevention protocols.",Clustering; Communication system security; industrial applications; Industry applications; intrusion detection; Intrusion detection; intrusion prevention; Monitoring; Protocols; Wireless communication; wireless industrial sensor network; Wireless sensor networks,An Experimental Study of Hierarchical Intrusion Detection for Wireless Industrial Sensor Networks,-,NO,,,YES,,,,,NO,,
S1673,1,Backward,conferencePaper,2010,"Falsig, Simon; Soerensen, Anders Stengaard",2010 IEEE/RSJ International Conference on Intelligent Robots and Systems,10.1109/IROS.2010.5649996,,"One of the major costs and inhibitors to practical robotics research is the time required for the creation of the embedded systems that implement the discrete event control in experimental robot systems. Using a standardized system architecture can reduce this time, but is often not feasible due to the rapidly varying requirements present in robotics research, and the considerable cost associated with implementing a full-blown standard. This often results in short-term ad-hoc solutions with low reusability and therefore high long-term cost to robotics labs. By utilizing the flexibility offered by reconfigurable electronics, in the form of Field Programmable Gate Arrays (FPGAs), we have arrived at an architecture for low-level control, which is flexible enough to bridge the traditional gaps between size, performance, topology, reusability, high-level integration, and ease of use. Several iterations, have led us to our current implementations: TosNet, which is optimized toward rapid prototyping in experimental modular robotics, and μTosNet, which has been optimized for simpler experiments and teaching. In this paper we present the overall concept and its background, as well as the two TosNet frameworks, examples of applications, and thoughts on dissemination and future work.",Computer architecture; Field programmable gate arrays; Hardware; Libraries; Logic gates; Network interfaces; Robots,"An FPGA based approach to increased flexibility, modularity and integration of low level control in robotics research",-,NO,,,YES,,,,,NO,,
S1674,1,Backward,conferencePaper,2016,"Mirian, Ariana; Ma, Zane; Adrian, David; Tischer, Matthew; Chuenchujit, Thasphon; Yardley, Tim; Berthier, Robin; Mason, Joshua; Durumeric, Zakir; Halderman, J. Alex; Bailey, Michael","2016 14th Annual Conference on Privacy, Security and Trust (PST)",10.1109/PST.2016.7906943,,"Industrial control systems have become ubiquitous, enabling the remote, electronic control of physical equipment and sensors. Originally designed to operate on closed networks, the protocols used by these devices have no built-in security. However, despite this, an alarming number of systems are connected to the public Internet and an attacker who finds a device often can cause catastrophic damage to physical infrastructure. We consider two aspects of ICS security in this work: (1) what devices have been inadvertently exposed on the public Internet, and (2) who is searching for vulnerable systems. First, we implement five common SCADA protocols in ZMap and conduct a survey of the public IPv4 address space finding more than 60K publicly accessible systems. Second, we use a large network telescope and high-interaction honeypots to find and profile actors searching for devices. We hope that our findings can both motivate and inform future work on securing industrial control systems.",Companies; IEC Standards; Industrial control; Integrated circuits; Protocols; Security,An Internet-wide view of ICS devices,-,NO,,,YES,,,,,NO,,
S1675,1,Backward,journalArticle,2018,"Ahmad Yousef, Khalil; AlMajali, Anas; Ghalyon, Salah; Dweik, Waleed; Mohd, Bassam",Sensors,10.3390/s18051643,http://www.mdpi.com/1424-8220/18/5/1643,"Robots are increasingly involved in our daily lives. Fundamental to robots are the communication link (or stream) and the applications that connect the robots to their clients or users. Such communication link and applications are usually supported through client/server network connection. This networking system is amenable of being attacked and vulnerable to the security threats. Ensuring security and privacy for robotic platforms is thus critical, as failures and attacks could have devastating consequences. In this paper, we examine several cyber-physical security threats that are unique to the robotic platforms; speciﬁcally the communication link and the applications. Threats target integrity, availability and conﬁdential security requirements of the robotic platforms, which use MobileEyes/arnlServer client/server applications. A robot attack tool (RAT) was developed to perform speciﬁc security attacks. An impact-oriented approach was adopted to analyze the assessment results of the attacks. Tests and experiments of attacks were conducted in simulation environment and physically on the robot. The simulation environment was based on MobileSim; a software tool for simulating, debugging and experimenting on MobileRobots/ActivMedia platforms and their environments. The robot platform PeopleBotTM was used for physical experiments. The analysis and testing results show that certain attacks were successful at breaching the robot security. Integrity attacks modiﬁed commands and manipulated the robot behavior. Availability attacks were able to cause Denial-of-Service (DoS) and the robot was not responsive to MobileEyes commands. Integrity and availability attacks caused sensitive information on the robot to be hijacked. To mitigate security threats, we provide possible mitigation techniques and suggestions to raise awareness of threats on the robotic platforms, especially when the robots are involved in critical missions or applications.",,Analyzing Cyber-Physical Threats on Robotic Platforms,-,NO,,,YES,,,,,NO,,
S1676,1,Backward,conferencePaper,2016,"Dieber, Bernhard; Kacianka, Severin; Rass, Stefan; Schartner, Peter",2016 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS.2016.7759659,,"While the topic of security in industrial applications has gained some momentum in recent years, there are still severe security vulnerabilities which are actively exploited for attacks. The robot operating system (ROS) is expected to further grow in usage and to be used in many industrial applications. Analysis, however, shows that it lacks several security enhancements in order to make it suitable for industrial use. In its current state, false data and commands can be injected posing a possible safety risk for the resulting product and humans in the production. In addition, data may be eavesdropped and used by outsiders to gain insight into the production process. In this paper we propose a security architecture intended for use on top of ROS on the application level. We use a dedicated authorization server to ensure that only valid nodes are part of the application. Cryptographic methods ensure data confidentiality and integrity. We show in a demonstration with a collaborative robot how our architecture can be used to secure a ROS-based application.",Authentication; Cryptography; Digital signatures; Production; Service robots,Application-level security for ROS-based applications,-,,,,YES,,NO,,,NO,,
S1677,1,Backward,conferencePaper,2011,"Olson, Edwin",2011 IEEE International Conference on Robotics and Automation,10.1109/ICRA.2011.5979561,,"While the use of naturally-occurring features is a central focus of machine perception, artificial features (fiducials) play an important role in creating controllable experiments, ground truthing, and in simplifying the development of systems where perception is not the central objective. We describe a new visual fiducial system that uses a 2D bar code style ""tag"", allowing full 6 DOF localization of features from a single image. Our system improves upon previous systems, incorporating a fast and robust line detection system, a stronger digital coding system, and greater robustness to occlusion, warping, and lens distortion. While similar in concept to the ARTag system, our method is fully open and the algorithms are documented in detail.",Detectors; Encoding; Image segmentation; Payloads; Robots; Robustness; Visualization,AprilTag: A robust and flexible visual fiducial system,-,NO,,,YES,,NO,,,NO,,
S1678,1,Backward,conferencePaper,2003,"Likhachev, Maxim; Gordon, Geoffrey J; Thrun, Sebastian",Advances in Neural Information Processing Systems,,https://proceedings.neurips.cc/paper/2003/hash/ee8fe9093fbbb687bef15a38facc44d2-Abstract.html,"In real world planning problems, time for deliberation is often limited. Anytime planners are well suited for these problems: they ﬁnd a feasi- ble solution quickly and then continually work on improving it until time runs out. In this paper we propose an anytime heuristic search, ARA, which tunes its performance bound based on available search time. It starts by ﬁnding a suboptimal solution quickly using a loose bound, then tightens the bound progressively as time allows. Given enough time it ﬁnds a provably optimal solution. While improving its bound, ARA reuses previous search efforts and, as a result, is signiﬁcantly more efﬁ- cient than other anytime search methods. In addition to our theoretical analysis, we demonstrate the practical utility of ARA* with experiments on a simulated robot kinematic arm and a dynamic path planning prob- lem for an outdoor rover.",,ARA\ast : Anytime A\ast with Provable Bounds on Sub-Optimality,-,NO,,,NO,,,,,NO,,
S1679,1,Backward,journalArticle,2008,"Chen, David; Doumeingts, Guy; Vernadat, François",Computers in Industry,10.1016/j.compind.2007.12.016,https://www.sciencedirect.com/science/article/pii/S0166361508000365,The paper defines and clarifies basic concepts of enterprise architectures. Then an overview on architectures for enterprise integration developed since the middle of the 1980s is presented. The main part of the paper focuses on the recent developments on architectures for enterprise interoperability. The main initiatives and existing works are presented. Future trends and some research issues are discussed and conclusions are given at the end of the paper.,Enterprise architecture; Enterprise integration; Enterprise modelling; Interoperability; Networked enterprises,"Architectures for enterprise integration and interoperability: Past, present and future",-,NO,,,YES,,,,,NO,,
S1680,1,Backward,journalArticle,2012,"Pinciroli, Carlo; Trianni, Vito; O’Grady, Rehan; Pini, Giovanni; Brutschy, Arne; Brambilla, Manuele; Mathews, Nithin; Ferrante, Eliseo; Di Caro, Gianni; Ducatelle, Frederick; Birattari, Mauro; Gambardella, Luca Maria; Dorigo, Marco",Swarm Intelligence,10.1007/s11721-012-0072-5,https://doi.org/10.1007/s11721-012-0072-5,"We present a novel multi-robot simulator named ARGoS. ARGoS is designed to simulate complex experiments involving large swarms of robots of different types. ARGoS is the first multi-robot simulator that is at the same time both efficient (fast performance with many robots) and flexible (highly customizable for specific experiments). Novel design choices in ARGoS have enabled this breakthrough. First, in ARGoS, it is possible to partition the simulated space into multiple sub-spaces, managed by different physics engines running in parallel. Second, ARGoS’ architecture is multi-threaded, thus designed to optimize the usage of modern multi-core CPUs. Finally, the architecture of ARGoS is highly modular, enabling easy addition of custom features and appropriate allocation of computational resources. We assess the efficiency of ARGoS and showcase its flexibility with targeted experiments. Experimental results demonstrate that simulation run-time increases linearly with the number of robots. A 2D-dynamics simulation of 10,000 e-puck robots can be performed in 60 % of the time taken by the corresponding real-world experiment. We show how ARGoS can be extended to suit the needs of an experiment in which custom functionality is necessary to achieve sufficient simulation accuracy. ARGoS is open source software licensed under GPL3 and is downloadable free of charge.",ARGoS; High-performance; Multi-robot systems; Simulation; Swarm robotics,"ARGoS: a modular, parallel, multi-engine simulator for multi-robot systems",-,NO,,,YES,,,,,NO,,
S1681,1,Backward,conferencePaper,2005,"Fiala, M.",2005 IEEE Computer Society Conference on Computer Vision and Pattern Recognition (CVPR'05),10.1109/CVPR.2005.74,,"Fiducial marker systems consist of patterns that are mounted in the environment and automatically detected in digital camera images using an accompanying detection algorithm. They are useful for augmented reality (AR), robot navigation, and general applications where the relative pose between a camera and object is required. Important parameters for such marker systems is their false detection rate (false positive rate), their inter-marker confusion rate, minimal detection size (in pixels) and immunity to lighting variation. ARTag is a marker system that uses digital coding theory to get a very low false positive and inter-marker confusion rate with a small required marker size, employing an edge linking method to give robust lighting variation immunity. ARTag markers are bi-tonal planar patterns containing a unique ID number encoded with robust digital techniques of checksums and forward error correction (FEC). This proposed new system, ARTag has very low and numerically quantifiable error rates, does not require a grey scale threshold as does other marker systems, and can encode up to 2002 different unique ID's with no need to store patterns. Experimental results are shown validating this system.",Augmented reality; Codes; Detection algorithms; Digital cameras; Forward error correction; Joining processes; Navigation; Robot vision systems; Robotics and automation; Robustness,"ARTag, a fiducial marker system using digital techniques",-,NO,,,NO,,,,,NO,,
S1682,1,Backward,conferencePaper,2014,"Nam, Changjoo; Shell, Dylan A.",2014 IEEE International Conference on Robotics and Automation (ICRA),10.1109/ICRA.2014.6907156,,"We consider optimization of the multi-robot task-allocation problem when the overall performance of the team need not be a standard sum-of-cost model. We introduce a generalization that allows for the additional cost incurred by resource contention to be treated in a straightforward manner. In this variant, robots may choose one of shared resources to perform a task, and interference may be modeled as occurring when multiple robots use the same resource. We investigate the general NP-hard problem and instances where the interference results in linear or convex penalization functions. We propose an exact algorithm for the general problem and polynomial-time algorithms for the other problems. The exact algorithm finds an optimal assignment in a reasonable time on small instances. The other two algorithms quickly find an optimal and a high-quality approximation assignment even if a problem is of considerable size. In contrast to conventional approximation methods, our algorithm provides the performance guarantee.",Approximation algorithms; Interference; Mathematical model; Optimization; Resource management; Robot kinematics,Assignment algorithms for modeling resource contention and interference in multi-robot task-allocation,-,NO,,,YES,,,,,NO,,
S1683,1,Backward,journalArticle,2007,"Pentico, David W.",European Journal of Operational Research,10.1016/j.ejor.2005.09.014,https://www.sciencedirect.com/science/article/pii/S0377221705007137,"Having reached the 50th (golden) anniversary of the publication of Kuhn’s seminal article on the solution of the classic assignment problem, it seems useful to take a look at the variety of models to which it has given birth. This paper is a limited survey of what appear to be the most useful of the variations of the assignment problem that have appeared in the literature over the past 50years. The intention here is not to identify every such paper (of which there have been hundreds) nor to identify the best solution procedure for each variation. Rather, the intention is to identify what these variations are and what they are called so as to make it easier for a researcher trying to develop some variation of the assignment problem for a particular application to find the relevant literature.",Assignment problems; Integer programming,Assignment problems: A golden anniversary survey,-,NO,,,YES,,,,,NO,,
S1684,1,Backward,conferencePaper,2005,"Blanchet, B.; Abadi, M.; Fournet, C.",20th Annual IEEE Symposium on Logic in Computer Science (LICS' 05),10.1109/LICS.2005.8,,"In the analysis of security protocols, methods and tools for reasoning about protocol behaviors have been quite effective. We aim to expand the scope of those methods and tools. We focus on proving equivalences P/spl ap/Q in which P and Q are two processes that differ only in the choice of some terms. These equivalences arise often in applications. We show how to treat them as predicates on the behaviors of a process that represents P and Q at the same time. We develop our techniques in the context of the applied pi calculus and implement them in the tool ProVerif.",Broadcasting; Calculus; Cryptographic protocols; Cryptography; Security; Writing,Automated verification of selected equivalences for security protocols,-,NO,,,NO,,,,,NO,,
S1685,1,Backward,journalArticle,2017,"Dahl, M.; Bengtsson, K.; Fabian, M.; Falkman, P.",Procedia Manufacturing,10.1016/j.promfg.2017.07.107,https://www.sciencedirect.com/science/article/pii/S2351978917303116,"This paper presents a method where the behavior of a robot cell is automatically modeled based on existing robot programs and a simulation model of the cell. Robot programs from the shop floor are uploaded into a virtual manufacturing tool, and a formal model is then generated from the robot programs. Then, control logic is automatically calculated, and the fastest possible execution order is found by using the generated model to formulate an optimization problem. The result is continuously analyzed and validated by simulation in the virtual manufacturing tool.",automation development; robot programming; virtual commissioning; virtual manufacturing,Automatic Modeling and Simulation of Robot Program Behavior in Integrated Virtual Preparation and Commissioning,-,NO,,,YES,,,,,NO,,
S1686,1,Backward,conferencePaper,2008,"Drath, Rainer; Luder, Arndt; Peschke, Jorn; Hundt, Lorenz",2008 IEEE International Conference on Emerging Technologies and Factory Automation,10.1109/ETFA.2008.4638461,,"This contribution presents the basic architecture of the neutral data format AutomationML developed by the companies Daimler, ABB, Siemens, Rockwell, Kuka, Zuhlke, netAllied and the universities of Magdeburg and Karlsruhe. AutomationML serves for the data exchange between manufacturing engineering tools and therefore supports the interoperability between them. It covers information about the plant structure (topology and geometry) and the plant behaviour (logic and kinematics). The first version of AutomationML has been presented at the Hannover fair in 2008.",Geometry; Grippers; Kinematics; Libraries; Robots; Topology; XML,AutomationML - the glue for seamless automation engineering,-,NO,,,YES,,,,,NO,,
S1687,1,Backward,conferencePaper,2004,"Ranganathan, A.; Campbell, R.H.","International Conference on Autonomic Computing, 2004. Proceedings.",10.1109/ICAC.2004.1301350,,"Pervasive computing envisions a world with users interacting naturally with device-rich environments to perform various kinds of tasks. These environments must, thus, be self-managing and autonomic systems, receiving only high-level guidance from users. However, these environments are also highly dynamic $the context and resources available in these environments can change rapidly. They are also prone to failures - one or more entities can fail due to variety of reasons. The dynamic and fault-prone nature of these environments poses major challenges to their autonomic operation. In this paper we present a paradigm for the operation of pervasive computing environments that is based on goal specification and STRIPS-based planning. Users as well as application developers can describe tasks to be performed in terms of abstract goals and a planning framework decides how these goals are to be achieved. This paradigm helps improve the fault-tolerance, adaptability, ease of programming and usability of these environments. We have developed and used a prototype planning system within our pervasive computing system, Gaia.",Artificial intelligence; Computer bugs; Fault tolerance; Feedback; Hardware; Pervasive computing; Prototypes; Security; Usability,Autonomic pervasive computing based on planning,-,NO,,,NO,,,,,NO,,
S1688,1,Backward,journalArticle,,"Bubeck, Alexander; Weisshardt, Florian; Verl, Alexander",,,,Software integration is still a challenging and time consuming task and therefore a major part of the development of industrial and domestic service robot applications. The presented toolchain BRIDE is able to streamline this process by the separation of user roles and the separation of developer concerns of software components to ensure a frame-work independent implementation. The impact of the BRIDE toolchain in the development process is demonstrated in a case study on the SyncMM mobile manipulation control framework.,,BRIDE - A toolchain for framework-independent development of industrial service robot applications,-,NO,,,NO,,NO,,,NO,,
S1689,1,Backward,journalArticle,2007,"Martin, David; Burstein, Mark; McDermott, Drew; McIlraith, Sheila; Paolucci, Massimo; Sycara, Katia; McGuinness, Deborah L.; Sirin, Evren; Srinivasan, Naveen",World Wide Web,10.1007/s11280-007-0033-x,https://doi.org/10.1007/s11280-007-0033-x,"Current industry standards for describing Web Services focus on ensuring interoperability across diverse platforms, but do not provide a good foundation for automating the use of Web Services. Representational techniques being developed for the Semantic Web can be used to augment these standards. The resulting Web Service specifications enable the development of software programs that can interpret descriptions of unfamiliar Web Services and then employ those services to satisfy user goals. OWL-S (“OWL for Services”) is a set of notations for expressing such specifications, based on the Semantic Web ontology language OWL. It consists of three interrelated parts: a profile ontology, used to describe what the service does; a process ontology and corresponding presentation syntax, used to describe how the service is used; and a grounding ontology, used to describe how to interact with the service. OWL-S can be used to automate a variety of service-related activities involving service discovery, interoperation, and composition. A large body of research on OWL-S has led to the creation of many open-source tools for developing, reasoning about, and dynamically utilizing Web Services.",OWL; OWL-S; Semantic Web; Semantic Web Services; service composition; service discovery; Web Services,Bringing Semantics to Web Services with OWL-S,-,NO,,,YES,,,,,NO,,
S1690,1,Backward,conferencePaper,2006,"Karna-Lin, E.; Pihlainen-Bednarik, K.; Sutinen, E.; Virnes, M.",Sixth IEEE International Conference on Advanced Learning Technologies (ICALT'06),10.1109/ICALT.2006.1652433,,"Educational robotics is used worldwide in education as a learning tool, but surprisingly rarely in special education. In our study educational robotics and the kids' club working model were brought into special education which usually lacks educational technology tools. Through qualitative action research, we have identified various advantages that educational robotics can bring into learning. The robotic tools made it possible for the students to practice and learn many necessary skills, like collaboration, cognitive skills, self-confidence, perception, and spatial understanding. The encouraging results support the second phase of the study that will analyze more concretely how technology should be developed to become more flexible and usable for all learners and what we can learn from students with individual needs through the use of technology",Cognitive robotics; Computer science; Computer science education; Concrete; Educational programs; Educational robots; Educational technology; Programming profession; Robot programming; Uniform resource locators,Can Robots Teach? Preliminary Results on Educational Robotics in Special Education,-,NO,,,NO,,,,,NO,,
S1691,1,Backward,journalArticle,2016,"Bloss, Richard",Industrial Robot: An International Journal,10.1108/IR-05-2016-0148,https://doi.org/10.1108/IR-05-2016-0148,"Purpose The purpose of this paper is to review the dramatic entry of collaborative robotics into applications. It also examines the current state of the art for collaborative robotics, factors driving their entry and their outlook for the future. Design/methodology/approach The paper includes discussions with key managers of robot companies. Attendance at the International Federation for Robotics round table discussion on collaboration and another industry round table meeting on collaborative robotics. Attendance at the CIRP technical conference on automation. Attendance at the Robotics Industry Association International Collaborative Robots Workshop. Findings Collaborative robotics are addressing many previously unmet applications while saving money, improving productivity, simplifying programming and speeding the time to return investment. It is forecast that collaborative robotics systems can address almost 100 million assembly and logistics tasks not previously addressable with traditional robotics technology. Practical implications The paper implies a major examination of collaborative robot technology now and in the future. Readers may be very excited to learn the many new tasks that collaborative robots are addressing, the many tools that have been developed to aid in selecting, designing and gaining worker acceptance and the many unique benefits that are provided, as well as the systems already available. Originality/value The paper implies a major examination of collaborative robot technology now and in the future. Readers may be very excited to learn the many new tasks that collaborative robots are addressing, the many tools that have been developed to aid in selecting, designing and gaining worker acceptance and the many unique benefits that are provided, as well as the systems already available.",Collaborative robots; Lower cost; New applications; Portability; Productivity; Programming ease,"Collaborative robots are rapidly providing major improvements in productivity, safety, programing ease, portability and cost while addressing many new applications",-,NO,,,YES,,,,,NO,,
S1692,1,Backward,conferencePaper,2017,"Yahya, Ali; Li, Adrian; Kalakrishnan, Mrinal; Chebotar, Yevgen; Levine, Sergey",2017 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS.2017.8202141,,"Policy search methods and, more broadly, reinforcement learning can enable robots to learn highly complex and general skills that may allow them to function amid the complexity and diversity of the real world. However, training a policy that generalizes well across a wide range of real-world conditions requires far greater quantity and diversity of experience than is practical to collect with a single robot. Fortunately, it is possible for multiple robots to share their experience with one another, and thereby, learn a policy collectively. In this work, we explore distributed and asynchronous policy learning as a means to achieve generalization and improved training times on challenging, real-world manipulation tasks. We propose a distributed and asynchronous version of guided policy search and use it to demonstrate collective policy learning on a vision-based door opening task using four robots. We describe how both policy learning and data collection can be conducted in parallel across multiple robots, and present a detailed empirical evaluation of our system. Our results indicate that distributed learning significantly improves training time, and that parallelizing policy learning and data collection substantially improves utilization. We also demonstrate that we can achieve substantial generalization on a challenging real-world door opening task.",Data collection; Machine learning; Parallel processing; Robots; Training; Trajectory,Collective robot reinforcement learning with distributed asynchronous guided policy search,-,NO,,,YES,,,,,NO,,
S1694,1,Backward,bookSection,2008,"Brunet, Luc; Choi, Han-Lim; How, Jonathan","AIAA Guidance, Navigation and Control Conference and Exhibit",,https://arc.aiaa.org/doi/10.2514/6.2008-6839,,Computing; Consensus Algorithm; Greedy Algorithm; Monte Carlo Simulation; Numerical Simulation; Probability Density Functions; Robots; Unmanned Vehicles,Consensus-Based Auction Approaches for Decentralized  Task Assignment,-,NO,,,YES,,,,,NO,,
S1695,1,Backward,conferencePaper,2016,"Davis, Duane T.; Chung, Timothy H.; Clement, Michael R.; Day, Michael A.",2016 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS.2016.7759559,,"Increasing unmanned aerial vehicle (UAV) capabilities and decreasing costs have facilitated growing interest in the development of large, multi-UAV systems, or swarms. The constrained communications environments in which these swarms operate, however, have limited the development of behaviors that require a high degree of deliberative coordination. This work presents two algorithms that use a consensus-algorithm approach to reliably exchange information throughout large swarms as a means of facilitating swarm behavior coordination. Results from experiments conducted in simulation and live-fly exercises are presented and discussed.",Algorithm design and analysis; Modeling; Reliability; Robot kinematics; Unmanned aerial vehicles,Consensus-based data sharing for large-scale aerial swarm coordination in lossy communications environments,-,NO,,,YES,,,,,NO,,
S1696,1,Backward,webpage,,,,,https://link.springer.com/article/10.1007/s10458-012-9196-7,,,Considering inter-task resource constraints in task allocation | SpringerLink,NO,,,,NO,,,,,NO,,
S1697,1,Backward,journalArticle,2002,"Miyata, N.; Ota, J.; Arai, T.; Asama, H.",IEEE Transactions on Robotics and Automation,10.1109/TRA.2002.803464,,"This paper deals with a task-assignment architecture for cooperative transport by multiple mobile robots in an unknown static environment. The architecture should satisfy three features: deal with a variety of tasks in time and space, deal with a large number of tasks compared with the number of robots, and decide the behavior in real time. The authors propose the following approach: we consider the unit of task (task instance) as the job that should be done in a short time by one robot. Based on the environmental information, task instances are dynamically generated using task templates. The priority of task instances is evaluated dynamically based on the number of robots and the configuration in the workspace. In addition, we avoid generating too many task instances by suppressing object motion. The main part of the architecture consists of two real-time planners: a priority-based task-assignment planner solved by using the linear programming method, and motion planners based on short-time estimation. The effectiveness of the proposed architecture is verified by a cooperative transport simulation in an unknown environment.",Building materials; Chemical engineering; Humans; Laboratories; Linear programming; Mobile robots; Motion estimation; Orbital robotics; Process control; Robot sensing systems,Cooperative transport by multiple mobile robots in unknown static environments associated with real-time task assignment,-,,,,NO,,,,,NO,,
S1698,1,Backward,conferencePaper,2017,"Paxton, Chris; Hundt, Andrew; Jonathan, Felix; Guerin, Kelleher; Hager, Gregory D.",2017 IEEE International Conference on Robotics and Automation (ICRA),10.1109/ICRA.2017.7989070,,"For collaborative robots to become useful, end users who are not robotics experts must be able to instruct them to perform a variety of tasks. With this goal in mind, we developed a system for end-user creation of robust task plans with a broad range of capabilities. CoSTAR: the Collaborative System for Task Automation and Recognition is our winning entry in the 2016 KUKA Innovation Award competition at the Hannover Messe trade show, which this year focused on Flexible Manufacturing. CoSTAR is unique in how it creates natural abstractions that use perception to represent the world in a way users can both understand and utilize to author capable and robust task plans. Our Behavior Tree-based task editor integrates high-level information from known object segmentation and pose estimation with spatial reasoning and robot actions to create robust task plans. We describe the cross-platform design and implementation of this system on multiple industrial robots and evaluate its suitability for a wide variety of use cases.",Collaboration; Grippers; Ontologies; Robustness; Service robots; User interfaces,CoSTAR: Instructing collaborative robots with behavior trees and vision,-,NO,,,YES,,,,,NO,,
S1699,1,Backward,conferencePaper,2015,"Bordallo, Alejandro; Previtali, Fabio; Nardelli, Nantas; Ramamoorthy, Subramanian",2015 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS.2015.7353783,,"Many modern robotics applications require robots to function autonomously in dynamic environments including other decision making agents, such as people or other robots. This calls for fast and scalable interactive motion planning. This requires models that take into consideration the other agent's intended actions in one's own planning. We present a real-time motion planning framework that brings together a few key components including intention inference by reasoning counterfactually about potential motion of the other agents as they work towards different goals. By using a light-weight motion model, we achieve efficient iterative planning for fluid motion when avoiding pedestrians, in parallel with goal inference for longer range movement prediction. This inference framework is coupled with a novel distributed visual tracking method that provides reliable and robust models for the current belief-state of the monitored environment. This combined approach represents a computationally efficient alternative to previously studied policy learning methods that often require significant offline training or calibration and do not yet scale to densely populated environments. We validate this framework with experiments involving multi-robot and human-robot navigation. We further validate the tracker component separately on much larger scale unconstrained pedestrian data sets.",Computational modeling; Data models; Dynamics; Navigation; Planning; Real-time systems; Robots,Counterfactual reasoning about intent for interactive navigation in dynamic environments,-,NO,,,YES,,,,,NO,,
S1700,1,Backward,conferencePaper,2010,"Beetz, Michael; Mösenlechner, Lorenz; Tenorth, Moritz",2010 IEEE/RSJ International Conference on Intelligent Robots and Systems,10.1109/IROS.2010.5650146,,"This paper describes CRAM (Cognitive Robot Abstract Machine) as a software toolbox for the design, the implementation, and the deployment of cognition-enabled autonomous robots performing everyday manipulation activities. CRAM equips autonomous robots with lightweight reasoning mechanisms that can infer control decisions rather than requiring the decisions to be preprogrammed. This way CRAM-programmed autonomous robots are much more flexible, reliable, and general than control programs that lack such cognitive capabilities. CRAM does not require the whole domain to be stated explicitly in an abstract knowledge base. Rather, it grounds symbolic expressions in the knowledge representation into the perception and actuation routines and into the essential data structures of the control programs. In the accompanying video, we show complex mobile manipulation tasks performed by our household robot that were realized using the CRAM infrastructure.",Cognition; Computer architecture; Kernel; Robot control; Robot sensing systems; Trajectory,CRAM — A Cognitive Robot Abstract Machine for everyday manipulation in human environments,-,NO,,,YES,,,,,NO,,
S1701,1,Backward,book,2017,"Lera, Francisco J. Rodríguez; Llamas, Camino Fernández; Guerrero, Ángel Manuel; Olivera, Vicente Matellán",,,https://www.intechopen.com/chapters/undefined/state.item.id,"Robots and autonomous systems in general are set to suffer similar cybersecurity problems that computers have been facing for decades. This is not only worrying for critical tasks such as those performed by surgical, or military robots but also for household robots such as vacuum cleaners or for teleconference robots compromise privacy and safety of their owners. What will happen if these robots are hacked? This study presents a survey on the cybersecurity attacks associated with service robots, and as a result, a taxonomy that classifies the risks faced by users when using service robots, distinguishing between security and safety threads, is presented. We also present the robot software development phase as one the most relevant ones for the security of robots.",,Cybersecurity of Robotics and Autonomous Systems: Privacy and Safety,NO,,,,YES,,,,,NO,,
S1702,1,Backward,journalArticle,1995,"Lenat, Douglas B.",Communications of the ACM,10.1145/219717.219745,https://doi.org/10.1145/219717.219745,"Since 1984, a person-century of effort has gone into building CYC, a universal schema of roughly 105 general concepts spanning human reality. Most of the time has been spent codifying knowledge about these concepts; approximately 106 commonsense axioms have been handcrafted for and entered into CYC's knowledge base, and millions more have been inferred and cached by CYC. This article examines the fundamental assumptions of doing such a large-scale project, reviews the technical lessons learned by the developers, and surveys the range of applications that are or soon will be enabled by the technology.",,CYC: a large-scale investment in knowledge infrastructure,-,NO,,,NO,,,,,NO,,
S1703,1,Backward,journalArticle,2014,"Paikan, Ali; Fitzpatrick, Paul; Metta, Giorgio; Natale, Lorenzo",,,,"Developing reusable software is hard; systematically developing high quality reusable software components is even harder. Separating computational components from application–dependent functionalities is a key principle for building reusable robotic systems. This work introduces an approach where coordinating logic can be transparently inserted into a reusable component, along with data transforms unanticipated by the component author. Firstly, it proposes the Port Monitor Object which extends a component port’s functionality with monitoring and event generation using runtime scripting languages. Secondly, the Port Arbitrator and its application to robotics is presented which enhances a port’s capability to arbitrate input data from multiple sources. Lastly, it represents some applications of these approaches to further improve the reusability and robustness of robotics system.",,Data Flow Port Monitoring and Arbitration,-,NO,,,YES,,,,,NO,,
S1704,1,Backward,bookSection,2018,"Pinciroli, Carlo; Gasparri, Andrea; Garone, Emanuele; Beltrame, Giovanni",Distributed Autonomous Robotic Systems: The 13th International Symposium,,https://doi.org/10.1007/978-3-319-73008-0_30,"WePinciroli, CarlotackleGasparri, AndreatheGarone, Emanueleproblem ofBeltrame, Giovanniachieving any given shape defined as a point cloud in a distributed manner with a swarm of robots. The contributions of this paper are (i) An algorithm that transforms a point cloud into a acyclic directed graph; (ii) A motion control law that, from the acyclic directed graph, allows a swarm of robots to achieve the target shape in a decentralized manner; and (iii) A theoretical model, which provides sufficient conditions on the convergence of the control law. The key idea of our approach is to achieve the target shape progressively by inducing an ordering among the robots. More precisely, we construct an acyclic directed graph so that any free robot (i.e., not part of the shape) finds its location with respect to the already placed robots. We prove that, for a 2D shape, it is sufficient for a free robot to calculate its location with respect to two already placed robots to achieve this objective. We validate our method through accurate physics-based simulations of non-holonomic robots.",Directed Acyclic Graph; Free Robot; Robot Swarm; Shape Formation; Target Shape,Decentralized Progressive Shape Formation with Robot Swarms,-,NO,,,YES,,,,,NO,,
S1705,1,Backward,conferencePaper,2017,"Gu, Shixiang; Holly, Ethan; Lillicrap, Timothy; Levine, Sergey",2017 IEEE International Conference on Robotics and Automation (ICRA),10.1109/ICRA.2017.7989385,,"Reinforcement learning holds the promise of enabling autonomous robots to learn large repertoires of behavioral skills with minimal human intervention. However, robotic applications of reinforcement learning often compromise the autonomy of the learning process in favor of achieving training times that are practical for real physical systems. This typically involves introducing hand-engineered policy representations and human-supplied demonstrations. Deep reinforcement learning alleviates this limitation by training general-purpose neural network policies, but applications of direct deep reinforcement learning algorithms have so far been restricted to simulated settings and relatively simple tasks, due to their apparent high sample complexity. In this paper, we demonstrate that a recent deep reinforcement learning algorithm based on off-policy training of deep Q-functions can scale to complex 3D manipulation tasks and can learn deep neural network policies efficiently enough to train on real physical robots. We demonstrate that the training times can be further reduced by parallelizing the algorithm across multiple robots which pool their policy updates asynchronously. Our experimental evaluation shows that our method can learn a variety of 3D manipulation skills in simulation and a complex door opening skill on real robots without any prior demonstrations or manually designed representations.",Heuristic algorithms; Instruction sets; Learning (artificial intelligence); Neural networks; Robots; Safety; Training,Deep reinforcement learning for robotic manipulation with asynchronous off-policy updates,-,NO,,,YES,,,,,NO,,
S1706,1,Backward,journalArticle,2014,"Krötzsch, Markus; Simancik, Frantisek; Horrocks, Ian",IEEE Intelligent Systems,10.1109/MIS.2013.123,,"This article provides a self-contained first introduction to description logics (DLs). The main concepts and features are explained with examples before the syntax and semantics of the DL SROIQ are defined in detail. Additional sections review lightweight DL languages, discuss the relationship to the Web Ontology Language (OWL), and give pointers to further reading.",Cognition; Computational modeling; intelligent systems; Intelligent systems; Knowledge based systems; knowledge representation; ontologies; Ontologies; OWL; Semantics; Syntactics; tutorial; Unified modeling language,Description Logics,-,NO,,,YES,,,,,NO,,
S1707,1,Backward,journalArticle,2005,"Gil, Yolanda",AI Magazine,10.1609/aimag.v26i2.1814,https://ojs.aaai.org/index.php/aimagazine/article/view/1814,"This article surveys previous work on combining planning techniques with expressive representations of knowledge in description logics to reason about tasks, plans, and goals. Description logics can reason about the logical definition of a class and automatically infer class-subclass subsumption relations as well as classify instances into classes based on their definitions. Descriptions of actions, plans, and goals can be exploited during plan generation, plan recognition, or plan evaluation. These techniques should be of interest to planning practitioners working on knowledge-rich application domains. Another emerging use of these techniques is the semantic web, where current ontology languages based on description logics need to be extended to reason about goals and capabilities for web services and agents.",,Description Logics and Planning,-,NO,,,NO,,,,,NO,,
S1708,1,Backward,conferencePaper,2004,"Koenig, N.; Howard, A.",2004 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS) (IEEE Cat. No.04CH37566),10.1109/IROS.2004.1389727,,"Simulators have played a critical role in robotics research as tools for quick and efficient testing of new concepts, strategies, and algorithms. To date, most simulators have been restricted to 2D worlds, and few have matured to the point where they are both highly capable and easily adaptable. Gazebo is designed to fill this niche by creating a 3D dynamic multi-robot environment capable of recreating the complex worlds that would be encountered by the next generation of mobile robots. Its open source status, fine grained control, and high fidelity place Gazebo in a unique position to become more than just a stepping stone between the drawing board and real hardware: data visualization, simulation of remote environments, and even reverse engineering of blackbox systems are all possible applications. Gazebo is developed in cooperation with the Player and Stage projects (Gerkey, B. P., et al., July 2003), (Gerkey, B. P., et al., May 2001), (Vaughan, R. T., et al., Oct. 2003), and is available from http://playerstage.sourceforge.net/gazebo/ gazebo.html.",Computational modeling; Educational robots; Friction; Mobile robots; Open source software; Packaging; Robot sensing systems; Service robots; Testing; Vehicle dynamics,"Design and use paradigms for Gazebo, an open-source multi-robot simulator",-,NO,,,NO,,NO,,,NO,,
S1709,1,Backward,journalArticle,,"Caeiro, -Rodriguez Manuel; Manso, -Vazquez Mario; Anido, -Rifon Luis",Journal of Research and Practice in IT,10.3316/ielapa.187058954475946,https://search.informit.org/doi/abs/10.3316/ielapa.187058954475946,"The IMS consortium is one of the most active stakeholders in the Learning Technology standardization field. Among its latest outcomes, the proposals to communicate heterogeneous systems and integrate external tools into existing LMSs stand out. This paper describes the adoption of these recent IMS specifications to integrate external tools and applications into the Game&#8729;Tel learning platform. Although Game&#8729;Tel was originally designed to support game-based learning in a multi-device environment, this paper will demonstrate how the IMS specifications have allowed us to easily integrate a wide range of existing applications with a clear potential for education and training.",Computer storage devices; Internet in education; Internetworking (Telecommunication); Management information systems,Design of flexible and open learning management systems using IMS specifications. The Game Tel experience,-,NO,,,NO,,,,,NO,,
S1710,1,Backward,conferencePaper,2012,"Cakmak, Maya; Thomaz, Andrea L.",2012 7th ACM/IEEE International Conference on Human-Robot Interaction (HRI),10.1145/2157689.2157693,,"Programming new skills on a robot should take minimal time and effort. One approach to achieve this goal is to allow the robot to ask questions. This idea, called Active Learning, has recently caught a lot of attention in the robotics community. However, it has not been explored from a human-robot interaction perspective. In this paper, we identify three types of questions (label, demonstration and feature queries) and discuss how a robot can use these while learning new skills. Then, we present an experiment on human question asking which characterizes the extent to which humans use these question types. Finally, we evaluate the three question types within a human-robot teaching interaction. We investigate the ease with which different types of questions are answered and whether or not there is a general preference of one type of question over another. Based on our findings from both experiments we provide guidelines for designing question asking behaviors on a robot learner.",Active Learning; Green products; Humans; Learning from Demonstration; Programming; Robots; Trajectory; USA Councils; Videos,Designing robot learners that ask good questions,-,NO,,,YES,,,,,NO,,
S1711,1,Backward,conferencePaper,2013,"Zoitl, Alois; Strasser, Thomas; Ebenhofer, Gerhard",2013 11th IEEE International Conference on Industrial Informatics (INDIN),10.1109/INDIN.2013.6622910,,"A higher flexibility and adaptability in industrial automation systems is an important requirement which has to be addressed in industrial systems today. New software architectures for the corresponding control environments allowing to develop modular and reusable code, are necessary. The IEC 61499 standard was especially developed for distributed industrial automation systems addressing such needs but its realization and the provision of corresponding software tools can be cost intensive. Using open source developments can provide helpful benefits. This paper therefore investigates the usage of the IEC 61499 compliant open source environment 4DIAC for developing modular and reusable control code. Moreover, future improvements are identified in order to enhance its usability for industrial automation applications.",Automation; IEC standards; Laboratories; Robot kinematics; Smart grids,Developing modular reusable IEC 61499 control applications with 4DIAC,-,NO,,,YES,,,,,NO,,
S1712,1,Backward,conferencePaper,2009,"Park, Hong-Seong; Han, Soohee",2009 ICCAS-SICE,,,"We provide an overall description of our large-scale project on a robot software, called Open Platform for Robotic Services (OPRoS). Component-oriented design for robot software is employed to accommodate the open architecture of software. Basic structure and interfaces of the component are given and as real examples, several components for robotics applications are introduced. We also suggest a framework that supports communications among components and manages timers, events, faults and so on. The framework is designed so that it can be helpful for those who are not familiar with hardware. It is shown through an integrated developed environment(IDE) that all design procedure can be simplified and thus we can save much time and efforts developing a robot software. To make more stable SW, this project includes the scheme for evaluating and testing of the developed programs. The robot SW server with the global component repository is used for computation of some tasks requiring more computing power than that of the robot and the convenient discovery service of components.",Application software; component; Computer architecture; framework; Hardware; Intelligent robots; Large-scale systems; open platform; Robot kinematics; Robot software; Service robots; Software design; Standards development; Testing,Development of an Open Software Platform for Robotics Services,-,NO,,,YES,,,,,NO,,
S1713,1,Backward,journalArticle,,"Lim, Jeongsoo; Lee, Jungho; Oh, Jun-Ho",,,,,,Development of Robot Software Framework PODO: Toward Multi-Processes and Multi-Users,-,,,,NO,,,,,NO,,
S1714,1,Backward,journalArticle,2018,"Jung, Taejin; Lim, Jeongsoo; Bae, Hyoin; Lee, Kang Kyu; Joe, Hyun-Min; Oh, Jun-Ho",IEEE Transactions on Robotics,10.1109/TRO.2017.2776287,,"This paper describes a humanoid robotics platform (DRC-HUBO+) developed for the Defense Advanced Research Projects Agency Robotics Challenge (DRC) Finals. This paper also describes the design criteria, hardware, software framework, and experimental testing of the DRC-HUBO+ platform. The purpose of DRC-HUBO+ is to perform tasks by teleoperation in hazardous environments that are unsafe for humans, such as disaster zones. We identified specific design concepts for DRC-HUBO+ to achieve this goal. For a robot to be capable of performing human tasks, a human-like shape and size, autonomy, mobility, manipulability, and power are required, among other features. Furthermore, modularized joints and a user-friendly software framework were emphasized as design concepts to facilitate research on the robot tasks. The DRC-HUBO+ platform is based on DRC-HUBO-1 and HUBO-2. The torque of each joint is increased compared to that in DRC-HUBO-1 owing to its high reduction ratio and air-cooling system. DRC-HUBO+ is designed with an exoskeletal structure to provide it with sufficient stiffness relative to its mass. All wires are enclosed within the robot body using a hollow shaft and covers to protect the wires from external shock. Regarding the vision system, active cognition of the environment can be realized using a light-detection and ranging sensor and vision cameras on the head. To achieve stable mobility, the robot can transition from the bipedal walking mode to the wheel mode using wheels located on both knees. DRC-HUBO+ has 32 degrees of freedom (DOFs), including seven DOFs for each arm and six DOFs for each leg, and a solid and light body with a height of 170 cm and a mass of 80 kg. A software framework referred to as PODO, with a Linux kernel and the Xenomai patch, is used in DRC-HUBO+.",Humanoid robots; Legged locomotion; Robot sensing systems; Software; Task analysis,Development of the Humanoid Disaster Response Platform DRC-HUBO+,-,NO,,,YES,,,,,NO,,
S1715,1,Backward,conferencePaper,1994,"Bragg, S.D.; Driskill, C.G.",Proceedings of AUTOTESTCON '94,10.1109/AUTEST.1994.381508,,"Many times it is assumed that diagrammatic programming environments such as National Instruments' LabVIEW and Hewlett-Packard's VEE-Test cannot be used for DoD software because of requirements to conform to DoD-STD-2167A. Frontier Engineering has developed government-acceptable TPS's in graphical programming environments to DoD-STD-2167A, by defining the following: a coding standard to address presentation and use of language features; a complexity metric to gauge the relative size and complexity of CSUs; an SDD format that addresses relevant requirements from DI-MCCR-80012A; configuration-management methods.<>",Application software; Computer languages; Design methodology; Instruments; Programming environments; Software design; Software standards; Software testing; Standards development; Writing,Diagrammatic-graphical programming languages and DoD-STD-2167A,-,,,,NO,,,,,NO,,
S1716,1,Backward,conferencePaper,2009,"Ansel, Jason; Arya, Kapil; Cooperman, Gene",2009 IEEE International Symposium on Parallel & Distributed Processing,10.1109/IPDPS.2009.5161063,,"DMTCP (distributed multithreaded checkpointing) is a transparent user-level checkpointing package for distributed applications. Checkpointing and restart is demonstrated for a wide range of over 20 well known applications, including MATLAB, Python, TightVNC, MPICH2, OpenMPI, and runCMS. RunCMS runs as a 680 MB image in memory that includes 540 dynamic libraries, and is used for the CMS experiment of the Large Hadron Collider at CERN. DMTCP transparently checkpoints general cluster computations consisting of many nodes, processes, and threads; as well as typical desktop applications. On 128 distributed cores (32 nodes), checkpoint and restart times are typically 2 seconds, with negligible run-time overhead. Typical checkpoint times are reduced to 0.2 seconds when using forked checkpointing. Experimental results show that checkpoint time remains nearly constant as the number of nodes increases on a medium-size cluster. DMTCP automatically accounts for fork, exec, ssh, mutexes/ semaphores, TCP/IP sockets, UNIX domain sockets, pipes, ptys (pseudo-terminals), terminal modes, ownership of controlling terminals, signal handlers, open file descriptors, shared open file descriptors, I/O (including the readline library), shared memory (via mmap), parent-child process relationships, pid virtualization, and other operating system artifacts. By emphasizing an unprivileged, user-space approach, compatibility is maintained across Linux kernels from 2.6.9 through the current 2.6.28. Since DMTCP is unprivileged and does not require special kernel modules or kernel patches, DMTCP can be incorporated and distributed as a checkpoint-restart module within some larger package.",Checkpointing; Collision mitigation; Kernel; Large Hadron Collider; Libraries; MATLAB; Packaging; Runtime; Sockets; Yarn,DMTCP: Transparent checkpointing for cluster computations and the desktop,-,NO,,,YES,,,,,NO,,
S1717,1,Backward,journalArticle,,"Nelson, Nell",,,,,,Dragonfly malware infected hundreds of business computers in an often successful attempt to collect information on industrial control systems across the United States and Europe. The attack was performed in an orchestrated manner over an extended period of time and used infection methods that were...,-,,,,NO,,,,,NO,,
S1718,1,Backward,conferencePaper,2015,"Cano, José; Molinos, Eduardo; Nagarajan, Vijay; Vijayakumar, Sethu",2015 International Conference on Advanced Robotics (ICAR),10.1109/ICAR.2015.7251505,,"In distributed (mobile) robotics environments, the different computing substrates offer flexible resource allocation options to perform computations that implement an overall system goal. The AnyScale concept that we introduce and describe in this paper exploits this redundancy by dynamically allocating tasks to appropriate substrates (or scales) to optimize some level of system performance while migrating others depending on current resource and performance parameters. In this paper, we demonstrate this concept with a general ROS-based infrastructure that solves the task allocation problem by optimising the system performance while correctly reacting to unpredictable events at the same time. Assignment decisions are based on a characterisation of the static/dynamic parameters that represent the system and its interaction with the environment. We instantiate our infrastructure on a case study application, in which a mobile robot navigates along the floor of a building trying to reach a predefined goal. Experimental validation demonstrates more robust performance (around a third improvement in metrics) under the Anyscale implementation framework.",Dynamic scheduling; Heuristic algorithms; Navigation; Portable computers; Resource management; Robots,Dynamic process migration in heterogeneous ROS-based environments,-,,NO,,YES,,,,,NO,,
S1719,1,Backward,journalArticle,2011,"Åkerberg, Johan; Gidlund, Mikael; Lennvall, Tomas; Neander, Jonas; Björkman, Mats",EURASIP Journal on Wireless Communications and Networking,10.1186/1687-1499-2011-100,https://doi.org/10.1186/1687-1499-2011-100,"Wireless communication has gained more interest in industrial automation due to flexibility, mobility, and cost reduction. Wireless systems, in general, require additional and different engineering and maintenance tasks, for example cryptographic key management. This is an important aspect that needs to be addressed before wireless systems can be deployed and maintained efficiently in the industry.",Configuration Data; Distribute Control System; Downlink Transmission; Network Manager; Security Layer,Efficient integration of secure and safety critical industrial wireless sensor networks,-,NO,,,YES,,,,,NO,,
S1720,1,Backward,journalArticle,2009,"Jain, Advait; Kemp, Charles C.",Autonomous Robots,10.1007/s10514-009-9148-5,https://doi.org/10.1007/s10514-009-9148-5,"Assistive mobile robots that autonomously manipulate objects within everyday settings have the potential to improve the lives of the elderly, injured, and disabled. Within this paper, we present the most recent version of the assistive mobile manipulator EL-E with a focus on the subsystem that enables the robot to retrieve objects from and deliver objects to flat surfaces. Once provided with a 3D location via brief illumination with a laser pointer, the robot autonomously approaches the location and then either grasps the nearest object or places an object. We describe our implementation in detail, while highlighting design principles and themes, including the use of specialized behaviors, task-relevant features, and low-dimensional representations.",Assistive robotics; Mobile manipulation,EL-E: an assistive mobile manipulator that autonomously fetches objects from flat surfaces,-,NO,,,YES,,,,,NO,,
S1721,1,Backward,conferencePaper,2014,"Aertbeliën, Erwin; De Schutter, Joris",2014 IEEE/RSJ International Conference on Intelligent Robots and Systems,10.1109/IROS.2014.6942760,,"This paper presents a new framework for constraint-based task specification of robot controllers. A task specification language (eTaSL) is defined as well as a corresponding implementation of a controller (eTC). This new framework is based on feature variables and a new concept referred to as expression graphs. It avoids some of the common pitfalls in previous frameworks, and provides a flexible and composable way to define robot control tasks. An architecture for a robot controller is proposed, as well as an implementation that can execute tasks described in the new specification language. Typical usage patterns for the new framework are explained on an example consisting of a kinematically redundant, bi-manual task on a PR2 robot. A comparison with existing frameworks shows the advantages of the new approach.",Collision avoidance; Context; Joints; Optimization; Robot kinematics; Trajectory,eTaSL/eTC: A constraint-based task specification language and robot controller using expression graphs,-,NO,,,YES,,,,,NO,,
S1722,1,Backward,conferencePaper,2015,"Kuriki, Yasuhiro; Namerikawa, Toru","2015 6th International Conference on Automation, Robotics and Applications (ICARA)",10.1109/ICARA.2015.7081204,,"In this study, we consider cooperative control issues for a multi-unmanned aerial vehicle (UAV) system. Specifically, we present a cooperative formation control strategy for a multi-UAV system with unidirectional network links. Our strategy is to apply a consensus-based algorithm and leader-follower structure to the UAVs so that they can cooperatively fly in formation. The leader provides each UAV with commands to generate a geometric configuration of the formation. Convergence is guaranteed when the cooperative formation control algorithm is applied to the UAVs. Collisions among UAVs can occur when they are flying with the cooperative control UAVs. Our strategy for collision avoidance is to apply an artificial potential approach to the UAVs. Experiments are performed on multiple commercial small UAVs to validate the proposed formation control algorithm with collision-avoidance capability.",Collision avoidance; Eigenvalues and eigenfunctions; Heuristic algorithms; Laplace equations; Propellers; Robots; Safety,Experimental validation of cooperative formation control with collision avoidance for a multi-UAV system,-,NO,,,YES,,,,,NO,,
S1723,1,Backward,conferencePaper,2016,"Maruyama, Yuya; Kato, Shinpei; Azumi, Takuya",Proceedings of the 13th International Conference on Embedded Software,10.1145/2968478.2968502,https://doi.org/10.1145/2968478.2968502,"Middleware for robotics development must meet demanding requirements in real-time distributed embedded systems. The Robot Operating System (ROS), open-source middleware, has been widely used for robotics applications. However, the ROS is not suitable for real-time embedded systems because it does not satisfy real-time requirements and only runs on a few OSs. To address this problem, ROS1 will undergo a significant upgrade to ROS2 by utilizing the Data Distribution Service (DDS). DDS is suitable for real-time distributed embedded systems due to its various transport configurations (e.g., deadline and fault-tolerance) and scalability. ROS2 must convert data for DDS and abstract DDS from its users; however, this incurs additional overhead, which is examined in this study. Transport latencies between ROS2 nodes vary depending on the use cases, data size, configurations, and DDS vendors. We conduct proof of concept for DDS approach to ROS and arrange DDS characteristic and guidelines from various evaluations. By highlighting the DDS capabilities, we explore and evaluate the potential and constraints of DDS and ROS2.",data distribution service; embedded; publish/subscribe; quality of service; real-time; robot operating system,Exploring the performance of ROS2,-,,,,YES,,NO,,,NO,,
S1724,1,Backward,journalArticle,2011,"Cousins, S.",IEEE Robotics & Automation Magazine,10.1109/MRA.2010.940147,https://www.infona.pl//resource/bwmeta1.element.ieee-art-000005751985,"This paper discusses about open-source robot operating system (ROS). ROS has expanded to include dozens of robots and an exponentially growing amount of code. Robot operating system has served as one of the premier libraries for robotics code in the world. Software shared through ROS is available for anyone to use, edit, and update.",,Exponential Growth of ROS [ROS Topics],-,,,,YES,,NO,,,NO,,
S1725,1,Backward,conferencePaper,2015,"Zander, Stefan; Awad, Ramez",2015 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS.2015.7353775,,"This paper presents a novel ontology-based approach that uses Description Logics as a knowledge representation framework for the description, aggregation, propagation, and interlinkage of features pertaining to robots and robot-centric workplaces. We show how different classification systems for capabilities and components can be axiomatically linked together, how features can be propagated along compound components, and how complex features can be computed on the basis of combining role inclusion, role composition, and general concept inclusion axioms. In a second use case that is related to the logical deduction of potential hazards for a given workplace configuration, we show that the presented approach is applicable to similar modeling problems.",Cognition; Employment; Ontologies; Production; Robot kinematics; Semantics,Expressing and reasoning on features of robot-centric workplaces using ontological semantics,-,NO,,,YES,,,,,NO,,
S1726,1,Backward,conferencePaper,2018,"Palazzolo, Emanuele; Stachniss, Cyrill",2018 IEEE International Conference on Robotics and Automation (ICRA),10.1109/ICRA.2018.8461019,,"3D models of the environment are used in numerous robotic applications and should reflect the current state of the world. In this paper, we address the problem of quickly finding structural changes between the current state of the world and a given 3D model using a small number of images. Our approach finds inconsistencies between pairs of images by re-projecting an image onto another one by passing through the given 3D model. This process leads to ambiguities, which we resolve by combining multiple images such that the 3D location of the change can be estimated. A focus of our approach is that it can be executed fast enough to allow the operation on a mobile system. We implemented our approach in C++ and released it as open source software. We tested it on existing datasets as well as on self-recorded image sequences and 3D models, which we publicly share. Our experiments show that our method quickly finds changes in the geometry of a scene.",Cameras; Computational modeling; Robots; Solid modeling; Three-dimensional displays; Two dimensional displays; Uncertainty,Fast Image-Based Geometric Change Detection Given a 3D Model,-,NO,,,YES,,,,,NO,,
S1727,1,Backward,conferencePaper,2019,"Lee, Moonyoung; Heo, Yujin; Park, Jinyong; Yang, Hyun-Dae; Jang, Ho-Deok; Benz, Philipp; Park, Hyunsub; Kweon, In So; Oh, Jun-Ho",2019 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS40897.2019.8968064,,"As the aging population grows at a rapid rate, there is an ever growing need for service robot platforms that can provide daily assistance at practical speed with reliable performance. In order to assist with daily tasks such as fetching a beverage, a service robot must be able to perceive its environment and generate corresponding motion trajectories. This becomes a challenging and computationally complex problem when the environment is unknown and thus the path planner must sample numerous trajectories that often are sub-optimal, extending the execution time. To address this issue, we propose a unique strategy of integrating a 3D object detection pipeline with a kinematically optimal manipulation planner to significantly increase speed performance at run-time. In addition, we develop a new robotic butler system for a wheeled humanoid that is capable of fetching requested objects at 24% of the speed a human needs to fulfill the same task. The proposed system was evaluated and demonstrated in a real-world environment setup as well as in public exhibition.",,"Fast Perception, Planning, and Execution for a Robotic Butler: Wheeled Humanoid M-Hubo",-,NO,,,YES,,,,,NO,,
S1728,1,Backward,journalArticle,,"Wise, Melonee; Ferguson, Michael; King, Derek; Diehr, Eric; Dymesich, David",,,,"Since the introduction and widespread adoption of the Robot Operating System (ROS), the mobile manipulation and mobile service robot communities have seen great advances in robot capabilities. However, the lack of affordable and commercially available fully integrated standard platforms remains a major barrier to further and faster advances. The Fetch mobile manipulator is designed to be the aﬀordable standard platform for the next generation of mobile manipulator applications. Fetch’s little brother, Freight, is designed to be the aﬀordable standard platform for mobile service robot applications. This paper highlights the design decisions and trade-oﬀs made in achieving the low cost of the platforms while continuing to provide the required capabilities for such applications.",,Fetch & Freight: Standard Platforms for Service Robot Applications,-,,,,NO,,,,,NO,,
S1729,1,Backward,conferencePaper,2014,"Deyle, Travis; Reynolds, Matthew S.; Kemp, Charles C.",2014 IEEE/RSJ International Conference on Intelligent Robots and Systems,10.1109/IROS.2014.6942914,,"We address the challenge of finding and navigating to an object with an attached ultra-high frequency radio-frequency identification (UHF RFID) tag. With current off-the-shelf technology, one can affix inexpensive self-adhesive UHF RFID tags to hundreds of objects, thereby enabling a robot to sense the RF signal strength it receives from each uniquely identified object. The received signal strength indicator (RSSI) associated with a tagged object varies widely and depends on many factors, including the object's pose, material properties and surroundings. This complexity creates challenges for methods that attempt to explicitly estimate the object's pose. We present an alternative approach that formulates finding and navigating to a tagged object as an optimization problem where the robot must find a pose of a directional antenna that maximizes the RSSI associated with the target tag. We then present three autonomous robot behaviors that together perform this optimization by combining global and local search. The first behavior uses sparse sampling of RSSI across the entire environment to move the robot to a location near the tag; the second samples RSSI over orientation to point the robot toward the tag; and the third samples RSSI from two antennas pointing in different directions to enable the robot to approach the tag. We justify our formulation using the radar equation and associated literature. We also demonstrate that it has good performance in practice via tests with a PR2 robot from Willow Garage in a house with a variety of tagged household objects.",Antenna measurements; Optimization; Radar antennas; Radiofrequency identification; Receiving antennas; Robots,Finding and navigating to household objects with UHF RFID tags by optimizing RF signal strength,-,NO,,,YES,,,,,NO,,
S1730,1,Backward,bookSection,1998,"Reynolds, Craig W.",Seminal graphics: pioneering efforts that shaped the field,,https://doi.org/10.1145/280811.281008,,actor; aggregate motion; behavioral animation; bird; constraints; fish; flight; flock; herd; particle system; path planning; school,"Flocks, herds, and schools: a distributed behavioral model",-,,,,NO,,,,,NO,,
S1731,1,Backward,bookSection,2006,"Dromey, R. Geoff",Mathematical Frameworks for Component Software,,https://www.worldscientific.com/doi/abs/10.1142/9789812772831_0006,,,Formalizing the Transition from Requirements to Design,-,,,,NO,,,,,NO,,
S1732,1,Backward,bookSection,2009,"Borgo, Stefano; Masolo, Claudio",Handbook on Ontologies,,https://doi.org/10.1007/978-3-540-92673-3_16,"Foundational ontologies are ontologies that have a large scope, can be highly reusable in different modeling scenarios, are philosophically and conceptually well founded, and are semantically transparent.",Individual Quality; Material Object; Stage Theory; Temporary Parthood; Unity Criterion,Foundational Choices in DOLCE,-,NO,,,YES,,,,,NO,,
S1733,1,Backward,bookSection,2011,"Rudolph, Sebastian","Reasoning Web. Semantic Technologies for the Web of Data: 7th International Summer School 2011, Galway, Ireland, August 23-27, 2011, Tutorial Lectures",,https://doi.org/10.1007/978-3-642-23032-5_2,"This chapter accompanies the foundational lecture on Description Logics (DLs) at the 7th Reasoning Web Summer School in Galway, Ireland, 2011. It introduces basic notions and facts about this family of logics which has significantly gained in importance over the recent years as these logics constitute the formal basis for today’s most expressive ontology languages, the OWL (Web Ontology Language) family.",Cardinality Constraint; Conjunctive Query; Description Logic; Knowledge Base; Resource Description Framework,Foundations of Description Logics,-,NO,,,YES,,,,,NO,,
S1734,1,Backward,book,2011,"Hitzler, Pascal; Krotzsch, Markus; Rudolph, Sebastian",,,,"Thoroughly covering basic introductions and intuitions, technical details, and formal foundations, this text focuses on the established foundations in this area that have become relatively stable over time. It presents the latest developments in Semantic Web standards, including RDF, RDF Schema, OWL 2, RIF, and SPARQL. It also explores formal semantics, OWL querying, the relationship between rules and OWL, and ontology engineering and applications.",,Foundations of Semantic Web Technologies,NO,,,,YES,,,,,NO,,
S1735,1,Backward,book,2008,"Saltelli, Andrea; Ratto, Marco; Andres, Terry; Campolongo, Francesca; Cariboni, Jessica; Gatelli, Debora; Saisana, Michaela; Tarantola, Stefano",,,,"Complex mathematical and computational models are used in all areas of society and technology and yet model based science is increasingly contested or refuted, especially when models are applied to controversial themes in domains such as health, the environment or the economy. More stringent standards of proofs are demanded from model-based numbers, especially when these numbers represent potential financial losses, threats to human health or the state of the environment. Quantitative sensitivity analysis is generally agreed to be one such standard. Mathematical models are good at mapping assumptions into inferences. A modeller makes assumptions about laws pertaining to the system, about its status and a plethora of other, often arcane, system variables and internal model settings. To what extent can we rely on the model-based inference when most of these assumptions are fraught with uncertainties? Global Sensitivity Analysis offers an accessible treatment of such problems via quantitative sensitivity analysis, beginning with the first principles and guiding the reader through the full range of recommended practices with a rich set of solved exercises. The text explains the motivation for sensitivity analysis, reviews the required statistical concepts, and provides a guide to potential applications. The book:  Provides a self-contained treatment of the subject, allowing readers to learn and practice global sensitivity analysis without further materials.   Presents ways to frame the analysis, interpret its results, and avoid potential pitfalls.   Features numerous exercises and solved problems to help illustrate the applications.   Is authored by leading sensitivity analysis practitioners, combining a range of disciplinary backgrounds.  Postgraduate students and practitioners in a wide range of subjects, including statistics, mathematics, engineering, physics, chemistry, environmental sciences, biology, toxicology, actuarial sciences, and econometrics will find much of use here. This book will prove equally valuable to engineers working on risk analysis and to financial analysts concerned with pricing and hedging.",Mathematics / General; Mathematics / Probability & Statistics / General; Mathematics / Probability & Statistics / Stochastic Processes,Global Sensitivity Analysis: The Primer,NO,,,,YES,,,,,NO,,
S1736,1,Backward,conferencePaper,2014,"Jost, Beate; Ketterl, Markus; Budde, Reinhard; Leimbach, Thorsten",2014 IEEE International Symposium on Multimedia,10.1109/ISM.2014.24,,"In recent years, an increasing number of school children is beginning to learn about robotics in the classroom in order to stir their interest in STEM professions. Teachers rely on simple educational robots and intuitive programming environments and graphical programming environments have become a frequent starting point for young robotics new bies. However, currently available tools do often not sufficiently support teachers and students in the classroom. In this study, we evaluate programming environments for educational robots, our results point to the need of lowering the complexity of tools as well as of incorporating combinations of web and cloud technologies, embedded systems and communication concepts into these environments. The technical part of this work presents Open Roberta – an open source based addition to commercial educational robot environments that addresses these needs.",cloud computing; e-learning; education; Educational institutions; Educational robots; embedded systems; graphical programming; Programming environments; Programming profession; roberta; robotic; Software; visual programming; web 2.0; web technology,Graphical Programming Environments for Educational Robots: Open Roberta - Yet Another One?,-,NO,,,YES,,,,,NO,,
S1737,1,Backward,journalArticle,,"Stouffer, Keith; Lightman, Suzanne; Pillitteri, Victoria; Abrams, Marshall; Hahn, Adam",NIST Special Publication,,,"This document provides guidance on how to secure Industrial Control Systems (ICS), including Supervisory Control and Data Acquisition (SCADA) systems, Distributed Control Systems (DCS), and other control system configurations such as Programmable Logic Controllers (PLC), while addressing their unique performance, reliability, and safety requirements. The document provides an overview of ICS and typical system topologies, identifies typical threats and vulnerabilities to these systems, and provides recommended security countermeasures to mitigate the associated risks.",,Guide to Industrial Control Systems (ICS) Security,-,,,,NO,,,,,NO,,
S1738,1,Backward,journalArticle,,"Cerrudo, Cesar",,,,,,Hacking Robots Before Skynet,-,,,,NO,,,,,NO,,
S1739,1,Backward,conferencePaper,2014,"Mateo, Carlos; Brunete, Alberto; Gambao, Ernesto; Hernando, Miguel",2014 IEEE/ASME 10th International Conference on Mechatronic and Embedded Systems and Applications (MESA),10.1109/MESA.2014.6935597,,"This paper presents a novel tablet based end-user interface for industrial robot programming (called Hammer). This application makes easier to program tasks for industrial robots like polishing, milling or grinding. It is based on the Scratch programming language, but specifically design and created for Android OS. It is a visual programming concept that allows non-skilled programmer operators to create programs. The application also allows to monitor the tasks while it is being executed by overlapping real time information through augmented reality. The application includes a teach pendant screen that can be customized according to the operator needs at every moment.",android OS; end-user programming; industrial robot; Programming; Robot kinematics; Robot sensing systems; Service robots; Smart phones; Three-dimensional displays,Hammer: An Android based application for end-user industrial robot programming,-,NO,,,YES,,,,,NO,,
S1740,1,Backward,book,2020,"Menezes, Alfred J.; Rosen, Kenneth H.; Oorschot, Paul C. van; Vanstone, Scott A.",,,,"Cryptography, in particular public-key cryptography, has emerged in the last 20 years as an important discipline that is not only the subject of an enormous amount of research, but provides the foundation for information security in many applications. Standards are emerging to meet the demands for cryptographic protection in most areas of data communications. Public-key cryptographic techniques are now in widespread use, especially in the financial services industry, in the public sector, and by individuals for their personal privacy, such as in electronic mail. This Handbook will serve as a valuable reference for the novice as well as for the expert who needs a wider scope of coverage within the area of cryptography. It is a necessary and timely guide for professionals who practice the art of cryptography. The Handbook of Applied Cryptography provides a treatment that is multifunctional:It serves as an introduction to the more practical aspects of both conventional and public-key cryptographyIt is a valuable source of the latest techniques and algorithms for the serious practitionerIt provides an integrated treatment of the field, while still presenting each major topic as a self-contained unitIt provides a mathematical treatment to accompany practical discussionsIt contains enough abstraction to be a valuable reference for theoreticians while containing enough detail to actually allow implementation of the algorithms discussedNow in its third printing, this is the definitive cryptography reference that the novice as well as experienced developers, designers, researchers, engineers, computer scientists, and mathematicians alike will use.",,Handbook of Applied Cryptography,NO,,,,YES,,,,,NO,,
S1741,1,Backward,book,1992,"Lozano-Pérez, Tomás; Jones, Joseph L.; O'Donnell, Patrick A.; Mazer, Emmanuel",,,,,,Handey: a robot task planner,NO,,,,NO,,,,,NO,,
S1742,1,Backward,journalArticle,2012,"Lange, Anders Blaabjerg; Andersen, Karsten Holm; Schultz, Ulrik Pagh; Sørensen, Anders Stengaard",IFAC Proceedings Volumes,10.3182/20120523-3-CZ-3015.00041,https://www.sciencedirect.com/science/article/pii/S1474667015350904,"This paper introduces HartOS, a hardware-implemented, micro-kernel-structured RTOS targeted for hard real-time embedded applications running on FPGA based platforms. Historically hardware RTOSs have been too inflexible and have had limited features and resources. HartOS is designed to be flexible and supports most of the features normally found in a software-based RTOS. To ensure fast, low latency and jitter-free communication between the CPU and RTOS, HartOS uses the ARM AXI4-Stream bus recently supported by the MicroBlaze softcore processor. Compared to μC/OS-II, HartOS has up to 3 orders of magnitude less mean error in generating the correct period for a periodic task, and around 1 order of magnitude less jitter, while having up to 100% less overhead depending on the tick frequency.",AXI4-Stream; Coprocessor; Fast Simplex link; FPGA; Hardware RTOS; MicroBlaze,HartOS - a Hardware Implemented RTOS for Hard Real-time Applications,-,NO,,,YES,,,,,NO,,
S1743,1,Backward,journalArticle,2011,"Fernandes, Ana M.; Pereira, R. C.; Sousa, J.; Batista, A. J. N.; Combo, A.; Carvalho, B. B.; Correia, C. M. B. A.; Varandas, C. A. F.",IEEE Transactions on Nuclear Science,10.1109/TNS.2011.2151875,,"The inherent parallelism of the logic resources, the flexibility in its configuration and the performance at high processing frequencies makes the field programmable gate array (FPGA) the most suitable device to be used both for real time algorithm processing and data transfer in instrumentation modules. Moreover, the reconfigurability of these FPGA based modules enables exploiting different applications on the same module. When using a reconfigurable module for various applications, the availability of a common interface library for easier implementation of the algorithms on the FPGA leads to more efficient development. The FPGA configuration is usually specified in a hardware description language (HDL) or other higher level descriptive language. The critical paths, such as the management of internal hardware clocks that require deep knowledge of the module behavior shall be implemented in HDL to optimize the timing constraints. The common interface library should include these critical paths, freeing the application designer from hardware complexity and able to choose any of the available high-level abstraction languages for the algorithm implementation. With this purpose a modular Verilog code was developed for the Virtex 4 FPGA of the in-house Transient Recorder and Processor (TRP) hardware module, based on the Advanced Telecommunications Computing Architecture (ATCA), with eight channels sampling at up to 400 MSamples/s (MSPS). The TRP was designed to perform real time Pulse Height Analysis (PHA), Pulse Shape Discrimination (PSD) and Pile-Up Rejection (PUR) algorithms at a high count rate (few Mevent/s). A brief description of this modular code is presented and examples of its use as an interface with end user algorithms, including a PHA with PUR, are described.",ATCA; Clocks; data acquisition; Data acquisition; Field programmable gate arrays; FPGA; Hardware; Hardware design languages; Libraries; real time processing; Real time systems; reconfigurable Hardware,HDL Based FPGA Interface Library for Data Acquisition and Multipurpose Real Time Algorithms,-,NO,,,YES,,,,,NO,,
S1744,1,Backward,report,2010,"Krawczyk, Hugo; Eronen, Pasi",,,https://datatracker.ietf.org/doc/rfc5869,"This document specifies a simple Hashed Message Authentication Code (HMAC)-based key derivation function (HKDF), which can be used as a building block in various protocols and applications. The key derivation function (KDF) is intended to support a wide range of applications and requirements, and is conservative in its use of cryptographic hash functions. This document is not an Internet Standards Track specification; it is published for informational purposes.",,HMAC-based Extract-and-Expand Key Derivation Function (HKDF),NO,,,,YES,,,,,NO,,
S1745,1,Backward,conferencePaper,2011,"Baugher, Mark; Lortz, Victor",Trust and Trustworthy Computing,10.1007/978-3-642-21599-5_16,,"This paper describes major risks, threats and attacks on home networks in general, and UPnPTM home networks in particular. Also considered are the strengths and weaknesses of technologies used to protect home-network and personal devices. The authors describe the effort to address these issues with a new security service for UPnP Device Control Protocols, called “UPnP Device Protection,” which features a three-tier authorization policy, peer-to-peer design, an industry-standard pairing mechanism based on WiFi Protected Setup, and a gossip protocol. The paper also considers some future issues such as the need for a richer policy infrastructure on home networks.",access controls; Home networking; security; UPnP,Home-Network Threats and Access Controls,-,NO,,,YES,,,,,NO,,
S1746,1,Backward,conferencePaper,2014,"Kakehashi, Shun; Motoyoshi, Tatsuo; Koyanagi, Ken'ichi; Oshima, Toru; Masuta, Hiroyuki; Kawakami, Hiroshi",2014 IEEE Symposium on Robotic Intelligence in Informationally Structured Space (RiiSS),10.1109/RIISS.2014.7009180,,"As a method of teaching fundamental programming concepts to visually impaired persons and novice programmers, we developed the P-CUBE algorithm education tool, with which users are able to control a mobile robot simply by positioning wooden blocks on a mat. The fundamental programming concepts taught by P-CUBE consist of three elements: sequences, branches and loops. The P-CUBE system consists of a mobile robot, a program mat, programming blocks, and a personal computer (PC). The programming blocks utilize radio frequency identification (RFID) tags alone, and thus require no precision equipment such as microcomputers. Furthermore, since P-CUBE is designed to be operated via tactile information, it can be utilized by visually impaired persons. In this paper, we report on the P-CUBE system configuration and a programming workshop held for visuarlly impaired persons. We then propose P-CUBE device improvements formulated through subjective assessments obtained from workshop participants.",Algorithm education; Block interface; Education; Mobile robots; Programming profession; Programming tool; Radiofrequency identification; Robot sensing systems; Tangible inter-face,Improvement of P-CUBE: Algorithm education tool for visually impaired persons,-,NO,,,YES,,,,,NO,,
S1747,1,Backward,conferencePaper,2011,"Kaučič, B.; Asič, T.",2011 Proceedings of the 34th International Convention MIPRO,,,"Programming is known for its complexity and difficulty. It is believed to be hard to teach and to learn and many pupils and students in programming courses have difficulties to master all required competencies and skills. At introductory level of programming that problem is even more notable. There are different approaches to improve the dropout rate at programming courses and to populate programming. Recently, special visual environments for visual programming are being used. Early research results show that visual programming can be more efficient than classical textual programming, students can be more motivated, less bored and not burden with the syntax of programming languages. This paper discusses the visual programming environment Scratch as one of the newer environments for teaching and learning introductory programming. Although it is primarily aimed for school children aged 8 to 16, it can be used also at faculty level. Scratch was experimentally used in primary school for introductory programming, the results of which are presented in the paper. The emphasis of presented results is on retention of opinion and attitude after some time passed from formal using of Scratch. Results are complemented with the results from the same survey on students that also used Scratch.",Computer languages; Education; Games; Programming environments; Programming profession; Visualization,Improving introductory programming with Scratch?,-,NO,,,YES,,,,,NO,,
S1748,1,Backward,journalArticle,,"Ioris, Darlan; Lages, Walter Fetter; Santini, Diego Caberlon",,,,"This paper deals with the development of an interface between the OROCOS framework and the Barret WAM robot. The interface is designed as an OROCOS component, which integrates the Barrett WAM with a previously developed open architecture for robot control.",,INTEGRATING THE OROCOS FRAMEWORK AND THE BARRETT WAM ROBOT,-,,,,NO,,,,,NO,,
S1749,1,Backward,conferencePaper,2014,"Maglaras, Leandros A.; Jiang, Jianmin",2014 Science and Information Conference,10.1109/SAI.2014.6918252,,"In this paper we present a intrusion detection module capable of detecting malicious network traffic in a SCADA (Supervisory Control and Data Acquisition) system. Malicious data in a SCADA system disrupt its correct functioning and tamper with its normal operation. OCSVM (One-Class Support Vector Machine) is an intrusion detection mechanism that does not need any labeled data for training or any information about the kind of anomaly is expecting for the detection process. This feature makes it ideal for processing SCADA environment data and automate SCADA performance monitoring. The OCSVM module developed is trained by network traces off line and detect anomalies in the system real time. The module is part of an IDS (Intrusion Detection System) system developed under CockpitCI project and communicates with the other parts of the system by the exchange of IDMEF (Intrusion Detection Message Exchange Format) messages that carry information about the source of the incident, the time and a classification of the alarm.",Data models; intrusion detection; Intrusion detection; Kernel; Monitoring; OCSVM; SCADA systems; Support vector machines; Training,Intrusion detection in SCADA systems using machine learning techniques,-,NO,,,YES,,,,,NO,,
S1750,1,Backward,conferencePaper,2011,"Soares, Filomena; Ribeiro, Fernando; Lopes, Gil; Leão, Celina P.; Santos, Samuel",2011 IEEE Global Engineering Education Conference (EDUCON),10.1109/EDUCON.2011.5773289,,"This paper describes a study carried out with K-12 students. This study proposes to understand the motivation of these students in the use of robots in the Project Area curricular unit and whether they want to continue their studies in technology areas. K-12 students participated in the RoboParty® event, where the main task is to assemble and program a robot. In other words, the students, in a simple and entertaining way and supported by qualified tutors, learned how to build a robot. At the end of the academic year, a questionnaire was applied to identify and evaluate the K-12 students' opinions regarding the experience. The students' reaction to this experience was quite positive as well the direct contact with the university environment.",Educational institutions; Educational robots; Engineering education; K-12; Materials; partnership; questionnaires; robotics; Service robots,"K-12, university students and robots: An early start",-,NO,,,YES,,,,,NO,,
S1751,1,Backward,conferencePaper,2017,"Rösmann, Christoph; Hoffmann, Frank; Bertram, Torsten",2017 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS.2017.8206458,,"This paper presents a novel generic formulation of Timed-Elastic-Bands for efficient online motion planning of car-like robots. The planning problem is defined in terms of a finite-dimensional and sparse optimization problem subject to the robots kinodynamic constraints and obstacle avoidance. Control actions are implicitly included in the optimized trajectory. Reliable navigation in dynamic environments is accomplished by augmenting the inner optimization loop with state feedback. The predictive control scheme is real-time capable and responds to obstacles within the robot's perceptual field. Navigation in large and complex environments is achieved in a pure pursuit fashion by requesting intermediate goals from a global planner. Requirements on the initial global path are fairly mild, compliance with the robot kinematics is not required. A comparative analysis with Reeds and Shepp curves and investigation of prototypical car maneuvers illustrate the advantages of the approach.",Kinematics; Navigation; Optimization; Planning; Robots; Trajectory; Turning,Kinodynamic trajectory optimization and control for car-like robots,-,NO,,,YES,,,,,NO,,
S1752,1,Backward,book,1990,"Martello, Silvano; Toth, Paolo",,,,,,Knapsack problems: algorithms and computer implementations,NO,,,,NO,,,,,NO,,
S1753,1,Backward,conferencePaper,2015,"Brewer, Eric A.",Proceedings of the Sixth ACM Symposium on Cloud Computing,10.1145/2806777.2809955,https://doi.org/10.1145/2806777.2809955,"We are in the midst of an important shift to higher levels of abstraction than virtual machines. Kubernetes aims to simplify the deployment and management of services, including the construction of applications as sets of interacting but independent services. We explain some of the key concepts in Kubernetes and show how they work together to simplify evolution and scaling.",,Kubernetes and the path to cloud native,-,NO,,,YES,,,,,NO,,
S1754,1,Backward,journalArticle,2002,"Sycara, Katia; Widoff, Seth; Klusch, Matthias; Lu, Jianguo",Autonomous Agents and Multi-Agent Systems,10.1023/A:1014897210525,https://doi.org/10.1023/A:1014897210525,"Service matchmaking among heterogeneous software agents in the Internet is usually done dynamically and must be efficient. There is an obvious trade-off between the quality and efficiency of matchmaking on the Internet. We define a language called Larks for agent advertisements and requests, and present a flexible and efficient matchmaking process that uses Larks. The Larks matchmaking process performs both syntactic and semantic matching, and in addition allows the specification of concepts (local ontologies) via ITL, a concept language. The matching process uses five different filters: context matching, profile comparison, similarity matching, signature matching and constraint matching. Different degrees of partial matching can result from utilizing different combinations of these filters. We briefly report on our implementation of Larks and the matchmaking process in Java. Fielded applications of matchmaking using Larks in several application domains for systems of information agents are ongoing efforts.",capability description; interoperability; matchmaking; multi-agent systems,Larks: Dynamic Matchmaking Among Heterogeneous Software Agents in Cyberspace,-,,,,NO,,,,,NO,,
S1755,1,Backward,conferencePaper,2010,"Huang, Albert S.; Olson, Edwin; Moore, David C.",2010 IEEE/RSJ International Conference on Intelligent Robots and Systems,10.1109/IROS.2010.5649358,,"We describe the Lightweight Communications and Marshalling (LCM) library for message passing and data marshalling. The primary goal of LCM is to simplify the development of low-latency message passing systems, especially for real-time robotics research applications. Messages can be transmitted between different processes using LCM's publish/subscribe message-passing system. A platformand language-independent type specification language separates message description from implementation. Message specifications are automatically compiled into language-specific bindings, eliminating the need for users to implement marshalling code while guaranteeing run-time type safety. LCM is notable in providing a real-time deep traffic inspection tool that can decode and display message traffic with minimal user effort and no impact on overall system performance. This and other features emphasize LCM's focus on simplifying both the development and debugging of message passing systems. In this paper, we explain the design of LCM, evaluate its performance, and describe its application to a number of autonomous land, underwater, and aerial robots.",Bandwidth; Java; Message passing; Peer to peer computing; Real time systems; Robots; Software,LCM: Lightweight Communications and Marshalling,-,NO,,,YES,,,,,NO,,
S1756,1,Backward,conferencePaper,2002,"Ijspeert, Auke; Nakanishi, Jun; Schaal, Stefan",Advances in Neural Information Processing Systems,,https://proceedings.neurips.cc/paper/2002/hash/23c97e9cb93576e45d2feaf00d0e8502-Abstract.html,"Many control problems take place in continuous state-action spaces, e.g., as in manipulator robotics, where the control objective is of- ten deﬂned as ﬂnding a desired trajectory that reaches a particular goal state. While reinforcement learning oﬁers a theoretical frame- work to learn such control policies from scratch, its applicability to higher dimensional continuous state-action spaces remains rather limited to date. Instead of learning from scratch, in this paper we suggest to learn a desired complex control policy by transforming an existing simple canonical control policy. For this purpose, we represent canonical policies in terms of diﬁerential equations with well-deﬂned attractor properties. By nonlinearly transforming the canonical attractor dynamics using techniques from nonparametric regression, almost arbitrary new nonlinear policies can be gener- ated without losing the stability properties of the canonical sys- tem. We demonstrate our techniques in the context of learning a set of movement skills for a humanoid robot from demonstrations of a human teacher. Policies are acquired rapidly, and, due to the properties of well formulated diﬁerential equations, can be re-used and modiﬂed on-line under dynamic changes of the environment. The linear parameterization of nonparametric regression moreover lends itself to recognize and classify previously learned movement skills. Evaluations in simulations and on an actual 30 degree-of- freedom humanoid robot exemplify the feasibility and robustness of our approach.",,Learning Attractor Landscapes for Learning Motor Primitives,-,,,,NO,,,,,NO,,
S1757,1,Backward,journalArticle,2018,"Levine, Sergey; Pastor, Peter; Krizhevsky, Alex; Ibarz, Julian; Quillen, Deirdre",The International Journal of Robotics Research,10.1177/0278364917710318,https://doi.org/10.1177/0278364917710318,"We describe a learning-based approach to hand-eye coordination for robotic grasping from monocular images. To learn hand-eye coordination for grasping, we trained a large convolutional neural network to predict the probability that task-space motion of the gripper will result in successful grasps, using only monocular camera images independent of camera calibration or the current robot pose. This requires the network to observe the spatial relationship between the gripper and objects in the scene, thus learning hand-eye coordination. We then use this network to servo the gripper in real time to achieve successful grasps. We describe two large-scale experiments that we conducted on two separate robotic platforms. In the first experiment, about 800,000 grasp attempts were collected over the course of two months, using between 6 and 14 robotic manipulators at any given time, with differences in camera placement and gripper wear and tear. In the second experiment, we used a different robotic platform and 8 robots to collect a dataset consisting of over 900,000 grasp attempts. The second robotic platform was used to test transfer between robots, and the degree to which data from a different set of robots can be used to aid learning. Our experimental results demonstrate that our approach achieves effective real-time control, can successfully grasp novel objects, and corrects mistakes by continuous servoing. Our transfer experiment also illustrates that data from different robots can be combined to learn more reliable and effective grasping.",deep learning; neural networks; Robotics,Learning hand-eye coordination for robotic grasping with deep learning and large-scale data collection,-,NO,,,YES,,,,,NO,,
S1758,1,Backward,conferencePaper,2017,"Gandhi, Dhiraj; Pinto, Lerrel; Gupta, Abhinav",2017 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS.2017.8206247,,"How do you learn to navigate an Unmanned Aerial Vehicle (UAV) and avoid obstacles? One approach is to use a small dataset collected by human experts: however, high capacity learning algorithms tend to overfit when trained with little data. An alternative is to use simulation. But the gap between simulation and real world remains large especially for perception problems. The reason most research avoids using large-scale real data is the fear of crashes! In this paper, we propose to bite the bullet and collect a dataset of crashes itself! We build a drone whose sole purpose is to crash into objects: it samples naive trajectories and crashes into random objects. We crash our drone 11,500 times to create one of the biggest UAV crash dataset. This dataset captures the different ways in which a UAV can crash. We use all this negative flying data in conjunction with positive data sampled from the same trajectories to learn a simple yet powerful policy for UAV navigation. We show that this simple self-supervised model is quite effective in navigating the UAV even in extremely cluttered environments with dynamic obstacles including humans. For supplementary video see:.",Cameras; Computer crashes; Data collection; Drones; Navigation; Trajectory,Learning to fly by crashing,-,NO,,,YES,,,,,NO,,
S1759,1,Backward,journalArticle,,"Trevelyan, James",,,,"Remote access laboratories using internet communications have been available in prototype form since the mid 1990's (Goldberg 1999, Taylor and Trevelyan 1995, Henry 2003). We started our on-line laboratory facilities at the University of Western Australia in October 1994 with the commissioning of Australia's Telerobot on the Web.",,Lessons learned from 10 years experience with remote laboratories,-,,,,NO,,,,,NO,,
S1760,1,Backward,book,2009,"Yan, Xin; Su, Xiaogang",,,,"This volume presents in detail the fundamental theories of linear regression analysis and diagnosis, as well as the relevant statistical computing techniques so that readers are able to actually model the data using the methods and techniques described in the book. It covers the fundamental theories in linear regression analysis and is extremely useful for future research in this area. The examples of regression analysis using the Statistical Application System (SAS) are also included. This book is suitable for graduate students who are either majoring in statistics/biostatistics or using linear regression analysis substantially in their subject fields.",Computers / Desktop Applications / Personal Finance Applications; Mathematics / Applied; Mathematics / Probability & Statistics / General,Linear Regression Analysis: Theory and Computing,NO,,,,YES,,,,,NO,,
S1761,1,Backward,conferencePaper,2014,"Fabry, Johan; Campusano, Miguel",Advances in Artificial Intelligence -- IBERAMIA 2014,10.1007/978-3-319-12027-0_36,,"Typically, development of robot behavior entails writing the code, deploying it on a simulator or robot and running it for testing. If this feedback reveals errors, the programmer mentally needs to map the error in behavior back to the source code that caused it before being able to fix it. This process suffers from a large cognitive distance between the code and the resulting behavior, which slows down development and can make experimentation with different behaviors prohibitively expensive. In contrast, Live Programming tightens the feedback loop, minimizing cognitive distance. As a result, programmers benefit from an immediate connection with the program that they are making thanks to an immediate, ‘live’ feedback on program behavior. This allows for extremely rapid creation, or variation, of robot behavior and for dramatically increased debugging speed. To enable such Live Robot Programming, in this article we propose a language that provides for live programming of nested state machines and integrates in the Robot Operating System (ROS). We detail the language, named LRP, illustrate how it can be used to rapidly implement a behavior on a running robot and discuss the key points of the language that enables its liveness.",Active Machine; Concrete Syntax; Robot Behavior; State Machine; State Machine Interpreter,Live Robot Programming,-,NO,,,YES,,,,,NO,,
S1762,1,Backward,conferencePaper,2016,"Chung, Timothy H.; Clement, Michael R.; Day, Michael A.; Jones, Kevin D.; Davis, Duane; Jones, Marianna",2016 IEEE International Conference on Robotics and Automation (ICRA),10.1109/ICRA.2016.7487257,,"In this paper, we present extensive advances in live-fly field experimentation capabilities of large numbers of fixed-wing aerial robots, and highlight both the enabling technologies as well as the challenges addressed in such largescale flight operations. We showcase results from recent field tests, including the autonomous launch, flight, and landing of 50 UAVs, which illuminate numerous operational lessons learned and generate rich multi-UAV datasets. We detail the design and open architecture of the testbed, which intentionally leverages low-cost and open-source components, aimed at promoting continued advances and alignment of multi-robot systems research and practice.",Aerospace control; Aerospace electronics; Aircraft; Load modeling; Payloads; Robot kinematics,"Live-fly, large-scale field experimentation for large numbers of fixed-wing UAVs",-,NO,,,YES,,,,,NO,,
S1763,1,Backward,conferencePaper,2009,"Gruninger, Rolf; Kus, Elzbieta; Huppi, Richard",2009 IEEE International Conference on Mechatronics,10.1109/ICMECH.2009.4957143,,"In this paper the technological scenario for the industrial implementation of flexible and adaptive robotic systems, as developed in the EU-project ARFLEX, is described. Based on a literature study and two questionnaires conducted among the European enterprises, the market demands of such robotic systems are analyzed and their most promising applications are identified. The market studies show that small batch size production and frequent production line changes are common in the industrial production and that therefore flexible and adaptive robotic systems have a big potential on the future industrial market. Among others, assembling operations were identified as promising key applications for such systems.",adaptive robots; flexible manufacturing systems; Flexible manufacturing systems; industrial robots; intelligent sensors; Robots,Market study on adaptive robots for flexible manufacturing systems,-,NO,,,YES,,,,,NO,,
S1764,1,Backward,conferencePaper,2009,"Gouaillier, David; Hugel, Vincent; Blazevic, Pierre; Kilner, Chris; Monceaux, Jerome; Lafourcade, Pascal; Marnier, Brice; Serre, Julien; Maisonnier, Bruno",2009 IEEE International Conference on Robotics and Automation,10.1109/ROBOT.2009.5152516,,"This article presents the mechatronic design of the autonomous humanoid robot called NAO that is built by the French company Aldebaran-Robotics. With its height of 0.57 m and its weight about 4.5 kg, this innovative robot is lightweight and compact. It distinguishes itself from existing humanoids thanks to its pelvis kinematics design, its proprietary actuation system based on brush DC motors, its electronic, computer and distributed software architectures. This robot has been designed to be affordable without sacrificing quality and performance. It is an open and easy-to-handle platform. The comprehensive and functional design is one of the reasons that helped select NAO to replace the AIBO quadrupeds in the 2008 RoboCup standard league.",Brushes; DC motors; Distributed computing; Guidelines; Humanoid robots; Infrared sensors; Kinematics; Mechatronics; Pelvis; Robotics and automation,Mechatronic design of NAO humanoid,-,NO,,,YES,,,,,NO,,
S1765,1,Backward,conferencePaper,2009,"Adi, Wael",2009 Symposium on Bio-inspired Learning and Intelligent Systems for Security,10.1109/BLISS.2009.30,,"Robot security is becoming more and more a serious issue for many modern applications. Robot security matters are still not intensively addressed in the published literature. The goal of this paper is to explore possible identification and security mechanisms which fit to robot technologies and their operating environment. To secure transactions between robots deployed in open service, robots need first to be securely identified ¿as persons¿ with unique provable identities. Robots rolling from a production line are assumed to be equal objects; therefore the first necessary action is to personalize robots and give them unclonable identities. A sort of ¿electronic mutation¿ technology was specified and proposed to create a non-reversible and non-repeatable robot identity, which is at the same time securely provable [6]. The identity exhibits properties similar to those of human DNA. The resulting clone-resistant or (unclonable) identity is adapted and proposed to be embedded in a robot environment. The goal is also to diffuse the identity traces possibly into all robot activities similarly as the human DNA do throughout the whole body of a biological creature. The identity proposed is made traceable through cryptographic signatures linked to relevant robot mechanical and electronic activities as a step towards ¿mechatronic security¿. The work is also aiming to stimulate discussions on robot security issues or in general the question of ¿mechatronic security¿.",Aging; Authentication; clone-resistant physical entities; Cryptography; DNA; Humans; Identification Protocols; Intelligent robots; Mechatronic Security; Mechatronics; Robot Security; Robot sensing systems; Robustness; Security,Mechatronic Security and Robot Authentication,-,NO,,,YES,,,,,NO,,
S1766,1,Backward,conferencePaper,2014,"Toris, Russell; Shue, Craig; Chernova, Sonia",2014 IEEE International Conference on Technologies for Practical Robot Applications (TePRA),10.1109/TePRA.2014.6869141,,"Recent work in the robotics community has lead to the emergence of cloud-based solutions and remote clients. Such work allows robots to effectively distribute complex computations across multiple machines, and allows remote clients, both human and automata, to control robots across the globe. With the increasing use and importance of such ideas, it is crucial not to overlook the critical issue of security in these systems. In this work, we discuss the use of web tokens for achieving secure authentication for remote, non-native clients in the widely-used Robot Operating System (ROS) middleware. Written in a system-independent manner, we demonstrate its use with an application for securing clients within the popular rosbridge protocol.",Authentication; Libraries; Protocols; Robots; Servers; Virtual private networks,Message authentication codes for secure remote non-native client connections to ROS enabled robots,-,,NO,,YES,,,,,NO,,
S1767,1,Backward,conferencePaper,2008,"Mohamed, Nader; Al-Jaroodi, Jameela; Jawhar, Imad","2008 IEEE Conference on Robotics, Automation and Mechatronics",10.1109/RAMECH.2008.4681485,,"The field of robotics relies heavily on various technologies such as mechatronics, computing systems, and wireless communication. Given the fast growing technological progress in these fields, robots can offer a wide range of applications. However real world integration and application development for such a distributed system composed of many robotic modules and networked robotic devices is very difficult. Therefore, middleware services provide a novel approach offering many possibilities and drastically enhancing the application development for robots. This paper surveys the current state of middleware approaches in this domain. It discusses middleware challenges in these systems and presents some representative middleware solutions specifically designed for robots. The selection of the studied methods tries to cover most of the middleware platforms, objectives and approaches that have been proposed by researchers in this field.",Mechatronics; Medical robotics; middleware; Middleware; Mobile robots; Orbital robotics; Robot sensing systems; robot system integration; Robot vision systems; robots; Sensor arrays; Space technology; Wireless communication,Middleware for Robotics: A Survey,-,NO,,,YES,,NO,,,NO,,
S1768,1,Backward,journalArticle,2002,"Utz, H.; Sablatnog, S.; Enderle, S.; Kraetzschmar, G.",IEEE Transactions on Robotics and Automation,10.1109/TRA.2002.802930,,"Developing software for mobile robot applications is a tedious and error-prone task. Modern mobile robot systems are distributed systems, and their designs exhibit large heterogeneity in terms of hardware, operating systems, communications protocols, and programming languages. Vendor-provided programming environments have not kept pace with recent developments in software technology. Also, standardized modules for certain robot functionalities are beginning to emerge. Furthermore, the seamless integration of mobile robot applications into enterprise information processing systems is mostly an open problem. We suggest the construction and use of object-oriented robot middleware to make the development of mobile robot applications easier and faster, and to foster portability and maintainability of robot software. With Miro, we present such a middleware, which meets the aforementioned requirements and has been ported to three different mobile platforms with little effort. Miro also provides generic abstract services like localization or behavior engines, which can be applied on different robot platforms with virtually no modifications.",Application software; Computer languages; Hardware; Middleware; Mobile communication; Mobile robots; Operating systems; Programming environments; Protocols; Software maintenance,Miro - middleware for mobile robot applications,-,NO,,,NO,,NO,,,NO,,
S1769,1,Backward,conferencePaper,2012,"Ciocarlie, Matei; Hsiao, Kaijen; Leeper, Adam; Gossow, David",2012 IEEE/RSJ International Conference on Intelligent Robots and Systems,10.1109/IROS.2012.6385907,,"We present a mobile manipulation platform operated by a motor-impaired person using input from a head-tracker, single-button mouse. The platform is used to perform varied and unscripted manipulation tasks in a real home, combining navigation, perception and manipulation. The operator can make use of a wide range of interaction methods and tools, from direct tele-operation of the gripper or mobile base to autonomous sub-modules performing collision-free base navigation or arm motion planning. We describe the complete set of tools that enable the execution of complex tasks, and share the lessons learned from testing them in a real user's home. In the context of grasping, we show how the use of autonomous sub-modules improves performance in complex, cluttered environments, and compare the results to those obtained by novice, able-bodied users operating the same system.",Cameras; Collision avoidance; Grasping; Grippers; Mobile communication; Navigation; Robots,Mobile manipulation through an assistive home robot,-,NO,,,YES,,,,,NO,,
S1770,1,Backward,journalArticle,2014,"DiGiampaolo, Emidio; Martinelli, Francesco",IEEE Transactions on Industrial Electronics,10.1109/TIE.2013.2248333,,"This paper presents a global localization system for an indoor autonomous vehicle equipped with odometry sensors and a radio-frequency identification (RFID) reader to interrogate tags located on the ceiling of the environment. The RFID reader can measure the phase of the signals coming from responding tags. This phase has non-univocal dependence on the distance robot tag, but in the considered frequency, it is really sensitive to a change in the position of the robot. For this reason, a multihypothesis Kalman filtering approach provides a really satisfactory performance even in the case that a very small density of tags is used: In the experimental tests, an average position estimation error of about 4 cm is achieved using only two tags for an area of about 5 m2.",Accuracy; Antenna measurements; Antennas; Continuous-wave radar; global localization; Mobile robots; multihypothesis Kalman filtering; Phase measurement; Radiofrequency identification; UHF RFID,Mobile Robot Localization Using the Phase of Passive UHF RFID Signals,-,NO,,,YES,,,,,NO,,
S1771,1,Backward,journalArticle,2015,"Bergagård, Patrik; Falkman, Petter; Fabian, Martin",IFAC-PapersOnLine,10.1016/j.ifacol.2015.06.219,https://www.sciencedirect.com/science/article/pii/S2405896315004589,"The production in an automated manufacturing system will not always progress as intended. A wide variety of possible faults may cause errors that lead to an unsynchronization between the control system and the physical system that consequently lead to production stoppages. The common industrial practice to deal with such non-intended progress is to extend the control system with tailor- made solutions to account for errors. This extension is both time consuming and there is no guarantee that all relevant errors are handled. This paper models the control system to enable automatic derivation of restart states applied to an existing station for automatic mounting of windscreens onto car bodies. These restart states are states in the control system where it is correct to resynchronize the control and the physical systems so that the automated production can be resumed. This aids the preparation phase by letting the developer focus on modeling the nominal production and on specifying (un-)desired behavior during the restarted production, and then automatically retrieve the restart states for all control states. The online restart process is then reduced to a semi-automatic process where an operator can be supported with instructions for how to correctly resynchronize the control and the physical systems in a selected restart state.",Error recovery; Restart; Robot cell; Unforeseen errors,Modeling and automatic calculation of restart states for an industrial windscreen mounting stationÕ,-,NO,,,YES,,,,,NO,,
S1772,1,Backward,conferencePaper,2012,"Todorov, Emanuel; Erez, Tom; Tassa, Yuval",2012 IEEE/RSJ International Conference on Intelligent Robots and Systems,10.1109/IROS.2012.6386109,,"We describe a new physics engine tailored to model-based control. Multi-joint dynamics are represented in generalized coordinates and computed via recursive algorithms. Contact responses are computed via efficient new algorithms we have developed, based on the modern velocity-stepping approach which avoids the difficulties with spring-dampers. Models are specified using either a high-level C++ API or an intuitive XML file format. A built-in compiler transforms the user model into an optimized data structure used for runtime computation. The engine can compute both forward and inverse dynamics. The latter are well-defined even in the presence of contacts and equality constraints. The model can include tendon wrapping as well as actuator activation states (e.g. pneumatic cylinders or muscles). To facilitate optimal control applications and in particular sampling and finite differencing, the dynamics can be evaluated for different states and controls in parallel. Around 400,000 dynamics evaluations per second are possible on a 12-core machine, for a 3D homanoid with 18 dofs and 6 active contacts. We have already used the engine in a number of control applications. It will soon be made publicly available.",Computational modeling; Dynamics; Engines; Heuristic algorithms; Mathematical model; Optimization,MuJoCo: A physics engine for model-based control,-,NO,,,YES,,NO,,,NO,,
S1773,1,Backward,conferencePaper,2013,"Borrajo, Daniel",Proceedings of the 2013 international conference on Autonomous agents and multi-agent systems,,,"Generating plans for a single agent has been shown to be a difficult task. If we generalize to a multi-agent setting, the problem becomes exponentially harder in general. The centralized approach where a plan is jointly generated for all agents is only possible in some applications when agents do not have private goals, actions or states. We describe in this paper an alternative approach, MAPR (Multi-Agent Planning by plan Reuse), that considers both the agents private and public information. We have been inspired by iterative Multi-Agent Planning (MAP) techniques as the one presented in [1]. MAPR first assigns a subset of public goals to each agent, while each agent might have a set of private goals also. Then, MAPR calls the first agent to provide a solution (plan) that takes into account its private and public goals. MAPR iteratively calls each agent with the solutions provided by previous agents. Each agent receives its own goals plus the goals of the previous agents. Thus, each agent solves its problem, but taking into account the previous agents solutions. Since previous solutions might consider private data, all private information from an agent is obfuscated for the next ones. Since each agent receives the plan from the previous agent that implicitly considers the solutions to all previous agents, instead of starting the search from scratch, it can also reuse the previous whole plan or only a subset of the actions. Experiments show that MAPR outperforms in several orders of magnitude state-of-the-art techniques in the tested domains.",automated planning; multi-agent planning,Multi-agent planning by plan reuse,-,NO,,,YES,,,,,NO,,
S1774,1,Backward,conferencePaper,2000,"Rekleitis, I.M.; Dudek, G.; Milios, E.E.",Proceedings 2000 ICRA. Millennium Conference. IEEE International Conference on Robotics and Automation. Symposia Proceedings (Cat. No.00CH37065),10.1109/ROBOT.2000.845150,,"This paper presents a new sensing modality and stratagem for multirobot exploration. The approach is based on using pairs of robots that observe each other's behavior, acting in concert to reduce odometry errors. We assume the robots can both directly sense nearby obstacles and see each other. This allows the robots to obtain a map of higher accuracy than would be possible with robots acting independently by reducing inaccuracies that occur over time from dead reckoning errors. Furthermore, by exploiting the ability of the robots to see each other, we can detect opaque obstacles in the environment independently of their surface reflectance properties. Two different algorithms, based on the size of the environment, are introduced with a complexity analysis, and experimental results in simulation and with real robots.",Collaboration; Computational complexity; Computer errors; Computer science; Dead reckoning; Navigation; Orbital robotics; Reflectivity; Robot sensing systems; Robustness,Multi-robot collaboration for robust exploration,-,NO,,,NO,,,,,NO,,
S1775,1,Backward,conferencePaper,2018,"Florence, Peter R.; Carter, John; Ware, Jake; Tedrake, Russ",2018 IEEE International Conference on Robotics and Automation (ICRA),10.1109/ICRA.2018.8463195,,"We would like robots to be able to safely navigate at high speed, efficiently use local 3D information, and robustly plan motions that consider pose uncertainty of measurements in a local map structure. This is hard to do with previously existing mapping approaches, like occupancy grids, that are focused on incrementally fusing 3D data into a common world frame. In particular, both their fragile sensitivity to state estimation errors and computational cost can be limiting. We develop an alternative framework, NanoMap, which alleviates the need for global map fusion and enables a motion planner to efficiently query pose-uncertainty-aware local 3D geometric information. The key idea of NanoMap is to store a history of noisy relative pose transforms and search over a corresponding set of depth sensor measurements for the minimum-uncertainty view of a queried point in space. This approach affords a variety of capabilities not offered by traditional mapping techniques: (a) the pose uncertainty associated with 3D data can be incorporated in motion planning, (b) poses can be updated (i.e., from loop closures) with minimal computational effort, and (c) 3D data can be fused lazily for the purpose of planning. We provide an open-source implementation of NanoMap, and analyze its capabilities and computational efficiency in simulation experiments. Finally, we demonstrate in hardware its effectiveness for fast 3D obstacle avoidance onboard a quadrotor flying up to 10 m/s.",Collision avoidance; Current measurement; History; Planning; Robot sensing systems; Three-dimensional displays; Uncertainty,"NanoMap: Fast, Uncertainty-Aware Proximity Queries with Lazy Search Over Local 3D Data",-,NO,,,YES,,,,,NO,,
S1776,1,Backward,journalArticle,2000,"Ge, S.S.; Cui, Y.J.",IEEE Transactions on Robotics and Automation,10.1109/70.880813,,"The paper first describes the problem of goals unreachable with obstacles nearby when using potential field methods for mobile robot path planning. Then, new repulsive potential functions are presented by taking the relative distance between the robot and the goal into consideration, which ensures that the goal position is the global minimum of the total potential.",Control systems; Mathematical analysis; Mobile robots; Path planning; Robotics and automation; Safety; Two dimensional displays,New potential functions for mobile robot path planning,-,NO,,,NO,,,,,NO,,
S1777,1,Backward,conferencePaper,2008,"Balakirsky, Stephen; Madhavan, Raj; Scrapper, Chris",Proceedings of the 8th Workshop on Performance Metrics for Intelligent Systems,10.1145/1774674.1774707,https://doi.org/10.1145/1774674.1774707,"This paper provides an overview of the National Institute of Standards and Technology (NIST)/IEEE Virtual Manufacturing and Automation Competition (VMAC). Detailed information will be provided on the competition's objectives, history, and operation. In addition, the supporting software infrastructure will be discussed.",competition; manufacturing; simulation; USARSim,NIST/IEEE Virtual Manufacturing Automation Competition: from earliest beginnings to future directions,-,NO,,,YES,,,,,NO,,
S1778,1,Backward,webpage,,,,,https://www.andrewng.org/papers/icraoss09-ROS.pdf,,,Not found,NO,,,,NO,,,,,NO,,
S1779,1,Backward,webpage,,,,,http://repository.ntt.edu.vn/jspui/handle/298300331/3157,,,NTTU - Digital Library: Nmap Network Scanning: The Official Nmap Project Guide to Network Discovery and Security Scanning,NO,,,,NO,,,,,NO,,
S1780,1,Backward,conferencePaper,2003,"Pardo-Castellote, G.","23rd International Conference on Distributed Computing Systems Workshops, 2003. Proceedings.",10.1109/ICDCSW.2003.1203555,,"The OMG Data-Distribution Service (DDS) is an emerging specification for publish-subscribe data-distribution systems. The purpose of the specification is to provide a common application-level interface that clearly defines the data-distribution service. The specification describes the service using UML, thus providing a platform-independent model that can then be mapped into a variety of concrete platforms and programming languages. The OMG DDS attempts to unify the common practice of several existing implementations [2, 5] enumerating and providing formal definitions for the QoS (Quality of Service) settings that can be used to configure the service. This paper introduces the OMG DDS specification, describes the main aspects of the model, QoS settings, and gives examples of the communication scenarios it supports.",Application software; Computer languages; Concrete; Distributed computing; Middleware; Publish-subscribe; Quality of service; Real time systems; Technological innovation; Unified modeling language,OMG Data-Distribution Service: architectural overview,-,NO,,,NO,,NO,,,NO,,
S1781,1,Backward,conferencePaper,2005,"Ateniese, Giuseppe; de Medeiros, Breno",Security in Communication Networks,10.1007/978-3-540-30598-9_12,,"Chameleon signatures were introduced by Krawczyk and Rabin, being non-interactive signature schemes that provide non-transferability. However, that first construction employs a chameleon hash that suffers from a key exposure problem: The non-transferability property requires willingness of the recipient in consequentially exposing a secret key, and therefore invalidating all signatures issued to the same recipient’s public key. To address this key-revocation issue, and its attending problems of key redistribution, storage of state information, and greater need for interaction, an identity-based scheme was proposed in [1], while a fully key-exposure free construction, based on the elliptic curves with pairings, appeared later in [7].",chameleon hashing; chameleon signatures; collision-resistant hashing; Digital signatures; trapdoor commitments; undeniable signatures,On the Key Exposure Problem in Chameleon Hashes,-,NO,,,NO,,,,,NO,,
S1782,1,Backward,bookSection,2018,"Portugal, David; Santos, Miguel A.; Pereira, Samuel; Couceiro, Micael S.",Artificial Intelligence Safety and Security,,,"The increasing incidence of robots in our society is evident due to the recent advances in the areas of robotics and artificial intelligence. Naturally, this raises the concern of security. Robots that share the environment with humans, need to be intrinsically secure to avoid compromising human physical and data integrity. However, robot cybersecurity is not commonly considered a key area under focus by the research community, despite being vital in several application fields. This chapter discusses security concerns in ROS, the most adopted middleware for robotics, and presents, analyzes, and compares several existing initiatives for securing robot applications in ROS. Results demonstrate important breakthroughs within this domain, room for improvement in the design of robotic solutions regarding cybersecurity, and highlight the need to mature the industry security principles to avoid the penetration of insecure robots into the market.",,On the Security of Robotic Applications Using ROS,-,NO,,,YES,,,,,NO,,
S1783,1,Backward,journalArticle,,"Joye, Marc",,,,White-box cryptography techniques are aimed at protecting software implementations of cryptographic algorithms against key recovery. They are primarily used in DRM-like applications as a cost-eﬀective alternative to token-based protections. This paper discusses the relevance of white-box implementations in such contexts as a series of questions and answers.,,On White-Box Cryptography,-,NO,,,NO,,,,,NO,,
S1784,1,Backward,webpage,,,,,https://link.springer.com/chapter/10.1007/3-540-34518-3_9,,,"Ontologies, Meta-models, and the Model-Driven Paradigm | SpringerLink",NO,,,,NO,,,,,NO,,
S1785,1,Backward,conferencePaper,2009,"Nilsson, Anders; Muradore, Riccardo; Nilsson, Klas; Fiorini, Paolo",2009 International Conference on Advanced Robotics,,,"In this paper the problem of modeling and design by using an ontology-based methodology is addressed. Ontology is a pretty new concept in the robotics fields. However, developing an example we will show that important advantages can be obtained in terms of design and robustness. The crucial point will be the definition of compound tasks, devices, and skills to facilitate the reasoning on different levels of abstraction.",Artificial intelligence; Computer science; Knowledge management; Ontologies; Path planning; Robots; Robustness; Semantic Web; Standardization; Taxonomy,Ontology for robotics: A roadmap,-,NO,,,YES,,,,,NO,,
S1786,1,Backward,conferencePaper,2008,"Calisi, Daniele; Censi, Andrea; Iocchi, Luca; Nardi, Daniele",2008 IEEE/RSJ International Conference on Intelligent Robots and Systems,10.1109/IROS.2008.4651213,,"Intense efforts to define a common structure in robotic applications, both from a conceptual and from an implementation point of view, have been carried out in the last years and several frameworks have been realized for helping in developing robotic applications. However, due to the diversity of these applications, as well as of the research groups involved, a common framework is still far from being accepted. In this paper we focus on modularity and re-usability, as major features for robotic applications. We thus characterize existing frameworks for robot software development through the choices made on concurrent execution of modules and information sharing among them and we present OpenRDK, a modular framework focused on rapid development of distributed robotic systems. OpenRDK has been designed and developed with many years of experience following userspsila advice and has been successfully used for the development of many diverse applications with different kinds of robots. After such an extensive test, OpenRDK is now an open source project.",Educational robots; Humans; Mobile robots; Robot sensing systems; Robots; Service robots; Software,OpenRDK: A modular framework for robotic software development,-,NO,,,YES,,,,,NO,,
S1787,1,Backward,conferencePaper,2013,"Kakehashi, Shun; Motoyoshi, Tatsuo; Koyanagi, Kenfichi; Ohshima, Toru; Kawakami, Hiroshi",2013 Conference on Technologies and Applications of Artificial Intelligence,10.1109/TAAI.2013.65,,"We developed P-CUBE, which is an education tool for programming mobile robots, and confirmed the system operation. Elementary school and junior high school students have recently begun to learn programming using PCs. Students who are taught how to create programs are often required to use an interface of a personal computer. This method keeps visually impaired and younger children from learning programming. Furthermore, the cost associated with PCs is often prohibitive. In an attempt to address these problems, we have developed P-CUBE, which is a new programming education tool. P-CUBE consists of cubic blocks and a program mat. The user creates a program by laying out surface gap blocks on the program mat based on the structure of the algorithm. RFID readers are arranged in the programming mat, and the information of the RFID tags in the blocks is read in order to specify the location of each block. P-CUBE is considered to be nearly indestructible because of its simple structure and is expected to be used as an educational toy for students.",algorithm education; block interface; Educational institutions; Mobile robots; Programming profession; programming tool; Prototypes; Software; tangible,P-CUBE: Block Type Programming Tool for Visual Impairments,-,NO,,,YES,,,,,NO,,
S1788,1,Backward,conferencePaper,2013,"Ok, Kyel; Ansari, Sameer; Gallagher, Billy; Sica, William; Dellaert, Frank; Stilman, Mike",2013 IEEE International Conference on Robotics and Automation,10.1109/ICRA.2013.6631230,,"In this paper, a two-level path planning algorithm that deals with map uncertainty is proposed. The higher level planner uses modified generalized Voronoi diagrams to guarantee finding a connected path from the start to the goal if a collision-free path exists. The lower level planner considers uncertainty of the observed obstacles in the environment and assigns repulsive forces based on their distance to the robot and their positional uncertainty. The attractive forces from the Voronoi nodes and the repulsive forces from the uncertainty-biased potential fields form a hybrid planner we call Voronoi Uncertainty Fields (VUF). The proposed planner has two strong properties: (1) bias against uncertain obstacles, and (2) completeness. We analytically prove the properties and run simulations to validate our method in a forest-like environment.",Current measurement; Navigation; Planning; Simultaneous localization and mapping; Uncertainty,Path planning with uncertainty: Voronoi Uncertainty Fields,-,NO,,,YES,,,,,NO,,
S1789,1,Backward,webpage,,,,,https://ieeexplore.ieee.org/abstract/document/1249235/,"In this paper we describe our open-source robot control software, the Carnegie Mellon Navigation (CARMEN) Toolkit. The ultimate goals of CARMEN are to lower the barrier to implementing new algorithms on real and simulated robots and to facilitate sharing of research and algorithms between different institutions. In order for CARMEN to be as inclusive of various research approaches as possible, we have chosen not to adopt strict software standards, but to instead focus on good design practices. This paper outlines the lessons we have learned in developing these practices.",,Perspectives on standardization in mobile robot programming: the Carnegie Mellon Navigation (CARMEN) Toolkit,NO,,,,NO,,,,,NO,,
S1790,1,Backward,journalArticle,2002,"Cassandras, C.G.; Wardi, Y.; Melamed, B.; Sun, Gang; Panayiotou, C.G.",IEEE Transactions on Automatic Control,10.1109/TAC.2002.800739,,"Uses stochastic fluid models (SFMs) for control and optimization (rather than performance analysis) of communication networks, focusing on problems of buffer control. We derive gradient estimators for packet loss and workload related performance metrics with respect to threshold parameters. These estimators are shown to be unbiased and directly observable from a sample path without any knowledge of underlying stochastic characteristics, including traffic and processing rates (i.e., they are nonparametric). This renders them computable in online environments and easily implementable for network management and control. We further demonstrate their use in buffer control problems where our SFM-based estimators are evaluated based on data from an actual system.",Communication networks; Communication system control; Communication system traffic control; Computer network management; Computer networks; Environmental management; Measurement; Parameter estimation; Performance analysis; Stochastic processes,Perturbation analysis for online control and optimization of stochastic fluid models,-,NO,,,NO,,,,,NO,,
S1791,1,Backward,book,2012,"Ho, Yu-Chi (Larry); Cao, Xi-Ren",,,,"Dynamic Systems (DEDS) are almost endless: military C31 Ilogistic systems, the emergency ward of a metropolitan hospital, back offices of large insurance and brokerage fums, service and spare part operations of multinational fums . . . . the point is the pervasive nature of such systems in the daily life of human beings. Yet DEDS is a relatively new phenomenon in dynamic systems studies. From the days of Galileo to Newton to quantum mechanics and cosmology of the present, dynamic systems in nature are primarily differential equations based and time driven. A large literature and endless success stories have been built up on such Continuous Variable Dynamic Systems (CVDS). It is, however, equally clear that DEDS are fundamentally different from CVDS. They are event driven, asynchronous, mostly man-made and only became significant during the past generation. Increasingly, however, it can be argued that in the modem world our lives are being impacted by and dependent upon the efficient operations of such DEDS. Yet compared to the successful paradigm of differential equations for CVDS the mathematical modelling of DEDS is in its infancy. Nor are there as many successful and established techniques for their analysis and synthesis. The purpose of this series is to promote the study and understanding of the modelling, analysis, control, and management of DEDS. The idea of the series came from editing a special issue of the Proceedings of IEEE on DEOS during 1988.",Business & Economics / Operations Research; Technology & Engineering / Electrical,Perturbation Analysis of Discrete Event Dynamic Systems,NO,,,,YES,,,,,NO,,
S1792,1,Backward,conferencePaper,2001,"Gil, Yolanda; Ramachandran, Surya",Proceedings of the fifth international conference on Autonomous agents,10.1145/375735.376015,https://doi.org/10.1145/375735.376015,"PHOSPHORUS is an agent matchmaking service that exploits domain ontologies, description logic, and a highly declarative language to reason about task-related agent capabilities. PHOSPHORUS uses the EXPECT goal language to represent the tasks that agents are capable of accomplishing, as well as requests to locate agents with a required capability. PHOSPHORUS supports matching through subsumption, reverse subsumption, and several kinds of goal reformulation.",,PHOSPHORUS: a task-based agent matchmaker,-,NO,,,NO,,,,,NO,,
S1793,1,Backward,conferencePaper,1991,"Koren, Y.; Borenstein, J.",1991 IEEE International Conference on Robotics and Automation Proceedings,10.1109/ROBOT.1991.131810,,"Based on a rigorous mathematical analysis, the authors present a systematic overview and a critical discussion of the inherent problems of potential field methods (PFMs). The authors previously (1989) developed a PFM called the virtual force field (VFF) method. Much insight has been gained into the strengths and weaknesses of this method. Four distinct drawbacks with PFMs are identified. Because of these drawbacks, the authors abandoned potential field methods and developed a new method for fast obstacle avoidance. This method, called the vector field histogram method, produces smooth, nonoscillatory motion, while sampling time and hardware are identical to those used in the VFF method.<>",Differential equations; Force sensors; Heart; Histograms; Manipulators; Mechanical engineering; Mobile robots; Navigation; Robot kinematics; Vehicles,Potential field methods and their inherent limitations for mobile robot navigation,-,NO,,,NO,,,,,NO,,
S1794,1,Backward,book,2008,"Mangard, Stefan; Oswald, Elisabeth; Popp, Thomas",,,,"Power analysis attacks allow the extraction of secret information from smart cards. Smart cards are used in many applications including banking, mobile communications, pay TV, and electronic signatures. In all these applications, the security of the smart cards is of crucial importance.  Power Analysis Attacks: Revealing the Secrets of Smart Cards is the first comprehensive treatment of power analysis attacks and countermeasures. Based on the principle that the only way to defend against power analysis attacks is to understand them, this book explains how power analysis attacks work. Using many examples, it discusses simple and differential power analysis as well as advanced techniques like template attacks. Furthermore, this volume provides an extensive discussion of countermeasures like shuffling, masking, and DPA-resistant logic styles.  By analyzing the pros and cons of the different countermeasures, Power Analysis Attacks: Revealing the Secrets of Smart Cards allows practitioners to decide how to protect smart cards. This book also provides valuable information for advanced-level students, and researchers working in information security.",Computers / Computer Engineering; Computers / Computer Science; Computers / Information Technology; Computers / Information Theory; Computers / Networking / Hardware; Computers / Programming / Algorithms; Computers / Security / General; Language Arts & Disciplines / Library & Information Science / General; Technology & Engineering / Telecommunications,Power Analysis Attacks: Revealing the Secrets of Smart Cards,NO,,,,YES,,,,,NO,,
S1795,1,Backward,journalArticle,2009,"Nguyen, Hai; Deyle, Travis; Reynolds, Matt S.; Kemp, Charles C.",,,https://smartech.gatech.edu/handle/1853/37383,"For many promising application areas, autonomous mobile manipulators do not yet exhibit sufficiently robust performance. We propose the use of tags applied to task-relevant locations in human environments in order to help autonomous mobile manipulators physically interact with the location, perceive the location, and understand the location’s semantics. We call these tags physical, perceptual and semantic tags (PPS-tags). We present three examples of PPS-tags, each of which combines compliant and colorful material with a UHF RFID tag. The RFID tag provides a unique identifier that indexes into a semantic database that holds information such as the following: what actions can be performed at the location, how can these actions be performed, and what state changes should be observed upon task success? We also present performance results for our robot operating on a PPS-tagged light switch, rocker light switch, lamp, drawer, and trash can. We tested the robot performing the available actions from 4 distinct locations with each of these 5 tagged devices. For the light switch, rocker light switch, lamp, and trash can, the robot succeeded in all trials (24/24). The robot failed to open the drawer when starting from an oblique angle, and thus succeeded in 6 out of 8 trials. We also tested the ability of the robot to detect failure in unusual circumstances, such as the lamp being unplugged and the drawer being stuck.",,"PPS-Tags: Physical, Perceptual and Semantic Tags for Autonomous Mobile Manipulation",-,NO,,,YES,,,,,NO,,
S1796,1,Backward,conferencePaper,2012,"Pitzer, Benjamin; Osentoski, Sarah; Jay, Graylin; Crick, Christopher; Jenkins, Odest Chadwicke",2012 IEEE International Conference on Robotics and Automation,10.1109/ICRA.2012.6224653,,"In this paper, we describe a remote lab system that allows remote groups to access a shared PR2. This lab will enable a larger and more diverse group of researchers to participate directly in state-of-the-art robotics research and will improve the reproducibility and comparability of robotics experiments. We identify a set of requirements that apply to all web-based remote laboratories and focus on solutions to these requirements. Specifically, we present solutions to interface, control and design difficulties in the client and server-side software when implementing a remote laboratory architecture. The combination of shared physical hardware and shared middleware software allows for experiments that build upon and compare against results on the same platform and in the same environment for common tasks. We describe how researchers can interact with the PR2 and its environment remotely through a web interface, as well as develop similar interfaces to visualize and run experiments remotely.",Browsers; Internet; Middleware; Remote laboratories; Robot sensing systems; Streaming media,PR2 Remote Lab: An environment for remote development and experimentation,-,NO,,,YES,,,,,NO,,
S1797,1,Backward,conferencePaper,2003,"Gage, A.; Murphy, R.R.","33rd Annual Frontiers in Education, 2003. FIE 2003.",10.1109/FIE.2003.1264769,,"This paper describes the application of lego mindstorms and vision command kits as a cost- and time-effective means of reinforcing behavioral robotics principles to students of different disciplines with limited programming skills. As part of a course in robotics, senior undergraduate and first year graduate students in computer science, engineering, and psychology have worked in small groups building and programming robots to perform a variety of tasks, ultimately developing robots for a mock search and rescue operation. This paper discusses the pedagogical principles, the exercises, student reactions, shortcomings, and lessons learned. The laboratory exercises were used to teach students in two locations (Tampa, Florida and Reykjavik, Iceland) with positive student reviews. The laboratory manual is available to teachers by request, along with the instructor's guide to Introduction to AI robotics. Based on our experiences, we recommend their use.",Application software; Artificial intelligence; Computer science; Computer vision; Costs; Educational robots; Laboratories; Psychology; Robot programming; Robot vision systems,Principles and experiences in using legos to teach behavioral robotics,-,NO,,,NO,,,,,NO,,
S1798,1,Backward,journalArticle,1996,"Kavraki, L.E.; Svestka, P.; Latombe, J.-C.; Overmars, M.H.",IEEE Transactions on Robotics and Automation,10.1109/70.508439,,"A new motion planning method for robots in static workspaces is presented. This method proceeds in two phases: a learning phase and a query phase. In the learning phase, a probabilistic roadmap is constructed and stored as a graph whose nodes correspond to collision-free configurations and whose edges correspond to feasible paths between these configurations. These paths are computed using a simple and fast local planner. In the query phase, any given start and goal configurations of the robot are connected to two nodes of the roadmap; the roadmap is then searched for a path joining these two nodes. The method is general and easy to implement. It can be applied to virtually any type of holonomic robot. It requires selecting certain parameters (e.g., the duration of the learning phase) whose values depend on the scene, that is the robot and its workspace. But these values turn out to be relatively easy to choose, Increased efficiency can also be achieved by tailoring some components of the method (e.g., the local planner) to the considered robots. In this paper the method is applied to planar articulated robots with many degrees of freedom. Experimental results show that path planning can be done in a fraction of a second on a contemporary workstation (/spl ap/150 MIPS), after learning for relatively short periods of time (a few dozen seconds).",Computer science; Joining processes; Laboratories; Layout; Motion planning; Orbital robotics; Path planning; Robots; Workstations,Probabilistic roadmaps for path planning in high-dimensional configuration spaces,-,NO,,,NO,,NO,,,NO,,
S1799,1,Backward,book,2015,"Quigley, Morgan; Gerkey, Brian; Smart, William D.",,,,"Want to develop novel robot applications, but don’t know how to write a mapping or object-recognition system? You’re not alone, but you’re certainly not without help. By combining real-world examples with valuable knowledge from the Robot Operating System (ROS) community, this practical book provides a set of motivating recipes for solving specific robotics use cases.Ideal for enthusiasts, from students in robotics clubs to professional robotics scientists and engineers, each recipe describes a complete solution using ROS open source libraries and tools. You’ll learn how to complete tasks described in the recipes, as well as how to configure and recombine components for other tasks. If you’re familiar with Python, you’re ready to go.Learn fundamentals, including key ROS concepts, tools, and patternsProgram robots that perform an increasingly complex set of behaviors, using the powerful packages in ROSSee how to easily add perception and navigation abilities to your robotsIntegrate your own sensors, actuators, software libraries, and even a whole robot into the ROS ecosystemLearn tips and tricks for using ROS tools and community resources, debugging robot behavior, and using C++ in ROS",Computers / Computer Science; Computers / Languages / Python; Computers / Programming / Open Source; TECHNOLOGY & ENGINEERING / Engineering (General),Programming Robots with ROS: A Practical Introduction to the Robot Operating System,NO,,,,YES,,NO,,,NO,,
S1800,1,Backward,conferencePaper,2012,"Esteller-Curto, Roger; Cervera, Enric; del Pobil, Angel P.; Marin, Raul",2012 Sixth International Conference on Innovative Mobile and Internet Services in Ubiquitous Computing,10.1109/IMIS.2012.130,,"Middle wares such as Player and ROS are commonly used in network robotics applications in order to provide networking capabilities and other functionalities such as remote control, vision, and others. On the other hand, they introduce more complexity to the system and decrease the system performance. For that reason, the use of web services, remote procedure calls, or messaging can be considered as an alternative to minimize the system complexity and design a more specific architecture that works at a certain performance. In fact, using simple HTTP connections to a robot can be very adequate in education and training or benchmarking applications where the students and researchers must concentrate on the design of the system and have an easy way to interact with the robot. This article proposes a REST architecture used over a HTTP connection to control a robot and exchanging information using xml. That provide great advantages, using standard HTTP calls enhances the availability of the system, and increases the debug facilities. The REST architecture has some characteristics that sometimes can be seen as an advantage and other times as an inconvenient, it is very simple and stateless. As opposite to SOAP and other RPC servers, REST is based on resources, not on operations. The REST philosophy aims to access URIs through HTTP protocol using CRUD operations. On the other hand, there are functionalities not supported as the need of callbacks which can be solved with different approaches (polling or non-REST callbacks). The research is based on the experience of constructing a server to control a 6-degree of freedom FANUC robot, letting the robot be accessed by simple HTTP connections using a REST-based architecture.",architecture; Complexity theory; Computer architecture; Internet; Libraries; REST; robotics; Robots; Servers; Sockets; XML,Proposal of a REST-Based Architecture Server to Control a Robot,-,NO,,,YES,,,,,NO,,
S1801,1,Backward,journalArticle,2015,"Luo, Lingzhi; Chakraborty, Nilanjan; Sycara, Katia",IEEE Transactions on Robotics,10.1109/TRO.2014.2370831,,"In this paper, we present provably-good distributed task assignment algorithms for a heterogeneous multi-robot system, in which the tasks form disjoint groups and there are constraints on the number of tasks a robot can do (both within the overall mission and within each task group). Each robot obtains a payoff (or incurs a cost) for each task and the overall objective for task allocation is to maximize (minimize) the total payoff (cost) of the robots. In general, existing algorithms for task allocation either assume that tasks are independent or do not provide performance guarantee for the situation, in which task constraints exist. We present a distributed algorithm to provide an almost optimal solution for our problem. The key aspect of our distributed algorithm is that the overall objective is (almost) maximized by each robot maximizing its own objective iteratively (using a modified payoff function based on an auxiliary variable, called price of a task). Our distributed algorithm is polynomial in the number of tasks, as well as the number of robots.",Algorithm design and analysis; Auction algorithm; distributed algorithm; Distributed algorithms; Indexes; multi-robot task assignment; Nickel; Resource management; Robot kinematics; task allocation,Provably-Good Distributed Algorithm for Constrained Multi-Robot Task Assignment for Grouped Tasks,-,NO,,,YES,,,,,NO,,
S1802,1,Backward,conferencePaper,2015,"Previtali, Fabio; Iocchi, Luca",2015 IEEE International Conference on Multisensor Fusion and Integration for Intelligent Systems (MFI),10.1109/MFI.2015.7295794,,"The present work addresses the Distributed Multi-Agent Multi-Object Tracking problem where a team of robots has to perform a distributed position estimation of multiple moving objects. In complex scenarios, where mobile robots are involved, it is crucial to disseminate reliable beliefs in order to avoid the degradation of the global estimations. To this end, Distributed Particle Filters have been proven to be effective tools to model non-linear and dynamic processes in Multi-Robot Systems. We present therefore an asynchronous method for Distributed Particle Filtering based on Multi-Clustered Particle Filtering that uses a novel clustering technique to continuously keep track of a variable and unknown number of objects. A two-tiered architecture is proposed: a local estimation layer uses a Particle Filter to integrate local observations of multiple objects detected in the local frame, while a global estimation layer is used to perform a distributed estimation integrating information collected from the other robots. We carried out a quantitative evaluation demonstrating how our proposed approach has significantly better robustness to perception noise when using mobile sensors rather than fixed sensors.",Estimation; Mobile communication; Noise; Robot sensing systems; Robustness,PTracking: Distributed Multi-Agent Multi-Object Tracking through Multi-Clustered Particle Filtering,-,NO,,,YES,,,,,NO,,
S1803,1,Backward,journalArticle,2019,"Kowalczyk, Wojciech",Journal of Intelligent & Robotic Systems,10.1007/s10846-018-0879-4,https://doi.org/10.1007/s10846-018-0879-4,"This paper presents a kinematic controller for a differentially driven mobile robot. The controller is based on the navigation function (NF) concept that guarantees goal achievement from almost all initial states. Slow convergence in some cases is a significant disadvantage of this approach, especially when narrow passages exist in the environment and/or specific values of design parameters are set. The main reason of this phenomenon is that the velocity control strongly depends on the slope of the NF. The algorithm proposed in this paper is based on a method introduced in Urakubo (Nonlin. Dyn. 81(3): 1475–1487 2015), that extends NF to nonholonomic mobile platforms and allows stabilizing not only the position of robots but also their orientation. This algorithm is used as a reference in experimental performance comparison. In the new algorithm, the gradient of the NF is used to generate motion direction but the velocity is computed as a function of position and orientation errors. This approach results in much better state converge. Analysis of the convergence shows how the location of the eigenvalues of linearized system affects time of goal achievement. The paper describes saddle point detection and avoidance methodology and presents their experimental verification. It also shows what happens in practice if initial position is located exactly in the saddle point and its detection/avoidance procedures are turned off.",Mobile robot control; Navigation function; Obstacle avoidance; Saddle point detection; Set point control,Rapid Navigation Function Control for Two-Wheeled Mobile Robots,-,NO,,,YES,,,,,NO,,
S1804,1,Backward,journalArticle,2019,"Delgado, Raimarius; You, Bum-Jae; Choi, Byoung Wook",Journal of Systems and Software,10.1016/j.jss.2019.01.052,https://www.sciencedirect.com/science/article/pii/S0164121219300160,"This paper proposes a real-time (RT) control architecture based on Xenomai, an RT embedded Linux, to control a service robot along with non-real-time (NRT) robot operating system (ROS) packages. Most software, including device drivers and ROS, are developed to operate under the standard Linux kernel that does not provide RT guarantees. Standard Linux system calls in an RT context stimulates mode switching, resulting in non-deterministic responses and stability problems such as priority inversion and kernel panic. This paper overcomes such issues through a communication interface between RT and NRT tasks, termed cross-domain datagram protocol. The proposed architecture supports priority-based scheduling of multiple tasks while exposing an interface compatible with the original ROS packages. Moreover, it enables standard device driver operation inside RT tasks without developing RT device drivers that requires significant amount of development time. Feasibility is proven by implementation on a Raspberry Pi 3, a low-cost open embedded hardware platform, and conducted various experiments to analyze its performance and applied it to a service robot using ROS navigation packages. The results indicate that the proposed architecture can effectively provide an RT environment without stability issues when utilizing ROS packages and standard device drivers.",Cross-domain datagram protocol; Real-time control architecture; Robot operating system; Service mobile robots; Xenomai,Real-time control architecture based on Xenomai using ROS packages for a service robot,-,,,,YES,,NO,,,NO,,
S1805,1,Backward,journalArticle,,"Bastinos, Ana Sasa; Haase, Peter; Heppner, Georg; Zander, Stefan; Ahmed, Nadia",,,,,,ReApp Store – a semantic AppStore for applications in the robotics domain,-,NO,,,NO,,,,,NO,,
S1806,1,Backward,journalArticle,,"Compton, Michael; Neuhaus, Holger; Taylor, Kerry; Tran, Khoi-Nguyen",,,,"This paper discusses an OWL ontology for specifying sensors. The ontology is intended as the basis for the semantic representation of sensors and as the formal description for reasoning about sensors and observations. The paper describes the ontology, presents two example sensor descriptions and shows how standard reasoning and querying techniques can be used to perform tasks including classiﬁcation and composition. In conjunction with the technical material the trade-oﬀs required to express complex material in OWL is also discussed.",,Reasoning about Sensors and Compositions,-,,,,NO,,,,,NO,,
S1807,1,Backward,conferencePaper,2010,"Rich, Charles; Ponsler, Brett; Holroyd, Aaron; Sidner, Candace L.",2010 5th ACM/IEEE International Conference on Human-Robot Interaction (HRI),10.1109/HRI.2010.5453163,,"Based on a study of the engagement process between humans, we have developed and implemented an initial computational model for recognizing engagement between a human and a humanoid robot. Our model contains recognizers for four types of connection events involving gesture and speech: directed gaze, mutual facial gaze, conversational adjacency pairs and backchannels. To facilitate integrating and experimenting with our model in a broad range of robot architectures, we have packaged it as a node in the open-source Robot Operating System (ROS) framework. We have conducted a preliminary validation of our computational model and implementation in a simple human-robot pointing game.",Computational modeling; Computer architecture; Computer science; conversation; dialogue; Face recognition; Humanoid robots; Humans; nonverbal communication; Operating systems; Robot kinematics; Robot vision systems; Speech recognition,Recognizing engagement in human-robot interaction,-,NO,,,YES,,,,,NO,,
S1808,1,Backward,journalArticle,2008,"Peters, Jan; Schaal, Stefan",Neural Networks,10.1016/j.neunet.2008.02.003,https://www.sciencedirect.com/science/article/pii/S0893608008000701,"Autonomous learning is one of the hallmarks of human and animal behavior, and understanding the principles of learning will be crucial in order to achieve true autonomy in advanced machines like humanoid robots. In this paper, we examine learning of complex motor skills with human-like limbs. While supervised learning can offer useful tools for bootstrapping behavior, e.g., by learning from demonstration, it is only reinforcement learning that offers a general approach to the final trial-and-error improvement that is needed by each individual acquiring a skill. Neither neurobiological nor machine learning studies have, so far, offered compelling results on how reinforcement learning can be scaled to the high-dimensional continuous state and action spaces of humans or humanoids. Here, we combine two recent research developments on learning motor control in order to achieve this scaling. First, we interpret the idea of modular motor control by means of motor primitives as a suitable way to generate parameterized control policies for reinforcement learning. Second, we combine motor primitives with the theory of stochastic policy gradient learning, which currently seems to be the only feasible framework for reinforcement learning for humanoids. We evaluate different policy gradient methods with a focus on their applicability to parameterized motor primitives. We compare these algorithms in the context of motor primitive learning, and show that our most modern algorithm, the Episodic Natural Actor-Critic outperforms previous algorithms by at least an order of magnitude. We demonstrate the efficiency of this reinforcement learning method in the application of learning to hit a baseball with an anthropomorphic robot arm.",Motor primitives; Motor skills; Natural Actor-Critic; Natural gradients; Policy gradient methods; Reinforcement learning,Reinforcement learning of motor skills with policy gradients,-,NO,,,YES,,,,,NO,,
S1809,1,Backward,conferencePaper,2018,"Qin, Tong; Li, Peiliang; Shen, Shaojie",2018 IEEE International Conference on Robotics and Automation (ICRA),10.1109/ICRA.2018.8460780,,"The monocular visual-inertial system (VINS), which consists one camera and one low-cost inertial measurement unit (IMU), is a popular approach to achieve accurate 6-DOF state estimation. However, such locally accurate visual-inertial odometry is prone to drift and cannot provide absolute pose estimation. Leveraging history information to relocalize and correct drift has become a hot topic. In this paper, we propose a monocular visual-inertial SLAM system, which can relocalize camera and get the absolute pose in a previous-built map. Then 4-DOF pose graph optimization is performed to correct drifts and achieve global consistent. The 4-DOF contains x, y, z, and yaw angle, which is the actual drifted direction in the visual-inertial system. Furthermore, the proposed system can reuse a map by saving and loading it in an efficient way. Current map and previous map can be merged together by the global pose graph optimization. We validate the accuracy of our system on public datasets and compare against other state-of-the-art algorithms. We also evaluate the map merging ability of our system in the large-scale outdoor environment. The source code of map reuse is integrated into our public code, VINS-Monol11https://github.com/HKUST-Aerial-Robotics/VINS-Mono.",Cameras; Feature extraction; Microsoft Windows; Optimization; Real-time systems; Simultaneous localization and mapping; Visualization,"Relocalization, Global Optimization and Map Merging for Monocular Visual-Inertial SLAM",-,NO,,,YES,,,,,NO,,
S1810,1,Backward,journalArticle,2013,"Santana, I.; Ferre, M.; Izaguirre, E.; Aracil, R.; Hernandez, L.",IEEE Transactions on Industrial Informatics,10.1109/TII.2011.2182518,,"This paper describes the experiences using remote laboratories for education and research in the field of Control Engineering. The use of remote laboratories for education in subjects of control is increasingly becoming a resorted method by the universities in order to offer a flexible service in schedules with greater and better operation of available resources. Nevertheless, for research activities, remote laboratories are not widely used. The aim of this contribution is thereby to apply the experience of remote laboratories in research applications in order to share complex equipments among different researchers. Some experiments are carried out to demonstrate the effectiveness of using remote laboratories in research experiments related to robotic system. The results of the implementation of remote experimentations to control a 3-DOF parallel robot by using Distance Laboratory System (SLD) are exposed. The performance of the system is evaluated by the possibilities and functionality of the proposed remote laboratory platform.",Control systems; control systems research; Education; Instruments; parallel robot; Remote experiment; remote laboratories; Remote laboratories; Robots; Superluminescent diodes,Remote Laboratories for Education and Research Purposes in Automatic Control Systems,-,NO,,,YES,,,,,NO,,
S1811,1,Backward,conferencePaper,2012,"Djalic, Velibor; Maric, Petar; Kosic, Dino; Samuelsen, Dag; Thyberg, Brit; Graven, Olaf",2012 15th International Conference on Interactive Collaborative Learning (ICL),10.1109/ICL.2012.6402174,,"This paper discuss the significance of the remote laboratory as an example of an effective E-learning tool intended for distance education of undergraduate, graduate and PhD students in the field of robotics and automation. Also it offers employees working in Small and Medium Enterprises (SME) a tool for life-long learning. As a basis for a roundtable discussion, a complete system offering remote laboratory for robotics and automation, based on robotic vision is suggested. The roundtable aims to discuss both the hardware configuration as well as the pedagogical aspects related to the use of this remote laboratory.",Automation; Cameras; Educational robots; Learning; Remote laboratories; Remote laboratory; Remote vision; Robot vision systems; Robotics; Service robots,Remote laboratory for robotics and automation as a tool for remote access to learning content,-,NO,,,YES,,,,,NO,,
S1812,1,Backward,journalArticle,2012,"Osentoski, Sarah; Pitzer, Benjamin; Crick, Christopher; Jay, Graylin; Dong, Shuonan; Grollman, Daniel; Suay, Halit Bener; Jenkins, Odest Chadwicke",International Journal of Social Robotics,10.1007/s12369-012-0157-8,https://doi.org/10.1007/s12369-012-0157-8,"This paper documents the technology developed during the creation of the PR2 Remote Lab and the process of using it for shared development for Learning from Demonstration. Remote labs enable a larger and more diverse group of researchers to participate directly in state-of-the-art robotics research and will improve the reproducibility and comparability of robotics experiments. We present solutions to interface, control, and design difficulties in the client and server-side software when implementing a remote laboratory architecture. We describe how researchers can interact with the PR2 and its environment remotely through a web interface, as well as develop similar interfaces to visualize and run experiments remotely.",Remote laboratories; Robot interfaces; Robot learning from demonstration,Remote Robotic Laboratories for Learning from Demonstration,-,NO,,,YES,,,,,NO,,
S1813,1,Backward,journalArticle,2018,"Lauer, Michael; Amy, Matthieu; Fabre, Jean-Charles; Roy, Matthieu; Excoffon, William; Stoicescu, Miruna",Journal of Software: Evolution and Process,10.1002/smr.1917,https://onlinelibrary.wiley.com/doi/abs/10.1002/smr.1917,"Computer-based systems are now expected to evolve during their service life to cope with changes of various nature, ranging from evolution of user needs, eg, additional features requested by users, to system configuration changes, eg, modifications in available hardware resources. When considering resilient embedded systems that must comply with stringent dependability requirements, the challenge is even greater, as evolution must not impair dependability attributes. Maintaining dependability properties when facing changes is, indeed, the exact definition of resilient computing. In this paper, we consider the evolution of systems with respect to their dependability mechanisms and show how such mechanisms can evolve with the system evolution, in the case of ROS, the robot operating system. We provide a synthesis of the concepts required for resilient computing using a component-based approach. We particularly emphasize the process and the techniques needed to implement an adaptation layer for fault tolerance mechanisms. In the light of this analysis, we address the implementation of adaptive fault tolerance on ROS in 2 steps: Firstly, we provide an architecture to implement fault tolerance mechanisms in ROS, and secondly, we describe the actual adaptation of fault tolerance mechanisms in ROS. Beyond the implementation details given in the paper, we draw the lessons learned from this work and discuss the limits of this run-time support to implement adaptive fault tolerance features in embedded systems.",adaptive fault tolerance; resilience; ROS,Resilient computing on ROS using adaptive fault tolerance,-,,YES,YES,YES,,,NO,,NO,,
S1814,1,Backward,conferencePaper,2010,"Chen, Jian; Yan, Xiao; Chen, Haoyao; Sun, Dong",2010 IEEE/RSJ International Conference on Intelligent Robots and Systems,10.1109/IROS.2010.5650992,,"This paper investigates the multirobot task allocation (MRTA) problem for a group of heterogeneous mobile robots. The robots and tasks are characterized by resources as required by task execution. The robots are required to generate optimal solutions for the MRTA problem while forming coalitions to meet the resource constraints imposed by tasks. A leader-follower based coalition methodology is developed, with detailed discussions on leader selection, coalition forming and refinement algorithms. It is shown that the resource constrained task allocation problem can be well resolved by the proposed leader-follower coalition algorithms. Simulations performed on a mobile robot group demonstrate the effectiveness of the proposed approach.",Cameras; Lead; Resource management; Robot kinematics; Robot vision systems,Resource constrained multirobot task allocation with a leader-follower coalition method,-,NO,,,YES,,,,,NO,,
S1815,1,Backward,journalArticle,2013,"Cheminod, Manuel; Durante, Luca; Valenzano, Adriano",IEEE Transactions on Industrial Informatics,10.1109/TII.2012.2198666,,"Although awareness is constantly rising, that industrial computer networks (in a very broad sense) can be exposed to serious cyber threats, many people still think that the same countermeasures, developed to protect general-purpose computer networks, can be effectively adopted also in those situations where a physical system is managed/controlled through some distributed Information and Communication Technology (ICT) infrastructure. Unfortunately, this is not the case, as several examples of successful attacks carried out in the last decade, and more frequently in the very recent past, have dramatically shown. Experts in this area know very well that often the peculiarities of industrial networks prevent the adoption of classical approaches to their security and, in particular, of those popular solutions that are mainly based on a detect and patch philosophy. This paper is a contribution, from the security point of view, to the assessment of the current situation of a wide class of industrial distributed computing systems. In particular, the analysis presented in this paper takes into account the process of ensuring a satisfactory degree of security for a distributed industrial system, with respect to some key elements such as the system characteristics, the current state of the art of standardization and the adoption of suitable controls (countermeasures) that can help in lowering the security risks below a predefined, acceptable threshold.",Availability; Guidelines; Industrial networks; information security; network security; NIST; Process control; risk assessment; Risk management; Security; security analysis and monitoring; security countermeasures; Servers,Review of Security Issues in Industrial Networks,-,NO,,,YES,,,,,NO,,
S1816,1,Backward,conferencePaper,2001,"Naor, Dalit; Naor, Moni; Lotspiech, Jeff",Advances in Cryptology — CRYPTO 2001,10.1007/3-540-44647-8_3,,"We deal with the problem of a center sending a message to a group of users such that some subset of the users is considered revoked and should not be able to obtain the content of the message. We concentrate on the stateless receiver case, where the users do not (necessarily) update their state from session to session. We present a framework called the Subset-Cover framework, which abstracts a variety of revocation schemes including some previously known ones. We provide sufficient conditions that guarantees the security of a revocation algorithm in this class.",Broadcast Encryption; Copyright Protection; Revocation scheme; Tracing scheme,Revocation and Tracing Schemes for Stateless Receivers,-,,,,NO,,,,,NO,,
S1817,1,Backward,conferencePaper,2011,"Hauert, Sabine; Leven, Severin; Varga, Maja; Ruini, Fabio; Cangelosi, Angelo; Zufferey, Jean-Christophe; Floreano, Dario",2011 IEEE/RSJ International Conference on Intelligent Robots and Systems,10.1109/IROS.2011.6095129,,"The success of swarm behaviors often depends on the range at which robots can communicate and the speed at which they change their behavior. Challenges arise when the communication range is too small with respect to the dynamics of the robot, preventing interactions from lasting long enough to achieve coherent swarming. To alleviate this dependency, most swarm experiments done in laboratory environments rely on communication hardware that is relatively long range and wheeled robotic platforms that have omnidirectional motion. Instead, we focus on deploying a swarm of small fixed-wing flying robots. Such platforms have limited payload, resulting in the use of short-range communication hardware. Furthermore, they are required to maintain forward motion to avoid stalling and typically adopt low turn rates because of physical or energy constraints. The tradeoff between communication range and flight dynamics is exhaustively studied in simulation in the scope of Reynolds flocking and demonstrated with up to 10 robots in outdoor experiments.",Collision avoidance; Dynamic range; Dynamics; IEEE 802.11 Standards; Robot sensing systems; Vectors,Reynolds flocking in reality with fixed-wing robots: Communication range vs. maximum turning rate,-,NO,,,YES,,,,,NO,,
S1818,1,Backward,conferencePaper,1999,"Kitano, H.; Tadokoro, S.; Noda, I.; Matsubara, H.; Takahashi, T.; Shinjou, A.; Shimada, S.","IEEE SMC'99 Conference Proceedings. 1999 IEEE International Conference on Systems, Man, and Cybernetics (Cat. No.99CH37028)",10.1109/ICSMC.1999.816643,,"Disaster rescue is one of the most serious social issue which involves very large numbers of heterogeneous agents in the hostile environment. RoboCup-Rescue intends to promote research and development in this socially significant domain by creating a standard simulator and forum for researchers and practitioners. While the rescue domain intuitively appealing as large scale multi-agent domains, it has not yet given through analysis on its domain characteristics. In this paper, we present detailed analysis on the task domain and elucidate characteristics necessary for multi-agent systems for this domain.",Artificial intelligence; Autonomous agents; Cities and towns; Collaboration; Earthquakes; Large-scale systems; Modeling; Multiagent systems; Real time systems; Robot kinematics,RoboCup Rescue: search and rescue in large-scale disasters as a domain for autonomous agents research,-,,,,NO,,,,,NO,,
S1819,1,Backward,conferencePaper,2009,"Thomaz, Sarah; Aglaé, Akynara; Fernandes, Carla; Pitta, Renata; Azevedo, Samuel; Burlamaqui, Aquiles; Silva, Alzira; Gonçalves, Luiz M. G.",2009 39th IEEE Frontiers in Education Conference,10.1109/FIE.2009.5350439,,"In this paper, we reflect upon the employment of educational robotics as a tool to help the learning process inside elementary school. The primary objective is to introduce an environment for educational robotics, creating a basis for adoption of new educational methods. Based on such technological tools, we came out with a motivating and innovative instrument in the process of teaching and learning that can be used as a tool against digital exclusion. We show experiments and results of a digital inclusion project running at the periphery of Natal, Rio Grande do Norte, Brazil. The main objective is to lead children to learn about and accept the new technological resources, in this case computers and robots. We report the learning process of digitally excluded children as well as the benefits of educational robotics in the intellectual formation of marginalized children in Brazilian society. We verify, in practice, that robots and computer can be combined as a very nice tool to enrich and stimulate the teaching work, optimizing the pedagogical practice. This is a social initiative that certainly benefits present and future generations.",Acceleration; Collaborative work; Computer science education; Context; Education; Educational institutions; Educational robotics; Educational robots; Educational technology; Employment; Instruments; Rhythm; RoboEduc,RoboEduc: A pedagogical tool to support educational robotics,-,NO,,,YES,,,,,NO,,
S1820,1,Backward,conferencePaper,2011,"Liu, Kexi; Sakamoto, Daisuke; Inami, Masahiko; Igarashi, Takeo",Proceedings of the SIGCHI Conference on Human Factors in Computing Systems,10.1145/1978942.1979035,https://doi.org/10.1145/1978942.1979035,"As various home robots come into homes, the need for efficient robot task management tools is arising. Current tools are designed for controlling individual robots independently, so they are not ideally suitable for assigning coordinated action among multiple robots. To address this problem, we developed a management tool for home robots with a graphical editing interface. The user assigns instructions by selecting a tool from a toolbox and sketching on a bird's-eye view of the environment. Layering supports the management of multiple tasks in the same room. Layered graphical representation gives a quick overview of and access to rich information tied to the physical environment. This paper describes the prototype system and reports on our evaluation of the system.",graphical user interface; home robots; housework management; human-robot interaction; sketching interface,Roboshop: multi-layered sketching interface for robot housework assignment and management,-,NO,,,YES,,,,,NO,,
S1821,1,Backward,conferencePaper,2015,"Toris, Russell; Kammerl, Julius; Lu, David V.; Lee, Jihoon; Jenkins, Odest Chadwicke; Osentoski, Sarah; Wills, Mitchell; Chernova, Sonia",2015 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS.2015.7354021,,"Since its official introduction in 2012, the Robot Web Tools project has grown tremendously as an open-source community, enabling new levels of interoperability and portability across heterogeneous robot systems, devices, and front-end user interfaces. At the heart of Robot Web Tools is the rosbridge protocol as a general means for messaging ROS topics in a client-server paradigm suitable for wide area networks, and human-robot interaction at a global scale through modern web browsers. Building from rosbridge, this paper describes our efforts with Robot Web Tools to advance: 1) human-robot interaction through usable client and visualization libraries for more efficient development of front-end human-robot interfaces, and 2) cloud robotics through more efficient methods of transporting high-bandwidth topics (e.g., kinematic transforms, image streams, and point clouds). We further discuss the significant impact of Robot Web Tools through a diverse set of use cases that showcase the importance of a generic messaging protocol and front-end development systems for human-robot interaction.",Browsers; Cloud computing; Computer architecture; Human-robot interaction; Libraries; Protocols; Robots,Robot Web Tools: Efficient messaging for cloud robotics,-,NO,,,YES,,,,,NO,,
S1822,1,Backward,journalArticle,2006,"Côté, Carle; Brosseau, Yannick; Létourneau, Dominic; Raïevsky, Clément; Michaud, François",International Journal of Advanced Robotic Systems,10.5772/5758,https://doi.org/10.5772/5758,"This paper presents MARIE, a middleware framework oriented towards developing and integrating new and existing software for robotic systems. By using a generic communication framework, MARIE aims to create a flexible distributed component system that allows robotics developers to share software programs and algorithms, and design prototypes rapidly based on their own integration needs. The use of MARIE is illustrated with the design of a socially interactive autonomous mobile robot platform capable of map building, localization, navigation, tasks scheduling, sound source localization, tracking and separation, speech recognition and generation, visual tracking, message reading and graphical interaction using a touch screen interface.",autonomous robotics system; middleware; rapid prototyping; software integration environment,Robotic Software Integration Using MARIE,-,,,,NO,,,,,NO,,
S1823,1,Backward,conferencePaper,2009,"Schlegel, Christian; Hassler, Thomas; Lotz, Alex; Steck, Andreas",2009 International Conference on Advanced Robotics,,,"Engineering the software development process in robotics is one of the basic necessities towards industrial-strength service robotic systems. A major challenge is to make the step from code-driven to model-driven systems. This is essential to replace hand-crafted single-unit systems by systems composed out of components with explicitly stated properties. Furthermore, this fosters reuse by separating robotics knowledge from short-cycled implementational technologies. Altogether, this is one but important step towards “able” robots. This paper reports on a practical approach to gain more insights into how a model-driven software approach can be applied to robotics systems.",Aerospace electronics; Automotive engineering; Computer industry; Computer science; Design engineering; Programming; Robotics and automation; Service robots; Software engineering; Software systems,Robotic software systems: From code-driven to model-driven designs,-,,,,YES,,NO,,,NO,,
S1824,1,Backward,bookSection,2016,"Kortenkamp, David; Simmons, Reid; Brugali, Davide",Springer Handbook of Robotics,,https://doi.org/10.1007/978-3-319-32552-1_12,"Robot software systems tend to be complex. This complexity is due, in large part, to the need to control diverse sensors and actuators in real time, in the face of significant uncertainty and noise. Robot systems must work to achieve tasks while monitoring for, and reacting to, unexpected situations. Doing all this concurrently and asynchronously adds immensely to system complexity.",Architectural Style; Common Object Request Broker Architecture; Interprocess Communication; Robot System; Unify Modeling Language,Robotic Systems Architectures and Programming,-,,,,YES,,NO,,,NO,,
S1825,1,Backward,journalArticle,2012,"Elkady, Ayssam; Sobh, Tarek",Journal of Robotics,10.1155/2012/959013,https://www.hindawi.com/journals/jr/2012/959013/,"Autonomous robots are complex systems that require the interaction between numerous heterogeneous components (software and hardware). Because of the increase in complexity of robotic applications and the diverse range of hardware, robotic middleware is designed to manage the complexity and heterogeneity of the hardware and applications, promote the integration of new technologies, simplify software design, hide the complexity of low-level communication and the sensor heterogeneity of the sensors, improve software quality, reuse robotic software infrastructure across multiple research efforts, and to reduce production costs. This paper presents a literature survey and attribute-based bibliography of the current state of the art in robotic middleware design. The main aim of the survey is to assist robotic middleware researchers in evaluating the strengths and weaknesses of current approaches and their appropriateness for their applications. Furthermore, we provide a comprehensive set of appropriate bibliographic references that are classified based on middleware attributes.",,Robotics Middleware: A Comprehensive Literature Survey and Attribute-Based Bibliography,-,,,,YES,,NO,,,NO,,
S1826,1,Backward,conferencePaper,2011,"Osentoski, Sarah; Jay, Graylin; Crick, Christopher; Pitzer, Benjamin; DuHadway, Charles; Jenkins, Odest Chadwicke",2011 IEEE International Conference on Robotics and Automation,10.1109/ICRA.2011.5980464,,"We describe our efforts to create infrastructure to enable web interfaces for robotics. Such interfaces will enable researchers and users to remotely access robots through the internet as well as expand the types of robotic applications available to users with web-enabled devices. This paper centers on rosjs, a lightweight Javascript binding for ROS, Willow Garage's robot middleware framework, rosjs exposes many of the capabilities of ROS, allowing application developers to write controllers that are executed through a web browser. We discuss how rosjs extends ROS and briefly overview some of the features it provides, rosjs has been instrumental in the creation of remote laboratories featuring the iRobot Create and the PR2. These facilities will be available to the community as experimental resources. We describe the overall goals of this project as well as provide a brief description of how rosjs was used to help create web interfaces for these facilities.",Browsers; Libraries; Middleware; Peer to peer computing; Robots; Security; Three dimensional displays,Robots as web services: Reproducible experimentation and application development using rosjs,-,NO,,,YES,,,,,NO,,
S1827,1,Backward,conferencePaper,2006,"Pfaff, Patrick; Burgard, Wolfram; Fox, Dieter",European Robotics Symposium 2006,10.1007/11681120_15,,"In probabilistic mobile robot localization, the development of the sensor model plays a crucial role as it directly influences the efficiency and the robustness of the localization process. Sensor models developed for particle filters compute the likelihood of a sensor measurement by assuming that one of the particles accurately represents the true location of the robot. In practice, however, this assumption is often strongly violated, especially when using small sample sets or during global localization. In this paper we introduce a novel, adaptive sensor model that explicitly takes the limited representational power of particle filters into account. As a result, our approach uses smooth likelihood functions during global localization and more peaked functions during position tracking. Experiments show that our technique significantly outperforms existing, static sensor models.",Likelihood Function; Mobile Robot; Position Tracking; Sensor Model; True Location,Robust Monte-Carlo Localization Using Adaptive Likelihood Models,-,,,,NO,,,,,NO,,
S1828,1,Backward,journalArticle,,"Maggi, Federico; Quarta, Davide; Pogliani, Marcello; Polino, Mario; Zanchettin, Andrea M; Zanero, Stefano; di Milano, Politecnico",,,,,,Rogue Robots: Testing the Limits of an Industrial Robot’s Security,-,,,,NO,,,,,NO,,
S1829,1,Backward,bookSection,2017,"White, Ruffin; Christensen, Henrik",Robot Operating System (ROS): The Complete Reference  (Volume 2),,https://doi.org/10.1007/978-3-319-54927-9_9,"In this tutorial chapter we’ll cover the growing intersection between ROS and Docker, showcasing new development tools and strategies to advance robotic software design and deployment within a ROS/Gazebo context by utilizing advances in Linux containers. Tutorial examples here will focus on robotics software development for education, research, and industry, specifically: constructing repeatable and reproducible environments, leveraging software defined networking, as well as running and shipping portable ROS applications.",Distributed computing; Docker; Node networking; Portable deployment; Repeatability; Reproducibility; ROS,ROS and Docker,-,,,,YES,,NO,,,NO,,
S1830,1,Backward,conferencePaper,2012,"Crick, Christopher; Jay, Graylin; Osentoski, Sarah; Jenkins, Odest Chadwicke",2012 7th ACM/IEEE International Conference on Human-Robot Interaction (HRI),10.1145/2157689.2157846,,"The advent of ROS, the Robot Operating System, has finally made it possible to implement and use state-of-the-art navigation and manipulation algorithms on widely-available, inexpensive standard robot platforms. With the addition of the Rosbridge application programming interface, interface designers and applications programmers can create robot interfaces and behaviors without venturing into the specialized world of robotics engineers. This tutorial introduces ROS and Rosbridge, and shows how quickly and easily these tools can be used to design and conduct large-scale online HRI experiments, access algorithms for autonomous robot behavior, and leverage the huge ecosystem of general-purpose web-based and application-oriented software engineering for robotics and HRI research. Tutorial attendees will learn the basics of autonomous and teleoperated navigation and manipulation, as well as interface design for online interaction with robots. During the tutorial they will design and write their own remote presence application, as well as develop strategies for incorporating autonomy and dealing with data collection.",Algorithm design and analysis; Conferences; Educational institutions; HRI; Navigation; protocols; Robot middleware; Robots; Standards; Tutorials,ROS and Rosbridge: Roboticists out of the loop,-,,,,YES,,NO,,,NO,,
S1831,1,Backward,journalArticle,2010,"Cousins, Steve",IEEE Robotics & Automation Magazine,10.1109/MRA.2010.938502,,"In the last issue of IEEE Robotics & Automation Magazine, we talked about a number of different robots running the robot operating system (ROS). In this issue, we are going to focus on one in particular, the PR2. Willow Garage announced in May the 11 institutions that will get to use a PR2 for free for two years through its PR2 Beta Program (Figure 1). The PR2s all run ROS, and the institutions have all committed to making significant open-source contributions back to the ROS community. ROS has been gaining traction at an astonishing rate since its release in January, but having 11 PR2s at top institutions will accelerate that progress even further. We will give a brief overview of what the PR2 Beta Program recipients are planning to do, and then dive into a concrete example of the use of ROS on the PR2.",,ROS on the PR2 [ROS Topics],-,,NO,,YES,,,,,NO,,
S1832,1,Backward,webpage,,,,,https://link.springer.com/chapter/10.1007/978-3-030-45956-7_12,,,ROS Rescue: Fault Tolerance System for Robot Operating System | SpringerLink,NO,,,,NO,,,,,NO,,
S1833,1,Backward,journalArticle,,"Quigley, Morgan; Gerkey, Brian; Conley, Ken; Faust, Josh; Foote, Tully; Leibs, Jeremy; Berger, Eric; Wheeler, Rob; Ng, Andrew",,,,"This paper gives an overview of ROS, an opensource robot operating system. ROS is not an operating system in the traditional sense of process management and scheduling; rather, it provides a structured communications layer above the host operating systems of a heterogenous compute cluster. In this paper, we discuss how ROS relates to existing robot software frameworks, and brieﬂy overview some of the available application software which uses ROS.",,ROS: an open-source Robot Operating System,-,,,,NO,,NO,,,NO,,
S1834,1,Backward,bookSection,2017,"Crick, Christopher; Jay, Graylin; Osentoski, Sarah; Pitzer, Benjamin; Jenkins, Odest Chadwicke",Robotics Research : The 15th International Symposium ISRR,,https://doi.org/10.1007/978-3-319-29363-9_28,"We present rosbridge, a middleware abstraction layer which provides robotics technology with a standard, minimalist applications development framework accessible to applications programmers who are not themselves roboticists. Rosbridge provides a simple, socket-based programmatic access to robot interfaces and algorithms provided (for now) by ROS, the open-source “Robot Operating System”, the current state-of-the-art in robot middleware. In particular, it facilitates the use of web technologies such as Javascript for the purpose of broadening the use and usefulness of robotic technology. We demonstrate potential applications in the interface design, education, human-robot interaction and remote laboratory environments.",Application Developer; Camera Stream; Code Sharing; Large Point Cloud; Robot Architecture,Rosbridge: ROS for Non-ROS Users,-,,,,YES,,NO,,,NO,,
S1835,1,Backward,journalArticle,2015,"Cashmore, Michael; Fox, Maria; Long, Derek; Magazzeni, Daniele; Ridder, Bram; Carrera, Arnau; Palomeras, Narcis; Hurtos, Natalia; Carreras, Marc",Proceedings of the International Conference on Automated Planning and Scheduling,,https://ojs.aaai.org/index.php/ICAPS/article/view/13699,"The Robot Operating System (ROS) is a set of software libraries and tools used to build robotic systems. ROS is known for a distributed and modular design. Given a model of the environment, task planning is concerned with the assembly of actions into a structure that is predicted to achieve goals. This can be done in a way that minimises costs, such as time or energy. Task planning is vital in directing the actions of a robotic agent in domains where a causal chain could lock the agent into a dead-end state. Moreover, planning can be used in less constrained domains to provide more intelligent behaviour. This paper describes the ROSP LAN framework, an architecture for embedding task planning into ROS systems. We provide a description of the architecture and a case study in autonomous robotics. Our case study involves autonomous underwater vehicles in scenarios that demonstrate the flexibility and robustness of our approach.",AUV,ROSPlan: Planning in the Robot Operating System,-,,,,YES,,NO,,,NO,,
S1836,1,Backward,journalArticle,,"Cashmore, Michael",,,,"The Robot Operating System (ROS) is a set of software libraries and tools used to build robotic systems. ROS is known for a distributed and modular design. Given a model of the environment, task planning is concerned with the assembly of actions into a structure that is predicted to achieve goals. This can be done in a way that minimises costs, such as time or energy. Task planning is vital in directing the actions of a robotic agent in domains where a causal chain could lock the agent into a dead-end state. Moreover, planning can be used in less constrained domains to provide more intelligent behaviour. This paper describes the ROSPLAN framework, an architecture for embedding task planning into ROS systems. We provide a description of the architecture and a case study in autonomous robotics. Our case study involves autonomous underwater vehicles in scenarios that demonstrate the ﬂexibility and robustness of our approach.",,ROSPlan: Planning in the Robot Operating System,-,,,,NO,,NO,,,NO,,
S1837,1,Backward,conferencePaper,2005,"Ando, N.; Suehiro, T.; Kitagaki, K.; Kotoku, T.; Yoon, Woo-Keun",2005 IEEE/RSJ International Conference on Intelligent Robots and Systems,10.1109/IROS.2005.1545521,,"In this paper, we propose RT-middleware for robot system integration. ""RT"" means ""robot technology"", which is applied not only to industrial field but also to nonindustrial field such as human daily life support systems. RT-middleware which is proposed in this paper is a software platform for RT systems. We have studied modularization of RT elements and have developed RT-middleware, which promotes application of RT in various fields. Robotic system development methodology and our RT-middleware concepts are discussed. The RT-component, which is a basic software unit of RT-middleware based system integration, is derived from this discussion. A methodology of system development by using RT-components, and a framework for component development are proposed. Evaluations of some RT-component based systems are performed. Finally, conclusions and future work is described.",Application software; Humans; Intelligent robots; Intelligent systems; middleware; Middleware; Performance evaluation; Robot control; robot system; RT (Robot Technology); Service robots; software component; Software libraries; system integration; Ubiquitous computing,RT-middleware: distributed component middleware for RT (robot technology),-,,,,NO,,,,,NO,,
S1838,1,Backward,journalArticle,2010,"Jaillet, Léonard; Cortés, Juan; Siméon, Thierry",IEEE Transactions on Robotics,10.1109/TRO.2010.2049527,,This paper addresses path planning to consider a cost function defined over the configuration space. The proposed planner computes low-cost paths that follow valleys and saddle points of the configuration-space costmap. It combines the exploratory strength of the Rapidly exploring Random Tree (RRT) algorithm with transition tests used in stochastic optimization methods to accept or to reject new potential states. The planner is analyzed and shown to compute low-cost solutions with respect to a path-quality criterion based on the notion of mechanical work. A large set of experimental results is provided to demonstrate the effectiveness of the method. Current limitations and possible extensions are also discussed.,Biological system modeling; Computational biology; Computational modeling; Cost function; Costmap planning; Motion planning; Optimization methods; Orbital robotics; Path planning; path quality; sampling-based motion planning; Stochastic processes; Testing,Sampling-Based Path Planning on Configuration-Space Costmaps,-,NO,,,YES,,,,,NO,,
S1839,1,Backward,journalArticle,2019,"DeMarinis, Nicholas; Tellex, Stefanie; Kemerlis, V. P.; Konidaris, G.; Fonseca, Rodrigo",undefined,10.1109/ICRA.2019.8794451,https://www.semanticscholar.org/reader/a2028c22b78650573c51e1d4e2a849559f52d7cc,An academic search engine that utilizes artificial intelligence methods to provide highly relevant results and novel tools to filter them with ease.,,Scanning the Internet for ROS: A View of Security in Robotics Research,-,,,,YES,,NO,,,NO,,
S1840,1,Backward,conferencePaper,2008,"Hundt, Lorenz; Drath, Rainer; Lüder, Arndt; Peschke, Jörn",2008 IEEE International Technology Management Conference (ICE),,,"This paper introduces the neutral data format AutomationML®[1]. It is designed as a data exchange format for engineering tools used in the engineering process of production system. AutomationML was developed by the companies Daimler, ABB, Siemens, Rockwell, Kuka, Zühlke, netAllied as well as the universities of Magdeburg and Karlsruhe. It is intended to become an open standard. The main objective of AutomationML is to increases the interoperability between different engineering tools. To archive this AutomationML defines an architecture comprising the top level format that stores the main engineering information and integrates existing data exchange formats. Within this paper the basic concepts of AutomationML are explained with focus one the exchange of logic data.",AutomationML®; CAEX; data exchange format; engineering workflow; Geometry; Kinematics; Planning; PLCopen XML; Production systems; Robots; Sequential analysis; Topology,Seamless automation engineering with AutomationML®,-,NO,,,YES,,,,,NO,,
S1841,1,Backward,conferencePaper,2017,"Breiling, Benjamin; Dieber, Bernhard; Schartner, Peter",2017 Annual IEEE International Systems Conference (SysCon),10.1109/SYSCON.2017.7934755,,"The boom for robotics technologies in recent years has also empowered a new generation of robotics software. The Robot Operating System (ROS) is one of the most popular frameworks for robotics researchers and makers which is moving towards commercial and industrial use. Security-wise however, ROS is vulnerable to attacks. It is rather easy to inject or eavesdrop data in a ROS application. This opens many different ways to attack a ROS application resulting in data loss, monetary damage or even physical injury. In this paper we present a secure communication channel enabling ROS-nodes to communicate with authenticity and confidentiality. We secure ROS on a peer-to-peer basis in the direct interaction between publishers and subscribers. We describe the implementation changes we have made to the ROS core and assess the overhead introduced by the new security functions.",Authentication; Authorization; Communication channels; Peer-to-peer computing; Service robots,Secure communication for the robot operating system,-,NO,,,YES,,,,,NO,,
S1842,1,Backward,journalArticle,2005,"Dzung, D.; Naedele, M.; Von Hoff, T.P.; Crevatin, M.",Proceedings of the IEEE,10.1109/JPROC.2005.849714,,"Modern industrial communication networks are increasingly based on open protocols and platforms that are also used in the office IT and Internet environment. This reuse facilitates development and deployment of highly connected systems, but also makes the communication system vulnerable to electronic attacks. This paper gives an overview of IT security issues in industrial automation systems which are based on open communication systems. First, security objectives, electronic attack methods, and the available countermeasures for general IT systems are described. General security objectives and best practices are listed. Particularly for the TCP/IP protocol suite, a wide range of cryptography-based secure communication protocols is available. The paper describes their principles and scope of application. Next, we focus on industrial communication systems, which have a number of security-relevant characteristics distinct from the office IT systems. Confidentiality of transmitted data may not be required; however, data and user authentication, as well as access control are crucial for the mission critical and safety critical operation of the automation system. As a result, modern industrial automation systems, if they include security measures at all, emphasize various forms of access control. The paper describes the status of relevant specifications and implementations for a number of standardized automation protocols. Finally, we illustrate the application of security concepts and tools by brief case studies describing security issues in the configuration and operation of substations, plants, or for remote access.",Access control; Access protocols; Automation; Communication industry; Communication networks; Communication system security; Cryptographic protocols; Cryptography; Electrical equipment industry; Electronic countermeasures; embedded systems; industrial automation; industrial communication systems; IP networks; remote access; security objectives; security protocols; security standards,Security for Industrial Communication Systems,-,,,,NO,,,,,NO,,
S1843,1,Backward,journalArticle,2017,"Dieber, Bernhard; Breiling, Benjamin; Taurer, Sebastian; Kacianka, Severin; Rass, Stefan; Schartner, Peter",Robotics and Autonomous Systems,10.1016/j.robot.2017.09.017,https://www.sciencedirect.com/science/article/pii/S0921889017302762,"Future robotic systems will be situated in highly networked environments where they communicate with industrial control systems, cloud services or other systems at remote locations. In this trend of strong digitization of industrial systems (also sometimes referred to as Industry 4.0), cyber attacks are an increasing threat to the integrity of the robotic systems at the core of this new development. It is expected, that the Robot Operating System (ROS) will play an important role in robotics outside of pure research-oriented scenarios. ROS however has significant security issues which need to be addressed before such products should reach mass markets. In this paper we present the most common vulnerabilities of ROS, attack vectors to exploit those and several approaches to secure ROS and similar systems. We show how to secure ROS on an application level and describe a solution which is integrated directly into the ROS core. Our proposed solution has been implemented and tested with recent versions of ROS, and adds security to all communication channels without being invasive to the system kernel itself.",Industry 4.0; Robotics; ROS; Security,Security for the Robot Operating System,-,,,,YES,,NO,,,NO,,
S1844,1,Backward,conferencePaper,2002,"Wang, Chenxi; Carzaniga, A.; Evans, D.; Wolf, A.L.",Proceedings of the 35th Annual Hawaii International Conference on System Sciences,10.1109/HICSS.2002.994531,,"Publish-subscribe is a communication paradigm that supports dynamic, many-to-many communications in a distributed environment. Content-based pub-sub systems are often implemented on a peer-to-peer infrastructure that enables information dissemination from information producers (publishers) to consumers (subscribers) through a subscription mechanism. In a wide-area pub-sub network, the pub-sub service must handle information dissemination across distinct authoritative domains, heterogeneous platforms and a large, dynamic population of publishers and subscribers. Such an environment raises serious security concerns. In this paper, we investigate the security issues and requirements that arise in an internet-scale content-based pub-sub system. We distinguish among those requirements that can be achieved with current technology and those that require innovative solutions.",Communication system security; Computer science; Data security; Distributed computing; Information security; Internet; IP networks; Publish-subscribe; Routing; Subscriptions,Security issues and requirements for Internet-scale publish-subscribe systems,-,,,,NO,,,,,NO,,
S1845,1,Backward,journalArticle,2017,"Dahl, M.; Bengtsson, K.; Bergagård, P.; Fabian, M.; Falkman, P.",IFAC-PapersOnLine,10.1016/j.ifacol.2017.08.536,https://www.sciencedirect.com/science/article/pii/S2405896317309047,"It is essential to understand the operation sequences of a production system when designing or changing it. This paper will demonstrate how the software tool Sequence Planner (SP) not only supports this understanding by sequence visualization, but also improves the solution using optimization and verification. SP is a tool for modeling and analyzing automation systems. The tool has been developed since 2007 with an initial focus on supporting engineers when developing control code for programmable logical controllers. Today, SP is a micro-service architecture, usable in various areas like runtime control, online monitoring, energy optimization, and even emergency department patient planning. This paper presents a use case at an automotive company, where the operation sequences in a large number of automated robot stations, need to be modified. SP, together with virtual commissioning tools, automates this modification by identifying, optimizing, verifying and simulating operation sequences, and then updates the robot and control programs. This use case demonstrates the strength of SP and its architecture and how it is used for integrated virtual preparation and commissioning.",automation; robot programming; sequence of operation; Virtual manufacturing,Sequence Planner: Supporting Integrated Virtual Preparation and Commissioning,-,NO,,,YES,,,,,NO,,
S1846,1,Backward,conferencePaper,2012,"Orduña, Pablo; Rodriguez-Gil, Luis; López-de-Ipiña, Diego; García-Zubia, Javier",2012 9th International Conference on Remote Engineering and Virtual Instrumentation (REV),10.1109/REV.2012.6293178,,"The interest on educational remote laboratories has increased, as have the technologies involved in their development and deployment. These laboratories enable students to use real equipment located in the university from the Internet. This way, students can extend their personal learning experience by testing with real equipment what they are studying at home, or performing hands-on-lab sessions at night, on weekends or whenever the traditional laboratories are physically closed. A unique feature of remote laboratories when compared to traditional laboratories is that the distance of the student is not an issue, so remote laboratories can be shared with other schools or universities. In this contribution, authors present and discuss a widely spread remote laboratory (VISIR, present in 6 european universities + 1 in India) shared among 3 institutions (2 universities + 1 high school). During the exhibition, demonstration of the laboratories being shared will be shown.",Educational institutions; federation; Laboratories; Queueing analysis; remote laboratories; Robots; visir,Sharing the remote laboratories among different institutions: A practical case,-,NO,,,YES,,,,,NO,,
S1847,1,Backward,journalArticle,2006,"Mountney, Peter; Stoyanov, Danail; Davison, Andrew; Yang, Guang-Zhong",Medical image computing and computer-assisted intervention: MICCAI ... International Conference on Medical Image Computing and Computer-Assisted Intervention,10.1007/11866565_43,,"Minimally Invasive Surgery (MIS) has recognized benefits of reduced patient trauma and recovery time. In practice, MIS procedures present a number of challenges due to the loss of 3D vision and the narrow field-of-view provided by the camera. The restricted vision can make navigation and localization within the human body a challenging task. This paper presents a robust technique for building a repeatable long term 3D map of the scene whilst recovering the camera movement based on Simultaneous Localization and Mapping (SLAM). A sequential vision only approach is adopted which provides 6 DOF camera movement that exploits the available textured surfaces and reduces reliance on strong planar structures required for range finders. The method has been validated with a simulated data set using real MIS textures, as well as in vivo MIS video sequences. The results indicate the strength of the proposed algorithm under the complex reflectance properties of the scene, and the potential for real-time application for integrating with the existing MIS hardware.","Algorithms; Computer Simulation; Connective Tissue; Humans; Image Enhancement; Image Interpretation, Computer-Assisted; Imaging, Three-Dimensional; Laparoscopy; Minimally Invasive Surgical Procedures; Models, Biological; Reproducibility of Results; Sensitivity and Specificity; Surgery, Computer-Assisted; User-Computer Interface",Simultaneous stereoscope localization and soft-tissue mapping for minimal invasive surgery,-,,,,NO,,,,,NO,,
S1848,1,Backward,conferencePaper,2011,"Pastor, Peter; Kalakrishnan, Mrinal; Chitta, Sachin; Theodorou, Evangelos; Schaal, Stefan",2011 IEEE International Conference on Robotics and Automation,10.1109/ICRA.2011.5980200,,"Learning complex motor skills for real world tasks is a hard problem in robotic manipulation that often requires painstaking manual tuning and design by a human expert. In this work, we present a Reinforcement Learning based approach to acquiring new motor skills from demonstration. Our approach allows the robot to learn fine manipulation skills and significantly improve its success rate and skill level starting from a possibly coarse demonstration. Our approach aims to incorporate task domain knowledge, where appropriate, by working in a space consistent with the constraints of a specific task. In addition, we also present an approach to using sensor feedback to learn a predictive model of the task outcome. This allows our system to learn the proprioceptive sensor feedback needed to monitor subsequent executions of the task online and abort execution in the event of predicted failure. We illustrate our approach using two example tasks executed with the PR2 dual-arm robot: a straight and accurate pool stroke and a box flipping task using two chopsticks as tools.",Cost function; Grippers; Humans; Learning; Robot sensing systems; Trajectory,Skill learning and task outcome prediction for manipulation,-,NO,,,YES,,,,,NO,,
S1849,1,Backward,bookSection,2017,"Rovida, Francesco; Crosby, Matthew; Holz, Dirk; Polydoros, Athanasios S.; Großmann, Bjarne; Petrick, Ronald P. A.; Krüger, Volker",Robot Operating System (ROS): The Complete Reference  (Volume 2),,https://doi.org/10.1007/978-3-319-54927-9_4,"The development of cognitive robots in ROS still lacks the support of some key components: a knowledge integration framework and a framework for autonomous mission execution. In this research chapter, we will discuss our skill-based platform SkiROS, that was developed on top of ROS in order to organize robot knowledge and its behavior. We will show how SkiROS offers the possibility to integrate different functionalities in form of skill ‘apps’ and how SkiROS offers services for integrating these skill-apps into a consistent workspace. Furthermore, we will show how these skill-apps can be automatically executed based on autonomous, goal-directed task planning. SkiROS helps the developers to program and port their high-level code over a heterogeneous range of robots, meanwhile the minimal Graphical User Interface (GUI) allows non-expert users to start and supervise the execution. As an application example, we present how SkiROS was used to vertically integrate a robot into the manufacturing system of PSA Peugeot-Citroën. We will discuss the characteristics of the SkiROS architecture which makes it not limited to the automotive industry but flexible enough to be used in other application areas as well. SkiROS has been developed on Ubuntu 14.04 LTS and ROS indigo and it can be downloaded at https://github.com/frovida/skiros. A demonstration video is also available at https://youtu.be/mo7UbwXW5W0.",Autonomous robot; Kitting task; Knowledge integration; Planning; Skills; Software engineering,SkiROS—A Skill-Based Robot Control Platform on Top of ROS,-,,,,YES,NO,,,,NO,,
S1850,1,Backward,journalArticle,2016,"White, Ruffin; Christensen, H.; Quigley, M.",undefined,10.36288/roscon2016-900213,https://www.semanticscholar.org/reader/ae27f3cc833f3392a2929199261540ae53e4bcab,An academic search engine that utilizes artificial intelligence methods to provide highly relevant results and novel tools to filter them with ease.,,"SROS: Securing ROS over the wire, in the graph, and through the kernel",-,,,,YES,,NO,,,NO,,
S1851,1,Backward,conferencePaper,2016,"Nava, Gabriele; Romano, Francesco; Nori, Francesco; Pucci, Daniele",2016 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS.2016.7759126,,"Envisioned applications for humanoid robots call for the design of balancing and walking controllers. While promising results have been recently achieved, robust and reliable controllers are still a challenge for the control community dealing with humanoid robotics. Momentum-based strategies have proven their effectiveness for controlling humanoids balancing, but the stability analysis of these controllers is still missing. The contribution of this paper is twofold. First, we numerically show that the application of state-of-the-art momentum-based control strategies may lead to unstable zero dynamics. Secondly, we propose simple modifications to the control architecture that avoid instabilities at the zero-dynamics level. Asymptotic stability of the closed loop system is shown by means of a Lyapunov analysis on the linearized system's joint space. The theoretical results are validated with both simulations and experiments on the iCub humanoid robot.",Acceleration; Asymptotic stability; Humanoid robots; Legged locomotion; Robot kinematics; Stability analysis,Stability analysis and design of momentum-based controllers for humanoid robots,-,NO,,,YES,,,,,NO,,
S1852,1,Backward,journalArticle,1971,"Fikes, Richard E.; Nilsson, Nils J.",Artificial Intelligence,10.1016/0004-3702(71)90010-5,https://www.sciencedirect.com/science/article/pii/0004370271900105,We describe a new problem solver called STRIPS that attempts to find a sequence of operators in a space of world models to transform a given initial world model in which a given goal formula can be proven to be true. STRIPS represents a world model as an arbitrary collection in first-order predicate calculus formulas and is designed to work with models consisting of large numbers of formula. It employs a resolution theorem prover to answer questions of particular models and uses means-ends analysis to guide it to the desired goal-satisfying model.,heuristic search; Problem solving; robot planning; theorem proving,Strips: A new approach to the application of theorem proving to problem solving,-,,,,NO,,,,,NO,,
S1853,1,Backward,conferencePaper,2011,"Karnouskos, Stamatis",IECON 2011 - 37th Annual Conference of the IEEE Industrial Electronics Society,10.1109/IECON.2011.6120048,,"Industrial systems consider only partially security, mostly relying on the basis of “isolated” networks, and controlled access environments. Monitoring and control systems such as SCADA/DCS are responsible for managing critical infrastructures operate in these environments, where a false sense of security assumptions is usually made. The Stuxnet worm attack demonstrated widely in mid 2010 that many of the security assumptions made about the operating environment, technological capabilities and potential threat risk analysis are far away from the reality and challenges modern industrial systems face. We investigate in this work the highly sophisticated aspects of Stuxnet, the impact that it may have on existing security considerations and pose some thoughts on the next generation SCADA/DCS systems from a security perspective.",Grippers; Hardware; Internet; Monitoring; Process control; Security; Software,Stuxnet worm impact on industrial cyber-physical system security,-,NO,,,YES,,,,,NO,,
S1854,1,Backward,webpage,,,,,https://epubs.siam.org/doi/abs/10.1137/0325013,,,Supervisory Control of a Class of Discrete Event Processes | SIAM Journal on Control and Optimization,NO,,,,NO,,,,,NO,,
S1855,1,Backward,journalArticle,1906,"Fréchet, M. Maurice",Rendiconti del Circolo Matematico di Palermo (1884-1940),10.1007/BF03018603,https://doi.org/10.1007/BF03018603,,,Sur quelques points du calcul fonctionnel,-,,,,NO,,,,,NO,,
S1856,1,Backward,journalArticle,2013,"Brambilla, Manuele; Ferrante, Eliseo; Birattari, Mauro; Dorigo, Marco",Swarm Intelligence,10.1007/s11721-012-0075-2,https://doi.org/10.1007/s11721-012-0075-2,"Swarm robotics is an approach to collective robotics that takes inspiration from the self-organized behaviors of social animals. Through simple rules and local interactions, swarm robotics aims at designing robust, scalable, and flexible collective behaviors for the coordination of large numbers of robots. In this paper, we analyze the literature from the point of view of swarm engineering: we focus mainly on ideas and concepts that contribute to the advancement of swarm robotics as an engineering field and that could be relevant to tackle real-world applications. Swarm engineering is an emerging discipline that aims at defining systematic and well founded procedures for modeling, designing, realizing, verifying, validating, operating, and maintaining a swarm robotics system. We propose two taxonomies: in the first taxonomy, we classify works that deal with design and analysis methods; in the second taxonomy, we classify works according to the collective behavior studied. We conclude with a discussion of the current limits of swarm robotics as an engineering discipline and with suggestions for future research directions.",Review; Swarm engineering; Swarm robotics,Swarm robotics: a review from the swarm engineering perspective,-,NO,,,YES,,,,,NO,,
S1857,1,Backward,conferencePaper,2005,"Şahin, Erol",Swarm Robotics,10.1007/978-3-540-30552-1_2,,"Swarm robotics is a novel approach to the coordination of large numbers of relatively simple robots which takes its inspiration from social insects. This paper proposes a definition to this newly emerging approach by 1) describing the desirable properties of swarm robotic systems, as observed in the system-level functioning of social insects, 2) proposing a definition for the term swarm robotics, and putting forward a set of criteria that can be used to distinguish swarm robotics research from other multi-robot studies, 3) providing a review of some studies which can act as sources of inspiration, and a list of promising domains for the utilization of swarm robotic systems.",Autonomous Robot; Mobile Robot; Slime Mold; Social Insect; Swarm Intelligence,Swarm Robotics: From Sources of Inspiration to Domains of Application,-,,,,NO,,,,,NO,,
S1858,1,Backward,journalArticle,2016,"Pinciroli, Carlo; Beltrame, Giovanni",Computer,10.1109/MC.2016.376,,"One challenge of programming soon-to-be-common large robotic teams is the definition of programming primitives that generate reusable and predictable behaviors. A new language construct allows developers to categorize robots using custom conditions and assign tasks to the groups created. The web extra at https://youtu.be/ddHXIef3nDo offers a real-life demonstration of a robot swarm programmed using Buzz, an extension language with dynamic typing.",Drones; Programming; Radiation detectors; Robot kinematics; robot networks; Robot sensing systems; robotics programming; Service robots; software engineering; Software engineering; swarm robotics,Swarm-Oriented Programming of Distributed Robot Networks,-,NO,,,YES,,,,,NO,,
S1859,1,Backward,webpage,,,,,https://www.usenix.org/legacy/publications/library/proceedings/tcl96/full_papers/beazley/,,,SWIG : An Easy to Use Tool For Integrating Scriptint Languages with C and C++,NO,,,,NO,,,,,NO,,
S1860,1,Backward,journalArticle,2013,"Kulich, Miroslav; Chudoba, Jan; Kosnar, Karel; Krajnik, Tomáš; Faigl, Jan; Preucil, Libor",IEEE Transactions on Education,10.1109/TE.2012.2224867,,"E-learning is a modern and effective approach for training in various areas and at different levels of education. This paper gives an overview of SyRoTek, an e-learning platform for mobile robotics, artificial intelligence, control engineering, and related domains. SyRoTek provides remote access to a set of fully autonomous mobile robots placed in a restricted area with dynamically reconfigurable obstacles, which enables solving a huge variety of problems. A user is able to control the robots in real time by their own developed algorithms as well as being able to analyze gathered data and observe activity of the robots by provided interfaces. The system is currently used for education at the Czech Technical University in Prague, Prague, Czech Republic, and at the University of Buenos Aires, Buenos, Aires, Argentina, and it is freely accessible to other institutions. In addition to the system overview, this paper presents the experience gained from the actual deployment of the system in teaching activities.",Cameras; Educational institutions; Educational technology; Laboratories; mobile robots; Robot kinematics; robot programming; Robot sensing systems; telerobotics; user interfaces,SyRoTek—Distance Teaching of Mobile Robotics,-,NO,,,YES,,,,,NO,,
S1861,1,Backward,journalArticle,2008,"Mcgann, Conor; Py, Frederic; Rajan, Kanna; Thomas, Hans; Henthorn, Richard; McEwen, Rob",,,,"Autonomous Underwater Vehicles (AUVs) are an increasingly important tool for oceanographic research demonstrating their capabilities to sample the water column in depths far beyond what humans are capable of visiting, and doing so routinely and cost-effectively. However, control of these platforms has relied on fixed sequences for execution of pre-planned actions limiting their effectiveness for measuring dynamic and episodic ocean phenomenon. In this paper we present an agent architecture developed to overcome this limitation through on-board planning using Constraint-based Reasoning approaches. Preliminary versions of the architecture have been integrated and tested in simulation and at sea.",,T-REX: A model-based architecture for AUV control,-,NO,,,YES,,,,,NO,,
S1862,1,Backward,webpage,2016,"Cano, José; White, David R.; Bordallo, Alejandro; McCreesh, Ciaran; Prosser, Patrick; Singer, Jeremy; Nagarajan, Vijay",Robotics Science and Systems 2016,,https://eprints.gla.ac.uk/118729/,"This paper tackles the problem of allocating tasks to a distributed heterogeneous robotic system, where tasks---named *task variants* in the paper---can vary in terms of trade-off between resource requirements and quality of service provided. Three different methods (constraint programming, greedy, and metaheuristic) are proposed to solve such a problem and are evaluated both in simulation and in a real scenario, showing the goodness of the constraint programming method.",,Task Variant Allocation in Distributed Robotics,NO,,,,YES,,,,,NO,,
S1863,1,Backward,conferencePaper,2005,"Dagdilelis, V.; Sartatzemi, M.; Kagani, K.",Fifth IEEE International Conference on Advanced Learning Technologies (ICALT'05),10.1109/ICALT.2005.255,,"Research on the teaching of programming has shown that novice programmers often come up against significant difficulties in understanding programming concepts as well as in finding solutions to even elementary programming problems. One of the basic strategies which has been adopted in order to confront this problem, were programming languages and environments created with the specific aim to make both the teaching and learning processes of programming easier. A typical category of these types of environments consists of systems where the novice programmer manipulates real entities such as robots and automatic mechanisms. In this research we present a series of pilot lessons for an introduction to programming with the help of Lego Mindstorms and the visual programming environment ROBOLAB. The research was carried out on Greek secondary school students in the 9th and 10th grades. We present the initial results, which clearly show the advantages of this environment over the standard ones conventionally used, as well as some problems.",Computer languages; Education; Educational institutions; Educational robots; Informatics; Programming environments; Programming profession; Robot programming; Robotics and automation; Toy manufacturing industry,Teaching (with) robots in secondary schools: some new and not-so-new pedagogical problems,-,,,,NO,,,,,NO,,
S1864,1,Backward,conferencePaper,2001,"Wang, E.",31st Annual Frontiers in Education Conference. Impact on Engineering and Science Education. Conference Proceedings (Cat. No.01CH37193),10.1109/FIE.2001.963943,,"For the past 3 years LEGOs have been used to teach design, creativity, and structured programming to freshmen mechanical engineering students at the University of Nevada, Reno. MECH 151 is a 3-credit hour course offered as the second semester of a first year mechanical engineering design sequence. The class utilizes a project-based learning environment, which consists of approximately 10 design projects of increasing difficulty and scope. The course culminates with a robot battle and a presentation to local K-12 schools. Assessment methods include student surveys, external evaluators, evaluation of projects, and enrollment data. The use of LEGOs was found appealing to the students while providing an excellent medium for teaching design, programming, and creativity. Student enrollment has grown over 2 fold since the introduction of LEGOs.",Costs; Education; Educational institutions; Educational programs; Engineering profession; Information retrieval; Mechanical engineering; Packaging; Programming profession; Robot programming,"Teaching freshmen design, creativity and programming with LEGOs and Labview",-,,,,NO,,,,,NO,,
S1865,1,Backward,journalArticle,2002,"Flowers, Thomas R.; Gossett, Karl A.",Journal of Computing Sciences in Colleges,,,"without fee all or part of this material is granted provided that the copies are not made or distributed for direct commercial advantage, the CCSC copyright notice and the title of the publication and its date appear, and notice is given that copying is by permission of the Consortium for Computing in Small Colleges. To copy otherwise, or to republish, requires a fee and/or specific permission.",,"Teaching problem solving, computing, and information technology with robots",-,,,,NO,,,,,NO,,
S1866,1,Backward,journalArticle,2017,"Hafner, Danijar; Davidson, James; Vanhoucke, Vincent",undefined,,https://www.semanticscholar.org/reader/601e39099068f64b650826a1c072272ced246ebd,An academic search engine that utilizes artificial intelligence methods to provide highly relevant results and novel tools to filter them with ease.,,TensorFlow Agents: Efficient Batched Reinforcement Learning in TensorFlow,-,NO,,,YES,,,,,NO,,
S1867,1,Backward,journalArticle,2003,"Mann, C.J.H.",Kybernetes,10.1108/k.2003.06732iae.006,https://doi.org/10.1108/k.2003.06732iae.006,,,"The Description Logic Handbook – Theory, Implementation and Applications",-,,,,NO,,,,,NO,,
S1868,1,Backward,conferencePaper,2017,"Parmiggiani, Alberto; Fiorio, Luca; Scalzo, Alessandro; Sureshbabu, Anand Vazhapilli; Randazzo, Marco; Maggiali, Marco; Pattacini, Ugo; Lehmann, Hagen; Tikhanoff, Vadim; Domenichelli, Daniele; Cardellino, Alberto; Congiu, Pierpaolo; Pagnin, Andrea; Cingolani, Roberto; Natale, Lorenzo; Metta, Giorgio",2017 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS.2017.8202224,,"In recent years the robotics field has witnessed an interesting new trend. Several companies started the production of service robots whose aim is to cooperate with humans. The robots developed so far are either rather expensive or unsuitable for manipulation tasks. This article presents the result of a project which wishes to demonstrate the feasibility of an affordable humanoid robot. R1 is able to navigate, and interact with the environment (grasping and carrying objects, operating switches, opening doors etc). The robot is also equipped with a speaker, microphones and it mounts a display in the head to support interaction using natural channels like speech or (simulated) eye movements. The final cost of the robot is expected to range around that of a family car, possibly, when produced in large quantities, even significantly lower. This goal was tackled along three synergistic directions: use of polymeric materials, light-weight design and implementation of novel actuation solutions. These lines, as well as the robot with its main features, are described hereafter.",Manipulators; Mobile robots; Plastics; Robot sensing systems; Wheels,The design and validation of the R1 personal humanoid,-,NO,,,YES,,,,,NO,,
S1869,1,Backward,journalArticle,2006,"Helmert, M.",Journal of Artificial Intelligence Research,10.1613/jair.1705,http://arxiv.org/abs/1109.6051,"Fast Downward is a classical planning system based on heuristic search. It can deal with general deterministic planning problems encoded in the propositional fragment of PDDL2.2, including advanced features like ADL conditions and effects and derived predicates (axioms). Like other well-known planners such as HSP and FF, Fast Downward is a progression planner, searching the space of world states of a planning task in the forward direction. However, unlike other PDDL planning systems, Fast Downward does not use the propositional PDDL representation of a planning task directly. Instead, the input is first translated into an alternative representation called multi-valued planning tasks, which makes many of the implicit constraints of a propositional planning task explicit. Exploiting this alternative representation, Fast Downward uses hierarchical decompositions of planning tasks for computing its heuristic function, called the causal graph heuristic, which is very different from traditional HSP-like heuristics based on ignoring negative interactions of operators. In this article, we give a full account of Fast Downwards approach to solving multi-valued planning tasks. We extend our earlier discussion of the causal graph heuristic to tasks involving axioms and conditional effects and present some novel techniques for search control that are used within Fast Downwards best-first search algorithm: preferred operators transfer the idea of helpful actions from local search to global best-first search, deferred evaluation of heuristic functions mitigates the negative effect of large branching factors on search performance, and multi-heuristic best-first search combines several heuristic evaluation functions within a single search algorithm in an orthogonal way. We also describe efficient data structures for fast state expansion (successor generators and axiom evaluators) and present a new non-heuristic search algorithm called focused iterative-broadening search, which utilizes the information encoded in causal graphs in a novel way. Fast Downward has proven remarkably successful: It won the ""classical (i.e., propositional, non-optimising) track of the 4th International Planning Competition at ICAPS 2004, following in the footsteps of planners such as FF and LPG. Our experiments show that it also performs very well on the benchmarks of the earlier planning competitions and provide some insights about the usefulness of the new search enhancements.",Computer Science - Artificial Intelligence,The Fast Downward Planning System,-,,,,NO,,,,,NO,,
S1870,1,Backward,journalArticle,2001,"Hoffmann, J.; Nebel, B.",Journal of Artificial Intelligence Research,10.1613/jair.855,http://arxiv.org/abs/1106.0675,"We describe and evaluate the algorithmic techniques that are used in the FF planning system. Like the HSP system, FF relies on forward state space search, using a heuristic that estimates goal distances by ignoring delete lists. Unlike HSP's heuristic, our method does not assume facts to be independent. We introduce a novel search strategy that combines hill-climbing with systematic search, and we show how other powerful heuristic information can be extracted and used to prune the search space. FF was the most successful automatic planner at the recent AIPS-2000 planning competition. We review the results of the competition, give data for other benchmark domains, and investigate the reasons for the runtime performance of FF compared to HSP.",Computer Science - Artificial Intelligence,The FF Planning System: Fast Plan Generation Through Heuristic Search,-,,,,NO,,NO,,,NO,,
S1871,1,Backward,journalArticle,2003,"Ghemawat, Sanjay; Gobioff, Howard; Leung, Shun-Tak",ACM SIGOPS Operating Systems Review,10.1145/1165389.945450,https://doi.org/10.1145/1165389.945450,,clustered storage; data storage; fault tolerance; scalability,The Google file system,-,,,,NO,,,,,NO,,
S1872,1,Backward,conferencePaper,2008,"Metta, Giorgio; Sandini, Giulio; Vernon, David; Natale, Lorenzo; Nori, Francesco",Proceedings of the 8th Workshop on Performance Metrics for Intelligent Systems,10.1145/1774674.1774683,https://doi.org/10.1145/1774674.1774683,"We report about the iCub, a humanoid robot for research in embodied cognition. At 104 cm tall, the iCub has the size of a three and half year old child. It will be able to crawl on all fours and sit up to manipulate objects. Its hands have been designed to support sophisticate manipulation skills. The iCub is distributed as Open Source following the GPL/FDL licenses. The entire design is available for download from the project homepage and repository (http://www.robotcub.org). In the following, we will concentrate on the description of the hardware and software systems. The scientific objectives of the project and its philosophical underpinning are described extensively elsewhere [1].",cognitive systems; humanoid robotics; open source; software modularity,The iCub humanoid robot: an open platform for research in embodied cognition,-,NO,,,YES,,NO,,,NO,,
S1873,1,Backward,journalArticle,2016,"Natale, Lorenzo; Paikan, Ali; Randazzo, Marco; Domenichelli, Daniele E.",Frontiers in Robotics and AI,,https://www.frontiersin.org/articles/10.3389/frobt.2016.00024,"The complexity of humanoid robots is increasing with the availability of new sensors, embedded CPUs, and actuators. This wealth of technologies allows researchers to investigate new problems like multi-modal sensory fusion, whole-body control and multi-modal human-robot interaction. Under the hood of these robots, the software architecture has an important role: it allows researchers to get access to the robot functionalities focusing primarily on their research problems and supports code reuse to minimize development and debugging, especially when new hardware becomes available. But more importantly, it allows increasing the complexity of the experiments that can be carried out before system integration becomes unmanageable, and debugging draws more resources than research itself. In this paper, we illustrate the software architecture of the iCub humanoid robot and the software engineering best practices that have emerged driven by the needs of our research community. We describe the latest development of the middleware supporting interface definition and automatic code generation, logging, ROS compatibility, and channel prioritization. We show the robot abstraction layer and how it has been modified to better address the requirements of the users and to support new hardware as it became available. We also describe the testing framework, and we have recently adopted for developing code using a test-driven methodology. We conclude the paper discussing the lessons we learned during the past 11 years of software development on the iCub humanoid robot.",,The iCub Software Architecture: Evolution and Lessons Learned,-,NO,,,YES,,,,,NO,,
S1874,1,Backward,conferencePaper,1997,"Brooks, R.A.",Proceedings Second International Conference on Cognitive Technology Humanizing the Information Age,10.1109/CT.1997.617707,,"At the MIT Artificial Intelligence Laboratory, we have been working on technologies for an Intelligent Room. Rather than pull people into the virtual world of the computer, we are trying to pull the computer out into the real world of people. To do this, we are combining robotics and vision technology with speech understanding systems and agent-based architectures to provide ready-at-hand computation and information services for people engaged in day-to-day activities, both on their own and in conjunction with others. We have built a layered architecture where, at the bottom level, vision systems track people and identify their activities and gestures, and, through word spotting, decide whether people in the room are talking to each other or to the room itself. At the next level, an agent architecture provides a uniform interface to such specially-built systems, and to other off-the-shelf software, such as Web browsers, etc. At the highest level, we are able to build application systems that provide occupants of the room with specialized services; examples we have built include systems for command-and-control situations rooms and as a room for giving presentations.",Application software; Artificial intelligence; Computer architecture; Computer vision; Intelligent robots; Laboratories; Machine vision; Robot vision systems; Service oriented architecture; Speech,The Intelligent Room project,-,,,,NO,,,,,NO,,
S1875,1,Backward,journalArticle,2003,"Eugster, Patrick Th.; Felber, Pascal A.; Guerraoui, Rachid; Kermarrec, Anne-Marie",ACM Computing Surveys,10.1145/857076.857078,https://doi.org/10.1145/857076.857078,"Well adapted to the loosely coupled nature of distributed interaction in large-scale applications, the publish/subscribe communication paradigm has recently received increasing attention. With systems based on the publish/subscribe interaction scheme, subscribers register their interest in an event, or a pattern of events, and are subsequently asynchronously notified of events generated by publishers. Many variants of the paradigm have recently been proposed, each variant being specifically adapted to some given application or network model. This paper factors out the common denominator underlying these variants: full decoupling of the communicating entities in time, space, and synchronization. We use these three decoupling dimensions to better identify commonalities and divergences with traditional interaction paradigms. The many variations on the theme of publish/subscribe are classified and synthesized. In particular, their respective benefits and shortcomings are discussed both in terms of interfaces and implementations.",Distribution; interaction; publish/subscribe,The many faces of publish/subscribe,-,,,,NO,,NO,,,NO,,
S1876,1,Backward,conferencePaper,2004,"Byres, Eric; Dr, P. E.; Hoffman, Dan",In Proc. of VDE Kongress,,,"Process control systems, with their reliance on proprietary networks and hardware, have long been considered immune to the network attacks that have wrecked so much havoc on corporate information systems. Unfortunately, new research indicates this complacency is misplaced – the move to open standards such as Ethernet, TCP/IP and web technologies has let hackers take advantage of the process industries ignorance. This talk describes five network-based incidents that directly impacted process control systems and the lessons that can be learned from these security events.",,The myths and facts behind cyber security risks for industrial control systems,-,,,,NO,,,,,NO,,
S1877,1,Backward,conferencePaper,2010,"Marder-Eppstein, Eitan; Berger, Eric; Foote, Tully; Gerkey, Brian; Konolige, Kurt",2010 IEEE International Conference on Robotics and Automation,10.1109/ROBOT.2010.5509725,,"This paper describes a navigation system that allowed a robot to complete 26.2 miles of autonomous navigation in a real office environment. We present the methods required to achieve this level of robustness, including an efficient Voxel-based 3D mapping algorithm that explicitly models unknown space. We also provide an open-source implementation of the algorithms used, as well as simulated environments in which our results can be verified.",Mobile robots; Open source software; Orbital robotics; Robot sensing systems; Robotics and automation; Robustness; Sensor arrays; Sonar navigation; Space technology; USA Councils,The Office Marathon: Robust navigation in an indoor office environment,-,NO,,,YES,,NO,,,NO,,
S1878,1,Backward,journalArticle,,"Galluzzo, Thomas; Kent, Danny",,,,,,THE OPENJAUS APPROACH TO DESIGNING AND IMPLEMENTING THE NEW SAE JAUS STANDARDS,-,,,,NO,,,,,NO,,
S1879,1,Backward,conferencePaper,2003,"Gerkey, Brian P.; Vaughan, Richard T.; Howard, Andrew",In Proceedings of the 11th International Conference on Advanced Robotics,,,"This paper describes the Player/Stage software tools applied to multi-robot, distributed-robot and sensor network systems. Player is a robot device server that provides network transparent robot control. Player seeks to constrain controller design as little as possible; it is device independent, non-locking and language- and style-neutral. Stage is a lightweight, highly configurable robot simulator that supports large populations. Player/Stage is a community Free Software project. Current usage of Player and Stage is reviewed, and some interesting research opportunities opened up by this infrastructure are identified. 1",,The Player/Stage Project: Tools for Multi-Robot and Distributed Sensor Systems,-,,,,NO,,NO,,,NO,,
S1880,1,Backward,conferencePaper,2003,"Gerkey, Brian P.; Vaughan, Richard T.; Howard, Andrew",In Proceedings of the 11th International Conference on Advanced Robotics,,,"This paper describes the Player/Stage software tools applied to multi-robot, distributed-robot and sensor network systems. Player is a robot device server that provides network transparent robot control. Player seeks to constrain controller design as little as possible; it is device independent, non-locking and language- and style-neutral. Stage is a lightweight, highly configurable robot simulator that supports large populations. Player/Stage is a community Free Software project. Current usage of Player and Stage is reviewed, and some interesting research opportunities opened up by this infrastructure are identified. 1",,The Player/Stage Project: Tools for Multi-Robot and Distributed Sensor Systems,-,,,,NO,,NO,,,NO,,
S1881,1,Backward,conferencePaper,2017,"Pickem, Daniel; Glotfelter, Paul; Wang, Li; Mote, Mark; Ames, Aaron; Feron, Eric; Egerstedt, Magnus",2017 IEEE International Conference on Robotics and Automation (ICRA),10.1109/ICRA.2017.7989200,,"This paper describes the Robotarium - a remotely accessible, multi-robot research facility. The impetus behind the Robotarium is that multi-robot testbeds constitute an integral and essential part of the multi-robot research cycle, yet they are expensive, complex, and time-consuming to develop, operate, and maintain. These resource constraints, in turn, limit access for large groups of researchers and students, which is what the Robotarium is remedying by providing users with remote access to a state-of-the-art multi-robot test facility. This paper details the design and operation of the Robotarium and discusses the considerations one must take when making complex hardware remotely accessible. In particular, safety must be built into the system already at the design phase without overly constraining what coordinated control programs users can upload and execute, which calls for minimally invasive safety routines with provable performance guarantees.",Collision avoidance; Hardware; Robot kinematics; Robot sensing systems; Safety; Servers,The Robotarium: A remotely accessible swarm robotics research testbed,-,NO,,,YES,,,,,NO,,
S1882,1,Backward,conferencePaper,2010,"Angerer, Andreas; Hoffmann, Alwin; Schierl, Andreas; Vistein, Michael; Reif, Wolfgang",2010 IEEE/RSJ International Conference on Intelligent Robots and Systems,10.1109/IROS.2010.5649098,,"During the last two decades, software development has evolved continuously into an engineering discipline with systematic use of methods and tools to model and implement software. For example, object-oriented analysis and design is structuring software models according to real-life objects of the problem domain and their relations. However, the industrial robotics domain is still dominated by old-style, imperative robot programming languages, making software development difficult and expensive. For this reason, we introduce the object-oriented Robotics Application Programming Interface (Robotics API) for developing software for industrial robotic applications. The Robotics API offers an abstract, extensible domain model and provides common functionality, which can be easily used by application developers. The advantages of the Robotics API are illustrated with an application example.",Object oriented modeling; Programming; Real time systems; Robot control; Service robots; Welding,The Robotics API: An object-oriented framework for modeling industrial robotics applications,-,NO,,,YES,,,,,NO,,
S1883,1,Backward,conferencePaper,2017,"Portugal, David; Pereira, Samuel; Couceiro, Micael S.",2017 26th IEEE International Symposium on Robot and Human Interactive Communication (RO-MAN),10.1109/ROMAN.2017.8172422,,"With the growing proliferation of robots in our society comes the natural concern of security. However, this is an often overlooked issue in robotic systems, as the focus is commonly placed in robot functionality and innovation. Unauthorized access to a robot, or a multi-robot network, may seriously compromise the system, potentially leading to unacceptable consequences, such as putting in danger humans that share the environment with the robot(s). In this paper, a deeper look is taken into the security issue in human-robot shared environments by surveying existing work and analyzing security issues in the widely used Robot Operation System (ROS), discussing the different layers of security in a robotic network architecture, and proposing several hierarchical security mechanisms, using the STOP project case study in surveillance robotics.",Authentication; Ports (Computers); Privacy; Robot sensing systems; Service robots,The role of security in human-robot shared environments: A case study in ROS-based surveillance robots,-,,,,YES,,NO,,,NO,,
S1884,1,Backward,bookSection,2016,"Tiderko, Alexander; Hoeller, Frank; Röhling, Timo",Robot Operating System (ROS): The Complete Reference (Volume 1),,https://doi.org/10.1007/978-3-319-26054-9_24,"This tutorial chapter describes how to set up a multi-robot system in ROS with the multimaster_fkie package. The package adds ROS support for multiple hosts, which can be added and removed from the network at any time without affecting the remaining nodes. The presented multi-master extension works with the unmodified ROS master and does not change the way ROS nodes communicate or establish connections with each other. Thus, the multi-robot system remains fully compatible with a single-master ROS system. It is easy to set up and execute the ROS masters independently on each robot. The multi-master extension takes care of synchronization and merges the masters into a unified network view. For better usability, the package includes a graphical user interface for monitoring, configuration and control of the ROS components. The latest version can be downloaded from https://github.com/fkie/multimaster_fkie. You can also install the package from http://packages.ros.org. The multimaster_fkie package works with all ROS versions since groovy.",Configuration management; Dynamic network; Multi-master; Multi-robot system; Node manager; Synchronization,The ROS Multimaster Extension for Simplified Deployment of Multi-Robot Systems,-,,NO,YES,YES,,,,,NO,,
S1885,1,Backward,webpage,,,,,https://www.zora.uzh.ch/id/eprint/73349/,,,The ShanghAI Lectures: A global education project on artificial intelligence - Zurich Open Repository and Archive,NO,,,,NO,,,,,NO,,
S1886,1,Backward,conferencePaper,2017,"Mayoral, Victor; Hernández, Alejandro; Kojcev, Risto; Muguruza, Iñigo; Zamalloa, Irati; Bilbao, Asier; Usategi, Lander",2017 NASA/ESA Conference on Adaptive Hardware and Systems (AHS),10.1109/AHS.2017.8046383,,"This article introduces the Hardware Robot Operating System (H-ROS), a joint hardware and software infrastructure to create vendor-agnostic reusable and reconfigurable robot hardware components. These robot components dynamically modify and extend the internal representation model of the robot enabling robots to switch on or off components selectively and literally exchange hardware components between them reducing the integration effort of building robots. Our results demonstrate the feasibility of the hypotheses presented, discuss future work and improvements on top of the proposed H-ROS infrastructure.",hardware; Hardware; real-time Ethernet; Robot kinematics; Robot sensing systems; robotics; ROS; Service robots; Software; standard; Standards,The shift in the robotics paradigm — The Hardware Robot Operating System (H-ROS); an infrastructure to create interoperable robot components,-,NO,,,YES,,,,,NO,,
S1887,1,Backward,report,2008,"Rescorla, Eric; Dierks, Tim",,,https://datatracker.ietf.org/doc/rfc5246,"This document specifies Version 1.2 of the Transport Layer Security (TLS) protocol. The TLS protocol provides communications security over the Internet. The protocol allows client/server applications to communicate in a way that is designed to prevent eavesdropping, tampering, or message forgery. [STANDARDS-TRACK]",,The Transport Layer Security (TLS) Protocol Version 1.2,NO,,,,YES,,,,,NO,,
S1888,1,Backward,journalArticle,2003,"Marín, R.; Sanz, P.J.; del Pobil, A.P.",Autonomous Robots,10.1023/A:1026220621431,https://doi.org/10.1023/A:1026220621431,"This paper describes a complete vision-based online robot system that allows controlling both an educational and an industrial robot via web. We address some of the limitations of current similar systems particularly concerning the user interface. Some of its novel features are: its adjustable autonomy, so that the user can decide the right level of interaction from high-level voice commands down to mouse clicks, reducing in this way the cognitive fatigue resulting from remote operation; the interface is predictive, by using a 3D virtual environment endowed with augmented reality capabilities, the user can predict the results of the actions before sending the command to the real robot. Thus, network bandwidth is saved and off-line task specification is possible. This high level interaction is possible thanks to some built-in modules for performing basic tasks such as automatic object recognition, image processing, autonomous grasp determination and speech recognition. Finally, the system has been tested by means of an application in the Education and Training domain. One hundred undergraduate students have been using the web-based interface in order to program “Pick and Place” operations with the system. The results show performance, statistics, connection rates, and the students' opinions, as a way of evaluating the convenience and usability of the user interface.",education & training; human-robot interaction; online robots; task specification,The UJI Online Robot: An Education and Training Experience,-,,,,NO,,,,,NO,,
S1889,1,Backward,journalArticle,1991,"Borenstein, J.; Koren, Y.",IEEE Transactions on Robotics and Automation,10.1109/70.88137,http://ieeexplore.ieee.org/document/88137/,"A new real-time obstacle avoidance method for mobile robots has been developed and implemented. This metho.d, named the vector field histogram (VFH), permits the detection of unknown obstacles and avoids collisions while simultaneously steering the mobile robot toward the target.",,The vector field histogram-fast obstacle avoidance for mobile robots,-,,,,NO,,,,,NO,,
S1890,1,Backward,journalArticle,1978,"Lamport, Leslie",Communications of the ACM,10.1145/359545.359563,https://doi.org/10.1145/359545.359563,"The concept of one event happening before another in a distributed system is examined, and is shown to define a partial ordering of the events. A distributed algorithm is given for synchronizing a system of logical clocks which can be used to totally order the events. The use of the total ordering is illustrated with a method for solving synchronization problems. The algorithm is then specialized for synchronizing physical clocks, and a bound is derived on how far out of synchrony the clocks can become.",clock synchronization; computer networks; distributed systems; multiprocess systems,"Time, clocks, and the ordering of events in a distributed system",-,,,,NO,,,,,NO,,
S1891,1,Backward,conferencePaper,2009,"Falsig, Simon; Soerensen, Anders Stengaard",2009 Second International Conference on Robot Communication and Coordination,10.4108/ICST.ROBOCOMM2009.5806,,"This paper presents the TosNet network, created for robotics research, education, and prototyping, emphasizing ease of use, robustness, compactness, flexibility and fast hard real-time response, to allow distribution of all levels of the robot control system. The current implementation of TosNet supports up to 15 nodes, with cycle-rates up to 25 kHz, depending on the configuration. The protocol stack is completely specified as VHDL code, implemented in an FPGA. The physical layer is implemented with Toslink fiberoptic links, offering a compact, robust and highly available link technology. The network uses a shared memory model, where a block of memory is mirrored across all attached nodes each cycle, offering a simple, easy-to-use software interface between nodes.",Communication system control; Distributed control; Educational robots; Field programmable gate arrays; Modular computer systems; Physical layer; Protocols; Prototypes; Real time systems; Robot control; Robust control,"TosNet: An easy-to-use, real-time communications protocol for modular, distributed robot controllers",-,NO,,,YES,,,,,NO,,
S1892,1,Backward,journalArticle,,"Alami, Rachid",,,,Human-robot interaction requires explicit reasoning on human environment and on robot capacities to achieve its tasks in a collaborative way with a human partner.,,Toward Human-Aware Robot Task Planning,-,,,,NO,,,,,NO,,
S1893,1,Backward,conferencePaper,2011,"Bohren, Jonathan; Rusu, Radu Bogdan; Gil Jones, E.; Marder-Eppstein, Eitan; Pantofaru, Caroline; Wise, Melonee; Mösenlechner, Lorenz; Meeussen, Wim; Holzer, Stefan",2011 IEEE International Conference on Robotics and Automation,10.1109/ICRA.2011.5980058,,"As autonomous personal robots come of age, we expect certain applications to be executed with a high degree of repeatability and robustness. In order to explore these applications and their challenges, we need tools and strategies that allow us to develop them rapidly. Serving drinks (i.e., locating, fetching, and delivering), is one such application with well-defined environments for operation, requirements for human interfacing, and metrics for successful completion. In this paper we present our experiences and results while building an autonomous robotic assistant using the PR21 platform and ROS2. The system integrates several new components that are built on top of the PR2's current capabilities. Perception components include dynamic obstacle identification, mechanisms for identifying the refrigerator, types of drinks, and human faces. Planning components include navigation, arm motion planning with goal and path constraints, and grasping modules. One of the main contributions of this paper is a new task-level executive system, SMACH, based on hierarchical concurrent state machines, which controls the overall behavior of the system. We provide in-depth discussions on the solutions that we found in accomplishing our goal, and the implementation strategies that let us achieve them.",Cameras; Grasping; Navigation; Planning; Robot sensing systems; Three dimensional displays,Towards autonomous robotic butlers: Lessons learned with the PR2,-,,,,YES,,NO,,,NO,,
S1894,1,Backward,conferencePaper,2005,"Brooks, A.; Kaupp, T.; Makarenko, A.; Williams, S.; Oreback, A.",2005 IEEE/RSJ International Conference on Intelligent Robots and Systems,10.1109/IROS.2005.1545523,,"This paper gives an overview of component-based software engineering (CBSE), motivates its application to the field of mobile robotics, and proposes a particular component model. CBSE is an approach to system-building that aims to shift the emphasis from programming to composing systems from a mixture of off-the-shelf and custom-built software components. This paper argues that robotics is particularly well-suited for and in need of component-based ideas. Furthermore, now is the right time for their introduction. The paper introduces Orca - an open-source component-based software engineering framework proposed for mobile robotics with an associated repository of free, reusable components for building mobile robotic systems.",Application software; Australia; Buildings; Component-Based Design; Computer architecture; Content addressable storage; Distributed Robotics; Java; Mobile robots; Open source software; Robot programming; Robotic Architectures; Software engineering; Software Re-use; Standardization,Towards component-based robotics,-,,,,NO,,,,,NO,,
S1895,1,Backward,journalArticle,2008,"Fitzpatrick, Paul; Metta, Giorgio; Natale, Lorenzo",Robotics and Autonomous Systems,10.1016/j.robot.2007.09.014,https://www.sciencedirect.com/science/article/pii/S0921889007001364,"Robot projects are often evolutionary dead ends, with the software and hardware they produce disappearing without trace afterwards. In humanoid robotics, a small field with an avid appetite for novel devices, we experience a great deal of “churn” of this nature. In this paper, we explore how best to make our projects stable and long-lasting, without compromising our ability to constantly change our sensors, actuators, processors and networks. We also look at how to encourage the propagation and evolution of hardware designs, so that we can start to build up a “gene-pool” of material to draw upon for new projects. We advance on two fronts, software and hardware. For some time, we have been developing and using the YARP robot software architecture [Giorgio Metta, Paul Fitzpatrick, Lorenzo Natale, YARP: Yet another robot platform, International Journal on Advanced Robotics Systems 3 (2006) 43–48], which helps organize communication between sensors, processors, and actuators so that loose coupling is encouraged, making gradual system evolution much easier. YARP includes a model of communication that is transport-neutral, so that data flow is decoupled from the details of the underlying networks and protocols in use. Importantly for the long term, YARP is designed to play well with other architectures. Device drivers written for YARP can be ripped out and used without any “middleware”. On the network, basic interoperation is possible with a few lines of code in any language with a socket library, and maximally efficient interoperation can be achieved by following documented protocols. These features are not normally the first things that end-users look for when starting a project, but they are crucial for longevity. We emphasize the strategic utility of the Free Software social contract [B. Perens, The open source definition, in: Chris DiBona, Sam Ockman, Mark Stone (Eds.), Open Sources: Voices from the Open Source Revolution, O’Reilly and Associates, Cambridge, MA, 1999] to software development for small communities with idiosyncratic requirements. We also work to expand our community by releasing the design of our ICub humanoid [N.G. Tsagarakis, G. Metta, G. Sandini, D. Vernon, R. Beira, F. Becchi, L. Righetti, J. Santos-Victor, A.J. Ijspeert, M.C. Carrozza, D.G. Caldwell, iCub — The design and realization of an open humanoid platform for cognitive and neuroscience research, Journal of Advanced Robotics 21 (10) (2007) 1151–1175] under a free and open licence, and funding development using this platform.",Device drivers; Free software; Humanoid robotics; ICub humanoid; YARP,Towards long-lived robot genes,-,,,,YES,,NO,,,NO,,
S1896,1,Backward,journalArticle,2018,"Mayoral, Víctor; Kojcev, R.; Etxezarreta, Nora; Hernández, Alejandro; Zamalloa, I.",undefined,,https://www.semanticscholar.org/reader/7fe3856ddcbfc7aa168678215d03a96227b01ffa,An academic search engine that utilizes artificial intelligence methods to provide highly relevant results and novel tools to filter them with ease.,,Towards self-adaptable robots: from programming to training machines,-,NO,,,YES,,,,,NO,,
S1897,1,Backward,journalArticle,2019,"Cervera, Enric",IEEE Robotics and Automation Letters,10.1109/LRA.2018.2878604,,"This letter reviews the source code published with the papers of a flagship robotics research conference, 2017 International Conference on Robotics and Automation. The aim is to investigate whether the code is actually useful, i.e., can be reused by an interested reader without much effort. The interest is twofold: for one side, it makes possible to replicate and validate the results of the research; for another side, it facilitates new progress on the field, since researchers can build new systems on top of existing work. Unfortunately, reusing code is not as straightforward as it could seem, and there is a need for tools that alleviate the effort for integrating someone else's code into the own user's system. We propose the use of Docker, a Linux container technology, to turn the source code repositories into executable images, that can be run and tested locally, in an isolated environment, without the need of a costly integration with the host system.",C++ languages; Linux; Matlab; middleware and programming environments; Operating systems; Python; Robots; Software,Try to Start It! The Challenge of Reusing Code in Robotics Research,-,NO,,,YES,,,,,NO,,
S1898,1,Backward,conferencePaper,2005,"Baillie, J.-C.",2005 IEEE/RSJ International Conference on Intelligent Robots and Systems,10.1109/IROS.2005.1545467,,"The growing diversity and complexity of existing robotic devices like humanoids, animal-like robots or wheeled robots, lead to the development of several incompatible software interfaces to control these robots. We believe that there is a need for a standard which could be universal, powerful and easy to use. The open source project URBI, a universal robotic body interface, aims at providing the ground for such a standard. It is based on a client/server architecture where the server is running on the robot and accessed by the client, on the robot or remotely via TCP/IP. The URBI language is a scripted language used by the client and capable of controlling the joints of the robot or access its sensors, camera, speakers or any accessible part of the machine. We present in this article an introduction to URBI and we describe how URBI differs from currently existing solutions. As an example making use of URBI-specific features, we present a simple perturbative approach to walk pattern generation, with URBI running on a ERS7 Aibo robot.",Aibo; Cameras; Computer languages; Control Architecture and Programming; Human-Robot Interfaces; Humanoid robots; Mobile robots; Natural languages; Open source software; Programming Language; Robot control; Robot sensing systems; Robot vision systems; Standard; TCPIP,URBI: towards a universal robotic low-level programming language,-,,,,NO,,NO,,,NO,,
S1899,1,Backward,conferencePaper,2008,"Kim, Seung Han; Jeon, Jae Wook",2008 IEEE International Conference on Industrial Technology,10.1109/ICIT.2008.4608362,,"Easier programming environment for novice users has always been matter of consideration throughout the development of programming kits. Text based programming kits have been dominant in programming world for decades, but without popularity from novice users. Human-being is more likely to be interested in graphics instead of characters. Numerous approaches to graphical programming environment have been introduced, and they are actively being used to educate young programmers. Although graphical programming relatively easy comparing with text based programming environment, it is still not an easy or interesting environment for novice users. Most programming is educated with a computer system, where executed program results are usually through the display devices like monitor. When result of a programming can be expressed by robot instead of display devices, it is more attractive and efficient. LEGO Company has been developing cheap and powerful programmable robot set named Mindstorms. Robot made from Mindstorms can be programmed with various language kits and it itself is provided with a graphical programming kit. Combining the robot with visual programming environment will provide efficiency in learning embedded system. Mindstorms robot is programmed with a few visual programming kits and it is compared with other visual programming for evaluation.",Computer languages; Programming; Programming environments; Programming profession; Robots; Tactile sensors; Visualization,Using visual programming kit and LEGO Mindstorms: An introduction to embedded system,-,NO,,,YES,,,,,NO,,
S1900,1,Backward,conferencePaper,2012,"van Noort, Sander; Visser, Arnoud",Proceedings of the Workshop on Performance Metrics for Intelligent Systems,10.1145/2393091.2393128,https://doi.org/10.1145/2393091.2393128,"This paper describes a model to replicate the dynamics of a walking robot inside USARSim. USARSim is an existing 3D simulator based on the Unreal Engine, which provides facilities for good quality rendering, physics simulation, networking, a highly versatile scripting language and a powerful visual editor. To model the dynamics of a walking robot the balance of the robot in relation with the contact points of the body with the environment has to be calculated. To guarantee a fast frame rate several approximations in this calculation have to be tried, and the performance (both in dynamics and computational effort) is evaluated in a number of experiments. This extension is made and validated for the humanoid robot Nao. On this basis many other applications become possible. A validated simulation allows us to develop and to experiment with typical robotic tasks before they are tested on a real robot.",collisions; dynamics; NAO; simulation,Validation of the dynamics of an humanoid robot in USARSim,-,NO,,,YES,,,,,NO,,
S1901,1,Backward,journalArticle,2011,"Kim, Jungtae; Kim, Munsang; Kim, Daijin",Advanced Robotics,10.1163/016918611X603855,https://doi.org/10.1163/016918611X603855,"We propose variants of the quantized visibility graph (QVG) for efficient path planning. Conventional visibility graphs have been used for path planning when the obstacles are polygonal. The QVG extends its usability to arbitrarily-shaped objects by representing the obstacles as polygons. We propose QVG variants which represent all combinations of three factors, each with two alternatives: (i) quantization level (fixed-level or multiple-level), (ii) object representation method (inner and boundary cells together or boundary cells only), and (iii) methods used to check whether pairs of points are mutually visible (rotational plane sweep algorithm or sign inequality discrimination (SID) algorithm). In the verification of the efficiency of the proposed QVGs, (i) all QVGs produced the same best path, which was shorter than the convectional algorithms, (ii) computational cost to find the shortest path is lower when using QVGs than when using the convectional algorithms and (iii) the QVG that uses multi-level quantization, partial obstacle representation and SID visibility checking provides the shortest best path and has lower computational cost than all other methods.",ADAPTIVE CELL DECOMPOSITION; FIXED CELL DECOMPOSITION; PATH PLANNING; QUANTIZED VISIBILITY GRAPH; VISIBILITY GRAPH,Variants of the Quantized Visibility Graph for Efficient Path Planning,-,NO,,,YES,,,,,NO,,
S1902,1,Backward,conferencePaper,2012,"Veloso, Manuela; Stone, Peter",2012 IEEE/RSJ International Conference on Intelligent Robots and Systems,10.1109/IROS.2012.6386302,,"RoboCup is an international initiative to foster inter-disciplinary research and education in robotics, artificial intelligence, computer science, and engineering. We focus on the challenges of multi-robot systems, where robots cooperate with each other and when needed with humans to achieve goals in complex and uncertain environments, such as robot soccer, as RoboCupSoccer, robot rescue, as RoboCupRescue, and the wide spectrum of robot applications in daily life, as RoboCup@Home. We also include sponsored demonstrations that explore possible new scientific challenges, such as collaborative logistics. Furthermore, we are committed to contribute to the education of children in robotics: RoboCupJunior provides an exciting introduction to science and engineering for children. Overall, RoboCup is a large vibrant community, composed of university faculty and student researchers and engineers, school teachers, children, and parents. RoboCup serves as a substrate to a wide variety of academic entreprises, ranging from courses and class projects to undergraduate, Masters, and PhD research theses. RoboCup has an international annual event consisting of robot competitions and a symposium. RoboCup has consistently grown, from a few hundred participants in 1997 to close to 3,000 in 2011.",Cameras; Educational institutions; Educational robots; Mobile robots; Robot kinematics; USA Councils,Video: RoboCup robot soccer history 1997 – 2011,-,NO,,,YES,,,,,NO,,
S1903,1,Backward,journalArticle,2000,"Siméon, T.; Laumond, J.-P.; Nissoux, C.",Advanced Robotics,10.1163/156855300741960,https://doi.org/10.1163/156855300741960,"This paper presents a variant of probabilistic roadmap methods (PRM) that recently appeared as a promising approach to motion planning. We exploit a free-space structuring of the configuration space into visibility domains in order to produce small roadmaps, called visibility roadmaps. Our algorithm integrates an original termination condition related to the volume of the free space covered by the roadmap. The planner has been implemented within a software platform allowing us to address a large class of mechanical systems. Experiments show the efficiency of the approach, in particular for capturing narrow passages of collision-free configuration spaces.",COLLISION AVOIDANCE; GLOBAL PLANNING; MOTION PLANNING; PATH PLANNING; PROBABILISTIC ROADMAPS,Visibility-based probabilistic roadmaps for motion planning,-,,,,NO,,,,,NO,,
S1904,1,Backward,report,2004,"Downes, Michael; Boshernitsan, Marat; Boshernitsan, Marat; Downes, Michael S.",,,,"Over the past ten years, frequent increases in computer processing speed and graphics display capabilities have made possible a great deal of research and experimentation in the field of visual programming languages. A variety of different design methodologies have arisen from these research efforts, and numerous visual programming systems have been developed to address both specific application areas, such as user interface design and physical simulation, and more general programming tasks. We present a survey of the field of visual programming languages beginning with an historical overview of some of the pioneering efforts in the field. In addition, we present different classifications of visual programming languages, touch on implementation and design issues, and discuss efforts to formalize the theoretical basis for visual languages. We also discuss and examine a variety of the more important projects in the field over the last few years. Note: This survey was originally written as a term project paper for the graduate course on programming language design in December 1997. As was required by the course instructor, we uploaded the report to a web page, received our grades, and forgot all about it. To our great surprise, others have found this paper through various Internet search engines and started referring to it. In December 2004 we decided to submit",,Visual programming languages: A survey,NO,,,,NO,,,,,NO,,
S1905,1,Backward,journalArticle,1990,"Tanimoto, Steven L.",Journal of Visual Languages & Computing,10.1016/S1045-926X(05)80012-6,https://www.sciencedirect.com/science/article/pii/S1045926X05800126,"Visual languages have been developed to help new programmers express algorithms easily. They also help to make experienced programmers more productive by simplifying the organization of a program through the use of visual representations. However, visual languages have not reached their full potential because of several problems including the following: difficulty of producing visual representations for the more abstract computing constructs; the lack of adequate computing power to update the visual representations in response to user actions; the immaturity of the subfield of visual programming and need for additional breakthroughs and standardization of existing mechanisms. Visualization of Vision Algorithms (VIVA) is a proposed visual language for image processing. Its main purpose is to serve as an effective teaching tool for students of image processing. Its design also takes account of several secondary goals, including the completion of a software platform for research in human/image interaction, the creation of a vehicle for studying algorithms and architectures for parallel image processing, and the establishment of a presentation medium for image-processing algorithms.",,VIVA: A visual language for image processing,-,,,,NO,,,,,NO,,
S1906,1,Backward,conferencePaper,2016,"Moreno, Plinio; Nunes, Ricardo; Figueiredo, Rui; Ferreira, Ricardo; Bernardino, Alexandre; Santos-Victor, José; Beira, Ricardo; Vargas, Luís; Aragão, Duarte; Aragão, Miguel",Robot 2015: Second Iberian Robotics Conference,10.1007/978-3-319-27146-0_2,,"The development of an assistive robotic platform poses exciting engineering and design challenges due to the diversity of possible applications. This article introduces Vizzy, a wheeled humanoid robot with an anthropomorphic upper torso, that combines easy mobility, grasping ability, human-like visual perception, eye-head movements and arm gestures. The humanoid appearance improves user acceptance and facilitates interaction. The lower body mobile platform is able to navigate both indoors and outdoors. We describe the requirements, design and construction of Vizzy, as well as its current cognitive capabilities and envisaged domains of application.",Humanoid robots; Mechanical design; Mobile robots; Robot design,Vizzy: A Humanoid on Wheels for Assistive Robotics,-,NO,,,YES,,,,,NO,,
S1907,1,Backward,conferencePaper,2016,"Hu, Yue; Eljaik, Jorhabib; Stein, Kevin; Nori, Francesco; Mombaur, Katja",2016 IEEE-RAS 16th International Conference on Humanoid Robots (Humanoids),10.1109/HUMANOIDS.2016.7803349,,"The humanoid robot iCub is a research platform of the Fondazione Istituto Italiano di Tecnologia (IIT), spread among different institutes around the world. In the most recent version of iCub, the robot is equipped with stronger legs and bigger feet, allowing it to perform balancing and walking motions that were not possible with the first generations. Despite the new legs hardware, walking has been rarely performed on the iCub robot. In this work the objective is to implement walking motions on the robot, from which we want to analyze its walking capabilities. We developed software modules based on extensions of classic techniques such as the ZMP based pattern generator and position control to identify which are the characteristics as well as limitations of the robot against different walking tasks in order to give the users a reference of the performance of the robot. Most of the experiments have been performed with HeiCub, a reduced version of iCub without arms and head.",Foot; Generators; Humanoid robots; Kinematics; Legged locomotion; Trajectory,Walking of the iCub humanoid robot in different scenarios: Implementation and performance analysis,-,NO,,,YES,,,,,NO,,
S1908,1,Backward,conferencePaper,2006,"Loetzsch, Martin; Risler, Max; Jungel, Matthias",2006 IEEE/RSJ International Conference on Intelligent Robots and Systems,10.1109/IROS.2006.282605,,"This paper introduces the Extensible Agent Behavior Specification Language (XABSL) as a pragmatic tool for engineering the behavior of autonomous agents in complex and dynamic environments. It is based on hierarchies of finite state machines (FSM) for action selection and supports the design of longterm and deliberative decision processes as well as of short-term and reactive behaviors. A platform-independent execution engine makes the language applicable on any robotic platform and together with a variety of visualization, editing and debugging tools, XABSL is a convenient and powerful system for the development of complex behaviors. The complete source code can be freely downloaded from the XABSL website (http://www.informatik.huberlin.de/ki/XABSL/). The language has been successfully applied on many robotic platforms, mainly in the domain of RoboCup robot soccer. It gave the GermanTeam the crucial advantage over other teams to become the 2004 and 2005 world champion in the four-legged league and helped the team CoPS Stuttgart to become third in the Middle Size League in 2004",Artificial intelligence; Automata; Autonomous agents; Debugging; Engines; Grounding; Intelligent robots; Problem-solving; Specification languages; Visualization,XABSL - A Pragmatic Approach to Behavior Engineering,-,,,,NO,,,,,NO,,
S1909,1,Backward,conferencePaper,2017,"Muratore, Luca; Laurenzi, Arturo; Hoffman, Enrico Mingo; Rocchi, Alessio; Caldwell, Darwin G.; Tsagarakis, Nikos G.",2017 First IEEE International Conference on Robotic Computing (IRC),10.1109/IRC.2017.45,,"In this work we introduce XBotCore (Cross-Bot-Core), a light-weight, Real-Time (RT) software platform for EtherCAT-based robots. XBotCore is open-source and is designed to be both an RT robot control framework and a software middleware. It satisfies hard RT requirements, while ensuring 1 kHz control loop even in complex Multi-Degree-Of-Freedom systems. It provides a simple and easy-to-use middleware Application Programming Interface (API), for both RT and non-RT control frameworks. This API is completely flexible with respect to the framework a user wants to utilize. Moreover it is possible to reuse the code written using XBotCore API with different robots (cross-robot feature). In this paper, the XBotCore design and architecture will be described and experimental results on the humanoid robot WALK-MAN [17], developed at the Istituto Italiano di Tecnologia (IIT), will be presented.",Control systems; Humanoid robot control; Message systems; Middleware; Real-time robotics; Robot kinematics; Robot sensing systems; Robotic middlewares; Robotics software architecture; Software architecture design,XBotCore: A Real-Time Cross-Robot Software Platform,-,NO,,,YES,,,,,NO,,
S1910,1,Backward,conferencePaper,2014,"Mingo Hoffman, Enrico; Traversaro, Silvio; Rocchi, Alessio; Ferrati, Mirko; Settimi, Alessandro; Romano, Francesco; Natale, Lorenzo; Bicchi, Antonio; Nori, Francesco; Tsagarakis, Nikos G.",Modelling and Simulation for Autonomous Systems,10.1007/978-3-319-13823-7_29,,"This paper presents a set of plugins for the Gazebo simulator that enables the interoperability between a robot, controlled using the YARP framework, and Gazebo itself. Gazebo is an open-source simulator that can handle different Dynamic Engines developed by the Open Source Robotics Foundation. Since our plugins conform with the YARP layer used on the real robot, applications written for our robots, COMAN and iCub, can be run on the simulator with no changes. Our plugins have two main components: a YARP interface with the same API as the real robot interface, and a Gazebo plugin which handles simulated joints, encoders, IMUs, force/torque sensors and synchronization. Different modules and tasks for COMAN and iCub have been developed using Gazebo and our plugins as a testbed before moving to the real robots.",Dynamic Simulation; Gazebo; Open- Source; Robotics; YARP,Yarp Based Plugins for Gazebo Simulator,-,NO,,,YES,,,,,NO,,
S1911,1,Backward,journalArticle,2006,"Metta, Giorgio; Fitzpatrick, Paul; Natale, Lorenzo",International Journal of Advanced Robotic Systems,10.5772/5761,https://doi.org/10.5772/5761,"We describe YARP, Yet Another Robot Platform, an open-source project that encapsulates lessons from our experience in building humanoid robots. The goal of YARP is to minimize the effort devoted to infrastructure-level software development by facilitating code reuse, modularity and so maximize research-level development and collaboration. Humanoid robotics is a “bleeding edge” field of research, with constant flux in sensors, actuators, and processors. Code reuse and maintenance is therefore a significant challenge. We describe the main problems we faced and the solutions we adopted. In short, the main features of YARP include support for inter-process communication, image processing as well as a class hierarchy to ease code reuse across different hardware platforms. YARP is currently used and tested on Windows, Linux and QNX6 which are common operating systems used in robotics.",humanoid robotics; interprocess communication; software platform,YARP: Yet Another Robot Platform,-,,,,NO,,NO,,,NO,,
S1912,1,Backward,conferencePaper,2016,"Le Goc, Mathieu; Kim, Lawrence H.; Parsaei, Ali; Fekete, Jean-Daniel; Dragicevic, Pierre; Follmer, Sean",Proceedings of the 29th Annual Symposium on User Interface Software and Technology,10.1145/2984511.2984547,https://doi.org/10.1145/2984511.2984547,"This paper introduces swarm user interfaces, a new class of human-computer interfaces comprised of many autonomous robots that handle both display and interaction. We describe the design of Zooids, an open-source open-hardware platform for developing tabletop swarm interfaces. The platform consists of a collection of custom-designed wheeled micro robots each 2.6 cm in diameter, a radio base-station, a high-speed DLP structured light projector for optical tracking, and a software framework for application development and control. We illustrate the potential of tabletop swarm user interfaces through a set of application scenarios developed with Zooids, and discuss general design considerations unique to swarm user interfaces.",swarm user interfaces; tangible user interfaces,Zooids: Building Blocks for Swarm User Interfaces,-,NO,,,YES,,,,,NO,,
S1913,1,Backward,document,,"Bonsignorio, Fabio P.; Hallam, John; Pobil, Angel P. Del",,,,"Abstract — There is, in the robotics community, a growing awareness of the difficulty to compare in a rigorous quantitative way the many research results obtained in the many different application areas of the field. It is thought that, if we aim to consider robotics a real 'science ' or a branch of modern engineering, we must pay some attention to the experimental methodology. In this paper we focus on the issues raised by the replication/reproducibility of results, which under one respect are a cornerstone of any scientific methodology, and on a different respect are a basic pre-requisite to compare different methods for common problems",,Η Defining the Requisites of a Replicable Robotics Experiment,NO,,,,NO,,,,,NO,,
S1914,1,Backward,journalArticle,2015,"Linder, Jonas; Enqvist, Martin; Fossen, Thor I.; Johansen, Tor Arne; Gustafsson, Fredrik",IFAC-PapersOnLine,"A ship's roll dynamics is very sensitive to changes in the loading conditions and a worst-case scenario is the loss of stability. This paper proposes an approach for online estimation of a ship's mass and center of mass. Instead of focusing on a sensor-rich environment where all possible signals on a ship can be measured and a complete model of the ship can be estimated, a minimal approach is adopted. A model of the roll dynamics is derived from a well-established model in literature and it is assumed that only motion measurements from an inertial measurement unit together with measurements of the rudder angle are available. Furthermore, identifia-bility properties and disturbance characteristics of the model are presented. Due to the properties of the model, the parameters are estimated with an iterative instrumental variable approach to mitigate the influence of the disturbances and it uses multiple datasets simultaneously to overcome identifiability issues. Finally, a simulation study is presented to investigate the sensitivity to the initial conditions and it is shown that the sensitivity is low for the desired parameters.",Identification; Inertial measurement unit; Modelling; Operational safety,Modeling for IMU-based Online Estimation of a Ship's Mass and Center of Mass,,Modeling for IMU-based Online Estimation of a Ship's Mass and Center of Mass,-,,,,,NO,,,,,,
S1915,1,Backward,journalArticle,2017,"Vasilijević, Antonio; Nađ, Đula; Mandić, Filip; Mišković, Nikola; Vukić, Zoran",IEEE/ASME Transactions on Mechatronics,"Water pollution generated by accidental spill of hazardous materials is a growing problem worldwide. There is an urgent need for a tool that would help environmental response teams perform rapid understanding of the location and the extent of the spill to effectively establish an appropriate response. This paper presents a cooperative robotic system for environmental monitoring consisting of an autonomous underwater vehicle (AUV) and an autonomous unmanned surface vehicle (USV). The main contributions of the paper are a systematic description of the design and implementation of the proposed cooperative robotic system, a novel human-on-the-loop (HOTL) approach applied on the system for environmental monitoring, and demonstration of the results of the open-sea experiments on pollution deliberately caused by harmless Rhodamine water tracing (WT), carried out in Cartagena, Spain, in June 2015. The proposed HOTL system provides near real-time pollution measurement data, while not consuming a significant amount of human time and effort. It supports decision-making and allows the operator to initiate the most adequate mission in a current situation, i.e., ensures mission change on-the-fly. While the AUV samples the ocean, the USV maintains the localization and communication data transfer to the control center and corrects the AUV's dead reckoning error.",Autonomous underwater vehicle (AUV); environmental monitoring; Environmental monitoring; human-on-the-loop (HOTL); Mechatronics; Pollution measurement; Real-time systems; Robots; Sea surface; Surface contamination; unmanned surface vehicle (USV),Coordinated Navigation of Surface and Underwater Marine Robotic Vehicles for Ocean Sampling and Environmental Monitoring,,Coordinated Navigation of Surface and Underwater Marine Robotic Vehicles for Ocean Sampling and Environmental Monitoring,-,,,,,,,,,,,
S1916,1,Backward,journalArticle,1993,"Wheels, John D.",ISA Transactions,"This paper discusses the features of the token bus network, with special consideration given to its suitability for use as the communications backbone for process control applications. Comparisons are given between the token bus network and its chief rivals for use in process control, the token ring and the popular Carrier Sense Multiple Access with Collision Detection (CSMA/CD) network, commonly implemented as Ethernet.",,"Process control communications: Token bus, CSMA/CD, or token ring?",,"Process control communications: Token bus, CSMA/CD, or token ring?",-,,,,NO,,,,,,,
S1917,1,Backward,journalArticle,2003,"Yoon, Hyeon Kyu; Rhee, Key Pyo",Ocean Engineering,"Estimation-Before-Modeling (EBM) technique (or the two-step method) is a system identification method that estimates parameters in a dynamic model. Given sea trial data, the extended Kalman filter and modified Bryson–Frazier smoother can be used to estimate motion variables, hydrodynamic force, and the speed and the direction of current. And using these estimated data, we can use the ridge regression method to estimate the hydrodynamic coefficients in a model. An identifiable state space model is constructed in case that current effect is included and the maneuvering characteristics of a ship are analyzed by correlation analysis. To better identify hydrodynamic coefficients, we suggest the sub-optimal input scenario that considers the D-optimal criterion. Finally, the algorithm is confirmed against real sea trial data of 113K tanker.",Estimation-Before-Modeling technique; Hydrodynamic coefficient; Input scenario; Sea trial,Identification of hydrodynamic coefficients in ship maneuvering equations of motion by Estimation-Before-Modeling technique,,Identification of hydrodynamic coefficients in ship maneuvering equations of motion by Estimation-Before-Modeling technique,-,,,,NO,,,,,,,
S1918,1,Backward,journalArticle,2009,"Benjamin, Michael R.; Leonard, John J.; Schmidt, Henrik; Newman, Paul M.",,"This document describes the IvP Helm - an Open Source behavior-based autonomy application for unmanned vehicles. IvP is short for interval programming - a technique for representing and solving multi-objective optimizations problems. Behaviors in the IvP Helm are reconciled using multi-objective optimization when in competition with each other for influence of the vehicle. The IvP Helm is written as a MOOS application where MOOS is a set of Open Source publish-subscribe autonomy middleware tools. This document describes the configuration and use of the IvP Helm, provides examples of simple missions and information on how to download and build the software from the MOOS-IvP server at www.moosivp.org.",,An Overview of MOOS-IvP and a Brief Users Guide to the IvP Helm Autonomy Software,,An Overview of MOOS-IvP and a Brief Users Guide to the IvP Helm Autonomy Software,-,NO,,,,,,,,,,
S1914,1,Forward,journalArticle,2018,"Cano, José; White, David R.; Bordallo, Alejandro; McCreesh, Ciaran; Michala, Anna Lito; Singer, Jeremy; Nagarajan, Vijay",Autonomous Robots,10.1007/s10514-018-9742-5,https://doi.org/10.1007/s10514-018-9742-5,"We consider the problem of assigning software processes (or tasks) to hardware processors in distributed robotics environments. We introduce the notion of a task variant, which supports the adaptation of software to specific hardware configurations. Task variants facilitate the trade-off of functional quality versus the requisite capacity and type of target execution processors. We formalise the problem of assigning task variants to processors as a mathematical model that incorporates typical constraints found in robotics applications; the model is a constrained form of a multi-objective, multi-dimensional, multiple-choice knapsack problem. We propose and evaluate three different solution methods to the problem: constraint programming, a constructive greedy heuristic and a local search metaheuristic. Furthermore, we demonstrate the use of task variants in a real instance of a distributed interactive multi-agent navigation system, showing that our best solution method (constraint programming) improves the system’s quality of service, as compared to the local search metaheuristic, the greedy heuristic and a randomised solution, by an average of 16, 31 and 56% respectively.",Multi-robot systems; Distributed robotics; Multi-objective optimisation; Task allocation,Solving the task variant allocation problem in distributed robotics,-,,,,YES,,,,,YES,,
S1915,1,Forward,conferencePaper,2018,"Cano, José; Yang, Yiming; Bodin, Bruno; Nagarajan, Vijay; O'Boyle, Michael",2018 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS.2018.8594183,,"Motion planning algorithms attempt to find a good compromise between planning time and quality of solution. Due to their heuristic nature, they are typically configured with several parameters. In this paper we demonstrate that, in many scenarios, the widely used default parameter values are not ideal. However, finding the best parameters to optimise some metric(s) is not trivial because the size of the parameter space can be large. We evaluate and compare the efficiency of four different methods (i.e. random sampling, AUC-Bandit, random forest, and bayesian optimisation) to tune the parameters of two motion planning algorithms, BKPIECE and RRT-connect. We present a table-top-reaching scenario where the seven degrees-of-freedom KUKA LWR robotic arm has to move from an initial to a goal pose in the presence of several objects in the environment. We show that the best methods for BKPIECE (AUC-Bandit) and RRT-Connect (random forest) improve the performance by 4.5x and 1.26x on average respectively. Then, we generate a set of random scenarios of increasing complexity, and we observe that optimal parameters found in simple environments perform well in more complex scenarios. Finally, we find that the time required to evaluate parameter configurations can be reduced by more than 2/3 with low error. Overall, our results demonstrate that for a variety of motion planning problems it is possible to find solutions that significantly improve the performance over default configurations while requiring very reasonable computation times.",Mathematical model; Tuning; Bayes methods; Planning; Optimization; Manipulators,Automatic Parameter Tuning of Motion Planning Algorithms,-,,,,YES,,,,,YES,,
S1916,1,Forward,journalArticle,2019,"Ho, Dinh-Khanh; Ben Chehida, Karim; Miramond, Benoit; Auguin, Michel",International Journal of Semantic Computing,10.1142/S1793351X19400221,https://www.worldscientific.com/doi/abs/10.1142/S1793351X19400221,"Mobile robotic systems are normally confronted with the shortage of on-board resources such as computing capabilities and energy, as well as significantly influenced by the dynamics of surrounding environmental conditions. This context requires adaptive decisions at run-time that react to the dynamic and uncertain operational circumstances for guaranteeing the performance requirements while respecting the other constraints. In this paper, we propose a reinforcement learning (RL)-based approach for Quality of Service QoS and energy-aware autonomous robotic mission manager. The mobile robotic mission manager leverages the idea of (RL) by monitoring actively the state of performance and energy consumption of the mission and then selecting the best mapping parameter configuration by evaluating an accumulative reward feedback balancing between QoS and energy. As a case study, we apply this methodology to an autonomous navigation mission. Our simulation results demonstrate the efficiency of the proposed management framework and provide a promising solution for the real mobile robotic systems.",quality of service; energy efficiency; non-functional requirements; Robotic run-time adaptation; autonomous mobile robots; reinforcement learning,Learning-Based Adaptive Management of QoS and Energy for Mobile Robotic Missions,-,,,,YES,,,,,YES,,
S1919,1,Forward,conferencePaper,2019,"Ho, Dinh-Khanh; Ben Chehida, Karim; Miramond, Benoit; Auguin, Michel",2019 Third IEEE International Conference on Robotic Computing (IRC),10.1109/IRC.2019.00039,,"Mobile robotic systems are normally confronted with the shortage of on-board resources such as computing capabilities and energy, as well as significantly influenced by the dynamics of surrounding environmental conditions. This context requires adaptive decisions at run-time that react to the dynamic and uncertain operational circumstances for guaranteeing the performance requirements while respecting the other constraints. In this paper, we propose a reinforcement learning based approach for QoS and energy-aware autonomous robotic mission manager. The mobile robotic mission manager leverages the idea of reinforcement learning by monitoring actively the state of performance and energy consumption of the mission and then selecting the best mapping parameter configuration by evaluating an accumulative reward feedback balancing between QoS and energy. As a case study, we apply this methodology to an autonomous navigation mission. Our simulation results demonstrate the efficiency of the proposed management framework and provide a promising solution for the real mobile robotic systems.",quality of service; energy efficiency; Measurement; Energy consumption; Robot sensing systems; Quality of service; Reinforcement learning; run-time adaptation; autonomous mobile robots; reinforcement learning,QoS and Energy-Aware Run-Time Adaptation for Mobile Robotic Missions: A Learning Approach,-,,,,YES,,,,,YES,,
S1920,1,Forward,conferencePaper,2021,"SENN, Eric; BOURDON, Lucie",2021 Forum on specification & Design Languages (FDL),10.1109/FDL53530.2021.9568386,,"Robotic software can exhibit low performances even while running on allegedly powerful multi-core processor platforms. To find why is essential to guarantee the success of a mission. This paper presents an approach to analyze the processing resource demand of a ROS (Robotic Operating System) based robotic application. The AADL (Architecture Analysis and Design Language) language is used to model the application software, the hardware, and the deployment of the software components onto the hardware. The analysis of processor loads, and the checking of MIPS demand against MIPS capacity, is done with the OSATE2 tool, thanks to a few properties of the language. To set up those properties, a rapid profiling of the hardware and of the software components of the application is done, based on common Linux performance counting tools. The final accuracy is good enough to allow for a fast verification of the deployment options, and to help thinking or rethinking the software vs hardware architectures.",Computer architecture; Hardware; Organizations; Analytical models; Software Engineering; Linux; Standards organizations; Tools; Robots; Modeling; Embedded Software; Model-driven development,Introducing CPU load Analysis from AADL Models for ROS applications : a use case,-,,,,YES,,,,,YES,,
S1921,1,Forward,journalArticle,2017,"Bordallo Micó, Alejandro; Bordallo, Alejandro",,,https://era.ed.ac.uk/handle/1842/28802,"Modern applications of mobile robots require them to have the ability to safely and  effectively navigate in human environments. New challenges arise when these  robots must plan their motion in a human-aware fashion. Current methods  addressing this problem have focused mainly on the activity forecasting aspect,  aiming at improving predictions without considering the active nature of the  interaction, i.e. the robot’s effect on the environment and consequent issues such as  reciprocity. Furthermore, many methods rely on computationally expensive offline  training of predictive models that may not be well suited to rapidly evolving  dynamic environments.  This thesis presents a novel approach for enabling autonomous robots to navigate  socially in environments with humans. Following formulations of the inverse  planning problem, agents reason about the intentions of other agents and make  predictions about their future interactive motion. A technique is proposed to  implement counterfactual reasoning over a parametrised set of light-weight  reciprocal motion models, thus making it more tractable to maintain beliefs over the  future trajectories of other agents towards plausible goals. The speed of inference  and the effectiveness of the algorithms is demonstrated via physical robot  experiments, where computationally constrained robots navigate amongst humans  in a distributed multi-sensor setup, able to infer other agents’ intentions as fast as  100ms after the first observation.  While intention inference is a key aspect of successful human-robot interaction,  executing any task requires planning that takes into account the predicted goals and  trajectories of other agents, e.g., pedestrians. It is well known that robots  demonstrate unwanted behaviours, such as freezing or becoming sluggishly  responsive, when placed in dynamic and cluttered environments, due to the way in  which safety margins according to simple heuristics end up covering the entire  feasible space of motion. The presented approach makes more refined predictions  about future movement, which enables robots to find collision-free paths quickly  and efficiently.  This thesis describes a novel technique for generating ""interactive costmaps"", a  representation of the planner’s costs and rewards across time and space, providing  an autonomous robot with the information required to navigate socially given the  estimate of other agents’ intentions. This multi-layered costmap deters the robot from  obstructing while encouraging social navigation respectful of other agents’ activity.  Results show that this approach minimises collisions and near-collisions, minimises  travel times for agents, and importantly offers the same computational cost as the  most common costmap alternatives for navigation.  A key part of the practical deployment of such technologies is their ease of  implementation and configuration. Since every use case and environment is  different and distinct, the presented methods use online adaptation to learn  parameters of the navigating agents during runtime. Furthermore, this thesis  includes a novel technique for allocating tasks in distributed robotics systems,  where a tool is provided to maximise the performance on any distributed setup by  automatic parameter tuning. All of these methods are implemented in ROS and  distributed as open-source. The ultimate aim is to provide an accessible and efficient  framework that may be seamlessly deployed on modern robots, enabling  widespread use of intention prediction for interactive navigation in distributed  robotic systems.",,Intention prediction for interactive navigation in distributed robotic systems,-,,,,YES,,,,,YES,,
S1922,1,Forward,journalArticle,2020,"Grushko, Stefan; Vysocky, Ales; Jha, Vyomkesh; Pastor, Robert; Prada, Erik; Miková, Ľubica; Bobovský, Zdenko",MM Science Journal,10.17973/MMSJ.2020_11_2020064,,,,TUNING PERCEPTION AND MOTION PLANNING PARAMETERS FOR MOVEIT! FRAMEWORK,-,,,,YES,,,,,YES,,
S1927,1,Forward,journalArticle,2018,"Martín, Francisco; Soriano, Enrique; Cañas, José M.",Robotics and Autonomous Systems,10.1016/j.robot.2017.11.002,https://www.sciencedirect.com/science/article/pii/S0921889017303044,"Robotic software frameworks simplify the development of robotic applications. The more powerful ones help to build such applications as a distributed collection of interoperating software nodes. The communications inside those robotic systems are amenable of being attacked and vulnerable to the security threats present on any networked system. With the robots increasingly entering in people’s daily lives, like autonomous cars, drones, etc. security on them is a central issue gaining attention. This paper studies several well known communication middleware used by robotic frameworks running on robots with regular computers, and their support for cybersecurity. It analyzes their performance when transmitting regular robotic data of different sizes, with or without security features, on several network settings. The experiments show that security, when available, does not significantly decrease the quality of the robotic data communication in terms of latency and packet loss rate.",Security; Robotics; Middleware; Communications; Frameworks,Quantitative analysis of security in distributed robotic frameworks,-,,,,YES,,,,,YES,,
S1929,1,Forward,journalArticle,2022,"Yaacoub, Jean-Paul A.; Noura, Hassan N.; Salman, Ola; Chehab, Ali",International Journal of Information Security,10.1007/s10207-021-00545-8,https://doi.org/10.1007/s10207-021-00545-8,"The recent digital revolution led robots to become integrated more than ever into different domains such as agricultural, medical, industrial, military, police (law enforcement), and logistics. Robots are devoted to serve, facilitate, and enhance the human life. However, many incidents have been occurring, leading to serious injuries and devastating impacts such as the unnecessary loss of human lives. Unintended accidents will always take place, but the ones caused by malicious attacks represent a very challenging issue. This includes maliciously hijacking and controlling robots and causing serious economic and financial losses. This paper reviews the main security vulnerabilities, threats, risks, and their impacts, and the main security attacks within the robotics domain. In this context, different approaches and recommendations are presented in order to enhance and improve the security level of robotic systems such as multi-factor device/user authentication schemes, in addition to multi-factor cryptographic algorithms. We also review the recently presented security solutions for robotic systems.",Robotics; Risk analysis; Counter-terrorism/insurgency; Countermeasures; Robotics against COVID-19; Security attacks; Security systems,"Robotics cyber security: vulnerabilities, attacks, countermeasures, and recommendations",-,,,,YES,,,,,YES,,
S1933,1,Forward,conferencePaper,2019,"Dieber, Bernhard; Breiling, Benjamin",2019 Third IEEE International Conference on Robotic Computing (IRC),10.1109/IRC.2019.00019,,"Mobile manipulation will play an essential role in future production's intralogistics. In addition, it can be assumed that location-independence of manipulation will greatly contribute to flexible production and higher efficiency in robot use. Modular mobile manipulators can be combined from standalone robotic components like mobile platforms and serial arms. This combination enables more flexibility since the robot can be adapted to specific use-cases by exchanging hardware. However, since those robots tend to be very complex systems, their integration into networked Industry 4.0 environments will also cause security risks. In this paper, we present a security architecture and secure interaction workflows for modular mobile manipulators that on the one hand secure the system against unauthorized manipulation and on the other hand enable the integration of mobile manipulators into larger IT infrastructures. Using the example of our inhouse-developed CHIMERA mobile manipulator, we show which architectural means can be considered in order to make a modular mobile manipulator secure. We analyze the expected attack vectors on mobile manipulators and describe their mitigation within our architecture.",Computer architecture; Hardware; Software; Security; security; robotics; Service robots; Manipulators; modularity; ros; mobile manipulation,Security Considerations in Modular Mobile Manipulation,-,,,,YES,,,,,YES,,
S1934,1,Forward,journalArticle,2021,"Chen, Yange; Ping, Yuan; Zhang, Zhili; Wang, Baocang; He, SuYu",Neural Computing and Applications,10.1007/s00521-020-05426-0,https://doi.org/10.1007/s00521-020-05426-0,"Deep learning in robot systems is a popular application that can learn and train the results per requirements, but that collects sensitive information in the training process, easily causing leakage of users’ private information. To date, privacy-preserving deep learning models in robot systems have been sparsely researched. To solve the privacy leakage problem of deep learning in robot systems and fill the gap in robotics deep learning privacy research, in this paper a novel privacy-preserving image multi-classification deep-learning (PIDL) model in robot systems is presented. In PIDL, two schemes are proposed that adopt two groups of encrypted activation and cost functions—sigmoid plus cross-entropy function (PIDLSC) and softmax plus log-likelihood function (PIDLSL)—with secure calculation protocols, which are applied in a fog control center (FCC) with a non-colluding honest server by homomorphic encryption to improve the training efficiency, solve the encryption computation questions, and protect data and model privacy in robot systems. Security analysis and performance evaluation demonstrate that the proposed schemes realize security, correctness, and efficiency with low communication and computational costs.",Deep learning; Industrial Internet of Things (IIoT); Privacy-preserving; Secure calculation,Privacy-preserving image multi-classification deep learning model in robot system of industrial IoT,-,,,,YES,,,,,YES,,
S1936,1,Forward,conferencePaper,2018,"Xu, Zhiheng; Zhu, Quanyan",2018 IEEE Conference on Control Technology and Applications (CCTA),10.1109/CCTA.2018.8511500,,"A Robot Operating System (ROS) plays a significant role in organizing industrial robots for manufacturing. With an increasing number of the robots, the operators integrate a ROS with networked communication to share the data. This cyber-physical nature exposes the ROS to cyber attacks. To this end, this paper proposes a cross-layer approach to achieve secure and resilient control of a ROS. In the physical layer, due to the delay caused by the security mechanism, we design a time-delay controller for the ROS agent. In the cyber layer, we define cyber states and use Markov Decision Process to evaluate the tradeoffs between physical and security performance. Due to the uncertainty of the cyber state, we extend the MDP to a Partially Observed Markov Decision Process (POMDP). We propose a threshold solution based on our theoretical results. Finally, we present numerical examples to evaluate the performance of the secure and resilient mechanism.",Markov processes; Control systems; Delays; Service robots; Cryptography,Cross-Layer Secure and Resilient Control of Delay-Sensitive Networked Robot Operating Systems,-,,,,YES,,,,,YES,,
S1938,1,Forward,conferencePaper,2019,"Chung, Keywhan; Li, Xiao; Tang, Peicheng; Zhu, Zeran; Kalbarczyk, Zbigniew T.; Iyer, Ravishankar K.; Kesavadas, Thenkurussi",,,https://www.usenix.org/conference/raid2019/presentation/chung,,,Smart Malware that Uses Leaked Control Data of Robotic Applications: The Case of {Raven-II} Surgical Robots,-,,,,YES,,,,,YES,,
S1939,1,Forward,conferencePaper,2020,"Hong, David Ke; Kloosterman, John; Jin, Yuqi; Cao, Yulong; Chen, Qi Alfred; Mahlke, Scott; Mao, Z. Morley",2020 IEEE European Symposium on Security and Privacy (EuroS&P),10.1109/EuroSP48549.2020.00035,,"Autonomous vehicle (AV) software systems are emerging to enable rapidly developed self-driving functionalities. Since such systems are responsible for safety-critical decisions, it is necessary to secure them in face of cyber attacks. Through an empirical study of representative AV software systems Baidu Apollo and Autoware, we discover a common over privilege problem with the publish-subscribe communication model widely adopted by AV systems: due to the coarse-grained message design for the publish-subscribe communication, some message fields are over-granted with publish/subscribe permissions. To comply with the least-privilege principle and reduce the attack surface resulting from such problem, we argue that the publish/subscribe permissions should be defined and enforced at the granularity of message fields instead of messages. To systematically address such publish-subscribe over-privilege problems, we present AVGuardian, a system that includes (1) a static analysis tool that detects overprivilege instances in AV software and generates the corresponding access control policies at the message field granularity, and (2) a low-overhead, module-transparent, runtime pub-lish/subscribe permission policy enforcement mechanism to perform online policy violation detection and prevention. Using our detection tool, we are able to automatically detect 581 overprivilege instances in total in Baidu Apollo. To demonstrate the severity, we further constructed several concrete exploits that can lead to vehicle collision and identity theft for AV owners, which have been reported to Baidu Apollo and confirmed as valid. For defense, we prototype and evaluate the policy enforcement mechanism, and find that it has very low overhead, does not affect original AV decision logic, and also is resilient to message replay attacks.",Runtime; Web and internet services; Software systems; Prototypes; Access control; Static analysis; Publish-subscribe; Autonomous vehicle; System security,AVGuardian: Detecting and Mitigating Publish-Subscribe Overprivilege for Autonomous Vehicle Systems,-,,,,YES,,,,,YES,,
S1940,1,Forward,bookSection,2019,"Caiazza, Gianluca; White, Ruffin; Cortesi, Agostino",Advanced Computing and Systems for Security: Volume Eight,,https://doi.org/10.1007/978-981-13-3702-4_1,"In recent years, we observed a growth of cybersecurity threats, especially due to the ubiquitous of connected and autonomous devices commonly defined as Internet of things (IoT). These devices, designed to handle basic operations, commonly lack security measurements. In this paper, we want to tackle how we could, by design, apply static and dynamic security solutions for those devices and define security measurements without degrading overall the performance.",Encryption; Security; IoT; x.509 certificate,Enhancing Security in ROS,-,,,,YES,,,,,YES,,
S1941,1,Forward,journalArticle,2021,"Xu, Yuan; Deng, Gelei; Zhang, Tianwei; Qiu, Han; Bao, Yungang",Information Sciences,10.1016/j.ins.2021.06.063,https://www.sciencedirect.com/science/article/pii/S002002552100654X,"The development of robotics technology is accelerated by the strong support from cloud computing. Massive computation resources and services from the cloud make modern multi-robot systems more efficient and powerful. However, the introduction of cloud servers to multi-robot systems can also incur potential Denial-of-Service (DoS) threats, where an adversary can utilize the shared cloud resources to degrade or bring down the robot systems. In this paper, we conduct a comprehensive study about this security issue. By analyzing different attack vectors in cloud-robotic platforms, we propose three new DoS attacks, which manipulate the network resources, micro-architecture resources, and function parameters respectively. We conduct extensive evaluations and case studies to demonstrate the feasibility and severity of our techniques. We alert the robotics community to these catastrophic attacks on the safety and performance of cloud-robotic systems, and encourage building better defenses for higher reliability, in addition to automation and intelligence.",Cloud-robotics; Denial-of-Service attacks; Multi-robot Systems,Novel denial-of-service attacks against cloud-based multi-robot systems,-,,,,YES,,,,,YES,,
S1942,1,Forward,journalArticle,2021,"Zhu, Quanyan; Rass, Stefan; Dieber, Bernhard; Vilches, Víctor Mayoral",Foundations and Trends® in Robotics,10.1561/2300000061,https://www.nowpublishers.com/article/Details/ROB-061,"Cybersecurity in Robotics: Challenges, Quantitative Modeling, and Practice",,"Cybersecurity in Robotics: Challenges, Quantitative Modeling, and Practice",-,,,,YES,,,,,YES,,
S1943,1,Forward,conferencePaper,2020,"Beck, Rakesh Rajan; Vijeev, Abhishek; Ganapathy, Vinod",Proceedings of the 2020 ACM SIGSAC Conference on Computer and Communications Security,10.1145/3372297.3417858,https://doi.org/10.1145/3372297.3417858,"We present Privaros, a framework to enforce privacy policies on drones. Privaros is designed for commercial delivery drones, such as the ones that will likely be used by Amazon Prime Air. Such drones visit various host airspaces, each of which may have different privacy requirements. Privaros uses mandatory access control to enforce the policies of these hosts on guest delivery drones. Privaros is tailored for ROS, a middleware popular in many drone platforms. This paper presents the design and implementation of Privaros's policy-enforcement mechanisms, describes how policies are specified, and shows that policy specification can be integrated with India's Digital Sky portal. Our evaluation shows that a drone running Privaros can robustly enforce various privacy policies specified by hosts, and that its core mechanisms only marginally increase communication latency and power consumption.",trusted computing; ros; privacy; drones; mandatory access control,Privaros: A Framework for Privacy-Compliant Delivery Drones,-,,,,YES,,,,,YES,,
S1944,1,Forward,conferencePaper,2019,"Basheer, Mawj Mohammed; Varol, Asaf",2019 1st International Informatics and Software Engineering Conference (UBMYK),10.1109/UBMYK48245.2019.8965649,,"Autonomous technologies have been rapidly replacing the traditional manual intervention nearly in every aspect of our life. These technologies essentially require robots to carry out their automated processes. Nowadays, with the emergence of industry 4.0, robots are increasingly being remote-controlled via client-server connection, which creates uncommon vulnerabilities that allow attackers to target those robots. The development of an open source operational environment for robots, known as Robot Operating System (ROS) has come as a response to these demands. Security and privacy are crucial for the use of ROS as the chance of a compromise may lead to devastating ramifications. In this paper, an overview of ROS and the attacks targeting it are detailed and discussed. Followed by a review of the ROS security and digital investigation studies.",Security; Industries; Robot sensing systems; Service robots; robot operating system; Operating systems; vulnerabilities; Cyber-security; digital forensics; Forensics,An Overview of Robot Operating System Forensics,-,,,,YES,,,,,YES,,
S1945,1,Forward,conferencePaper,2019,"Vijeev, Abhishek; Ganapathy, Vinod; Bhattacharyya, Chiranjib",Proceedings of the 20th International Workshop on Mobile Computing Systems and Applications,10.1145/3301293.3302370,https://doi.org/10.1145/3301293.3302370,"Commercial and end-user drones come equipped with a wide array of sensors. Unregulated use of such drones in public airspaces poses a serious threat to the privacy of citizens. We make the case for restricted spaces for drones, which are geographic areas for which a host can specify its privacy policies. Guest drones must prove to the host that they are in compliance with the host's policies before entering the restricted space. We then make the case for an information-flow control-based policy enforcement framework on drones, and sketch the design of a prototype framework atop the Robot Operating System (ROS).",privacy; drones; restricted spaces; trusted hardware,Regulating Drones in Restricted Spaces,-,,,,YES,,,,,YES,,
S1946,1,Forward,journalArticle,2017,"Caiazza, Gianluca <1991>",,,http://dspace.unive.it/handle/10579/10238,"In recent years we observed a grown of cybersecurity threats, especially thanks to the ubiquitous of connected and autonomous devices. A list of these devices, commonly defined as Internet of Things, includes industrial automation, autonomous vehicles, robot-assisted surgery, surveillance platforms, home service automation and many more robotics domains; considering the sensitive information that are processed by these devices, the possibility of attacks should be considered as a serious security matter. This thesis focuses on the Robot Operating System (ROS), a widely adopted standard robotic middle-ware. We will analyse its possible vulnerabilities and the resulting threats that could be posed by attackers. More in details, the present work will provide an in-depth analysis of ROS and SROS - a proposed addition to the ROS API ecosystem to support modern cryptography and security measures - in addition to the development of a static analyser upon SROS for the automatic creation of software-enforcement security profiles. In order to do so, we performed the following tasks: (1) standardize the security logging format; (2) standardize the profile syntax for the policy; (3) provide new tooling to introspect recorded security logs. Lastly, we discussed some enhancements for SROS following the standard proposed by oneM2M.",,Security Enhancements of Robot Operating Systems,-,,,,YES,,,,,YES,,
S1947,1,Forward,journalArticle,2022,"Chen, Yange; Wang, Baocang; Zhang, Zhili",IEEE Systems Journal,10.1109/JSYST.2021.3078637,,"The robot system is a significant application that has attracted great attention, and deep learning is a powerful feature extraction technology that has achieved significant breakthroughs in many fields, especially in robot systems. However, the required massive dataset for a deep learning model in a robot system easily leads to privacy leakage. There have been few reports on privacy-preserving deep learning models, and none on multikeys, in robot systems. Existing privacy-preserving deep learning schemes in multiple keys have low efficiency and high interactions in non-robotic environments. To address these issues, this article proposes a privacy-preserving deep learning model with homomorphic re-encryption (PDLHR) and secure calculation tools in a robot system. The proposed re-encryption scheme is based on the Bresson-Catalano-Pointcheval (BCP) cryptosystem, which solves the multiple keys question, keeps the homomorphic nature, and is more simplified than the existing re-encryption scheme based on the BCP cryptosystem. The secure calculation tools are designed to realize efficient ciphertext computations. Compared to the previous work, PDLHR decreases the interactions in the decryption process, improves the ciphertext training efficiency, and preserves the privacy of input data, training model, and inference results. Security analysis and performance evaluations demonstrate that the proposed scheme realizes security, efficiency, and effectiveness with low communication and computation costs.",Training; Computational modeling; Encryption; Neurons; Deep learning; Robots; robot system; Cryptography; multiple keys; privacy-preserving; re-encryption,PDLHR: Privacy-Preserving Deep Learning Model With Homomorphic Re-Encryption in Robot System,-,,,,YES,,,,,YES,,
S1948,1,Forward,conferencePaper,2019,"Wiedmeyer, Wolfgang; Mende, Michael; Hartmann, Dennis; Bischoff, Rainer; Ledermann, Christoph; Kroger, Torsten",2019 International Conference on Robotics and Automation (ICRA),10.1109/ICRA.2019.8793976,,"This paper introduces the KUKA Robot Learning Lab at KIT - a remotely accessible robotics testbed. The motivation behind the laboratory is to make state-of-the-art industrial lightweight robots more accessible for education and research. Such expensive hardware is usually not available to students or less privileged researchers to conduct experiments. This paper describes the design and operation of the Robot Learning Lab and discusses the challenges that one faces when making experimental robot cells remotely accessible. Especially safety and security must be ensured, while giving users as much freedom as possible when developing programs to control the robots. A fully automated and efficient processing pipeline for experiments makes the lab suitable for a large amount of users and allows a high usage rate of the robots.",Hardware; Robot sensing systems; Service robots; Collision avoidance; Mobile robots; Robot learning,Robotics Education and Research at Scale: A Remotely Accessible Robotics Development Platform,-,,,,YES,,,,,YES,,
S1949,1,Forward,conferencePaper,2020,"Arnarson, Halldor; Solvang, Bjørn; Shu, Beibei",2020 3rd International Symposium on Small-scale Intelligent Manufacturing Systems (SIMS),10.1109/SIMS49386.2020.9121537,,"The vision behind industry 4.0 is to create even smarter manufacturing facilities. Industry 4.0 includes both hardware and software components, which are expected to seamlessly interact in a secure manner. Thus, machinery and software components from different manufacturers should be able to communicate in a common language. Such a challenge is typically met by introducing a “middleware” to serve as a joint communication platform. In this paper we discuss the use of OPC UA standard for communication between hardware and software components in a typical manufacturing system. Further we develop a digital twin and present an demonstration of our digital laboratory.",Hardware; Middleware; Industry 4.0; Production facilities; Digital twin; Fourth Industrial Revolution; Machinery; OPC UA; Open Access,The application of open access middleware for cooperation among heterogeneous manufacturing systems,-,,,,YES,,,,,YES,,
S1952,1,Forward,conferencePaper,2021,"Xu, Yuan; Zhang, Tianwei; Bao, Yungang","24th International Symposium on Research in Attacks, Intrusions and Defenses",10.1145/3471621.3471854,https://doi.org/10.1145/3471621.3471854,"Robot apps are becoming more automated, complex and diverse. An app usually consists of many functions, interacting with each other and the environment. This allows robots to conduct various tasks. However, it also opens a new door for cyber attacks: adversaries can leverage these interactions to threaten the safety of robot operations. Unfortunately, this issue is rarely explored in past works. We present the first systematic investigation about the function interactions in common robot apps. First, we disclose the potential risks and damages caused by malicious interactions. By investigating the relationships among different functions, we identify and categorize three types of interaction risks. Second, we propose RTron, a novel system to detect and mitigate these risks and protect the operations of robot apps. We introduce security policies for each type of risks, and design coordination nodes to enforce the policies and regulate the interactions. We conduct extensive experiments on 110 robot apps from the ROS platform and two complex apps (Baidu Apollo and Autoware) widely adopted in industry. Evaluation results indicated RTron can correctly identify and mitigate all potential risks with negligible performance cost. To validate the practicality of the risks and solutions, we implement and evaluate RTron on a physical UGV (Turtlebot) with real-word apps and environments.",Function interaction; Risk analysis and mitigation; Robot apps,Analysis and Mitigation of Function Interaction Risks in Robot Apps,-,,,,YES,,,,,YES,,
S1953,1,Forward,conferencePaper,2019,"Jain, Saurabh; Doriya, Rajesh",Next Generation Computing Technologies on Computational Intelligence,10.1007/978-981-15-1718-1_6,,"Reliability comes with security and security comes with latest technology and any technology is best suited for any application area until it possess a high security features. Security is considered to be one of the prominent feature which makes it more acceptable and deployable to diversified and multidisciplinary applications. The paper try to put forth an in depth review on various security aspects confining more on the security details related to cloud robotics. Cloud robotics is a term involved and emerged with the fusion of two dipole concepts namely cloud computing and robotics. Security flaws in these two technologies are the major concerns and can affect the cloud robotics. Cloud computing suffers from various type of vulnerabilities like Network based attacks, Data storage based attacks, Virtualization based attacks is also prone to operating system level attacks. The same way robotics also suffers from attacks namely denial of service attack, and dictionary attack etc. Thus it can be termed as that cloud robotics need to be safeguard from all such threats mentioned above. The draft in particular thus throws light on the different cryptographic algorithms: RSA (Rivest Shamir Andelmen), AES (Advanced Encryption Standard), ECC (Elliptic Curve Cryptography). Exclusive to the algorithms cited above, the article discusses few more methods and techniques concerning to security which can be aptly applied to cloud robotics to make it more safe and secure.",Cloud computing; Security; Robotics; ROS; Cloud robotics,Security Issues and Solutions in Cloud Robotics: A Survey,-,,,,YES,,,,,YES,,
S1954,1,Forward,journalArticle,2022,"Mayoral-Vilches, Víctor",International Journal of Cyber Forensics and Advanced Threat Investigations,,https://conceptechint.net/index.php/CFATI/article/view/41,"Robots are often shipped insecure and in some cases fully unprotected. The rationale behind is threefold: first, defensive security mechanisms for robots are still in their early stages, not covering the complete threat landscape. Second, the inherent complexity of robotic systems makes their protection costly, both technically and economically. Third, vendors do not generally take responsibility in a timely manner, extending the zero-day exposure window (time until mitigation of a zero-day) to several years on average. Worse, several manufacturers keep forwarding the problem to the end-users of these machines or discarding it. In this article we review the status of robot cybersecurity considering three sources of data: 1) recent literature, 2) questionnaires performed in top robotics forums and 3) recent research results in robot cybersecurity. Building upon a decade of experience in robotics, this article reviews the current status of cybersecurity in robotics and argues about the current challenges to secure robotic systems. Ultimately, based on the empirical results collected over a period of three years performing security assessments in robots, the present text advocates for a complementary offensive approach methodology to protect robots in a feasible and timely manner.",Security; Robotics; Survey; Offensive; Review,"Robot Cybersecurity, a Review",-,,,,YES,,,,,YES,,
S1960,1,Forward,conferencePaper,2019,"Zong, Yi; Guo, Yao; Chen, Xiangqun",2019 IEEE International Conference on Service-Oriented System Engineering (SOSE),10.1109/SOSE.2019.00062,,"With the wide application of modern robots, more concerns have been raised on security and privacy of robotic systems and applications. Although the Robot Operating System (ROS) is commonly used on different robots, there have been few work considering the security aspects of ROS. As ROS does not employ even the basic permission control mechanism, applications can access any resources without limitation, which could result in equipment damage, harm to human, as well as privacy leakage. In this paper we propose an access control mechanism for ROS based on an extended policy-based access control (PBAC) model. Specifically, we extend ROS to add an additional node dedicated for access control so that it can provide user identity and permission management services. The proposed mechanism also allows the administrator to revoke a permission dynamically. We implemented the proposed method in ROS and demonstrated its applicability and performance through several case studies.",Adaptation models; Robot sensing systems; Service robots; Operating systems; Access control; robots; permissions; policy-based access control; robotic applications,Policy-Based Access Control for Robotic Applications,-,,,,YES,,,,,YES,,
S1961,1,Forward,conferencePaper,2018,"Shao, Zhenzhou; Li, Mengnan; Qu, Ying; Song, Guoli; Guan, Yong; Tan, Jindong; Wei, Hongxing","2018 IEEE 8th Annual International Conference on CYBER Technology in Automation, Control, and Intelligent Systems (CYBER)",10.1109/CYBER.2018.8688347,,"There exists a wide application prospect in the interaction between the android system and ROS (Robot Operating System). Google and Willow Garage have developed the android_core package based on rosjava to build a ROS environment in the android system. However, the current mechanism cannot guarantee the reliable communication. This paper proposes two fundamental approaches to solve above problem. On the one hand, a communication anomaly detection module CheckNodeConnection in the application layer of the TCP/IP protocol is designed to detect the connection anomaly of network. On the other hand, we develop a communication mechanism called RosActionOnAndroid on the android system inspired by the “ROS Action Protocol” in ROS. The experimental results show that CheckNodeConnection can effectively detect the connection state between android and ROS, and RosActionOnAndroid communication mechanism can obtain the task execution status feedback of the ROS robot and support the preemptable task, which make the interactive control more accurate and reliable.",,Reliable Communication Mechanism Design for Interaction Between Android and ROS,-,,,,YES,,,,,YES,,
S1964,1,Forward,journalArticle,2021,"Breiling, Benjamin; Dieber, Bernhard; Pinzger, Martin; Rass, Stefan",Journal of Cybersecurity and Privacy,10.3390/jcp1010006,https://www.mdpi.com/2624-800X/1/1/6,"With the growing popularity of robots, the development of robot applications is subject to an ever increasing number of additional requirements from e.g., safety, legal and ethical sides. The certification of an application for compliance to such requirements is an essential step in the development of a robot program. However, at this point in time it must be ensured that the integrity of this program is preserved meaning that no intentional or unintentional modifications happen to the program until the robot executes it. Based on the abstraction of robot programs as workflows we present in this work a cryptography-powered distributed infrastructure for the preservation of robot workflows. A client composes a robot program and once it is accepted a separate entity provides a digital signature for the workflow and its parameters which can be verified by the robot before executing it. We demonstrate a real-world implementation of this infrastructure using a mobile manipulator and its software stack. We also provide an outlook on the integration of this work into our larger undertaking to provide a distributed ledger-based compliant robot application development environment.",security; robotics; compliance; cryptographic infrastructure; program integrity; robot programming,A Cryptography-Powered Infrastructure to Ensure the Integrity of Robot Workflows,-,,,,YES,,,,,YES,,
S1966,1,Forward,journalArticle,2021,"Caiazza, Gianluca <1991>",,,http://dspace.unive.it/handle/10579/18475,"Cyber-physical systems (CPS) are increasingly deployed as part of the interconnected robotic cyber-infrastructures which are known as the Industrial Internet of Things (IIoT) network. Those pervasive devices are capable of automatizing various tasks and provide novel functionalities in a wide range of applications. However, this growth made the devices a worthwhile target for attackers and cybercriminals as well. The new frontiers of large-scale deployments of connected smart devices, in which we observed a tremendous growth in the amount of stored and processed sensitive data, have maturated into a widespread suspicion concerning the way in which these flow into the infrastructures. How do we make these devices safe? How can we verify their correct operation? Due to the intrinsic limitations of those devices, either from the power consumption point of view and the actual computational power at our disposal, engineering cybersecurity solutions are not trivial. This thesis focuses on discussing and developing security solutions for those networks by analyzing the application of the security pillars of Confidentiality, Integrity, Availability, Privacy, Authenticity and Trustworthiness, Non-Repudiation, Accountability, and Auditability. We provide an overview of the robotic scene and introduce the Robot Operating System (ROS), the framework we adopted as a testbed of our solutions. More in detail, this work discusses (i) novel solutions in the field of authentication and authorization in access control architectures and policy generation, management, and distribution, (ii) vulnerabilities and countermeasures in robotic frameworks, and (iii) novel approaches of network vulnerabilities excavation and accountability. In order to provide agnostic research tools and results, we develop static solutions at the application-level that could exploit prior offline computation power.    The main results of the thesis can be summarized as follows: (i) a state of the art analysis of application-level threats on a general robotic framework and an in-deep review of the attack surface on ROS (ii) the formalization of novel approaches to access control architectures distribution, and the dissertation of an advanced policy management tooling we developed in the field of authentication and authorization  (iii) the definition of a novel network vulnerability excavation tool and discussion on attribute-based encryption to tackle privacy issues (iv) creation of a blockchain-powered software-based black box for a robotic network to address Accountability and Non-Repudiation    The results discussed in this thesis give a solid base for the definition of the future security mechanisms for robotic devices that could be easily and securely integrated into big-scale deployments spreading security solutions by reducing overall the tradeoff between security and usability.",,Application-level security for robotic networks,-,,,,YES,,,,,YES,,
S1969,1,Forward,journalArticle,2020,"Mazzeo, Giovanni; Staffa, Mariacarla",International Journal of Social Robotics,10.1007/s12369-019-00581-4,https://doi.org/10.1007/s12369-019-00581-4,"The spread adoption of humanoid social robots in different application fields is growing the interest of hackers who could violate the privacy of people, or—even worse—threaten humans’ life from physical and emotional/social point of views. Different vectors of attack exist, which are more easily exploitable if physical access to the target robot is available. This is very likely for humanoids that typically reside in untrusted environments where physically access to the robot is allowed and expected, thus permitting anyone to exploit the Linux kernel vulnerability (e.g., through the insertion of a USB pen drive) with the objective of tampering sensitive data. The Robot Operating System (ROS) is at the core of humanoids. Thus, it is crucial for their security. The most-recent solutions introduced in ROS2, SROS, and H-ROS are not sufficient for facing powerful adversaries. In this paper, we first identify the uncovered ROS weaknesses, which are particularly worrying in the case of humanoids. Then, we present our patched ROS solution called Trusted-ROS (TROS) leveraging hardware-assisted trusted computing to shield data managed by ROS, which otherwise would reside in robot’s memory unencrypted. The design of TROS is reported, together with a prototype implementation using a simulated version of the NAO humanoid secured through an Intel SGX hardware. Finally, we evaluated the proposed solution from both security and performance perspectives in order to demonstrate the practicability of our approach.",Humanoid robots; Cyber-Physical Systems; Robotic operating system; Secure enclave; Trusted Execution Environment,TROS: Protecting Humanoids ROS from Privileged Attackers,-,,,,YES,,,,,YES,,
S1971,1,Forward,conferencePaper,2021,"Yu, Beibei; Hu, Mingnan; Sun, Zhe; Chen, Bo","2021 International Conference on Control, Automation and Information Sciences (ICCAIS)",10.1109/ICCAIS52680.2021.9624593,,"In the past few years, the functions of robots have been largely enriched and deployed in numerous fields. Advanced robots are equipped with apparatuses such as cameras, radars and servo motors, which enhances the ability to interact with humans and perceive the physical world. With the integration of cloud services, robots are getting highly networked. The utilization of communication networks makes the system more dynamic, but also destroys the closeness of the system and makes the system vulnerable to cyber-attacks. Especially, attackers controlling robots through malicious attacks may damage the physical environment and threaten human life. Robot Operating System (ROS) is one of the most popular frameworks for robot software development. However, ROS has many security problems. In this paper, we study the vulnerabilities of the ROS communication framework and design threat models for the TCPROS protocol and ROS Master/Slave API respectively. TCPROS has the shortcomings of plaintext transmission and is lack of identity verification. To solve this problem, we propose an effective method for tampering with control commands. Then, a tool is designed to destroy the ROS graph through the ROS Master/Slave API. We use ROS-based mobile robots equipped with RGB-D cameras and introduce Yolo, a real-time target detection system based on convolutional neural networks, to build a target detection and tracking platform. The proposed attack strategy is verified on the robotic platform. Experimental results show that the designed attack strategy can effectively tamper the data between nodes and destroy the system's stability.",Object detection; Authentication; Robotics; Cameras; Tools; ROS; Target tracking; Robot vision systems; Cybersecurity; Cyber-physical System; Object Detection and Tracking; Radar tracking; Yolov3,Data Tampering Attack Design for ROS-Based Object Detection and Tracking Robotic Platform,-,,,,YES,,,,,YES,,
S1972,1,Forward,bookSection,2020,"Zhu, Quanyan; Xu, Zhiheng",Cross-Layer Design for Secure and Resilient Cyber-Physical Systems: A Decision and Game Theoretic Approach,,https://doi.org/10.1007/978-3-030-60251-2_11,"A Robot Operating System (ROS) plays a significant role in organizing industrial robots for manufacturing. With an increasing number of robots, operators integrate a ROS with networked communications to share the data. This cyber-physical nature exposes the ROS to cyber attacks. This chapter proposes an integrated cyber-physical solution to secure control of ROS agents using impact-aware lightweight cryptography and cyber-aware control design. We use the cyber states to capture the well-being of the cyber system under the lightweight encryption scheme. To model the incomplete information of the defender on the cyber state, we use a Partially Observed Markov Decision Process (POMDP) to design an impact-aware defense mechanism that makes the ROS resilient to the attacks and mitigates the cyber-physical risks. Finally, we show that the proposed scheme provides a high-confidence control of delay-sensitive ROS in the numerical experiments. The results also show a strong inter-dependency between physical parameters and cyber performance.",,Secure and Resilient Control of ROSs,-,,,,YES,,,,,YES,,
S1973,1,Forward,journalArticle,2022,"Wang, Yuanzhe; Liu, Xinghua; Kang, Yu; Ge, Shuzhi Sam",IEEE Systems Journal,10.1109/JSYST.2020.3043008,,"This article addresses the resilient relative pose estimation problem for multiple mobile robot systems against abnormal sensor measurements. Motivated by the fact that in real implementations, sensors used for neighboring robot detection, such as stereo camera, laser range finder, etc., may suffer from unpredictable anomalies, a resilient relative pose estimation approach is proposed such that each robot can obtain satisfactory relative pose estimates of its neighbors for further coordination algorithm design. In the proposed approach, the optimal Kalman estimate is decomposed as a weighted sum of local state estimates, based on which a convex optimization problem is formulated to generate the resilient estimation. Unlike most of the existing approaches investigating similar problems, which assume that the statistics or the bound of anomalies is known in advance, our proposed approach is not limited by this assumption. The effectiveness of the proposed method has been validated by numerical simulations and real robot experiments. It has been demonstrated that the proposed approach is comparable to the Kalman filter in the absence of sensor anomalies, while boundedness of the relative pose estimation error can be guaranteed under abnormal observations.",Uncertainty; Kalman filters; Robot sensing systems; Robot kinematics; Robots; Mobile robots; Multirobot system; Pose estimation; resilient localization; sensor anomaly,Anomaly Resilient Relative Pose Estimation for Multiple Nonholonomic Mobile Robot Systems,-,,,,YES,,,,,YES,,
S1974,1,Forward,conferencePaper,2021,"Ivanou, Mikhail; Mikhel, Stanislav; Maloletov, Alexander","2021 International Conference ""Nonlinearity, Information and Robotics"" (NIR)",10.1109/NIR52917.2021.9666141,,"The Robot Operating System (ROS) has established itself as a useful set of software libraries and tools that can help to build robot applications. It provides services such as hardware abstraction, low-level device management, implementation of frequently used functions, inter-process message passing, and package management. ROS is good for small static research environments, however, it does not scale so well to large real-world applications. Besides, there is no security model, the test approach is unclear, the library versions can be incompatible. The paper presents a survey, the results of which show that many ROS users have problems with such modern programming techniques as testing or automatic deployment. Nowadays, many systems based on modern programming paradigms are developed by leading companies, and there is a lot of good open-source software out there. An application can be built without writing a lot of code, one just needed to combine high-quality libraries with necessary functionality. This paper intends to show how to build a ROS-like system using modern technologies, such as microservices and message queues, in a simple way with high quality and functionality using an example of the RhoMBus framework.",Programming; Security; microservice; cloud robotics; ROS; Operating systems; Writing; robot system; Message passing; message queue; Microservice architectures; RhoMBus; Software libraries,ROS-like framework using modern development concepts and microservices,-,,,,YES,,,,,YES,,
S1975,1,Forward,journalArticle,2022,"Alshamrani, Sultan S.; Alkhudadi, Bdour A.; Almtrafi, Sara M.",Security and Communication Networks,10.1155/2022/8045874,https://www.hindawi.com/journals/scn/2022/8045874/,"Robots have improved human life and increased the efficiency of performance in tasks that require precision and effort. For example, surgical robots are now used to perform precise surgical procedures and give accurate results. Moreover, robots are also used in elderly care to ease their lives. Perhaps there can even be self-driving cars that could deliver a person to their destination without the need of a driver. So it is very important to mention that these robots should be secure in terms of security for human life. Hence, this paper aims to explore the published studies on robots and their various security vulnerabilities. We review the most prominent weaknesses in the robotic operating system (ROS) and discuss some types of attacks against these robots. Also, this paper discusses the security enhancements to protect ROS that researchers have suggested protecting against some of the attacks and vulnerabilities that may occur on these robots. The primary findings of this work are to generate system copies for backup as well as encryption to protect against information disclosure. Also, a dynamic model is needed to detect and mitigate attacks that may occur in a physical manner, such as injecting malware into robots.",,Cyberattacks on Self-Driving Cars and Surgical and Eldercare Robots,-,,,,YES,,,,,YES,,
S1976,1,Forward,conferencePaper,2021,"Jacobsen, Rune Hylsberg; Marandi, Ali",MILCOM 2021 - 2021 IEEE Military Communications Conference (MILCOM),10.1109/MILCOM52596.2021.9652900,,"Autonomous Unmanned Aerial Vehicles (UAVs) find increasing use in the civil airspace where multi-UAV systems are deployed to perform operations supervised by remote control facilities. Since these multi-UAV systems operate in public locations and connect using open communication standards, it raises significant security concerns. While most UAV designers befittingly deal with the complexity of autonomy, communication, and control, they often ignore to consider system security aspects in the early design phase. To support the security design process of multi-UAV systems, this paper provides an analysis of cybersecurity threats of multi-UAV systems based on the STRIDE model. The identified threats are subsequently linked with a risk assessment to be prioritized according to severity. We conclude by establishing a set of security design recommendations for connected inspection UAVs to contribute with guidance for the design of future multi-UAV systems.",Protocols; Conferences; Inspection; risk assessment; Safety; Intrusion detection; drone; Autonomous aerial vehicles; Military communication; security management; threat model; Unmanned aerial vehicle,Security Threats Analysis of the Unmanned Aerial Vehicle System,-,,,,YES,,,,,YES,,
S1982,1,Forward,journalArticle,2022,"Karimoddini, Ali; Hailemichael, Abel; Jamshidi, Mo",Journal of Intelligent & Fuzzy Systems,10.3233/JIFS-210341,https://content.iospress.com/articles/journal-of-intelligent-and-fuzzy-systems/ifs210341,"Fuzzy logic controllers can handle complex systems by incorporating expert’s knowledge in the absence of formal mathematical models. Further, fuzzy logic controllers can effectively capture and accommodate uncertainties that are inherent in real-wor",,FLC-ROS: A generic and configurable ROS package for developing fuzzy logic controllers,-,,,,YES,,,,,YES,,
S1983,1,Forward,journalArticle,2022,"Karimoddini, Ali; Hailemichael, Abel; Jamshidi, Mo",Journal of Intelligent & Fuzzy Systems,10.3233/JIFS-210341,https://content.iospress.com/articles/journal-of-intelligent-and-fuzzy-systems/ifs210341,"Fuzzy logic controllers can handle complex systems by incorporating expert’s knowledge in the absence of formal mathematical models. Further, fuzzy logic controllers can effectively capture and accommodate uncertainties that are inherent in real-wor",,FLC-ROS: A generic and configurable ROS package for developing fuzzy logic controllers,-,,,,YES,,,,,YES,,
S1989,1,Forward,bookSection,2017,"Koubaa, Anis; Alajlan, Maram; Qureshi, Basit",Robot Operating System (ROS): The Complete Reference  (Volume 2),,https://doi.org/10.1007/978-3-319-54927-9_8,"The integration of robots with the Internet is nowadays an emerging trend, as new form of the Internet-of-Things (IoT). This integration is crucially important to promote new types of cloud robotics applications where robots are virtualized, controlled and monitored through the Internet. This paper proposes ROSLink, a new protocol to integrate Robot Operating System (ROS) enabled-robots with the IoT. The motivation behind ROSLink is the lack of ROS functionality in monitoring and controlling robots through the Internet. Although, ROS allows control of a robot from a workstation using the same ROS master, however this solution is not scalable and rather limited to a local area network. Solutions proposed in recent works rely on centralized ROS Master or robot-side Web servers sharing similar limitations. Inspired from the MAVLink protocol, the proposed ROSLink protocol defines a lightweight asynchronous communication protocol between the robots and the end-users through the cloud. ROSLink leverages the use of a proxy cloud server that links ROS-enabled robots with users and allows the interconnection between them. ROSLink performance was tested on the cloud and was shown to be efficient and reliable.",Internet-of-Things; Mobile robots; Cloud robotics; Robot Operating System (ROS); Protocol Design; ROSLink,ROSLink: Bridging ROS with the Internet-of-Things for Cloud Robotics,-,,,,YES,,,,,YES,,
S1990,1,Forward,journalArticle,2020,"Cañas, José M.; Perdices, Eduardo; García-Pérez, Lía; Fernández-Conde, Jesús",Applied Sciences,10.3390/app10217419,https://www.mdpi.com/2076-3417/10/21/7419,"This paper presents an open-access platform for practical learning of intelligent robotics in engineering degrees: Robotics-Academy. It comprises a collection of exercises including recent service robot applications in real life, with different robots such as autonomous cars, drones or vacuum cleaners. It uses Robot Operating System (ROS) middleware, the de facto standard in robot programming, the 3D Gazebo simulator and the Python programming language. For each exercise, a software template has been developed, performing all the auxiliary tasks such as the graphical interface, connection to the sensors and actuators, timing of the code, etc. This also hosts the student’s code. Using this template, the student just focuses on the robot intelligence (for instance, perception and control algorithms) without wasting time on auxiliary details which have little educational value. The templates are coded as ROS nodes or as Jupyter Notebooks ready to use in the web browser. Reference solutions for illustrative purposes and automatic assessment tools for gamification have also been developed. An introductory course to intelligent robotics has been elaborated and its contents are available and ready to use at Robotics-Academy, including reactive behaviors, path planning, local/global navigation, and self-localization algorithms. Robotics-Academy provides a valuable complement to master classes in blended learning, massive online open courses (MOOCs) and online video courses, devoted to addressing theoretical content. This open educational tool connects that theory with practical robot applications and is suitable to be used in distance education. Robotics-Academy has been successfully used in several subjects on undergraduate and master’s degree engineering courses, in addition to a pre-university pilot course.",distance learning; engineering education; intelligent robotics; open educational tool,A ROS-Based Open Tool for Intelligent Robotics Education,-,,,,YES,,,,,YES,,
S1991,1,Forward,journalArticle,2016,"Li, Xin; Martínez, José-Fernán; Rodríguez-Molina, Jesús; Martínez, Néstor Lucas",Sensors,10.3390/s16020190,https://www.mdpi.com/1424-8220/16/2/190,"Currently, there is a plethora of solutions regarding interconnectivity and interoperability for networked robots so that they will fulfill their purposes in a coordinated manner. In addition to that, middleware architectures are becoming increasingly popular due to the advantages that they are capable of guaranteeing (hardware abstraction, information homogenization, easy access for the applications above, etc.). However, there are still scarce contributions regarding the global state of the art in intermediation architectures for underwater robotics. As far as the area of robotics is concerned, this is a major issue that must be tackled in order to get a holistic view of the existing proposals. This challenge is addressed in this paper by studying the most compelling pieces of work for this kind of software development in the current literature. The studied works have been assessed according to their most prominent features and capabilities. Furthermore, by studying the individual pieces of work and classifying them several common weaknesses have been revealed and are highlighted. This provides a starting ground for the development of a middleware architecture for underwater robotics capable of dealing with these issues.",survey; middleware; Autonomous Surface Vehicle (ASV); Autonomous Underwater Vehicles (AUV); underwater robotics,A Survey on Intermediation Architectures for Underwater Robotics,-,,,,YES,,,,,YES,,
S1992,1,Forward,journalArticle,2020,"Cañas, José M.; Martín-Martín, Diego; Arias, Pedro; Vega, Julio; Roldán-Álvarez, David; García-Pérez, Lía; Fernández-Conde, Jesús",Electronics,10.3390/electronics9122163,https://www.mdpi.com/2079-9292/9/12/2163,"This article presents a full course for autonomous aerial robotics inside the RoboticsAcademy framework. This “drone programming” course is open-access and ready-to-use for any teacher/student to teach/learn drone programming with it for free. The students may program diverse drones on their computers without a physical presence in this course. Unmanned aerial vehicles (UAV) applications are essentially practical, as their intelligence resides in the software part. Therefore, the proposed course emphasizes drone programming through practical learning. It comprises a collection of exercises resembling drone applications in real life, such as following a road, visual landing, and people search and rescue, including their corresponding background theory. The course has been successfully taught for five years to students from several university engineering degrees. Some exercises from the course have also been validated in three aerial robotics competitions, including an international one. RoboticsAcademy is also briefly presented in the paper. It is an open framework for distance robotics learning in engineering degrees. It has been designed as a practical complement to the typical online videos of massive open online courses (MOOCs). Its educational contents are built upon robot operating system (ROS) middleware (de facto standard in robot programming), the powerful 3D Gazebo simulator, and the widely used Python programming language. Additionally, RoboticsAcademy is a suitable tool for gamified learning and online robotics competitions, as it includes several competitive exercises and automatic assessment tools.",Python; gamification; distance learning; drone programming; open educational platform; ROS middleware,Open-Source Drone Programming Course for Distance Engineering Education,-,,,,YES,,,,,YES,,
S1994,1,Forward,journalArticle,2016,"Francesca, Gianpiero; Birattari, Mauro",Frontiers in Robotics and AI,,https://www.frontiersin.org/articles/10.3389/frobt.2016.00029,"Automatic design is a promising approach to the design of control software for robot swarms. In an automatic design method, the design problem is cast into an optimization problem and is addressed using an optimization algorithm. In this article, we review studies in which automatic design methods are successfully applied. In particular, we focus our attention on how automatic methods are empirically assessed. An apparent issue that emerges from our review is that a solid, well-established, and consistently applied empirical practice is still missing. For example, studies that propose new methods and ideas do not typically provide any comparison with existing ones. We maintain that the lack of a proper empirical practice hinders the progress of the domain. In this article, we pursue two goals: we highlight the notable achievements in the automatic design of control software for robot swarms and we discuss the challenges to be overcome to establish a proper empirical practice for the domain.",,Automatic Design of Robot Swarms: Achievements and Challenges,-,,,,YES,,,,,YES,,
S1995,1,Forward,journalArticle,2021,"Testa, Andrea; Camisa, Andrea; Notarstefano, Giuseppe",IEEE Robotics and Automation Letters,10.1109/LRA.2021.3061366,,"In this letter, we introduce ChoiRbot, a toolbox for distributed cooperative robotics based on the novel Robot Operating System (ROS) 2. ChoiRbot provides a fully-functional toolset to execute complex distributed multi-robot tasks, either in simulation or experimentally, with a particular focus on networks of heterogeneous robots without a central coordinator. Thanks to its modular structure, ChoiRbot allows for a highly straight implementation of optimization-based distributed control schemes, such as distributed optimal control, model predictive control, task assignment, in which local computation and communication with neighboring robots are alternated. To this end, the toolbox provides functionalities for the solution of distributed optimization problems. The package can be also used to implement distributed feedback laws that do not need optimization features but do require the exchange of information among robots. The potential of the toolbox is illustrated with simulations and experiments on distributed robotics scenarios with mobile ground robots. The ChoiRbot toolbox is available at https://github.com/OPT4SMART/choirbot.",Computer architecture; Task analysis; Optimization; Python; Decentralized control; Robot kinematics; Distributed robot systems; optimization and optimal control; Predictive control; software architecture for robotic and automation,ChoiRbot: A ROS 2 Toolbox for Cooperative Robotics,-,,,,YES,,,,,YES,,
S1996,1,Forward,conferencePaper,2019,"Wiedmeyer, Wolfgang; Mende, Michael; Hartmann, Dennis; Bischoff, Rainer; Ledermann, Christoph; Kroger, Torsten",2019 International Conference on Robotics and Automation (ICRA),10.1109/ICRA.2019.8793976,,"This paper introduces the KUKA Robot Learning Lab at KIT - a remotely accessible robotics testbed. The motivation behind the laboratory is to make state-of-the-art industrial lightweight robots more accessible for education and research. Such expensive hardware is usually not available to students or less privileged researchers to conduct experiments. This paper describes the design and operation of the Robot Learning Lab and discusses the challenges that one faces when making experimental robot cells remotely accessible. Especially safety and security must be ensured, while giving users as much freedom as possible when developing programs to control the robots. A fully automated and efficient processing pipeline for experiments makes the lab suitable for a large amount of users and allows a high usage rate of the robots.",Hardware; Robot sensing systems; Service robots; Collision avoidance; Mobile robots; Robot learning,Robotics Education and Research at Scale: A Remotely Accessible Robotics Development Platform,-,,,,YES,,,,,YES,,
S1997,1,Forward,conferencePaper,2018,"Zubrycki, Igor; Granosik, Grzegorz",Robotics in Education,10.1007/978-3-319-62875-2_27,,"With the cloud computing taking root in the general computing ecosystem we can use many cloud computing tools to support teaching robotics to different groups. In this paper, we provide a general overview of using cloud tools, provide a review of some of them as well as give some recommendations based on our experience.",,Teaching Robotics with Cloud Tools,-,,,,YES,,,,,YES,,
S1998,1,Forward,conferencePaper,2021,"Rajapaksha, Dinodi Divyanjana; Mohamed Nuhuman, Mohamed Nafeel; Gunawardhana, Sewmini Dananji; Sivalingam, Atchuthan; Mohamed Hassan, Mohamed Nimran; Rajapaksha, Samantha; Jayawardena, Chandimal",2021 6th International Conference on Information Technology Research (ICITR),10.1109/ICITR54349.2021.9657337,,We have proposed a web-based approach to controlling robots in simulation. This web application will provide a simple user interface to demonstrate the various capabilities of robots. It is intended to be used by beginners who are interested in working with the Robot Operating System(ROS). The evaluation of the system is specifically achieved with Turtlebot3 waffle pi model. All the robot's functionalities are displayed in a simulated environment so users do not need an actual robot or direct access to ROS. The application covers various manual and autonomous functionalities of the robot while trying to be as interactive as possible. Each interface provides an overview of the function and basic implementation details. The goal of the proposed system is to make robotics accessible to anyone with web access and to mitigate the need to have a specific computer environment and knowledge in programming to access Robotics.,Programming; Navigation; Linux; Manuals; User interfaces; Operating systems; User experience,Web Based User-Friendly Graphical Interface to Control Robots with ROS Environment,-,,,,YES,,,,,YES,,
S1999,1,Forward,journalArticle,2021,"Villegas-Ch., William; García-Ortiz, Joselin; Sánchez-Viteri, Santiago",Electronics,10.3390/electronics10101192,https://www.mdpi.com/2079-9292/10/10/1192,"Education is one of the sectors that improves the future of societies; unfortunately, the pandemic generated by coronavirus disease 2019 has caused a variety of problems that directly affect learning. Universities have found it necessary to begin a transition towards remote or online educational models. To do so, the only method that guarantees the continuity of classes is using information and communication technologies. The transition in the foreground points to the use of technological platforms that allow interaction and the development of classes through synchronous sessions. In this way, it has been possible to continue developing both administrative and academic activities. However, in effective education, there are factors that create an ideal environment where the generation of knowledge is possible. By moving from traditional educational models to remote models, this environment has been disrupted, significantly affecting student learning. Identifying the factors that influence academic performance has become the priority of universities. This work proposes the use of intelligent techniques that allow the identification of the factors that affect learning and allow effective decision-making that allows improving the educational model.",artificial intelligence; remote education; WEKA,Identification of the Factors That Influence University Learning with Low-Code/No-Code Artificial Intelligence Techniques,-,,,,YES,,,,,YES,,
S2000,1,Forward,conferencePaper,2017,"Banduka, Maja M. Lutovac",2017 25th Telecommunication Forum (℡FOR),10.1109/℡FOR.2017.8249435,,"In designing robot control user interfaces it is not sufficient to simply focus on providing detailed and complete control capability, but ergonomy of use should also be taken into account. Resources in the robotics field are limited for a common user to access and demand deep knowledge of robot-specific programming paradigms. For these reasons, it is not often possible for inexperience students to become familiar with programming and control of complex robotic systems in a practical manner. This paper presents a new method for remote robot programming, control and monitoring independently of user's location by using smart phones, which focuses on ease-of-use, intuitiveness and minimizing the users' cognitive load while maintains abilities for accurately and efficiently programming and control. With the application of the proposed solution in education, the ability to work with inaccessible robotics systems and equipment through the intuitive virtual laboratories, independent on the user's location, is provided and thereby the quality of gaining knowledge is significantly improved.",Monitoring; Android; Smart phones; monitoring; Service robots; Programming profession; intuitive programming; remote control,Software system for remote robot control and monitoring based on android operating system and wireless communication,-,,,,YES,,,,,YES,,
S2001,1,Forward,conferencePaper,2019,"Hong, Hansi; Wen, Zifan; Bi, Sheng; Zhang, Yue; Yang, Wenxing","2019 IEEE 9th Annual International Conference on CYBER Technology in Automation, Control, and Intelligent Systems (CYBER)",10.1109/CYBER46603.2019.9066498,,"With the rise of the Internet of Things(IoT), human-robot interaction between robots and humans has become one of the hotspots in the field of robotics. Thus, we present RoverOS, an integration WebSocket-based layer which provides bidirectional and stable connection among ROS system and Web client. RoverOS is a simple and uniform application implemented in Java, with which one allows users to control robot moving, get video data and navigate Turtlebot robot in a pre-existing map by the Web client. Basically it acts as an agent between clients and ROS system, forwarding messages via ros topics. RoverOS performance was tested on Turtlebot2 and Google browser. And RoverOS was shown to be efficient and stable.",Monitoring; Servers; Java; Navigation; Real-time systems; Robot kinematics; ROS; Mobile robot; Web client; WebSocket,RoverOS: Linking ROS with WebSocket for moblie robot,-,,,,YES,,,,,YES,,
S2002,1,Forward,conferencePaper,2018,"Michieletto, Stefano; Pagello, Enrico",2018 IEEE International Conference on Autonomous Robot Systems and Competitions (ICARSC),10.1109/ICARSC.2018.8374179,,"This paper presents a graduate course project based on a challenging industrial task as a way to learn basic concepts in robotics. The students had to face a simplified version of a task proposed as part of an European Competition. The general aim is to identify an object and place a manipulator in a certain target position with respect to it. Students have to use information provided by a stereo camera in order to guarantee a good pose estimation. The object is not placed in a fixed and predefined spot, but the pose can vary in a range within a maximum of 5 cm in position and 3 degrees in rotation on each direction. The learning objectives of both course and project are introduced and compared with the students' background. We discuss the solutions proposed by the students, together with the amount of time they and their instructors dedicated to solve the task. Answers to a survey have been collected and discussed in order to better evaluate the students' experience.",Task analysis; Organizations; Conferences; Industries; Service robots; ROS; Autonomous robots; Industry 4.0; Educational Robotics; Industrial Tasks; Project-Based Learning; Robotics Competitions,Competitions and industrial tasks as a way to learn basic concepts in robotics,-,,,,YES,,,,,YES,,
S2003,1,Forward,conferencePaper,2018,"Cervera, Enric; Casañ, Gustavo; Tellez, Ricardo",RoboCup 2017: Robot World Cup XXI,10.1007/978-3-030-00308-1_15,,"Possibly the most appealing aspect of RoboCup is working with real robots, specially for young people. Yet as the complexity of the task increases, the effort in software development becomes higher, and a simulation testbed can be a valuable tool for prototyping and testing software solutions prior to their implementation on a real robot. In fact, several RoboCup leagues feature both real and virtual competitions. In addition, the RoboCup community could benefit from the cooperation and sharing of experiences among users in an online worldwide platform. We present a simulation tool based on the cloud, which can model complex robots off the shelf by using only a web browser as the base system for learning robotics, and running competitions. Such a platform minimizes costs and the troubles associated with different operating systems, while providing a rich experience of testing, with the possibility of a straightforward transfer to a real robot. Moreover, users can easily share their simulations for cooperative learning.",Simulation; Cloud robotics,Cloud Simulations for RoboCup,-,,,,YES,,,,,YES,,
S2005,1,Forward,conferencePaper,2018,"Favario, Leonardo","2018 IEEE International Conference on Teaching, Assessment, and Learning for Engineering (TALE)",10.1109/TALE.2018.8615243,,"In the last couple of decades, remote learning has represented a clear advantage both as a primary and as a support tool. However, a complete remote experience loses the practical aspects which are usually acquired when working with other peers inside a laboratory facility. As such, in this paper a novel remote laboratory approach is introduced. Starting from a very practical issue, the document underlines which technical solutions have been taken into consideration in order to offer a flawless overall learning experience to the users. The integration of this tool inside an already existing e-learning platform allows to make use of some of the already existing contents and produce new open educational resources which can benefit the whole community of learners.",Computer architecture; Programming; Tools; Python; Robots; distance learning; learning management system; Remote laboratories; remote laboratory; remote robotics,Remote Programming Environments: the Robotic Laboratory Case,-,,,,YES,,,,,YES,,
S2006,1,Forward,journalArticle,2019,"Aarizou, Meriem L.; Berrached, Nasr-Eddine","International Journal of Control, Automation and Systems",10.1007/s12555-018-0047-4,https://doi.org/10.1007/s12555-018-0047-4,"The Robotic Operating System (ROS) has provided a set of packages for Networked Telerobotic Systems (NTS) to transport high-bandwidth ROS topics over a websocket communication. The main concern was to transport high-bandwidth sensory and kinematic information over the web with a smaller bandwidth usage and a lower time-delay. Yet their solution for transporting kinematic data over the web is not a low-bandwidth-friendly solution. It sends kinematic transforms only on demand which is certainly a better solution than sending a constant stream of data, but not optimal since some of this data is secondary and can be discarded.",robot operating system; Bandwidth consumption; networked telerobotic systems; robot web tools; Web-Socket,ROS-based Telerobotic Application for Transmitting High-bandwidth Kinematic Data Over a Limited Network,-,,,,YES,,,,,YES,,
S2007,1,Forward,conferencePaper,2020,"Pacheco, Hugo; Macedo, Nuno",2020 Fourth IEEE International Conference on Robotic Computing (IRC),10.1109/IRC.2020.00045,,"Robotics is very appealing and is long recognized as a great way to teach programming, while drawing inspiring connections to other branches of engineering and science such as maths, physics or electronics. Although this symbiotic relationship between robotics and programming is perceived as largely beneficial, educational approaches often feel the need to hide the underlying complexity of the robotic system, but as a result fail to transmit the reactive essence of robot programming to the roboticists and programmers of the future. This paper presents ROSY, a novel language for teaching novice programmers through robotics. Its functional style is both familiar with a high-school algebra background and a materialization of the inherent reactive nature of robotic programming. Working at a higher-level of abstraction also teaches valuable design principles of decomposition of robotics software into collections of interacting controllers. Despite its simplicity, ROSY is completely valid Haskell code compatible with the ROS ecosystem. We make a convincing case for our language by demonstrating how non-trivial applications can be expressed with ease and clarity, exposing its sound functional programming foundations, and developing a web-enabled robot programming environment.",Training; Software; Robot programming; Functional programming; Programming profession; functional reactive programming; Physics; robot programming; functional programming; introductory programming; Symbiosis,ROSY: An elegant language to teach the pure reactive nature of robot programming,-,,,,YES,,,,,YES,,
S2008,1,Forward,conferencePaper,2018,"Yu, Xinguo; Gao, Lvzhou; He, Bin; Shao, Xiaowei",Recent Developments in Mechatronics and Intelligent Robotics,10.1007/978-3-319-65978-7_72,,"This paper develops a ROS-based mobile platform for users to develop their own educational robots. This platform adopts a three-layer architecture and each layer provides one aspect of sharing functions of educational mobile robots. The lowest layer provides the sharing functions of mobility; the middle layer provides the sharing functions of software functions; the upper layer provides the sharing functions of educational clouds. The three-layer architecture can have several good properties: easy of redevelopment, rich of function, and low cost. The experiments show that the platform of educational robots developed in this paper can support the research and development of motion control, vision, and dialogue.",Educational robots; ROS; Sensor integration; Software framework,Design and Implementation of Platform of Educational Mobile Robots Based on ROS,-,,,,YES,,,,,YES,,
S2009,1,Forward,conferencePaper,2021,"Chu, Jian; Bakshi, Soovadeep; Qin, Hansen; Yan, Zeyu; Chen, Dongmei",,10.1115/DSCC2020-3334,https://heattransfer.asmedigitalcollection.asme.org/DSCC/proceedings/DSCC2020/84270/V001T16A003/1096514,,,An Integrated Hardware and Software Platform for Control of Automatic Ground Vehicles,-,,,,YES,,,,,YES,,
S2011,1,Forward,conferencePaper,2022,"Roldán-Álvarez, David; Mahna, Sakshay; Cañas, José M.",Robotics in Education,10.1007/978-3-030-82544-7_23,,"This paper presents the new release of the Robotics Academy learning framework and the open course on Intelligent Robotics available on it . The framework hosts a collection of practical exercises of robot programming for engineering students and teachers at universities. It has evolved from an open tool, which the users had to install on their machines, to an open web platform, simplifying the user’s experience. It has been redesigned with the adoption of state-of-the-art web technologies and DevOps that make it cross-platform and scalable. The web browser is the new frontend for the users, both for source code editing and for the monitoring GUI of the exercise execution. All the software dependences are already preinstalled in a container, including the Gazebo simulator. The proposed web platform provides a free and nice way for teaching Robotics following the learn-by-doing approach. It is also a useful complement for remote educational robotics.",Simulation; Remote educational robotics; Web-based robotics,A ROS-based Open Web Platform for Intelligent Robotics Education,-,,,,YES,,,,,YES,,
S2012,1,Forward,conferencePaper,2021,"Kerem Erdoğmuş, Alim; Yayan, Ugur",2021 International Conference on INnovations in Intelligent SysTems and Applications (INISTA),10.1109/INISTA52262.2021.9548503,,"With the onset of the COVID-19 epidemic, distance education technologies have become critical for the whole world. With the development of these technologies, it is now possible for us to access educational tools and contents from anywhere, anytime. We see that robotic systems are also increasing in importance in this age of isolation. This situation requires that robotic education be expanded and made easily accessible. In this study, a few examples of mobile robots that can be used for robotic education and the virtual robotics laboratory system Uplat, which will make the use of these robots quite accessible, are described. The system allows users (or students) to access the virtual robotics lab via the web, control the simulated robots through interfaces, analyze and evaluate the experimental results. Compared to traditional learning methods, UPlat is an easier and better learning platform with open-source ROS tutorials. These tutorials can be launched from anywhere without dealing with complex Linux and ROS installations. All tools required for training are presented in a simplified interface, taking user experiences into account. These tools are presented to the user through the web interface using cloud technology and container technology. In this system, task trainings of four different types of mobile robots (EvaMars, EvaSec, ATEKS and AGV-OTA) designed to be used in many different robotic fields are presented with detailed learning outcomes. Thanks to these robots and improved robotics trainings, a wide perspective of robotics usage will be presented to those who will receive training in this field.",Training; Linux; Tutorials; Laboratories; Learning systems; Technological innovation; Tools; mobile robots; robotics; robot operating system; autonomous guided vehicles; virtual robotic laboratories,Virtual Robotic Laboratory Compatible Mobile Robots for Education and Research,-,,,,YES,,,,,YES,,
S2016,1,Forward,bookSection,2022,"Roldán-Álvarez, David; Mahna, Sakshay; Cañas, José M.",Robotics in Education,,https://link.springer.com/10.1007/978-3-030-82544-7_23,"This paper presents the new release of the Robotics Academy learning framework and the open course on Intelligent Robotics available on it for anyone. The framework hosts a collection of practical exercises of robot programming for engineering students and teachers at universities. It has evolved from an open tool, which the users had to install on their machines, to an open web platform, simplifying the user’s experience. It has been redesigned with the adoption of state-of-the-art web technologies and DevOps that make it multiplatform and scalable. The web browser is the new frontend for the users, both for source code editing and for the monitoring GUI of the exercise execution. All the software dependences are already preinstalled in a container, including the Gazebo simulator. The proposed web platform provides a free and nice way for teaching Robotics following the learn-by-doing approach. It is also a useful complement for remote educational robotics.",,A ROS-based Open Web Platform for Intelligent Robotics Education,-,,,,YES,,,,,YES,,
S2017,1,Forward,journalArticle,2020,"Cañas, José M.; Martín-Martín, Diego; Arias, Pedro; Vega, Julio; Roldán-Álvarez, David; García-Pérez, Lía; Fernández-Conde, Jesús",Electronics,10.3390/electronics9122163,https://www.mdpi.com/2079-9292/9/12/2163,"This article presents a full course for autonomous aerial robotics inside the RoboticsAcademy framework. This “drone programming” course is open-access and ready-to-use for any teacher/student to teach/learn drone programming with it for free. The students may program diverse drones on their computers without a physical presence in this course. Unmanned aerial vehicles (UAV) applications are essentially practical, as their intelligence resides in the software part. Therefore, the proposed course emphasizes drone programming through practical learning. It comprises a collection of exercises resembling drone applications in real life, such as following a road, visual landing, and people search and rescue, including their corresponding background theory. The course has been successfully taught for five years to students from several university engineering degrees. Some exercises from the course have also been validated in three aerial robotics competitions, including an international one. RoboticsAcademy is also briefly presented in the paper. It is an open framework for distance robotics learning in engineering degrees. It has been designed as a practical complement to the typical online videos of massive open online courses (MOOCs). Its educational contents are built upon robot operating system (ROS) middleware (de facto standard in robot programming), the powerful 3D Gazebo simulator, and the widely used Python programming language. Additionally, RoboticsAcademy is a suitable tool for gamified learning and online robotics competitions, as it includes several competitive exercises and automatic assessment tools.",Python; gamification; distance learning; drone programming; open educational platform; ROS middleware,Open-Source Drone Programming Course for Distance Engineering Education,-,,,,YES,,,,,YES,,
S2018,1,Forward,conferencePaper,2020,"Strait, Megan; Bernotat, Jasmin; Wachsmuth, Sven; Eyssel, Friederike; Goldstone, Robert; Šabanović, Selma",2020 15th ACM/IEEE International Conference on Human-Robot Interaction (HRI),,,"The generalizability of empirical research depends on the reproduction of findings across settings and populations. Consequently, generalizations demand resources beyond that which is typically available to any one laboratory. With collective interest in the joint Simon effect (JSE)-a phenomenon that suggests people work more effectively with humanlike (as opposed to mechanomorphic) robots -we pursued a multi-institutional research cooperation between robotics researchers, social scientists, and software engineers. To evaluate the robustness of the JSE in dyadic human-robot interactions, we constructed an experimental infrastructure for exact, lab-independent reproduction of robot behavior. Deployment of our infrastructure across three institutions with distinct research orientations (well-resourced versus resource-constrained) provides initial demonstration of the success of our approach and the degree to which it can alleviate technical barriers to HRI reproducibility. Moreover, with the three deployments situated in culturally distinct contexts (Germany, the U.S. Midwest, and the Mexico-U.S. Border), observation of a JSE at each site provides evidence its generalizability across settings and populations. CCS CONCEPTS •Human-centered computing →Empirical studies in HCI. ACM Reference Format: Megan Strait, Florian Lier, Jasmin Bernotat, Sven Wachsmuth, Friederike Eyssel, Robert Goldstone, and Selma Šabanović. 2020. A Three-Site Reproduction of the Joint Simon Effect with the NAO Robot. In Proceedings of the 2020 ACM/IEEE Intemational Conference on Human-Robot Interaction (HRI ’ 20), March 23-26, 2020, Cambridge, United Kingdom. ACM, New York, NY, USA, 9 pages. https://doi.org/10.1145/3319502.3374783",Software; Human computer interaction; Robustness; Sociology; Statistics; Human-robot interaction; Reproducibility of results; joint Simon effect; reproducibility,A Three-Site Reproduction of the joint Simon Effect with the NAO Robot,-,,,,YES,,,,,YES,,
S2019,1,Forward,journalArticle,2020,"Mandel, Nicolas; Milford, Michael; Gonzalez, Felipe",Sensors,10.3390/s20164420,https://www.mdpi.com/1424-8220/20/16/4420,"The use of UAVs for remote sensing is increasing. In this paper, we demonstrate a method for evaluating and selecting suitable hardware to be used for deployment of algorithms for UAV-based remote sensing under considerations of Size, Weight, Power, and Computational constraints. These constraints hinder the deployment of rapidly evolving computer vision and robotics algorithms on UAVs, because they require intricate knowledge about the system and architecture to allow for effective implementation. We propose integrating computational monitoring techniques—profiling—with an industry standard specifying software quality—ISO 25000—and fusing both in a decision-making model—the analytic hierarchy process—to provide an informed decision basis for deploying embedded systems in the context of UAV-based remote sensing. One software package is combined in three software–hardware alternatives, which are profiled in hardware-in-the-loop simulations. Three objectives are used as inputs for the decision-making process. A Monte Carlo simulation provides insights into which decision-making parameters lead to which preferred alternative. Results indicate that local weights significantly influence the preference of an alternative. The approach enables relating complex parameters, leading to informed decisions about which hardware is deemed suitable for deployment in which case.",decision making; navigation; UAV; computer architecture; semantics,A Method for Evaluating and Selecting Suitable Hardware for Deployment of Embedded System on UAVs,-,,,,YES,,,,,YES,,
S2020,1,Forward,conferencePaper,2020,"Pineda, Jesus; Altamar-Mercado, Hernando; Romero, Lenny A.; Marrugo, Andrés G.",Dimensional Optical Metrology and Inspection for Practical Applications IX,10.1117/12.2558730,https://www.spiedigitallibrary.org/conference-proceedings-of-spie/11397/113970C/Toward-the-generation-of-reproducible-synthetic-surface-data-in-optical/10.1117/12.2558730.full,"The implementation and generation of synthetic data for testing algorithms in optical metrology are often difficult to reproduce. In this work, we propose a framework for the generation of reproducible synthetic surface data. We present two study cases using the Code Ocean platform, which is based on Docker and Linux container technologies to turn source code repositories into executable images. i) We simulate interference pattern fringe images as acquired by a Michelson interferometric system. The reflectivity changes due to surface topography and roughness. ii) We simulate phase maps from rough isotropic surfaces. The phase data is simultaneously corrupted by noise and phase dislocations. This method relies on Gaussian-Laplacian pyramids to preserve surface features on different scales. The proposed framework enables reproducible surface data simulations, which could increase the impact of algorithm development in optical metrology.",,Toward the generation of reproducible synthetic surface data in optical metrology,-,,,,YES,,,,,YES,,
S2021,1,Forward,conferencePaper,2022,"Oksa, Petri; Salminen, Tero; Lipping, Tarmo",Proceedings of Sixth International Congress on Information and Communication Technology,10.1007/978-981-16-2377-6_86,,"This paper presents solutions for methodological issues that can occur when obtaining face recognition and object detection for a ROS-based (Robot Operating System) open-source platform. Ubuntu 18.04, ROS Melodic and Google TensorFlow 1.14 are used in programming the software environment. TurtleBot2 (Kobuki) mobile robot with additional onboard sensors are used to conduct the experiments. Entire system configurations and specific hardware modifications that were proved mandatory to make out the system functionality are also clarified. Coding (e.g., Python) and sensors installations are detailed both in onboard and remote laptop computers. In experiments, TensorFlow face recognition and object detection are examined by using the TurtleBot2 robot. Results show how objects and faces were detected when the robot is navigating in the previously 2D mapped indoor environment.",Object detection; LiDAR; ROS; 3D sensor; Face recognition; Ubuntu,Obtaining a ROS-Based Face Recognition and Object Detection: Hardware and Software Issues,-,,,,YES,,,,,YES,,
S2022,1,Forward,conferencePaper,2022,"Roldán-Álvarez, David; Mahna, Sakshay; Cañas, José M.",Robotics in Education,10.1007/978-3-030-82544-7_23,,"This paper presents the new release of the Robotics Academy learning framework and the open course on Intelligent Robotics available on it . The framework hosts a collection of practical exercises of robot programming for engineering students and teachers at universities. It has evolved from an open tool, which the users had to install on their machines, to an open web platform, simplifying the user’s experience. It has been redesigned with the adoption of state-of-the-art web technologies and DevOps that make it cross-platform and scalable. The web browser is the new frontend for the users, both for source code editing and for the monitoring GUI of the exercise execution. All the software dependences are already preinstalled in a container, including the Gazebo simulator. The proposed web platform provides a free and nice way for teaching Robotics following the learn-by-doing approach. It is also a useful complement for remote educational robotics.",Simulation; Remote educational robotics; Web-based robotics,A ROS-based Open Web Platform for Intelligent Robotics Education,-,,,,YES,,,,,YES,,
S2023,1,Forward,journalArticle,2022,"Fischer, Tobias; Vollprecht, Wolf; Traversaro, Silvio; Yen, Sean; Herrero, Carlos; Milford, Michael",IEEE Robotics & Automation Magazine,10.1109/MRA.2021.3128367,http://arxiv.org/abs/2104.12910,"We argue that it is beneficial to tightly couple the widely-used Robot Operating System with Conda, a cross-platform, language-agnostic package manager, and Jupyter, a web-based interactive computational environment affording scientific computing. We provide new ROS packages for Conda, enabling the installation of ROS alongside data-science and machine-learning packages with ease. Multiple ROS versions (currently ROS1 Melodic and Noetic, as well as ROS2 Foxy and Galactic) can run simultaneously on one machine, with pre-compiled binaries available for Linux, Windows and OSX, and the ARM architecture (e.g. the Raspberry Pi and the new Apple Silicon). To deal with the large size of the ROS ecosystem, we significantly improved the speed of the Conda solver and build system by rewriting the crucial parts in C++. We further contribute a collection of JupyterLab extensions for ROS, including plugins for live plotting, debugging and robot control, as well as tight integration with Zethus, an RViz like visualization tool. Taken together, RoboStack combines the best of the data-science and robotics worlds to help researchers and developers to build custom solutions for their academic and industrial projects.",Computer Science - Robotics,A RoboStack Tutorial: Using the Robot Operating System Alongside the Conda and Jupyter Data Science Ecosystems,-,,,,YES,,,,,YES,,
S2024,1,Forward,conferencePaper,2022,"Wendt, Arne; Schüppstuhl, Thorsten",2022 IEEE/SICE International Symposium on System Integration (SII),10.1109/SII52469.2022.9708884,,"With the ability to use containers at the edge, they pose a unified solution to combat the complexity of distributed multi-host ROS deployments, as well as individual ROS-node and dependency deployment. The bidirectional communication in ROS poses a challenge to using containerized ROS deployments alongside non-containerized ones spread over multiple machines though. We will analyze the communication protocol employed by ROS, and the suitability of different container networking modes and their implications on ROS deployments. Finally, we will present a layer 7 transparent proxy server architecture for ROS, as a solution to the identified problems. Enabling the use of ROS not only in containerized environments, but proxying ROS between network segments in general.",Runtime; Protocols; Containers; Routing; Maintenance engineering; Image segmentation; System integration,Proxying ROS communications — enabling containerized ROS deployments in distributed multi-host environments,-,,,,YES,,,,,YES,,
S2025,1,Forward,conferencePaper,2021,"Melo, Pedro; Arrais, Rafael; Veiga, Germano",2021 IEEE 19th International Conference on Industrial Informatics (INDIN),10.1109/INDIN45523.2021.9557386,,"There are significant difficulties in deploying and reusing application code within the robotics community. Container technology proves to be a viable solution for such problems, as containers isolate application code and all its dependencies from the surrounding computational environment. They are also light, fast and performant. Manual generation of configuration files required by orchestration tools such as Docker Compose is very time-consuming, especially for more complex scenarios. In this paper a solution is presented to ease the development and deployment of Robot Operating System (ROS) packages using containers, by automatically generating all files used by Docker Compose to both containerize and orchestrate multiple ROS workspaces, supporting multiple ROS distributions and multi-robot scenarios. The proposed solution also generates Dockerfiles and is capable of building new Docker images at run-time, given a list of desired ROS packages to be containerized. Integration with existing Docker images is supported, even if non-ROS-related. After an analysis of existing solutions and techniques for containerizing ROS nodes, the multi-stage pipeline adopted by the proposed solution for file generation is detailed. Then, a real usage example of the proposed tool is presented, showcasing how it an aid both the development and deployment of new ROS packages and features.",Conferences; Automation; Containers; Docker; Buildings; Manuals; Robotics; Service robots; ROS; Operating systems; Pipelines; Codes,Development and Deployment of Complex Robotic Applications using Containerized Infrastructures,-,,,,YES,,,,,YES,,
S2026,1,Forward,bookSection,2022,"Roldán-Álvarez, David; Mahna, Sakshay; Cañas, José M.",Robotics in Education,,https://link.springer.com/10.1007/978-3-030-82544-7_23,"This paper presents the new release of the Robotics Academy learning framework and the open course on Intelligent Robotics available on it for anyone. The framework hosts a collection of practical exercises of robot programming for engineering students and teachers at universities. It has evolved from an open tool, which the users had to install on their machines, to an open web platform, simplifying the user’s experience. It has been redesigned with the adoption of state-of-the-art web technologies and DevOps that make it multiplatform and scalable. The web browser is the new frontend for the users, both for source code editing and for the monitoring GUI of the exercise execution. All the software dependences are already preinstalled in a container, including the Gazebo simulator. The proposed web platform provides a free and nice way for teaching Robotics following the learn-by-doing approach. It is also a useful complement for remote educational robotics.",,A ROS-based Open Web Platform for Intelligent Robotics Education,-,,,,YES,,,,,YES,,
S2027,1,Forward,journalArticle,2020,"Kumar, Shivesh; Wöhrle, Hendrik; de Gea Fernández, José; Müller, Andreas; Kirchner, Frank",Mechatronics,10.1016/j.mechatronics.2020.102367,https://www.sciencedirect.com/science/article/pii/S0957415820300477,"Parallel mechanisms are used increasingly often as modular subsystem units in various robots and man-machine interfaces for their superior stiffness, payload-to-weight ratio and dynamic properties. This leads to series-parallel hybrid robotic systems which utilize closed loop linkages and parallel kinematic machines as an abstraction of a certain kinematic joint. This paper presents a survey of recently developed series-parallel hybrid robots in various application domains such as legged robotics, humanoids, exoskeletons and industrial automation. In particular, we focus on modular and distributive aspects of such systems with an intention to bring their current design paradigm into focus, which simplifies the robot development process by promoting the effective reuse of hardware and software components and overcomes the shortcomings of traditional serial robots like poor payload capacity and stiffness.",Distributed control; Modeling and control; Modular design; Parallel robots; Series-parallel hybrid robots,A survey on modularity and distributivity in series-parallel hybrid robots,-,,,,YES,,,,,YES,,
S2028,1,Forward,journalArticle,2020,"Muratore, Luca; Laurenzi, Arturo; Mingo Hoffman, Enrico; Tsagarakis, Nikos G.",IEEE Robotics & Automation Magazine,10.1109/MRA.2020.2979954,,"The widespread use of robotics in new application domains beyond industrial workplace settings necessitates systems that demonstrate functionalities far exceeding those of classical industrial robotic machines. These emerging applications involve complex tasks that vary and that must be carried out within a partially unknown environment, requiring autonomy and adaptability that further increase the intricacy of the system software architecture. Meeting the demands and consequent complexity of robotic systems and their control necessitates software infrastructures that can be quickly and seamlessly adapted to these requirements, while providing transparent and standardized interfaces to robotics developers and users.",Computer architecture; Hardware; Complexity theory; Robot sensing systems; Middleware,The XBot Real-Time Software Framework for Robotics: From the Developer to the User Perspective,-,,,,YES,,,,,YES,,
S2029,1,Forward,journalArticle,2020,"Coronado, Enrique; Venture, Gentiane",Sensors,10.3390/s20051500,https://www.mdpi.com/1424-8220/20/5/1500,"This article presents the novel Python, C# and JavaScript libraries of Node Primitives (NEP), a high-level, open, distributed, and component-based framework designed to enable easy development of cross-platform software architectures. NEP is built on top of low-level, high-performance and robust sockets libraries (ZeroMQ and Nanomsg) and robot middlewares (ROS 1 and ROS 2). This enables platform-independent development of Human–Robot Interaction (HRI) software architectures. We show minimal code examples for enabling Publish/Subscribe communication between Internet of Things (IoT) and Robotics modules. Two user cases performed outside laboratories are briefly described in order to prove the technological feasibility of NEP for developing real-world applications. The first user case briefly shows the potential of using NEP for enabling the creation of End-User Development (EUD) interfaces for IoT-aided Human–Robot Interaction. The second user case briefly describes a software architecture integrating state-of-art sensory devices, deep learning perceptual modules, and a ROS -based humanoid robot to enable IoT-aided HRI in a public space. Finally, a comparative study showed better latency results of NEP over a popular state-of-art tool (ROS using rosbridge) for connecting different nodes executed in local-host and local area network (LAN).",artificial intelligence and robotics; human–computer interaction; human–robot interaction; internet of robot things,"Towards IoT-Aided Human–Robot Interaction Using NEP and ROS: A Platform-Independent, Accessible and Distributed Approach",-,,,,YES,,,,,YES,,
S2031,1,Forward,journalArticle,2022,"Aguinaldo, Angeline; Bunker, Jacob; Pollard, Blake; Shukla, Ankit; Canedo, Arquimedes; Quiros, Gustavo; Regli, William",IEEE Transactions on Automation Science and Engineering,10.1109/TASE.2021.3094055,,"RobotCat uses a goal-oriented, declarative approach for robot programming that leverages mathematical representations found in category theory as a way to formally model modularity and behavioral knowledge. We define hierarchical interfaces that require only local modifications when new software or work cell models are introduced, thus making robot programming more interoperable. Note to Practitioners—RoboCat can be put into practice and be beneficial to different stakeholders: 1) a student (or small, individual manufacturer) is in charge of planning the production of a new product. Instead of tedious programming, she sketches out process diagrams using conceptual templates for actions (e.g., “move,” “carry,” “locate”) that can produce vastly more resilient production plans than would normally be expected from someone without many years of experience; 2) a robot platform manufacturer has a new manipulator that they would like to provide to the existing customers. Usually, such an upgrade requires a complex retooling of the fabrication lines to accommodate the new functionality. Further complicating matters, the new manipulator contains third-party hardware and software, requiring a full re-architecting of the integrated system. Rather than a wholesale swap of the old system for the new, the third-party application programming interfaces (APIs) can be systematically translated to fit snuggly within the existing modular system with seamless interoperability; and 3) a company is designing the production process associated with their new product launch and they wish to spread their supply chain across several manufacturing vendors. Rather than writing individual process plans customized for each manufacturer, they compose a high-level plan in a functional language. This plan is compiled into implementations specific to each manufacturer’s systems, without the need for human intervention.",Programming; Task analysis; Interoperability; Robot sensing systems; interoperability; Robots; Manipulators; Robot programming; Category theory; goal-oriented programming; primary: robotics; secondary: CRCL,RoboCat: A Category Theoretic Framework for Robotic Interoperability Using Goal-Oriented Programming,-,,,,YES,,,,,YES,,
S2033,1,Forward,conferencePaper,2021,"Bayramcavus, Ali; Kaya, M. Cagri; Dogru, Ali H.",2021 13th International Conference on Electrical and Electronics Engineering (ELECO),10.23919/ELECO54474.2021.9677712,,"This work presents our proposed solution to provide interoperability among systems that have different microservice architectures. Publish/Subscribe technologies are targeted, specifically Kafka and RabbitMQ. Interoperability is achieved via a gateway tool which is designed as a microservice-based Publish/Subscribe system allowing more than two systems to work together. Experiments are conducted between a Kafka-based and a RabbitMQ-based system. Results indicate the applicability of the gateway under stress, when subjected to tens of thousands of bi-directional messages transmitted per second.",Logic gates; Interoperability; Internet of Things; Stress; Middleware; Microservice architectures; Bidirectional control; Event-Based Architecture; Gateway; Microservice Architecture,Interoperability of Microservice-Based Systems,-,,,,YES,,,,,YES,,
S2035,1,Forward,journalArticle,2017,"Tenorth, Moritz; Beetz, Michael",Artificial Intelligence,10.1016/j.artint.2015.05.010,https://linkinghub.elsevier.com/retrieve/pii/S0004370215000843,"This extended abstract discusses the problem of poor reusability in autonomous system design. We claim that formal semantics for traceability, change information, and synthesis in autonomous system design are necessary to address this problem. Symmetric delta lenses are the proposed construction for modeling these concepts simultaneously. Some initial suggestions for categories that represent knowledge, tasks, and control are provided.",,Representations for robot knowledge in the KnowRob framework,-,,,,YES,,,,,YES,,
S2038,1,Forward,conferencePaper,2021,"Colledanchise, Michele; Cicala, Giuseppe; Domenichelli, Daniele E.; Natale, Lorenzo; Tacchella, Armando",2021 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS51168.2021.9636129,,"In this paper, we enable automated property verification of deliberative components in robot control architectures. We focus on formalizing the execution context of Behavior Trees (BTs) to provide a scalable, yet formally grounded, methodology to enable runtime verification and prevent unexpected robot behaviors. To this end, we consider a message-passing model that accommodates both synchronous and asynchronous composition of parallel components, in which BTs and other components execute and interact according to the communication patterns commonly adopted in robotic software architectures. We introduce a formal property specification language to encode requirements and build runtime monitors. We performed a set of experiments, both on simulations and on the real robot, demonstrating the feasibility of our approach in a realistic application and its integration in a typical robot software architecture. We also provide an OS-level virtualization environment to reproduce the experiments in the simulated scenario.",Computer architecture; Virtualization; Monitoring; Runtime; Software architecture; Robot control; Specification languages,Formalizing the Execution Context of Behavior Trees for Runtime Verification of Deliberative Policies,-,,,,YES,,,,,YES,,
S2039,1,Forward,conferencePaper,2020,"Tzitzis, Anastasios; Filotheou, Alexandros; Siachalou, Stavroula; Tsardoulias, Emmanouil; Megalou, Spyros; Bletsas, Aggelos; Panayiotou, Konstantinos; Symeonidis, Andreas; Yioultsis, Traianos; Dimitriou, Antonis G.",2020 IEEE International Conference on RFID (RFID),10.1109/RFID49298.2020.9244904,,"In this paper we investigate the problem of localizing passive RFID tags by ground robots and drones. We focus on autonomous robots, capable of entering a previously unknown environment, creating a 3D map of it, navigating safely in it, localizing themselves while moving, then localizing all RFID tagged objects and pinpointing their locations in the 3D map with cm accuracy. To the best of our knowledge, this is the first paper that presents the complex joint problem, including challenges from the field of robotics - i) sensors utilization, ii) local and global path planners, iii) navigation, iv) simultaneous localization of the robot and mapping - and from the field of RFIDs - vi) localization of the tags. We restrict our analysis to solutions, involving commercial UHF EPC Gen2 RFID tags, commercial off-the-self RFID readers and 3D real-time-only methods for tag-localization. We briefly present a new method, suitable for real-time 3D inventorying, and compare it with our two recent methods. Comparison is carried out on a new set of experiments, conducted in a multipath-rich indoor environment, where the actual problem is treated; i.e. our prototype robot constructs a 3D map, navigates in the environment, continuously estimates its poses as well as the locations of the surrounding tags. Localization results are given in a few seconds for 100 tags, parsing approximately 100000 measured samples from 4 antennas, collected within 4 minutes and achieving a mean 3D error of 25cm, which includes the error propagating from robotics and the uncertainty related to the ""ground truth"" of the tags' placement.",Navigation; Robot sensing systems; Real-time systems; RFID; robotics; Robots; Drones; Three-dimensional displays; localization; Antenna measurements; inventorying,Real-time 3D localization of RFID-tagged products by ground robots and drones with commercial off-the-shelf RFID equipment: Challenges and Solutions,-,,,,YES,,,,,YES,,
S2040,1,Forward,journalArticle,2021,"Andò, Bruno; Cantelli, Luciano; Catania, Vincenzo; Crispino, Ruben; Guastella, Dario Calogero; Monteleone, Salvatore; Muscato, Giovanni",Robotics,10.3390/robotics10020056,https://www.mdpi.com/2218-6581/10/2/56,"The Internet of Things paradigm envisions the interoperation among objects, people, and their surrounding environment. In the last decade, the spread of IoT-based solutions has been supported in various domains and scenarios by academia, industry, and standards-setting organizations. The wide variety of applications and the need for a higher level of autonomy and interaction with the environment have recently led to the rise of the Internet of Robotic Things (IoRT), where smart objects become autonomous robotic systems. As mentioned in the recent literature, many of the proposed solutions in the IoT field have to tackle similar challenges regarding the management of resources, interoperation among objects, and interaction with users and the environment. Given that, the concept of the IoT pattern has recently been introduced. In software engineering, a pattern is defined as a general solution that can be applied to a class of common problems. It is a template suggesting a solution for the same problem occurring in different contexts. Similarly, an IoT pattern provides a guide to design an IoT solution with the difference that the software is not the only element involved. Starting from this idea, we propose the novel concept of the IoRT pattern. To the authors’ knowledge, this is the first attempt at pattern authoring in the Internet of Robotic Things context. We focus on pattern identification by abstracting examples also in the Ambient Assisted Living (AAL) scenario. A case study providing an implementation of the proposed patterns in the AAL context is also presented and discussed.",obstacle avoidance; assistive robotics; indoor localization; inertial monitoring; IoRT patterns; smart walkers,An Introduction to Patterns for the Internet of Robotic Things in the Ambient Assisted Living Scenario,-,,,,YES,,,,,YES,,
S2041,1,Forward,conferencePaper,2021,"Hossen, Md Abir; Zahir, Ebad; Ata-E-Rabbi, H M; Azam, Md Ali; Rahman, Md Hafizur",2021 IEEE World AI IoT Congress (AIIoT),10.1109/AIIoT52608.2021.9454236,,"This paper introduces a mobile robot that is designed to assist medical professionals in hospitals with daily simple tasks which allow the staff in turn to optimize their resources. A prototype of this robot was deployed at the Bangabandhu Sheikh Mujib Medical University in Bangladesh with funding from the Government of Bangladesh, USAID and UNDP. This robot performed its functions as an Automated Medical Assistant (AMA) by delivering to and interacting with patients and medical staff during its trial phase in 2018. This paper presents the robot to have an intuitive user interface, a user-friendly mode of communication, smart features in its command-and-control system, security, and energy optimization. The smart robot is able to navigate its way to specific patients as well as avoid obstacles and finally navigate back to its charging station once its energy is depleted.",Hospitals; Navigation; Prototypes; Security; Robot sensing systems; User interfaces; ROS; SLAM; Autonomous Robots; Sensor fusion; Human-Robot Interaction; Robot Face; Service Robots,Developing a Mobile Automated Medical Assistant for Hospitals in Bangladesh,-,,,,YES,,,,,YES,,
S2042,1,Forward,journalArticle,2021,"Kilic, Cagri; Martinez R., Bernardo; Tatsch, Christopher A.; Beard, Jared; Strader, Jared; Das, Shounak; Ross, Derek; Gu, Yu; Pereira, Guilherme A. S.; Gross, Jason N.",IEEE Aerospace and Electronic Systems Magazine,10.1109/MAES.2021.3115897,,"Plans for establishing a long-term human presence on the Moon will require substantial increases in robot autonomy and multirobot coordination to support establishing a lunar outpost. To achieve these objectives, algorithm design choices for the software developments need to be tested and validated for expected scenarios such as autonomous in situ resource utilization, localization in challenging environments, and multirobot coordination. However, real-world experiments are extremely challenging and limited for extraterrestrial environment. Also, realistic simulation demonstrations in these environments are still rare and demanded for initial algorithm testing capabilities. To help some of these needs, the NASA Centennial Challenges program established the Space Robotics Challenge Phase 2 (SRC2), which consist of virtual robotic systems in a realistic lunar simulation environment, where a group of mobile robots were tasked with reporting volatile locations within a global map, excavating and transporting these resources, and detecting and localizing a target of interest. The main goal of this article is to share our team's experiences on the design tradeoffs to perform autonomous robotic operations in a virtual lunar environment and to share strategies to complete the mission requirements posed by NASA SRC2 competition during the qualification round. Of the 114 teams that registered for participation in the NASA SRC2, team Mountaineers finished as one of only six teams to receive the top qualification round prize.",Resource management; Software algorithms; NASA; Robot kinematics; Multi-robot systems; Space vehicles; Moon,NASA Space Robotics Challenge 2 Qualification Round: An Approach to Autonomous Lunar Rover Operations,-,,,,YES,,,,,YES,,
S2044,1,Forward,conferencePaper,2021,"Mylonopoulos, George; Chatzistefanou, Aristidis Raptopoulos; Filotheou, Alexandros; Tzitzis, Anastasios; Siachalou, Stavroula; Dimitriou, Antonis G.",2021 IEEE International Conference on RFID Technology and Applications (RFID-TA),10.1109/RFID-TA53372.2021.9617436,,"In this paper, we present a prototype algorithm for tracking and following a moving target through RFID technology by a robot. The robot is equipped with two front facing antennas, which collect phase measurements of the tag’s modulated signal. We consider a direction-finding algorithm, based on particle filter theory, which exploits the phase-measurements to assign weights to the particles. The proposed track-and-follow robot is successfully tested in a laboratory environment and will be deployed inside a museum.",Navigation; Prototypes; RFID; Localization; Target tracking; Tracking; Phase measurement; Simultaneous localization and mapping; Particle filters; Location awareness; Angle of Arrival,"Localization, Tracking and Following a Moving Target by an RFID Equipped Robot",-,,,,YES,,,,,YES,,
S2045,1,Forward,journalArticle,2022,"Trinh, Lan Anh; Ekström, Mikael; Cürüklü, Baran",Journal of Intelligent & Robotic Systems,10.1007/s10846-022-01589-1,https://doi.org/10.1007/s10846-022-01589-1,"In this paper, a novel path planning algorithm for multiple robots using congestion analysis and control is presented. The algorithm ensures a safe path planning solution by avoiding collisions among robots as well as among robots and humans. For each robot, alternative paths to the goal are realised. By analysing the travelling time of robots on different paths using Petri Nets, the optimal configuration of paths is selected. The prime objective is to avoid congestion when routing many robots into a narrow area. The movements of robots are controlled at every intersection by organising a one-by-one passing of the robots. Controls are available for the robots which are able to communicate and share information with each other. To avoid collision with humans and other moving objects (i.e. robots), a dipole field integrated with a dynamic window approach is developed. By considering the velocity and direction of the dynamic obstacles as sources of a virtual magnetic dipole moment, the dipole-dipole interaction between different moving objects will generate repulsive forces proportional to the velocity to prevent collisions. The whole system is presented on the widely used platform Robot Operating System (ROS) so that its implementation is extendable to real robots. Analysis and experiments are demonstrated with extensive simulations to evaluate the effectiveness of the proposed approach.",Obstacle avoidance; Congestion control; Dependable path planning; Dipole field,Dependable Navigation for Multiple Autonomous Robots with Petri Nets Based Congestion Control and Dynamic Obstacle Avoidance,-,,,,YES,,,,,YES,,
S2046,1,Forward,conferencePaper,2021,"Dimitriou, Antonis; Tzitzis, Anastasios; Filotheou, Alexandros; Megalou, Spyros; Siachalou, Stavroula; Chatzistefanou, Aristidis R.; Malama, Andreana; Tsardoulias, Emmanouil; Panayiotou, Konstantinos; Giannelos, Evaggelos; Vasiliadis, Thodoris; Mouroutsos, Ioannis; Karanikas, Ioannis; Petrou, Loukas; Symeonidis, Andreas; Sahalos, John; Yioultsis, Traianos; Bletsas, Aggelos",2021 6th International Conference on Smart and Sustainable Technologies (SpliTech),10.23919/SpliTech52315.2021.9566425,,"This paper presents our latest results of our prototype robots and drones, aiming continuous inventorying and accurate real-time 3D localization of RFID tagged items. We have designed and constructed two ground robots, capable of autonomous inventorying in unknown regions, exploiting state-of-the-art methods from the field of robotics and RF-localization. Furthermore, we present our prototype drone, also capable of 3D inventorying and localization. In addition, we demonstrate the performance of our prototype RFID repeater, which also boosts the read-range of traditional RFID technology. The results of measurements campaigns conducted in different environments for the above prototypes are presented herein.",Prototypes; Internet of Things; Robotics; Real-time systems; RFID; Reliability; Three-dimensional displays; Localization; Location awareness; Inventorying; Measurement uncertainty; Repeaters,"Autonomous Robots, Drones and Repeaters for Fast, Reliable, Low-Cost RFID Inventorying & Localization",-,,,,YES,,,,,YES,,
S2048,1,Forward,conferencePaper,2022,"Kuznetsov, Lev; Kozyr, Polina; Levonevskiy, Dmitriy",Electromechanics and Robotics,10.1007/978-981-16-2814-6_11,,"Most mobile robots which use the operating systems (ROS) employ costmap-based path planner for navigation in environment. Besides the systems, in which robotic devices function in completely autonomous manner, also such systems exist, where user specifies in a self-contained interface the target point for robot motion, without using any costmap-related data. In such settings, the robot sometimes cannot reach the user-specified point because it is treated as an obstacle on the costmap. To solve this problem an algorithm was developed, which accepts the coordinates of the target point, specified through user interface, and finds possible target points in vicinity of the specified one, regarding the predefined distance constraints. Conceptually, the search of possible points consists in looping through costmap cells of the global cost planner in orthogonally related directions from the obtained point and in defining of the preferable target points, upon reaching which the task is considered to be completed. In this paper, the algorithm was tested as part of the navigational module of the robot. Experiments were performed, particularly, in the Gazebo simulation environment; robot model TURTLEBOT3 Waffle Pi was also utilized. The experimental results showed that this module can be combined with any planner. When the value of validation step was set at the minimum value of 0.01 m, it was required no more than 55 ms to find a target point. The minimum duration of such search was 1 ms.",ROS; Path planning; SLAM; Mobile robot; Mobile robotic platform; Robot navigation,Algorithm of Target Point Assignment for Robot Path Planning Based on Costmap Data,-,,,,YES,,,,,YES,,
S2049,1,Forward,journalArticle,2021,"Machado, Carlos Guillermo Miguélez; Marrufo, Ángel Israel Soto; Monarrez, Israel Ulises Ponce; Luna, Francesco García",Revista de Ciencias Tecnológicas,,https://dialnet.unirioja.es/servlet/articulo?codigo=8201464,"Autorías: Carlos Guillermo Miguélez Machado, Ángel Israel Soto Marrufo, Israel Ulises Ponce Monarrez, Francesco García Luna. Localización: Revista de Ciencias Tecnológicas. Nº. 4, 2021. Artículo de Revista en Dialnet.",,Interfaz gráfica para el control de seguimiento de trayectorias de un robot sanitizador en espacios controlados,-,,,,YES,,,,,YES,,
S2051,1,Forward,journalArticle,2021,"Miguélez Machado, Carlos; Marrufo, Ángel; Ponce Monárrez, Israel; Luna, Francesco",Revista de Ciencias Tecnológicas,10.37636/recit.v44353364,,"En el presente trabajo se propone un Desarrollo de Interfaz Gráfica de Usuario para la interacción con un modelo de simulación tridimensional de un robot higienizador en una sala simulada para las pruebas de algoritmos de navegación implementados en el mismo. Al mismo tiempo, se implementan los comportamientos de exploración y planificación de rutas de desinfección. El modelo simulado del robot se basa en la Rueda Omnidireccional Nexus 4WOmni de la que también se propone el modelo cinemático. Además, se propone una interfaz gráfica de usuario para dar comandos básicos al robot simulado. Los resultados de la implementación se comprueban mediante la implementación de algoritmos de navegación al robot, también los comportamientos de exploración, planificación de rutas y seguimiento de trayectoria de desinfección e interacción de la interfaz gráfica con la simulación.",,Interfaz gráfica para el control de seguimiento de trayectorias de un robot sanitizador en espacios controlados,-,,,,YES,,,,,YES,,
S2053,1,Forward,journalArticle,2020,"Nam, Changjoo; Lee, Seokjun; Lee, Jeongho; Cheong, Sang Hun; Kim, Dong Hwan; Kim, Changhwan; Kim, Incheol; Park, Sung-Kee",IEEE Access,10.1109/ACCESS.2020.3003991,,"This paper presents a software architecture for robots providing manipulation services autonomously in human environments. In an unstructured human environment, a service robot often needs to perform tasks even without human intervention and prior knowledge about tasks and environments. For autonomous execution of tasks, varied processes are necessary such as perceiving environments, representing knowledge, reasoning with the knowledge, and planning for task and motion. While developing each of the processes is important, integrating them into a working system for deployment is also important as a robotic system can bring tangible outcomes when it works in real world. However, such an architecture has been rarely realized in the literature owing to the difficulties of a full integration, deployment, understanding high-level goals without human interventions. In this work, we suggest a software architecture that integrates the components necessary to perform tasks by a real robot without human intervention. We show our architecture composed of deep learning based perception, symbolic reasoning, AI task planning, and geometric motion planning. We implement a deep neural network that produces information about the environment, which are then stored in a knowledge base. We implement a reasoner that processes the knowledge to use the result for task planning. We show our implementation of the symbolic task planner that generates a sequence of motion predicates. We implement an interface that computes geometric information necessary for motion planning to execute the symbolic task plans. We describe the deployment of the architecture through the result of lab tests and a public demonstration. The architecture is developed based on Robot Operating System (ROS) so compatible with any robot that is capable of object manipulation and mobile navigation running in ROS. We deploy the architecture to two different robot platforms to show the compatibility.",Computer architecture; Task analysis; Planning; Robot kinematics; Service robots; Cognition; AI reasoning methods; manipulation planning,A Software Architecture for Service Robots Manipulating Objects in Human Environments,-,,,,YES,,,,,YES,,
S2054,1,Forward,journalArticle,2021,"Nam, Changjoo; Cheong, Sang Hun; Lee, Jinhwi; Kim, Dong Hwan; Kim, ChangHwan",IEEE Transactions on Robotics,10.1109/TRO.2020.3047472,,"In this article, we present a task and motion planning method for retrieving a target object from clutter using a robotic manipulator. We consider dense and cluttered environments where some objects must be removed in order to retrieve the target without collisions. To ensure a successful execution, the interplay between task planning (what to remove in what order) and motion planning (how to remove) is crucial. Thus, the task and motion planning approach combining a symbolic task planner and a geometric motion planner becomes one of the major paradigms in manipulation planning. However, motion planning in dense clutter often leads to frequent failures, so repetitive task replanning is inevitable. Although symbolic task planners are general and domain-independent, they do not scale; so we need an efficient task planner specialized for dense clutter for fast completion of tasks. We propose a polynomial-time task planner for object manipulation in clutter that can be combined with any motion planner. We aim to optimize the number of pick-and-place actions which often determines the efficiency of object manipulation tasks. We consider common situations that could occur in clutter: 1) all object locations are known, 2) some hidden objects are revealed while relocating some front objects, and 3) the target is hidden until some objects are removed. Our method is shown to reduce the number of pick-and-place actions compared to baseline methods (e.g., at least 28.0% of reduction in a known static environment with 20 objects). We also deploy the proposed method to two physical robots with vision systems to show that our method can solve real-world problems.",Task analysis; Planning; Robot kinematics; Robots; Collision avoidance; End effectors; task planning; Clutter; Manipulation planning; motion and path planning,Fast and Resilient Manipulation Planning for Object Retrieval in Cluttered and Confined Environments,-,,,,YES,,,,,YES,,
S2055,1,Forward,conferencePaper,2020,"Kreitz, Jason; Lee, Moonyoung; SubPark, Hyun; Oh, Paul Y.; Oh, Jun Ho",2020 10th Annual Computing and Communication Workshop and Conference (CCWC),10.1109/CCWC47524.2020.9031202,,"This paper highlights the implementation of a ROS wrapper for the RB5 collaborative robot, specifically to enable easy sensor integration for use as a research platform. The RB5 is a new, low-cost robotic arm that was developed to be implemented in non-industrial environments. End users can program basic tasks using a tablet-based teaching pendant software. While the current interface allows users to create programs for specific routine tasks, it does not allow for more the development of more robust applications - especially as there is no alternative solution for end users wanting to interact with the robot. The need to provide a more general platform for application led us to developing a Robot Operating System (ROS) interface. This interface abstracts robot commands through simple function calls on the user end, leading to easy control of the robot. In addition, the sensor integration capabilities that ROS provides will allow researchers to test their applications of the RB5 in whichever human collaborative environment they see fit.",Task analysis; Servers; Software; Robot sensing systems; Real-time systems; Robot kinematics; ROS; COBOT; Collaborative Robot; YOLO,Implementing ROS Communications for Sensor Integration with the RB5 Collaborative Robot,-,,,,YES,,,,,YES,,
S2056,1,Forward,conferencePaper,2021,"Lee, Moonyoung; Kwon, Youngsun; Lee, Sebin; Choe, JongHun; Park, Junyong; Jeong, Hyobin; Heo, Yujin; Kim, Min-Su; Sungho, Jo; Yoon, Sung-Eui; Oh, Jun-Ho",2021 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS51168.2021.9636218,,"Vision aided dynamic exploration on bipedal robots poses an integrated challenge for perception and control. Rapid walking motions as well as the vibrations caused by the landing-foot contact-force introduce critical uncertainty in the visual-inertial system, which can cause the robot to misplace its feet placing on complex terrains and even fall over. In this paper, we present a streamlined integration of an efficient geometric footstep planner and the corresponding walking controller for a humanoid robot to dynamically walk across rough terrain at speeds up to 0.3 m/s. To handle perception uncertainty that arises during dynamic locomotion, we present a geometric safety scoring method in our footstep planner to optimally select feasible path candidates. In addition, the real-time performance of the perception pipeline allows for reactive locomotion such as generating a new corresponding swing leg trajectory in mid-gait if a sudden change in the terrain is detected. The proposed perception-control pipeline is evaluated and demonstrated with real experiments using a full-scale humanoid to traverse across various terrains.",Humanoid robots; Uncertainty; Robot sensing systems; Legged locomotion; Pipelines; Aerodynamics; Vibrations,Dynamic Humanoid Locomotion Over Rough Terrain With Streamlined Perception-Control Pipeline,-,,,,YES,,,,,YES,,
S2057,1,Forward,journalArticle,2022,"Delgado, Raimarius; Jo, Yong Hwan; Choi, Byoung Wook",IEEE Transactions on Industrial Informatics,10.1109/TII.2022.3182790,,"This paper presents RT-AIDE, a real-time operating system (RTOS)-Agnostic development environment considering performance evaluation and interoperation with non-real-time (NRT) tasks. Most real-time systems adopt RTOSes owing to their multi-tasking environment and priority-based scheduling. However, selecting for the appropriate RTOS according to application requirements is a complicated process as each RTOS has its own API and semantics. With open-source distributions real-time performance evaluation is also an open problem. RT-AIDE addresses this issue through the portable components to ensure execution across various RTOSes without modifying the source code, which has been proven to reduce development costs and effort as well. We also propose a new metric called real-time performance index to evaluate the behavior of the running application. To validate feasibility, theoretical analysis and practical experiment has been conducted on an actual control system based on Xenomai and RT-Preempt.",Task analysis; Timing; Libraries; Software architecture; Interoperability; Real-time systems; Performance evaluation; Xenomai; Codes; Real-time development environment; RT-Preempt,RT-AIDE: A RTOS-Agnostic and Interoperable Development Environment for Real-time Systems,-,,,,YES,,,,,YES,,
S2058,1,Forward,journalArticle,2021,"Ahmed, A. S. Faraz; Sudharsan, V.; Doss, Arockia Selvakumar Arockia",Journal of Physics: Conference Series,10.1088/1742-6596/2115/1/012007,https://doi.org/10.1088/1742-6596/2115/1/012007,"This paper discusses the research work done for controlling the humanoid robot manually using deep learning. For teaching, personal assistance, search and rescue humanoid robot are used. Controlling manually makes it to do any task without any explicitly programming. Existing technique for manually controlling the humanoid are heavily dependent on hardware and they are not cost efficient. This paper proposes a novel method for controlling the humanoid using a 2D camera. The image from the 2D camera is processed and skeleton of the human body is captured using deep learning. Then the skeleton is used to control the actuators present in the humanoid robot using image classifier and ROS. As a proof of concept the upper body of the humanoid robot is controlled in real time using this method.",,Real-Time Motion Control of a Humanoid Robot Using Deep Learning,-,,,,YES,,,,,YES,,
S2059,1,Forward,journalArticle,2021,"Rahmani, Mohamed Elhadi; Amine, Abdelmalek; Fernandes, José Eduardo",Neural Processing Letters,10.1007/s11063-021-10610-x,https://doi.org/10.1007/s11063-021-10610-x,"In this paper, we propose a multi-stage genetic algorithm that allows to automatically initialize deep multilayer perceptron neural network models to train it for prediction of robot execution failures. The proposed genetic algorithm system is divided on three stages, the first stage consists of initializing number of hidden layers. The second stage aims to fix number of neurons in each hidden layer. The final stage generates the activation function and the optimizer used to train neural network models. The next step is the application of the generated neural network models to predict robot execution failures. The aim of this approach is giving a robot many models so it can better take a more precise decision, since there is no scientific method to choose neural network model, genetic algorithm allows to generate many models automatically. Results obtained in this study show the efficiency of deep neural networks on robotic failures detection, as well as the efficiency of genetic algorithms to generate different models automatically which prevent the manual setup.",Genetic algorithms; Deep learning; Machine Learning; Deep neural network; Robot execution failure,Multi-stage Genetic Algorithm and Deep Neural Network for Robot Execution Failure Detection,-,,,,YES,,,,,YES,,
S2060,1,Forward,conferencePaper,2021,"Zou, Yong-Hao; Bai, Jia-Ju",2021 IEEE International Conference on Robotics and Automation (ICRA),10.1109/ICRA48506.2021.9560876,,"Modern robot systems use various software programs to autonomously perform different kinds of tasks. However, due to the risks of possible faults and errors, a robotic software program can inevitably crash in some cases, causing that the robot system fails to perform the current task. Thus, for robustness, the crashed program should be correctly recovered to continue the failed task. For this purpose, ROS provides a default restart method to automatically restart crashed programs. However, our case studies of typical ROS programs show that the restart method can perform incorrect crash recovery, and it can even cause the robot to perform dangerous behaviors, because this method loses the program’s important data that was stored before the crash and is used after recovery. To solve this problem, we develop a practical approach named RORY, to perform effective crash recovery of robot software programs in ROS. RORY uses a hybrid checkpoint-replay method, and it is generic to different ROS programs by considering ROS properties. We evaluate RORY on 6 common ROS programs, and show that RORY performs correct crash recovery in both virtual and realistic environments with modest overhead. The comparison experiments indicate that RORY outperforms the restart, checkpoint-alone and replay-alone methods.",Task analysis; Software; Conferences; Automation; Robustness; Synchronization; Computer crashes,Effective Crash Recovery of Robot Software Programs in ROS,-,,,,YES,,,,,YES,,
S2061,1,Forward,journalArticle,2020,"Marok, Sukhman",Master's Theses,10.15368/theses.2020.37,https://digitalcommons.calpoly.edu/theses/2127,,,Flexible Fault Tolerance for the Robot Operating System,-,,,,YES,,,,,YES,,
S2064,1,Forward,conferencePaper,2019,"Hanna, Atieh; Bengtsson, Kristofer; Dahl, Martin; Erős, Endre; Götvall, Per-Lage; Ekström, Mikael",2019 24th IEEE International Conference on Emerging Technologies and Factory Automation (ETFA),10.1109/ETFA.2019.8869014,,"During the last five decades, automation and robotics have transformed the automotive industry by increasing efficiency and improving the product quality. However, future trucks that will be autonomous, electrical and connected will require a completely new type of flexibility and intelligence in the production systems, especially in the final assembly. To handle the increased complexity of the products, production processes and logistic systems, final assembly must be transformed into collaborative and intelligent automation systems. These systems will include collaborative and deliberative robots (cobots), advanced vision-based control, adaptive safety systems, online optimization and learning algorithms and connected and well-informed human operators. But it will be a huge undertaking to transform current trucks industry such that they can design, implement and maintain large scale collaborative and intelligent automation systems. This paper presents the challenges with current planning and preparation processes for final assembly as well as the requirement and possible solutions for the future processes. An industrial use case at Volvo Trucks based on Sequence Planner and ROS2 is used to evaluate the proposed planning and preparation processes.",Task analysis; Automation; Collaboration; Planning; Service robots; collaborative robot; intelligent system; Production planning; Production preparation,Industrial Challenges when Planning and Preparing Collaborative and Intelligent Automation Systems for Final Assembly Stations,-,,,,YES,,,,,YES,,
S2065,1,Forward,journalArticle,2020,"Siefke, Lennart; Sommer, Volker; Wudka, Björn; Thomas, Carsten",Robotics,10.3390/robotics9040078,https://www.mdpi.com/2218-6581/9/4/78,"Multi-robot systems are often static and pre-configured during the design time of their software. Emerging cooperation between unknown robots is still rare and limited. Such cooperation might be basic like sharing sensor data or complex like conjoined motion planning and acting. Robots should be able to detect other robots and their abilities during runtime. When cooperation seems to be possible and beneficial, it should be initiated autonomously. A centralized cloud control shall be avoided. Using software patterns belonging to service-oriented architectures, the robots are able to discover other robots and their abilities during runtime. These abilities are implemented as services and described by their interfaces. Composition of services can be done easily and flexibly. The software patterns originally belonging to cloud computing could be successfully adopted to decentralized multi-robot systems. The developed concept allows autonomous systems to cooperate flexibly and to compose multi-robot systems during runtime.",multi-agent systems; autonomous robotics; multi-robot systems; service-oriented architectures; systems of systems,Robotic Systems of Systems Based on a Decentralized Service-Oriented Architecture,-,,,,YES,,,,,YES,,
S2066,1,Forward,conferencePaper,2020,"Hanna, Atieh; Bengtsson, Kristofer; Götvall, Per-Lage; Ekström, Mikael",2020 25th IEEE International Conference on Emerging Technologies and Factory Automation (ETFA),10.1109/ETFA46521.2020.9212127,,"Automation and robotics are two enablers for developing the Smart Factory of the Future, which is based on intelligent machines and collaboration between robots and humans. Especially in final assembly and its material handling, where traditional automation is challenging to use, collaborative robot (cobot) systems may increase the flexibility needed in future production systems. A major obstacle to deploy a truly collaborative application is to design and implement a safe and efficient interaction between humans and robot systems while maintaining industrial requirements such as cost and productivity. Advanced and intelligent control strategies is the enabler when creating this safe, yet efficient, system, but is often hard to design and build.This paper highlights and discusses the challenges in meeting safety requirements according to current safety standards, starting with the mandatory risk assessment and then applying risk reduction measures, when transforming a typical manual final assembly station into an intelligent collaborative station. An important conclusion is that current safety standards and requirements must be updated and improved and the current collaborative modes defined by the standards community should be extended with a new mode, which in this paper is refereed to the deliberative planning and acting mode.",Automation; Collaboration; Production systems; Productivity; Planning; Service robots; Safety; deliberation; HRC; HRI; Human-robot Interaction; ISO/TS 15066; operator education and training; safe interaction; safety standards,Towards safe human robot collaboration - Risk assessment of intelligent automation,-,,,,YES,,,,,YES,,
S2067,1,Forward,bookSection,2021,"Erős, Endre; Dahl, Martin; Hanna, Atieh; Götvall, Per-Lage; Falkman, Petter; Bengtsson, Kristofer",Robot Operating System (ROS): The Complete Reference (Volume 5),,https://doi.org/10.1007/978-3-030-45956-7_1,"In many modern automation solutions, manual off-line programming is being replaced by online algorithms that dynamically perform tasks based on the state of the environment. Complexities of such systems are pushed even further with collaboration among robots and humans, where intelligent machines and learning algorithms are replacing more traditional automation solutions. This chapter describes the development of an industrial demonstrator using a control infrastructure called Sequence Planner (SP), and presents some lessons learned during development. SP is based on ROS2 and it is designed to aid in handling the increased complexity of these new systems using formal models and online planning algorithms to coordinate the actions of robots and other devices. During development, SP can auto generate ROS nodes and message types as well as support continuous validation and testing. SP is also designed with the aim to handle traditional challenges of automation software development such as safety, reliability and efficiency. In this chapter, it is argued that ROS2 together with SP could be an enabler of intelligent automation for the next industrial revolution.",,Development of an Industry 4.0 Demonstrator Using Sequence Planner and ROS2,-,,,,YES,,,,,YES,,
S2068,1,Forward,journalArticle,2021,"Ginting, Muhammad Fadhil; Otsu, Kyohei; Edlund, Jeffrey A.; Gao, Jay; Agha-Mohammadi, Ali-Akbar",IEEE Robotics and Automation Letters,10.1109/LRA.2021.3061393,,"A well-structured and reliable communication system is key to the successful operations of multi-robot systems. In this letter, we present our design and implementation of a multi-robot communication architecture CHORD (Collaborative High-bandwidth Operations with Radio Droppables) based on two popular robotics middleware, ROS 1 and ROS 2. We discuss the benefit and best practices of combining two different frameworks that share the same spirit and show its performance from large-scale real-world experiments. The proposed system is developed as part of Team CoSTAR's effort for the DARPA Subterranean (SubT) Challenge. The system has been field-proved and demonstrated in the Urban Circuit event, where team CoSTAR won first place. To our knowledge, this work is the first real-world demonstration of a ROS 2-based multi-robot system in such large-scale extreme environments. From the significant improvement of the communication performance and the ease of transition from existing ROS 1 systems, this work encourages wider adoption of ROS 2 in field robotics applications.",Collaboration; Quality of service; Reliability; Robots; Multi-robot systems; field robots; multi-robot systems; Bridges; Communication systems; Networked robots,CHORD: Distributed Data-Sharing via Hybrid ROS 1 and 2 for Multi-Robot Exploration of Large-Scale Complex Environments,-,,,,YES,,,,,YES,,
S2069,1,Forward,journalArticle,2021,"Testa, Andrea; Camisa, Andrea; Notarstefano, Giuseppe",IEEE Robotics and Automation Letters,10.1109/LRA.2021.3061366,,"In this letter, we introduce ChoiRbot, a toolbox for distributed cooperative robotics based on the novel Robot Operating System (ROS) 2. ChoiRbot provides a fully-functional toolset to execute complex distributed multi-robot tasks, either in simulation or experimentally, with a particular focus on networks of heterogeneous robots without a central coordinator. Thanks to its modular structure, ChoiRbot allows for a highly straight implementation of optimization-based distributed control schemes, such as distributed optimal control, model predictive control, task assignment, in which local computation and communication with neighboring robots are alternated. To this end, the toolbox provides functionalities for the solution of distributed optimization problems. The package can be also used to implement distributed feedback laws that do not need optimization features but do require the exchange of information among robots. The potential of the toolbox is illustrated with simulations and experiments on distributed robotics scenarios with mobile ground robots. The ChoiRbot toolbox is available at https://github.com/OPT4SMART/choirbot.",Computer architecture; Task analysis; Optimization; Python; Decentralized control; Robot kinematics; Distributed robot systems; optimization and optimal control; Predictive control; software architecture for robotic and automation,ChoiRbot: A ROS 2 Toolbox for Cooperative Robotics,-,,,,YES,,,,,YES,,
S2070,1,Forward,journalArticle,2019,"Götvall, Per-Lage",KI - Künstliche Intelligenz,10.1007/s13218-019-00622-0,https://doi.org/10.1007/s13218-019-00622-0,"With the clear aim of being on the forefront in the area of collaborative robots (cobots), the Volvo Group Truck Operations has created a collaboration arena where academia, industry, and start-up companies can share visions and needs and jointly create research and/or technology development projects. The arena has been active for about 5 years and is highly appreciated and beneficial for all involved parties. Advanced prototypes of robots and novel control methods for the usage of collaborative robots in an environment where human operators and robots are acting and collaborating on “equal terms” have been developed.",,Volvo Group Collaborative Robot Systems Laboratory: A Collaborative Way for Academia and Industry to be at the Forefront of Artificial Intelligence,-,,,,YES,,,,,YES,,
S2072,1,Forward,journalArticle,2022,"Vidal, Vinicius F.; Honório, Leonardo M.; Pinto, Milena F.; Dantas, Mario A. R.; Aguiar, Maria Júlia; Capretz, Miriam",Future Generation Computer Systems,10.1016/j.future.2022.04.015,https://www.sciencedirect.com/science/article/pii/S0167739X22001388,"Nowadays, numerous facilities that provide essential services operate with little or even no human supervision. In this context, electrical power substations can be entirely autonomous or remotely operated, and may be difficult to access. This scenario increases the need of remote monitoring for predictive maintenance and problem analysis by using imaging and 3D reconstruction of the environment. 3D reconstruction processes are concentrated in academic and commercial applications, but they are non scalable and fail to provide remote real time data analysis. This research proposes a novel color 3D scanner architecture environment for remote real time multiple sensor processing and reconstruction. The goal is to present a more efficient system based upon scalability and low latency applications, where multiple sensors can be added without losing the overall processing capability. For this purpose, this study approaches this problem in two ways. First, it improves 3D reconstruction algorithms by enhancing individual performance. Second, to optimize the entire system, it distributes the running processes in individual layers, interconnected by an edge–fog architecture. This architecture enables the use of multiple devices by optimizing payload distribution, latency, and throughput in the network. Unlike previous studies, the results present a thorough analysis of architecture efficiency when multiple sensors are operating in parallel instead of the traditional centralized architecture. Finally, this work provides the basis for real-time remote presence applications.",Virtual reality; Edge–fog architecture; Fog robotics; Multiple 3D scanning; Real time modeling,An edge–fog architecture for distributed 3D reconstruction,-,,,,YES,,,,,YES,,
S2073,1,Forward,journalArticle,2021,"Valkov, Ivan; Trinder, Phil; Chechina, Natalia",Autonomous Robots,10.1007/s10514-021-09967-8,https://doi.org/10.1007/s10514-021-09967-8,"Modern multi-robot systems often need to solve computationally intensive tasks but operate with limited compute resources and in the presence of failures. Cooperating to share computational tasks between robots at the edge reduces execution time. We introduce and evaluate a new computation load management technology for teams of robots: Reliable Autonomous Mobile Programs (RAMPs). RAMPs use information about the computational resources available in the team and a cost model to decide where to execute. RAMPs are implemented in ROS on a collection of Raspberry Pi-based robots. The performance of RAMPs is evaluated using route planning, a typical computationally-intensive robotics application. A systematic study of RAMPs demonstrates a high likelihood of optimal or near-optimal distribution and hence efficient resource utilisation. RAMPs successfully complete in the presence of simultaneous, or successive, robot failures and network failures, while preserving near-optimal distribution.",Fault tolerance; ROS; Autonomous mobility; Computational load distribution; Cooperative robotics,Reliable distribution of computational load in robot teams,-,,,,YES,,,,,YES,,
S2074,1,Forward,conferencePaper,2022,"He, Jiazhen; Zhang, Jianwen; Liu, Jiajun; Fu, Xin","2022 2nd International Conference on Computer, Control and Robotics (ICCCR)",10.1109/ICCCR54399.2022.9790247,,"With the development of industrial manufacturing towards flexibility and efficiency, the automation equipment, including manipulator, automated guide vehicle (AGV), Computer numerical control machine tools (CNC) and other intelligent individuals, has become an indispensable part of industrial system. In order to build a reliable and robust automation system rapidly, a reasonable software framework for controlling the automation equipment is necessary. To address this problem, this paper proposes a framework for construction of an industrial automation system. The system consists of 2 parts, which are motion control system (MCS) and OpenPLC. The MCS is based on ROS2, which provides real-time communication middleware. Furthermore, this paper implements new function blocks to connect OpenPLC and the MCS. With this system, it only needs OpenPLC language to realize the control rather than using different languages to control robots and other equipment in an automation line. In section 4, a simple use case is put forward. The experiment validated the correctness and feasibility of this framework.",Programming; Protocols; Production; Automation; Service robots; Manipulators; ROS2; robot; Motion planning; industrial automation system; motion control system; OpenPLC,A ROS2-Based Framework for Industrial Automation Systems,-,,,,YES,,,,,YES,,
S2076,1,Forward,conferencePaper,2021,"Lourenço, Luan Lucas; Oliveira, George; Méa Plentz, Patricia Della; Röning, Juha",2021 20th International Conference on Advanced Robotics (ICAR),10.1109/ICAR53236.2021.9659422,,"The number of smart warehouses has increased in the last few years, mainly because of the enormous sales volume in e-commerce systems. Such physical environments are fully equipped with robots that solve the orders that arrive there. Most research in the literature presents results just about the path planning and allocation tasks as the main problems related to this area. However, it is also essential to consider how robotic platforms, such as ROS (Robot Operating System), deal with integrating with streaming platforms that manage the orders that arrive into the smart warehouses. This paper presents a simple way to integrate ROS with Kafka, a streaming platform highly used in e-commerce systems. We develop a bridge code to glue these two platforms and test it within three realist simulation scenarios. As we will show, the use of the QoS profiles provided by the ROS Data Distribution Service (DDS) allows us to achieve a higher level of reliability.",Quality of service; Reliability; Operating systems; Path planning; Bridges; Codes; Electronic commerce,Achieving reliable communication between Kafka and ROS through bridge codes,-,,,,YES,,,,,YES,,
S2077,1,Forward,journalArticle,2022,"Cruz, Otávio Augusto Rocha da",,,https://repositorio.ufu.br/handle/123456789/34172,"Mobile robotics is an area in constant evolution, with constant research. In this regard, it is common to need a robotic platform to investigate hypotheses of scientific research in practice. Therefore, the acquisition or assembly of a robot is necessary. However, the construction can be complex or not be directly related to the scope of the study (such as the implementation of software features), which leads to reduced time loss, while that the purchase can be frustrated by the high prices. Furthermore, finding low-cost, well-documented mobile robots that make reproduction possible is not trivial. Seeking to fill these gaps, the present work proposes the development of a mobile robotic platform, called SciCoBot (Science, Coffee and Robot), of low cost, modular and expansive, based on ROS 2, micro-ROS, Arduino Due and Raspberry Pi. The platform is idealized as a research tool for topics related to a robotic cooperative, mainly for employment at Universidade Federal de Uberlândia, Patos de Minas campus. For this, an initial version with some sensors was assembled and a modular code architecture for Arduino and Raspberry was developed. Seeking to validate the built version, software applications with the sensors were exemplified and documented on GitHub. With the robotic platform ready and functional, it was possible to compare it with other structures, where SciCoBot stands out for specific use in the UFU, since it has devices available in the laboratory, which enhances the low cost and allows UFU designers to use their previous knowledge to understand the robot. Furthermore, this work provides a good review of robotic structures available in the open-source community.",,Desenvolvimento de um Robô Móvel Open Source Baseado em ROS 2 para Pesquisa em Robótica Cooperativa,-,,,,YES,,,,,YES,,
S2079,1,Forward,journalArticle,2021,"Dahl, Morten",,,https://ntnuopen.ntnu.no/ntnu-xmlui/handle/11250/2788488,"Denne masteroppaven undersøker hvordan et operativsystem for roboter, ROS2, kan bli brukt til å styre hovedkommunikasjonen i moderne fabrikker. Dette gjøres ved å implementere mulighet for å lage forskjellige kommunikasjonsnivåer ved kobinert bruk av innebyggde ROS2 funksjoner og socket programmering. Programvaren blir navngitt ros2_socket_bridge. Det er ønskelig at programvaren kan brukes i mange ulike oppsett, og derved er fleksibelt. Det må ha muligheten til å prossesere sanntidsinformasjon uten tillegg av betydelig forsinkelse forbundet med prosseseringstid. En prototype ble utviklet og testet hvorav flere funksjoner ble forbedret og implementert. Eksempelvis ble Bluetooth implementert som et mulig kommunikasjonsmedium. Testing ble gjort i både praktisk- og ytelsessammenheng, og til slutt ble ros2_socket_bridge sammenliknet med et prosjekt som har liknende mål.",,Expanding the ROS2 communication architecture.,-,,,,YES,,,,,YES,,
S2082,1,Forward,journalArticle,2021,"Calatrava-Nicolás, Francisco M.; Gutiérrez-Maestro, Eduardo; Bautista-Salinas, Daniel; Ortiz, Francisco J.; González, Joaquín Roca; Vera-Repullo, José Alfonso; Jiménez-Buendía, Manuel; Méndez, Inmaculada; Ruiz-Esteban, Cecilia; Mozos, Oscar Martínez",Sensors,10.3390/s21206865,https://www.mdpi.com/1424-8220/21/20/6865,"The increasingly ageing population and the tendency to live alone have led science and engineering researchers to search for health care solutions. In the COVID 19 pandemic, the elderly have been seriously affected in addition to suffering from isolation and its associated and psychological consequences. This paper provides an overview of the RobWell (Robotic-based Well-Being Monitoring and Coaching System for the Elderly in their Daily Activities) system. It is a system focused on the field of artificial intelligence for mood prediction and coaching. This paper presents a general overview of the initially proposed system as well as the preliminary results related to the home automation subsystem, autonomous robot navigation and mood estimation through machine learning prior to the final system integration, which will be discussed in future works. The main goal is to improve their mental well-being during their daily household activities. The system is composed of ambient intelligence with intelligent sensors, actuators and a robotic platform that interacts with the user. A test smart home system was set up in which the sensors, actuators and robotic platform were integrated and tested. For artificial intelligence applied to mood prediction, we used machine learning to classify several physiological signals into different moods. In robotics, it was concluded that the ROS autonomous navigation stack and its autodocking algorithm were not reliable enough for this task, while the robot’s autonomy was sufficient. Semantic navigation, artificial intelligence and computer vision alternatives are being sought.",machine learning; ROS; assistive robotics; smart home; affective computing; ambient assisted living; ecological momentary assessment (EMA); mental well-being; mood prediction; quality of life,Robotic-Based Well-Being Monitoring and Coaching System for the Elderly in Their Daily Activities,-,,,,YES,,,,,YES,,
S2084,1,Forward,conferencePaper,2014,"Berger, Christian",Proceedings of the 14th Workshop on Domain-Specific Modeling,10.1145/2688447.2688455,https://doi.org/10.1145/2688447.2688455,"Context: Cyber-physical systems like robotic platforms use sensors to perceive their surroundings. Multiple sensors like infrared, ultrasonic, and incremental encoders help these robots to orient act safely in their environment. Objective: However, finding a valid setup how to connect all sensors to a microcontroller (MCU) and to configure the embedded operating system correctly is hard because a constraint-satisfaction problem (CSP) needs to be solved. Here, a domain-specific language and an accompanying workflow are of great help for users to focus on algorithms instead of solving the CSP over and over again whenever a sensor configuration is adapted. Method: In our previous work, we have focused on modeling the CSP of the aforementioned problem appropriately. In this work, we are presenting SenseDSL, a simple, intuitive, and compact DSL to describe what shall be perceived by an MCU but letting the how to the tooling that processes the DSL's instances. Results: The workflow is realized by using Xtext and Xtend to process DSL artifacts, Prolog to solve the CSP, and a lean layer on top of ChibiOS/RT to interface with the hardware and to enable code reuse for a large variety of MCUs. Conclusion: Features of an embedded system are described in a compact tabular representation in combination with a textual description of the desired sensors to be connected. The model transformation and code generation process verifies the setup, finds automatically the best connection plan for the given sensors, and generates the required code for ChibiOS/RT and an accompanying host application to read and handle the data.",verification; cyber-physical systems; code generation; csp,SenseDSL: Automating the Integration of Sensors for MCU-Based Robots and Cyber-Physical Systems,-,,,,YES,,,,,YES,,
S2085,1,Forward,conferencePaper,2018,"Ishida, Yutaro; Morie, Takashi; Tamukoh, Hakaru",2018 IEEE International Symposium on Circuits and Systems (ISCAS),10.1109/ISCAS.2018.8351722,,"Service robots require implementation of intelligent processing, e.g., image processing. However, the computational resources of standard PCs typically used in service robots are not sufficient for such processes. Furthermore, robot middleware is widely used in many robots because such systems facilitate integration and are suitable for rapid prototyping. We propose a ""connective object for middleware to accelerator (COMTA),"" which is a processing system that uses hardware accelerators, i.e., field programmable gate arrays (FPGAs), and robot middleware. Users can access the FPGAs in the proposed system via middleware interfaces; thus, complex internal circuits are not required. For human tracking using image processing, the proposed system can automatically generate from a single configuration file. The proposed system performs 3.3 times more efficiently relative to computation than standard PCs in robots.",Hardware; Middleware; Service robots; Field programmable gate arrays; Complex systems,A Hardware Accelerated Robot Middleware Package for Intelligent Processing on Robots,-,,,,YES,,,,,YES,,
S2086,1,Forward,conferencePaper,2021,"Mainampati, Manasa; Chandrasekaran, Balasubramaniyan","2021 IEEE 12th Annual Information Technology, Electronics and Mobile Communication Conference (IEMCON)",10.1109/IEMCON53756.2021.9623127,,"In this paper, an implementation of a human in the loop (HITL) technique for robot navigation in an indoor environment is described. The HITL technique is integrated into the reinforcement learning algorithms for mobile robot navigation. Reinforcement algorithms, specifically Q-learning and SARSA, are used combined with HITL since these algorithms are good in exploration and navigation. Turtlebot3 has been used as the robot for validating the algorithms by implementing the system using Robot Operating System and Gazebo. The robot-assisted with human feedback was found to be better in navigation task execution when compared to standard algorithms without using human in the loop. This is a work in progress and the next step of this research is exploring other reinforced learning methods and implementing them on a physical robot.",Training; Navigation; Learning systems; Reinforcement learning; ROS; Operating systems; Path planning; Sensor fusion; HITL; Human in the loop; Q- Learning; SARSA; TurtleBot,Implementation of Human in The Loop on the TurtleBot using Reinforced Learning methods and Robot Operating System (ROS),-,,,,YES,,,,,YES,,
S2088,1,Forward,journalArticle,2021,"Breiling, Benjamin; Dieber, Bernhard; Pinzger, Martin; Rass, Stefan",Journal of Cybersecurity and Privacy,10.3390/jcp1010006,https://www.mdpi.com/2624-800X/1/1/6,"With the growing popularity of robots, the development of robot applications is subject to an ever increasing number of additional requirements from e.g., safety, legal and ethical sides. The certification of an application for compliance to such requirements is an essential step in the development of a robot program. However, at this point in time it must be ensured that the integrity of this program is preserved meaning that no intentional or unintentional modifications happen to the program until the robot executes it. Based on the abstraction of robot programs as workflows we present in this work a cryptography-powered distributed infrastructure for the preservation of robot workflows. A client composes a robot program and once it is accepted a separate entity provides a digital signature for the workflow and its parameters which can be verified by the robot before executing it. We demonstrate a real-world implementation of this infrastructure using a mobile manipulator and its software stack. We also provide an outlook on the integration of this work into our larger undertaking to provide a distributed ledger-based compliant robot application development environment.",security; robotics; compliance; cryptographic infrastructure; program integrity; robot programming,A Cryptography-Powered Infrastructure to Ensure the Integrity of Robot Workflows,-,,,,YES,,,,,YES,,
S2089,1,Forward,conferencePaper,2021,"Rajapaksha, Dinodi Divyanjana; Mohamed Nuhuman, Mohamed Nafeel; Gunawardhana, Sewmini Dananji; Sivalingam, Atchuthan; Mohamed Hassan, Mohamed Nimran; Rajapaksha, Samantha; Jayawardena, Chandimal",2021 6th International Conference on Information Technology Research (ICITR),10.1109/ICITR54349.2021.9657337,,We have proposed a web-based approach to controlling robots in simulation. This web application will provide a simple user interface to demonstrate the various capabilities of robots. It is intended to be used by beginners who are interested in working with the Robot Operating System(ROS). The evaluation of the system is specifically achieved with Turtlebot3 waffle pi model. All the robot's functionalities are displayed in a simulated environment so users do not need an actual robot or direct access to ROS. The application covers various manual and autonomous functionalities of the robot while trying to be as interactive as possible. Each interface provides an overview of the function and basic implementation details. The goal of the proposed system is to make robotics accessible to anyone with web access and to mitigate the need to have a specific computer environment and knowledge in programming to access Robotics.,Programming; Navigation; Linux; Manuals; User interfaces; Operating systems; User experience,Web Based User-Friendly Graphical Interface to Control Robots with ROS Environment,-,,,,YES,,,,,YES,,
S2091,1,Forward,journalArticle,2022,"Correia, &#201; rika; Leite, Anderson; Fernandes, Giovane; Vilasboas, Jo&#227; o; Sampaio, Marcelo; Bastos, Adriel; D&#237; az-Amado, Jos&#233; Soares, Jo&#227; o; Cardinale, Yudith",Workshops at 18th International Conference on Intelligent Environments (IE2022),10.3233/AISE220018,https://ebooks.iospress.nl/doi/10.3233/AISE220018,,,An Architecture for Social-Aware Navigation Based on a Chatbot Interaction,-,,,,YES,,,,,YES,,
S2092,1,Forward,journalArticle,2019,"Nedjah, Nadia; Junior, Luneque Silva",Swarm and Evolutionary Computation,10.1016/j.swevo.2019.100565,https://www.sciencedirect.com/science/article/pii/S2210650217308398,"Swarm Robotics (SR) is an extension of the study of Multi-Robot Systems that exploits concepts of communication, coordination and collaboration among a large number of robots. The massive parallelization yielded by the robots working together can make a task faster than in the case of the usage of a single complex robot. One of the main aspects in robotic swarms is that the control is decentralized by definition and distributed among the robots of the swarm, improving the system robustness and fault-tolerance. Furthermore, this characteristic often allows the emergence of collective behaviors from the robot's interaction with each other and with the environment through their embodied sensors and actuators. In most cases, the number of inputs from sensor readings turns analytical solutions hard or even impossible. Thus, many ad-hoc approaches are contributed to deal with the situation at hand. The main goal of this review is to find out, through the study of existing research works of the field, the reason behind the lack of exploitation of swarm robotic systems in real-world applications. For this purpose, we first review the different possibilities of study in SR: physical and simulated robotic platforms, development methodologies and the variety of basic tasks and collective behaviors. We then briefly describe some fields related do SR that have a big impact on the development of SR. After that, based on existing taxonomies found in literature, we categorize existing research works regarding SR in two large main groups: those that deal with SR design and those that deal with tasks as required in SR. The review of both existing robots and techniques in the literature show a diversity of approaches to discuss SR issues. Nonetheless, it is easily noticeable from these works that there is a clamant absence of solid real-world applications of SR. An analysis of the interests and bottlenecks of this field indicates that the number of research works is smaller than those in other related areas. This suggests that, even though with many research studies, the field of SR is not yet mature enough, mainly due the absence of a universal methodology and generic robots that can be used in any, or at least in many, applications. Thus, we emphasize, discuss and analyze the urgent need for standardization of many aspects in SR, including hardware and software, as to allow a possible flourishing of SR applicability to real-world applications. This standardization could accelerate a great deal the field of SR, thus facilitating the development of SR solutions for applications that impact our daily life.",Modeling; Multi-robot systems; Cooperative tasks; Swarm robotics,Review of methodologies and tasks in swarm robotics towards standardization,-,,,,YES,,,,,YES,,
S2093,1,Forward,conferencePaper,2018,"Lima, Keila; Marques, Eduardo R.B.; Pinto, José; Sousa, João B.",2018 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS.2018.8594059,,"We present Dolphin, an extensible programming language for autonomous vehicle networks. A Dolphin program expresses an orchestrated execution of tasks defined compositionally for multiple vehicles. Building upon the base case of elementary one-vehicle tasks, the built-in operators include support for composing tasks in several forms, for instance according to concurrent, sequential, or event-based task flow. The language is implemented as a Groovy DSL, facilitating extension and integration with external software packages, in particular robotic toolkits. The paper describes the Dolphin language, its integration with an open-source toolchain for autonomous vehicles, and results from field tests using unmanned underwater vehicles (UUVs) and unmanned aerial vehicles (UAVs).",Runtime; Task analysis; Engines; Java; DSL; Autonomous vehicles; Dolphins,Dolphin: A Task Orchestration Language for Autonomous Vehicle Networks,-,,,,YES,,,,,YES,,
S2094,1,Forward,journalArticle,2020,"St-Onge, David; Kaufmann, Marcel; Panerati, Jacopo; Ramtoula, Benjamin; Cao, Yanjun; Coffey, Emily B.J.; Beltrame, Giovanni",IEEE Robotics & Automation Magazine,10.1109/MRA.2019.2940413,,"Since the beginning of space exploration, Mars and the moon have been examined via orbiters, landers, and rovers. More than 40 missions have targeted Mars, and over 100 have been sent to the moon. Space agencies continue to focus on developing novel strategies and technologies for probing celestial bodies. Multirobot systems are particularly promising for planetary exploration, as they are more robust to individual failure and have the potential to examine larger areas; however, there are limits to how many robots an operator can control individually. We recently took part in the European Space Agency's (ESA's) interdisciplinary equipment test campaign (PANGAEA-X) at a lunar/Mars analog site in Lanzarote, Spain. We used a heterogeneous fleet of unmanned aerial vehicles (UAVs)-a swarm-to study the interplay of systems operations and human factors. Human operators directed the swarm via ad hoc networks and data-sharing protocols to explore unknown areas under two control modes: in one, the operator instructed each robot separately; in the other, the operator provided general guidance to the swarm, which self-organized via a combination of distributed decision making and consensus building. We assessed cognitive load via pupillometry for each condition and perceived task demand and intuitiveness via selfreport. Our results show that implementing higher autonomy with swarm intelligence can reduce workload, freeing the operator for other tasks such as overseeing strategy and communication. Future work will further leverage advances in swarm intelligence for exploration missions.",Task analysis; Robot sensing systems; Global Positioning System; Robot kinematics; Safety; Mobile robots; Moon,Planetary Exploration With Robot Teams: Implementing Higher Autonomy With Swarm Intelligence,-,,,,YES,,,,,YES,,
S2095,1,Forward,journalArticle,2020,"Varadharajan, Vivek Shankar; St-Onge, David; Adams, Bram; Beltrame, Giovanni",Autonomous Robots,10.1007/s10514-019-09855-2,https://doi.org/10.1007/s10514-019-09855-2,"Interconnected devices and mobile multi-robot systems are increasingly present in many real-life scenarios. To be effective, these systems need to collect large amounts of data from their environment, and often these data need to be aggregated, shared, and distributed. Many multi-robot systems are designed to share state information and commands, but their communication infrastructure is often too limited for significant data transfers. This paper introduces Swarm-Oriented Upload of Labeled data, a mechanism that allows members of a fully distributed system to share data with their peers. We leverage a BitTorrent-like strategy to share data in smaller chunks, or datagrams, with policies that minimize reconstruction time. We performed extensive simulations to study the properties of the system and to demonstrate its scalability. We report experiments conducted with real robots following two realistic deployment scenarios: searching for objects in a scene, and replacing the full identity of a defective robot.",Multi-robot systems; Swarm robotics; Information sharing; Stigmergy,SOUL: data sharing for robot swarms,-,,,,YES,,,,,YES,,
S2096,1,Forward,journalArticle,2018,"De Nicola, Rocco; Di Stefano, Luca; Inverso, Omar",Frontiers in Robotics and AI,,https://www.frontiersin.org/articles/10.3389/frobt.2018.00094,"Incorrect operation of a multi-robot system (MRS) may not only lead to unsatisfactory results, but it can also cause economic losses and jeopardize safety. These risks may not always be evident, since they may arise as unforeseen consequences of interactions between different components of the system. Thus, tools and techniques that can help in providing guarantees about the behavior of MRSs are on demand; whenever possible, these guarantees should be backed up by formal proofs complementing the traditional approaches based on testing and simulation. Tailored linguistic support to specify MRSs is a major step toward this goal. In fact, reducing the gap between typical features of an MRS and the linguistic primitives used to model them would simplify both the specification of these systems and their verification. With the aim of reducing this gap, we identified some key features of MRSs in this work. Subsequently, we considered the selection of three specification languages oriented toward MRSs, which are representative of wider categories of languages with similar aims. Finally, we assessed the extent to which the considered languages captured the key features in an adequate and intuitive way by using them to implement multi-robot systems case studies.",,Toward Formal Models and Languages for Verifiable Multi-Robot Systems,-,,,,YES,,,,,YES,,
S2097,1,Forward,journalArticle,2019,"Li, Guannan; Svogor, Ivan; Beltrame, Giovanni",Swarm Intelligence,10.1007/s11721-019-00162-1,https://doi.org/10.1007/s11721-019-00162-1,"This paper presents a distributed, energy-aware method for the autonomous deployment and maintenance of battery-powered robots within a known or unknown region in 2D space. Our approach does not rely on a global positioning system and therefore allows for applications in GPS-denied environments such as underwater sensing or underground monitoring. After covering a region, our system maintains a formation and uses an arbitrary number of charging stations to prevent robots from fully discharging. Analyzing the topology of the network formed during robot deployment, we generate virtual recharging trees which the robots use to navigate toward a nearby charging station when needed. All robots that leave the formation are replaced by their neighbors, maximizing the effective coverage provided by the system. We demonstrate the capability of our methods using models, a physics-based simulator, and experiments with real robots.",Battery; Energy-aware; Graph; Long-term autonomy; Multi-robot teams,Long-term pattern formation and maintenance for battery-powered robots,-,,,,YES,,,,,YES,,
S2098,1,Forward,conferencePaper,2020,"Ghosh, Ritwika; Jansch-Porto, Joao P.; Hsieh, Chiao; Gosse, Amelia; Jiang, Minghao; Taylor, Hebron; Du, Peter; Mitra, Sayan; Dullerud, Geir",2020 IEEE International Conference on Robotics and Automation (ICRA),10.1109/ICRA40945.2020.9196513,,"Programming languages, libraries, and development tools have transformed the application development processes for mobile computing and machine learning. This paper introduces CyPhyHouse-a toolchain that aims to provide similar programming, debugging, and deployment benefits for distributed mobile robotic applications. Users can develop hardware-agnostic, distributed applications using the high-level, event driven Koord programming language, without requiring expertise in controller design or distributed network protocols. The modular, platform-independent middleware of CyPhyHouse implements these functionalities using standard algorithms for path planning (RRT), control (MPC), mutual exclusion, etc. A high-fidelity, scalable, multi-threaded simulator for Koord applications is developed to simulate the same application code for dozens of heterogeneous agents. The same compiled code can also be deployed on heterogeneous mobile platforms. The effectiveness of CyPhyHouse in improving the design cycles is explicitly illustrated in a robotic testbed through development, simulation, and deployment of a distributed task allocation application on in-house ground and aerial vehicles.",Task analysis; Middleware; Python; Robot kinematics; Collision avoidance,"CyPhyHouse: A programming, simulation, and deployment toolchain for heterogeneous distributed coordination",-,,,,YES,,,,,YES,,
S2099,1,Forward,journalArticle,2020,"St-Onge, David; Varadharajan, Vivek Shankar; Švogor, Ivan; Beltrame, Giovanni",Frontiers in Robotics and AI,,https://www.frontiersin.org/articles/10.3389/frobt.2020.00051,"Many applications benefit from the use of multiple robots, but their scalability and applicability are fundamentally limited when relying on a central control station. Getting beyond the centralized approach can increase the complexity of the embedded software, the sensitivity to the network topology, and render the deployment on physical devices tedious and error-prone. This work introduces a software-based solution to cope with these challenges on commercial hardware. We bring together our previous work on Buzz, the swarm-oriented programming language, and the many contributions of the Robotic Operating System (ROS) community into a reliable workflow, from rapid prototyping of decentralized behaviors up to robust field deployment. The Buzz programming language is a hardware independent, domain-specific (swarm-oriented), and composable language. From simulation to the field, a Buzz script can stay unmodified and almost seamlessly applicable to all units of a heterogeneous robotic team. We present the software structure of our solution, and the swarm-oriented paradigms it encompasses. While the design of a new behavior can be achieved on a lightweight simulator, we show how our security mechanisms enhance field deployment robustness. In addition, developers can update their scripts in the field using a safe software release mechanism. Integrating Buzz in ROS, adding safety mechanisms and granting field updates are core contributions essential to swarm robotics deployment: from simulation to the field. We show the applicability of our work with the implementation of two practical decentralized scenarios: a robust generic task allocation strategy and an optimized area coverage algorithm. Both behaviors are explained and tested with simulations, then experimented with heterogeneous ground-and-air robotic teams.",,From Design to Deployment: Decentralized Coordination of Heterogeneous Robotic Teams,-,,,,YES,,,,,YES,,
S2101,1,Forward,journalArticle,2019,"St-Onge, David; Kaufmann, Marcel; Panerati, Jacopo; Ramtoula, Benjamin; Cao, Yanjun; Coffey, Emily B J; Beltrame, Giovanni",,,,,,Planetary exploration with robot teams,-,,,,YES,,,,,YES,,
S2102,1,Forward,conferencePaper,2020,"Yi, Wei; Di, Bin; Li, Ruihao; Dai, Huadong; Yi, Xiaodong; Wang, Yanzhen; Yang, Xuejun",2020 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS45743.2020.9341198,,"Programming cooperative tasks for autonomous swarm robotic systems has always been challenging. In this paper, we introduce a concept `Actor', as a virtualization for robot platforms. Every robot platform in the swarm robotic system carries out the task and interacts with others as an Actor. We designed an Actor-based framework for the management of autonomous swarm robotic systems including modules and interfaces for the Actor, the collective Actor, and task management. The Actor-based framework enables task developers to explicitly model cooperative tasks without intricacies about the detailed robotic algorithms or the specific robot brands, and eases the burden on robotic algorithm developers by providing common functionalities. The proposed framework is implemented in C++ and validated quantitatively and qualitatively with a swarm of thirty drones by simulations and a swarm of ten drones by in-field tests.",Virtualization; Programming; Task analysis; C++ languages; Intelligent robots; Drones; Swarm robotics,An Actor-based Programming Framework for Swarm Robotic Systems,-,,,,YES,,,,,YES,,
S2105,1,Forward,journalArticle,2017,"Munera, Eduardo; Poza-Lujan, Jose-Luis; Posadas-Yague, Juan-Luis; Simo, Jose; Noguera, J. Francisco Blanes",IFAC-PapersOnLine,10.1016/j.ifacol.2017.08.1600,https://www.sciencedirect.com/science/article/pii/S2405896317321985,"Nowadays ROS (Robot Operating System) based platforms have been widely used in state of art robot researches because of providing reliable mechanisms for fast robot development and algorithm reuse. Among them, modular robots are presented as a Distributed Control System (DCS), in which the data supply and the flow rates must be ensured to guarantee a proper execution. Although ROS network architecture provides a solution for distributed communication, it entails some disadvantages. Real-time constraints assurance and large networks management are some of the main problems. Therefore, this works introduces a ROS-compatible solution for Smart Resource services decoupling on modular robots. Smart Resources are defined as cyber-physical systems that provide high-level operation services. The design and analysis of a new distributed communication architecture for accessing Smart Resource services is addressed along this document. This architecture is called ROS Multi-Peer Architecture (RMPA) and features real-time communication, fully decoupled ROS device execution, and device discovery. So, the integration of RMPA in ROS based developments provides realtime access to the high-level supplied by the Smart Resources. This integration promotes the development of ROS-compatible robot modules based on the Smart Resource design. Next, a set of tests is presented to compare RMPA and ROS communication performance. Moreover, a detailed study of the RMPA performance is also addressed. Finally, as a result of these experiments main advantages and withdrawals of this solution are discussed leading to the establishment of future work and enhancements.",Mobile robots; Decoupled subsystems; Distributed computer control systems; Real-time communications,Distributed Real-time Control Architecture for ROS-based Modular Robots,-,,,,YES,,,,,YES,,
S2106,1,Forward,journalArticle,2017,"Munera, Eduardo; Poza-lujan, Jose-luis; Posadas-yagüe, Juan-luis; Simó-ten, Jose-enrique; Blanes, Francisco",,,https://gredos.usal.es/handle/10366/133633,"Mobile robots need to manage a lot of sensors and actuators using micro-controllers.To do complexes tasks, a highly computation central unit is also needed. In many cases, a robot is a intelligent distributed system formed with a central unit, which manages and distributes several specific tasks to some micro-controller embedded systems onboard.Now these embedded systems are also evolving to more complex systems that are developed not only for executing simple tasks but offering some advanced algorithmsjust as complex data processing, adaptive execution, or fault-tolerance and alarm rising mechanisms. To manage these types of embedded systems a paradigm, calledSmart Resource has been developed. Smart Resources topology has been raised to manage resources which execution relies on a physical embedded hardware. TheseSmart Resources are defined as a list of distributed services that can configure its execution in order to accomplish a context and quality requirements. In order to provide a more general implementation Smart Resources are integrated into the RobotOperating System (ROS). Paper presents a solution based on the Turtlebot platformrunning ROS. The solution shows how robots can make use of all the functions andmechanisms provided by the ROS and the distribution, reliability and adaptability ofthe Smart Resources. In addition it is also addressed the flexibility and scalability ofimplementation by combining real and simulated devices into the same platform",,Integrating Smart Resources in ROS-based systems to distribute services,-,,,,YES,,,,,YES,,
S2107,1,Forward,conferencePaper,2016,"Van den Bergh, Jan; Cuenca Lucero, Fredy; Luyten, Kris; Coninx, Karin",2016 25th IEEE International Symposium on Robot and Human Interactive Communication (RO-MAN),10.1109/ROMAN.2016.7745225,,"Human-Robot Collaboration is increasingly considered in manufacturing to better combine the strengths of humans and robots. Establishing this human-robot collaboration may require multi-modal interaction; input to and output from the robot can both use multiple channels in sequence or in parallel. Designing effective interaction requires the expertise from different domains, possibly originating from people with different backgrounds. In our work we explore how composite events — hierarchical composition of events — can be used in a way that eases the communication within a multi-disciplinary team. In this paper, we present how the concept of composite events can be used to create different layers of abstraction that can be used to ease prototyping and discussion of human-robot collaboration with stakeholders through a supporting tool called Hasselt UIMS. At the lower level(s) of abstraction, the composite events can be mapped to the message-based communication as implemented in the Robotic Operating System (ROS), which is used to program collaborative robots, such as the Baxter robot from Rethink Robotics.",Collaboration; Robot kinematics; Service robots; Stakeholders; Speech; Man-machine systems,Toward specifying Human-Robot Collaboration with composite events,-,,,,YES,,,,,YES,,
S2108,1,Forward,conferencePaper,2018,"Nilles, Alexandra Q.; Beckman, Mattox; Gladish, Chase; LaViers, Amy",Proceedings of the 5th International Conference on Movement and Computing,10.1145/3212721.3212882,https://doi.org/10.1145/3212721.3212882,"Often, people such as educators, artists, and researchers wish to quickly generate robot motion. However, current toolchains for programming robots can be difficult to learn, especially for people without technical training. This paper presents the Improv system, a programming language for high-level description of robot motion with immediate visualization of the resulting motion on a physical or simulated robot. Improv includes a ""live coding"" wrapper for ROS (""Robot Operating System"", an open-source robot software framework which is widely used in academia and industry, and integrated with many commercially available robots). Commands in Improv are compiled to ROS messages. The language is inspired by choreographic techniques, and allows the user to compose and transform movements in space and time. In this paper, we present our work on Improv so far, as well as the design decisions made throughout its creation.",robotics; ROS; human-robot interaction; choreography; Haskell; live coding; roshask,Improv: Live Coding for Robot Motion Design,-,,,,YES,,,,,YES,,
S2112,1,Forward,conferencePaper,2019,"Dieber, Bernhard; Breiling, Benjamin",2019 Third IEEE International Conference on Robotic Computing (IRC),10.1109/IRC.2019.00019,,"Mobile manipulation will play an essential role in future production's intralogistics. In addition, it can be assumed that location-independence of manipulation will greatly contribute to flexible production and higher efficiency in robot use. Modular mobile manipulators can be combined from standalone robotic components like mobile platforms and serial arms. This combination enables more flexibility since the robot can be adapted to specific use-cases by exchanging hardware. However, since those robots tend to be very complex systems, their integration into networked Industry 4.0 environments will also cause security risks. In this paper, we present a security architecture and secure interaction workflows for modular mobile manipulators that on the one hand secure the system against unauthorized manipulation and on the other hand enable the integration of mobile manipulators into larger IT infrastructures. Using the example of our inhouse-developed CHIMERA mobile manipulator, we show which architectural means can be considered in order to make a modular mobile manipulator secure. We analyze the expected attack vectors on mobile manipulators and describe their mitigation within our architecture.",Computer architecture; Hardware; Software; Security; security; robotics; Service robots; Manipulators; modularity; ros; mobile manipulation,Security Considerations in Modular Mobile Manipulation,-,,,,YES,,,,,YES,,
S2113,1,Forward,conferencePaper,2021,"Kronauer, Tobias; Pohlmann, Joshwa; Matthé, Maximilian; Smejkal, Till; Fettweis, Gerhard",2021 IEEE International Conference on Multisensor Fusion and Integration for Intelligent Systems (MFI),10.1109/MFI52462.2021.9591166,,"The Robot Operating System 2 (ROS2) targets distributed real-time systems and is widely used in the robotics community. Especially in these systems, latency in data processing and communication can lead to instabilities. Though being highly configurable with respect to latency, ROS2 is often used with its default settings. In this paper, we investigate the end-to-end latency of ROS2 for distributed systems with default settings and different Data Distribution Service (DDS) middlewares. In addition, we profile the ROS2 stack and point out latency bottlenecks. Our findings indicate that end-to-end latency strongly depends on the used DDS middleware. Moreover, we show that ROS2 can lead to 50 % latency overhead compared to using low-level DDS communications. Our results imply guidelines for designing distributed ROS2 architectures and indicate possibilities for reducing the ROS2 overhead.",Conferences; Data processing; Distributed databases; Middleware; Real-time systems; Operating systems; Intelligent systems,Latency Analysis of ROS2 Multi-Node Systems,-,,,,YES,,,,,YES,,
S2116,1,Forward,journalArticle,2022,"Gao, Cong; Wang, Geng; Shi, Weisong; Wang, Zhongmin; Chen, Yanping",IEEE Internet of Things Journal,10.1109/JIOT.2021.3130054,,"The autonomous driving industry has mushroomed over the past decade. Although autonomous driving has undoubtedly become one of the most promising technologies of this century, its development faces multiple challenges, of which security is the major concern. In this article, we present a thorough analysis of autonomous driving security. First, the attack surface of autonomous driving is presented. After an analysis of the operation of autonomous driving in terms of key components and technologies, the security of autonomous driving is elaborated in four dimensions: 1) sensors; 2) operating system; 3) control system; and 4) vehicle-to-everything (V2X) communication. Sensor security is examined from five components, which are mainly responsible for self-positioning and environmental perception. The analysis of operating system security, the second dimension, is concentrated on the robot operating system. Concerning the control system security, the controller area network is approached mainly from vulnerabilities and protection measures. The fourth dimension, V2X communication security, is probed from four categories of attacks: 1) authenticity/identification; 2) availability; 3) data integrity; and 4) confidentiality with corresponding solutions. Moreover, the drawbacks of existing methods adopted in the four dimensions are also provided. Finally, a conceptual multilayer defense framework is proposed to secure the information flow from external communication to the physical autonomous vehicle.",Security; Sensor systems; Control systems; Sensors; security; Autonomous vehicles; robot operating system; Operating systems; Vehicle-to-everything; Attack surface; autonomous driving; control area network; data distribution service (DDS); sensor; unmanned vehicle; vehicle-to-everything (V2X) communication,Autonomous Driving Security: State of the Art and Challenges,-,,,,YES,,,,,YES,,
S2118,1,Forward,conferencePaper,2020,"Fernandez, J.; Allen, B.; Thulasiraman, P.; Bingham, B.",2020 IEEE International Systems Conference (SysCon),10.1109/SysCon47679.2020.9275872,,"Throughout the Department of Defense, there are ongoing efforts to increase cybersecurity and improve data transfer in unmanned robotic systems (UxS). This paper explores the performance of the Robot Operating System (ROS) 2, which is built with the Data Distribution Service (DDS) standard as a middleware. Based on how quality of service (QoS) parameters are defined in the robotic middleware interface, it is possible to implement strict delivery requirements to different nodes on a dynamic nodal network with multiple unmanned systems connected. Through this research, different scenarios with varying QoS settings were implemented and compared to baseline values to help illustrate the impact of latency and throughput on data flow. DDS security settings were also enabled to help understand the cost of overhead and performance when secured data is compared to plaintext baseline values. Our experiments were performed using a basic ROS 2 network consisting of two nodes (one publisher and one subscriber). Our experiments showed a measurable latency and throughput change between different QoS profiles and security settings. We analyze the trends and tradeoffs associated with varying QoS and security settings. This paper provides performance data points that can be used to help future researchers and developers make informative choices when using ROS 2 for UxS.",Throughput; History; Security; Middleware; security; Quality of service; Reliability; Robots; ROS; robotic systems; unmanned systems,Performance Study of the Robot Operating System 2 with QoS and Cyber Security Settings,-,,,,YES,,,,,YES,,
S2119,1,Forward,conferencePaper,2021,"Puck, L.; Keller, P.; Schnell, T.; Plasberg, C.; Tanev, A.; Heppner, G.; Roennau, A.; Dillmann, R.",2021 IEEE 17th International Conference on Automation Science and Engineering (CASE),10.1109/CASE49439.2021.9551447,,"Modern robots are mainly controlled by monolithic black-box controllers provided by the individual manufacturers. In research institutions the first version of the Robot Operating System (ROS1) is widely used for different applications. However, ROS1 lacks real-time capable communication. The ongoing development of ROS2 promises to break this paradigm. By employing Data Distribution Service (DDS) as a middleware the modular architecture aims at providing realtime capabilities. This study assesses the current prospects and limitations of ROS2. It gains novel insights towards improved and, in particular, reliable results regarding latencies and jitter. To this end, the allocation and transmission of ROS2 messages is evaluated in an example application for robotic control. An oscilloscope is applied for external validation of the measurements in such a time-synchronized distributed network. The complete application is set up from non-real-time object detection towards real-time control via ROS2 and EtherCAT. An in-depth evaluation of the ROS2 communication stack on a single host and in distributed setups is included. With real-time safe memory allocation and highly privileged ROS2 processes real-time capabilities are ensured.",Resource management; Object detection; Real-time systems; Performance evaluation; Operating systems; Particle measurements; Oscilloscopes,Performance Evaluation of Real-Time ROS2 Robotic Control in a Time-Synchronized Distributed Network,-,,,,YES,,,,,YES,,
S2120,1,Forward,conferencePaper,2021,"Park, Andrew T.; Dill, Richard; Hodson, Douglas D.; Henry, Wayne C.",2021 International Conference on Computational Science and Computational Intelligence (CSCI),10.1109/CSCI54926.2021.00044,,"Data Distribution Service (DDS) is a publish-subscribe middleware used to distribute data between real-time systems, production environments, and small embedded plat-forms. In DDS, Nodes have at least one Publisher or Subscriber. Publishers and Subscribers use unique Topics to send and receive messages. Each Subscriber has permission to read the Publisher’s message if it references the same Topic sent from the Publisher. This capability supports real-time communication, sacrificing security, such as impersonation attacks.This paper details, tests, and evaluates DDS-Cerberus (DDS-C), a novel distributed communication protocol integrating Ker-beros ticketing system with DDS. DDS-C integrates Kerberos au-thentication and Ticket retrieval with Publishers and Subscribers. Experiments have six parameters each with a 2:1 Publisher to Subscriber ratio. Performance tests modify the message byte size to emulate .txt and .mp3 files: 10 KB, 100 KB, 1 MB, 5 MB, 10 MB, and 20 MB. Experiment metrics for functionality and performance are the messages per second and latency in a wired environment. Experiments utilize ROS 2 (Robot Operating System) as a testbed. Initial tests for a baseline are conducted without DDS modifications and subsequent tests with DDS-C modifications. The results reveal that due to the ticketing compo-nent, DDS-C increases DDS security by preventing impersonation attacks while negligibly increasing average processing compared to baseline results.",Protocols; Production; Measurement; DDS; ROS 2; Operating systems; Publish-subscribe; Scientific computing; im-personation; Impersonation attacks; Kerberos; publish-subscribe,DDS-Cerberus: Ticketing Performance Experiments and Analysis,-,,,,YES,,,,,YES,,
S2122,1,Forward,journalArticle,2021,"Caiazza, Gianluca <1991>",,,http://dspace.unive.it/handle/10579/18475,"Cyber-physical systems (CPS) are increasingly deployed as part of the interconnected robotic cyber-infrastructures which are known as the Industrial Internet of Things (IIoT) network. Those pervasive devices are capable of automatizing various tasks and provide novel functionalities in a wide range of applications. However, this growth made the devices a worthwhile target for attackers and cybercriminals as well. The new frontiers of large-scale deployments of connected smart devices, in which we observed a tremendous growth in the amount of stored and processed sensitive data, have maturated into a widespread suspicion concerning the way in which these flow into the infrastructures. How do we make these devices safe? How can we verify their correct operation? Due to the intrinsic limitations of those devices, either from the power consumption point of view and the actual computational power at our disposal, engineering cybersecurity solutions are not trivial. This thesis focuses on discussing and developing security solutions for those networks by analyzing the application of the security pillars of Confidentiality, Integrity, Availability, Privacy, Authenticity and Trustworthiness, Non-Repudiation, Accountability, and Auditability. We provide an overview of the robotic scene and introduce the Robot Operating System (ROS), the framework we adopted as a testbed of our solutions. More in detail, this work discusses (i) novel solutions in the field of authentication and authorization in access control architectures and policy generation, management, and distribution, (ii) vulnerabilities and countermeasures in robotic frameworks, and (iii) novel approaches of network vulnerabilities excavation and accountability. In order to provide agnostic research tools and results, we develop static solutions at the application-level that could exploit prior offline computation power.    The main results of the thesis can be summarized as follows: (i) a state of the art analysis of application-level threats on a general robotic framework and an in-deep review of the attack surface on ROS (ii) the formalization of novel approaches to access control architectures distribution, and the dissertation of an advanced policy management tooling we developed in the field of authentication and authorization  (iii) the definition of a novel network vulnerability excavation tool and discussion on attribute-based encryption to tackle privacy issues (iv) creation of a blockchain-powered software-based black box for a robotic network to address Accountability and Non-Repudiation    The results discussed in this thesis give a solid base for the definition of the future security mechanisms for robotic devices that could be easily and securely integrated into big-scale deployments spreading security solutions by reducing overall the tradeoff between security and usability.",,Application-level security for robotic networks,-,,,,YES,,,,,YES,,
S2123,1,Forward,conferencePaper,2020,"Parmar, Navrattan; Ranga, Virender; Simhachalam Naidu, B.",Inventive Communication and Computational Technologies,10.1007/978-981-15-0146-3_25,,"DDS is a real-time protocolParmar, Navrattan forRanga, Virender fastSimhachalam Naidu, B. communication. It implements Data-Centric Publish–Subscribe (DCPS) implementation and an optional higher-layer Data Local Reconstruction Layer (DLRL). DCPS ensures the reliability of message delivery to proper recipient and uses in syntactic interoperability in different platforms and languages. ROS is a widely used platform to develop robots, drones, and other cyber–physical systems (CPSs). ROS 2 is built on top of middleware DDS and provided abstraction in communication. Adaptive AUTOSAR (Automotive Open System Architecture) also adopted the DDS standards as one of the communication bindings. This research paper proposes connection establishment and interoperability between ROS 2 and Adaptive AUTOSAR software using DDS as a middleware. Interoperability is the major challenge with the increasing number of IoT devices, being solved by DDS. The outcome of this research is useful for autonomous cars, and the proposed concept can be extended for fog computing and other interoperability problems. DDS will bring a revolution in the near future in automotive industry, smart grid, smart homes, and other smart applications.",DDS; Fog computing; Adaptive application (AA); Adaptive AUTOSAR; Adaptive Platform (AP); Automotive software stack; Cyber–physical system (CPS); Electric control unit (ECU); Inter-process communication (IPC); ROS 2.0; Syntactic interoperability,"Syntactic Interoperability in Real-Time Systems, ROS 2, and Adaptive AUTOSAR Using Data Distribution Services: An Approach",-,,,,YES,,,,,YES,,
S2124,1,Forward,bookSection,2021,"Chung, Keywhan; Li, Xiao; Tang, Peicheng; Zhu, Zeran; Kalbarczyk, Zbigniew T.; Kesavadas, Thenkurussi; Iyer, Ravishankar K.",Game Theory and Machine Learning for Cyber Security,,https://onlinelibrary.wiley.com/doi/abs/10.1002/9781119723950.ch15,"Machine learning and artificial intelligence are being adopted to varying applications for automation and flexibility. Cyber security to be no different, researchers and engineers have been investigating the use of data-driven technologies to harden the security of cyberinfrastructure and the possibility of attackers exploiting vulnerabilities in such technology (e.g. adversarial machine learning). However, not much work has investigated how attackers might try to take advantage of machine learning and AI technology against us. This chapter discusses the potential advances in targeted attacks through the utilization of machine learning techniques. In this chapter, we introduce a new concept of AI-driven malware which advances already sophisticated cyber threats (i.e. advanced targeted attacks) that are on the rise. Furthermore, we demonstrate our prototype AI-driven malware, built on top of a set of statistical learning technologies, on two distinct cyber-physical systems (i.e. the Raven-II surgical robot and a building automation system). Our experimental results demonstrate that with the support of AI technology, malware can mimic human attackers in deriving attack payloads that are custom to the target system and in determining the most opportune time to trigger the attack payload so to maximize the chance of success in realizing the malicious intent. No public records report a real threat driven by machine learning models. However, such advanced malware might already exist and simply remain undetected. We hope this chapter motivates further research on advanced offensive technologies, not to favor the adversaries, but to know them and be prepared.",machine learning; cyber-physical systems; cyber security; AI-driven malware; malware,Machine Learning in the Hands of a Malicious Adversary: A Near Future If Not Reality 1,-,,,,YES,,,,,YES,,
S2125,1,Forward,conferencePaper,2019,"Takemoto, Shu; Nishida, Kanata; Nozaki, Yusuke; Yoshikawa, Masaya; Honda, Shinya; Kurachi, Ryo",Proceedings of the 2019 2nd Artificial Intelligence and Cloud Computing Conference,10.1145/3375959.3375976,https://doi.org/10.1145/3375959.3375976,"With the expansion of Industry 4.0, the factory automation (FA) system has become more complex due to wireless communication between multiple devices. Therefore, short-term development and secure communication are required for development cost and cyber-security issues. For this reason, a secure robot operating system 2 (SROS2) was developed. SROS2 is an open-source platform applicable to industrial robots. SROS2 achieves short-term development with various libraries and implements encryption and authentication by embedding advanced encryption standard - Galois/counter mode (AES-GCM). On the other hand, AES-GCM has been reported to be vulnerable to spoofing. Therefore, a secure encryption algorithm to replace AES-GCM is required. In addition, the system must be able to operate without problems after replacement. For these reasons, this study embeds secure authenticated encryption instead of AES-GCM in SROS2. The results of an evaluation experiment on the latency of the encryption algorithm showed that Ascon is more effective than AES-GCM.",Embedded system; DDS; Authenticated encryption; SROS2,Performance Evaluation of CAESAR Authenticated Encryption on SROS2,-,,,,YES,,,,,YES,,
S2126,1,Forward,journalArticle,2020,"Mazzeo, Giovanni; Staffa, Mariacarla",International Journal of Social Robotics,10.1007/s12369-019-00581-4,https://doi.org/10.1007/s12369-019-00581-4,"The spread adoption of humanoid social robots in different application fields is growing the interest of hackers who could violate the privacy of people, or—even worse—threaten humans’ life from physical and emotional/social point of views. Different vectors of attack exist, which are more easily exploitable if physical access to the target robot is available. This is very likely for humanoids that typically reside in untrusted environments where physically access to the robot is allowed and expected, thus permitting anyone to exploit the Linux kernel vulnerability (e.g., through the insertion of a USB pen drive) with the objective of tampering sensitive data. The Robot Operating System (ROS) is at the core of humanoids. Thus, it is crucial for their security. The most-recent solutions introduced in ROS2, SROS, and H-ROS are not sufficient for facing powerful adversaries. In this paper, we first identify the uncovered ROS weaknesses, which are particularly worrying in the case of humanoids. Then, we present our patched ROS solution called Trusted-ROS (TROS) leveraging hardware-assisted trusted computing to shield data managed by ROS, which otherwise would reside in robot’s memory unencrypted. The design of TROS is reported, together with a prototype implementation using a simulated version of the NAO humanoid secured through an Intel SGX hardware. Finally, we evaluated the proposed solution from both security and performance perspectives in order to demonstrate the practicability of our approach.",Humanoid robots; Cyber-Physical Systems; Robotic operating system; Secure enclave; Trusted Execution Environment,TROS: Protecting Humanoids ROS from Privileged Attackers,-,,,,YES,,,,,YES,,
S2127,1,Forward,conferencePaper,2021,"Kang, Hwancheol; Lee, Cheonghwa; Choi, Wooyoung; Hong, Seongsoo",2021 18th International Conference on Ubiquitous Robots (UR),10.1109/UR52253.2021.9494646,,"ROS has been completely refactored and evolved into ROS 2 to address the ever-increasing software complexity of autonomous machines. While it has become a de facto standard software platform for autonomous machines, ROS 2 still has room for improvement. It lacks support for essential features such as real-time stream processing, mode change, sensor fusion and rate control for output shaping. Moreover, its programming model is at a lower level than what most programmers would expect.In this paper, we carefully analyze the shortcomings of ROS 2 and propose to augment it with the Splash programming framework. In doing so, we host Splash on top of the ROS 2 software stack by conducting model conversion between Splash and ROS 2. We refer to the end result as Splash on ROS 2. To show its viability, we conducted a case study with a robot arm controller performing DNN-based object detection and motion planning. The case study qualitatively confirms that Splash on ROS 2 relieves the programming burden on developers, increases the software development productivity and improves the quality of the software.",Programming; Runtime; Object detection; Process control; Productivity; Manipulators; Sensor fusion,Splash on ROS 2: A Runtime Software Framework for Autonomous Machines,-,,,,YES,,,,,YES,,
S2131,1,Forward,conferencePaper,2022,"Aartsen, Max; Banga, Kanta; Talko, Konrad; Touw, Dustin; Wisman, Bertus; Meïnsma, Daniel; Björkqvist, Mathias",2022 30th Mediterranean Conference on Control and Automation (MED),10.1109/MED54222.2022.9837282,,"Robot Operating System 2 (ROS2) is the latest release of a framework for enabling robot applications. Data Distribution Service (DDS) middleware is used for communication between nodes in a ROS2 cluster. The DDS middleware provides a distributed discovery system, message definitions and serialization, and security. In ROS2, the DDS middleware is accessed through an abstraction layer, making it easy to switch from one implementation to another. The existing middleware implementations differ in a number of ways, e.g., in how they are supported in ROS2, in their support for the security features, their ease of use, their performance, and their interoperability. In this work, the focus is on the ease of use, interoperability, and security features aspects of ROS2 DDS middleware. We compare the ease of installation and ease of use of three different DDS middleware, and test the interoperability of different middleware combinations in simple deployment scenarios. We highlight the difference that enabling the security option makes to interoperability, and conduct performance experiments that show the effect that turning on security has on the communication performance. Our results provide guidelines for choosing and deploying DDS middleware on a ROS2 cluster.",middleware; Usability; Security; Switches; Turning; interoperability; Middleware; security; Operating systems; Publish-subscribe; dds; ros2,Analyzing Interoperability and Security Overhead of ROS2 DDS Middleware,-,,,,YES,,,,,YES,,
S2133,1,Forward,conferencePaper,2021,"Mafioletti, Diego Rossi; de Mello, Ricardo Carminati; Ruffini, Marco; Frascolla, Valerio; Martinello, Magnos; Ribeiro, Moises R. N.",2021 17th International Conference on Network and Service Management (CNSM),10.23919/CNSM52442.2021.9615504,,"In-Network Computing is a promising field that can be explored to leverage programmable network devices to offload computing towards the edge of the network. This has created great interest in supporting a wide range of network functionality in the data plane. Considering a networked robotics domain, this brings new opportunities to tackle the communication latency challenges. However, this approach opens a room for hardware-level exploits, with the possibility to add a malicious code to the network device in a hidden fashion, compromising the entire communication in the robotic facilities. In this work, we expose vulnerabilities that are exploitable in the most widely used flexible framework for writing robot software, Robot Operating System (ROS). We focus on ROS protocol crossing a programmable SmartNIC as a use case for In-Network Hijacking and In-Network Replay attacks, that can be easily implemented using the P4 language, exposing security vulnerabilities for hackers to take control of the robots or simply breaking the entire system.",Protocols; Security; security; P4; Malware; Robots; ROS; Operating systems; Writing; Computer hacking; In-network computing,Programmable Data Planes as the Next Frontier for Networked Robotics Security: A ROS Use Case,-,,,,YES,,,,,YES,,
S2137,1,Forward,journalArticle,2020,"Siefke, Lennart; Sommer, Volker; Wudka, Björn; Thomas, Carsten",Robotics,10.3390/robotics9040078,https://www.mdpi.com/2218-6581/9/4/78,"Multi-robot systems are often static and pre-configured during the design time of their software. Emerging cooperation between unknown robots is still rare and limited. Such cooperation might be basic like sharing sensor data or complex like conjoined motion planning and acting. Robots should be able to detect other robots and their abilities during runtime. When cooperation seems to be possible and beneficial, it should be initiated autonomously. A centralized cloud control shall be avoided. Using software patterns belonging to service-oriented architectures, the robots are able to discover other robots and their abilities during runtime. These abilities are implemented as services and described by their interfaces. Composition of services can be done easily and flexibly. The software patterns originally belonging to cloud computing could be successfully adopted to decentralized multi-robot systems. The developed concept allows autonomous systems to cooperate flexibly and to compose multi-robot systems during runtime.",multi-agent systems; autonomous robotics; multi-robot systems; service-oriented architectures; systems of systems,Robotic Systems of Systems Based on a Decentralized Service-Oriented Architecture,-,,,,YES,,,,,YES,,
S2138,1,Forward,journalArticle,2019,"Casini, Daniel; Blaß, Tobias; Lütkebohle, Ingo; Brandenburg, Björn B.; Wagner, Michael",,10.4230/LIPICS.ECRTS.2019.6,http://drops.dagstuhl.de/opus/volltexte/2019/10743/,"Bounding the end-to-end latency of processing chains in distributed real-time systems is a wellstudied problem, relevant in multiple industrial ﬁelds, such as automotive systems and robotics. Nonetheless, to date, only little attention has been given to the study of the impact that speciﬁc frameworks and implementation choices have on real-time performance. This paper proposes a scheduling model and a response-time analysis for ROS 2 (speciﬁcally, version “Crystal Clemmys” released in December 2018), a popular framework for the rapid prototyping, development, and deployment of robotics applications with thousands of professional users around the world. The purpose of this paper is threefold. Firstly, it is aimed at providing to robotic engineers a practical analysis to bound the worst-case response times of their applications. Secondly, it shines a light on current ROS 2 implementation choices from a real-time perspective. Finally, it presents a realistic real-time scheduling model, which provides an opportunity for future impact on the robotics industry.","000 Computer science, knowledge, general works; Computer Science",Response-Time Analysis of ROS 2 Processing Chains Under Reservation-Based Scheduling,-,,,,YES,,,,,YES,,
S2139,1,Forward,conferencePaper,2021,"Choi, Hyunjong; Xiang, Yecheng; Kim, Hyoseung",2021 IEEE 27th Real-Time and Embedded Technology and Applications Symposium (RTAS),10.1109/RTAS52030.2021.00028,,"In ROS (Robot Operating System), most applications in time- and safety-critical domain are constructed in the form of callback chains with data dependencies. Due to the shortcomings in its real-time support, ROS does not provide a strong timing guarantee and may lead to disastrous results. Although ROS2 claims to enhance the real-time capability, ensuring predictable end-to-end chain latency still remains a challenging problem. In this paper, we propose a new priority-driven chain-aware scheduler for the ROS2 framework and present end-to-end latency analysis for the proposed scheduler. With our scheduler, callbacks are prioritized based on the given timing requirements of the corresponding chains so that the end-to-end latency of critical chains can be improved with a predictable bound. The proposed scheduling design includes priority assignment and resource allocation considering all ROS2 scheduling-related abstractions, e.g., callbacks, nodes, and executors. To the best of our knowledge, this is the first work to address the inherent limitations of ROS2 in end-to-end latency by proposing a new scheduler design. We have implemented our scheduler in ROS2 running on NVIDIA Xavier NX. We have conducted case studies and schedulability experiments. The results show that the proposed scheduler yields a substantial improvement in end-to-end latency over the default ROS2 scheduler and the latest work in real-world scenarios.",Resource management; Software; Timing; Real-time systems; Quality of service; Autonomous vehicles; Operating systems; ROS2; End to end latency; Real time embedded systems,PiCAS: New Design of Priority-Driven Chain-Aware Scheduling for ROS2,-,,,,YES,,,,,YES,,
S2140,1,Forward,journalArticle,2020,"Coronado, Enrique; Venture, Gentiane",Sensors,10.3390/s20051500,https://www.mdpi.com/1424-8220/20/5/1500,"This article presents the novel Python, C# and JavaScript libraries of Node Primitives (NEP), a high-level, open, distributed, and component-based framework designed to enable easy development of cross-platform software architectures. NEP is built on top of low-level, high-performance and robust sockets libraries (ZeroMQ and Nanomsg) and robot middlewares (ROS 1 and ROS 2). This enables platform-independent development of Human–Robot Interaction (HRI) software architectures. We show minimal code examples for enabling Publish/Subscribe communication between Internet of Things (IoT) and Robotics modules. Two user cases performed outside laboratories are briefly described in order to prove the technological feasibility of NEP for developing real-world applications. The first user case briefly shows the potential of using NEP for enabling the creation of End-User Development (EUD) interfaces for IoT-aided Human–Robot Interaction. The second user case briefly describes a software architecture integrating state-of-art sensory devices, deep learning perceptual modules, and a ROS -based humanoid robot to enable IoT-aided HRI in a public space. Finally, a comparative study showed better latency results of NEP over a popular state-of-art tool (ROS using rosbridge) for connecting different nodes executed in local-host and local area network (LAN).",artificial intelligence and robotics; human–computer interaction; human–robot interaction; internet of robot things,"Towards IoT-Aided Human–Robot Interaction Using NEP and ROS: A Platform-Independent, Accessible and Distributed Approach",-,,,,YES,,,,,YES,,
S2141,1,Forward,journalArticle,2021,"Ginting, Muhammad Fadhil; Otsu, Kyohei; Edlund, Jeffrey A.; Gao, Jay; Agha-Mohammadi, Ali-Akbar",IEEE Robotics and Automation Letters,10.1109/LRA.2021.3061393,,"A well-structured and reliable communication system is key to the successful operations of multi-robot systems. In this letter, we present our design and implementation of a multi-robot communication architecture CHORD (Collaborative High-bandwidth Operations with Radio Droppables) based on two popular robotics middleware, ROS 1 and ROS 2. We discuss the benefit and best practices of combining two different frameworks that share the same spirit and show its performance from large-scale real-world experiments. The proposed system is developed as part of Team CoSTAR's effort for the DARPA Subterranean (SubT) Challenge. The system has been field-proved and demonstrated in the Urban Circuit event, where team CoSTAR won first place. To our knowledge, this work is the first real-world demonstration of a ROS 2-based multi-robot system in such large-scale extreme environments. From the significant improvement of the communication performance and the ease of transition from existing ROS 1 systems, this work encourages wider adoption of ROS 2 in field robotics applications.",Collaboration; Quality of service; Reliability; Robots; Multi-robot systems; field robots; multi-robot systems; Bridges; Communication systems; Networked robots,CHORD: Distributed Data-Sharing via Hybrid ROS 1 and 2 for Multi-Robot Exploration of Large-Scale Complex Environments,-,,,,YES,,,,,YES,,
S2143,1,Forward,conferencePaper,2020,"Puck, L.; Keller, P.; Schnell, T.; Plasberg, C.; Tanev, A.; Heppner, G.; Roennau, A.; Dillmann, R.",2020 IEEE 16th International Conference on Automation Science and Engineering (CASE),10.1109/CASE48305.2020.9217010,,"A monolithic black-box controller made by the individual robotic manufacturers commonly controls modern industrial robots. The setup's single components are not accessible nor exchangeable, often due to them being specially tuned and adjusted to fulfill the demanding requirements for robotic control. The open-source framework ROS enables to combine these monolithic controllers with simple interfaces, therefore allowing more complex robotic applications. The next generation, ROS2, targets highly modular systems of sensors, actuators and controllers, each being interchangeable and further providing real-time capabilities by employing DDS as middleware. This study uses system inherent tools alongside non-invasive measurements for comprehensive insights, thereby guiding to ROS2 applications on an underlying distributed and synchronized real-time Linux system.",Kernel; Hardware; Linux; Real-time systems; Synchronization; Service robots,Distributed and Synchronized Setup towards Real-Time Robotic Control using ROS2 on Linux,-,,,,YES,,,,,YES,,
S2144,1,Forward,conferencePaper,2020,"Tang, Yue; Feng, Zhiwei; Guan, Nan; Jiang, Xu; Lv, Mingsong; Deng, Qingxu; Yi, Wang",2020 IEEE Real-Time Systems Symposium (RTSS),10.1109/RTSS49844.2020.00030,,"ROS (Robot Operating System) is currently the most popular robotic software development framework. Robotic software in safe-critical domain are usually subject to hard real-time constraints, so designers must formally model and analyze their timing behaviors to guarantee that real-time constraints are always honored at runtime. This paper studies real-time scheduling and analysis of processing chains in ROS2, the second-generation ROS with a major consideration of real-time capability. First, we study response time analysis of processing chains on ROS2 executors. We show that the only existing result of this problem is both optimistic and pessimistic, and develop new techniques to address these problems and significantly improve the analysis precision. Second, we reveal that the response time of a processing chain on an executor only depends on its last scheduling entity (callback), which provides useful guidance for designers to improve not only the response time bound, but also the actual worst-case/average response time of the system at little design cost. We conduct experiments with both randomly generated workload and a case study on realistic ROS2 platforms to evaluate and demonstrate our results.",Runtime; Software; Timing; Time factors; Real-time systems; Robots; Operating systems,Response Time Analysis and Priority Assignment of Processing Chains on ROS2 Executors,-,,,,YES,,,,,YES,,
S2145,1,Forward,conferencePaper,2021,"Kronauer, Tobias; Pohlmann, Joshwa; Matthé, Maximilian; Smejkal, Till; Fettweis, Gerhard",2021 IEEE International Conference on Multisensor Fusion and Integration for Intelligent Systems (MFI),10.1109/MFI52462.2021.9591166,,"The Robot Operating System 2 (ROS2) targets distributed real-time systems and is widely used in the robotics community. Especially in these systems, latency in data processing and communication can lead to instabilities. Though being highly configurable with respect to latency, ROS2 is often used with its default settings. In this paper, we investigate the end-to-end latency of ROS2 for distributed systems with default settings and different Data Distribution Service (DDS) middlewares. In addition, we profile the ROS2 stack and point out latency bottlenecks. Our findings indicate that end-to-end latency strongly depends on the used DDS middleware. Moreover, we show that ROS2 can lead to 50 % latency overhead compared to using low-level DDS communications. Our results imply guidelines for designing distributed ROS2 architectures and indicate possibilities for reducing the ROS2 overhead.",Conferences; Data processing; Distributed databases; Middleware; Real-time systems; Operating systems; Intelligent systems,Latency Analysis of ROS2 Multi-Node Systems,-,,,,YES,,,,,YES,,
S2146,1,Forward,conferencePaper,2019,"Scheunemann, Marcus M.; van Dijk, Sander G.",RoboCup 2019: Robot World Cup XXIII,10.1007/978-3-030-35699-6_34,,"There has always been much motivation for sharing code and solutions among teams in the RoboCup community. Yet the transfer of code between teams was usually complicated due to a huge variety of used frameworks and their differences in processing sensory information. The RoboCup@Home league has tackled this by transitioning to ROS as a common framework. In contrast, other leagues, such as those using humanoid robots, are reluctant to use ROS, as in those leagues real-time processing and low-computational complexity is crucial. However, ROS 2 now offers built-in support for real-time processing and promises to be suitable for embedded systems and multi-robot systems. It also offers the possibility to compose a set of nodes needed to run a robot into a single process. This, as we will show, reduces communication overhead and allows to have one single binary, which is pertinent to competitions such as the 3D-Simulation League. Although ROS 2 has not yet been announced to be production ready, we started the process to develop ROS 2 packages for using it with humanoid robots (real and simulated). This paper presents the developed modules, our contributions to ROS 2 core and RoboCup related packages, and most importantly it provides benchmarks that indicate that ROS 2 is a promising candidate for a common framework used among leagues.",Humanoid robots; Embedded system; Autonomous robots; ROS 2; Open source; Minimal hardware; Real-time system; Robot framework; Robot software,ROS 2 for RoboCup,-,,,,YES,,,,,YES,,
S2147,1,Forward,conferencePaper,2021,"Blaß, Tobias; Casini, Daniel; Bozhko, Sergey; Brandenburg, Björn B.",2021 IEEE Real-Time Systems Symposium (RTSS),10.1109/RTSS52674.2021.00016,,"Robots are commonly subject to real-time constraints. To ensure that such constraints are met, recent work has analyzed the response times of processing chains under ROS 2, a popular robotics framework. However, prior work supports only scalar worst-case execution time bounds and does not exploit that the ROS 2 scheduling mechanism is starvation-free. This paper proposes a novel response-time analysis for ROS 2 processing chains that accounts for both the high execution-time variance typically encountered in robotics workloads and the starvation freedom of the default ROS 2 callback scheduler. Experimental results from both synthetic callback graphs and a real ROS 2 workload empirically show the proposed analysis to be much more accurate (often by a factor of 2x or more).",Analytical models; Time factors; Real time systems; Robotics; Real-time systems; Open source software; Robots; ROS; Resource Reservation; Response time Analysis,A ROS 2 Response-Time Analysis Exploiting Starvation Freedom and Execution-Time Variance,-,,,,YES,,,,,YES,,
S2149,1,Forward,conferencePaper,2021,"Puck, L.; Keller, P.; Schnell, T.; Plasberg, C.; Tanev, A.; Heppner, G.; Roennau, A.; Dillmann, R.",2021 IEEE 17th International Conference on Automation Science and Engineering (CASE),10.1109/CASE49439.2021.9551447,,"Modern robots are mainly controlled by monolithic black-box controllers provided by the individual manufacturers. In research institutions the first version of the Robot Operating System (ROS1) is widely used for different applications. However, ROS1 lacks real-time capable communication. The ongoing development of ROS2 promises to break this paradigm. By employing Data Distribution Service (DDS) as a middleware the modular architecture aims at providing realtime capabilities. This study assesses the current prospects and limitations of ROS2. It gains novel insights towards improved and, in particular, reliable results regarding latencies and jitter. To this end, the allocation and transmission of ROS2 messages is evaluated in an example application for robotic control. An oscilloscope is applied for external validation of the measurements in such a time-synchronized distributed network. The complete application is set up from non-real-time object detection towards real-time control via ROS2 and EtherCAT. An in-depth evaluation of the ROS2 communication stack on a single host and in distributed setups is included. With real-time safe memory allocation and highly privileged ROS2 processes real-time capabilities are ensured.",Resource management; Object detection; Real-time systems; Performance evaluation; Operating systems; Particle measurements; Oscilloscopes,Performance Evaluation of Real-Time ROS2 Robotic Control in a Time-Synchronized Distributed Network,-,,,,YES,,,,,YES,,
S2151,1,Forward,report,2019,"Fernandez, Jose M.",,,https://apps.dtic.mil/sti/citations/AD1080210,"Throughout the Department of Defense, efforts to increase cybersecurity and improve data transfer in unmanned robotic systems UxS have been ongoing at warfare centers NUWC, SPAWAR, etc. and research facilities NPS. This thesis explores the performance of the Robot Operating System ROS 2, which is built with the Data Distribution Service DDS standard as a middleware. Based on how quality of service QoS parameters are defined in the robotic middleware interface, it is possible to implement strict delivery requirements to different nodes on a dynamic nodal network with multiple unmanned systems connected. Through this research, different scenarios with varying QoS settings were implemented and compared to baseline values to help illustrate the impact of latency and throughput on data flow. DDS security settings were also enabled to help understand the true cost of overhead and performance when secured data is compared to plaintext baseline values. Our experiments were performed using a basic ROS 2 network consisting of two nodes publisher and subscriber. Our experiments showed a measurable latency and throughput change between different QoS profiles and security settings. We analyze the trends and tradeoffs associated with varying QoS and security settings. This thesis provides performance data points that can be used to help future researchers and developers make informative choices when using ROS 2 for UxS.",,Quality Of Service And Cybersecurity Communication Protocols Analysis For The Robot Operating System 2,-,,,,YES,,,,,YES,,
S2153,1,Forward,conferencePaper,2021,"Barut, Sinan; Boneberger, Marco; Mohammadi, Pouya; Steil, Jochen J.",2021 IEEE International Conference on Robotics and Automation (ICRA),10.1109/ICRA48506.2021.9561026,,"Numerous robotic and control applications have strict real-time requirements, which, when violated, result in reduced quality of service or, in case of safety critical applications, might even have catastrophic consequences. To ensure that certain real-time constraints are satisfied, roboticists have relied on real-time safe frameworks, environments and middleware. With the introduction of ROS 2, alongside kernel patches such as PREEMPT_RT, there is an abundance of solutions to pick from. This paper compares OROCOS and ROS 2 over PREEMPT_RT and vanilla Linux kernels in a variety of benchmarks and draws conclusions on their performance in real-time critical applications. The outcome of the benchmark shows comparable performances under normal conditions. However, when the system is under stress both frameworks suffer in different fashions. Furthermore, the results show an accumulating error which over time violates the real-time requirements in both frameworks. These findings are paramount in conducting real world application with real-time constraints.",Kernel; Benchmark testing; Conferences; Linux; Real-time systems; Quality of service; Safety,Benchmarking Real-Time Capabilities of ROS 2 and OROCOS for Robotics Applications,-,,,,YES,,,,,YES,,
S2156,1,Forward,journalArticle,2021,"Aragão, Ícaro Pires de Souza",,,https://bdm.unb.br/handle/10483/30630,"Carros autônomos é um assunto atual e popular. Muitas preocupações relativas a segurança no tráfego poderão ser reduzidas quando versões baratas e funcionais desses veículos se popularizarem. Esses veículos são robôs altamente complexos e avançados que, para evitar acidentes e tomarem as melhores decisões possíveis, usam uma variedade de sensores para perceber suas redondezas da melhor maneira possível. A fusão de dados de multisensores pode contribuir para essa tarefa unindo os melhores pedaços de informação de cada um dos sensores para formar uma versão mais completa e mais acurada dessa informação. Softwares que realizam essas tarefas são frequentemente reimplementados dentre diferentes empresas e centros de pesquisa para suas próprias configurações de hardware e objetivos. A fusão no nível dos objetos é realizada num nível mais alto de abstração e, por essa razão, contribui para modularidade e reuso da solução. Uma solução de software para resolver parte desse problema é desenvolvida neste trabalho utilizando o framework ROS 2. Ela implementa o preprocessamento das listas de objeto na camada de fusão de uma arquitetura de fusão à nível de objetos. Esse processamento é composto do alinhamento espacial e temporal, mais a associação de objetos. Por fim, este preprocessamento foi validado utilizando o simulador de veículos autônomos CARLA, utilizando como métrica principal o número de associações que falharam nos casos de teste.",,A software solution for preprocessing objects in object-level multisensor fusion for self-driving vehicles perception,-,,,,YES,,,,,YES,,
S2158,1,Forward,journalArticle,2021,"Aragão, Ícaro Pires de Souza",,,https://bdm.unb.br/handle/10483/30630,"Carros autônomos é um assunto atual e popular. Muitas preocupações relativas a segurança no tráfego poderão ser reduzidas quando versões baratas e funcionais desses veículos se popularizarem. Esses veículos são robôs altamente complexos e avançados que, para evitar acidentes e tomarem as melhores decisões possíveis, usam uma variedade de sensores para perceber suas redondezas da melhor maneira possível. A fusão de dados de multisensores pode contribuir para essa tarefa unindo os melhores pedaços de informação de cada um dos sensores para formar uma versão mais completa e mais acurada dessa informação. Softwares que realizam essas tarefas são frequentemente reimplementados dentre diferentes empresas e centros de pesquisa para suas próprias configurações de hardware e objetivos. A fusão no nível dos objetos é realizada num nível mais alto de abstração e, por essa razão, contribui para modularidade e reuso da solução. Uma solução de software para resolver parte desse problema é desenvolvida neste trabalho utilizando o framework ROS 2. Ela implementa o preprocessamento das listas de objeto na camada de fusão de uma arquitetura de fusão à nível de objetos. Esse processamento é composto do alinhamento espacial e temporal, mais a associação de objetos. Por fim, este preprocessamento foi validado utilizando o simulador de veículos autônomos CARLA, utilizando como métrica principal o número de associações que falharam nos casos de teste.",,A software solution for preprocessing objects in object-level multisensor fusion for self-driving vehicles perception,-,,,,YES,,,,,YES,,
S2181,1,Forward,journalArticle,2021,"Santos, André Filipe Faria",,,http://repositorium.sdum.uminho.pt/,"Os robôs são agora parte do nosso quotidiano e a sua utilidade parece não ter limites. Fabricam os  nossos bens, colhem alimentos de plantações e conduzem-nos de um lugar para o outro. A inovação na  área da robótica é uma constante, as expectativas são altas, e as responsabilidades que depositamos nos  robôs são cada vez maiores; os robôs são a nova definição de sistema crítico. Em parte, este sucesso  deve-se à abundância de frameworks livres para o desenvolvimento de sistemas robóticos, como é o caso  do Robot Operating System (ROS).  A comunidade ROS é numerosa e bastante ativa. O ROS tem sido usado principalmente ao nível da  investigação, mas, ultimamente, tem sido a base para vários projetos comerciais ou governamentais.  Sendo um ecossistema de componentes de software reutilizáveis, suportado por uma comunidade muito  diversa, garantir que sistemas baseados em ROS são confiáveis é da maior importância. No entanto,  mostrar que um software robótico é confiável não é, de todo, uma tarefa fácil.  Várias técnicas, como a Verificação Formal, Model Checking, Verificação Runtime, entre outras, têm  dado inúmeras provas da sua aptidão e eficácia para verificar uma variedade de propriedades críticas,  noutros domínios de software. Contudo, se há algo que todos estes métodos têm em comum, é a sua  complexidade. É necessária uma formação especializada para uma aplicação eficaz, e a maioria da  comunidade ROS não tem tais conhecimentos.  Nesta tese, respondemos à questão de como adaptar o estado da arte em técnicas de garantia de  qualidade para aplicações ROS, e como torná-las acessíveis a não especialistas. Temos em conta o facto  de que a maioria dos sistemas são desenvolvidos em torno do código-fonte, em vez de seguirem práticas  de Engenharia à base de modelos. Propomos um fluxo de trabalho unificado que, dado o código-fonte  de uma aplicação ROS, extrai modelos automaticamente e, de seguida, aplica uma série de técnicas de  verificação, estáticas e dinâmicas, relativamente a propriedades do sistema especificadas pelo utilizador.  No caso de as análises detetarem uma violação de propriedades, os resultados podem ser utilizados como  guias para a resolução de problemas. Caso contrário, os resultados constituem evidência da confiabilidade  do sistema, respetivamente às propriedades, que pode ser usada para construção de um argumento de  confiabilidade. Este fluxo de trabalho é implementado na plataforma HAROS, e avaliado com dois estudos  de caso em robôs reais. O resultado revelou-se eficaz, quer na construção automática de modelos, quer  na deteção de falhas, relativamente a propriedades especificadas pelo utilizador. De um modo geral, esta  abordagem foi bem recebida pela comunidade ROS. Vários membros já a usam de forma independente, e  estão até a propôr as suas próprias extensões.",,Safety verification for ROS software,-,,,,YES,,,,,YES,,
S2182,1,Forward,journalArticle,2022,"Bouziane, Radhia; Terrissa, Labib Sadek; Ayad, Soheyb",Automated Software Engineering,10.1007/s10515-022-00346-w,https://doi.org/10.1007/s10515-022-00346-w,"Recently, Robot as a Service (RaaS) brought a major shift in the access and use of robots due to the technological advancements in computing, storage and communication. Users at the client side can manipulate their robots as an on-demand service throughout the Internet. The development of such systems is facing the fusion of the advantages of both Robot Operating System (ROS) and web services. Web services offer loosely coupled ROS software components enabling their interoperability and reuse. However, previous work in this area do not fully describe the service capability and characterization of the offered robotic functionality. In this paper, we propose a semantic description to ROS web services to facilitate their discovery and access in RaaS environment. The representation of ROS Semantic Web Service (ROS-SWS) leverages the ROS components to express its ability through a ROS domain ontology of capabilities and properties. The implemented services and results are presented in this paper.",Service-Oriented Architecture; Robot operating system; Ontology; Robot as a Service; Robotic service discovery; Semantic web services,Semantic web services for ROS: a Robot as a Service approach,-,,,,YES,,,,,YES,,
S2192,1,Forward,conferencePaper,2019,"Mukhandi, Munkenyi; Portugal, David; Pereira, Samuel; Couceiro, Micael S.",2019 IEEE/SICE International Symposium on System Integration (SII),10.1109/SII.2019.8700390,,"With the growing use of the Robot Operating System (ROS), it can be argued that it has become a de-facto framework for developing robotic solutions. ROS is used to build robotic applications for industrial automation, home automation, medical and even automatic robotic surveillance. However, whenever ROS is utilized, security is one of the main concerns that needs to be addressed in order to ensure a secure network communication of robots. Cyber-attacks may hinder evolution and adaptation of most ROS-enabled robotic systems for real-world use over the Internet. Thus, it is important to address and prevent security threats associated with the use of ROS-enabled applications. In this paper, we propose a novel approach for securing ROS-enabled robotic system by integrating ROS with the Message Queuing Telemetry Transport (MQTT) protocol. We manage to secure robots' network communications by providing authentication and data encryption, therefore preventing man-in-the-middle and hijacking attacks. We also perform real-world experiments to assess how the performance of a ROS-enabled robotic surveillance system is affected by the proposed approach.",Servers; Protocols; Performance analysis; Authentication; IoT; MQTT; Data security; Delays; Service robots; ROS,A novel solution for securing robot communications based on the MQTT protocol and ROS,-,,,,YES,,,,,YES,,
S2202,1,Forward,conferencePaper,2019,"Basheer, Mawj Mohammed; Varol, Asaf",2019 1st International Informatics and Software Engineering Conference (UBMYK),10.1109/UBMYK48245.2019.8965649,,"Autonomous technologies have been rapidly replacing the traditional manual intervention nearly in every aspect of our life. These technologies essentially require robots to carry out their automated processes. Nowadays, with the emergence of industry 4.0, robots are increasingly being remote-controlled via client-server connection, which creates uncommon vulnerabilities that allow attackers to target those robots. The development of an open source operational environment for robots, known as Robot Operating System (ROS) has come as a response to these demands. Security and privacy are crucial for the use of ROS as the chance of a compromise may lead to devastating ramifications. In this paper, an overview of ROS and the attacks targeting it are detailed and discussed. Followed by a review of the ROS security and digital investigation studies.",Security; Industries; Robot sensing systems; Service robots; robot operating system; Operating systems; vulnerabilities; Cyber-security; digital forensics; Forensics,An Overview of Robot Operating System Forensics,-,,,,YES,,,,,YES,,
S2252,1,Forward,conferencePaper,2015,"Hart, Stephen; Dinh, Paul; Hambuchen, Kimberly",2015 IEEE International Conference on Robotics and Automation (ICRA),10.1109/ICRA.2015.7140073,,"This paper introduces the Affordance Template ROS package for quickly programming, adjusting, and executing robot applications in the ROS RViz environment. This package extends the capabilities of RViz interactive markers [1] by allowing an operator to specify multiple end-effector waypoint locations and grasp poses in object-centric coordinate frames and to adjust these waypoints in order to meet the run-time demands of the task (specifically, object scale and location). The Affordance Template package stores task specifications in a robot-agnostic JSON description format such that it is trivial to apply a template to a new robot. As such, the Affordance Template package provides a robot-generic ROS tool appropriate for building semi-autonomous, manipulation-based applications. Affordance Templates were developed by the NASA-JSC DARPA Robotics Challenge (DRC) team and have since successfully been deployed on multiple platforms including the NASA Valkyrie and Robonaut 2 humanoids, the University of Texas Dreamer robot and the Willow Garage PR2. In this paper, the specification and implementation of the affordance template package is introduced and demonstrated through examples for wheel (valve) turning, pick-and-place, and drill grasping, evincing its utility and flexibility for a wide variety of robot applications.",Trajectory; Robot sensing systems; Robot kinematics; Mobile robots; Wheels; Shape,The Affordance Template ROS package for robot task programming,-,,,,YES,,,,,YES,,
S2307,1,Forward,journalArticle,2020,"Rao, Dongning; Hu, Guodong; Jiang, Zhihua",IEEE Access,10.1109/ACCESS.2020.3000293,,"The ROS (Robot Operating System) is a set of software libraries and tools used to build robotic systems. Recently, some researchers have been working on integrating planning systems into ROS. However, robotics domains are often probabilistically interesting. At present, only a few studies focused on integrating probabilistic planning into ROS. Moreover, they have limits on flexibility or scalability. Therefore, we propose a new framework, called PRobPlan (PRobabilistic Robot Planning), to alleviate these problems. On one hand, our framework uses a series of generation programs to build a problem file instead of the knowledge base. This makes it more modifiable. On the other hand, our framework integrates a state-of-the-art planner, SOGBOFA, and enhances it with a new recommendation function. This makes it more scalable. We instantiate the proposed framework in a warehouse-robot domain where mobile robots are allocated tasks of fetching or packing goods. Both of the domain and problem instances are modeled with RDDL (Relational Dynamic Influence Diagram Language). Experimental results showed the effectiveness of the proposed framework. We also tested two top planners, SOGBOFA and PROST, for comparison. The enhanced version of SOGBOFA mildly outperformed its original version and vastly outperformed PROST. Our work promotes the integration of probabilistic planning with robotic systems.",Task analysis; Probabilistic logic; Navigation; Robot sensing systems; Planning; Irrigation; probabilistic planning; relational dynamic influence diagram language (RDDL); Robot operating system (ROS),PRobPlan: A Framework of Integrating Probabilistic Planning Into ROS,-,,,,YES,,,,,YES,,
S1919,1,Forward,thesis,2020,"Ho, Dinh Khanh",,,https://tel.archives-ouvertes.fr/tel-03135081,"Mobile robotic systems are becoming more and more complex with the integration of advanced sensing and acting components and functionalities to perform the real required missions. For these technical systems, the requirements are divided into two categories: functional and non-functional requirements. While functional requirements represent what the robot must do to accomplish the mission, non-functional requirements represent how the robot performs the mission. Thus, the quality of service and energy efficiency of a robotic mission are classified in this category. The autonomy of these systems is fully achieved when both functional and non-functional requirements are guaranteed without any human intervention or any external control. However, these mobile systems are naturally confronted with resource availability and energy capacity constraints, particularly in the context of long-term missions, these constraints become more critical. In addition, the performance of these systems is also influenced by unexpected and unstructured environmental conditions in which they interact. The management of resources and energy during operation is therefore a challenge for autonomous mobile robots in order to guarantee the desired performance objectives while respecting constraints. In this context, the ability of the robotic system to become aware of its own internal behaviors and physical environment and to adapt to these dynamic circumstances becomes important.This thesis focuses on the quality of service and energy efficiency of mobile robotic systems and proposes a hierarchical run-time management in order to guarantee these non-functional objectives of each robotic mission. At the local management level of each robotic mission, a Mission Manager employs a reinforcement learning-based decision-making mechanism to automatically reconfigure certain key mission-specific parameters to minimize the level of violation of required performance and energy objectives. At the global management level of the whole system, a Multi-Mission Manager leveraged rule-based decision-making and case-based reasoning techniques monitors the system's resources and the responses of Mission Managers in order to decide to reallocate the energy budget, regulate the quality of service and trigger the online learning for each robotic mission.The proposed methodology has been successfully prototyped and validated in a simulation environment and the run-time management framework is also integrated into our real mobile robotic system based on a Pioneer-3DX mobile base equipped with an embedded NVIDIA Jetson Xavier platform.",,QoS-aware resource and energy management for autonomous mobile,NO,,,,YES,,NO,,,NO,,
S1920,1,Forward,thesis,2020,"Ho, Dinh Khanh",,,https://tel.archives-ouvertes.fr/tel-03135081,"Mobile robotic systems are becoming more and more complex with the integration of advanced sensing and acting components and functionalities to perform the real required missions. For these technical systems, the requirements are divided into two categories: functional and non-functional requirements. While functional requirements represent what the robot must do to accomplish the mission, non-functional requirements represent how the robot performs the mission. Thus, the quality of service and energy efficiency of a robotic mission are classified in this category. The autonomy of these systems is fully achieved when both functional and non-functional requirements are guaranteed without any human intervention or any external control. However, these mobile systems are naturally confronted with resource availability and energy capacity constraints, particularly in the context of long-term missions, these constraints become more critical. In addition, the performance of these systems is also influenced by unexpected and unstructured environmental conditions in which they interact. The management of resources and energy during operation is therefore a challenge for autonomous mobile robots in order to guarantee the desired performance objectives while respecting constraints. In this context, the ability of the robotic system to become aware of its own internal behaviors and physical environment and to adapt to these dynamic circumstances becomes important.This thesis focuses on the quality of service and energy efficiency of mobile robotic systems and proposes a hierarchical run-time management in order to guarantee these non-functional objectives of each robotic mission. At the local management level of each robotic mission, a Mission Manager employs a reinforcement learning-based decision-making mechanism to automatically reconfigure certain key mission-specific parameters to minimize the level of violation of required performance and energy objectives. At the global management level of the whole system, a Multi-Mission Manager leveraged rule-based decision-making and case-based reasoning techniques monitors the system's resources and the responses of Mission Managers in order to decide to reallocate the energy budget, regulate the quality of service and trigger the online learning for each robotic mission.The proposed methodology has been successfully prototyped and validated in a simulation environment and the run-time management framework is also integrated into our real mobile robotic system based on a Pioneer-3DX mobile base equipped with an embedded NVIDIA Jetson Xavier platform.",,QoS-aware resource and energy management for autonomous mobile,NO,,,,YES,,NO,,,NO,,
S1921,1,Forward,thesis,2020,"Ho, Dinh Khanh; Miramond, Benoît; Auguin, Michel",,,https://www.theses.fr/2020COAZ4000,"Les systèmes robotiques mobiles autonomes deviennent de plus en plus complexes avec l’intégration de composants de capteurs et d’actionneurs et de fonctionnalités avancées pour effectuer les missions réelles. Pour ces systèmes techniques, les exigences sont divisées en deux catégories : les exigences fonctionnelles et les exigences non-fonctionnelles. Alors que les exigences fonctionnelles représentent ce que le robot doit faire pour accomplir la mission, les exigences non-fonctionnelles représentent la façon dont le robot exécute la mission. Ainsi, la qualité de service et l’efficacité énergétique d’une mission robotique sont classées dans cette catégorie. L’autonomie de ces systèmes est pleinement atteinte lorsque les exigences fonctionnelles et non-fonctionnelles sont garanties sans aucune intervention humaine ni aucun contrôle externe. Cependant, ces systèmes mobiles sont naturellement confrontés à des contraintes de disponibilité des ressources et de capacité énergétique, notamment dans le cadre de mission à longue durée, ces contraintes deviennent plus critiques. De plus, la performance de ces systèmes est également influencée par des conditions environnementales inattendues et non structurées dans lesquelles ils interagissent. La gestion des ressources et de l’énergie en cours de mission est donc un défi pour les robots mobiles autonomes afin de garantir les objectifs de performance souhaités tout en respectant les contraintes. Dans ce contexte, la capacité du système robotique à prendre conscience de ses propres comportements internes et de son environnement physique et à s’adapter à ces circonstances dynamiques devient importante.Cette thèse porte sur la qualité de service et l’efficacité énergétique des systèmes robotiques mobiles et propose une gestion hiérarchique en cours d’exécution afin de garantir ces objectifs non-fonctionnels de chaque mission robotique. Au niveau de la gestion locale de chaque mission, un MISSION MANAGER utilise un mécanisme de prise de décision fondé sur l’apprentissage par renforcement pour reconfigurer automatiquement certains paramètres clés propres à la mission afin de minimiser le niveau de violation des objectifs de performance et des objectifs énergétiques requis. Au niveau de la gestion globale de l’ensemble du système, un MULTI-MISSION MANAGER s’appuie sur des règles de prise de décision et des techniques de raisonnement par cas pour suivre les ressources du système et les réponses des MISSION MANAGERs afin de décider de réallouer le budget énergétique, de régler la qualité du service et de déclencher l’apprentissage en ligne pour chaque mission robotique. La méthodologie proposée a été prototypée et validée avec succès dans un environnement de simulation et le cadre de gestion est également intégré dans notre système robotique mobile réel basé sur une base mobile de Pioneer-3DX équipée d’une plate-forme embarquée de NVIDIA Jetson Xavier.",Quality of service; Energy management; Reinforcement learning; Artificial intelligence; Apprentissage par renforcement; Apprentissage par renforcement (intelligence artificielle); Auto-adaptation; Case-based reasoning; Exigences non-fonctionnelles; Intelligence artificielle; Management d’énergie; Mobile robotics; Multi-objective decision-making; Non-functional requirements; Prise de décision; Qualité de service; Qualité de Service (télécommunications); Raisonnement par cas; Robotic run-time adaptation; Robotique mobile; Robots mobiles,Gestion des ressources et de l’énergie orientée qualité de service pour les systèmes robotiques mobiles autonomes,NO,,,,YES,,NO,,,NO,,
S1922,1,Forward,journalArticle,2017,"Dieber, Bernhard; Breiling, Benjamin; Taurer, Sebastian; Kacianka, Severin; Rass, Stefan; Schartner, Peter",Robotics and Autonomous Systems,10.1016/j.robot.2017.09.017,https://www.sciencedirect.com/science/article/pii/S0921889017302762,"Future robotic systems will be situated in highly networked environments where they communicate with industrial control systems, cloud services or other systems at remote locations. In this trend of strong digitization of industrial systems (also sometimes referred to as Industry 4.0), cyber attacks are an increasing threat to the integrity of the robotic systems at the core of this new development. It is expected, that the Robot Operating System (ROS) will play an important role in robotics outside of pure research-oriented scenarios. ROS however has significant security issues which need to be addressed before such products should reach mass markets. In this paper we present the most common vulnerabilities of ROS, attack vectors to exploit those and several approaches to secure ROS and similar systems. We show how to secure ROS on an application level and describe a solution which is integrated directly into the ROS core. Our proposed solution has been implemented and tested with recent versions of ROS, and adds security to all communication channels without being invasive to the system kernel itself.",Security; Robotics; ROS; Industry 4.0,Security for the Robot Operating System,-,,,,YES,,NO,,,NO,,
S1923,1,Forward,conferencePaper,2019,"DeMarinis, Nicholas; Tellex, Stefanie; Kemerlis, Vasileios P.; Konidaris, George; Fonseca, Rodrigo",2019 International Conference on Robotics and Automation (ICRA),10.1109/ICRA.2019.8794451,,"Security is particularly important in robotics, as robots can directly perceive and affect the physical world. We describe the results of a scan of the entire IPv4 address space of the Internet for instances of the Robot Operating System (ROS), a widely used robotics software platform. We identified a number of hosts supporting ROS that are exposed to the public Internet, thereby allowing anyone to access robotic sensors and actuators. As a proof of concept, and with the consent of the relevant researchers, we were able to read image sensor information from and actuate a physical robot present in a research lab in an American university. This paper gives an overview of our findings, including our methodology, the geographic distribution of publicly-accessible platforms, the sorts of sensor and actuator data that is available, and the different kinds of robots and sensors that our scan uncovered. Additionally, we offer recommendations on best practices to mitigate these security issues in the future.",Internet; Security; Robot sensing systems; Service robots; Actuators,Scanning the Internet for ROS: A View of Security in Robotics Research,-,,,,YES,,,,,YES,,
S1924,1,Forward,conferencePaper,2017,"Breiling, Benjamin; Dieber, Bernhard; Schartner, Peter",2017 Annual IEEE International Systems Conference (SysCon),10.1109/SYSCON.2017.7934755,,"The boom for robotics technologies in recent years has also empowered a new generation of robotics software. The Robot Operating System (ROS) is one of the most popular frameworks for robotics researchers and makers which is moving towards commercial and industrial use. Security-wise however, ROS is vulnerable to attacks. It is rather easy to inject or eavesdrop data in a ROS application. This opens many different ways to attack a ROS application resulting in data loss, monetary damage or even physical injury. In this paper we present a secure communication channel enabling ROS-nodes to communicate with authenticity and confidentiality. We secure ROS on a peer-to-peer basis in the direct interaction between publishers and subscribers. We describe the implementation changes we have made to the ROS core and assess the overhead introduced by the new security functions.",Authentication; Authorization; Peer-to-peer computing; Service robots; Communication channels,Secure communication for the robot operating system,-,,,,YES,,,,,YES,,
S1925,1,Forward,bookSection,2020,"Dieber, Bernhard; White, Ruffin; Taurer, Sebastian; Breiling, Benjamin; Caiazza, Gianluca; Christensen, Henrik; Cortesi, Agostino",Robot Operating System (ROS): The Complete Reference (Volume 4),,https://doi.org/10.1007/978-3-030-20190-6_8,"ROS is the most popular framework in robotics research and it also grows in terms of industrial use. This makes ROS a worthwhile target for attackers especially since security is not addressed by the core framework itself. Its open architecture and flexibility are also the reasons why ROS suffers from security issues. For example, in ROS it is possible to isolate single nodes from the rest of the application without the ROS master, the other nodes or even the node itself (i.e., its business code) noticing it. This is true for publishers, subscribers and services alike. This makes attacks very difficult to spot at runtime. Penetration testing is the most common security testing practice. The goal is to test an application for possible security flaws. To better facilitate penetration testing for ROS, we introduce ROSPenTo and Roschaos, tools that make use of the vulnerabilities of ROS and demonstrate how ROS applications can be sabotaged by an attacker. In this tutorial you will learn about the ROS XML-RPC API, which is our main attack point. You will see, how API attacks on ROS work in depth. You will get to know Roschaos and ROSPentTo, two tools, which can be used to manipulate running ROS applications.",Security; ROS; Penetration testing,Penetration Testing ROS,-,,,,YES,,NO,,,NO,,
S1926,1,Forward,conferencePaper,2018,"Narayanan, Vedanth; Bobba, Rakesh B.",Proceedings of the 2018 Workshop on Cyber-Physical Systems Security and PrivaCy,10.1145/3264888.3264894,https://doi.org/10.1145/3264888.3264894,"Smart Manufacturing (SM) is envisioned to make manufacturing processes more efficient through automation and integration of networked information systems. Robotic arms are integral to this vision. However the benefits of SM, enabled by automation and networking, also come with cyber risks. In this work, we propose an anomaly detection framework for robotic arms in a manufacturing pipeline and integrate it into Robot Operating System (ROS), a middleware framework whose variants are being considered for deployment in industrial environments for flexible automation. In particular, we explore whether the repetitive behavior of an industrial arm can be leveraged to detect anomalous behaviour that may indicate an intrusion. Based on a learned model, we classify a robot's actions as anomalous or benign. We introduce the notion of a 'tolerance envelope' to train a supervised learning model. Our empirical evaluation shows that anomalies that take the robot out of pre-determined tolerance levels can be detected with high accuracy.",anomaly detection; robotics; robot operating system; smart manufacturing; tolerance envelope,Learning Based Anomaly Detection for Industrial Arm Applications,-,,,,YES,,NO,,,NO,,
S1927,1,Forward,conferencePaper,2018,"White, Ruffin; Christensen, Henrik I.; Caiazza, Gianluca; Cortesi, Agostino",2018 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS.2018.8594462,,"Security of robotics systems, as well as of the related middleware infrastructures, is a critical issue for industrial and domestic IoT, and it needs to be continuously assessed throughout the whole development lifecycle. The next generation open source robotic software stack, ROS2, is now targeting support for Secure DDS, providing the community with valuable tools for secure real world robotic deployments. In this work, we introduce a framework for procedural provisioning access control policies for robotic software, as well as for verifying the compliance of generated transport artifacts and decision point implementations.",Tools; Middleware; Service robots; Access control; Cryptography,Procedurally Provisioned Access Control for Robotic Systems,-,,,,YES,,NO,,,NO,,
S1928,1,Forward,bookSection,2019,"White, Ruffin; Caiazza, Gianluca; Christensen, Henrik; Cortesi, Agostino",Robot Operating System (ROS): The Complete Reference (Volume 3),,https://doi.org/10.1007/978-3-319-91590-6_11,"SROS1 is a proposed addition to the ROS1 API and ecosystem to support modern cryptography and security measures. An overview of current progress will be presented, explaining each major advancement, including: over-the-wire cryptography for all data transport, namespaced access control enforcing graph policies/restrictions, and finally process profiles using Linux Security Modules to harden a node’s resource access. This chapter not only seeks to raise community awareness of the vulnerabilities in ROS1, but to provide clear instruction along designed patterns of development for using proposed solutions provided by SROS1 to advance the state of security for open source robotics subsystems.",Robotics; ROS; Access control; Secure communications,SROS1: Using and Developing Secure ROS1 Systems,-,,,,YES,,NO,,,NO,,
S1929,1,Forward,bookSection,2018,"Portugal, David; Santos, Miguel A.; Pereira, Samuel; Couceiro, Micael S.",Artificial Intelligence Safety and Security,,,"The increasing incidence of robots in our society is evident due to the recent advances in the areas of robotics and artificial intelligence. Naturally, this raises the concern of security. Robots that share the environment with humans, need to be intrinsically secure to avoid compromising human physical and data integrity. However, robot cybersecurity is not commonly considered a key area under focus by the research community, despite being vital in several application fields. This chapter discusses security concerns in ROS, the most adopted middleware for robotics, and presents, analyzes, and compares several existing initiatives for securing robot applications in ROS. Results demonstrate important breakthroughs within this domain, room for improvement in the design of robotic solutions regarding cybersecurity, and highlight the need to mature the industry security principles to avoid the penetration of insecure robots into the market.",,On the Security of Robotic Applications Using ROS,-,,,,YES,,,,,YES,,
S1930,1,Forward,book,,,,,https://link.springer.com/book/10.1007/978-3-030-60251-2,This book introduces a cross-layer design to achieve security and resilience for CPSs (Cyber-Physical Systems). Part II and Part III of this book bridges the gap between cryptography and control-theoretic tools; and the gap between game theory and control theory,,Cross-Layer Design for Secure and Resilient Cyber-Physical Systems,NO,,,,NO,,,,,NO,,
S1931,1,Forward,journalArticle,2021,"Lee, Hyojun; Yoon, Jiyoung; Jang, Min-Seong; Park, Kyung-Joon",Sensors,10.3390/s21041369,https://www.mdpi.com/1424-8220/21/4/1369,"To perform advanced operations with unmanned aerial vehicles (UAVs), it is crucial that components other than the existing ones such as flight controller, network devices, and ground control station (GCS) are also used. The inevitable addition of hardware and software to accomplish UAV operations may lead to security vulnerabilities through various vectors. Hence, we propose a security framework in this study to improve the security of an unmanned aerial system (UAS). The proposed framework operates in the robot operating system (ROS) and is designed to focus on several perspectives, such as overhead arising from additional security elements and security issues essential for flight missions. The UAS is operated in a nonnative and native ROS environment. The performance of the proposed framework in both environments is verified through experiments.",security; cyber-physical systems; network attack; unmanned aerial vehicles,A Robot Operating System Framework for Secure UAV Communications,-,,,,YES,,NO,,,NO,,
S1932,1,Forward,conferencePaper,2020,"Rivera, Sean; Iannillo, Antonio Ken; Lagraa, Sofiane; Joly, Clément; State, Radu",2020 25th International Conference on Engineering of Complex Computer Systems (ICECCS),10.1109/ICECCS51672.2020.00029,,"In this paper, we leverage the newly integrated extended Berkely Packet Filters (eBPF) and eXpress Data Path (XDP) to build ROS-FM, a high-performance inline network-monitoring framework for ROS. We extend the framework with a security policy enforcement tool and distributed data visualization tool for ROS1 and ROS2 systems. We compare the overhead of this framework against the generic ROS monitoring tools, and we test the policy enforcement against existing ROS penetration testing tools to evaluate their effectiveness. We find that the network monitoring framework and the associated visualization tools outperform the existing ROS monitoring tools for all robots with more than 10 running processes and that the monitoring tool uses only 4% of the overhead of the generic tools for robots with 80 processes. We further demonstrate the effectiveness of the security tool against common attacks in both ROS1 and ROS2.",Monitoring; Data visualization; Security; Tools; Robots; ROS; eBPF; Penetration testing; XDP,ROS-FM: Fast Monitoring for the Robotic Operating System(ROS),-,,,,YES,,NO,,,NO,,
S1933,1,Forward,journalArticle,,"Brijacak, Inka; Yahyanejad, Saeed; Reiterer, Bernhard; Hofbaur, Michael",,10.3217/978-3-85125-524-9-15,https://openlib.tugraz.at/download.php?id=5aaa45931232a&location=medra,"Perception is a major component of a system when it comes to the concept of safety in human-robot interaction. Although designing a mechanically safe robot may reduce lots of potential hazards, it is still beneﬁciary or even required to have detailed knowledge of the current status of the robot, human, and other environmental entities. We refer to this knowledge as perceptional awareness, or simply perception, that subsumes: (i) what our system perceives from robot state and its environment, (ii) what our system perceives from human state, and (iii) what a human perceives from the robot state. In this paper we provide requirements for a holistic architecture to construct safe perception using multiple heterogeneous and independent sensors and processing units in any environment that includes both robots and humans. We also illustrate our concepts on the basis of particular instances of this scheme realized in the robotic lab.",,Toward Safe Perception in Human-Robot Interaction,-,,,,NO,,,,,NO,,
S1934,1,Forward,conferencePaper,2019,"Sandoval, Sergio; Thulasiraman, Preetha",2019 IEEE International Systems Conference (SysCon),10.1109/SYSCON.2019.8836824,,"The Robot Operating System (ROS) is a widely adopted standard robotic middleware. However, its preliminary design is devoid of any network security features. Military grade unmanned systems must be guarded against network threats. ROS 2 is built upon the Data Distribution Service (DDS) standard and is designed to provide solutions to identified ROS 1 security vulnerabilities by incorporating authentication, encryption, and process profile features, which rely on public key infrastructure. The Department of Defense is looking to use ROS 2 for its military-centric robotics platform. This paper seeks to demonstrate that ROS 2 and its DDS security architecture can serve as a functional platform for use in military grade unmanned systems, particularly in unmanned Naval aerial swarms. In this paper, we focus on the viability of ROS 2 to safeguard communications between swarms and a ground control station (GCS). We test ROS 2's ability to mitigate and withstand certain cyber threats, specifically that of rogue nodes injecting unauthorized data and accessing services that will disable parts of the UAV swarm. We use the Gazebo robotics simulator to target individual UAVs to ascertain the effectiveness of our attack vectors under specific conditions. We demonstrate the effectiveness of ROS 2 in mitigating the chosen attack vectors but observed a measurable operational delay within our simulations.",Standards; Encryption; Authentication; autonomous systems; Robots; ROS; Drones; cyber security; UAV swarms,Cyber Security Assessment of the Robot Operating System 2 for Aerial Networks,-,,,,YES,,NO,,,NO,,
S1935,1,Forward,conferencePaper,2021,"Goerke, Niklas; Timmermann, David; Baumgart, Ingmar","2021 7th International Conference on Automation, Robotics and Applications (ICARA)",10.1109/ICARA51699.2021.9376468,,"The Robot Operation System (ROS) is widely used in academia as well as the industry to build custom robot applications. Successful cyberattacks on robots can result in a loss of control for the legitimate operator and thus have a severe impact on safety if the robot is moving uncontrollably. A high level of security thus needs to be mandatory. Neither ROS 1 nor 2 in their default configuration provide protection against network based attackers. Multiple protection mechanisms have been proposed that can be used to overcome this. Unfortunately, it is unclear how effective and usable each of them are. We provide a structured analysis of the requirements these protection mechanisms need to fulfill by identifying realistic, network based attacker models and using those to derive relevant security requirements and other evaluation criteria. Based on these criteria, we analyze the protection mechanisms available and compare them to each other. We find that none of the existing protection mechanisms fulfill all of the security requirements. For both ROS 1 and 2, we discuss which protection mechanism are most relevant and give hints on how to decide on one. We hope that the requirements we identify simplify the development or enhancement of protection mechanisms that cover all aspects of ROS and that our comparison helps robot operators to choose an adequate protection mechanism for their use case.",Analytical models; Automation; Security; Industries; DDS; security; Computer crime; Service robots; Safety; ROS; ROS 2; SROS; SROS 2,Who Controls Your Robot? An Evaluation of ROS Security Mechanisms,-,,,,YES,,NO,,,NO,,
S1936,1,Forward,book,2019,"Haspl, Thomas; Breiling, Benjamin; Dieber, Bernhard; Pichler, Marc; Breitenhuber, Guido",,,,"With ongoing research in robotics, some specific architectural approaches of robotic systems earn more and more interest by all kinds of industries. Mobile manipulators – robots consisting of a mobile base and a serial manipulator – provide the ability to make robotic manipulation locationindependent, which will be an essential feature in future production. Such robot platforms offer a high level of flexibility and efficiency of robot applications. Especially under the aspect of modularity, mobile manipulators would provide even more flexibility by offering the possibility to exchange or extend the robot hardware for specific applications. To achieve this, modularity also has to be considered in software. In this paper, we present a software architecture for modular mobile manipulation applications. It provides mechanism for reconfigurability, easy programming, and an easy approach for adding external hardware components. Being targeted at industrial use, the architecture also considers security and software deployment aspects. These considerations will, in combination with all the other aspects, be presented by means of two modular mobile manipulation platforms and a set of representative scenarios.",,Flexible industrial mobile manipulation: a software perspective,NO,,,,YES,,,,,NO,,
S1937,1,Forward,thesis,2019,"Hong, Ke",,,http://deepblue.lib.umich.edu/handle/2027.42/151693,"Smartphones, wearable devices and emerging autonomous vehicles (AVs) are significantly transforming our way of communication, networking, knowledge acquisition, healthcare and transportation. As our daily lives are increasingly relying on these smart end systems, certain guarantees on the performance, security and safety becomes critical requirements to the design and implementation of the software for these systems. To ensure such key requirements are met before shipping the software into users’ devices/vehicles, it is necessary to exhaustively test and verify the software at the development and testing stage. However, testing and verifying the performance, security and safety requirements for the software of these systems remains a research challenge. Due to the high mobility of these systems in the real world, the runtime environments faced by these systems vary significantly, which poses challenges to the testing and validation of performance requirements. Also, due to the layering design fashion and multi-party development process, software running on these systems is usually highly complex, potentially enlarging attack surface and posing challenges to the testing and validation of security and safety requirements. To address this challenge, this dissertation focuses on developing systematic and automated software analysis tools for testing the performance, security and safety requirements of the software for smart end systems. Specifically, we demonstrate that automated program analyses based on 1) static program analysis and 2) runtime program profiling with certain system domain-specific customization, can lead to effective testing and validation of key performance, security and safety requirements for smart system software. This dissertation contributes to the performance, security and safety requirements testing of smart end systems in following aspects: (1) effectively test performance requirements and diagnose the cause of performance slowdown through lightweight monitoring of and systematic performance characterization based on cross-layer runtime events, (2) systematically detect noncompliance with important security principles (e.g., publish-subscribe overprivilege vulnerability) through systematic program analysis and mitigate security vulnerabilities through policy enforcement, and (3) systematically verify the compliance with safety requirements on the mission-critical components (e.g., AV’s driving decision control) of smart end systems.",,"Performance, Security, and Safety Requirements Testing for Smart Systems Through Systematic Software Analysis",NO,,,,YES,,,,,NO,,
S1938,1,Forward,journalArticle,2021,"Varma, Richa; Melville, Chris; Pinello, Claudio; Sahai, Tuhin",International Journal of Semantic Computing,10.1142/S1793351X21400092,https://www.worldscientific.com/doi/abs/10.1142/S1793351X21400092,"The secure command & control (C&C) of mobile agents arises in various settings including unmanned aerial vehicles, single pilot operations in commercial settings, and mobile robots to name a few. As more and more of these applications get integrated into aerospace and defense use cases, the security of the communication channel between the ground station and the mobile agent is of increasing importance. The development of quantum computing devices poses a unique threat to secure communications due to the vulnerability of asymmetric ciphers to Shor’s algorithm. Given the active development of new quantum resistant encryption techniques, we report the first integration of post-quantum secure encryption schemes with robotic operating system (ROS) and C&C of mobile agents, in general. We integrate these schemes in the application and network layers and study the performance of these methods by comparing them to present-day security schemes such as the widely used RSA algorithm.",multi-agent command and control; Post-quantum secure authentication; secure communication; Secure robot operating system (ROS),Post Quantum Secure Command and Control of Mobile Agents Inserting Quantum-Resistant Encryption Schemes in the Secure Robot Operating System,NO,,,,YES,,,,,NO,,
S1939,1,Forward,report,2018,"Sandoval, Sergio",,,https://apps.dtic.mil/sti/citations/AD1065502,"Unmanned systems have gained in prominence as platforms from which to conduct military operations. The Robot Operating System ROS is a widely adopted standard robotic middleware however, its preliminary design is devoid of any network security features. Military grade unmanned systems must be guarded against network threats. ROS 2.0 is built upon the Data Distribution Service standard and is designed to provide solutions to identified ROS 1.0 security vulnerabilities by incorporating authentication, encryption, and process profile features. The Department of Defense is looking to use ROS 2.0 for its military-centric robotics platform. Through our work, we demonstrated that ROS 2.0 can serve as a functional platform for use in military grade unmanned systems. We tested the viability of ROS 2.0 to safeguard communications between an unmanned aerial swarm and a ground control station against rogue node and message-spoofing attacks. Our experiments employ the PX4 Multi Vehicle Simulation swarming three iris-quadcopter aerial drones within a Gazebo 9 simulation environment, utilizing QGroundControl as our ground control station. Drones were targeted individually to ascertain the effectiveness of our attack vectors under specific conditions. We demonstrated the effectiveness of ROS 2.0 in mitigating the chosen attack vectors but observed a measurable operational delay within our simulations.",,Cyber Security Testing of the Robot Operating System in Unmanned Aerial Systems,-,,,,YES,,NO,,,NO,,
S1940,1,Forward,journalArticle,2019,"克好, 亘理; 隆夫, 大久保",研究報告コンピュータセキュリティ（CSEC）,,https://ipsj.ixsq.nii.ac.jp/ej/index.php?active_action=repository_view_main_item_detail&page_id=13&block_id=8&item_id=195752&item_no=1,情報学広場 情報処理学会電子図書館,,ロボットオペレーティングシステムのセキュリティ機能に関する考察,-,,,NO,YES,,NO,,,NO,,
S1941,1,Forward,webpage,,,,,https://www.proquest.com/openview/2a63b6afe512c493fcfce8a1c61d9cef/1?pq-origsite=gscholar&cbl=18750&diss=y,"Explore millions of resources from scholarly journals, books, newspapers, videos and more, on the ProQuest Platform.",,Cross-Layer Design for Secure and Resilient Control of Cyber-Physical Systems in Smart Cities - ProQuest,NO,,,,NO,,,,,NO,,
S1942,1,Forward,journalArticle,,"Chung, Keywhan; Li, Xiao; Tang, Peicheng; Zhu, Zeran; Kalbarczyk, Zbigniew T; Iyer, Ravishankar K; Kesavadas, Thenkurussi",,,,"In this paper, we demonstrate a new type of threat that leverages machine learning techniques to maximize its impact. We use the Raven-II surgical robot and its haptic feedback rendering algorithm as an application. We exploit ROS vulnerabilities and implement smart self-learning malware that can track the movements of the robot’s arms and trigger the attack payload when the robot is in a critical stage of a (hypothetical) surgical procedure. By keeping the learning procedure internal to the malicious node that runs outside the physical components of the robotic application, an adversary can hide most of the malicious activities from security monitors that might be deployed in the system. Also, if an attack payload mimics an accidental failure, it is likely that the system administrator will fail to identify the malicious intention and will treat the attack as an accidental failure. After demonstrating the security threats, we devise methods (i.e., a safety engine) to protect the robotic system against the identified risk.",,Smart Malware that Uses Leaked Control Data of Robotic Applications: The Case of Raven-II Surgical Robots,-,,,,NO,,,,,NO,,
S1943,1,Forward,conferencePaper,2021,"Rivera, Sean; State, Radu",2021 IFIP/IEEE International Symposium on Integrated Network Management (IM),,,"Robotic systems are becoming an ever-increasing part of everyday life due to their capacity to carry out physical tasks on behalf of human beings. Found in nearly every facet of our lives, robotic systems are used domestically, in small and large-scale factories, for the production and processing of agriculture, for military operations, to name a few. The Robotic Operating System (ROS) is the standard operating system used today for the development of modular robotic systems. However, in its development, ROS has been notorious for the absence of security mechanisms, placing people in danger both physically and digitally. This dissertation summary presents the development of a suite of ROS tools, leading up to the development of a modular, secure framework for ROS. An integrated approach for the security of ROS-enabled robotic systems is described, to set a baseline for the continual development to increase ROS security. The work culminates in the ROS security tool ROS-Immunity, combining internal system defense, external system verification, and automated vulnerability detection in an integrated tool that, in conjunction with Secure-ROS, provides a suite of defenses for ROS systems against malicious attackers.",Task analysis; Security; Tools; security; robotics; ROS; Operating systems; Production facilities; Agriculture; dissertation; integrated; System verification,Securing Robots: An Integrated Approach for Security Challenges and Monitoring for the Robotic Operating System (ROS),-,,,,YES,,NO,,,NO,,
S1944,1,Forward,journalArticle,,"Mayoral-Vilches, Vıctor; White, Ruffin; Caiazza, Gianluca; Arguedas, Mikael",,,,"ROS 2 is rapidly becoming a standard in the robotics industry. Built upon DDS as its default communication middleware and used in safety-critical scenarios, adding security to robots and ROS computational graphs is increasingly becoming a concern. The present work introduces SROS2, a series of developer tools and libraries that facilitate adding security to ROS 2 graphs. Focusing on a usability-centric approach in SROS2, we present a methodology for securing graphs systematically while following the DevSecOps model. We also demonstrate the use of our security tools by presenting an application case study that considers securing a graph using the popular Navigation2 and SLAM Toolbox stacks applied in a TurtleBot3 robot. We analyse the current capabilities of SROS2 and discuss the shortcomings, which provides insights for future contributions and extensions. Ultimately, we present SROS2 as usable security tools for ROS 2 and argue that without usability, security in robotics will be greatly impaired.",,SROS2: Usable Cyber Security Tools for ROS 2,-,,,,NO,,,,,NO,,
S1945,1,Forward,webpage,,,,,https://www.proquest.com/openview/48398313fdb7cdf6bd5ff1bdc8ce9350/1?pq-origsite=gscholar&cbl=18750&diss=y,"Explore millions of resources from scholarly journals, books, newspapers, videos and more, on the ProQuest Platform.",,Usable Security and Verification for Distributed Robotic Systems - ProQuest,NO,,,,NO,,,,,NO,,
S1946,1,Forward,conferencePaper,2019,"Thulasiraman, Preetha; Sandoval, Sergio",,,https://calhoun.nps.edu/handle/10945/69141,"The Robot Operating System (ROS) is a widely adopted standard robotic middleware. However, its preliminary design is devoid of any network security features. Military grade unmanned systems must be guarded against network threats. ROS 2 is built upon the Data Distribution Service (DDS) standard and is designed to provide solutions to identified ROS 1 security vulnerabilities by incorporating authentication, encryption, and process profile features, which rely on public key infrastructure. The Department of Defense is looking to use ROS 2 for its military-centric robotics platform. This paper seeks to demonstrate that ROS 2 and its DDS security architecture can serve as a functional platform for use in military grade unmanned systems, particularly in unmanned Naval aerial swarms. In this paper, we focus on the viability of ROS 2 to safeguard communications between swarms and a ground control station (GCS). We test ROS 2’s ability to mitigate and withstand certain cyber threats, specifically that of rogue nodes injecting unauthorized data and accessing services that will disable parts of the UAV swarm. We use the Gazebo robotics simulator to target individual UAVs to ascertain the effectiveness of our attack vectors under specific conditions. We demonstrate the effectiveness of ROS 2 in mitigating the chosen attack vectors but observed a measurable operational delay within our simulations.",,Cyber Security Assessment of the Robot Operating System 2 for Aerial Networks,-,,,,YES,,NO,,,NO,,
S1947,1,Forward,webpage,,,,,https://www.proquest.com/openview/e55fe9ac486989126008ad651b6a1f32/1?pq-origsite=gscholar&cbl=18750&diss=y,"Explore millions of resources from scholarly journals, books, newspapers, videos and more, on the ProQuest Platform.",,Advanced Security Analysis for Emergent Software Platforms - ProQuest,NO,,,,NO,,,,,NO,,
S1948,1,Forward,thesis,2020,"Yoon, Jiyoung",,,https://scholar.dgist.ac.kr/handle/20.500.11750/12154,"One of the main applications of the Cyber-Physical System, the Unmanned vehicle is gradually expanding its use. Unmanned Aerial Vehicle (UAV), among unmanned vehicle, is used not only for cameras, emergency, and military purposes, but its negative effects are increasing also as its use expands. A terrorist outrage using UAVs in Saudi Arabia in the fall of 2019 is a well-known example. Therefore, research on disabling UAV is also becoming important. The UAV neutralization study can be divided into three phases. First, it is the identification of friend or foe stage that distinguishes whether UAVs are friendly or enemy. However, this step can be omitted in No-drone Zones, such as places where people are concentrated, places where major confidential facilities such as nuclear facilities are located, and places of privacy. The second step is to neutralize the UAV's actual mission. At this stage, the UAV is disabled mainly through network attacks such as jamming attacks and packet injection attacks, or through physical attacks such as nets. The third is a post-processing step to lead the UAV to safe area, that is, to prevent the UAV from flying again and to protect the surroundings from it. Previous UAV neutralization studies have focused on disabling UAV without considering the third phase. In this paper, we focused on the third stage, the post-processing stage, so that UAV can be neutralized. Robot Operating System is useful and used widely in UAV system, but there are also vulnerabilities. Therefore, disabling UAVs using this point and defense techniques are discussed in this paper.",,An Empirical Study on the Attack and Defense of Unmanned Vehicle,NO,,,,YES,,,,,NO,,
S1949,1,Forward,journalArticle,,"Basan, Elena; Sushkin, Nikita; Khabarov, Oleg; Makarevich, Oleg; Azarov, Ivan",,,,"The latest version of ROS was released on May 23 this year, and according to the developers, there will be no more new versions. The future belongs to ROS2.mA robots or robotic system is often a modular system where each module communicates with other modules. In ROS terminology, such modules are called nodes, and they can communicate in a subscriberpublisher or client-server fashion. There is also a special Master node, which is responsible for the initial linking of ordinary nodes. ROS was not designed with security considerations in mind, i.e. ensuring the «three pillars» - confidentiality, integrity or authenticity. Consequently, ROS becomes a tidbit for attackers. They can listen to traffic; Disable individual nodes; Replace nodes. The situation was further simplified when utilities for auditing the security of ROS systems appeared in the public domain: Roschaos, Rospento. In addition, the developers of ROS applications independently implemented protection measures to prevent these threats.",,Analysis of Attacks on Robotic Operation System,-,,,,NO,,,,,NO,,
S1950,1,Forward,journalArticle,2017,"慶太, 齋藤; 達哉, 森",コンピュータセキュリティシンポジウム2017論文集,,https://ipsj.ixsq.nii.ac.jp/ej/index.php?active_action=repository_view_main_item_detail&page_id=13&block_id=8&item_id=187377&item_no=1,情報学広場 情報処理学会電子図書館,,コンシュマー向けロボットの安全な運用に向けたセキュリティポリシー,-,,,NO,YES,,,,,NO,,
S1951,1,Forward,webpage,,,,,https://bibliotekanauki.pl/articles/1857457,,,Bezpieczeństwo aplikacji robotów z wykorzystanie… — Library of Science,-,,,,NO,,,,,NO,,
S1952,1,Forward,book,2020,"Lei, Mingtian",,,http://urn.kb.se/resolve?urn=urn:nbn:se:kth:diva-269411,DiVA portal is a finding tool for research publications and student theses written at the following 50 universities and research institutions.,,Graphic Interface and Robot Control System Design with Compensation Mechanism,NO,,,,YES,,,,,NO,,
S1953,1,Forward,conferencePaper,2017,"Pickem, Daniel; Glotfelter, Paul; Wang, Li; Mote, Mark; Ames, Aaron; Feron, Eric; Egerstedt, Magnus",2017 IEEE International Conference on Robotics and Automation (ICRA),10.1109/ICRA.2017.7989200,,"This paper describes the Robotarium - a remotely accessible, multi-robot research facility. The impetus behind the Robotarium is that multi-robot testbeds constitute an integral and essential part of the multi-robot research cycle, yet they are expensive, complex, and time-consuming to develop, operate, and maintain. These resource constraints, in turn, limit access for large groups of researchers and students, which is what the Robotarium is remedying by providing users with remote access to a state-of-the-art multi-robot test facility. This paper details the design and operation of the Robotarium and discusses the considerations one must take when making complex hardware remotely accessible. In particular, safety must be built into the system already at the design phase without overly constraining what coordinated control programs users can upload and execute, which calls for minimally invasive safety routines with provable performance guarantees.",Hardware; Servers; Robot sensing systems; Robot kinematics; Safety; Collision avoidance,The Robotarium: A remotely accessible swarm robotics research testbed,NO,,,,YES,,,,,NO,,
S1954,1,Forward,webpage,,,,,http://103.226.139.203/index.php/ILKOM/article/view/365,,,ROBOT OPERATING SYSTEM (ROS) DAN GAZEBO SEBAGAI MEDIA PEMBELAJARAN ROBOT INTERAKTIF | Jalil | ILKOM Jurnal Ilmiah,NO,,,,NO,,,,,NO,,
S1955,1,Forward,webpage,,,,,https://www.proquest.com/openview/e3bf65fcf8eb61aeb5d5d566ad5d99fd/1?pq-origsite=gscholar&cbl=18750,"Explore millions of resources from scholarly journals, books, newspapers, videos and more, on the ProQuest Platform.",,Evaluating Intention to Use Remote Robotics Experimentation in Programming Courses - ProQuest,NO,,,,NO,,,,,NO,,
S1956,1,Forward,webpage,,,,,https://www.hindawi.com/journals/jr/2022/9289625/,,,"Design, Implementation, and Performance Evaluation of a Web-Based Multiple Robot Control System",NO,,,,NO,,,,,NO,,
S1957,1,Forward,webpage,,,,,https://periodicos.itp.ifsp.edu.br/index.php/IC/article/view/1635,,,Editor de coreografias para robô humanoide | Revista Brasileira de Iniciação Científica,NO,,,,NO,,,,,NO,,
S1958,1,Forward,webpage,,,,,https://www.tdx.cat/handle/10803/669013,,,,NO,,,,NO,,,,,NO,,
S1959,1,Forward,journalArticle,,"Pozzobon, Luiza Amador; Schaf, Frederico Menine",,,,"The need for communication is something almost intrinsic to humanoid robots because of their typical usage in social and interactive situations. In this sense, the existence of softwares for editing its movements and speeches is necessary. Thus, this project aimed at developing an attractive and intuitive web tool to create scenarios of interaction with a humanoid robot, also called choreographies, so that even lay people can program their actions. The website works completely independent of the physical robot, controlling an avatar, but can also connect to the first and control it online.",,EDITOR DE COREOGRAFIAS PARA ROBÔ HUMANOIDE COREOGRAPHY EDITOR FOR HUMANOID ROBOT EDITOR DE COREOGRAFÍAS PARA ROBOT HUMANOIDE,-,,,,NO,,,,,NO,,
S1960,1,Forward,journalArticle,2021,"Dragule, Swaib; Berger, Thorsten; Menghi, Claudio; Pelliccione, Patrizio",Software and Systems Modeling,10.1007/s10270-020-00854-x,https://doi.org/10.1007/s10270-020-00854-x,"Mobile robots are becoming increasingly important in society. Fulfilling complex missions in different contexts and environments, robots are promising instruments to support our everyday live. As such, the task of defining the robot’s mission is moving from professional developers and roboticists to the end-users. However, with the current state-of-the-art, defining missions is non-trivial and typically requires dedicated programming skills. Since end-users usually lack such skills, many commercial robots are nowadays equipped with environments and domain-specific languages tailored for end-users. As such, the software support for defining missions is becoming an increasingly relevant criterion when buying or choosing robots. Improving these environments and languages for specifying missions toward simplicity and flexibility is crucial. To this end, we need to improve our empirical understanding of the current state-of-the-art of such languages and their environments. In this paper, we contribute in this direction. We present a survey of 30 mission specification environments for mobile robots that come with a visual and end-user-oriented language. We explore the design space of these languages and their environments, identify their concepts, and organize them as features in a feature model. We believe that our results are valuable to practitioners and researchers designing the next generation of mission specification languages in the vibrant domain of mobile robots.",Empirical study; Language concepts; Robotic missions; Specification environments; Visual languages,A survey on the design space of end-user-oriented languages for specifying robotic missions,-,,,,YES,,NO,,,NO,,
S1961,1,Forward,book,2021,"Ramirez, Alejandro Rafael Garcia; Costa, Augusto Loureiro Da",,,,"Robotics Software Design and Engineering is an edited volume on robotics. Chapters cover such topics as cognitive robotics systems, artificial intelligence, force feedback, autonomous driving embedded systems, multi-robot systems, a robot software framework for Real-time Control systems, and Industry 4.0. Also discussed are humanoid robots, aerial and work vehicles, and robot manipulators.",Technology & Engineering / Robotics; Technology & Engineering / General,Robotics Software Design and Engineering,NO,,,,YES,,,,,NO,,
S1962,1,Forward,webpage,,,,,https://www.proquest.com/openview/7c8ac699698de70e3982af853cbdb929/1?pq-origsite=gscholar&cbl=2026366&diss=y,"Explore millions of resources from scholarly journals, books, newspapers, videos and more, on the ProQuest Platform.",,Programming Robots for Activities of Everyday Life - ProQuest,NO,,,,NO,,,,,NO,,
S1963,1,Forward,journalArticle,,"Zhao, Rui; Tao, Xu; Conzon, Davide; Ferrera, Enrico; Yu, Yenchia",,,,"Recently, one of the main research topics in the context of application of Cyber-Physical System (CPS) in the Smart City and Industry 4.0 scenarios is the one related to the use of Robot Operating System (ROS)-based CPS. Speciﬁcally, one of the main interest is to allow a ROS-based smart robot communicating with other heterogeneous Internet of Things (IoT) applications in an intelligent environment to efﬁciently react to the system requirements and environment changes. However, the communication between the IoT systems will face many challenges and increase the cost and risks that lead to the requirement of a cross-platform communication for bridging the ROS-based CPS and other heterogeneous IoT applications.",,A Cross-Platform Communication Mechanism for ROS-Based Cyber-Physical System,-,,,,NO,,,,,NO,,
S1964,1,Forward,journalArticle,,"Çag, Muhammed; Kaya, Ri",,,,"A conﬁgurable connector-based software development methodology for componentbased approaches is presented. This method involves the incorporation of variability modeling capabilities into component modeling environments. The focus of this research is on supporting technologies for the combination of parts that are not directly compatible. In the scope of this research, ﬁrstly, proposals for the conﬁgurable connector paradigm are put forth, that are, achieving interoperability among system components by using existing connectors to increase reuse and customizing them through simple user interfaces. This methodology is applied to the Live-Virtual-Constructive simulation systems domain as a confıgurable gateway application between Data Distribution Service for Real-Time Systems (DDS) and High-Level Architecture (HLA) standards. Finally, interoperability of different parties are investigated for Metrology and the calibration industry, and an Industrial Internet of Things-based architecture is established. Academic and industrial case studies have been conducted for proof of concept. They show the practicality of the proposed approaches.",,A THESIS SUBMITTED TO THE GRADUATE SCHOOL OF NATURAL AND APPLIED SCIENCES OF MIDDLE EAST TECHNICAL UNIVERSITY,-,,,,NO,,,,,NO,,
S1965,1,Forward,book,2005,,,,,,Robots; Motion,"Principles of robot motion: theory, algorithms, and implementation",NO,,,,NO,,,,,NO,,
S1966,1,Forward,journalArticle,,"Trinh, Lan Anh",,,,,,TOWARD DEPENDABLE MULTIPLE PATH PLANNING FOR AUTONOMOUS ROBOTS WITH OBSTACLE AVOIDANCE AND CONGESTION CONTROL,-,,,,NO,,,,,NO,,
S1967,1,Forward,webpage,2021,"Ponce, Israel; Garcia Luna, Francesco Jose; Soto Marrufo, Angel Israel; Miguélez Machado, Carlos Guillermo; 206563",,,http://148.210.21.170/handle/20.500.11961/19648,"En  el  presente  trabajo  se  propone  un  Desarrollo  de  Interfaz  Gráfica  de  Usuario  para  la interacción con un modelo de simulación tridimensional de un robot higienizador en una sala simulada para  las  pruebas  de  algoritmos  de  navegación implementados  en  el  mismo.  Al  mismo  tiempo,  se implementan  los  comportamientos  de  exploración  y  planificación  de rutas  de  desinfección.  El  modelo simulado del robot se basa en la Rueda Omnidireccional Nexus 4WOmni de la que también se propone el modelo cinemático. Además, se propone una interfaz gráfica de usuario para dar comandos básicos al robot simulado.  Los  resultados  de  la  implementación  se  comprueban  mediante  la  implementación  de algoritmos de navegación al robot, también los comportamientos de exploración, planificación de rutas y seguimiento de trayectoria de desinfección e interacción de la interfaz gráfica con la simulación.",,Interfaz gráfica para el control de seguimiento detrayectorias de un robot sanitizador en espacios controlados,NO,,,,YES,,,,,NO,,
S1968,1,Forward,thesis,2021,"Leca, Dimitri",,,https://hal.laas.fr/tel-03278956,"Le travail sur lequel porte cette thèse s'inscrit dans le domaine de la robotique agricole. Il s'agit de développer des stratégies de navigation permettant à un robot mobile d'évoluer et d'intervenir de manière autonome et en toute sécurité dans une exploitation. Ce type d'environnement agricole est fortement évolutif et comporte de nombreux obstacles statiques (bâtiments, zones de stockage, etc.) et dynamiques (voitures, machines agricoles, opérateurs humains, animaux, etc.). La stratégie de navigation proposée doit donc être à la fois réactive et adaptative. Par conséquent, cette thèse se concentre sur la conception de méthodes de navigation référencées capteurs (LiDAR, vision, ...) et d'évitement d'obstacles en environnements statiques mais aussi fortement dynamiques. De par la diversité des environnements et des cas possibles, nous avons souhaité développer des méthodes qui soient les plus génériques possible, pouvant gérer les cas à la fois statiques et dynamiques. Ainsi, nous introduirons d'abord les spirales, qui permettent d'obtenir des trajectoires d'évitement pertinentes et flexibles. Ensuite, nous présenterons notre méthode de navigation et d'évitement d'obstacles, basée sur une paramétrisation dynamique des spirales en fonction de l'évolution de l'environnement. Nous verrons que de par l'aspect générique des spirales, cette méthode peut être aisément adaptée pour fonctionner dans un cadre statique mais aussi dans un cadre dynamique. Pour finir, ces solutions seront validées en simulation, puis portées sur un robot mobile pour des expérimentations en conditions réelles.",,Navigation autonome d'un robot agricole,NO,,,,YES,,,,,NO,,
S1969,1,Forward,journalArticle,,"Hartmann, Tobias",,,,,,Ein Beitrag zur untertägigen Navigation von mobilen Maschinen,-,,,,NO,,,,,NO,,
S1970,1,Forward,journalArticle,2020,"Park, Jaeho; Delgado, Raimarius; Choi, Byoung Wook",IEEE Access,10.1109/ACCESS.2020.3018122,,"Due to its ease of use and flexibility, the robot operating system (ROS) is increasingly becoming the most popular middleware for robot applications, even in multiagent systems. Since ROS 1.0 does not satisfy real-time requirements, ROS 2.0 was developed, and it improved the communication stack with the real-time data distribution service (DDS) protocol. However, the actual performance level to be expected is still unknown and can largely depend on the operating system and the kernel being used, the DDS distribution, and the overall software load of the system. In this article, we present an empirical study that evaluates the real-time performance of ROS 2.0 in both the system and communication software layers. In the system layer, the deterministic behavior of the ROS 2.0 nodes is thoroughly observed with regard to whether the tasks are schedulable and can function within the specified temporal deadline. In the communication layer, special attention is devoted to the rate of data loss and the overall latency of messages between nodes. Experiments are performed in various working conditions; for example, the system load is increased to define the real-time performance of the tasks. For reference, the results are compared with the those from the traditional ROS variation. Moreover, we implement a multiagent service robot system to verify the suitability of ROS 2.0 for real-world applications. Our results show that the application of ROS 2.0 is more suitable than that of ROS 1.0 in terms of real-time performance.",Task analysis; Software; performance evaluation; Navigation; Multi-agent system; Real-time systems; Performance evaluation; Robot kinematics; robot operating system; real-time operating systems,Real-Time Characteristics of ROS 2.0 in Multiagent Robot Systems: An Empirical Study,-,,,,YES,,NO,,,NO,,
S1971,1,Forward,webpage,,,,,https://www.proquest.com/openview/b3b06c2cd48fa492eb8785fd9484029e/1?pq-origsite=gscholar&cbl=2026366&diss=y,"Explore millions of resources from scholarly journals, books, newspapers, videos and more, on the ProQuest Platform.",,Preparation and Control of Intelligent Automation Systems - ProQuest,NO,,,,NO,,,,,NO,,
S1972,1,Forward,book,2022,"Dust, Lukas Johannes; Persson, Emil",,,http://urn.kb.se/resolve?urn=urn:nbn:se:mdh:diva-58876,DiVA portal is a finding tool for research publications and student theses written at the following 50 universities and research institutions.,,Dynamic connection handling for scalable robotic systems using ROS2,NO,,,,YES,,,,,NO,,
S1973,1,Forward,journalArticle,,"Andreasen, Malte Z; Holler, Philip I; Jensen, Magnus K; Albano, Michele",,,,"This demo concerns the open source physics-driven simulation tool Multi Agent Exploration Simulator (MAES), which can be used for developing and evaluating exploration and coverage algorithms in an unknown continuous 2D environment. MAES supports development efforts for new algorithms by means of debugging tools for developed algorithms. It provides a fully user-controlled camera over the environment under exploration, which can be attached to a single robot to follow its operations. MAES represents graphically the SLAM process and the areas explored by one or all robots, to visualize exploration, coverage, heatmap, slam etc, both for a specific robot or for the entire swarm. Finally, MAES provides both a simple interface for developing algorithms in C# as well as a Robot Operating System 2 (ROS2) interface, the latter allowing to integrate with existing robot controllers. MAES aims to bridge the gap between unrealistic, simple simulations, usually executed on grid environments, and heavy, time consuming, but realistic simulations, such as ARGoS or Gazebo. The accompanying video is available at https://youtu.be/0RzPN0oW7v8. MAES’ source code can be found at https://github.com/MalteZA/MAES.",,"MAES, a Realistic Simulator for Multi Agent Exploration and Coverage",-,,,,NO,,,,,NO,,
S1974,1,Forward,book,2021,"Söderlund, Anton",,,http://urn.kb.se/resolve?urn=urn:nbn:se:oru:diva-92692,DiVA portal is a finding tool for research publications and student theses written at the following 50 universities and research institutions.,,Integration och realtidsprestanda av ROS 2.0 i ett inbyggtoch distributerat system,NO,,,,YES,,,,,NO,,
S1975,1,Forward,webpage,,,,,https://www.elibrary.ru/item.asp?id=44406774,,,МАТЕМАТИЧЕСКОЕ ОБЕСПЕЧЕНИЕ СИСТЕМЫ СТЕРЕОЗРЕНИЯ РОБОТИЗИРОВАННОЙ ПЛАТФОРМЫ ДЛЯ РЕШЕНИЯ ЗАДАЧИ НАВИГАЦИИ,NO,,,,NO,,,,,NO,,
S1976,1,Forward,webpage,,,,,https://ruc.udc.es/dspace/handle/2183/28348,,,Sistema heterogéneo para la monitorización de la actividad diaria en el hogar y el bienestar de personas mayores,NO,,,,NO,,,,,NO,,
S1977,1,Forward,thesis,2019,"Smyth, David",,,,"Systems utilising autonomous agents are becoming increasingly pervasive in today's society, garnering commercial interest and research funding in a variety of domains ranging from home automation to undersea exploration. This has stemmed from a resurgence in interest in Artificial Intelligence over the last number of years. Globally, we are starting to move towards an age of automation through physical and software systems that exhibit redundancy, modularity and robustness. Research into how to induce intelligent decentralised behaviour in such systems will be key to their development. Autonomous systems that can be operated remotely are highly suited to disaster scene management, due to their dangerous and uncertain nature. This thesis outlines the design and implementation of the software component of a team of autonomous robots that implement a multi-phase disaster scene management plan. The problem domain involves robotic aerial vehicles that have sensors and actuators to interact with their environment. First, the design and development of a virtual high-fidelity simulation environment using a game engine is outlined. This simulation environment was used extensively in the research project, ROCSAFE, which motivated the work in this thesis. It helped to address the problem of generating data to carry out training, testing and validation of systems used to aid hazardous scene management. We then discuss the development of an autonomous software system to aid the surveillance of a disaster scene. We first address a surveying problem, whereby a swarm of aerial vehicles need to use sensors to record data at each point in a discretised region defined by a bounding polygon. This is a standard early phase of the forensic examination of a crime scene and the data gathered can be used to guide strategies during subsequent phases of the disaster management process. The second is a stochastic search problem, where multiple agents are used to pinpoint the location of a target. ""Target"" means anything that can be sensed by the agents. It is assumed that agents are fitted with sensors and actuators and can move around the bounding region freely. Sensor readings are assumed to have some inherent noise, and a stochastic approach is presented to account for this. Results and analysis are presented to give insight into how the software can be used to formulate search control strategies that achieve some realistic objectives. iv",,A Multi-Agent System to aid the Automation of Search and Examination in Hazardous Environments,NO,,,,YES,,,,,NO,,
S1978,1,Forward,book,2022,"Valera, H. H. Alvarez; Luštrek, M.",,,,"The term Intelligent Environments (IEs) refers to physical spaces in which information and communication technologies are interwoven with sensing technologies, innovative user interfaces, robotics and artificial intelligence to create interactive spaces which increase the awareness and enhance the experience of those occupying them. The growing IE community is rooted in academia, but increasingly involves practitioners. It explores the core ideas of IEs as well as the factors necessary to make them a reality, such as energy efficiency, the computational constraints of edge devices and privacy issues. This book presents papers from Workshops held during the 18th International Conference on Intelligent Environments, IE2022, held as a hybrid conference in Biarritz, France, from 20 to 23 June 2022. The conference is now recognized as a major annual venue in the field of IE. It offers a truly international forum for the exchange of information and ideas, and welcomes contributions from all technically active regions of the planet. Included here are 35 papers from the 1st International Workshop on Sentiment Analysis and Emotion Recognition for Social Robots (SENTIRobots’22); 1st International Workshop on Edge AI for Smart Agriculture (EAISA’22); 2nd International Workshop on Artificial Intelligence and Machine Learning for Emerging Topics (ALLEGET’22); 11th International Workshop on the Reliability of Intelligent Environments (WoRIE’22); 2nd International Workshop on Self-Learning in Intelligent Environments (SeLIE’22); 5th Workshop on Citizen Centric Smart Cities Solutions (CCSCS’22); 11th International Workshop on Intelligent Environments Supporting Healthcare and Well-being (WISHWell’22) Exploring some of the latest research and developments in the field, the book will be of interest to all those working with intelligent environments and its associated technologies.",Computers / Artificial Intelligence / General,Workshops at 18th International Conference on Intelligent Environments (IE2022),NO,,,,YES,,,,,NO,,
S1979,1,Forward,webpage,,,,,https://www.ideals.illinois.edu/items/116127,,,Separation of distributed coordination and control for programming reliable robotics | IDEALS,NO,,,,NO,,,,,NO,,
S1980,1,Forward,webpage,,,,,https://www.proquest.com/openview/a7213f88f9a1fa2910c6fd1ca66fc198/1?pq-origsite=gscholar&cbl=18750&diss=y,"Explore millions of resources from scholarly journals, books, newspapers, videos and more, on the ProQuest Platform.",,Towards Reliable Robotics: from Navigation to Coordination - ProQuest,NO,,,,NO,,,,,NO,,
S1981,1,Forward,webpage,,,,,https://www.proquest.com/openview/af784d65959b38c2ba0c537071066d1a/1?pq-origsite=gscholar&cbl=18750&diss=y,"Explore millions of resources from scholarly journals, books, newspapers, videos and more, on the ProQuest Platform.",,"Command Language for Single-User, Multi-Robot Swarm Control - ProQuest",NO,,,,NO,,,,,NO,,
S1982,1,Forward,thesis,2017,"Munera Sánchez, Eduardo",,,https://riunet.upv.es/handle/10251/88404,"Home environments are changing as more technological devices are used to improve daily life. The growing demand for high technology in our homes means that robot integration will soon arrive. Home devices are evolving in a connected paradigm in which data flows to perform efficient home task management. Heterogeneous home robots connected in a network can establish a workflow that complements their capabilities and so increases performance within a mission execution. This work addresses the definition and requirements of a robot-group mission in the home context. The proposed solution relies on a network of smart resources, which are defined as cyber-physical systems that provide high-level service execution. Firstly, control middleware architecture is introduced as the execution base for the Smart resources. Next, the Smart resource topology and its integration within a robotic platform are addressed. Services supplied by Smart resources manage their execution through a robot behavior architecture. Robot behavior execution is hierarchically organized through a mission definition that can be established as an individual or collective approach. Environment model and interaction tasks characterize the operation capabilities of each robot within a mission. Mission goal achievement in a heterogeneous group is enhanced through the complement of the interaction capabilities of each robot. To offer a clearer explanation, a full use case is presented in which two robots cooperate to execute a mission and the previously detailed steps are evaluated. Finally, some of the obtained results are discussed as conclusions and future works is introduced.",,MISSION-ORIENTED HETEROGENEOUS ROBOT COOPERATION BASED ON SMART RESOURCES EXECUTION,NO,,,,YES,,,,,NO,,
S1983,1,Forward,webpage,,,,,https://www.ideals.illinois.edu/items/117132,,,Designing boundary interactions for simple mobile robots | IDEALS,NO,,,,NO,,,,,NO,,
S1984,1,Forward,bookSection,2020,"Dieber, Bernhard; White, Ruffin; Taurer, Sebastian; Breiling, Benjamin; Caiazza, Gianluca; Christensen, Henrik; Cortesi, Agostino",Robot Operating System (ROS): The Complete Reference (Volume 4),,https://doi.org/10.1007/978-3-030-20190-6_8,"ROS is the most popular framework in robotics research and it also grows in terms of industrial use. This makes ROS a worthwhile target for attackers especially since security is not addressed by the core framework itself. Its open architecture and flexibility are also the reasons why ROS suffers from security issues. For example, in ROS it is possible to isolate single nodes from the rest of the application without the ROS master, the other nodes or even the node itself (i.e., its business code) noticing it. This is true for publishers, subscribers and services alike. This makes attacks very difficult to spot at runtime. Penetration testing is the most common security testing practice. The goal is to test an application for possible security flaws. To better facilitate penetration testing for ROS, we introduce ROSPenTo and Roschaos, tools that make use of the vulnerabilities of ROS and demonstrate how ROS applications can be sabotaged by an attacker. In this tutorial you will learn about the ROS XML-RPC API, which is our main attack point. You will see, how API attacks on ROS work in depth. You will get to know Roschaos and ROSPentTo, two tools, which can be used to manipulate running ROS applications.",Security; ROS; Penetration testing,Penetration Testing ROS,-,,,,YES,,NO,,,NO,,
S1985,1,Forward,conferencePaper,2020,"Rivera, Sean; Iannillo, Antonio Ken; Lagraa, Sofiane; Joly, Clément; State, Radu",2020 25th International Conference on Engineering of Complex Computer Systems (ICECCS),10.1109/ICECCS51672.2020.00029,,"In this paper, we leverage the newly integrated extended Berkely Packet Filters (eBPF) and eXpress Data Path (XDP) to build ROS-FM, a high-performance inline network-monitoring framework for ROS. We extend the framework with a security policy enforcement tool and distributed data visualization tool for ROS1 and ROS2 systems. We compare the overhead of this framework against the generic ROS monitoring tools, and we test the policy enforcement against existing ROS penetration testing tools to evaluate their effectiveness. We find that the network monitoring framework and the associated visualization tools outperform the existing ROS monitoring tools for all robots with more than 10 running processes and that the monitoring tool uses only 4% of the overhead of the generic tools for robots with 80 processes. We further demonstrate the effectiveness of the security tool against common attacks in both ROS1 and ROS2.",Monitoring; Data visualization; Security; Tools; Robots; ROS; eBPF; Penetration testing; XDP,ROS-FM: Fast Monitoring for the Robotic Operating System(ROS),-,,,,YES,,NO,,,NO,,
S1986,1,Forward,conferencePaper,2021,"Goerke, Niklas; Timmermann, David; Baumgart, Ingmar","2021 7th International Conference on Automation, Robotics and Applications (ICARA)",10.1109/ICARA51699.2021.9376468,,"The Robot Operation System (ROS) is widely used in academia as well as the industry to build custom robot applications. Successful cyberattacks on robots can result in a loss of control for the legitimate operator and thus have a severe impact on safety if the robot is moving uncontrollably. A high level of security thus needs to be mandatory. Neither ROS 1 nor 2 in their default configuration provide protection against network based attackers. Multiple protection mechanisms have been proposed that can be used to overcome this. Unfortunately, it is unclear how effective and usable each of them are. We provide a structured analysis of the requirements these protection mechanisms need to fulfill by identifying realistic, network based attacker models and using those to derive relevant security requirements and other evaluation criteria. Based on these criteria, we analyze the protection mechanisms available and compare them to each other. We find that none of the existing protection mechanisms fulfill all of the security requirements. For both ROS 1 and 2, we discuss which protection mechanism are most relevant and give hints on how to decide on one. We hope that the requirements we identify simplify the development or enhancement of protection mechanisms that cover all aspects of ROS and that our comparison helps robot operators to choose an adequate protection mechanism for their use case.",Analytical models; Automation; Security; Industries; DDS; security; Computer crime; Service robots; Safety; ROS; ROS 2; SROS; SROS 2,Who Controls Your Robot? An Evaluation of ROS Security Mechanisms,-,,,,YES,,NO,,,NO,,
S1987,1,Forward,report,2019,"Chen, Zhaolin",,,https://apps.dtic.mil/sti/citations/AD1086975,"This thesis studies the network performance of the Robot Operating System ROS 2 when used in a network of nodes similar to how a group of unmanned assets would operate. Specifically, this thesis evaluates the impact of combining varying Quality of Service QoS and security settings in the ROS 2. It also explores the effect that scaling to multiple nodes has on network performance. This is the first work to comprehensively study ROS 2 network performance using QoS and security classification as a function of scale and message size. Network performance metrics include latency and message drop rate between nodes. Our research uniquely integrates ROS 2 with NS-3, developing a simulation architecture that is effective for rapidly studying ROS 2 network performance. Our simulation results demonstrated the trade-offs in choosing different QoS policies as well as the trade-offs in performance when security settings were enabled. We found that enabling security resulted in a higher message drop rate across all QoS profiles. We also found that scaling the network to more nodes resulted in various consequences with the use of different QoS settings. Scaling up to more nodes in a network also resulted in an equivalent increase in the average latency of messages. This work contributes to evaluating and configuring ROS 2 parameters for different unmanned system use cases while providing a simulation framework on which tests can be run.",,,NO,,,,YES,,,,,NO,,
S1988,1,Forward,report,2019,"Fernandez, Jose M.",,,https://apps.dtic.mil/sti/citations/AD1080210,"Throughout the Department of Defense, efforts to increase cybersecurity and improve data transfer in unmanned robotic systems UxS have been ongoing at warfare centers NUWC, SPAWAR, etc. and research facilities NPS. This thesis explores the performance of the Robot Operating System ROS 2, which is built with the Data Distribution Service DDS standard as a middleware. Based on how quality of service QoS parameters are defined in the robotic middleware interface, it is possible to implement strict delivery requirements to different nodes on a dynamic nodal network with multiple unmanned systems connected. Through this research, different scenarios with varying QoS settings were implemented and compared to baseline values to help illustrate the impact of latency and throughput on data flow. DDS security settings were also enabled to help understand the true cost of overhead and performance when secured data is compared to plaintext baseline values. Our experiments were performed using a basic ROS 2 network consisting of two nodes publisher and subscriber. Our experiments showed a measurable latency and throughput change between different QoS profiles and security settings. We analyze the trends and tradeoffs associated with varying QoS and security settings. This thesis provides performance data points that can be used to help future researchers and developers make informative choices when using ROS 2 for UxS.",,,NO,,,,YES,,,,,NO,,
S1989,1,Forward,conferencePaper,2021,"Rivera, Sean; State, Radu",2021 IFIP/IEEE International Symposium on Integrated Network Management (IM),,,"Robotic systems are becoming an ever-increasing part of everyday life due to their capacity to carry out physical tasks on behalf of human beings. Found in nearly every facet of our lives, robotic systems are used domestically, in small and large-scale factories, for the production and processing of agriculture, for military operations, to name a few. The Robotic Operating System (ROS) is the standard operating system used today for the development of modular robotic systems. However, in its development, ROS has been notorious for the absence of security mechanisms, placing people in danger both physically and digitally. This dissertation summary presents the development of a suite of ROS tools, leading up to the development of a modular, secure framework for ROS. An integrated approach for the security of ROS-enabled robotic systems is described, to set a baseline for the continual development to increase ROS security. The work culminates in the ROS security tool ROS-Immunity, combining internal system defense, external system verification, and automated vulnerability detection in an integrated tool that, in conjunction with Secure-ROS, provides a suite of defenses for ROS systems against malicious attackers.",Task analysis; Security; Tools; security; robotics; ROS; Operating systems; Production facilities; Agriculture; dissertation; integrated; System verification,Securing Robots: An Integrated Approach for Security Challenges and Monitoring for the Robotic Operating System (ROS),-,,,,YES,,NO,,,NO,,
S1990,1,Forward,patent,2021,"SERGEEV, Andrew",,,https://patents.google.com/patent/US11095430B2/en,,original; packet; packets; series; size,,NO,,,,YES,,,,,NO,,
S1991,1,Forward,journalArticle,2022,"Queralta, Jorge Peña; Qingqing, Li; Ferrer, Eduardo Castelló; Westerlund, Tomi",IEEE Internet of Things Journal,10.1109/JIOT.2022.3164545,http://arxiv.org/abs/2009.01341,"As autonomous robots are becoming more widespread, more attention is being paid to the security of robotic operation. Autonomous robots can be seen as cyber-physical systems: they can operate in virtual, physical, and human realms. Therefore, securing the operations of autonomous robots requires not only securing their data (e.g., sensor inputs and mission instructions) but securing their interactions with their environment. There is currently a deficiency of methods that would allow robots to securely ensure their sensors and actuators are operating correctly without external feedback. This paper introduces an encoding method and end-to-end validation framework for the missions of autonomous robots. In particular, we present a proof of concept of a map encoding method, which allows robots to navigate realistic environments and validate operational instructions with almost zero {\it a priori} knowledge. We demonstrate our framework using two different encoded maps in experiments with simulated and real robots. Our encoded maps have the same advantages as typical landmark-based navigation, but with the added benefit of cryptographic hashes that enable end-to-end information validation. Our method is applicable to any aspect of robotic operation in which there is a predefined set of actions or instructions given to the robot.",Computer Science - Cryptography and Security; Computer Science - Robotics,Secure Encoded Instruction Graphs for End-to-End Data Validation in Autonomous Robots,-,,,,YES,,NO,,,NO,,
S1992,1,Forward,webpage,,,,,https://www.proquest.com/openview/48398313fdb7cdf6bd5ff1bdc8ce9350/1?pq-origsite=gscholar&cbl=18750&diss=y,"Explore millions of resources from scholarly journals, books, newspapers, videos and more, on the ProQuest Platform.",,,NO,,,,NO,,,,,NO,,
S1993,1,Forward,webpage,,,,,https://www.proquest.com/openview/e55fe9ac486989126008ad651b6a1f32/1?pq-origsite=gscholar&cbl=18750&diss=y,"Explore millions of resources from scholarly journals, books, newspapers, videos and more, on the ProQuest Platform.",,,NO,,,,NO,,,,,NO,,
S1994,1,Forward,webpage,,,,,https://www.jstage.jst.go.jp/article/ieejeiss/140/8/140_939/_article/-char/ja/,,,SROS2における認証付き暗号の組込みシステムを指向したセキュア実装とその評価,-,,,NO,NO,,,,,NO,,
S1995,1,Forward,journalArticle,2020,"Park, Jaeho; Delgado, Raimarius; Choi, Byoung Wook",IEEE Access,10.1109/ACCESS.2020.3018122,,"Due to its ease of use and flexibility, the robot operating system (ROS) is increasingly becoming the most popular middleware for robot applications, even in multiagent systems. Since ROS 1.0 does not satisfy real-time requirements, ROS 2.0 was developed, and it improved the communication stack with the real-time data distribution service (DDS) protocol. However, the actual performance level to be expected is still unknown and can largely depend on the operating system and the kernel being used, the DDS distribution, and the overall software load of the system. In this article, we present an empirical study that evaluates the real-time performance of ROS 2.0 in both the system and communication software layers. In the system layer, the deterministic behavior of the ROS 2.0 nodes is thoroughly observed with regard to whether the tasks are schedulable and can function within the specified temporal deadline. In the communication layer, special attention is devoted to the rate of data loss and the overall latency of messages between nodes. Experiments are performed in various working conditions; for example, the system load is increased to define the real-time performance of the tasks. For reference, the results are compared with the those from the traditional ROS variation. Moreover, we implement a multiagent service robot system to verify the suitability of ROS 2.0 for real-world applications. Our results show that the application of ROS 2.0 is more suitable than that of ROS 1.0 in terms of real-time performance.",Task analysis; Software; performance evaluation; Navigation; Multi-agent system; Real-time systems; Performance evaluation; Robot kinematics; robot operating system; real-time operating systems,Real-Time Characteristics of ROS 2.0 in Multiagent Robot Systems: An Empirical Study,-,,,,YES,,NO,,,NO,,
S1996,1,Forward,conferencePaper,2020,"Yang, Yuqing; Azumi, Takuya",2020 IEEE International Conference on Embedded Software and Systems (ICESS),10.1109/ICESS49830.2020.9301530,,"With the recent developments in robotics research, autonomous robot systems have grown rapidly to meet the increasing demands. The Robot Operating System (ROS) is commonly used for building autonomous robot systems. Due to the high latency in communication, ROS has been upgraded to ROS 2 using the Data Distribution Service (DDS) as a transport system. In ROS 2, an Executor concept was introduced to support execution management and ensure real-time performance. However, it is difficult to improve the real-time performance of ROS 2. A real-time executor called the Callback-group-level Executor has been developed in micro-ROS. In this paper, the Callback-grouplevel Executor was used to replace the standard rclcpp Executor in ROS 2, and explore the resulting performance. Using the pingpong test bench, the potential and constraints of the real-time executor on ROS 2 were also examined and evaluated.",Standards; Libraries; Message systems; Middleware; Real-time systems; Autonomous robots; Operating systems,Exploring Real-Time Executor on ROS 2,-,,,,YES,,NO,,,NO,,
S1997,1,Forward,report,2019,"Chen, Zhaolin",,,https://apps.dtic.mil/sti/citations/AD1086975,"This thesis studies the network performance of the Robot Operating System ROS 2 when used in a network of nodes similar to how a group of unmanned assets would operate. Specifically, this thesis evaluates the impact of combining varying Quality of Service QoS and security settings in the ROS 2. It also explores the effect that scaling to multiple nodes has on network performance. This is the first work to comprehensively study ROS 2 network performance using QoS and security classification as a function of scale and message size. Network performance metrics include latency and message drop rate between nodes. Our research uniquely integrates ROS 2 with NS-3, developing a simulation architecture that is effective for rapidly studying ROS 2 network performance. Our simulation results demonstrated the trade-offs in choosing different QoS policies as well as the trade-offs in performance when security settings were enabled. We found that enabling security resulted in a higher message drop rate across all QoS profiles. We also found that scaling the network to more nodes resulted in various consequences with the use of different QoS settings. Scaling up to more nodes in a network also resulted in an equivalent increase in the average latency of messages. This work contributes to evaluating and configuring ROS 2 parameters for different unmanned system use cases while providing a simulation framework on which tests can be run.",,,NO,,,,YES,,,,,NO,,
S1998,1,Forward,webpage,,,Christophe Bédard,,https://christophebedard.com/ros-tracing-message-flow/,An overview of my project on Trace Compass & ROS,,,NO,,,,NO,,,,,NO,,
S1999,1,Forward,webpage,,,,,https://www.sandycast.com/content/dam/xilinx/support/documentation/white_papers/wp540-kria-robotics-stack.pdf,,,,NO,,,,NO,,,,,NO,,
S2000,1,Forward,report,2020,"Gutjahr, Tobias; Roddy, Matthew",,,https://www.sae.org/publications/technical-papers/content/2020-01-1367/,"Originally developed for the service robot industry, the Robot Operating System (ROS) has lately received a lot of attention from the automotive sector with use cases, especially, in the area of advanced driver assistance systems and autonomous driving (ADAS/AD). Introduced as communication framewor",,,NO,,,,YES,,,,,NO,,
S2001,1,Forward,book,2022,"Dust, Lukas Johannes; Persson, Emil",,,http://urn.kb.se/resolve?urn=urn:nbn:se:mdh:diva-58876,DiVA portal is a finding tool for research publications and student theses written at the following 50 universities and research institutions.,,,NO,,,,YES,,,,,NO,,
S2002,1,Forward,journalArticle,,"Partap, Aditi; Grayson, Samuel; Huzaifa, Muhammad; Adve, Sarita; Godfrey, Brighten; Gupta, Saurabh; Hauser, Kris; Mittal, Radhika",,,,"Robots have to take highly responsive real-time actions, driven by complex decisions involving a pipeline of sensing, perception, planning, and reaction tasks. These tasks must be scheduled on resource-constrained devices such that the performance goals and the requirements of the application are met. This is a difficult problem that requires handling multiple scheduling dimensions, and variations in computational resource usage and availability. In practice, system designers manually tune parameters for their specific hardware and application, which results in poor generalization and increases the development burden. In this work, we highlight the emerging need for scheduling CPU resources at runtime in robot systems. We use robot navigation as a case-study to understand the key scheduling requirements for such systems. Armed with this understanding, we develop a CPU scheduling framework, Catan, that dynamically schedules compute resources across different components of an app so as to meet the specified application requirements. Through experiments with a prototype implemented on ROS, we show the impact of system scheduling on meeting the application’s performance goals, and how Catan dynamically adapts to runtime variations.",,On-Device CPU Scheduling for Robot Systems,-,,,,NO,,,,,NO,,
S2003,1,Forward,journalArticle,,"Mrázek, Jan",,,,,,Fault-tolerance for Metamorphic Robots,-,,,,NO,,,,,NO,,
S2004,1,Forward,conferencePaper,2016,"Hua, Yingbing; Zander, Stefan; Bordignon, Mirko; Hein, Björn",2016 IEEE 21st International Conference on Emerging Technologies and Factory Automation (ETFA),10.1109/ETFA.2016.7733579,,"One of the major investment for applying industrial robots in production resides in the software development, which is an interdisciplinary and heterogeneous engineering process. This paper presents a novel model-driven approach that uses AutomationML as modeling framework and ontological reasoning as inference framework for constructing robotic application using Robot Operating System (ROS). We show how different robotic components can be classified and modeled with AutomationML, how these components can be composed together to a production system, and how the AutomationML models can be processed semantically by utilizing Semantic Web technologies and ontological reasoning. By applying model-to-text transformation techniques, executable ROS code can be generated from the models that foster fast prototyping and the reuse of robotic software.",Software; Ontologies; Semantics; Automation; Unified modeling language; Service robots,From AutomationML to ROS: A model-driven approach for software engineering of industrial robotics using ontological reasoning,-,,,,YES,,NO,,,NO,,
S2005,1,Forward,journalArticle,2018,"Fechter, Manuel; Seeber, Carsten; Chen, Shengjian",Procedia CIRP,10.1016/j.procir.2018.03.179,https://www.sciencedirect.com/science/article/pii/S221282711830338X,"The design of human-robot-collaborative workplaces is a challenging task, whose outcome is highly dependent on the assembly planners knowledge and experience, as usually only a small fraction of the design space is considered. This often results in unappropriated workplace designs with process-related and economical drawbacks. This paper outlines an approach to a collaborative workplace design tool-chain considering different strengths of robot and human, starting from assembly group CAD model data input to an ontology based resource allocation and permutations on workplace design proposals. All steps are connected by the open exchange data format of AutomationML.",Ontology; Assembly Planning; AutomationML; Human Robot Collaboration; Integrated Process; Job Shop Scheduling,Integrated Process Planning and Resource Allocation for Collaborative Robot Workplace Design,-,NO,,,YES,,,,,NO,,
S2006,1,Forward,journalArticle,2017,"Tsardoulias, Emmanouil G.; Kintsakis, Athanassios M.; Panayiotou, Konstantinos; Thallas, Aristeidis G.; Reppou, Sofia E.; Karagiannis, George G.; Iturburu, Miren; Arampatzis, Stratos; Zielinski, Cezary; Prunet, Vincent; Psomopoulos, Fotis E.; Symeonidis, Andreas L.; Mitkas, Pericles A.",Cognitive Systems Research,10.1016/j.cogsys.2016.08.004,https://www.sciencedirect.com/science/article/pii/S1389041716300535,"Scientific breakthroughs have led to an increase in life expectancy, to the point where senior citizens comprise an ever increasing percentage of the general population. In this direction, the EU funded RAPP project “Robotic Applications for Delivering Smart User Empowering Applications” introduces socially interactive robots that will not only physically assist, but also serve as a companion to senior citizens. The proposed RAPP framework has been designed aiming towards a cloud-based integrated approach that enables robotic devices to seamlessly deploy robotic applications, relieving the actual robots from computational burdens. The Robotic Applications (RApps) developed according to the RAPP paradigm will empower consumer social robots, allowing them to adapt to versatile situations and materialize complex behaviors and scenarios. The RAPP pilot cases involve the development of RApps for the NAO humanoid robot and the ANG-MED rollator targeting senior citizens that (a) are technology illiterate, (b) have been diagnosed with mild cognitive impairment or (c) are in the process of hip fracture rehabilitation. Initial results establish the robustness of RAPP in addressing the needs of end users and developers, as well as its contribution in significantly increasing the quality of life of senior citizens.",Cloud robotics; Assistance robotics; Robotic applications; Robotic architectures; Social robotics,Towards an integrated robotics architecture for social inclusion – The RAPP paradigm,-,NO,,,YES,,,,,NO,,
S2007,1,Forward,bookSection,2020,"Vicentini, Federico; Pedrocchi, Nicola; Beschi, Manuel; Giussani, Matteo; Iannacci, Niccolò; Magnoni, Paolo; Pellegrinelli, Stefania; Roveda, Loris; Villagrossi, Enrico; Askarpour, Mehrnoosh; Maurtua, Inaki; Tellaeche, Alberto; Becchi, Francesco; Stellin, Giovanni; Fogliazza, Giuseppe",Bringing Innovative Robotic Technologies from Research Labs to Industrial End-users: The Experience of the European Robotics Challenges,,https://doi.org/10.1007/978-3-030-34507-5_4,"Handling and assembling applications with small batch size and high production mix require requires high adaptability, reconfigurability and flexibility. Thus, human-robot collaboration could be an effective solution to ensure production performance and operator satisfaction. This scenario requires human-awareness in different levels of the software framework, from the robot control to the task planning. The goal is to assign high added value activities to the human as much as possible, while the robot has to be able to substitute the human when needed. Team PIROS faces this goal by designing a IEC 61499/ROS-based architecture which integrate safety assessment, advanced force control, human-aware motion planning, gesture recognition, and task scheduling.",Human awareness; Human-robot collaboration; Manipulation,"PIROS: Cooperative, Safe and Reconfigurable Robotic Companion for CNC Pallets Load/Unload Stations",-,NO,,,YES,,,,,NO,,
S2008,1,Forward,conferencePaper,2016,"Wenger, Monika; Eisenmenger, Waldemar; Neugschwandtner, Georg; Schneider, Ben; Zoitl, Alois",2016 IEEE 21st International Conference on Emerging Technologies and Factory Automation (ETFA),10.1109/ETFA.2016.7733559,,"Programming industrial robots requires experts -not only to create the robot applications, but also for changing them later due to different product requirements. Part of the reason for this is that all robot vendors provide their own robot programming language. Due to the language differences, robot applications cannot be reused for different robot types. Often, additional experts are required since one expert is trained only for a special robot type. This makes the use of robots uneconomical for small and medium sized enterprises. The ReApp project addresses this problem by providing a workbench based on ROS (Robot Operating System). A central part of this workbench is the skill and solution modeling tool, which allows the model-based design of robot applications composed of reusable components, and is described in this paper.",Software; OWL; Unified modeling language; Robot kinematics; Service robots; IEC Standards,"A model based engineering tool for ROS component compositioning, configuration and generation of deployment information",-,,,,YES,,NO,,,NO,,
S2009,1,Forward,conferencePaper,2017,"Walch, Michael",2017 IEEE International Conference on Agents (ICA),10.1109/AGENTS.2017.8015307,,"This paper addresses design and engineering of models that connect cyber-physical systems and conceptualizations of industrial applications (IA). For this purpose, the hybrid modelling method SeRoIn is constructed using metamodel-based implementation (MMbI). Details are presented on specific building blocks of the modelling method, following the Knowledge-based Robotics (KbR) approach. Focusing on Knowledge-driven Enrichment (KdE) to integrate models, two experiments are conducted in the robotics section (OMiRob) of the Open Models Laboratory (OMiLAB), which involves concepts for hybrid automata, processes and ontologies. Thereby, intelligent behaviour is formalized, coining the notion of “smart models”. The experiments prove the capability of KdE and suggest to establish focused research in the area of KbR.",Computational modeling; Ontologies; Business; Automata; Tools; Service robots,Knowledge-driven enrichment of cyber-physical systems for industrial applications using the KbR modelling approach,-,NO,,,YES,,,,,NO,,
S2010,1,Forward,journalArticle,2016,"Zander, Stefan; Merkle, Nicole; Frank, Matthias",Procedia Computer Science,10.1016/j.procs.2016.09.015,https://www.sciencedirect.com/science/article/pii/S1877050916321366,"This research in progress work demonstrates how the formal, model-theoretic semantics of ontologies can be used for complementing the technical specifications of Internet of Things (IoT) devices with additional high-level information derived from domain ontologies in order to enhance utilization and interoperability. The presented approach substantiates the assumption that a more elaborated description about a device's capabilities and its features helps in integrating it in different system contexts and fosters interoperability among different IoT devices. We show how basic technical information represented as RDF data can be used to automatically classify IoT devices, how default capabilities can be deduced from these classifications, and how advanced features can be inferred using domain semantics and formal reasoning. The applicability of the presented approach in real world settings is demonstrated by a concrete example from an IoT use case.",Internet of Things; Logic; Artificial Intelligence; Knowledge Representation; Reasoning; Semantic Web,Enhancing the Utilization of IoT Devices Using Ontological Semantics and Reasoning,-,NO,,,YES,,,,,NO,,
S2011,1,Forward,journalArticle,2021,"Bi, Zhuming; Miao, Zhonghua; Zhang, Bing; Zhang, Chris W. J.",IEEE Systems Journal,10.1109/JSYST.2020.2990892,,"In a dynamic environment, a manufacturing system should be reconfigurable to make the products with lot size of one and a high product mix in mass customization. A manufacturing system is continuously evolved to make new products at different time scales and ensure uninterrupted productions when internal or external changes occur. System evolution relates to add, remove, upgrade components, and reconfigure the system at different levels and scopes. However, scientific methods and tools are lacking to support designers in reconfiguring a system subject to given changes. This becomes a big hurdle to adopt automated solutions in small- and medium-sized enterprises. To support system reconfiguration, we propose a generic framework and methods to assess the performance of heterogeneous robotic systems or components. The proposed methods can also help 1) designers to select components for an integrated solution based on the needs and 2) robot manufacturers to identify the weaknesses of their products.",Complexity theory; model-driven engineering; Object oriented modeling; performance assessment; Robot sensing systems; Tools; modularity; Composability; Manufacturing systems; object-oriented framework; robotic testing standards; small- and medium-sized enterprises (SMEs),Framework for Performance Assessment of Heterogeneous Robotic Systems,-,NO,,,YES,,,,,NO,,
S2012,1,Forward,journalArticle,2020,"Morita, Takeshi; Kashiwagi, Naho; Yorozu, Ayanori; Suzuki, Hideo; Yamaguchi, Takahira",The Review of Socionetwork Strategies,10.1007/s12626-019-00049-x,https://doi.org/10.1007/s12626-019-00049-x,"While AI applications are popular in many domains, they should work harmoniously with domain exerts and end users. Furthermore, to develop such harmonious AI applications, we need agile AI platforms for not only developers, but also domain experts. Currently, we have developed PRactical INTElligent aPplicationS (PRINTEPS), which is a user-centric platform to develop integrated intelligent applications. This paper reports on a multi-robot cafe as a practical application of PRINTEPS and evaluates its service quality at a university festival. It is not clear if robotic services are perceived as attractive and/or valuable, and how the concept of robotic services could lead to customer satisfaction. Therefore, the evaluation of the quality of such services is necessary to identify the key factors that could contribute to improving customer satisfaction. The purpose of this research is to identify key factors in improving customer satisfaction in robotic services by evaluating the service quality of the multi-robot cafe. We designed questionnaire items based on SERVQUAL which is one of the service quality evaluation measurement methods and conducted a questionnaire survey at a multi-robot cafe held at a university festival. From the collected data, we modeled and evaluated the relationship between service quality and customer satisfaction to identify key factors in robotic services using a Bayesian network. In addition, the experiment confirms the usefulness of PRINTEPS.",service quality; multi-robot cafe; PRINTEPS; SERVQUAL,Evaluation of a Multi-robot Cafe Based on Service Quality Dimensions,-,NO,,,YES,,,,,NO,,
S2013,1,Forward,conferencePaper,2016,"Awad, Ramez; Heppner, Georg; Roennau, Arne; Bordignon, Mirko",2016 IEEE 21st International Conference on Emerging Technologies and Factory Automation (ETFA),10.1109/ETFA.2016.7733581,,"In this work, the ReApp Engineering Workbench and its underlying semantically enriched app models are presented. The usage of a model, which describes the apps functionality, interfaces and other attributes, allows the utilization of engineering tools for code generation and automated testing. Further, it ensures the compatibility of the generated interfaces, which in turn enhances the reusability of the developed apps in larger applications.",Hardware; Unified modeling language; Biological system modeling; Robot kinematics; Model driven engineering,ROS engineering workbench based on semantically enriched app models for improved reusability,-,,,,YES,,NO,,,NO,,
S2014,1,Forward,conferencePaper,2020,"Weser, Michael; Bock, Jürgen; Schmitt, Siwara; Perzylo, Alexander; Evers, Kathrin",2020 25th IEEE International Conference on Emerging Technologies and Factory Automation (ETFA),10.1109/ETFA46521.2020.9212104,,"This paper presents an approach to describe abilities of manufacturing resources by a formal description of capabilities using Semantic Web technologies. A hierarchical ontology architecture is proposed to represent, publish, and extend knowledge on capabilities for different application domains and use cases. Furthermore, the paper describes patterns of how the underlying formal logic can be used in taxonomy modeling and the inference of implicit capability facts. The usability and performance of the approach was validated by formalizing capability knowledge of related work and evaluated in benchmarking a prototypical implemented tool for managing and querying catalogs of resources and their capabilities. The proposed concept is intended to be used as a foundation for a future multi-layered feasibility checking, which evaluates the compatibility of resources and their offered skills with the requirements of manufacturing tasks at symbolic and subsymbolic levels. Extended evaluations might be based on parameters, analytics, simulation, and other means.",Ontologies; ontology; Semantics; Production systems; Temperature; Taxonomy; manufacturing; capabilities; Semantic Web; semantic web; skills; Vocabulary,An Ontology-based Metamodel for Capability Descriptions,-,NO,,,YES,,,,,NO,,
S2015,1,Forward,conferencePaper,2018,"Morita, Takeshi; Kashiwagi, Naho; Yorozu, Ayanori; Walch, Michael; Suzuki, Hideo; Karagiannis, Dimitris; Yamaguchi, Takahira",2018 IEEE 42nd Annual Computer Software and Applications Conference (COMPSAC),10.1109/COMPSAC.2018.10219,,"In order to develop services utilizing robots, various AI element technologies and multiple robots and sensors must be integrated. However, at present, it takes a lot of cost to develop such integrated intelligent applications. Currently, we have been developing PRactical INTEligent aPplicationS (PRINTEPS), which is a user-centric platform to develop integrated intelligent applications only by combining five types of modules such as knowledge-based reasoning, speech dialogue, image sensing, motion management, and machine learning. In this paper, we report on a multi-robot teahouse at a university campus festival as a practical application of PRINTEPS. We also report the evaluation of the robot teahouse from the viewpoint of the service quality based on the questionnaires of the customers who experienced the robot teahouse.","Robot sensing systems; Tools; Customer satisfaction; Entertainment industry; Plastic products; PRINTEPS, multi robot teahouse, service quality, SERVQUAL",Practice of Multi-robot Teahouse Based on PRINTEPS and Evaluation of Service Quality,-,NO,,,YES,,,,,NO,,
S2016,1,Forward,journalArticle,2018,"Morita, Takeshi; Nakamura, Kodai; Komatsushiro, Hiroki; Yamaguchi, Takahira",The Review of Socionetwork Strategies,10.1007/s12626-018-0020-y,https://doi.org/10.1007/s12626-018-0020-y,"Although AI and service robot applications have become very popular in many domains recently, many of them are specific applications and it is still difficult to develop integrated intelligent applications such as a robot teahouse and teaching assistant robots. To develop such integrated intelligent applications, we need integrated intelligent application platforms that have AI integration and agile process facilities. From the above background, we are currently developing PRactical INTElligent aPplicationS (PRINTEPS), which is a platform for developing integrated intelligent applications by combining only five types of modules, namely knowledge-based reasoning, spoken dialogue, image sensing, motion management, and machine learning. This paper proposes a workflow editor in PRINETPS based on a service-oriented architecture and a Robot Operating System that enables real-time parallel processing for multiple robots and sensors by integrating the five types of modules. The editor also supports not only developers but also domain experts in updating workflows frequently. This paper also proposes a novel method to integrate signals acquired through image sensing with knowledge (ontologies and business rules) using C-SPARQL and Semantic Web Rule Language. To evaluate PRINTEPS, we developed a robot teahouse application including customer reception and guidance to table services using a humanoid robot with PRINTEPS. Through this case study, we demonstrated that the behaviors of the robot can be modified by changing the workflow, the ontology, and the rules.",ROS; Ontology; PRINTEPS; Stream reasoning,PRINTEPS: An Integrated Intelligent Application Development Platform based on Stream Reasoning and ROS,-,NO,,,YES,,,,,NO,,
S2017,1,Forward,journalArticle,2018,"Eymüller, Christian; Wanninger, Constantin; Hoffmann, Alwin; Reif, Wolfgang",International Journal of Semantic Computing,10.1142/S1793351X18500058,https://www.worldscientific.com/doi/abs/10.1142/S1793351X18500058,"This paper describes the use of semantically annotated data for the expression of sensors and actuators with their properties and capabilities. For this purpose, a plug and play mechanism is presented in order to exchange self-descriptions between several hardware devices and then use the established information for the execution of capabilities. For the combination of different capabilities distributed on multiple hardware devices an architecture is presented to link abstract capabilities. These abstract capabilities are initialized through concrete capabilities of the discovered hardware devices by the plug and play mechanism.",robotics; Ontology; skills; plug-&-play; self-description; semantic hardware,Semantic Plug and Play — Self-Descriptive Modular Hardware for Robotic Applications,-,NO,,,YES,,,,,NO,,
S2018,1,Forward,journalArticle,2018,"Morita, Takeshi; Kashiwagi, Naho; Yorozu, Ayanori; Suzuki, Hideo; Yamaguchi, Takahira",Procedia Computer Science,10.1016/j.procs.2018.08.035,https://www.sciencedirect.com/science/article/pii/S1877050918313139,"While AI applications are very popular in many domains, they should be harmonious with domain exerts and end users. Furthermore, in order to develop such harmonious AI applications, we need agile AI platforms for not only developers but domain experts. Currently, we have developed Practical Intelligent applications (PRINTEPS), which is a user-centric platform to develop integrated intelligent applications. This paper evaluates the service quality of a multi-robot cafe at a campus festival and reports on the cafe as a practical application of PRINTEPS. It is not clear if robot services are perceived as attractive and/or valuable, and how the concept of robot services could lead to customer satisfaction. Therefore, the evaluation of the quality of such services is necessary to identify the key factors that could contribute to improving customer satisfaction. The objective of this study is to contribute to the realization of practical and economically feasible robot services by obtaining effective knowledge for improving customer satisfaction. This will be achieved through the evaluation of the service quality of the multi-robot cafe.",service quality; multi-robot cafe; PRINTEPS; SERVQUAL,Implementing Multi-Robot Cafe by PRINTEPS with Service Quality Dimensions,-,NO,,,YES,,,,,NO,,
S2019,1,Forward,conferencePaper,2017,"Walch, Michael; Karagiannis, Dimitris",Serviceology for Services,10.1007/978-3-319-61240-9_16,,"In this paper, details are presented on how physical objects interact with conceptual models in Factory of the Future (FoF) scenarios. For this reason, a hierarchical three layer structure - for physical objects, models and concepts - is described as part of the Knowledge-based Robotics (KbR) approach. Focusing on the integration of physical objects and models, the need for service-driven enrichment emerges. Thereby, the extension of physical objects with cyber twins is realized for enabling service capabilities like monitoring and control. For their development, an architecture is introduced based on the integration of logical and physical components. This is validated in the OMiLAB environment using the OMiRob case. The conceptual approach proves the capability of applying service-driven enrichment to physical objects using metamodeling techniques.",(micro)service architecture; Embedded computation; Knowledge-based robotics; Service-driven enrichment,Service-Driven Enrichment for KbR in the OMiLAB Environment,-,NO,,,YES,,,,,NO,,
S2020,1,Forward,journalArticle,,"Zander, Stefan; Hua, Yingbing",,,,"This work presents a novel ontology-based approach for the complementation of technical speciﬁcations of cyber-physical system components using ontological classiﬁcation and reasoning. We build on the AutomationML standard and outline how data represented with it can be transformed into an RDF instance graph. We exemplarily show how complementary information about a component’s functionality, its operation environment and purpose can be inferred through a combination of automatic classiﬁcation with the linkage of diﬀerent domain classiﬁcation systems. The general applicability of the presented approach is demonstrated by a concrete use case from the ReApp project.",,Utilizing Ontological Classiﬁcation Systems and Reasoning for Cyber-Physical Systems,-,,,,NO,,,,,NO,,
S2021,1,Forward,journalArticle,2020,"Chen, Xinyu; Nophut, Christoph; Voigt, Tobias",Electronics,10.3390/electronics9122040,https://www.mdpi.com/2079-9292/9/12/2040,"Manufacturing Execution Systems (MES) are process-oriented information-technology (IT) solutions for collecting and managing information from manufacturing processes. Due to the individual programming effort and the complex integration with other manufacturing systems, though the food and beverage manufacturers can benefit from the MES, its implementation is not widespread in this industry. To simplify the implementation and engineering process, the concept of model-driven engineering (MDE) is considered as a solution. However, a feasible model-driven approach for MES engineering has not been established, not to mention for the food and beverage industry. This paper presents an approach for the automatic MES generation according to the MDE concept providing MES functions that are relevant to the food and beverage manufacturing processes primarily. It consists of necessary phases to cover the whole engineering process of the MES. Based on the application of the presented approach to the brewing process in a brewhouse, the feasibility and practicality of this approach were proven.",model-driven engineering; food and beverage industry; manufacturing execution systems,Manufacturing Execution Systems for the Food and Beverage Industry: A Model-Driven Approach,-,NO,,,YES,,,,,NO,,
S2022,1,Forward,conferencePaper,2017,"Nakamura, Kodai; Morita, Takeshi; Yamaguchi, Takahira",Proceedings of the International Conference on Web Intelligence,10.1145/3106426.3109413,https://doi.org/10.1145/3106426.3109413,"We are developing PRactical INTEligent aPplicationS (PRINTEPS), which is a user-centric platform to develop integrated intelligent applications only by combining four types of modules such as knowledge-based reasoning, speech dialog, image sensing and motion management. PRINTEPS supports end users to participate in AI applications design (user participation design) and to develop applications easily. This paper introduces the architecture and applications of PRINTEPS for robot teahouse robot where multiple people and robots cooperate.",ontology; PRINTEPS; stream reasoning,PRINTEPS for development integrated intelligent applications and application to robot teahouse,-,NO,,,YES,,,,,NO,,
S2023,1,Forward,conferencePaper,2016,"Zander, Stefan; Ahmed, Nadia; Hua, Yingbing","Proceedings of the 8th International Joint Conference on Knowledge Discovery, Knowledge Engineering and Knowledge Management",10.5220/0006086201920198,http://www.scitepress.org/DigitalLibrary/Link.aspx?doi=10.5220/0006086201920198,,,Empowering the Model-driven Engineering of Robotic Applications using Ontological Semantics and Reasoning:,-,NO,,,YES,,,,,NO,,
S2024,1,Forward,webpage,,,,,https://www.proquest.com/openview/2dfa8019c2f5172cf2c1343f9ced73ba/1?pq-origsite=gscholar&cbl=2026366,"Explore millions of resources from scholarly journals, books, newspapers, videos and more, on the ProQuest Platform.",,,NO,,,,NO,,,,,NO,,
S2025,1,Forward,journalArticle,2017,"Nakamura, Kodai; Morita, Takeshi; Yamaguchi, Takahira",Procedia Computer Science,10.1016/j.procs.2017.08.266,https://www.sciencedirect.com/science/article/pii/S1877050917316757,"We are developing PRactical INTEligent aPplicationS (PRINTEPS), which is a user-centric platform to develop integrated intelligent applications only by combining four types of modules such as knowledge-based reasoning, speech dialog, image sensing and motion management. PRINTEPS supports end users to participate in AI applications design (user participation design) and to develop applications easily. This paper introduces the architecture and applications of PRINTEPS for robot teahouse robot where multiple people and robots cooperate.",separated by semicolons; Ontology; PRINTEPS; Stream reasoning; Type your keywords here,A User-Centric Platform PRINTEPS to Develop Integrated Intelligent Applications and Application to Robot Teahouse,-,NO,,,YES,,,,,NO,,
S2026,1,Forward,conferencePaper,2022,"Ebert, Sebastian",2022 International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS),,,"Collaborative robotic cells combine human skills with the latest advancements in robotic accuracy and reliability. Cobotic cell parts are distributed and adapt their behavior to changing tasks and environments. The specific missions of cobotic cells, depend on their field of application, but are critical for human safety, which introduces complexity, increasing testing and development effort. Component-based software engineering is used to manage complexity, but ensuring safety and correctness requires verification and validation, which is complex and demanding to re-ensure, when composed behavior changes. This also applies to the widely used middleware Robot Operating System (ROS), where existing approaches only model high level communication or integrate models. Also, verification of cobotic cells must reflect their context-adaptivity, to check safety critical reactions to contexts-changes. To overcome these inhibitors, a model-driven development approach based on Petri nets is proposed, modeling central aspects of ROS-based cobotic cells. By using formal models, the testing effort at development time is reduced, because global behavior remains formally proven, and only local components have to be retested. Within this work, the plans for this model-driven software approach are reported.CCS CONCEPTS• Software and its engineering $\rightarrow$ Petri nets; Model-driven software engineering; Abstraction, modeling and modularity; • Human-centered computing $\rightarrow$ Collaborative interaction.",Computational modeling; Complexity theory; Collaboration; Adaptation models; Petri nets; Robotics; Safety; Robot Operating System; Behavioral sciences; Context Adaptation; Petri Nets,Safe Adaptation of Cobotic Cells based on Petri Nets,-,NO,,,YES,,,,,NO,,
S2027,1,Forward,journalArticle,,"Adrian, Weronika T; Boulanger, Danielle; Herzog, Otthein; Hinkelmann, Knut; Kayakutlu, Gulgun; Ligęza, Antoni; Lindskog, Helena; Lucose, Dickson; Matta, Nada; O’Leary, Daniel; Pondel, Maciej; Ribiere, Vincent; Ritter, Waltraut; Sattar, Abdul; Segond, Frederique; Stankosky, Michael; Tsui, Eric; Wintergerst, Caroline; Wojtusiak, Janusz",,,,,,Members of Program Committee:,-,,,,NO,,,,,NO,,
S2028,1,Forward,webpage,,,,,https://www.proquest.com/openview/ce88eb8197e99f0000f524b30ed3d40b/1?pq-origsite=gscholar&cbl=2026366&diss=y,"Explore millions of resources from scholarly journals, books, newspapers, videos and more, on the ProQuest Platform.",,,NO,,,,NO,,,,,NO,,
S2029,1,Forward,book,2018,"Lass, Sander",,,,,,,NO,,,,YES,,,,,NO,,
S2030,1,Forward,conferencePaper,2019,"Tanwani, Ajay Kumar; Mor, Nitesh; Kubiatowicz, John; Gonzalez, Joseph E.; Goldberg, Ken",2019 International Conference on Robotics and Automation (ICRA),10.1109/ICRA.2019.8793690,,"The growing demand of industrial, automotive and service robots presents a challenge to the centralized Cloud Robotics model in terms of privacy, security, latency, bandwidth, and reliability. In this paper, we present a `Fog Robotics' approach to deep robot learning that distributes compute, storage and networking resources between the Cloud and the Edge in a federated manner. Deep models are trained on non-private (public) synthetic images in the Cloud; the models are adapted to the private real images of the environment at the Edge within a trusted network and subsequently, deployed as a service for low-latency and secure inference/prediction for other robots in the network. We apply this approach to surface decluttering, where a mobile robot picks and sorts objects from a cluttered floor by learning a deep object recognition and a grasp planning model. Experiments suggest that Fog Robotics can improve performance by sim-to-real domain adaptation in comparison to exclusively using Cloud or Edge resources, while reducing the inference cycle time by 4× to successfully declutter 86% of objects over 213 attempts.",Cloud computing; Data models; Computational modeling; Adaptation models; Security; Robot sensing systems,A Fog Robotics Approach to Deep Robot Learning: Application to Object Recognition and Grasp Planning in Surface Decluttering,-,NO,,,YES,,,,,NO,,
S2031,1,Forward,bookSection,2020,"Dieber, Bernhard; White, Ruffin; Taurer, Sebastian; Breiling, Benjamin; Caiazza, Gianluca; Christensen, Henrik; Cortesi, Agostino",Robot Operating System (ROS): The Complete Reference (Volume 4),,https://doi.org/10.1007/978-3-030-20190-6_8,"ROS is the most popular framework in robotics research and it also grows in terms of industrial use. This makes ROS a worthwhile target for attackers especially since security is not addressed by the core framework itself. Its open architecture and flexibility are also the reasons why ROS suffers from security issues. For example, in ROS it is possible to isolate single nodes from the rest of the application without the ROS master, the other nodes or even the node itself (i.e., its business code) noticing it. This is true for publishers, subscribers and services alike. This makes attacks very difficult to spot at runtime. Penetration testing is the most common security testing practice. The goal is to test an application for possible security flaws. To better facilitate penetration testing for ROS, we introduce ROSPenTo and Roschaos, tools that make use of the vulnerabilities of ROS and demonstrate how ROS applications can be sabotaged by an attacker. In this tutorial you will learn about the ROS XML-RPC API, which is our main attack point. You will see, how API attacks on ROS work in depth. You will get to know Roschaos and ROSPentTo, two tools, which can be used to manipulate running ROS applications.",Security; ROS; Penetration testing,Penetration Testing ROS,-,,,,YES,,NO,,,NO,,
S2032,1,Forward,journalArticle,2020,"Galambos, Peter","IEEE Systems, Man, and Cybernetics Magazine",10.1109/MSMC.2018.2881233,,"As we are witnessing the dawn of the artificial intelligence revolution, it is a good time to discuss the system-architecture challenges of the new age of robotics. Most of the disputes are related to the wide variety of cloud-computing arrangements along the questions of why, with what, and how to exploit existing information technologies to cope effectively with the increasing demands. Traditional industrial robot makers are very conservative, relying exclusively on onboard execution. However, the rising user demand for advanced robot skills, such as dexterous manipulation and free navigation in an unstructured environment, has inspired newcomers to break with tradition and move robot software architecture to the next level. Inspired by the talks of Prof. Imre Rudas on cloud robotics, this article highlights some substantial factors of system design and discusses a real-world industrial example from my R&D practice.",Cloud computing; Robots; Artificial intelligence; System design,"Cloud, Fog, and Mist Computing: Advanced Robot Applications",-,NO,,,YES,,,,,NO,,
S2033,1,Forward,journalArticle,2019,"Pogliani, Marcello; Quarta, Davide; Polino, Mario; Vittone, Martino; Maggi, Federico; Zanero, Stefano",Journal of Computer Virology and Hacking Techniques,10.1007/s11416-019-00329-8,https://doi.org/10.1007/s11416-019-00329-8,"In modern factories, “controlled” manufacturing systems, such as industrial robots, CNC machines, or 3D printers, are often connected in a control network, together with a plethora of heterogeneous control devices. Despite the obvious advantages in terms of production and ease of maintenance, this trend raises non-trivial cybersecurity concerns. Often, the devices employed are not designed for an interconnected world, but cannot be promptly replaced: In fact, they have essentially become legacy systems, embodying design patterns where components and networks are accounted as trusted elements. In this paper, we take a holistic view of the security issues (and challenges) that arise in designing and securely deploying controlled manufacturing systems, using industrial robots as a case study—indeed, robots are the most representative instance of a complex automatically controlled industrial device. Following up to our previous experimental analysis, we take a broad look at the deployment of industrial robots in a typical factory network and at the security challenges that arise from the interaction between operators and machines; then, we propose actionable points to secure industrial cyber-physical systems, and we discuss the limitations of the current standards in industrial robotics to account for active attackers.",Industry 4.0; Cybersecurity; Cyberphysical systems; Industrial internet of things; Industrial robots,Security of controlled manufacturing systems in the connected factory: the case of industrial robots,-,NO,,,YES,,,,,NO,,
S2034,1,Forward,conferencePaper,2020,"Dahlmanns, Markus; Lohmöller, Johannes; Fink, Ina Berenice; Pennekamp, Jan; Wehrle, Klaus; Henze, Martin",Proceedings of the ACM Internet Measurement Conference,10.1145/3419394.3423666,https://doi.org/10.1145/3419394.3423666,"Due to increasing digitalization, formerly isolated industrial networks, e.g., for factory and process automation, move closer and closer to the Internet, mandating secure communication. However, securely setting up OPC UA, the prime candidate for secure industrial communication, is challenging due to a large variety of insecure options. To study whether Internet-facing OPC UA appliances are configured securely, we actively scan the IPv4 address space for publicly reachable OPC UA systems and assess the security of their configurations. We observe problematic security configurations such as missing access control (on 24% of hosts), disabled security functionality (24%), or use of deprecated cryptographic primitives (25%) on in total 92% of the reachable deployments. Furthermore, we discover several hundred devices in multiple autonomous systems sharing the same security certificate, opening the door for impersonation attacks. Overall, in this paper, we highlight commonly found security misconfigurations and underline the importance of appropriate configuration for security-featuring protocols.",network security; industrial communication; security configuration,Easing the Conscience with OPC UA: An Internet-Wide Study on Insecure Deployments,-,NO,,,YES,,,,,NO,,
S2035,1,Forward,conferencePaper,2019,"Cao, Phuong M.; Wu, Yuming; Banerjee, Subho S.; Azoff, Justin; Withers, Alex; Kalbarczyk, Zbigniew T.; Iyer, Ravishankar K.",,,https://www.usenix.org/conference/nsdi19/presentation/cao,,,{CAUDIT}: Continuous Auditing of {SSH} Servers To Mitigate {Brute-Force} Attacks,-,NO,,,YES,,,,,NO,,
S2036,1,Forward,journalArticle,2021,"Afrin, Mahbuba; Jin, Jiong; Rahman, Akhlaqur; Rahman, Ashfaqur; Wan, Jiafu; Hossain, Ekram",IEEE Communications Surveys & Tutorials,10.1109/COMST.2021.3061435,,"Robotic applications nowadays are widely adopted to enhance operational automation and performance of real-world Cyber-Physical Systems (CPSs) including Industry 4.0, agriculture, healthcare, and disaster management. These applications are composed of latency-sensitive, data-heavy, and compute-intensive tasks. The robots, however, are constrained in the computational power and storage capacity. The concept of multi-agent cloud robotics enables robot-to-robot cooperation and creates a complementary environment for the robots in executing large-scale applications with the capability to utilize the edge and cloud resources. However, in such a collaborative environment, the optimal resource allocation for robotic tasks is challenging to achieve. Heterogeneous energy consumption rates and application of execution costs associated with the robots and computing instances make it even more complex. In addition, the data transmission delay between local robots, edge nodes, and cloud data centres adversely affects the real-time interactions and impedes service performance guarantee. Taking all these issues into account, this paper comprehensively surveys the state-of-the-art on resource allocation and service provisioning in multi-agent cloud robotics. The paper presents the application domains of multi-agent cloud robotics through explicit comparison with the contemporary computing paradigms and identifies the specific research challenges. A complete taxonomy on resource allocation is presented for the first time, together with the discussion of resource pooling, computation offloading, and task scheduling for efficient service provisioning. Furthermore, we highlight the research gaps from the learned lessons, and present future directions deemed beneficial to further advance this emerging field.",Cloud computing; resource allocation; Resource management; Task analysis; cloud computing; service provisioning; Robot sensing systems; Real-time systems; edge computing; Robot kinematics; Robots; computation and communication trade-off; Multi-robot system; offloading; task scheduling,Resource Allocation and Service Provisioning in Multi-Agent Cloud Robotics: A Comprehensive Survey,-,NO,,,YES,,,,,NO,,
S2037,1,Forward,conferencePaper,2019,"Dieber, Bernhard; Breiling, Benjamin",2019 Third IEEE International Conference on Robotic Computing (IRC),10.1109/IRC.2019.00019,,"Mobile manipulation will play an essential role in future production's intralogistics. In addition, it can be assumed that location-independence of manipulation will greatly contribute to flexible production and higher efficiency in robot use. Modular mobile manipulators can be combined from standalone robotic components like mobile platforms and serial arms. This combination enables more flexibility since the robot can be adapted to specific use-cases by exchanging hardware. However, since those robots tend to be very complex systems, their integration into networked Industry 4.0 environments will also cause security risks. In this paper, we present a security architecture and secure interaction workflows for modular mobile manipulators that on the one hand secure the system against unauthorized manipulation and on the other hand enable the integration of mobile manipulators into larger IT infrastructures. Using the example of our inhouse-developed CHIMERA mobile manipulator, we show which architectural means can be considered in order to make a modular mobile manipulator secure. We analyze the expected attack vectors on mobile manipulators and describe their mitigation within our architecture.",Computer architecture; Hardware; Software; Security; security; robotics; Service robots; Manipulators; modularity; ros; mobile manipulation,Security Considerations in Modular Mobile Manipulation,-,NO,,,YES,,,,,NO,,
S2038,1,Forward,conferencePaper,2019,"Wang, Yu-Ping; Tan, Wende; Hu, Xu-Qiang; Manocha, Dinesh; Hu, Shi-Min",2019 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS40897.2019.8968462,,"Inter-process communication (IPC) is one of the core functions of modern robotics middleware. We propose an efficient IPC technique called TZC (Towards Zero-Copy). As a core component of TZC, we design a novel algorithm called partial serialization. Our formulation can generate messages that can be divided into two parts. During message transmission, one part is transmitted through a socket and the other part uses shared memory. The part within shared memory is never copied or serialized during its lifetime. We have integrated TZC with ROS and ROS2 and find that TZC can be easily combined with current open-source platforms. By using TZC, the overhead of IPC remains constant when the message size grows. In particular, when the message size is 4MB (less than the size of a full HD image), TZC can reduce the overhead of ROS IPC from tens of milliseconds to hundreds of microseconds and can reduce the overhead of ROS2 IPC from hundreds of milliseconds to less than 1 millisecond. We also demonstrate the benefits of TZC by integrating it with TurtleBot2 to be used in autonomous driving scenarios. We show that by using TZC, the braking distance can be 16% shorter than with ROS.",,TZC: Efficient Inter-Process Communication for Robotics Middleware with Partial Serialization,-,NO,,,YES,,,,,NO,,
S2039,1,Forward,conferencePaper,2019,"Haidegger, Tamás; Galambos, Péter; Rudas, Imre J.",2019 IEEE 23rd International Conference on Intelligent Engineering Systems (INES),10.1109/INES46365.2019.9109492,,"Robotics is one of the major megatrends unfolding this decade. Robots are capable of doing more and more as becoming detached from the assembly lines, and service robots are starting to have an impact on the whole society. This paper deals with establishing the overarching theme and context of the quite few exciting novel aspects of automated technologies: Industry 4.0 in the factories, robots on the roads, as self driving cars, and robots in the operating theaters, performing not only teleoperated surgeries but complex, delicate procedures. A robotics taxonomy should be developed clearly identifying the types and functions of such robots, assessing their key components and capabilities. Both the common sense and the standardized definitions of these robots should be agreed by the community of developers, manufacturers and users. Ensuring the safety of such hybrid control systems requires a good understanding of the technology from the user side and novel and efficient human-machine interfaces. This will lead to increased transparency and trust towards these systems, which shall have a positive effect on the robot development procedures, increasing safety.",autonomous systems; cloud robotics; internet of robotic things; internet of skills; Robotics 4.0,Robotics 4.0 – Are we there yet?,-,NO,,,YES,,,,,NO,,
S2040,1,Forward,conferencePaper,2019,"Chung, Keywhan; Li, Xiao; Tang, Peicheng; Zhu, Zeran; Kalbarczyk, Zbigniew T.; Iyer, Ravishankar K.; Kesavadas, Thenkurussi",,,https://www.usenix.org/conference/raid2019/presentation/chung,,,Smart Malware that Uses Leaked Control Data of Robotic Applications: The Case of {Raven-II} Surgical Robots,-,NO,,,YES,,,,,NO,,
S2041,1,Forward,journalArticle,2019,"Kinzler, Matt; Miller, Justin; Wu, Zhou; Williams, Andrew; Perouli, Debbie","Workshop on Technology and Consumer Protection (ConPro ‘19), held in conjunction with the 40th IEEE Symposium on Security and Privacy",,https://par.nsf.gov/biblio/10099177-cybersecurity-vulnerabilities-two-artificially-intelligent-humanoids-market,"As artificially intelligent humanoids become increasingly prevalent in the home, it is imperative that we develop secure designs to guard against cyberattacks. The next evolution of AI-powered home devices, such as Alexa, is to create physical effectors to enable these devices to alter their environments. Current humanoids on the market, such as the EZ-Robot JD and NAO, are examples of artificially intelligent robots that may one day become common in home environments. If these humanoids are not designed to be safe against cybersecurity vulnerabilities, they may be used to cause harm to living spaces and possibly even the humans living in these spaces. This paper examines the cybersecurity of two humanoid robots and provides recommendations for future safe designs and protections in artificial intelligent social robots.",,Cybersecurity Vulnerabilities in Two Artificially Intelligent Humanoids on the Market,-,NO,,,YES,,,,,NO,,
S2042,1,Forward,journalArticle,2021,"Salvini, Pericle; Paez-Granados, Diego; Billard, Aude",ACM Transactions on Human-Robot Interaction,10.1145/3442678,https://doi.org/10.1145/3442678,"Since 2014, a specific standard has been dedicated for the safety certification of personal care robots, which operate in close proximity to humans. These robots serve as information providers, object transporters, personal mobility carriers, and security patrollers. In this article, we point out the shortcomings concerning EN ISO 13482:2014, which encompasses guidelines regarding the safety and design of personal care robots. In particular, we argue that the current standard is not suitable for guaranteeing people's safety when these robots operate in public spaces. Specifically, the standard lacks requirements to protect pedestrians and bystanders. The guideline implicitly assumes that private spaces, such as households and offices, present the same hazards as in public spaces. We highlight the existence of at least three properties pertaining to robots’ use in public spaces. These properties include (1) crowds, (2) social norms and proxemics rules, and (3) people's misbehaviours. We discuss how these properties impact robots’ safety. This article aims to raise stakeholders’ awareness on individuals’ safety when robots are deployed in public spaces. This could be achieved by integrating the gaps present in EN ISO 13482:2014 or by creating a new dedicated standard.",Human-robot interaction; safety; mobile robot; service robots; public spaces; ISO standard; personal care robot,On the Safety of Mobile Robots Serving in Public Spaces: Identifying gaps in EN ISO 13482:2014 and calling for a new standard,-,NO,,,YES,,,,,NO,,
S2043,1,Forward,journalArticle,2022,"Wang, Yuanzhe; Liu, Qipeng; Mihankhah, Ehsan; Lv, Chen; Wang, Danwei",IEEE Transactions on Intelligent Transportation Systems,10.1109/TITS.2021.3077015,,"This paper investigates the cyber-security problem for autonomous vehicles under sensor attacks. In particular, a model-based framework is proposed which can detect sensor attacks and identify their sources in order to achieve the secure localization of self-driving vehicles. To ensure robustness of the vehicle against cyber-attacks, sensor redundancy is introduced, that is to deploy multiple sensors, each of which provides real-time pose observations of the vehicle. A bank of attack detectors is developed to capture anomalies in each sensor measurement, which is a combination of an extended Kalman filter (EKF) and a cumulative sum (CUSUM) discriminator. EKFs are employed to estimate the vehicle position and orientation recursively, while each CUSUM discriminator is designed to analyze the residual generated by its combined EKF to detect the possible deviation of the sensor measurement from the expected pose derived according to the mathematical model of the vehicle. To monitor the inconsistency amongst multiple sensor measurements, an auxiliary detector is introduced which fuses observations from multiple sensors. Based on the results of all the detectors, a rule-based isolation scheme is developed to identify the source anomalous sensor. The effectiveness of our proposed framework has been demonstrated on real vehicle data.",Data models; Mathematical model; Detectors; anomaly detection; Robot sensing systems; Global Positioning System; Autonomous vehicles; Laser radar; Cyber-security; autonomous vehicle; cyber-attack; sensor attack,"Detection and Isolation of Sensor Attacks for Autonomous Vehicles: Framework, Algorithms, and Validation",-,NO,,,YES,,,,,NO,,
S2044,1,Forward,journalArticle,2021,"Lacava, Giovanni; Marotta, Angelica; Martinelli, Fabio; Saracino, Andrea; Marra, Antonio La; Gil-Uriarte, Endika; Mayoral-Vilches, Víctor","Journal of Wireless Mobile Networks, Ubiquitous Computing, and Dependable Applications",10.22667/JOWUA.2021.09.30.001,https://doi.org/10.22667/JOWUA.2021.09.30.001,"Cybersecurity in Robotics is a rapidly developing area that draws attention from practitioners and researchers. An increase in cyber-attacks, combined with the development of automated processes, introduces new threats that must be addressed to secure information assets and promote trust in robotics systems. Thus, as robotics can be applied to many facets of an organization and adopted in different sectors, it is critical to evaluate cybersecurity risks in robotics platforms and understand how robots will affect tomorrow’s cybersecurity strategy. In this paper, we identify existing problems in managing cyber-security in robotics and provide an overview of the critical cyber-security countermeasures in robotics. We also analyze the scientiﬁc approaches to managing cyber-attacks in robotics. In particular, we focus on the types of robotic systems that are more prone to cyber-attacks, the main cyber-attacks performed on robots, and their developments. Finally, we offer examples of common attacks and propose directions for further advances in this area. Various approaches and recommendations are discussed in this area to increase and improve the security level of robotic systems. The approach adopted in this work was helpful to understand how to make a robotic system more resilient and reliable from a security perspective.",,Cybsersecurity Issues in Robotics,-,NO,,,YES,,,,,NO,,
S2045,1,Forward,conferencePaper,2021,"Deng, Gelei; Zhou, Yuan; Xu, Yuan; Zhang, Tianwei; Liu, Yang","24th International Symposium on Research in Attacks, Intrusions and Defenses",10.1145/3471621.3471867,https://doi.org/10.1145/3471621.3471867,"Multi-Robot Systems (MRSs) show significant advantages to deal with complex tasks efficiently. However, the system complexity inevitably enlarges the attack surface and adds difficulty in guaranteeing the security and safety of MRSs. In this paper, we present an in-depth investigation about the Byzantine threats in MRSs, where some robot is untrusted. We design a practical methodology to identify potential Byzantine risks in a given MRS workload built from the Robot Operating System (ROS). It consists of three novel steps (requirement specification using signal temporal logic, attack surface determination via data-flow analysis, attack identification using requirement-driven fuzzing) to thoroughly assess MRS workloads. We use this fuzzing method to inspect five typical MRS workloads from past works and the ROS platform, and identify three novel kinds of attacks that can be launched with five attack strategies. We conduct comprehensive experiments in the Gazebo simulator and a real-world MRS with three TurtlBot3 robots to validate these attacks, which can remarkably decrease the system’s performance, or even cause task failures.",multi-robot system; Byzantine threat; fuzzing,An Investigation of Byzantine Threats in Multi-Robot Systems,-,NO,,,YES,,,,,NO,,
S2046,1,Forward,conferencePaper,2021,"Xu, Yuan; Zhang, Tianwei; Bao, Yungang","24th International Symposium on Research in Attacks, Intrusions and Defenses",10.1145/3471621.3471854,https://doi.org/10.1145/3471621.3471854,"Robot apps are becoming more automated, complex and diverse. An app usually consists of many functions, interacting with each other and the environment. This allows robots to conduct various tasks. However, it also opens a new door for cyber attacks: adversaries can leverage these interactions to threaten the safety of robot operations. Unfortunately, this issue is rarely explored in past works. We present the first systematic investigation about the function interactions in common robot apps. First, we disclose the potential risks and damages caused by malicious interactions. By investigating the relationships among different functions, we identify and categorize three types of interaction risks. Second, we propose RTron, a novel system to detect and mitigate these risks and protect the operations of robot apps. We introduce security policies for each type of risks, and design coordination nodes to enforce the policies and regulate the interactions. We conduct extensive experiments on 110 robot apps from the ROS platform and two complex apps (Baidu Apollo and Autoware) widely adopted in industry. Evaluation results indicated RTron can correctly identify and mitigate all potential risks with negligible performance cost. To validate the practicality of the risks and solutions, we implement and evaluate RTron on a physical UGV (Turtlebot) with real-word apps and environments.",Function interaction; Risk analysis and mitigation; Robot apps,Analysis and Mitigation of Function Interaction Risks in Robot Apps,-,NO,,,YES,,,,,NO,,
S2047,1,Forward,conferencePaper,2020,"Wolfert, Pieter; Deschuyteneer, Jorre; Oetringer, Djamari; Robinson, Nicole; Belpaeme, Tony",Companion of the 2020 ACM/IEEE International Conference on Human-Robot Interaction,10.1145/3371382.3378341,https://doi.org/10.1145/3371382.3378341,"Earlier research has shown that robots can provoke social responses in people, and that robots often elicit compliance. In this paper we discuss three proof of concept studies in which we explore the possibility of robots being hacked and taken over by others with the explicit purpose of using the robot's social capabilities. Three scenarios are explored: gaining access to secured areas, extracting sensitive and personal information, and convincing people to take unsafe action. We find that people are willing to do these tasks, and that social robots tend to be trusted, even in situations that would normally cause suspicion.",human-robot interaction; social robots; hacking,Security Risks of Social Robots Used to Persuade and Manipulate: A Proof of Concept Study,-,NO,,,YES,,,,,NO,,
S2048,1,Forward,conferencePaper,2021,"Goerke, Niklas; Timmermann, David; Baumgart, Ingmar","2021 7th International Conference on Automation, Robotics and Applications (ICARA)",10.1109/ICARA51699.2021.9376468,,"The Robot Operation System (ROS) is widely used in academia as well as the industry to build custom robot applications. Successful cyberattacks on robots can result in a loss of control for the legitimate operator and thus have a severe impact on safety if the robot is moving uncontrollably. A high level of security thus needs to be mandatory. Neither ROS 1 nor 2 in their default configuration provide protection against network based attackers. Multiple protection mechanisms have been proposed that can be used to overcome this. Unfortunately, it is unclear how effective and usable each of them are. We provide a structured analysis of the requirements these protection mechanisms need to fulfill by identifying realistic, network based attacker models and using those to derive relevant security requirements and other evaluation criteria. Based on these criteria, we analyze the protection mechanisms available and compare them to each other. We find that none of the existing protection mechanisms fulfill all of the security requirements. For both ROS 1 and 2, we discuss which protection mechanism are most relevant and give hints on how to decide on one. We hope that the requirements we identify simplify the development or enhancement of protection mechanisms that cover all aspects of ROS and that our comparison helps robot operators to choose an adequate protection mechanism for their use case.",Analytical models; Automation; Security; Industries; DDS; security; Computer crime; Service robots; Safety; ROS; ROS 2; SROS; SROS 2,Who Controls Your Robot? An Evaluation of ROS Security Mechanisms,-,,,,YES,,NO,,,NO,,
S2049,1,Forward,conferencePaper,2020,"Ivanov, Donat",Artificial Intelligence and Bioinspired Computational Methods,10.1007/978-3-030-51971-1_45,,The paper is aimed at the problem of organizing distributed computing in groups of robots when solving the problem of monitoring natural phenomena using elements of the concept of fog computing. The development of fog computing into fog robotics is shown. A method for organizing foggy robotics is proposed. Particular attention is paid to reducing the load on communications and the redistribution of subtasks between robots in the event of failure of one or more of them.,Distributed computing; Fog robotics; Multi-agent technologies,Fog Robotics Distributed Computing in a Monitoring Task,-,NO,,,YES,,,,,NO,,
S2050,1,Forward,book,2019,"Haspl, Thomas; Breiling, Benjamin; Dieber, Bernhard; Pichler, Marc; Breitenhuber, Guido",,,,"With ongoing research in robotics, some specific architectural approaches of robotic systems earn more and more interest by all kinds of industries. Mobile manipulators – robots consisting of a mobile base and a serial manipulator – provide the ability to make robotic manipulation locationindependent, which will be an essential feature in future production. Such robot platforms offer a high level of flexibility and efficiency of robot applications. Especially under the aspect of modularity, mobile manipulators would provide even more flexibility by offering the possibility to exchange or extend the robot hardware for specific applications. To achieve this, modularity also has to be considered in software. In this paper, we present a software architecture for modular mobile manipulation applications. It provides mechanism for reconfigurability, easy programming, and an easy approach for adding external hardware components. Being targeted at industrial use, the architecture also considers security and software deployment aspects. These considerations will, in combination with all the other aspects, be presented by means of two modular mobile manipulation platforms and a set of representative scenarios.",,,NO,,,,YES,,,,,NO,,
S2051,1,Forward,report,2019,"Chen, Zhaolin",,,https://apps.dtic.mil/sti/citations/AD1086975,"This thesis studies the network performance of the Robot Operating System ROS 2 when used in a network of nodes similar to how a group of unmanned assets would operate. Specifically, this thesis evaluates the impact of combining varying Quality of Service QoS and security settings in the ROS 2. It also explores the effect that scaling to multiple nodes has on network performance. This is the first work to comprehensively study ROS 2 network performance using QoS and security classification as a function of scale and message size. Network performance metrics include latency and message drop rate between nodes. Our research uniquely integrates ROS 2 with NS-3, developing a simulation architecture that is effective for rapidly studying ROS 2 network performance. Our simulation results demonstrated the trade-offs in choosing different QoS policies as well as the trade-offs in performance when security settings were enabled. We found that enabling security resulted in a higher message drop rate across all QoS profiles. We also found that scaling the network to more nodes resulted in various consequences with the use of different QoS settings. Scaling up to more nodes in a network also resulted in an equivalent increase in the average latency of messages. This work contributes to evaluating and configuring ROS 2 parameters for different unmanned system use cases while providing a simulation framework on which tests can be run.",,,NO,,,,YES,,,,,NO,,
S2052,1,Forward,conferencePaper,2022,"Dahlmanns, Markus; Lohmöller, Johannes; Pennekamp, Jan; Bodenhausen, Jörn; Wehrle, Klaus; Henze, Martin",Proceedings of the 2022 ACM on Asia Conference on Computer and Communications Security,10.1145/3488932.3497762,https://doi.org/10.1145/3488932.3497762,"The ongoing trend to move industrial appliances from previously isolated networks to the Internet requires fundamental changes in security to uphold secure and safe operation. Consequently, to ensure end-to-end secure communication and authentication, (i) traditional industrial protocols, e.g., Modbus, are retrofitted with TLS support, and (ii) modern protocols, e.g., MQTT, are directly designed to use TLS. To understand whether these changes indeed lead to secure Industrial Internet of Things deployments, i.e., using TLS-based protocols, which are configured according to security best practices, we perform an Internet-wide security assessment of ten industrial protocols covering the complete IPv4 address space. Our results show that both, retrofitted existing protocols and newly developed secure alternatives, are barely noticeable in the wild. While we find that new protocols have a higher TLS adoption rate than traditional protocols (7.2% vs. 0.4%), the overall adoption of TLS is comparably low (6.5% of hosts). Thus, most industrial deployments (934,736 hosts) are insecurely connected to the Internet. Furthermore, we identify that 42% of hosts with TLS support (26,665 hosts) show security deficits, e.g., missing access control. Finally, we show that support in configuring systems securely, e.g., via configuration templates, is promising to strengthen security.",network security; industrial communication; security configuration,Missed Opportunities: Measuring the Untapped TLS Support in the Industrial Internet of Things,-,NO,,,YES,,,,,NO,,
S2053,1,Forward,conferencePaper,2020,"Andrews, Ron; Hahn, Dalton A.; Bardas, Alexandru G.",ICC 2020 - 2020 IEEE International Conference on Communications (ICC),10.1109/ICC40277.2020.9148912,,"Securing and hardening network protocols and services is a resource-consuming and continuous effort. Thus, it is important to question how prolific known, mitigable features of those protocols are. The Secure Shell (SSH) protocol is a good example due to its known vulnerability in using password based authentication. We take a closer look at these configurations to identify how prevalent the use of password authentication is at an internet scale. We show that current scanning tools and services provide a starting point in evaluating prevalence, but need to be validated for specific implementations. We also demonstrate that it is possible to augment some of these tools and services to determine the prevalence of password authentication in SSH specifically. As part of our evaluation, we propose a novel method for probing an SSH service to establish if password authentication is allowed, without being intrusive or causing harm to the host. Finally, we show that our analysis has resulted in determining that more than 65% of the over 20 million SSH servers on the public internet allow password authentication.",Servers; Protocols; Sockets; Measurement; Authentication; Probes; Tools; Analysis; Assessment; Man-in-the-Middle; Password; Password Authentication; Prevalence; Secure Shell; SSH; Statistically Relevant,Measuring the Prevalence of the Password Authentication Vulnerability in SSH,-,NO,,,YES,,,,,NO,,
S2054,1,Forward,conferencePaper,2020,"Gong, Yanan; Chow, Kam-Pui; Mai, Yonghao; Zhang, Jun; Chan, Chun-Fai",Critical Infrastructure Protection XIV,10.1007/978-3-030-62840-6_11,,"Industrial robots are playing a key role in the Fourth Industrial Revolution (Industry 4.0). This latest generation of robots incorporates smart technologies and networking to support machine-to-machine and machine-to-human communications, and Internet of Things integration for advanced automation. The enhanced connectivity increases the attack surface of industrial robots, providing hackers with more attack options. Cyber attacks on industrial robots not only bring about economic losses to manufacturers, such as damage to production lines, but they can also cause injuries to workers, even deaths.",Industrial robots; Digital forensic investigation; Hacking; UR3 robot,Forensic Investigation of A Hacked Industrial Robot,-,NO,,,YES,,,,,NO,,
S2055,1,Forward,journalArticle,2021,"Srinivas Aditya, U. S. P.; Singh, Roshan; Singh, Pranav Kumar; Kalla, Anshuman",Journal of Network and Computer Applications,10.1016/j.jnca.2021.103245,https://www.sciencedirect.com/science/article/pii/S1084804521002435,"Robotics is the multi-disciplinary domain that is booming in today’s world, and expanding its roots deep into various fields of research, manufacturing industries, healthcare, and even in our day-to-day lives. Nevertheless, as with any other evolving technology, robotics face numerous challenges. In this context, lately, blockchain technology has been identified as a promising technology to resolve many of these issues such as identification of malicious/rogue nodes, malfunctioning/faults in automated processes, non-compliance to the agreed norms and privacy rules, security attacks on robotic systems, and non-transparency in performance monitoring and audits. In particular, blockchain with its features like decentrality, immutability, provenance, low operational cost, tight access control, and trustworthy operations, can offer significant improvements to new applications and use cases driven by robotics. Thus, the paper begins with exploring the key requirements and technical challenges encountered by robots in general. Next, it provides detailed overview of blockchain technology in a tutorial style. Then, the role of blockchain for different uses cases of robotics are surveyed. Furthermore, various technical challenges that need to be mitigated to harness full potential of blockchain for robotics are highlighted. Finally, the future research directions are presented that can pave the way ahead for advancements and profitable integration of blockchain in the realm of robotics.",Robotics; Blockchain; Smart contracts,"A Survey on Blockchain in Robotics: Issues, Opportunities, Challenges and Future Directions",-,NO,,,YES,,,,,NO,,
S2056,1,Forward,book,2020,"Bertoli, Gustavo; Alves Pereira Junior, Lourenco; Marcondes, C.; Saotome, Osamu",,,,"This paper presents a signature-based approach to secure networks by blocking TCP flag-based (Null, FIN, XMAS) probing attacks performed with the well-known Nmap security tool. Through packet filtering, this approach considers the deployment on Linux operating systems by low-level filtering through Linux Kernel Module (LKM) and Netfilter to directly operate at network stack. It also presents an alternative approach for packet filtering using the extended-Berkeley Packet Filter (eBPF) / eXpress Data Path (XDP) solution, which allows performing filtering at a lower level (network device driver), improving network filtering performance by 5% in comparison with the LKM/Netfilter solution. It also makes available an open-source baseline for packet filtering using both LKM/Netfilter and eBPF/XDP approaches.",,,NO,,,,YES,,,,,NO,,
S2057,1,Forward,journalArticle,2021,"Varma, Richa; Melville, Chris; Pinello, Claudio; Sahai, Tuhin",International Journal of Semantic Computing,10.1142/S1793351X21400092,https://www.worldscientific.com/doi/abs/10.1142/S1793351X21400092,"The secure command & control (C&C) of mobile agents arises in various settings including unmanned aerial vehicles, single pilot operations in commercial settings, and mobile robots to name a few. As more and more of these applications get integrated into aerospace and defense use cases, the security of the communication channel between the ground station and the mobile agent is of increasing importance. The development of quantum computing devices poses a unique threat to secure communications due to the vulnerability of asymmetric ciphers to Shor’s algorithm. Given the active development of new quantum resistant encryption techniques, we report the first integration of post-quantum secure encryption schemes with robotic operating system (ROS) and C&C of mobile agents, in general. We integrate these schemes in the application and network layers and study the performance of these methods by comparing them to present-day security schemes such as the widely used RSA algorithm.",multi-agent command and control; Post-quantum secure authentication; secure communication; Secure robot operating system (ROS),Post Quantum Secure Command and Control of Mobile Agents Inserting Quantum-Resistant Encryption Schemes in the Secure Robot Operating System,-,NO,,,YES,,,,,NO,,
S2058,1,Forward,journalArticle,2020,"Sorrentino, Alessandra; Cavallo, Filippo; Fiorini, Laura",Robotics,10.3390/robotics9010017,https://www.mdpi.com/2218-6581/9/1/17,"The cloud robotics paradigm aims at enhancing the abilities of robots by using cloud services, but it still poses several challenges in the research community. Most of the current literature focuses on how to enrich specific robotic capabilities, overlooking how to effectively establish communication between the two fields. Our work proposes a “plug-and-play” solution to bridge the communication gap between cloud and robotic applications. The proposed solution is designed based on the mature WebSocket technology and it can be extended to any ROS-based robotic platform. The main contributions of this work are the definition of a reliable autoconnection/autoconfiguration mechanism as well as to outline a scalable communication layer that allows the effective control of multiple robots from multiple users. The “plug-and-play” solution was evaluated in both simulated and real scenarios. In the first case, the presence of users and robots was simulated with Robot Operating System (ROS) nodes running on five machines. In the real scenario, three non-expert users teleoperated, simultaneously, three remote robots by using the proposed communication layer with different networking protocols. Results confirmed the reliability at different levels: at startup (success_rate = 100%); during high-rate communications (message_lost = 0%); in performing open-loop spiral trajectories with enhancement, with respect to similar works; and in the quality of simultaneous teleoperations.",cloud robotics; remote control; system architecture; tele-operated robots,A Plug and Play Transparent Communication Layer for Cloud Robotics Architectures,-,NO,,,YES,,,,,NO,,
S2059,1,Forward,thesis,2018,"Huang, Justin",,,https://digital.lib.washington.edu:443/researchworks/handle/1773/43350,"Mobile manipulator robots have the potential to help people in a variety of unstructured scenarios, such as in households or in the service industry. However, with so many possible scenarios, roboticists cannot pre-program every task the robot needs to do. Instead, we need tools that make robot programming simpler, faster, and accessible to a wider audience of programmers. To this end, this dissertation presents research on two main approaches to robot programming for non-expert users: direct programming and programming by imitation. These approaches, and the technologies that support them, are situated in a conceptual framework comprising three key components: 1) perception, 2) motion specification, and 3) task scripting. In the realm of perception, we present a user-friendly system for specifying and locating task-relevant landmarks and a novel, state-of-the-art shelf detection algorithm. In the realm of motion specification, we enhanced existing programming by demonstration systems and created a new system for programming robots by visual imitation of a human demonstrator. Lastly, we developed a task scripting system that was deployed on a commercial robot. Throughout our work, we used system-level experiments, user studies, and case studies to show that non-roboticists could quickly learn to use our systems and program useful robot tasks. We conclude by describing possible extensions to our framework and envisioning directions for future work.",,,NO,,,,YES,,,,,NO,,
S2060,1,Forward,journalArticle,,"Schrama, Verena; Gañán, Carlo H; Aschenbrenner, Doris; de Reuver, Mark; Borgolte, Kevin; Fiebig, Tobias; Delft, TU; Schrama, V C M",,,,"The Internet-of-Things is no longer confined to endusers and private homes. Industrial IoT (IIoT) is supposed to improve industrial processes and make them more efficient. However, IIoT technologies may also pose (significant) security threats. Therefore, it is important to understand the balance between security awareness and willingness to adopt IIoT among manufacturing companies.",,Understanding the Knowledge Gap: How Security Awareness Influences the Adoption of Industrial IoT,-,,,,NO,,,,,NO,,
S2061,1,Forward,journalArticle,,"Chung, Keywhan; Li, Xiao; Tang, Peicheng; Zhu, Zeran; Kalbarczyk, Zbigniew T; Iyer, Ravishankar K; Kesavadas, Thenkurussi",,,,"In this paper, we demonstrate a new type of threat that leverages machine learning techniques to maximize its impact. We use the Raven-II surgical robot and its haptic feedback rendering algorithm as an application. We exploit ROS vulnerabilities and implement smart self-learning malware that can track the movements of the robot’s arms and trigger the attack payload when the robot is in a critical stage of a (hypothetical) surgical procedure. By keeping the learning procedure internal to the malicious node that runs outside the physical components of the robotic application, an adversary can hide most of the malicious activities from security monitors that might be deployed in the system. Also, if an attack payload mimics an accidental failure, it is likely that the system administrator will fail to identify the malicious intention and will treat the attack as an accidental failure. After demonstrating the security threats, we devise methods (i.e., a safety engine) to protect the robotic system against the identified risk.",,Smart Malware that Uses Leaked Control Data of Robotic Applications: The Case of Raven-II Surgical Robots,-,,,,NO,,,,,NO,,
S2062,1,Forward,journalArticle,2019,"Ahn, Hyunsik",Applied Sciences,10.3390/app9214555,https://www.mdpi.com/2076-3417/9/21/4555,"Cloud robotics is becoming an alternative to support advanced services of robots with low computing power as network technology advances. Recently, fog robotics has gained attention since the approach has merit relieving latency and security issues over the conventional cloud robotics. In this paper, a function as a service based fog robotic (FaaS-FR) for cognitive robots is proposed. The model distributes the cognitive functions according to the computational power, latency, and security with a public robot cloud and fog robot server. During the experiment with a Raspberry Pi as an edge, the proposed FaaS-FR model shows efficient and practical performance in the proper distribution of the computational work of the cognitive system.",cloud service; human–robot interaction; cognition as a service; cognitive robots; robot cloud; sentential cognitive system,A Function as a Service Based Fog Robotic System for Cognitive Robots,-,NO,,,YES,,,,,NO,,
S2063,1,Forward,journalArticle,2021,"Caiazza, Gianluca <1991>",,,http://dspace.unive.it/handle/10579/18475,"Cyber-physical systems (CPS) are increasingly deployed as part of the interconnected robotic cyber-infrastructures which are known as the Industrial Internet of Things (IIoT) network. Those pervasive devices are capable of automatizing various tasks and provide novel functionalities in a wide range of applications. However, this growth made the devices a worthwhile target for attackers and cybercriminals as well. The new frontiers of large-scale deployments of connected smart devices, in which we observed a tremendous growth in the amount of stored and processed sensitive data, have maturated into a widespread suspicion concerning the way in which these flow into the infrastructures. How do we make these devices safe? How can we verify their correct operation? Due to the intrinsic limitations of those devices, either from the power consumption point of view and the actual computational power at our disposal, engineering cybersecurity solutions are not trivial. This thesis focuses on discussing and developing security solutions for those networks by analyzing the application of the security pillars of Confidentiality, Integrity, Availability, Privacy, Authenticity and Trustworthiness, Non-Repudiation, Accountability, and Auditability. We provide an overview of the robotic scene and introduce the Robot Operating System (ROS), the framework we adopted as a testbed of our solutions. More in detail, this work discusses (i) novel solutions in the field of authentication and authorization in access control architectures and policy generation, management, and distribution, (ii) vulnerabilities and countermeasures in robotic frameworks, and (iii) novel approaches of network vulnerabilities excavation and accountability. In order to provide agnostic research tools and results, we develop static solutions at the application-level that could exploit prior offline computation power.    The main results of the thesis can be summarized as follows: (i) a state of the art analysis of application-level threats on a general robotic framework and an in-deep review of the attack surface on ROS (ii) the formalization of novel approaches to access control architectures distribution, and the dissertation of an advanced policy management tooling we developed in the field of authentication and authorization  (iii) the definition of a novel network vulnerability excavation tool and discussion on attribute-based encryption to tackle privacy issues (iv) creation of a blockchain-powered software-based black box for a robotic network to address Accountability and Non-Repudiation    The results discussed in this thesis give a solid base for the definition of the future security mechanisms for robotic devices that could be easily and securely integrated into big-scale deployments spreading security solutions by reducing overall the tradeoff between security and usability.",,Application-level security for robotic networks,-,NO,,,YES,,,,,NO,,
S2064,1,Forward,bookSection,2021,"Chung, Keywhan; Li, Xiao; Tang, Peicheng; Zhu, Zeran; Kalbarczyk, Zbigniew T.; Kesavadas, Thenkurussi; Iyer, Ravishankar K.",Game Theory and Machine Learning for Cyber Security,,https://onlinelibrary.wiley.com/doi/abs/10.1002/9781119723950.ch15,"Machine learning and artificial intelligence are being adopted to varying applications for automation and flexibility. Cyber security to be no different, researchers and engineers have been investigating the use of data-driven technologies to harden the security of cyberinfrastructure and the possibility of attackers exploiting vulnerabilities in such technology (e.g. adversarial machine learning). However, not much work has investigated how attackers might try to take advantage of machine learning and AI technology against us. This chapter discusses the potential advances in targeted attacks through the utilization of machine learning techniques. In this chapter, we introduce a new concept of AI-driven malware which advances already sophisticated cyber threats (i.e. advanced targeted attacks) that are on the rise. Furthermore, we demonstrate our prototype AI-driven malware, built on top of a set of statistical learning technologies, on two distinct cyber-physical systems (i.e. the Raven-II surgical robot and a building automation system). Our experimental results demonstrate that with the support of AI technology, malware can mimic human attackers in deriving attack payloads that are custom to the target system and in determining the most opportune time to trigger the attack payload so to maximize the chance of success in realizing the malicious intent. No public records report a real threat driven by machine learning models. However, such advanced malware might already exist and simply remain undetected. We hope this chapter motivates further research on advanced offensive technologies, not to favor the adversaries, but to know them and be prepared.",machine learning; cyber-physical systems; cyber security; AI-driven malware; malware,Machine Learning in the Hands of a Malicious Adversary: A Near Future If Not Reality 1,-,NO,,,YES,,,,,NO,,
S2065,1,Forward,journalArticle,,"Vasylevska, Khrystyna; Mortezapoor, Soroosh",,,,"Virtual reality (VR) security and privacy are not limited to existing software solutions and applications. In this article, we present to the community the challenges of VR systems with robot integration. Integrating robots under ROS poses a massive risk in terms of data security. At the same time, using a robot for simulations in VR requires, ﬁrst and foremost, the user’s safety - hence redundant data collection and sharing. We want to draw the community’s attention to these problems through our example in order to ensure that such systems are thoroughly developed in all directions and well prepared for further deployment to the consumer market.",,Safety and Security Challenges for Collaborative Robotics in VR,-,,,,NO,,,,,NO,,
S2066,1,Forward,journalArticle,2022,"Jannat, Umma; Kumar, Mohankumar; Islam, Syed",,,,"Humans have long looked for methods to make their lives easier, more comfortable, and more enjoyable. The ever-evolving nature of technology and internet use is fed by this desire for a better life and more free time. We've seen a significant growth in the number of robots being developed and sold as home appliances in recent years. These home appliances have the potential to become more than fair a special helper, however also a friend who understands its vender's preferences and routines. The idea of household appliance robots is becoming a reality as artificial intelligence progresses. Exploitation approaches that could be used to target these robots in particular must be thoroughly investigated. We discuss our findings from completing an early vulnerability analysis on a home appliance robot in this paper. Our findings suggest that while considering the usage of robots, both manufacturers and application developers should consider cybersecurity.",,A CASE STUDY ON THE CYBERSECURITY OF HOME APPLIANCE ROBOTS,-,NO,,,YES,,,,,NO,,
S2067,1,Forward,journalArticle,2021,"Srinivas Aditya, U.S.P.; Singh, Roshan; Singh, Pranav Kumar; Kalla, Anshuman",Journal of Network and Computer Applications,10.1016/j.jnca.2021.103245,https://doi.org/10.1016/j.jnca.2021.103245,"Robotics is the multi-disciplinary domain that is booming in today’s world, and expanding its roots deep into various fields of research, manufacturing industries, healthcare, and even in our day-to-day lives. Nevertheless, as with any other evolving technology, robotics face numerous challenges. In this context, lately, blockchain technology has been identified as a promising technology to resolve many of these issues such as identification of malicious/rogue nodes, malfunctioning/faults in automated processes, non-compliance to the agreed norms and privacy rules, security attacks on robotic systems, and non-transparency in performance monitoring and audits. In particular, blockchain with its features like decentrality, immutability, provenance, low operational cost, tight access control, and trustworthy operations, can offer significant improvements to new applications and use cases driven by robotics. Thus, the paper begins with exploring the key requirements and technical challenges encountered by robots in general. Next, it provides detailed overview of blockchain technology in a tutorial style. Then, the role of blockchain for different uses cases of robotics are surveyed. Furthermore, various technical challenges that need to be mitigated to harness full potential of blockchain for robotics are highlighted. Finally, the future research directions are presented that can pave the way ahead for advancements and profitable integration of blockchain in the realm of robotics.",Robotics; Blockchain; Smart contracts,"A Survey on Blockchain in Robotics: Issues, Opportunities, Challenges and Future Directions",-,NO,,,YES,,,,,NO,,
S2068,1,Forward,conferencePaper,2021,"Yu, Beibei; Hu, Mingnan; Sun, Zhe; Chen, Bo","2021 International Conference on Control, Automation and Information Sciences (ICCAIS)",10.1109/ICCAIS52680.2021.9624593,,"In the past few years, the functions of robots have been largely enriched and deployed in numerous fields. Advanced robots are equipped with apparatuses such as cameras, radars and servo motors, which enhances the ability to interact with humans and perceive the physical world. With the integration of cloud services, robots are getting highly networked. The utilization of communication networks makes the system more dynamic, but also destroys the closeness of the system and makes the system vulnerable to cyber-attacks. Especially, attackers controlling robots through malicious attacks may damage the physical environment and threaten human life. Robot Operating System (ROS) is one of the most popular frameworks for robot software development. However, ROS has many security problems. In this paper, we study the vulnerabilities of the ROS communication framework and design threat models for the TCPROS protocol and ROS Master/Slave API respectively. TCPROS has the shortcomings of plaintext transmission and is lack of identity verification. To solve this problem, we propose an effective method for tampering with control commands. Then, a tool is designed to destroy the ROS graph through the ROS Master/Slave API. We use ROS-based mobile robots equipped with RGB-D cameras and introduce Yolo, a real-time target detection system based on convolutional neural networks, to build a target detection and tracking platform. The proposed attack strategy is verified on the robotic platform. Experimental results show that the designed attack strategy can effectively tamper the data between nodes and destroy the system's stability.",Object detection; Authentication; Robotics; Cameras; Tools; ROS; Target tracking; Robot vision systems; Cybersecurity; Cyber-physical System; Object Detection and Tracking; Radar tracking; Yolov3,Data Tampering Attack Design for ROS-Based Object Detection and Tracking Robotic Platform,-,NO,,,YES,,,,,NO,,
S2069,1,Forward,journalArticle,2022,"Queralta, Jorge Peña; Qingqing, Li; Ferrer, Eduardo Castelló; Westerlund, Tomi",IEEE Internet of Things Journal,10.1109/JIOT.2022.3164545,http://arxiv.org/abs/2009.01341,"As autonomous robots are becoming more widespread, more attention is being paid to the security of robotic operation. Autonomous robots can be seen as cyber-physical systems: they can operate in virtual, physical, and human realms. Therefore, securing the operations of autonomous robots requires not only securing their data (e.g., sensor inputs and mission instructions) but securing their interactions with their environment. There is currently a deficiency of methods that would allow robots to securely ensure their sensors and actuators are operating correctly without external feedback. This paper introduces an encoding method and end-to-end validation framework for the missions of autonomous robots. In particular, we present a proof of concept of a map encoding method, which allows robots to navigate realistic environments and validate operational instructions with almost zero {\it a priori} knowledge. We demonstrate our framework using two different encoded maps in experiments with simulated and real robots. Our encoded maps have the same advantages as typical landmark-based navigation, but with the added benefit of cryptographic hashes that enable end-to-end information validation. Our method is applicable to any aspect of robotic operation in which there is a predefined set of actions or instructions given to the robot.",Computer Science - Cryptography and Security; Computer Science - Robotics,Secure Encoded Instruction Graphs for End-to-End Data Validation in Autonomous Robots,-,NO,,,YES,,NO,,,NO,,
S2070,1,Forward,journalArticle,,"Valojerdi, Zeinab Bakhshi",,,,,,PERSISTENT FAULT-TOLERANT STORAGE AT THE FOG LAYER,-,,,,NO,,,,,NO,,
S2071,1,Forward,thesis,2019,"Andrews, Ron",,,https://kuscholarworks.ku.edu/handle/1808/30492,"In George Orwell’s `nineteen eighty-four: A novel', there is fear regarding what “Big Brother”, knows due to the fact that even thoughts could be “heard”. Though we are not quite to this point, it should concern us all in what data we are transferring, both intentionally and unintentionally, and whether or not that data is being “leaked”. In this work, we consider the evolving landscape of IoT devices and the threat posed by the pervasive botnets that have been forming over the last several years. We look at two specific cases in this work. One being the practical application of a botnet system actively executing a Man in the Middle Attack against SSH, and the other leveraging the same paradigm as a case of eavesdropping on Internet Protocol (IP) cameras. For the latter case, we construct a web portal for interrogating IP cameras directly for information that they may be exposing.",,,NO,,,,YES,,,,,NO,,
S2072,1,Forward,journalArticle,2022,"Wang, Yuanzhe; Liu, Xinghua; Kang, Yu; Ge, Shuzhi Sam",IEEE Systems Journal,10.1109/JSYST.2020.3043008,,"This article addresses the resilient relative pose estimation problem for multiple mobile robot systems against abnormal sensor measurements. Motivated by the fact that in real implementations, sensors used for neighboring robot detection, such as stereo camera, laser range finder, etc., may suffer from unpredictable anomalies, a resilient relative pose estimation approach is proposed such that each robot can obtain satisfactory relative pose estimates of its neighbors for further coordination algorithm design. In the proposed approach, the optimal Kalman estimate is decomposed as a weighted sum of local state estimates, based on which a convex optimization problem is formulated to generate the resilient estimation. Unlike most of the existing approaches investigating similar problems, which assume that the statistics or the bound of anomalies is known in advance, our proposed approach is not limited by this assumption. The effectiveness of the proposed method has been validated by numerical simulations and real robot experiments. It has been demonstrated that the proposed approach is comparable to the Kalman filter in the absence of sensor anomalies, while boundedness of the relative pose estimation error can be guaranteed under abnormal observations.",Uncertainty; Kalman filters; Robot sensing systems; Robot kinematics; Robots; Mobile robots; Multirobot system; Pose estimation; resilient localization; sensor anomaly,Anomaly Resilient Relative Pose Estimation for Multiple Nonholonomic Mobile Robot Systems,-,NO,,,YES,,,,,NO,,
S2073,1,Forward,conferencePaper,2021,"Ivanou, Mikhail; Mikhel, Stanislav; Maloletov, Alexander","2021 International Conference ""Nonlinearity, Information and Robotics"" (NIR)",10.1109/NIR52917.2021.9666141,,"The Robot Operating System (ROS) has established itself as a useful set of software libraries and tools that can help to build robot applications. It provides services such as hardware abstraction, low-level device management, implementation of frequently used functions, inter-process message passing, and package management. ROS is good for small static research environments, however, it does not scale so well to large real-world applications. Besides, there is no security model, the test approach is unclear, the library versions can be incompatible. The paper presents a survey, the results of which show that many ROS users have problems with such modern programming techniques as testing or automatic deployment. Nowadays, many systems based on modern programming paradigms are developed by leading companies, and there is a lot of good open-source software out there. An application can be built without writing a lot of code, one just needed to combine high-quality libraries with necessary functionality. This paper intends to show how to build a ROS-like system using modern technologies, such as microservices and message queues, in a simple way with high quality and functionality using an example of the RhoMBus framework.",Programming; Security; microservice; cloud robotics; ROS; Operating systems; Writing; robot system; Message passing; message queue; Microservice architectures; RhoMBus; Software libraries,ROS-like framework using modern development concepts and microservices,-,NO,,,YES,,,,,NO,,
S2074,1,Forward,book,2021,"Lepuschitz, Wilfried; Merdan, Munir; Koppensteiner, Gottfried; Balogh, Richard; Obdržálek, David",,,,"This proceedings book comprises the latest achievements in research and development in educational robotics presented at the 11th International Conference on Robotics in Education (RiE), which was carried out as a purely virtual conference from September 30 to October 2, 2020. Researchers and educators will find valuable methodologies and tools for robotics in education that encourage learning in the fields of science, technology, engineering, arts and mathematics (STEAM) through the design, creation and programming of tangible artifacts for creating personally meaningful objects and addressing real-world societal needs. This also involves the introduction of technologies ranging from robotics platforms to programming environments and languages. Evaluation results prove the impact of robotics on the students’ interests and competence development. The presented approaches cover the whole educative range from elementary school to university in both formal as well as informal settings.",Computers / Artificial Intelligence / General; Technology & Engineering / Robotics; Education / Higher; Technology & Engineering / General; Technology & Engineering / Engineering (General),,NO,,,,YES,,,,,NO,,
S2075,1,Forward,bookSection,2021,"Sarabi, Armin; Jin, Kun; Liu, Mingyan",Game Theory and Machine Learning for Cyber Security,,https://onlinelibrary.wiley.com/doi/abs/10.1002/9781119723950.ch21,"Network scanning is widely used to assess security postures of hosts/networks, discover vulnerabilities, and study Internet trends. However, scans can generate large amounts of traffic, and efficient probing of IPv6 hosts (where global scans are infeasible) is an outstanding problem. In this chapter, we develop a framework for efficient Internet scans using machine learning, by preemptively detecting and avoiding the scanning of inactive hosts. We evaluate this framework over global scans of the IPv4 space over 20 ports, and show that using location and ownership information we can reduce the bandwidth of scans by 26.7–72.0%, while discovering 90–99% of active hosts. We then evaluate a sequential method by gradually adding information obtained from scanned ports to adaptively predict the remaining port responses, yielding 47.4–83.5% of bandwidth savings at the same true positive rates. Our framework can be used to lower the bandwidth consumption of scans and increase their hit rate, thereby reducing their intrusive nature and enabling efficient discovery of active devices.",network scanning; prediction and forecasting; vulnerability assessment,Smart Internet Probing: Scanning Using Adaptive Machine Learning,-,NO,,,YES,,,,,NO,,
S2076,1,Forward,conferencePaper,2022,"Shah, Ryan; Ahmed, Chuadhry Mujeeb; Nagaraja, Shishir",Proceedings of the 15th ACM Conference on Security and Privacy in Wireless and Mobile Networks,10.1145/3507657.3529659,https://doi.org/10.1145/3507657.3529659,"Connected robots play a key role in automating industrial workflows. Robots can expose sensitive operational information to remote adversaries. Despite the use of end-to-end encryption, a passive adversary could fingerprint and reconstruct the entire workflows being carried out and developing a detailed understanding of how facilities operate. In this paper, we investigate whether a remote passive attacker can accurately fingerprint robot movements and reconstruct operational workflows. Using a neural network-based traffic analysis approach, we found that attackers can predict TLS-encrypted robot movements with around \textasciitilde60% accuracy, increasing to near perfect accuracy in realistic settings. Ultimately, simply adopting best cybersecurity practices is not enough to stop even weak (passive) adversaries.",neural network; security; robotics; sdn; side channel; traffic analysis,Can You Still See Me?: Identifying Robot Operations Over End-to-End Encrypted Channels,-,NO,,,YES,,,,,NO,,
S2077,1,Forward,webpage,,,,,https://www.proquest.com/openview/48398313fdb7cdf6bd5ff1bdc8ce9350/1?pq-origsite=gscholar&cbl=18750&diss=y,"Explore millions of resources from scholarly journals, books, newspapers, videos and more, on the ProQuest Platform.",,,NO,,,,NO,,,,,NO,,
S2078,1,Forward,journalArticle,,"Bakirtzis, Georgios; Genovese, Fabrizio; Fleming, Cody H",,,,"Security modeling is an important aspect of assuring the safety of robots. However, security is an emergent property, meaning that the secure behavior of the components cannot be used in isolation to reason about the overall safety of the system. We show a system modeling method and an associated security assessment that is compositional. To produce this method and assessment technique we use categorical semantics to model the system, the Yoneda lemma to model attacker probing, and rewriting and rewiring of wiring diagram to model attacker actions.",,,-,,,,NO,,,,,NO,,
S2079,1,Forward,webpage,,,,,https://www.proquest.com/openview/e55fe9ac486989126008ad651b6a1f32/1?pq-origsite=gscholar&cbl=18750&diss=y,"Explore millions of resources from scholarly journals, books, newspapers, videos and more, on the ProQuest Platform.",,,NO,,,,NO,,,,,NO,,
S2080,1,Forward,conferencePaper,2021,"Trabelsi, Zouheir; Alnajjar, Fady; Aljaberi, Mariam; Aldhaheri, Shamma; Alkhateri, Hend; Alkhateri, Fatema",Robotics in Education,10.1007/978-3-030-67411-3_6,,"Security is particularly important in robotics. The inclusion of robot security education in curricula offering courses on robotics is therefore considered a valuable extension. However, robot security is covered very briefly in most curricula and there is a clear lack of education publications that discuss related teaching materials and hands-on lab activities. This paper contributes to fill this gap by providing a method for enhancing the teaching of robot security, using a hands-on lab based educational approach. The details of comprehensive hands-on lab activities that can be used in didactic environments to evaluate and enhance robot security are presented. Practically, throughout the hands-on lab activities, the resilience and robustness of a popular robot, called NAO, are evaluated against common Denial of Service (DoS) attacks. The hands-on activities demonstrate clearly that NAO robot is very vulnerable to DoS attacks and does not deploy built-in efficient security features to prevent and limit the success of the attacks. Moreover, the discussed hands-on lab activities can be considered as the basis to develop similar activities using other types of robots and attacks and are designed to accompany and compliment any existing trade or academic press text.",ARP cache poisoning; Denial of Service (DoS) attacks; Firewall; Hands-on lab activities; Robot security,Robot Security Education: Hands-on Lab Activities Based Teaching Approach,-,NO,,,YES,,,,,NO,,
S2081,1,Forward,conferencePaper,2021,"Cottrell, Kaitlyn; Bose, Dibyendu Brinto; Shahriar, Hossain; Rahman, Akond","2021 IEEE 45th Annual Computers, Software, and Applications Conference (COMPSAC)",10.1109/COMPSAC51774.2021.00105,,"The ubiquitous usage of robots in modern society necessitates secure development of robotics systems. Practitioners who engage in robot development can benefit from a systematic study that investigates the categories of vulnerabilities that appear in robotics systems. The goal of this paper is to help practitioners mitigate vulnerabilities in robotics systems by conducting an empirical study of vulnerabilities in robotics systems. We conduct an empirical study where we analyze 176 robotics-related vulnerabilities collected from the Robot Vulnerability Database (RVD). Our findings show that: (i) robotics-related vulnerabilities can be classified into nine categories; (ii) memory-related vulnerabilities are the most frequent category, (iii) 92.6% of the reported vulnerabilities are software-related, and (iv) software components in robotics systems include more critical vulnerabilities compared to that of hardware components. Based on our findings, we provide a list of development activities that can be used to mitigate vulnerabilities for robotics systems.",Databases; Software; Conferences; Systematics; empirical study; mining software repositories; Medical services; robotics; Service robots; Manufacturing industries; qualitative analysis; vulnerabilities; rvd,An Empirical Study of Vulnerabilities in Robotics,-,NO,,,YES,,,,,NO,,
S2082,1,Forward,conferencePaper,2020,"Wolfert, Pieter; Deschuyteneer, Jorre; Oetringer, Djamari; Robinson, Nicole; Belpaeme, Tony",Companion of the 2020 ACM/IEEE International Conference on Human-Robot Interaction,10.1145/3371382.3378341,https://dl.acm.org/doi/10.1145/3371382.3378341,,,Security Risks of Social Robots Used to Persuade and Manipulate: A Proof of Concept Study,-,NO,,,YES,,,,,NO,,
S2083,1,Forward,bookSection,2021,"Cardenas, Irvin Steve; May, John Brian; Kim, Jong-Hoon",Blockchain Technology for IoT Applications,,https://doi.org/10.1007/978-981-33-4122-7_2,"We present AutomataDAO, a decentralized data marketplace for robot and IoT cyberphysical systems. Unlike present literature on blockchain-based data marketplaces, AutomataDAO is implemented as a decentralized autonomous organization (DAO) through a set of governance smart contracts that account for both human and synthetic agents that may take part in the DAO. Concerns over transactional costs and throughput are resolved using state channel technology, and a preliminary decentralized ID (DID) solution is leveraged to establish a reputation system that is considered within the cryptoeconomics of the system; the latter is also accounted for in the market’s data pricing model.",IoT; Blockchain; Mobile robots; Smart contracts; Cosmos network; Data marketplace; Ethermint,AutomataDAO: A Blockchain-Based Data Marketplace for Interactive Robot and IoT Data Exchanges Using Ethermint and State Channels,-,NO,,,YES,,,,,NO,,
S2084,1,Forward,journalArticle,,"Araújo, João Pedro Xavier",,,,,,Monitorização de um Sistema Publish-Subscribe ROS para Enumeração e Deteção de Intrusões,-,,,,NO,,,,,NO,,
S2085,1,Forward,journalArticle,2016,"Misra, Dipendra K.; Sung, Jaeyong; Lee, Kevin; Saxena, Ashutosh",The International Journal of Robotics Research,10.1177/0278364915602060,https://doi.org/10.1177/0278364915602060,"It is important for a robot to be able to interpret natural language commands given by a human. In this paper, we consider performing a sequence of mobile manipulation tasks with instructions described in natural language. Given a new environment, even a simple task such as boiling water would be performed quite differently depending on the presence, location and state of the objects. We start by collecting a dataset of task descriptions in free-form natural language and the corresponding grounded task-logs of the tasks performed in an online robot simulator. We then build a library of verb–environment instructions that represents the possible instructions for each verb in that environment, these may or may not be valid for a different environment and task context. We present a model that takes into account the variations in natural language and ambiguities in grounding them to robotic instructions with appropriate environment context and task constraints. Our model also handles incomplete or noisy natural language instructions. It is based on an energy function that encodes such properties in a form isomorphic to a conditional random field. We evaluate our model on tasks given in a robotic simulator and show that it successfully outperforms the state of the art with 61.8% accuracy. We also demonstrate a grounded robotic instruction sequence on a PR2 robot using the Learning from Demonstration approach.",machine learning; human–robot interaction and crowd-sourcing; Natural language understanding,Tell me Dave: Context-sensitive grounding of natural language to manipulation instructions,-,NO,,,YES,,,,,NO,,
S2086,1,Forward,conferencePaper,2014,"Marzinotto, Alejandro; Colledanchise, Michele; Smith, Christian; Ögren, Petter",2014 IEEE International Conference on Robotics and Automation (ICRA),10.1109/ICRA.2014.6907656,,"This paper presents a unified framework for Behavior Trees (BTs), a plan representation and execution tool. The available literature lacks the consistency and mathematical rigor required for robotic and control applications. Therefore, we approach this problem in two steps: first, reviewing the most popular BT literature exposing the aforementioned issues; second, describing our unified BT framework along with equivalence notions between BTs and Controlled Hybrid Dynamical Systems (CHDSs). This paper improves on the existing state of the art as it describes BTs in a more accurate and compact way, while providing insight about their actual representation capabilities. Lastly, we demonstrate the applicability of our framework to real systems scheduling open-loop actions in a grasping mission that involves a NAO robot and our BT library.",Heuristic algorithms; Vehicles; Trajectory; Synchronization; Robots; Tin,Towards a unified behavior trees framework for robot control,-,NO,,,YES,,,,,NO,,
S2087,1,Forward,conferencePaper,2017,"Paxton, Chris; Hundt, Andrew; Jonathan, Felix; Guerin, Kelleher; Hager, Gregory D.",2017 IEEE International Conference on Robotics and Automation (ICRA),10.1109/ICRA.2017.7989070,,"For collaborative robots to become useful, end users who are not robotics experts must be able to instruct them to perform a variety of tasks. With this goal in mind, we developed a system for end-user creation of robust task plans with a broad range of capabilities. CoSTAR: the Collaborative System for Task Automation and Recognition is our winning entry in the 2016 KUKA Innovation Award competition at the Hannover Messe trade show, which this year focused on Flexible Manufacturing. CoSTAR is unique in how it creates natural abstractions that use perception to represent the world in a way users can both understand and utilize to author capable and robust task plans. Our Behavior Tree-based task editor integrates high-level information from known object segmentation and pose estimation with spatial reasoning and robot actions to create robust task plans. We describe the cross-platform design and implementation of this system on multiple industrial robots and evaluate its suitability for a wide variety of use cases.",Ontologies; Collaboration; Robustness; User interfaces; Service robots; Grippers,CoSTAR: Instructing collaborative robots with behavior trees and vision,-,,,,YES,,,,,YES,,
S2088,1,Forward,conferencePaper,2014,"Aertbeliën, Erwin; De Schutter, Joris",2014 IEEE/RSJ International Conference on Intelligent Robots and Systems,10.1109/IROS.2014.6942760,,"This paper presents a new framework for constraint-based task specification of robot controllers. A task specification language (eTaSL) is defined as well as a corresponding implementation of a controller (eTC). This new framework is based on feature variables and a new concept referred to as expression graphs. It avoids some of the common pitfalls in previous frameworks, and provides a flexible and composable way to define robot control tasks. An architecture for a robot controller is proposed, as well as an implementation that can execute tasks described in the new specification language. Typical usage patterns for the new framework are explained on an example consisting of a kinematically redundant, bi-manual task on a PR2 robot. A comparison with existing frameworks shows the advantages of the new approach.",Context; Trajectory; Optimization; Robot kinematics; Collision avoidance; Joints,eTaSL/eTC: A constraint-based task specification language and robot controller using expression graphs,-,,,,YES,,,,,YES,,
S2089,1,Forward,conferencePaper,2015,"Alexandrova, Sonya; Tatlock, Zachary; Cakmak, Maya",2015 IEEE International Conference on Robotics and Automation (ICRA),10.1109/ICRA.2015.7139973,,"General-purpose robots can perform a range of useful tasks in human environments; however, programming them to robustly function in all possible environments that they might encounter is unfeasible. Instead, our research aims to develop robots that can be programmed by its end-users in their context of use, so that the robot needs to robustly function in only one particular environment. This requires intuitive ways in which end-users can program their robot. To that end, this paper contributes a flow-based visual programming language, called RoboFlow, that allows programming of generalizable mobile manipulation tasks. RoboFlow is designed to (i) ensure a robust low-level implementation of program procedures on a mobile manipulator, and (ii) restrict the high-level programming as much as possible to avoid user errors while enabling expressive programs that involve branching, looping, and nesting. We present an implementation of RoboFlow on a PR2 mobile manipulator and demonstrate the generalizability and error handling properties of RoboFlow programs on everyday mobile manipulation tasks in human environments.",Navigation; Visualization; Mobile communication; Computer languages; Robots; Programming profession,RoboFlow: A flow-based visual programming language for mobile manipulation tasks,-,NO,,,YES,,,,,NO,,
S2090,1,Forward,conferencePaper,2015,"Guerin, Kelleher R.; Lea, Colin; Paxton, Chris; Hager, Gregory D.",2015 IEEE International Conference on Robotics and Automation (ICRA),10.1109/ICRA.2015.7140065,,"Small Manufacturing Entities (SMEs) have not incorporated robotic automation as readily as large companies due to rapidly changing product lines, complex and dexterous tasks, and the high cost of start-up. While recent low-cost robots such as the Universal Robots UR5 and Rethink Robotics Baxter are more economical and feature improved programming interfaces, based on our discussions with manufacturers further incorporation of robots into the manufacturing work flow is limited by the ability of these systems to generalize across tasks and handle environmental variation. Our goal is to create a system designed for small manufacturers that contains a set of capabilities useful for a wide range of tasks, is both powerful and easy to use, allows for perceptually grounded actions, and is able to accumulate, abstract, and reuse plans that have been taught. We present an extension to Behavior Trees that allows for representing the system capabilities of a robot as a set of generalizable operations that are exposed to an end-user for creating task plans. We implement this framework in CoSTAR, the Collaborative System for Task Automation and Recognition, and demonstrate its effectiveness with two case studies. We first perform a complex tool-based object manipulation task in a laboratory setting. We then show the deployment of our system in an SME where we automate a machine tending task that was not possible with current off the shelf robots.",Automation; Graphical user interfaces; Collaboration; Robot sensing systems; Service robots; Manufacturing,A framework for end-user instruction of a robot assistant for manufacturing,-,NO,,,YES,,,,,NO,,
S2091,1,Forward,journalArticle,2016,"Barth, Ruud; Hemming, Jochen; van Henten, Eldert J.",Biosystems Engineering,10.1016/j.biosystemseng.2015.12.001,https://www.sciencedirect.com/science/article/pii/S1537511015001816,"A modular software framework design that allows flexible implementation of eye-in-hand sensing and motion control for agricultural robotics in dense vegetation is reported. Harvesting robots in cultivars with dense vegetation require multiple viewpoints and on-line trajectory adjustments in order to reduce the amount of false negatives and correct for fruit movement. In contrast to specialised software, the framework proposed aims to support a wide variety of agricultural use cases, hardware and extensions. A set of Robotic Operating System (ROS) nodes was created to ensure modularity and separation of concerns, implementing functionalities for application control, robot motion control, image acquisition, fruit detection, visual servo control and simultaneous localisation and mapping (SLAM) for monocular relative depth estimation and scene reconstruction. Coordination functionality was implemented by the application control node with a finite state machine. In order to provide visual servo control and simultaneous localisation and mapping functionalities, off-the-shelf libraries Visual Servoing Platform library (ViSP) and Large Scale Direct SLAM (LSD-SLAM) were wrapped in ROS nodes. The capabilities of the framework are demonstrated by an example implementation for use with a sweet-pepper crop, combined with hardware consisting of a Baxter robot and a colour camera placed on its end-effector. Qualitative tests were performed under laboratory conditions using an artificial dense vegetation sweet-pepper crop. Results indicated the framework can be implemented for sensing and robot motion control in sweet-pepper using visual information from the end-effector. Future research to apply the framework to other use-cases and validate the performance of its components in servo applications under real greenhouse conditions is suggested.",ROS; SLAM; Framework; Harvest robots; Visual servo control,Design of an eye-in-hand sensing and servo control framework for harvesting robotics in dense vegetation,-,NO,,,YES,,,,,NO,,
S2092,1,Forward,conferencePaper,2017,"Huang, Justin; Cakmak, Maya",2017 12th ACM/IEEE International Conference on Human-Robot Interaction (HRI,,,"This paper introduces Code3, a system for user-friendly, rapid programming of mobile manipulator robots. The system is designed to let non-roboticists and roboticists alike program end-to-end manipulation tasks. To accomplish this, Code3 provides three integrated components for perception, manipulation, and high-level programming. The perception component helps users define a library of object and scene parts that the robot can later detect. The manipulation component lets users define actions for manipulating objects or scene parts through programming by demonstration. Finally, the high-level programming component provides a drag-and-drop interface with which users can program the logic and control flow to accomplish a task using their previously specified perception and manipulation capabilities. We present findings from an observational user study with non-roboticist programmers (N=10) that demonstrate their ability to quickly learn Code3 and program a PR2 robot to do manipulation tasks. We also demonstrate how the system is expressive enough for an expert to rapidly program highly complex manipulation tasks like playing tic-tac-toe and reconfiguring an object to be graspable.",Programming; Task analysis; Educational robots; Robot sensing systems; Manipulators; Three-dimensional displays; End-user programming; Mobile Manipulation; Programming by demonstration; Programming tools,Code3: A System for End-to-End Programming of Mobile Manipulator Robots for Novices and Experts,-,NO,,,YES,,,,,NO,,
S2093,1,Forward,conferencePaper,2016,"Brunner, Sebastian G.; Steinmetz, Franz; Belder, Rico; Dömel, Andreas",2016 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS.2016.7759506,,"Robotic tasks are becoming increasingly complex, and with this also the robotic systems. This requires new tools to manage this complexity and to orchestrate the systems to fulfill demanding autonomous tasks. For this purpose, we developed a new graphical tool targeting at the creation and execution of robotic tasks, called RAFCON. These tasks are described in hierarchical state machines supporting concurrency. A formal notation of this concept is given. The tool provides many debugging mechanisms and a GUI with a graphical editor, allowing for intuitive visual programming and fast prototyping. The application of RAFCON for an autonomous mobile robot in the SpaceBotCamp competition has already proved to be successful.",Concurrent computing; Graphical user interfaces; Complexity theory; Visualization; Robots; Programming profession,"RAFCON: A graphical tool for engineering complex, robotic tasks",-,,,,YES,,NO,,,NO,,
S2094,1,Forward,conferencePaper,2016,"Glas, Dylan F.; Kanda, Takayuki; Ishiguro, Hiroshi",2016 11th ACM/IEEE International Conference on Human-Robot Interaction (HRI),10.1109/HRI.2016.7451766,,"Interaction Composer, a visual programming environment designed to enable programmers and non-programmers to collaboratively design social human-robot interactions in the form of state-based flows, has been in use at our laboratory for eight years. The system architecture and the design principles behind the framework have been presented in other work, but in this paper we take a case-study approach, examining several actual examples of the use of this toolkit over an eight-year period. We examine the structure and content of interaction flows, identify common design patterns, and discuss elements of the framework which have proven valuable, features which did not solve their intended purposes, and ways that future systems might better address these issues. It is hoped that the insights gained from this study will contribute to the development of more effective and more usable tools and frameworks for interaction design.",Programming; Visualization; Laboratories; Robot sensing systems; Service robots; Visual Programming; Speech; Design Patterns; Interaction Design; Social Robotics,Human-robot interaction design using Interaction Composer eight years of lessons learned,-,NO,,,YES,,,,,NO,,
S2095,1,Forward,conferencePaper,2014,"Cakmak, Maya; Takayama, Leila",Proceedings of the 2014 ACM/IEEE international conference on Human-robot interaction,10.1145/2559636.2559675,https://doi.org/10.1145/2559636.2559675,"Allowing end-users to harness the full capability of general purpose robots, requires giving them powerful tools. As the functionality of these tools increase, learning how to use them becomes more challenging. In this paper we investigate the use of instructional materials to support the learnability of a Programming by Demonstration tool. We develop a system that allows users to program complex manipulation skills on a two-armed robot through a spoken dialog interface and by physically moving the robot's arms. We present a user study (N=30) in which participants are left alone with the robot and a user manual, without any prior instructions on how to program the robot. Instead, they are asked to figure it out on their own. We investigate the effect of providing users with an additional written tutorial or an instructional video. We find that videos are most effective in training the user; however, this effect might be superficial and ultimately trial-and-error plays an important role in learning to program the robot. We also find that tutorials can be problematic when the interaction has uncertainty due to speech recognition errors. Overall, the user study demonstrates the effectiveness and learnability of the our system, while providing useful feedback about the dialog design.",programming by demonstration,Teaching people how to teach robots: the effect of instructional materials and dialog design,-,NO,,,YES,,,,,NO,,
S2096,1,Forward,conferencePaper,2019,"Cao, Yuanzhi; Xu, Zhuangying; Li, Fan; Zhong, Wentao; Huo, Ke; Ramani, Karthik",Proceedings of the 2019 on Designing Interactive Systems Conference,10.1145/3322276.3322278,https://doi.org/10.1145/3322276.3322278,"We present V.Ra, a visual and spatial programming system for robot-IoT task authoring. In V.Ra, programmable mobile robots serve as binding agents to link the stationary IoTs and perform collaborative tasks. We establish an ecosystem that coherently connects the three key elements of robot task planning , the human, robot and IoT, with one single mobile AR device. Users can perform task authoring with the Augmented Reality (AR) handheld interface, then placing the AR device onto the mobile robot directly transfers the task plan in a what-you-do-is-what-robot-does (WYDWRD) manner. The mobile device mediates the interactions between the user, robot, and the IoT oriented tasks, and guides the path planning execution with the embedded simultaneous localization and mapping (SLAM) capability. We demonstrate that V.Ra enables instant, robust and intuitive room-scale navigatory and interactive task authoring through various use cases and preliminary studies.",human-robot interaction; augmented reality; internet-of-robotic-thing; robot navigation; robotic task authoring; slam,V.Ra: An In-Situ Visual Authoring System for Robot-IoT Task Planning with Augmented Reality,-,NO,,,YES,,,,,NO,,
S2097,1,Forward,journalArticle,2020,"Park, Daehyung; Hoshi, Yuuna; Mahajan, Harshal P.; Kim, Ho Keun; Erickson, Zackory; Rogers, Wendy A.; Kemp, Charles C.",Robotics and Autonomous Systems,10.1016/j.robot.2019.103344,https://www.sciencedirect.com/science/article/pii/S0921889018307061,"Eating is an essential activity of daily living (ADL) for staying healthy and living at home independently. Although numerous assistive devices have been introduced, many people with disabilities are still restricted from independent eating due to the devices’ physical or perceptual limitations. In this work, we present a new meal-assistance system and evaluations of this system with people with motor impairments. We also discuss learned lessons and design insights based on the evaluations. The meal-assistance system uses a general-purpose mobile manipulator, a Willow Garage PR2, which has the potential to serve as a versatile form of assistive technology. Our active feeding framework enables the robot to autonomously deliver food to the user’s mouth, reducing the need for head movement by the user. The user interface, visually-guided behaviors, and safety tools allow people with severe motor impairments to successfully use the system. We evaluated our system with a total of 10 able-bodied participants and 9 participants with motor impairments. Both groups of participants successfully ate various foods using the system and reported high rates of success for the system’s autonomous behaviors. In general, participants who operated the system reported that it was comfortable, safe, and easy-to-use.",Manipulation; Assistive feeding; Assistive robots; Meal assistance,"Active robot-assisted feeding with a general-purpose mobile manipulator: Design, evaluation, and lessons learned",-,NO,,,YES,,,,,NO,,
S2098,1,Forward,journalArticle,2016,"Stückler, Jörg; Schwarz, Max; Behnke, Sven",Frontiers in Robotics and AI,,https://www.frontiersin.org/articles/10.3389/frobt.2016.00058,"Cognitive service robots that shall assist persons in need of performing their activities of daily living have recently received much attention in robotics research. Such robots require a vast set of control and perception capabilities to provide useful assistance through mobile manipulation and human–robot interaction. In this article, we present hardware design, perception, and control methods for our cognitive service robot Cosero. We complement autonomous capabilities with handheld teleoperation interfaces on three levels of autonomy. The robot demonstrated various advanced skills, including the use of tools. With our robot, we participated in the annual international RoboCup@Home competitions, winning them three times in a row.",,"Mobile Manipulation, Tool Use, and Intuitive Interaction for Cognitive Service Robot Cosero",-,NO,,,YES,,,,,NO,,
S2099,1,Forward,conferencePaper,2014,"Hart, Stephen; Dinh, Paul; Yamokoski, John D.; Wightman, Brian; Radford, Nicolaus",2014 IEEE/RSJ International Conference on Intelligent Robots and Systems,10.1109/IROS.2014.6942761,,"This paper introduces the Robot Task Commander (RTC) framework for defining, developing, and deploying robot application software for use in different run-time contexts. RTC was created by NASA-JSC in conjunction with General Motors for use with the Robonaut-2 and Valkyrie humanoid robot platforms. RTC provides a robot programming syntax and an IDE appropriate for use by experts and non-experts for implementation and execution. An expert developer can implement a new application with a combination of scripts, called process nodes, and state machines that set the control mode of the robot. A non-expert developer can assemble process nodes and controller state machines into novel hierarchical applications using a visual programming language (VPL). This VPL also allows developers to interface with other RTC applications or with third-party software packages using a variety of network transport mechanisms (ROS, TCP, shared memory, etc.). RTC represents an advantage over other robot programming frameworks by providing multiple levels of flexibility for development. The efficacy of RTC is demonstrated through examples of sophisticated behaviors, such as programming the Valkyrie robot to grab objects and turn a valve.",Syntactics; Engines; Libraries; Visualization; Process control; Robot sensing systems,Robot Task Commander: A framework and IDE for robot application development,-,NO,,,YES,,,,,NO,,
S2100,1,Forward,conferencePaper,2015,"Quintero, Camilo Perez; Tatsambon, Romeo; Gridseth, Mona; Jägersand, Martin",2015 24th IEEE International Symposium on Robot and Human Interactive Communication (RO-MAN),10.1109/ROMAN.2015.7333604,,"This paper explores visual pointing gestures for two-way nonverbal communication for interacting with a robot arm. Such non-verbal instruction is common when humans communicate spatial directions and actions while collaboratively performing manipulation tasks. Using 3D RGBD we compare human-human and human-robot interaction for solving a pick-and-place task. In the human-human interaction we study both pointing and other types of gestures, performed by humans in a collaborative task. For the human-robot interaction we design a system that allows the user to interact with a 7DOF robot arm using gestures for selecting, picking and dropping objects at different locations. Bi-directional confirmation gestures allow the robot (or human) to verify that the right object is selected. We perform experiments where 8 human subjects collaborate with the robot to manipulate ordinary household objects on a tabletop. Without confirmation feedback selection accuracy was 70-90% for both humans and the robot. With feedback through confirmation gestures both humans and our vision-robotic system could perform the task accurately every time (100%). Finally to illustrate our gesture interface in a real application, we let a human instruct our robot to make a pizza by selecting different ingredients.",Containers; Robot sensing systems; Robot kinematics; Service robots; Human-robot interaction; Three-dimensional displays,Visual pointing gestures for bi-directional human robot interaction in a pick-and-place task,-,NO,,,YES,,,,,NO,,
S2101,1,Forward,conferencePaper,2018,"Paxton, Chris; Jonathan, Felix; Hundt, Andrew; Mutlu, Bilge; Hager, Gregory D.",2018 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS.2018.8594127,,"How can we enable users to create effective, perception-driven task plans for collaborative robots? We conducted a 35-person user study with the Behavior Tree-based CoSTAR system to determine which strategies for end user creation of generalizable robot task plans are most usable and effctive. CoSTAR allows domain experts to author complex, perceptually grounded task plans for collaborative robots. As a part of CoSTAR's wide range of capabilities, it allows users to specify SmartMoves: abstract goals such as “pick up component A from the right side of the table.” Users were asked to perform pick-and-place assembly tasks with either SmartMoves or one of three simpler baseline versions of CoSTAR. Overall, participants found CoSTAR to be highly usable, with an average System Usability Scale score of 73.4 out of 100. SmartMove also helped users perform tasks faster and more effectively; all SmartMove users completed the first two tasks, while not all users completed the tasks using the other strategies. SmartMove users showed better performance for incorporating perception across all three tasks.",Task analysis; Collaboration; User interfaces; Planning; Service robots; Grippers,Evaluating Methods for End-User Creation of Robot Task Plans,-,NO,,,YES,,,,,NO,,
S2102,1,Forward,conferencePaper,2018,"Lehner, Peter; Brunner, Sebastian; Dömel, Andreas; Gmeiner, Heinrich; Riedel, Sebastian; Vodermayer, Bernhard; Wedler, Armin",2018 IEEE Aerospace Conference,10.1109/AERO.2018.8396726,,"Robotic systems map unknown terrain and collect scientific relevant data of foreign planets. Currently, pilots from Earth steer these rovers on Moon and Mars surfaces via teleoperation. However, remote control suffers from a high delay of the long distance communication which leads to a reduction of the time the rover can spent gathering scientific data. We propose a system architecture for an autonomous rover for planetary exploration. The architecture is centered around a flexible, scalable world model to record and represent the environment of the robot. An autonomous task control framework and a versatile constraint motion planner use the live information from the world model to steer the rover through complex manipulation tasks. Furthermore, we present the enhancement of our Light Weight Rover Unit (LRU) with an innovative docking interface for arbitrary tool handling. We showcase the effectiveness of our approach at the moon-analogue demonstration mission of the ROBEX project on Mt. Etna, Sicily. We show in two experiments that the robot is capable of autonomously deploying scientific instruments and collecting soil samples from the volcano's surface.",Computer architecture; Task analysis; Software; Payloads; Manipulators; Planets,Mobile manipulation for planetary exploration,-,NO,,,YES,,,,,NO,,
S2103,1,Forward,journalArticle,2018,"Park, Gyeong-Moon; Yoo, Yong-Ho; Kim, Deok-Hwa; Kim, Jong-Hwan",IEEE Transactions on Cybernetics,10.1109/TCYB.2017.2715338,,"Robots are expected to perform smart services and to undertake various troublesome or difficult tasks in the place of humans. Since these human-scale tasks consist of a temporal sequence of events, robots need episodic memory to store and retrieve the sequences to perform the tasks autonomously in similar situations. As episodic memory, in this paper we propose a novel Deep adaptive resonance theory (ART) neural model and apply it to the task performance of the humanoid robot, Mybot, developed in the Robot Intelligence Technology Laboratory at KAIST. Deep ART has a deep structure to learn events, episodes, and even more like daily episodes. Moreover, it can retrieve the correct episode from partial input cues robustly. To demonstrate the effectiveness and applicability of the proposed Deep ART, experiments are conducted with the humanoid robot, Mybot, for performing the three tasks of arranging toys, making cereal, and disposing of garbage.",Humanoid robots; Biological system modeling; Robustness; Encoding; Subspace constraints; Biological information theory; Deep adaptive resonance theory (ART); episode learning; episode retrieval; wheel-based humanoid robot,Deep ART Neural Model for Biologically Inspired Episodic Memory and Its Application to Task Performance of Robots,-,NO,,,YES,,,,,NO,,
S2104,1,Forward,conferencePaper,2014,"Sung, Jaeyong; Selman, Bart; Saxena, Ashutosh",2014 IEEE/RSJ International Conference on Intelligent Robots and Systems,10.1109/IROS.2014.6942972,,"Many tasks in human environments require performing a sequence of navigation and manipulation steps involving objects. In unstructured human environments, the location and configuration of the objects involved often change in unpredictable ways. This requires a high-level planning strategy that is robust and flexible in an uncertain environment. We propose a novel dynamic planning strategy, which can be trained from a set of example sequences. High level tasks are expressed as a sequence of primitive actions or controllers (with appropriate parameters). Our score function, based on Markov Random Field (MRF), captures the relations between environment, controllers, and their arguments. By expressing the environment using sets of attributes, the approach generalizes well to unseen scenarios. We train the parameters of our MRF using a maximum margin learning method. We provide a detailed empirical validation of our overall framework demonstrating successful plan strategies for a variety of tasks.",Navigation; Vectors; Sequential analysis; Planning; Robots; Liquids; Markov random fields,Synthesizing manipulation sequences for under-specified tasks using unrolled Markov Random Fields,-,NO,,,YES,,,,,NO,,
S2105,1,Forward,conferencePaper,2017,"Zubrycki, Igor; Kolesiński, Marcin; Granosik, Grzegorz",Advances in Computational Intelligence,10.1007/978-3-319-59147-6_53,,"This paper presents a graphical programming interface that enables non-technical professionals to program robots. Increasingly, robots are used by non-technical persons, such as service workers, therapists or marketers and graphical programming enables them to adjust robots to the situational needs through intuitive but expressive ways.",Robot Operating System; Program Robot; Programming Interface; Robot Behavior; Trade Fair,Graphical Programming Interface for Enabling Non-technical Professionals to Program Robots and Internet-of-Things Devices,-,NO,,,YES,,,,,NO,,
S2106,1,Forward,document,2013,"Sung, Jaeyong; Selman, Bart; Saxena, Ashutosh",,,,"Many tasks in human environments require performing a sequence of complex navigation and manipulation tasks. In unstructured human environments, the locations and configuration of the objects can change in unpredictable ways. This requires a high-level planning strategy that is robust and flexible in an uncertain environment. We propose a novel dynamic planning strategy, which can be trained from a set of example activities. High level activities are expressed as a sequence of primitive actions or controllers (with appropriate parameters). Our planning model synthesizes a universal strategy, where the a suitable next action is selected based on the current state of the environment. By expressing the environment using sets of attributes, the approach generalizes well to unseen scenarios. By unfolding our planning strategy into a Markov Random Field approximation, we can effectively train parameters using a maximum margin learning strategy. We provide a detailed empirical validation of our overall framework demonstrating successful plan strategies for a variety of tasks.",,,NO,,,,YES,,,,,NO,,
S2107,1,Forward,conferencePaper,2017,"Kazhoyan, Gayane; Beetz, Michael",2017 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS.2017.8202144,,"This paper tackles the problem of generalizing robot control programs over multiple objects, tasks and environments, based on the concept of action descriptions. These are abstract, general, semantic descriptions of an action that are augmented during execution with subsymbolic parameters specific to the context at hand. The parameters are inferred through reasoning rules, which extract the context from the action description and the belief state of the robot. The proposed system scales well with increasing number of reasoning rules required to support the knowledge-intensive manipulation tasks. The architecture combines the high-level robot control program with the reasoning engine in a modular way, thus improving the scalability of the system. The approach is validated in the context of setting a table with a PR2 robot.",Semantics; Containers; Robot control; Cognition; Dairy products,Programming robotic agents with action descriptions,-,NO,,,YES,,,,,NO,,
S2108,1,Forward,journalArticle,2018,"Brunner, Sebastian G.; Lehner, Peter; Schuster, Martin J.; Riedel, Sebastian; Belder, Rico; Leidner, Daniel; Wedler, Armin; Beetz, Michael; Stulp, Freek",IEEE Robotics and Automation Letters,10.1109/LRA.2018.2794580,,"In the context of space missions and terrestrial applications, both mission goals and task implementations for autonomous robots are becoming increasingly complex. Thus, the challenge of monitoring the achievement of task objectives and checking the correctness of their implementation is becoming more and more difficult. To tackle these problems, we propose an unified architecture that supports different stakeholders during the different phases of the deployment: 1) the design phase; 2) the runtime phase; and 3) the postmortem analysis phase. Furthermore, we implement this architecture by enhancing our task programming framework RMC advanced flow control with powerful logging, debugging, and profiling capabilities. We demonstrate the efficiency of our approach in the context of the ROBEX mission, during which the DLR Lightweight Rover Unit autonomously deployed several seismometers in an unknown rough terrain on Mt. Etna, Sicily. The analysis results for a state machine consisting of more than 1500 states and more than 1900 transitions are presented. Finally, we give a comparison between our framework and related software tools.",Monitoring; Runtime; Software; Measurement; History; Robots; Stakeholders; field robots; mobile manipulation; autonomous agents; middleware and programming environments; space robotics and automation,"Design, Execution, and Postmortem Analysis of Prolonged Autonomous Robot Operations",-,NO,,,YES,,,,,NO,,
S2109,1,Forward,conferencePaper,2015,"Pedrosa, Eurico; Lau, Nuno; Pereira, Artur; Cunha, Bernardo",Progress in Artificial Intelligence,10.1007/978-3-319-23485-4_45,,"Robots can play a significant role in product customization but they should leave a repetitive, low intelligence paradigm and be able to operate in unstructured environments and take decisions during the execution of the task. The EuRoC research project addresses this issue by posing as a competition to motivate researchers to present their solution to the problem. The first stage is a simulation competition where Pick & Place type of tasks are the goal and planning, perception and manipulation are the problems. This paper presents a skill-based architecture that enables a simulated moving manipulator to solve these tasks. The heuristics that were used to solve specific tasks are also presented. Using computer vision methods and the definition of a set of manipulation skills, an intelligent agent is able to solve them autonomously. The work developed in this project was used in the simulation competition of EuRoC project by team IRIS and enabled them to reach the $$5^{\mathrm {th}}$$rank.",Computer Vision Method; Interface Node; Manipulation Skill; Tool Center Point; Unstructured Environment,A Skill-Based Architecture for Pick and Place Manipulation Tasks,-,NO,,,YES,,,,,NO,,
S2110,1,Forward,conferencePaper,2018,"Liang, Ying Siu; Pellier, Damien; Fiorino, Humbert; Pesty, Sylvie; Cakmak, Maya",2018 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS.2018.8593518,,"Arrangement of items on shelves in stores or warehouses is a tedious, repetitive task that can be feasible for robots to perform. The diversity of products that are available in stores and the different setups and preferences of each store makes pre-programming a robot for this task extremely challenging. Instead, our work argues for enabling end-users to customize the robot to their specific objects and setup at deployment time by programming it themselves. To that end, this paper contributes (i) a task representation for shelf arrangements based on a large dataset of grocery store shelf images, (ii) a method for inferring goal configurations from user inputs including demonstrations and direct parameter specifications, and (iii) a system implementation of the proposed approach that allows simultaneously learning task goals and actions. We evaluate our goal inference approach with ten different teaching strategies that combine alternative user inputs in different ways on the large dataset of grocery configurations, as well as with real human teachers through an online user study (N=32). We evaluate our full system implemented on a Fetch mobile manipulator on eight benchmark tasks that demonstrate end-to-end programming and execution of shelf arrangement tasks.",Programming; Task analysis; Education; Packaging; Manipulators; Shape,Simultaneous End-User Programming of Goals and Actions for Robotic Shelf Organization,-,NO,,,YES,,,,,NO,,
S2111,1,Forward,conferencePaper,2019,"Quang, Hiep Do; Manh, Tien Ngo; Manh, Cuong Nguyen; Tien, Dung Pham; Van, Manh Tran; Kim, Duyen Ha Thi; Thanh, Van Nguyen Thi; Duan, Dam Hong","2019 International Conference on Mechatronics, Robotics and Systems Engineering (MoRSE)",10.1109/MoRSE48060.2019.8998714,,"The paper presents the Simultaneous Localization and Mapping, and navigation stack for the movement of Omni-directional self-driving robots based on the programming operating system for robots - Robot Operating System. The autonomous robot model used in the article is a four-wheeled Omnidirectional robot model, with Jetson TX2 high-performance processor for central processing tasks, with a depth camera and RPLIDAR sensors being simulated and building realistic models. Monitoring results of map, positioning, and navigation of robots are built based on mass of data obtained from Laser Scan, depth camera, and Point Cloud during the robot movement conducted by simulation based on GAZEBO software, and test experiment on ROS's RVIZ software. The achieved results show the efficiency, research direction of using ROS for controlling and monitoring autonomous robots, self-driving cars as well as developing intelligent robot systems.",Navigation; Robot kinematics; robot operating system; Mobile robots; SLAM; Simultaneous localization and mapping; GAZEBO; omni robot; RVIZ,Mapping and Navigation with Four-Wheeled Omnidirectional Mobile Robot based on Robot Operating System,-,NO,,,YES,,,,,NO,,
S2112,1,Forward,conferencePaper,2017,"Ridge, Barry; Gaspar, Timotej; Ude, Aleš",2017 IEEE-RAS 17th International Conference on Humanoid Robotics (Humanoids),10.1109/HUMANOIDS.2017.8246943,,"As robotic systems have become more and more complex and difficult to manage, various software architectures, libraries and programming paradigms have been introduced aimed at high-level control and integration of their constituent parts. The Robot Operating System (ROS) has, for many, become the de facto software framework for communication standardisation and hardware interface abstraction, and various packages within its ecosystem have come to the fore as being reliable design choices for dictating control flow. ROSbased software packages that use state machines as their core methodology to bridge the gap between low-level imperative task scripting and higher-level task planning have proven particularly popular. However, while they provide much in terms of power and flexibility, their overall task-level simplicity can often be obfuscated at the script-level by boilerplate code, intricate structure and lack of code reuse between state machine prototypes. In this paper, we aim to address this deficit by proposing a code generation, templating and metascripting methodology for state machine assembly, as well as an accompanying application programming interface (API), for the rapid, modular development of robot control programs. The API has been developed to function effectively as either a frontend for concise scripting or a back-end for code generation for visual programming systems. Its capabilities are demonstrated in an experiment using a simulated humanoid robot platform.",Programming; Libraries; Load modeling; Generators; Robot sensing systems,"Rapid state machine assembly for modular robot control using meta-scripting, templating and code generation",-,NO,,,YES,,,,,NO,,
S2113,1,Forward,journalArticle,,"Crosby, Matthew; Petrick, Ronald P A; Toscano, César; Dias, Rui Correia; Rovida, Francesco; Krüger, Volker",,,,"This paper presents an integrated cognitive robotics system for industrial kitting operations in a modern factory setting. The robot system combines low-level robot control and execution monitoring with automated mission and task planning, and a logistics planner which communicates with the factory’s manufacturing execution system. The system has been implemented and tested on a series of automotive kitting problems, where collections of parts are picked from a warehouse and delivered to the production line. The system has been empirically evaluated and the complete framework shown to be successful at assembling kits in a small factory environment.",,"Integrating Mission, Logistics, and Task Planning for Skills-Based Robot Control in Industrial Kitting Applications",-,,,,NO,,,,,NO,,
S2114,1,Forward,journalArticle,2021,"Han, Zhao; Giger, Daniel; Allspaw, Jordan; Lee, Michael S.; Admoni, Henny; Yanco, Holly A.",ACM Transactions on Human-Robot Interaction,10.1145/3457185,https://doi.org/10.1145/3457185,"As autonomous robots continue to be deployed near people, robots need to be able to explain their actions. In this article, we focus on organizing and representing complex tasks in a way that makes them readily explainable. Many actions consist of sub-actions, each of which may have several sub-actions of their own, and the robot must be able to represent these complex actions before it can explain them. To generate explanations for robot behavior, we propose using Behavior Trees (BTs), which are a powerful and rich tool for robot task specification and execution. However, for BTs to be used for robot explanations, their free-form, static structure must be adapted. In this work, we add structure to previously free-form BTs by framing them as a set of semantic sets {goal, subgoals, steps, actions} and subsequently build explanation generation algorithms that answer questions seeking causal information about robot behavior. We make BTs less static with an algorithm that inserts a subgoal that satisfies all dependencies. We evaluate our BTs for robot explanation generation in two domains: a kitting task to assemble a gearbox, and a taxi simulation. Code for the behavior trees (in XML) and all the algorithms is available at github.com/uml-robotics/robot-explanation-BTs.",behavior trees; Behavior explanation; robot explanation generation; robot transparency; state summarization,Building the Foundation of Robot Explanation Generation Using Behavior Trees,-,NO,,,YES,,,,,NO,,
S2115,1,Forward,conferencePaper,2020,"Racca, Mattia; Kyrki, Ville; Cakmak, Maya",Proceedings of the 2020 ACM/IEEE International Conference on Human-Robot Interaction,10.1145/3319502.3374784,https://doi.org/10.1145/3319502.3374784,"Enabling diverse users to program robots for different applications is critical for robots to be widely adopted. Most of the new collaborative robot manipulators come with intuitive programming interfaces that allow novice users to compose robot programs and tune their parameters. However, parameters like motion speeds or exerted forces cannot be easily demonstrated and often require manual tuning, resulting in a tedious trial-and-error process. To address this problem, we formulate tuning of one-dimensional parameters as an Active Learning problem where the learner iteratively refines its estimate of the feasible range of parameter values, by selecting informative queries. By executing the parametrized actions, the learner gathers the user's feedback, in the form of directional answers (""higher,'' ""lower,'' or ""fine''), and integrates it in the estimate. We propose an Active Learning approach based on Expected Divergence Maximization for this setting and compare it against two baselines with synthetic data. We further compare the approaches on a real-robot dataset obtained from programs written with a simple Domain-Specific Language for a robot arm and manually tuned by expert users (N=8) to perform four manipulation tasks. We evaluate the effectiveness and usability of our interactive tuning approach against manual tuning with a user study where novice users (N=8) tuned parameters of a human-robot hand-over program.",human-robot interaction; end-user programming; active learning,Interactive Tuning of Robot Program Parameters via Expected Divergence Maximization,-,NO,,,YES,,,,,NO,,
S2116,1,Forward,conferencePaper,2015,"Rueben, Matthew; Smart, William D.",Proceedings of the Tenth Annual ACM/IEEE International Conference on Human-Robot Interaction Extended Abstracts,10.1145/2701973.2702061,https://doi.org/10.1145/2701973.2702061,"As robots begin to enter our homes and workplaces, they will have to deal with the devices and appliances that are already there. Unfortunately, devices that are easy for humans to operate often cause problems for robots [3]. In teleoperation settings, the lack of tactile feedback often makes manipulation of buttons and switches awkward and clumsy [7]. Also, the robot's gripper often occludes the control, making teleoperation difficult. In the autonomous setting, perception of small buttons and switches is often difficult due to sensor limitations and poor lighting conditions. Adding depth information does not help much, since many of the controls we want to manipulate are small, and often close to the noise threshold of currently-available depth sensors typically installed on a mobile robot. This makes it extremely difficult to segment the controls from the other parts of the device. In this paper, we present a shared autonomy approach to the operation of physical device controls. A human operator gives high-level guidance, helps identify controls and their locations, and sequences the actions of the robot. Autonomous software on our robot performs the lower-level actions that require closed-loop control, and estimates the exact positions and parameters of controls. We describe the overall system, and then give the results of our initial evaluations, which suggest that the system is effective in operating the controls on a physical device.",assistive robotics; household devices; shared autonomy,A Shared Autonomy Interface for Household Devices,-,NO,,,YES,,,,,NO,,
S2117,1,Forward,journalArticle,,"Crosby, Matthew; Petrick, Ronald P A; Rovida, Francesco; Pedersen, Mikkel Rath; Krüger, Volker",,,,"Modern industrial robotics is characterised by a need for ﬂexibility in robot design, in order to minimise programming and development time when a robot’s tasks must be changed. To address this problem, a recent approach has proposed that robots be equipped with a set of general, reoccurring operations called ‘skills’, e.g., picking, placing, or driving. This paper presents a method for automatically generating planning problems from existing skill deﬁnitions such that the resulting problems can be solved using oﬀ-the-shelf planning software, and the solutions can be used to control robot actions in the world. As a result, a robot can therefore perform new tasks simply by specifying the task’s goals via a GUI. The approach is demonstrated on a set of common tasks in a simulated industrial environment and has also been tested successfully on a real-world robotic platform.",,Planning for Robots with Skills,-,,,,NO,,,,,NO,,
S2118,1,Forward,journalArticle,,"Pomarlan, Mihai; Nyga, Daniel; Picklum, Mareike",,,,"A commonsense understanding of the physical world will be crucial for the robots of the future as they strive to perform everyday activities and instructions formulated by human users in natural language. One mechanism that is believed to assist human cognition in commonsense reasoning is mental simulation, the envisioning of actions before they are performed. We therefore present a system integrating simulation of robot plans with probabilistic reasoning about natural-language instructions, to create a complete pipeline from instruction to execution to storing and analyzing results of the simulation. This integration allows the robotic system to efﬁciently infer knowledge about the physical world that would be tedious to specify by hand in a collection of logical statements. Our system will be available online1 for open use by researchers.",,Deeper Understanding of Vague Instructions through Simulated Execution (Extended Abstract),-,,,,NO,,,,,NO,,
S2119,1,Forward,bookSection,2020,"Schoen, Andrew; Henrichs, Curt; Strohkirch, Mathias; Mutlu, Bilge",Proceedings of the 33rd Annual ACM Symposium on User Interface Software and Technology,,https://doi.org/10.1145/3379337.3415872,"Collaborative robots promise to transform work across many industries and promote human-robot teaming as a novel paradigm. However, realizing this promise requires the understanding of how existing tasks, developed for and performed by humans, can be effectively translated into tasks that robots can singularly or human-robot teams can collaboratively perform. In the interest of developing tools that facilitate this process we present Authr, an end-to-end task authoring environment that assists engineers at manufacturing facilities in translating existing manual tasks into plans applicable for human-robot teams and simulates these plans as they would be performed by the human and robot. We evaluated Authr with two user studies, which demonstrate the usability and effectiveness of Authr as an interface and the benefits of assistive task allocation methods for designing complex tasks for human-robot teams. We discuss the implications of these findings for the design of software tools for authoring human-robot collaborative plans.",task allocation; visual programming; authoring; human-robot collaboration,Authr: A Task Authoring Environment for Human-Robot Teams,-,NO,,,YES,,,,,NO,,
S2120,1,Forward,journalArticle,2020,"Gloumakov, Yuri; Spiers, Adam J.; Dollar, Aaron M.",IEEE Transactions on Neural Systems and Rehabilitation Engineering,10.1109/TNSRE.2020.3040716,,"This article is the second in a two-part series analyzing human arm and hand motion during a wide range of unstructured tasks. In this work, we track the hand of healthy individuals as they perform a variety of activities of daily living (ADLs) in three ways decoupled from hand orientation: end-point locations of the hand trajectory, whole path trajectories of the hand, and straight-line paths generated using start and end points of the hand. These data are examined by a clustering procedure to reduce the wide range of hand use to a smaller representative set. Hand orientations are subsequently analyzed for the end-point location clustering results and subsets of orientations are identified in three reference frames: global, torso, and forearm. Data driven methods that are used include dynamic time warping (DTW), DTW barycenter averaging (DBA), and agglomerative hierarchical clustering with Ward’s linkage. Analysis of the end-point locations, path trajectory, and straight-line path trajectory identified 5, 5, and 7 ADL task categories, respectively, while hand orientation analysis identified up to 4 subsets of orientations for each task location, discretized and classified to the facets of a rhombicuboctahedron. Together these provide insight into our hand usage in daily life and inform an implementation in prosthetic or robotic devices using sequential control.",Task analysis; Protocols; Trajectory; robotics; Torso; Wrist; Hierarchical clustering; manipulation; motion analysis; Motion segmentation; prosthetics; Prosthetics; upper limb,Dimensionality Reduction and Motion Clustering During Activities of Daily Living: Decoupling Hand Location and Orientation,-,NO,,,YES,,,,,NO,,
S2121,1,Forward,conferencePaper,2019,"Sauer, Lukas; Henrich, Dominik; Martens, Wim",KI 2019: Advances in Artificial Intelligence,10.1007/978-3-030-30179-8_25,,"This paper describes an approach to intuitive robot programming, with the aim of enabling non-experts to generate sensor-based, structured programs. The core idea is to generate a variant of a finite state automaton (representing the program) by kinesthetic programming (physically guiding the robot). We use the structure of the automaton for control flow (loops and branching according to conditions of the environment). For programming, we forgo a visual user interface completely to determine to what extent this is viable. Our experiments show that non-expert users are indeed able to successfully program small sample tasks within reasonable time.",Programming; Robotics; Finite state automata,Towards Intuitive Robot Programming Using Finite State Automata,-,NO,,,YES,,,,,NO,,
S2122,1,Forward,conferencePaper,2018,"Tiberkak, Allal; Hentout, Abdelfetah; Belkhir, Abdelkader; Lemlouma, Tayeb; Bouabdallah, Ahmed",2018 3rd International Conference on Pattern Analysis and Intelligent Systems (PAIS),10.1109/PAIS.2018.8598482,,"Home emergencies affect greatly the health of inhabitants (mostly children, elderly and dependent persons). Nowadays, the deployment of smart home doesn't require purchasing expensive devices due to advances in communication and computing technologies. However, implementing a customized home emergencies management system is not an easy task. Indeed, it involves two disciplines: (i) Medicine and (ii) Information and Communication Technologies as mentioned by the World Health Organization.In this paper, we propose an approach that hybridizes the two concepts: FSM theory and set theory. The aim is being to facilitate (i) the design of the system behavior for the health professionals, (ii) the translation of the human readable format (emergency management rules) to a machine readable format for the computer specialist, and (iii) mainly the verification of the FSM properties for reducing human errors for both of them. The paper gives the formal description of the set-based FSM, properties that have to be taken into account and the representation of process algebra expressions. Finally, we describe a case study to illustrate the benefits of the proposed FSM.",Automata; Smart homes; Emergency services; Finite State Machine; Home emergency Management; Pain; Process Algebra; Set theory; Set Theory,"Set Theory-based FSM for Managing Home Emergencies Concept, Properties and Process Algebra",-,NO,,,YES,,,,,NO,,
S2123,1,Forward,journalArticle,2021,"Denoun, Brice; Leon, Beatriz; Hansard, Miles; Jamone, Lorenzo",IEEE Robotics & Automation Magazine,10.1109/MRA.2021.3066049,,"Robotic manipulation is fundamental to many realworld applications; however, it is an unsolved problem that remains a very active research area. New algorithms for robot perception and control are frequently proposed by the research community. These methods must be thoroughly evaluated in realistic conditions before they can be adopted by industry. This process can be extremely time consuming, mainly due to the complexity of integrating different hardware and software components.",Hardware; Software algorithms; Complexity theory; Robot sensing systems; Service robots; Grasping,Grasping Robot Integration and Prototyping: The GRIP Software Framework,-,NO,,,YES,,,,,NO,,
S2124,1,Forward,conferencePaper,2015,"Yang, Tsung-Hsien; Ko, Chiang-Sen; Huang, Jhih-Yuan; Lee, Wei-Po",2015 IEEE International Conference on Robotics and Biomimetics (ROBIO),10.1109/ROBIO.2015.7418771,,"Configuration of software services plays an important role in the design of robots. However, due to the complexity and diversity of the environments for developing robots, it is difficult to share and reuse robot code created by different providers. In this study, we present an ontology-based approach that exploits the standard web interface to develop reusable robotic services. Our approach integrates knowledge ontologies and several service functions for robot control, and focuses on service configuration. In addition, a ROS-based cloud environment is configured to allocate services and to perform service configuration. The proposed approach has been implemented and evaluated, and the results show that it can be used to build composite robotic services successfully.",Ontologies; Complexity theory; Service-oriented architecture; Planning; Robots; cloud robot; composite service; HTN planning; knowledge ontology; robotic service; service reconfiguration,Configuring reusable robot services in a cloud environment,-,NO,,,YES,,,,,NO,,
S2125,1,Forward,conferencePaper,2017,"Brunner, Sebastian G.; Steinmetz, Franz; Belder, Rico; Dömel, Andreas",RoboCup 2016: Robot World Cup XX,10.1007/978-3-319-68792-6_29,,"There are many application fields for robotic systems including service robotics, search and rescue missions, industry and space robotics. As the scenarios in these areas grow more and more complex, there is a high demand for powerful tools to efficiently program heterogeneous robotic systems. Therefore, we created RAFCON, a graphical tool to develop robotic tasks and to be used for mission control by remotely monitoring the execution of the tasks. To define the tasks, we use state machines which support hierarchies and concurrency. Together with a library concept, even complex scenarios can be handled gracefully. RAFCON supports sophisticated debugging functionality and tightly integrates error handling and recovery mechanisms. A GUI with a powerful state machine editor makes intuitive, visual programming and fast prototyping possible. We demonstrated the capabilities of our tool in the SpaceBotCamp national robotic competition, in which our mobile robot solved all exploration and assembly challenges fully autonomously. It is therefore also a promising tool for various RoboCup leagues.",,RAFCON: A Graphical Tool for Task Programming and Mission Control,-,NO,,,YES,,,,,NO,,
S2126,1,Forward,webpage,,,,,https://patents.google.com/patent/US10414046B1/en,,,,NO,,,,NO,,,,,NO,,
S2127,1,Forward,conferencePaper,2020,"Steinbrink, Marco; Koch, Philipp; May, Stefan; Jung, Bernhard; Schmidpeter, Michael","Proceedings of the 2020 4th International Conference on Vision, Image and Signal Processing",10.1145/3448823.3448857,https://doi.org/10.1145/3448823.3448857,"In this paper, a novel state machine for mobile robots is described that enables a direct use for exploration and inspection tasks. It offers a graphical user interface (GUI) to supervise the process and to issue commands if necessary. The state machine was developed for the open-source framework Robot Operating System (ROS) and can interface arbitrary algorithms for navigation and exploration. Interfaces to the commonly used ROS navigation stack and the explore_lite package are already included and can be utilized. In addition, routines for mapping and inspection can be added freely to adapt to the area of application. The state machine features a teleoperation mode to which it changes as soon as a respective command was issued. It also implements a software emergency stop and multiplexes all movement commands to the motor controller. To show the state machine's capabilities several simulations and real-world experiments are described in which it was used.",Inspection; State Machine; Exploration; Mobile Robotics,State Machine for Arbitrary Robots for Exploration and Inspection Tasks,-,,,,YES,,NO,,,NO,,
S2128,1,Forward,thesis,2018,"Huang, Justin",,,https://digital.lib.washington.edu:443/researchworks/handle/1773/43350,"Mobile manipulator robots have the potential to help people in a variety of unstructured scenarios, such as in households or in the service industry. However, with so many possible scenarios, roboticists cannot pre-program every task the robot needs to do. Instead, we need tools that make robot programming simpler, faster, and accessible to a wider audience of programmers. To this end, this dissertation presents research on two main approaches to robot programming for non-expert users: direct programming and programming by imitation. These approaches, and the technologies that support them, are situated in a conceptual framework comprising three key components: 1) perception, 2) motion specification, and 3) task scripting. In the realm of perception, we present a user-friendly system for specifying and locating task-relevant landmarks and a novel, state-of-the-art shelf detection algorithm. In the realm of motion specification, we enhanced existing programming by demonstration systems and created a new system for programming robots by visual imitation of a human demonstrator. Lastly, we developed a task scripting system that was deployed on a commercial robot. Throughout our work, we used system-level experiments, user studies, and case studies to show that non-roboticists could quickly learn to use our systems and program useful robot tasks. We conclude by describing possible extensions to our framework and envisioning directions for future work.",,,NO,,,,YES,,,,,NO,,
S2129,1,Forward,conferencePaper,2017,"Huang, Justin",Proceedings of the Companion of the 2017 ACM/IEEE International Conference on Human-Robot Interaction,10.1145/3029798.3034804,https://doi.org/10.1145/3029798.3034804,"Programming mobile manipulator robots requires specialized knowledge of robot perception, manipulation, and software frameworks. This puts robot programming out of reach for programmers who have not invested the time to learn these skills. The goal of our research is to make it possible for all programmers to develop applications for mobile manipulators such as clearing a table, fetching items, or playing games with people. This extended abstract describes our current work on Code3, a framework that all programmers can use to program robots. A user study we conducted showed that non-roboticist programmers were able to use our system to program a PR2 robot to clear a table and retrieve snacks. We also discuss our plans to extend this system to make it more useful and usable for real-world use cases.",end-user programming; mobile manipulation; programming by demonstration; programming tools,Enabling Rapid End-to-End Programming of Mobile Manipulators,-,NO,,,YES,,,,,NO,,
S2130,1,Forward,conferencePaper,2020,"Antakli, André; Spieldenner, Torsten; Köster, Marcel; Groß, Julian; Herrmann, Erik; Rubinstein, Dmitri; Spieldenner, Daniel; Zinnikus, Ingo",Web Information Systems and Technologies,10.1007/978-3-030-61750-9_3,,"For years, the manufacturing industry has been investing substantial amounts of research and development work for the implementation of hybrid teams of human workers and robotic units. The composition of hybrid teams requires an optimal coordination of individual players with fundamentally different characteristics and skills. In this paper, we present a highly configurable simulation environment supporting end-users, e.g. manufacturing planners, to optimally prepare, evaluate and improve the collaboration of hybrid teams in the scope of production lines. For generating the optimal task assignment, a GPU-based high-performance optimizer is introduced into the simulation environment. The framework is embedded in a web-based distributed infrastructure that models and provides the involved components (digital human models, robots, visualization environment) as resources. We illustrate the approach with a use case originating from the aircraft industry.",Multi-agent systems; 3D simulation; Human robot collaboration; Linked Data,Optimized Coordination and Simulation for Industrial Human Robot Collaborations,-,NO,,,YES,,,,,NO,,
S2131,1,Forward,conferencePaper,2017,"Zhou, Haotian; Min, Huasong; Lin, Yunhan; Zhang, Shengnan",Intelligent Robotics and Applications,10.1007/978-3-319-65298-6_39,,"The intelligent robots have been participating in people’s work increasingly, and challenging to accomplish work autonomously with fully understand human intention through voice interaction. We proposed a robot architecture of hierarchical finite state machine (HFSM) for autonomous mobile manipulator which run on robot operating system (ROS). The system has the abilities to analyze user’s input information, communicate with user to obtain complete intention when the user’s intention is incomplete and transfer the intention to mission plan for executing of tasks. In this paper, we described the operation procedure of system and each component, and designed the experiment scenario to verify the feasibility of the proposed architecture. The experiments result showed our autonomous mobile manipulator achieve the high performance of automation of tasks.",Human-Robot Interaction; Autonomous mobile manipulator; Hierarchical Finite State Machine; Robot architecture,A Robot Architecture of Hierarchical Finite State Machine for Autonomous Mobile Manipulator,-,NO,,,YES,,,,,NO,,
S2132,1,Forward,journalArticle,2019,"Hrabia, Christopher-Eyk",,10.14279/depositonce-9337,https://depositonce.tu-berlin.de/handle/11303/10377,"Robots are leaving the friendly, well-structured world of automation and are facing the challenges of a dynamic world. The uncertain conditions in the dynamic world call for a high degree of robustness and adaptivity for individual robots as well as interactions between multiple robots and other system entities. The uncertainty makes it difficult for designers and engineers to anticipate all conditions, interactions, and side effects a system will have to deal with while the system is specified and developed. Furthermore, implicit and explicit coordination is required to perform a joint goal with multiple entities in a multi-robot system. Enabling scalability for multi-robot applications can be especially supported by means of implicit and decentralised coordination approaches. Nevertheless, robots that adapt to the dynamic environment and coordinate themselves still have to pursue their given tasks or goals.   This thesis researches how multi-purpose, mobile, multi-robot systems can be enhanced to operate more adaptively in dynamic environments. This is done by analysing and exploring the combination of so far separated research directions of goal-driven decision-making and planning as well as self-adaptation and self-organisation.  The presented hybrid decision-making and planning framework is integrated into the popular robotic middleware \gls{ROS}. The solution combines symbolic planning with reactive behaviour networks, automated task delegation, reinforcement learning, and pattern-based selection of suitable self-organisation mechanisms. On that account, it brings together the advantages of bottom-up and top-down oriented architectures for task-level control of multi-robot systems. The developed framework enables a coherent and integrated design and implementation of decision-making and planning as well as coordination application logic within one software ecosystem that features a common domain model and a modular architecture. This results in a simplification of the development of adaptive multi-purpose multi-robot systems by avoiding system discontinuities and enabling a holistic view on the actual implementation.   The presented approach has been successfully evaluated in various research projects and international competitions in the field of robotics and multi-agent systems.",,Self-adaptive and self-organised planning and decision-making for multi-robot systems,-,NO,,,YES,,,,,NO,,
S2133,1,Forward,journalArticle,2022,"Valner, Robert; Wanna, Selma; Kruusamäe, Karl; Pryor, Mitch",ACM Transactions on Human-Robot Interaction,10.1145/3522580,https://doi.org/10.1145/3522580,"To facilitate continuous development of novel HRI systems, it is beneficial to have tools that enable quick adjustments, flexibility, or re-invention of the human interfaces when system requirements change due to updates in the state-of-the-art, application domain, etc. Thus, modularity is a key design principle which promotes software reuse, scalability, and reduces development time and cost. Hence, a robot’s autonomous capabilities should not depend on the command interface and should be decoupled via a common format that possesses the descriptive capabilities for outlining tasks and has a sensible syntax for HRI. In this paper, we propose the Unified Meaning Representation Format (UMRF), which provides the syntax and semantics for passing both simple and complex commands modelled as control flow graphs. UMRF is a standalone meaning representation container that supports embedding other meaning representation formalisms, such as predicate-argument semantics and graphical meaning representation formats, making it adoptable as a standard task description format for semi-autonomous systems in HRI domains. In this article, we define the UMRF syntax and semantics, summarize its unique aspects relative to related task description formats, and demonstrate its descriptiveness by navigating a robot via concurrent (e.g., gestures and speech) and interchangeable input systems (e.g., Google Assistant, Amazon Alexa).",software modularity; human-robot collaboration; task description languages,Unified Meaning Representation Format (UMRF) - A Task Description and Execution Formalism for HRI,-,NO,,,YES,,,,,NO,,
S2134,1,Forward,book,2020,"Chung, Michael Jae-Yoon; Cakmak, Maya",,,,"Creating natural and autonomous interactions with social robots requires rich, multi-modal sensory input from the user. Writing interactive robot programs that make use of this input can demand tedious and error-prone tuning of program parameters, such as tuning thresholds on noisy sensory streams for detecting whether the robot's user is engaged or not. This tuning process dealing with low-level streams and parameters makes programming of social robots time-consuming and inaccessible for people who could benefit the most from unique use cases of social robots. To address this challenge, we propose the use of iterative program repair, where programmers create an initial program sketch in our new Social Robot Program Transition Sketch Language (SoRTSketch), a domain-specific language that supports expressing uncertainties related to thresholds in transition functions. The program is then iteratively repaired using Bayesian inference based on corrections of interaction traces that are either provided by the programmer or derived from implicit feedback given by the user during the interaction. Based on experiments with a human simulator and with 10 human users, we demonstrate the ease and effectiveness of this approach in improving social robot programming and program outputs that represent three common human-robot interaction patterns. We also show how our approach helps programs adapt to environment changes over time.",,,NO,,,,YES,,,,,NO,,
S2135,1,Forward,conferencePaper,2019,"Rollenhagen, Matthias; Lutz, Matthias; Shaik, Nayabrasul; Andrews, Kevin; Steinau, Sebastian; Reichert, Manfred; Schlegel, Christian",Proceedings of the 2019 3rd International Symposium on Computer Science and Intelligent Control,10.1145/3386164.3387292,https://doi.org/10.1145/3386164.3387292,"The dynamic of today's markets demand automation systems that are flexible enough for being adapted to rapid requirement changes. The presented work describes how to make robotic systems more flexible in order to cope with changing processes, products, and environments. We propose flexibilizing service robot task modeling and assignment by coupling them with process management systems and utilize them similarly to human workers. Additionally, a variability management workflow is presented, for not fixing systems at design-time. Instead, variability is left open intentionally and reduced gradually. The combination of these two approaches enables users (e.g. workers) to adapt their robot systems to requirement changes by user-friendly tools and provides flexible service robot allocation.",Service Robot; Software Systems; Variability Management,Towards Flexible Process Automation: An Approach for Flexible Service Robot Adaptation and Allocation,-,NO,,,YES,,,,,NO,,
S2136,1,Forward,thesis,2017,"Munera Sánchez, Eduardo",,,https://riunet.upv.es/handle/10251/88404,"Home environments are changing as more technological devices are used to improve daily life. The growing demand for high technology in our homes means that robot integration will soon arrive. Home devices are evolving in a connected paradigm in which data flows to perform efficient home task management. Heterogeneous home robots connected in a network can establish a workflow that complements their capabilities and so increases performance within a mission execution. This work addresses the definition and requirements of a robot-group mission in the home context. The proposed solution relies on a network of smart resources, which are defined as cyber-physical systems that provide high-level service execution. Firstly, control middleware architecture is introduced as the execution base for the Smart resources. Next, the Smart resource topology and its integration within a robotic platform are addressed. Services supplied by Smart resources manage their execution through a robot behavior architecture. Robot behavior execution is hierarchically organized through a mission definition that can be established as an individual or collective approach. Environment model and interaction tasks characterize the operation capabilities of each robot within a mission. Mission goal achievement in a heterogeneous group is enhanced through the complement of the interaction capabilities of each robot. To offer a clearer explanation, a full use case is presented in which two robots cooperate to execute a mission and the previously detailed steps are evaluated. Finally, some of the obtained results are discussed as conclusions and future works is introduced.",,,NO,,,,YES,,,,,NO,,
S2137,1,Forward,thesis,2019,"Liang, Ying Siu",,,https://tel.archives-ouvertes.fr/tel-02275084,"The increasing presence of robots in industries has not gone unnoticed.Cobots (collaborative robots) are revolutionising industries by allowing robots to work in close collaboration with humans.Large industrial players have incorporated them into their production lines, but smaller companies hesitate due to high initial costs and the lack of programming expertise.In this thesis we introduce a framework that combines two disciplines, Programming by Demonstration and Automated Planning, to allow users without programming knowledge to program a robot.The user constructs the robot's knowledge base by teaching it new actions by demonstration, and associates their semantic meaning to enable the robot to reason about them.The robot adopts a goal-oriented behaviour by using automated planning techniques, where users teach action models expressed in a symbolic planning language.In this thesis we present preliminary work on user experiments using a Baxter Research Robot to evaluate our approach.We conducted qualitative user experiments to evaluate the user's understanding of the symbolic planning language and the usability of the framework's programming process.We showed that users with little to no programming experience can adopt the symbolic planning language, and use the framework.We further present our work on a Programming by Demonstration system used for organisation tasks.The system includes a goal inference model to accelerate the programming process by predicting the user's intended product configuration.",,,NO,,,,YES,,,,,NO,,
S2138,1,Forward,webpage,,,,,https://eprints.qut.edu.au/229145/,,,,NO,,,,NO,,,,,NO,,
S2139,1,Forward,webpage,,,,,https://www.proquest.com/openview/267e75830956b1cddc6d0298af1706ea/1?pq-origsite=gscholar&cbl=18750&diss=y,"Explore millions of resources from scholarly journals, books, newspapers, videos and more, on the ProQuest Platform.",,,NO,,,,NO,,,,,NO,,
S2140,1,Forward,thesis,2015,"de Graaf, Maartje",,,,"Over the most recent decades, the field of social robotics has advanced rapidly. There are a growing number of different types of robots, and their roles within society are expanding. This dissertation has argued that investigating the long-term acceptance of social robots in home environments is necessary for the successful diffusion of these types of robots within society. The findings of this dissertation indicate that usefulness is a requisite for social robot acceptance and that certain additional important acceptance variables may further explain why people continue to use a social robot in their own homes. These additional acceptance variables show that the acceptance of a social robot for domestic use increases when future users believe that they possess the necessary skills to use a social robot, when they perceive that having such a robot enhances their status, and when they expect that such a robot provides more enjoyable interactions, behaves less sociably, and causes fewer privacy concerns. However, when examining the long-term use of social robots in home environments, it appears that the importance of the acceptance variables in explaining social robot acceptance changes over time, shifting from control beliefs to attitudinal beliefs. It is believed that the importance of the acceptance variables depends on the development stage in which the technology is located (Peters, 2011). When people gain experiences with a social robot, other acceptance variables explain people’s intention to continue using it compared to the acceptance variables that explained their initial adoption. Concerning human-robot relationships, the studies presented in this dissertation indicate that people are initially reluctant to build a relationship with a robot and deny the possibility that such a relationship will occur for them. However, after people have adopted a social robot and have begun to use it in their own homes, some people acknowledge that they have established some type of relationship with the robot. However, not all people seem to appreciate a robot’s social behavior, and it seems that people remain unfamiliar with the possibilities of human-robot relationships and that the actual use and interactions with social robots reveal what types of relationships people are willing to establish with these robots. The findings of this dissertation may help both researchers and developers of social robots to further develop an integrated theory or model of social robot acceptance that can describe and explain this acceptance in more real-world contexts, such as the home.",,,NO,,,,YES,,,,,NO,,
S2141,1,Forward,conferencePaper,2020,"Zieliński, Cezary","Advanced, Contemporary Control",10.1007/978-3-030-50936-1_39,,"The paper assumes the composition of robotic systems out of embodied agents. It presents a utilitarian decomposition of an agent into subsystems. Both subsystem behaviours and their selection can be described in terms of Finite State Automatons (FSA), thus Hierarchic FSAs result. Mathematical formalisation of this description enables the verification of correctness of some aspects of system operation.",Hierarchical finite state automaton; Hierarchical finite state machine; Robotic system specification methodology,Specification of Agent Based Robotic Systems Using Hierarchical Finite State Automatons,-,NO,,,YES,,,,,NO,,
S2142,1,Forward,journalArticle,,"Han, Zhao",,,,,,"Robot Explanations: Preferences, Generation, and Communication",-,,,,NO,,,,,NO,,
S2143,1,Forward,conferencePaper,2017,"Munera-Sánchez, Eduardo; Poza-Lujan, Jose-Luis; Posadas-Yagüe, Juan-Luis; Simó Ten, José Enrique; Blanes Noguera, Francisco",International Journal of Soft Computing And Artificial Intelligence (Online),,https://riunet.upv.es/handle/10251/152272,"[EN] Robot behavior definition aims to classify and specify the robot tasks execution. Behavior architecture design is crucial for proper robot operation performance. According to this, this work aims to establish a robot behavior architecture based on distributed intelligent services. Therefore, behavior definition is set in a high-level delegating the task execution to distributed services provided by network abstractions characterized as Smart Resources. In order to provide a mechanism to measure the performance of this architecture, an evaluation mechanisms based on a service performance composition is introduced. In order to test this proposal it is designed a real use case implementing the proposed robot behavior architecture on a real navigation task.",,Robot Behavior Architecture Based on Smart Resource Service Execution,-,NO,,,YES,,,,,NO,,
S2144,1,Forward,journalArticle,2018,"Koh, Senglee",Electronic Theses and Dissertations,,https://stars.library.ucf.edu/etd/6010,,,Exploring Natural User Abstractions For Shared Perceptual Manipulator Task Modeling & Recovery,-,NO,,,YES,,,,,NO,,
S2145,1,Forward,conferencePaper,2021,"Duan, Qiang; Zhu, Xiangyu; Feng, Luoluo; Li, Xue; Yin, Qingshan; Zhao, Jing; Gao, Ming; Wang, Longlong; Luo, Qingcai; Wang, Jianhua; Li, Rui",2021 33rd Chinese Control and Decision Conference (CCDC),10.1109/CCDC52312.2021.9602607,,"Robot navigation is one of the key features in robot system, which can be done in several ways. Different approaches show both strength and weakness, and the choice usually relies on the targeted scenario. The current work proposes a robot navigation system that works indoor for a certain specified task. In the system, augmented reality, SLAM (simultaneous localization and mapping) and deep learning are used to guide a robot. Augmented reality acts an interface bridging the physical and virtual world together. SLAM offers the robot the ability to sense the physical world. Deep learning enables the robot to recognize objects. As a result, a robot can follow the expected routine to get a task done without colliding.",Task analysis; Convolution; Navigation; Deep learning; SLAM; Simultaneous localization and mapping; Augmented Reality; Augmented reality; Deep Learning,Augmented Reality and Deep Learning Guided Task Oriented Robot,-,NO,,,YES,,,,,NO,,
S2146,1,Forward,thesis,2021,"Wanna, Selma Liliane",,,https://repositories.lib.utexas.edu/handle/2152/87273,"This thesis investigates the performance of state-of-the-art neural models on a  low resource semantic parsing task. This task required the models to convert natural  language commands directed at a robot into Unified Meaning Representation Format  (UMRF) structures. UMRF structures are standalone Meaning Representation (MR)  containers that support embedding predicate-argument semantics and graphical MR  formats. The structure was design for semi-autonomous systems in Human Robot  Interaction (HRI) domains. The UMRF formalism is both new and novel, thus there  is a scarcity of annotated UMRF data and thus a lack of available training data. For  this project, the Examine in light task from the ALFRED dataset was selected as the  corpora to annotate labeled UMRF training and validation examples. 1,010 and 100  training and validation datasets were collected respectively. Thereafter, the following  models were tested on the low resource semantic parsing task: sequence-to-sequence,  CopyNet, and transformer architectures. Of the three designs, the CopyNet model performed the best with a BLEU score of 0.891 and an accuracy of 61.3%. Once  the design was finalized, the CopyNet model was integrated into a ROS2 software  package, allowing the larger robotics community to access the semantic parser.",,,NO,,,,YES,,,,,NO,,
S2147,1,Forward,conferencePaper,2022,"Hart, Stephen; Quispe, Ana Huamán; Lanighan, Michael W.; Gee, Seth",2022 International Conference on Robotics and Automation (ICRA),10.1109/ICRA46639.2022.9812082,,"This paper presents recent advances to the Affordance Template (AT) task description language. Affordance Templates provide standardized, easy-to-use tools for defining robot manipulation tasks that provide a high level of augmented reality capabilities to facilitate human-in-the-loop operation, but can also be used to support robot autonomy when coupled with various planning tools. While initially defined in terms of end effector waypoint sequences for bimanual robots, such as the NASA Valkyrie and Robonaut 2, this paper extends the original specification to support integrated mobile manipulation, object-centric template definitions, autonomous grasp determination, and integration with custom and off-the-shelf collision free motion planners. ATs have proved highly adaptable to new robots and new domains by both the authors and third-party groups, and have been used in numerous contexts for NASA, DOD, and industry. As such, we believe that the AT framework provides a strong foundation for robot development in multiple real-world contexts that can be increasingly built upon and expanded to meet the challenges of many new applications.",Software; Visualization; NASA; Planning; Service robots; Behavioral sciences; Affordances,Generalized Affordance Templates for Mobile Manipulation,-,NO,,,YES,,,,,NO,,
S2148,1,Forward,patent,2022,"Morey, Christopher; Wilson, Robert; Souliere, Jonathan",,,https://patents.google.com/patent/US11338433B2/en,,configuration; environment; information; robotic device; task,,NO,,,,YES,,,,,NO,,
S2149,1,Forward,webpage,,,,,https://www.proquest.com/openview/b08141eb12ccf8f7caf38990edeae540/1?pq-origsite=gscholar&cbl=18750,"Explore millions of resources from scholarly journals, books, newspapers, videos and more, on the ProQuest Platform.",,,NO,,,,NO,,,,,NO,,
S2150,1,Forward,thesis,2020,"Zeng, Zhen",,,http://deepblue.lib.umich.edu/handle/2027.42/155073,"Autonomous robots have the potential to assist people to be more productive in factories, homes, hospitals, and similar environments. Unlike traditional industrial robots that are pre-programmed for particular tasks in controlled environments, modern autonomous robots should be able to perform arbitrary user-desired tasks. Thus, it is beneficial to provide pathways to enable users to program an arbitrary robot to perform an arbitrary task in an arbitrary world. Advances in robot Programming by Demonstration (PbD) has made it possible for end-users to program robot behavior for performing desired tasks through demonstrations. However, it still remains a challenge for users to program robot behavior in a generalizable, performant, scalable, and intuitive manner. In this dissertation, we address the problem of robot programming by demonstration in a declarative manner by introducing the concept of Semantic Robot Programming (SRP). In SRP, we focus on addressing the following challenges for robot PbD: 1) generalization across robots, tasks, and worlds, 2) robustness under partial observations of cluttered scenes, 3) efficiency in task performance as the workspace scales up, and 4) feasibly intuitive modalities of interaction for end-users to demonstrate tasks to robots. Through SRP, our objective is to enable an end-user to intuitively program a mobile manipulator by providing a workspace demonstration of the desired goal scene. We use a scene graph to semantically represent conditions on the current and goal states of the world. To estimate the scene graph given raw sensor observations, we bring together discriminative object detection and generative state estimation for the inference of object classes and poses. The proposed scene estimation method outperformed the state of the art in cluttered scenes. With SRP, we successfully enabled users to program a Fetch robot to set up a kitchen tray on a cluttered tabletop in 10 different start and goal settings. In order to scale up SRP from tabletop to large scale, we propose Contextual-Temporal Mapping (CT-Map) for semantic mapping of large scale scenes given streaming sensor observations. We model the semantic mapping problem via a Conditional Random Field (CRF), which accounts for spatial dependencies between objects. Over time, object poses and inter-object spatial relations can vary due to human activities. To deal with such dynamics, CT-Map maintains the belief over object classes and poses across an observed environment. We present CT-Map semantically mapping cluttered rooms with robustness to perceptual ambiguities, demonstrating higher accuracy on object detection and 6 DoF pose estimation compared to state-of-the-art neural network-based object detector and commonly adopted 3D registration methods. Towards SRP at the building scale, we explore notions of Generalized Object Permanence (GOP) for robots to search for objects efficiently. We state the GOP problem as the prediction of where an object can be located when it is not being directly observed by a robot. We model object permanence via a factor graph inference model, with factors representing long-term memory, short-term memory, and common sense knowledge over inter-object spatial relations. We propose the Semantic Linking Maps (SLiM) model to maintain the belief over object locations while accounting for object permanence through a CRF. Based on the belief maintained by SLiM, we present a hybrid object search strategy that enables the Fetch robot to actively search for objects on a large scale, with a higher search success rate and less search time compared to state-of-the-art search methods.",,,NO,,,,YES,,,,,NO,,
S2151,1,Forward,webpage,,,,,https://www.proquest.com/openview/364cc7016a6561bb9f1846d0bbc94e85/1?pq-origsite=gscholar&cbl=18750,"Explore millions of resources from scholarly journals, books, newspapers, videos and more, on the ProQuest Platform.",,,NO,,,,NO,,,,,NO,,
S2152,1,Forward,webpage,,,,,https://www.proquest.com/openview/f232ddd8c19f45240bf448fefbb263b3/1?pq-origsite=gscholar&cbl=18750&diss=y,"Explore millions of resources from scholarly journals, books, newspapers, videos and more, on the ProQuest Platform.",,,NO,,,,NO,,,,,NO,,
S2153,1,Forward,journalArticle,2016,"Stückler, Jörg; Schwarz, Max; Behnke, Sven",Frontiers in Robotics and AI,10.3389/frobt.2016.00058,http://journal.frontiersin.org/article/10.3389/frobt.2016.00058/full,,,"Mobile Manipulation, Tool Use, and Intuitive Interaction for Cognitive Service Robot Cosero",-,NO,,,YES,,,,,NO,,
S2154,1,Forward,journalArticle,,"Wang, Tianyi; Huo, Ke; Han, Muzhi; McArthur, Daniel; An, Ze; Cappeleri, David; Ramani, Karthik",,,,"The emerging simultaneous localization and mapping (SLAM) techniques enable robots with spatial awareness of the physical world. However, such awareness remains at a geometric level. We propose an approach for quickly constructing a smart environment with semantic labels to enhance the robot with spatial intelligence. Essentially, we embed UWB-based distance sensing IoT devices into regular items and treat the robot as a dynamic node in the IoT network. By leveraging the self-localization from the robot node, we resolve the locations of IoT devices in the SLAM map. We then exploit the semantic knowledge from the IoT to enable the robot to navigate and interact within the smart environment. With the IoT nodes deployed, the robot can adapt to environments that are unknown or that have timevarying conﬁgurations. Through our experiments, we demonstrated that our method supports an object level of localization accuracy (∼ 0.28m), a shorter discovery and localization time (118.6s) compared to an exhaustive search, and an effective navigation strategy for a global approach and local manipulation. Further, we demonstrated two use case scenarios where a service robot (i) executes a sequence of user-assigned tasks in a smart home and (ii) explores multiple connected regions using IoT landmarks.",,Autonomous Robotic Exploration and Mapping of Smart Indoor Environments With UWB-IoT Devices,-,NO,,,NO,,,,,NO,,
S2155,1,Forward,conferencePaper,2016,"Maciaś, Mateusz; Główka, Jakub; Kaczmarczyk, Artur; Solecki, Paweł; Tabaka, Sebastian","Challenges in Automation, Robotics and Measurement Techniques",10.1007/978-3-319-29357-8_41,,Fiducial markers are used in many applications like augmented reality or robotics. In this paper we try to improve marker detection in robotics application by implementing algorithm for controlling camera exposure. Method of measuring quality of marker is introduced. Exposure control algorithm is implemented and tested. Test results are analyzed.,Augmented reality; Automatic exposure control; Markers,Exposure Control Algorithm for Maker Detection in Robotic Application,-,NO,,,YES,,,,,NO,,
S2156,1,Forward,conferencePaper,2015,"Rueben, Matthew; Smart, William D.",Advances in Visual Computing,10.1007/978-3-319-27863-6_78,,"As robots begin to enter our homes and workplaces, they will have to deal with the devices and appliances that are already there. These devices are invariably designed with human perception and manipulation abilities in mind. Unfortunately, this often makes them hard for robots to interact with autonomously. Control elements, such as buttons, switches, and knobs, are often hard to identify with current sensors. Even when they are found, it is often not clear how they should be manipulated to achieve a specific goal without extensive background knowledge of the specific device and task.",Control Type; Coordinate Frame; Human Operator; Kinect Sensor; Point Cloud,Shared Autonomy Perception and Manipulation of Physical Device Controls,-,NO,,,YES,,,,,NO,,
S2157,1,Forward,webpage,,,,,https://www.proquest.com/openview/c8760a5d492f588bf03bfede2f6dadf7/1?pq-origsite=gscholar&cbl=18750&diss=y,"Explore millions of resources from scholarly journals, books, newspapers, videos and more, on the ProQuest Platform.",,,NO,,,,NO,,,,,NO,,
S2158,1,Forward,webpage,,,,,https://www.infona.pl/resource/bwmeta1.element.baztech-73d97bd9-4fca-4868-a9c5-56548ededed6,,,,NO,,,,NO,,,,,NO,,
S2159,1,Forward,journalArticle,2022,"Delgado Vega, Rodrigo Alexis",,,https://repositorio.uchile.cl/handle/2250/185690,"Repositorio académico de la Universidad de Chile. Tesis, artículos y libros publicados en formato digital con distintos niveles de acceso",,Fuzz testing aplicado en máquinas de estado jerárquicas de Smach para pruebas de comportamientos robóticos,-,NO,,,YES,,,,,NO,,
S2160,1,Forward,journalArticle,2020,"Guerra, Edmundo; Bolea, Yolanda; Gamiz, Javier; Grau, Antoni",Sensors,10.3390/s20020358,https://www.mdpi.com/1424-8220/20/2/358,"Monitoring and analysis of open air basins is a critical task in waste water plant management. These tasks generally require sampling waters at several hard to access points, be it real time with multiparametric sensor probes, or retrieving water samples. Full automation of these processes would require deploying hundreds (if not thousands) of fixed sensors, unless the sensors can be translated. This work proposes the utilization of robotized unmanned aerial vehicle (UAV) platforms to work as a virtual high density sensor network, which could analyze in real time or capture samples depending on the robotic UAV equipment. To check the validity of the concept, an instance of the robotized UAV platform has been fully designed and implemented. A multi-agent system approach has been used (implemented over a Robot Operating System, ROS, middleware layer) to define a software architecture able to deal with the different problems, optimizing modularity of the software; in terms of hardware, the UAV platform has been designed and built, as a sample capturing probe. A description on the main features of the multi-agent system proposed, its architecture, and the behavior of several components is discussed. The experimental validation and performance evaluation of the system components has been performed independently for the sake of safety: autonomous flight performance has been tested on-site; the accuracy of the localization technologies deemed as deployable options has been evaluated in controlled flights; and the viability of the sample capture device designed and built has been experimentally tested.",industrial UAV; multi-agent systems; robotics; water sampling,Design and Implementation of a Virtual Sensor Network for Smart Waste Water Monitoring,-,NO,,,NO,,,,,NO,,
S2161,1,Forward,journalArticle,2020,"Vaidis, Maxime; Otis, Martin J.-D.",Intelligent Service Robotics,10.1007/s11370-020-00315-w,https://doi.org/10.1007/s11370-020-00315-w,"Different geopolitical conflicts of recent years have led to mass migration of several civilian populations. These migrations take place in militarized zones, indicating real danger contexts for the populations. Indeed, civilians are increasingly targeted during military assaults. Defense and security needs have increased; therefore, there is a need to prioritize the protection of migrants. Very few or no arrangements are available to manage the scale of displacement and the protection of civilians during migration. In order to increase their security during mass migration in an inhospitable territory, this article proposes an assistive system using a team of mobile robots, labeled a rover swarm that is able to provide safety area around the migrants. We suggest a coordination algorithm including CNN and fuzzy logic that allows the swarm to synchronize their movements and provide better sensor coverage of the environment. Implementation is carried out using on a reduced scale rover to enable evaluation of the functionalities of the suggested software architecture and algorithms. Results bring new perspectives to helping and protecting migrants with a swarm that evolves in a complex and dynamic environment.",CNN; Interaction; Migrants; Mobile robots; Swarm,Toward a robot swarm protecting a group of migrants,-,NO,,,NO,,,,,NO,,
S2162,1,Forward,journalArticle,2021,"Camargo, Caio; Gonçalves, José; Conde, Miguel Á; Rodríguez-Sedano, Francisco J.; Costa, Paulo; García-Peñalvo, Francisco J.",Sensors,10.3390/s21124031,https://www.mdpi.com/1424-8220/21/12/4031,"This paper presents a systematic literature review (SLR) about realistic simulators that can be applied in an educational robotics context. These simulators must include the simulation of actuators and sensors, the ability to simulate robots and their environment. During this systematic review of the literature, 559 articles were extracted from six different databases using the Population, Intervention, Comparison, Outcomes, Context (PICOC) method. After the selection process, 50 selected articles were included in this review. Several simulators were found and their features were also analyzed. As a result of this process, four realistic simulators were applied in the review’s referred context for two main reasons. The first reason is that these simulators have high fidelity in the robots’ visual modeling due to the 3D rendering engines and the second reason is because they apply physics engines, allowing the robot’s interaction with the environment.",actuators; education; physics engine; realistic simulators; robotics; sensors,Systematic Literature Review of Realistic Simulators Applied in Educational Robotics Context,-,NO,,,NO,,,,,NO,,
S2163,1,Forward,conferencePaper,2018,"Zhang, Ziran; Yao, Zixuan; Sun, Qinbo; Qian, Huihuan",2018 IEEE International Conference on Robotics and Biomimetics (ROBIO),10.1109/ROBIO.2018.8664880,,"Autonomous Surface Vehicles (ASVs) provide an effective way to actualize applications such as environment monitoring, search and rescue, and scientific researches. However, the conventional ASVs depends overly on the stored energy. Hybrid Sailboat, mainly powered by the wind, can solve this problem by using an auxiliary propulsion system. The electric energy cost of Hybrid Sailboat needs to be optimized to achieve the ocean automatic cruise mission. Based on adjusted setting on sails and rudders, this paper seeks the optimal trajectory for autonomic cruising to reduce the energy cost by changing the heading angle of sailing upwind. The experiment results validate the heading angle accounts for energy cost and the trajectory with the best heading angle saves up to 23.7% than other conditions. Furthermore, the energy-time line can be used to predict the energy cost for long-time sailing.",Bars; Boats; Force; Oceans; Propellers; Trajectory,Energy Optimization of Automatic Hybrid Sailboat,-,NO,,,NO,,,,,NO,,
S2164,1,Forward,journalArticle,2020,"Tran, Ngo-Quoc-Huy; Prodan, Ionela; Grøtli, Esten Ingar; Lefèvre, Laurent",Ocean Engineering,10.1016/j.oceaneng.2020.107706,https://www.sciencedirect.com/science/article/pii/S0029801820306958,"This paper deals with the motion planning problem for surface vehicles in the presence of varying environmental disturbances. The goal is to steer the vehicles from an initial to a final destination while ensuring connectivity and avoiding collision with fixed and moving obstacles. The novelty lies in the coherent combination among various ingredients for path generation and potential field constructions for collision avoidance and connectivity maintenance, all gathered in a distributed NMPC (Nonlinear Model Predictive Control) framework: i) LOS (Line-of-Sight) guidance and RRT* (optimal Rapidly-exploring Random Tree) algorithms are employed for generating a collision-free path considering static surroundings; ii) on-off barrier functions activate the proposed potential field components which are in the view range of the agents, hence ensuring safe navigation in a dynamic coastal environment with a low computation demand; iii) a NDO (Nonlinear Disturbance Observer) is integrated in the NMPC design to compensate the environmental disturbances. The proposed algorithm is validated through simulations and comparisons carried out over a benchmark for USVs (Unmanned Surface Vehicles) safe navigation in the Trondheim fjord, Norway.",Connectivity maintenance and collision avoidance; NMPC; Nonlinear disturbance observer; Potential field constructions; Surface vehicles,Safe navigation in a coastal environment of multiple surface vehicles under uncertainties: A combined use of potential field constructions and NMPC,-,NO,,,NO,,,,,NO,,
S2165,1,Forward,journalArticle,2018,"Li, Zhong-Xing; Huang, Jian-Yu; Jiang, Hong; Xue, Hong-Tao",Journal of Applied Science and Engineering,10.6180/jase.201806_21(2).0012,http://jase.tku.edu.tw/articles/jase-201806-21-2-0012,"ABSTRACT To improve the performance of vehicles equipped with laterally interconnected air suspension (LIAS), a damper system is constructed based on multi-agent theory and Shapley value principle of cooperative game. The multi-agent control system consists of an information fusion agent, a ride comfort agent, a handling stability agent and a game coordination agent. The information fusion agent obtains vehicle status information from environment, and carries out the information transmission according to the requirements of other agents; on the basis of suspension dynamic deflection and its changing rate, the ride comfort agent indicates the intention of damping coefficients. The handling stability agent triggers the reasoning module according to the current interconnection state information, and indicates the intention of the damping coefficients by the vehicle roll angle, in which, the reasoning module is formed by the self-learning of fuzzy neural networks according to the damping coefficients optimized by genetic algorithm. The game coordination agent receives the intention of the damping coefficients from the above agents, then corrects the damping intention through the rules of cooperative game,and outputs the global optimum damping coefficients. Based on a bench test, a simulation model is established to perform the effectiveness of the multi-agent damper system proposed in this paper. The results have verified that the proposed multi-agent damper system not only improves ride comfort of vehicle with LIAS, but also restrains the roll motion of the vehicle body.",,Game Control of Multi-agent Damper System for Laterally Interconnected Air Suspension,-,NO,,,NO,,,,,NO,,
S2166,1,Forward,conferencePaper,2022,"Liu, Yuanchang; Anderlini, Enrico; Wang, Shuwu; Ma, Song; Ding, Zitian",Offshore Robotics,10.1007/978-981-16-2078-2_2,,"Ocean exploration has become one of the most important strategies for a sustainable development for our world. To better understand the ocean and make an efficient use of its resources, autonomous marine vehicles (AMVs) including both surface and underwater vehicles play an essential role to extend and accelerate the exploration capabilities. This chapter provides an in-depth review of the key technologies in the development of autonomous surface vehicles (ASVs) and autonomous underwater vehicles (AUVs), which are two main types of AMVs. With the illustration of some typical vehicle prototypes, the control methods and deployment strategies of ASVs and AUVs, especially the collaborative operation of these two types of vehicles, have been discussed to inspire a wide application of marine autonomy in future ocean explorations.",Artificial intelligence; Autonomous marine systems; Autonomous underwater vehicles; Marine robotics; Robust control; Unmanned surface vehicles,"Ocean Explorations Using Autonomy: Technologies, Strategies and Applications",-,NO,,,NO,,,,,NO,,
S2167,1,Forward,journalArticle,2019,"Huang, Zhijian; Liu, Xinze; Wen, Jiayi; Zhang, Guichen; Liu, Yihua",Advances in Materials Science and Engineering,10.1155/2019/7697143,https://www.hindawi.com/journals/amse/2019/7697143/,"The feedback PID method was mainly used for the navigating control of an unmanned surface vessel (USV). However, when the intelligent control era is coming now, the USV can be navigated more effectively. According to the USV character in its navigating control, this paper presents a parallel action-network ADHDP method. This method connects an adaptive controller parallel to the action network of the ADHDP. The adaptive controller adopts a RBF neural network approximation based on the Lyapunov stability analysis to ensure the system stability. The simulation results show that the parallel action-network ADHDP method has an adaptive control character and can navigate the USV more accurately and rapidly. In addition, this method can also eliminate the overshoot of the ADHDP controller when navigating the USV in various situations. Therefore, the adaptive stability design can greatly improve the navigating control and effectively overcome the ADHDP algorithm limitation. Thus, this adaptive control can be one of the intelligent ADHDP control methods. Furthermore, this method will be a foundation for the development of an intelligent USV controller.",,Adaptive Navigating Control Based on the Parallel Action-Network ADHDP Method for Unmanned Surface Vessel,-,NO,,,NO,,,,,NO,,
S2168,1,Forward,webpage,,,,,http://transport.chd.edu.cn/en/article/id/201805013,,,Game control of multi-agent damper system for laterally interconnected air suspension,NO,,,,NO,,,,,NO,,
S2169,1,Forward,journalArticle,2022,"Akram, Waseem; Casavola, Alessandro; Kapetanović, Nadir; Miškovic, Nikola",Sensors,10.3390/s22093525,https://www.mdpi.com/1424-8220/22/9/3525,"Aquaculture net pens inspection and monitoring are important to ensure net stability and fish health in the fish farms. Remotely operated vehicles (ROVs) offer a low-cost and sophisticated solution for the regular inspection of the underwater fish net pens due to their ability of visual sensing and autonomy in a challenging and dynamic aquaculture environment. In this paper, we report the integration of an ROV with a visual servoing scheme for regular inspection and tracking of the net pens. We propose a vision-based positioning scheme that consists of an object detector, a pose generator, and a closed-loop controller. The system employs a modular approach that first utilizes two easily identifiable parallel ropes attached to the net for image processing through traditional computer vision methods. Second, the reference positions of the ROV relative to the net plane are extracted on the basis of a vision triangulation method. Third, a closed-loop control law is employed to instruct the vehicle to traverse from top to bottom along the net plane to inspect its status. The proposed vision-based scheme has been implemented and tested both through simulations and field experiments. The extensive experimental results have allowed the assessment of the performance of the scheme that resulted satisfactorily and can supplement the traditional aquaculture net pens inspection and tracking systems.",aquaculture applications; autonomous vehicles; computer vision; inspection,A Visual Servoing Scheme for Autonomous Aquaculture Net Pens Inspection Using ROV,-,NO,,,NO,,,,,NO,,
S2170,1,Forward,journalArticle,2021,"Kaknjo, Admir",,,https://ulir.ul.ie/handle/10344/10989,"This thesis provides an overview of research work in the domains of marine sensing and underwater robotics. The main aim of the study is to investigate the challenges and requirements that are imposed on a communication channel in the application of permanently deployed underwater robots, i.e., in the growing field of underwater resident robots, with an emphasis on signal and video latency measurement in Remote Operating Vehicle (ROV) systems where short or minimum latency is necessary for pilot in the loop control of the ROVs based on camera feed. The work starts with the analysis of the ways to expand the role of conventional marine sensing platforms from tasks such as data logging and telemetry to the inspection, repair, and maintenance (IRM) of underwater structures. The proposed way of achieving this is by integrating an ROV into a marine sensing platform. However, in order to achieve the goal of having a permanently deployed robot that can reliably conduct remotely controlled operations, the low-latency, high bandwidth and secure communication channel between the remote deployment site, i.e., the robot, and a pilot is a must. Until recently, these requirements could be met only in operations where an ROV is deployed from a ship and is connected to the control site via umbilical cable. However, in the last decade, a considerable effort has been made by several companies to enable high-bandwidth global Internet coverage by launching constellations of mini-satellites. This would bring the high-bandwidth Internet connectivity to remote areas where, until recently, only low–bandwidth data connectivity was possible. Using the Internet as a communication channel in a system with real-time requirements poses a threat to control system stability due to the stochastic component of the Internet connection. Another challenge that arises is the exposure of the connected robot to various network attacks. This can be solved only by providing security for the data that is transmitted to and from the robot over the Internet. For these reasons, the focus of this work is on exploring the effects of latency of control signal and video stream on the controllability of the robot over the Internet. The software and hardware apparatus, with the purpose of data and video latency measurement, was developed and extensive testing, during which the latency measurements were acquired, was conducted. The work consists of two major parts. The first part of the thesis is in the marine sensing platforms domain. It presents the work conducted on the development of a novel ocean monitoring platform that could serve as a docking station for the ROV. Low power consumption of the platform is a requirement that was set to the design. For this reason, a solution called the event-triggering mechanism was integrated into the platform hardware and software. The possible ways of integrating the ROV onto the platform are presented and several use cases are stated. The second part deals with the control signal and video stream latency measurement results.. The goal of this work was to establish the maximum network latency that will not impair the remote control of the ROV. For this reason, the simulation of the robot was created and tested for different latencies. This was later compared to the results obtained from latency measurement experiments. The work continues with expanding the latency measurement to the video signal that is streamed from the robot. The video is generally the main feedback that the robot is transmitting to the pilot and having low latency is crucial for the control. The work ends with exploring the ways of introducing security to the system and testing the latency of the system with encryption introduced.",,The network and video latencies in marine remote-controlled applications,-,NO,,,NO,,,,,NO,,
S2171,1,Forward,conferencePaper,2020,"Guerra, Edmundo; Bolea, Yolanda; Munguia, Rodrigo; Grau, Antoni",Advances in Human Factors in Robots and Unmanned Systems,10.1007/978-3-030-20467-9_14,,"A novel application is presented in this paper. Wastewater treatment plants need to sample water to follow the cleaned process continuously. This task is very tedious for laboratory workers and, mainly, can be done in reduced areas of the large basins that form the whole plant, specifically only in the edges of those basins. The new proposal is to enlarge the sampling area and reduce the load for workers. A new unmanned aerial vehicle has been designed together with a novel tool to take water samples. Moreover, a new architecture for the mission plan is presented in form of multi-agents. Experiments have been done in order to test the feasibility of the proposal.",HRI; Mobile robotics; Monocular SLAM; Wastewater treatment plant,Robotic Monocular SLAM in Wastewater Treatment Plants with a Sampling Device,-,NO,,,NO,,,,,NO,,
S2172,1,Forward,conferencePaper,2019,"Guerra, Edmundo; Grau, Antoni; Bolea, Yolanda; Munguia, Rodrigo",2019 24th IEEE International Conference on Emerging Technologies and Factory Automation (ETFA),10.1109/ETFA.2019.8869292,,"This work presents a solution to automatize sampling tasks in a wastewater treatment plant with open air basins. At the behest of human operators, a set of UAVs managed as a network of autonomous agents will perform sample missions by taking direct measurements (through a multiparametric probe) or capturing samples and carrying them to the laboratory with specific developed hardware. These capabilities allow the proposed solution to act as a virtual sensor network with sampling points deployed and connected at any point reachable by UAVs. The hardware prototypes are fully described, with focus on the integration of systems, and the software architecture used is analysed and fully justified. Special focus was put on the localization problem, and several solutions were evaluated. Experimental results of the prototype UAV and sampling probe built are provided to validate the hardware designs, with focus on the localizations tasks.",Computer architecture; Hardware; Probes; Robot sensing systems; robotic agents; robotic software architecture; Software; specific tools; Task analysis; Unmanned aerial vehicle,Sampling Operation with Robotic UAV,-,NO,,,NO,,,,,NO,,
S2173,1,Forward,conferencePaper,2022,"Qiu, Yesiliang; Dong, Janet; Harrison Moretto, Caroline “Niki”",,10.1115/IMECE2021-67555,https://memagazineselect.asmedigitalcollection.asme.org/IMECE/proceedings/IMECE2021/85628/V07BT07A012/1132812,,,Driving System Design and Control of Tick Collection Robot,-,NO,,,NO,,,,,NO,,
S2174,1,Forward,journalArticle,2022,"Choi, Jaewoo; Jeong, Byongug; Theotokatos, Gerasimos; Tezdogan, Tahsin","Journal of International Maritime Safety, Environmental Affairs, and Shipping",10.1080/25725084.2021.2014244,https://doi.org/10.1080/25725084.2021.2014244,"This project aims at developing an efficient simulation environment for the vessel navigation system. The design of the overall navigation system is described along with its application for the case study of an autonomous vessel. The UNITY and Robot Operating System were utilised as the virtual environment and the main control framework, respectively. By treating the autonomous vessel as a single robot, each part of the system was formulated to enhance the efficiency and visualisation in the development progresses for autonomous system. The virtual environment using UNITY overwhelms the space-time constraints in the testing stage. The navigation system combined with conventional navigation algorithms and a computer vision algorithm were implemented in the Robot Operating System. Hence, the navigation system was enhanced by an assistant object detection algorithm to be more active on fusing environment information. The excellence of the proposed object detection model was demonstrated with reliable performance with 94% mean Average Precision, which renders the model exhibiting visual sensibility in navigation. Overall, it is believed that this study can contribute to offering some insights into developing autonomous marine vessels.",Autonomous vehicle; object detection; ROS; UNITY,Approach an autonomous vessel as a single robot with Robot Operating System in virtual environment,-,NO,,,NO,,,,,NO,,
S2175,1,Forward,thesis,2019,"Laranjeira Moreira, Matheus",,,,"This thesis addresses the problem of tether shape contrai for small remotely operated underwater vehicles (mini-ROVs), which are suitable, thanks to their small size and high maneuverability, for the exploration of shallow waters and cluttered spaces. The management of the tether is, however, a hard task, since these robots do not have enough propulsion power to counterbalance the drag forces acting on the tether cable. ln order to cape with this problem, we introduced the concept of a Chain of miniROVs, where several robots are linked to the tether cable and can, together, manage the external perturbations and contrai the shape of the cable. We investigated the use of the embedded cameras to regulate the shape of a portion of tether linking two successive robots, a leader and a follower. Only the follower robot deals with the tether shape regulation task. The leader is released to explore its surroundings. The tether linking bath robots is assumed to be negatively buoyant and is modeled by a catenary. The tether shape parameters are estimated in real-time by a nonlinear optimization procedure that fits the catenary model to the tether detected points in the image. The shape parameter regulation is thus achieved through a catenary-based contrai scheme relating the robot motion with the tether shape variation. The proposed visual servoing contrai scheme has proved to properly manage the tether shape in simulations and real experiments in pool.",,Visual servoing on deformable objects : an application to tether shape control,NO,,,,NO,,,,,NO,,
S2176,1,Forward,thesis,2019,"Moreira, Matheus Laranjeira",,,https://tel.archives-ouvertes.fr/tel-02534996,"This thesis addresses the problem of tether shape contrai for small remotely operated underwater vehicles (mini-ROVs), which are suitable, thanks to their small size and high maneuverability, for the exploration of shallow waters and cluttered spaces. The management of the tether is, however, a hard task, since these robots do not have enough propulsion power to counterbalance the drag forces acting on the tether cable. ln order to cape with this problem, we introduced the concept of a Chain of miniROVs, where several robots are linked to the tether cable and can, together, manage the external perturbations and contrai the shape of the cable. We investigated the use of the embedded cameras to regulate the shape of a portion of tether linking two successive robots, a leader and a follower. Only the follower robot deals with the tether shape regulation task. The leader is released to explore its surroundings. The tether linking bath robots is assumed to be negatively buoyant and is modeled by a catenary. The tether shape parameters are estimated in real-time by a nonlinear optimization procedure that fits the catenary model to the tether detected points in the image. The shape parameter regulation is thus achieved through a catenary-based contrai scheme relating the robot motion with the tether shape variation. The proposed visual servoing contrai scheme has proved to properly manage the tether shape in simulations and real experiments in pool.",,Visual servoing on deformable objects : an application to tether shape control,NO,,,,NO,,,,,NO,,
S2177,1,Forward,thesis,2019,"Laranjeira Moreira, Matheus; Hugel, Vincent",,,https://www.theses.fr/2019TOUL0007,"Cette thèse porte sur le problème du contrôle de la forme d'ombilicaux pour des robots sous-marins légers téléopérés (mini-ROVs), qui conviennent, grâce à leur petite taille et grande manoeuvrabilité, à l'exploration des eaux peu profondes et des espaces encombrés. La régulation de la forme de l'ombilical est cependant un tâche difficile, car ces robots n'ont pas une puissance de propulsion suffisante pour contrebalancer les forces de traînée du câble. Pour faire face à ce problème, nous avons introduit le concept de Cordée de mini-ROVs, dans lequel plusieurs robots sont reliés à l'ombilical et peuvent, ensemble, contrebalancer les perturbations extérieures et contrôler la forme du câble. Nous avons étudié l'utilisation des caméras embarquées pour réguler la forme d'une portion de l'ombilical reliant deux robots successifs, un leader et un suiveur. Seul le robot suiveur se chargera de la tâche de régulation de la forme du câble. Le leader est libéré pour explorer ses alentours. L'ombilical est supposé être légèrement pesant et donc modélisé par une chaînette. Les paramètres de forme du câble sont estimés en temps réel par une procédure d'optimisation non-linéaire qui adapte le modèle de chaînette aux points détectés dans les images des caméras. La régulation des paramètres de forme est obtenue grâce à une commande reliant le mouvement du robot à la variation de la forme de l'ombilical. L'asservissement visuel proposé s'est avéré capable de contrôler correctement la forme du câble en simulations et expériences réalisées en basin.",629.8; Asservissement visuel; Catenary vurve fitting; Chain of robots; Chaînes; Contrôle d'ombilical; Cordée de robots; Deformable objects; Fitting chaînette; Objets déformables; Robots -- Dynamique -- Essais; Robots sous-marins; Tether shape control; Traitement d'images -- Techniques numériques; Visual servoing,Visual servoing on deformable objects : an application to tether shape control,NO,,,,NO,,,,,NO,,
S2178,1,Forward,webpage,,,,,http://transport.chd.edu.cn/article/id/201805013,,,横向互联空气悬架多智能体减振器系统博弈控制,NO,,,NO,NO,,,,,NO,,
S2179,2,Backward,journalArticle,,"Achtelik, Markus; Bachrach, Abraham; He, Ruijie; Prentice, Samuel; Roy, Nicholas",,,,"This paper presents our solution for enabling a quadrotor helicopter to autonomously navigate, explore and locate objects of interest in unstructured and unknown indoor environments. We describe the design and operation of our quadrotor helicopter, before presenting the software architecture and individual algorithms necessary for executing the mission. Experimental results are presented demonstrating the quadrotor’s ability to operate autonomously in indoor environments. Finally, we address some of the logistical and risk management issues pertaining to our entry in the competition.",,Autonomous Navigation and Exploration of a Quadrotor Helicopter in GPS-denied Indoor Environments,,NO,,,NO,,,,,NO,30,
S2180,2,Backward,conferencePaper,2013,"Balakirsky, Stephen; Kootbally, Zeid",,10.1115/ISFA2012-7179,https://asmedigitalcollection.asme.org/ISFA/proceedings/ISFA2012/45110/101/267088,,,USARSim/ROS: A Combined Framework for Robotic Control and Simulation,,,NO,,YES,,,,,NO,,
S2181,2,Backward,conferencePaper,2007,"Bouabdallah, Samir; Siegwart, Roland",2007 IEEE/RSJ International Conference on Intelligent Robots and Systems,10.1109/IROS.2007.4399042,,"The research on autonomous miniature flying robots has intensified considerably thanks to the recent growth of civil and military interest in unmanned aerial vehicles (UAV). This paper summarizes the final results of the modeling and control parts of OS4 project, which focused on design and control of a quadrotor. It introduces a simulation model which takes into account the variation of the aerodynamical coefficients due to vehicle motion. The control parameters found with this model are successfully used on the helicopter without re-tuning. The last part of this paper describes the control approach (integral backstepping) and the scheme we propose for full control of quadrotors (attitude, altitude and position). Finally, the results of autonomous take-off, hover, landing and collision avoidance are presented.",Aerodynamics; Backstepping; Blades; Helicopters; Intelligent actuators; Intelligent robots; Intelligent sensors; Robot kinematics; Unmanned aerial vehicles; USA Councils,Full control of a quadrotor,,NO,,,YES,,,,,NO,,
S2182,2,Backward,journalArticle,2011,"Bristeau, Pierre-Jean; Callou, François; Vissière, David; Petit, Nicolas",IFAC Proceedings Volumes,10.3182/20110828-6-IT-1002.02327,https://www.sciencedirect.com/science/article/pii/S1474667016438188,"This paper exposes the Navigation and Control technology embedded in a recently commercialized micro Unmanned Aerial Vehicle (UAV), the AR.Drone, which cost and performance are unprecedented among any commercial product for mass markets. The system relies on state-of-the-art indoor navigation systems combining low-cost inertial sensors, computer vision techniques, sonar, and accounting for aerodynamics models.",data fusion; Flying robots; low cost MEMS,The Navigation and Control technology inside the AR.Drone micro UAV,,NO,,,YES,,,,,NO,,
S2183,2,Backward,conferencePaper,2001,"Bruyninckx, H.",Proceedings 2001 ICRA. IEEE International Conference on Robotics and Automation (Cat. No.01CH37164),10.1109/ROBOT.2001.933002,,"This paper introduces the OROCOS project that aims at becoming a general-purpose and open robot control software package. OROCOS follows the open source development model that has been proven to work in many other general-purpose software packages, such as Linux, Apache, Perl or LATEX. The paper focuses on the long-term vision of this start-up project, motivates which strategic and innovative design decisions are to be taken (a CORBA-like component architecture being the most important one), and lists other projects on which OROCOS could build. The success of OROCOS depends critically on how many researchers and engineers can be motivated to contribute code, documentation and feedback to the project.",Communication standards; Computer industry; Consumer electronics; Industrial electronics; Linux; Manufacturing industries; Open source software; Robot control; Service robots; Software packages,Open robot control software: the OROCOS project,,NO,,,NO,,NO,,,NO,,
S2184,2,Backward,conferencePaper,2007,"Carpin, Stefano; Lewis, Mike; Wang, Jijun; Balakirsky, Stephen; Scrapper, Chris",Proceedings 2007 IEEE International Conference on Robotics and Automation,10.1109/ROBOT.2007.363180,,"This paper presents USARSim, an open source high fidelity robot simulator that can be used both for research and education. USARSim offers many characteristics that differentiate it from most existing simulators. Most notably, it constitutes the simulation engine used to run the virtual robots competition within the Robocup initiative. We describe its general architecture, describe examples of utilization, and provide a comprehensive overview for those interested in robot simulations for education, research and competitions.",Control systems; Educational programs; Educational robots; Engines; Orbital robotics; Robot control; Robot sensing systems; Robotics and automation; Service robots; USA Councils,USARSim: a robot simulator for research and education,,NO,,,YES,,,,,NO,,
S2185,2,Backward,conferencePaper,2009,"Ducard, Guillaume; D'Andrea, Raffaello",2009 IEEE International Symposium on Industrial Embedded Systems,10.1109/SIES.2009.5196224,,"In this project, a Vicon motion capture/positioning system is employed to provide the pose (ground position, ground velocity and attitude) of an autonomous quadrotor. Some markers are mounted on the vehicle so that the Vicon system can track it. The markers arrangement is stored once in the Vicon system. In practice, after a few flights the markers' configuration may be slightly altered causing offsets in the measurement of the true attitude of the quadrotor. The Vicon system itself may also measure the vehicle's attitude with some errors in the angles due to small displacements of the cameras and a long period of use without recalibration of the whole system. Since it would be very tedious and cumbersome to recalibrate the whole vision system and making sure that the markers arrangement is still valid before every flight, a simple method has been developed to accommodate any offset in the attitude measurements. Better flight performance is obtained using the method presented.",Aerospace control; Control systems; Machine vision; Mechanical variables measurement; Mobile robots; Motion measurement; Position measurement; Remotely operated vehicles; System testing; Velocity measurement,Autonomous quadrotor flight using a vision system and accommodating frames misalignment,,NO,,,YES,,,,,NO,,
S2186,2,Backward,book,2009,"Goel, Rahul; Shah, Sapan; Gupta, Nitin; Ananthkrishnan, N.",,,,"Rotary-wing Unmanned Mini Aerial Vehicles (RUMAV) represent a useful class of flying robots because of their strong abilities of VTOL, high maneuverability and controlla-bility, especially in enclosed areas. In this paper, we present the development of an autonomous four-rotor RUMAV, called Quadrotor. Starting with modeling, simulation, and control design, this paper presents the results from flight experiments conducted on a flying platform. A classical control approach (PID) is used to design the control law. Once the control algorithm is validated using simulations and 3D visualization, it is implemented on hardware and experiments on a test-rig and in free flight are conducted.",,"Modeling, Simulation and Flight Testing of an Autonomous Quadrotor",NO,,,,YES,,,,,NO,,
S2187,2,Backward,webpage,,,,,https://arc.aiaa.org/doi/abs/10.2514/6.2007-6461,,,"Quadrotor Helicopter Flight Dynamics and Control: Theory and Experiment | Guidance, Navigation, and Control and Co-located Conferences",NO,,,,NO,,,,,NO,,
S2188,2,Backward,conferencePaper,2009,"Huang, Haomiao; Hoffmann, Gabriel M.; Waslander, Steven L.; Tomlin, Claire J.",2009 IEEE International Conference on Robotics and Automation,10.1109/ROBOT.2009.5152561,,Quadrotor helicopters have become increasingly important in recent years as platforms for both research and commercial unmanned aerial vehicle applications. This paper extends previous work on several important aerodynamic effects impacting quadrotor flight in regimes beyond nominal hover conditions. The implications of these effects on quadrotor performance are investigated and control techniques are presented that compensate for them accordingly. The analysis and control systems are validated on the Stanford Testbed of Autonomous Rotorcraft for Multi-Agent Control quadrotor helicopter testbed by performing the quadrotor equivalent of the stall turn aerobatic maneuver. Flight results demonstrate the accuracy of the aerodynamic models and improved control performance with the proposed control schemes.,Aerodynamics; Automatic control; Blades; Control systems; Helicopters; Remotely operated vehicles; Robotics and automation; System testing; Unmanned aerial vehicles; Vehicle safety,Aerodynamics and control of autonomous quadrotor helicopters in aggressive maneuvering,,NO,,,YES,,,,,NO,,
S2189,2,Backward,conferencePaper,2011,"Kohlbrecher, Stefan; von Stryk, Oskar; Meyer, Johannes; Klingauf, Uwe","2011 IEEE International Symposium on Safety, Security, and Rescue Robotics",10.1109/SSRR.2011.6106777,,"For many applications in Urban Search and Rescue (USAR) scenarios robots need to learn a map of unknown environments. We present a system for fast online learning of occupancy grid maps requiring low computational resources. It combines a robust scan matching approach using a LIDAR system with a 3D attitude estimation system based on inertial sensing. By using a fast approximation of map gradients and a multi-resolution grid, reliable localization and mapping capabilities in a variety of challenging environments are realized. Multiple datasets showing the applicability in an embedded hand-held mapping system are provided. We show that the system is sufficiently accurate as to not require explicit loop closing techniques in the considered scenarios. The software is available as an open source package for ROS.",Equations; Inertial Navigation; Laser radar; Navigation; Robust and Fast Localization; Simultaneous localization and mapping; Simultaneous Localization and Mapping; Three dimensional displays,A flexible and scalable SLAM system with full 3D motion estimation,,NO,,,YES,,,,,NO,,
S2190,2,Backward,webpage,,,,,https://books.google.com.br/books?hl=en&lr=&id=nMV-TkaX-9cC&oi=fnd&pg=PR19&dq=Principles+of+Helicopter+Aerodynamics&ots=CsdOi61Fau&sig=MS_2RhV8Y8LAuAosjB_iQbGeuLU#v=onepage&q=Principles%20of%20Helicopter%20Aerodynamics&f=false,,,Principles of Helicopter Aerodynamics with CD Extra - Gordon J. Leishman - Google Books,NO,,,,NO,,,,,NO,,
S2191,2,Backward,conferencePaper,2010,"Meyer, Johannes; Strobel, Armin",ISR 2010 (41st International Symposium on Robotics) and ROBOTIK 2010 (6th German Conference on Robotics),,,"In this paper we present a framework for the real-time control of lightweight autonomous vehicles which comprehends a proposed hard- and software design. The system can be used for many kinds of vehicles and offers high computing power and flexibility in respect of the control algorithms and additional application dependent tasks. It was originally developed to control a small quad-rotor UAV where stringent restrictions in weight and size of the hardware components exist, but has been transfered to a fixed-wing UAV and a ground vehicle for in- and outdoor search and rescue missions. The modular structure and the use of a standard PC architecture at an early stage simplifies reuse of components and fast integration of new features.",Actuators; Ethernet networks; Hardware; Real time systems; Sensors; Software; Vehicles,A Flexible Real-Time Control System for Autonomous Vehicles,,NO,,,YES,,,,,NO,,
S2192,2,Backward,journalArticle,2010,"Michael, Nathan; Mellinger, Daniel; Lindsey, Quentin; Kumar, Vijay",IEEE Robotics & Automation Magazine,10.1109/MRA.2010.937855,,"In the last five years, advances in materials, electronics, sensors, and batteries have fueled a growth in the development of microunmanned aerial vehicles (MAVs) that are between 0.1 and 0.5 m in length and 0.1-0.5 kg in mass [1]. A few groups have built and analyzed MAVs in the 10-cm range [2], [3]. One of the smallest MAV is the Picoftyer with a 60-mmpropellor diameter and a mass of 3.3 g [4]. Platforms in the 50-cm range are more prevalent with several groups having built and flown systems of this size [5]-[7]. In fact, there are severalcommercially available radiocontrolled (PvC) helicopters and research-grade helicopters in this size range [8].",Acceleration; Mathematical model; Robot kinematics; Rotors; Software; Trajectory; Unmanned aerial vehicles,The GRASP Multiple Micro-UAV Testbed,,NO,,,YES,,,,,NO,,
S2193,2,Backward,conferencePaper,2011,"Yin, Qiang; Xian, Bin; Zhang, Yao; Yu, Yanping; Li, Haotao; Zeng, Wei",Proceedings of the 30th Chinese Control Conference,,,"The research on the control of four-rotor unmanned aerial vehicle (UAV), known as quadrotor UAV, is an important research area of unmanned aerial vehicles. Normally, numerical simulation is utilized to verify the control design performance. However, the simulation results are not visual. In this paper, a novel visual simulation system based on a flight simulator software, named as FlightGear, and Matlab/Simulink is developed for quadrotor UAVs. Coordinate transfer from inertial frame of the quadrotor UAV employed by Matlab/Simulink to geodetic coordinates employed by FlightGear is introduced. In addition, an S-function block based on FlightGear communication protocol is proposed. This visual simulation system has the abilities for on-line and off-line simulation. Plus, it can be run on local simulation computer or other computers via network.",Computational modeling; Computer languages; Computers; Flightgear Flight Simulator Software; Geodetic Coordinates; Quadrotor UAV; S-Function Block; Simulation; Software; Unmanned aerial vehicles; Visualization,Visual simulation system for quadrotor unmanned aerial vehicles,,NO,,,YES,,,,,NO,,
S2194,2,Backward,conferencePaper,1994,"Rankin, J.","Proceedings of 1994 IEEE Position, Location and Navigation Symposium - PLANS'94",10.1109/PLANS.1994.303322,,This paper describes a software package that models various Global Positioning System (GPS) and differential GPS receiver configurations. The model produces position errors in a locally-level coordinate system. The errors are statistically based on the errors associated with pseudorange measurements. An orbital model of the GPS satellites simulates the effects of satellite geometry on the position errors. The error model is used in the Real-Time Simulator at the NASA-Langley Research Center.<>,Autocorrelation; Correlators; Gaussian noise; Global Positioning System; Markov processes; Measurement errors; Noise figure; Noise measurement; Wavelength measurement; White noise,An error model for sensor simulation GPS and differential GPS,,NO,,,NO,,,,,NO,,
S2195,2,Backward,journalArticle,2011,"Rodi, Aleksandar",Acta Polytechnica Hungarica,,,"This paper presents the modeling and simulation of an autonomous quad-rotor microcopter in a virtual outdoor scenario. The main contribution of this paper focuses on the development of a flight simulator to provide an advanced R/D tool suitable for control design and model evaluation of a quad-rotor systems to be used for control algorithm development and verification, before working with a real experimental system. The main aspects of modeling of rotorcraft kinematics and rigid body dynamics, spatial system localization and navigation in a virtual outdoor scenario are considered in the paper. Some high-level control aspects are considered, as well. Finally, several basic maneuvers (examples) are investigated and simulated in the paper to verify the simulation software capabilities and engineering capabilities.",,The Modeling and Simulation of an Autonomous Quad-Rotor Microcopter in a Virtual Outdoor Scenario,,NO,,,YES,,,,,NO,,
S2196,2,Backward,journalArticle,2011,"Weiss, Stephan; Scaramuzza, Davide; Siegwart, Roland",Journal of Field Robotics,10.1002/rob.20412,https://onlinelibrary.wiley.com/doi/abs/10.1002/rob.20412,"Autonomous micro aerial vehicles (MAVs) will soon play a major role in tasks such as search and rescue, environment monitoring, surveillance, and inspection. They allow us to easily access environments to which no humans or other vehicles can get access. This reduces the risk for both the people and the environment. For the above applications, it is, however, a requirement that the vehicle is able to navigate without using GPS, or without relying on a preexisting map, or without specific assumptions about the environment. This will allow operations in unstructured, unknown, and GPS-denied environments. We present a novel solution for the task of autonomous navigation of a micro helicopter through a completely unknown environment by using solely a single camera and inertial sensors onboard. Many existing solutions suffer from the problem of drift in the xy plane or from the dependency on a clean GPS signal. The novelty in the here-presented approach is to use a monocular simultaneous localization and mapping (SLAM) framework to stabilize the vehicle in six degrees of freedom. This way, we overcome the problem of both the drift and the GPS dependency. The pose estimated by the visual SLAM algorithm is used in a linear optimal controller that allows us to perform all basic maneuvers such as hovering, set point and trajectory following, vertical takeoff, and landing. All calculations including SLAM and controller are running in real time and online while the helicopter is flying. No offline processing or preprocessing is done. We show real experiments that demonstrate that the vehicle can fly autonomously in an unknown and unstructured environment. To the best of our knowledge, the here-presented work describes the first aerial vehicle that uses onboard monocular vision as a main sensor to navigate through an unknown GPS-denied environment and independently of any external artificial aids. © 2011 Wiley Periodicals, Inc.",,Monocular-SLAM–based navigation for autonomous micro helicopters in GPS-denied environments,,NO,,,YES,,,,,NO,,
S2197,2,Backward,conferencePaper,2009,"Denning, Tamara; Matuszek, Cynthia; Koscher, Karl; Smith, Joshua R.; Kohno, Tadayoshi",Proceedings of the 11th international conference on Ubiquitous computing,10.1145/1620545.1620564,https://doi.org/10.1145/1620545.1620564,"Future homes will be populated with large numbers of robots with diverse functionalities, ranging from chore robots to elder care robots to entertainment robots. While household robots will offer numerous benefits, they also have the potential to introduce new security and privacy vulnerabilities into the home. Our research consists of three parts. First, to serve as a foundation for our study, we experimentally analyze three of today's household robots for security and privacy vulnerabilities: the WowWee Rovio, the Erector Spykee, and the WowWee RoboSapien V2. Second, we synthesize the results of our experimental analyses and identify key lessons and challenges for securing future household robots. Finally, we use our experiments and lessons learned to construct a set of design questions aimed at facilitating the future development of household robots that are secure and preserve their users' privacy.",cyber-physical systems; domestic robots; household robots; multi-robot attack; privacy; robots; security; single-robot attack; ubiquitous robots,A spotlight on security and privacy risks with future household robots: attacks and lessons,,NO,,,YES,,NO,,,NO,,
S2198,2,Backward,conferencePaper,2011,"Mascarenas, David; Stull, Christopher; Farrar, Charles","Unattended Ground, Sea, and Air Sensor Technologies and Applications XIII",10.1117/12.883446,https://www.spiedigitallibrary.org/conference-proceedings-of-spie/8046/80460G/Escape-and-evade-control-policies-for-ensuring-the-physical-security/10.1117/12.883446.full,"In order to realize the wide-scale deployment of high-endurance, unattended mobile sensing technologies, it is vital to ensure the self-preservation of the sensing assets. Deployed mobile sensor nodes face a variety of physical security threats including theft, vandalism and physical damage. Unattended mobile sensor nodes must be able to respond to these threats with control policies that facilitate escape and evasion to a low-risk state. In this work the Precision Immobilization Technique (PIT) problem has been considered. The PIT maneuver is a technique that a pursuing, car-like vehicle can use to force a fleeing vehicle to abruptly turn ninety degrees to the direction of travel. The abrupt change in direction generally causes the fleeing driver to lose control and stop. The PIT maneuver was originally developed by law enforcement to end vehicular pursuits in a manner that minimizes damage to the persons and property involved. It is easy to imagine that unattended autonomous convoys could be targets of this type of action by adversarial agents. This effort focused on developing control policies unattended mobile sensor nodes could employ to escape, evade and recover from PIT-maneuver-like attacks. The development of these control policies involved both simulation as well as small-scale experimental testing. The goal of this work is to be a step toward ensuring the physical security of unattended sensor node assets.",,"Escape and evade control policies for ensuring the physical security of nonholonomic, ground-based, unattended mobile sensor nodes",,NO,,,YES,,,,,NO,,
S2199,2,Backward,conferencePaper,2011,"Mascarenas, David; Stull, Christopher; Farrar, Charles",Unmanned/Unattended Sensors and Sensor Networks VIII,10.1117/12.898210,https://www.spiedigitallibrary.org/conference-proceedings-of-spie/8184/81840J/Towards-the-development-of-tamper-resistant-ground-based-mobile-sensor/10.1117/12.898210.full,"Mobile sensor nodes hold great potential for collecting field data using fewer resources than human operators would require and potentially requiring fewer sensors than a fixed-position sensor array. It would be very beneficial to allow these mobile sensor nodes to operate unattended with a minimum of human intervention. In order to allow mobile sensor nodes to operate unattended in a field environment, it is imperative that they be capable of identifying and responding to external agents that may attempt to tamper with, damage or steal the mobile sensor nodes, while still performing their data collection mission. Potentially hostile external agents could include animals, other mobile sensor nodes, or humans. This work will focus on developing control policies to help enable a mobile sensor node to identify and avoid capture by a hostile un-mounted human. The work is developed in a simulation environment, and demonstrated using a non-holonomic, ground-based mobile sensor node. This work will be a preliminary step toward ensuring the cyber-physical security of ground-based mobile sensor nodes that operate unattended in potentially unfriendly environments.",,"Towards the development of tamper-resistant, ground-based mobile sensor nodes",,NO,,,YES,,,,,NO,,
S2200,2,Backward,conferencePaper,2008,"Humphreys, Todd E.; Ledvina, Brent M.; Psiaki, Mark L.; O'Hanlon, Brady W.; Kintner, Paul M.; Jr",,,http://www.ion.org/publications/abstract.cfm?jp=p&articleID=8132,A portable civilian GPS spoofer is implemented on a digital signal processor and used to characterize spoofing effects and develop defenses against civilian spoofing. This work is intended to equip GNSS users and receiver manufacturers with authentication methods that are effective against unsophisticated spoofing attacks. The work also serves to refine the civilian spoofing threat assessment by demonstrating the challenges involved in mounting a spoofing attack.,,Assessing the Spoofing Threat: Development of a Portable GPS Civilian Spoofer,,NO,,,YES,,,,,NO,,
S2201,2,Backward,book,2011,"Maynor, David",,,,"Metasploit Toolkit for Penetration Testing, Exploit Development, and Vulnerability Research is the first book available for the Metasploit Framework (MSF), which is the attack platform of choice for one of the fastest growing careers in IT security: Penetration Testing. The book will provide professional penetration testers and security researchers with a fully integrated suite of tools for discovering, running, and testing exploit code.This book discusses how to use the Metasploit Framework (MSF) as an exploitation platform. The book begins with a detailed discussion of the three MSF interfaces: msfweb, msfconsole, and msfcli .This chapter demonstrates all of the features offered by the MSF as an exploitation platform. With a solid understanding of MSF’s capabilities, the book then details techniques for dramatically reducing the amount of time required for developing functional exploits.By working through a real-world vulnerabilities against popular closed source applications, the reader will learn how to use the tools and MSF to quickly build reliable attacks as standalone exploits. The section will also explain how to integrate an exploit directly into the Metasploit Framework by providing a line-by-line analysis of an integrated exploit module. Details as to how the Metasploit engine drives the behind-the-scenes exploitation process will be covered, and along the way the reader will come to understand the advantages of exploitation frameworks. The final section of the book examines the Meterpreter payload system and teaches readers to develop completely new extensions that will integrate fluidly with the Metasploit Framework. A November 2004 survey conducted by ""CSO Magazine"" stated that 42% of chief security officers considered penetration testing to be a security priority for their organizations The Metasploit Framework is the most popular open source exploit platform, and there are no competing books",Computers / Security / General,"Metasploit Toolkit for Penetration Testing, Exploit Development, and Vulnerability Research",NO,,,,YES,,,,,NO,,
S2202,2,Backward,journalArticle,,"Quigley, Morgan; Gerkey, Brian; Conley, Ken; Faust, Josh; Foote, Tully; Leibs, Jeremy; Berger, Eric; Wheeler, Rob; Ng, Andrew",,,,"This paper gives an overview of ROS, an opensource robot operating system. ROS is not an operating system in the traditional sense of process management and scheduling; rather, it provides a structured communications layer above the host operating systems of a heterogenous compute cluster. In this paper, we discuss how ROS relates to existing robot software frameworks, and brieﬂy overview some of the available application software which uses ROS.",,ROS: an open-source Robot Operating System,,,,,NO,,NO,,,NO,,
S2203,2,Forward,journalArticle,2019,"Liu, Shaoshan; Liu, Liangkai; Tang, Jie; Yu, Bo; Wang, Yifan; Shi, Weisong",Proceedings of the IEEE,10.1109/JPROC.2019.2915983,,"Safety is the most important requirement for autonomous vehicles; hence, the ultimate challenge of designing an edge computing ecosystem for autonomous vehicles is to deliver enough computing power, redundancy, and security so as to guarantee the safety of autonomous vehicles. Specifically, autonomous driving systems are extremely complex; they tightly integrate many technologies, including sensing, localization, perception, decision making, as well as the smooth interactions with cloud platforms for high-definition (HD) map generation and data storage. These complexities impose numerous challenges for the design of autonomous driving edge computing systems. First, edge computing systems for autonomous driving need to process an enormous amount of data in real time, and often the incoming data from different sensors are highly heterogeneous. Since autonomous driving edge computing systems are mobile, they often have very strict energy consumption restrictions. Thus, it is imperative to deliver sufficient computing power with reasonable energy consumption, to guarantee the safety of autonomous vehicles, even at high speed. Second, in addition to the edge system design, vehicle-to-everything (V2X) provides redundancy for autonomous driving workloads and alleviates stringent performance and energy constraints on the edge side. With V2X, more research is required to define how vehicles cooperate with each other and the infrastructure. Last, safety cannot be guaranteed when security is compromised. Thus, protecting autonomous driving edge computing systems against attacks at different layers of the sensing and computing stack is of paramount concern. In this paper, we review state-of-the-art approaches in these areas as well as explore potential solutions to address these challenges.",Autonomous vehicles; Connected and autonomous vehicles (CAVs); edge computing; Edge computing; Global navigation satellite system; heterogeneous computing; Real-time systems; Safety; security; Sensors; Vehicle-to-everything; vehicle-to-everything (V2X); vehicular operating system,Edge Computing for Autonomous Driving: Opportunities and Challenges,,NO,,,YES,,,,,NO,,
S2204,2,Forward,journalArticle,2017,"Dieber, Bernhard; Breiling, Benjamin; Taurer, Sebastian; Kacianka, Severin; Rass, Stefan; Schartner, Peter",Robotics and Autonomous Systems,10.1016/j.robot.2017.09.017,https://www.sciencedirect.com/science/article/pii/S0921889017302762,"Future robotic systems will be situated in highly networked environments where they communicate with industrial control systems, cloud services or other systems at remote locations. In this trend of strong digitization of industrial systems (also sometimes referred to as Industry 4.0), cyber attacks are an increasing threat to the integrity of the robotic systems at the core of this new development. It is expected, that the Robot Operating System (ROS) will play an important role in robotics outside of pure research-oriented scenarios. ROS however has significant security issues which need to be addressed before such products should reach mass markets. In this paper we present the most common vulnerabilities of ROS, attack vectors to exploit those and several approaches to secure ROS and similar systems. We show how to secure ROS on an application level and describe a solution which is integrated directly into the ROS core. Our proposed solution has been implemented and tested with recent versions of ROS, and adds security to all communication channels without being invasive to the system kernel itself.",Industry 4.0; Robotics; ROS; Security,Security for the Robot Operating System,,,,,YES,,NO,,,NO,,
S2205,2,Forward,conferencePaper,2016,"Dieber, Bernhard; Kacianka, Severin; Rass, Stefan; Schartner, Peter",2016 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS.2016.7759659,,"While the topic of security in industrial applications has gained some momentum in recent years, there are still severe security vulnerabilities which are actively exploited for attacks. The robot operating system (ROS) is expected to further grow in usage and to be used in many industrial applications. Analysis, however, shows that it lacks several security enhancements in order to make it suitable for industrial use. In its current state, false data and commands can be injected posing a possible safety risk for the resulting product and humans in the production. In addition, data may be eavesdropped and used by outsiders to gain insight into the production process. In this paper we propose a security architecture intended for use on top of ROS on the application level. We use a dedicated authorization server to ensure that only valid nodes are part of the application. Cryptographic methods ensure data confidentiality and integrity. We show in a demonstration with a collaborative robot how our architecture can be used to secure a ROS-based application.",Authentication; Cryptography; Digital signatures; Production; Service robots,Application-level security for ROS-based applications,,,,,YES,,NO,,,NO,,
S2206,2,Forward,conferencePaper,2019,"DeMarinis, Nicholas; Tellex, Stefanie; Kemerlis, Vasileios P.; Konidaris, George; Fonseca, Rodrigo",2019 International Conference on Robotics and Automation (ICRA),10.1109/ICRA.2019.8794451,,"Security is particularly important in robotics, as robots can directly perceive and affect the physical world. We describe the results of a scan of the entire IPv4 address space of the Internet for instances of the Robot Operating System (ROS), a widely used robotics software platform. We identified a number of hosts supporting ROS that are exposed to the public Internet, thereby allowing anyone to access robotic sensors and actuators. As a proof of concept, and with the consent of the relevant researchers, we were able to read image sensor information from and actuate a physical robot present in a research lab in an American university. This paper gives an overview of our findings, including our methodology, the geographic distribution of publicly-accessible platforms, the sorts of sensor and actuator data that is available, and the different kinds of robots and sensors that our scan uncovered. Additionally, we offer recommendations on best practices to mitigate these security issues in the future.",Actuators; Internet; Robot sensing systems; Security; Service robots,Scanning the Internet for ROS: A View of Security in Robotics Research,,,,,YES,,NO,,,NO,,
S2207,2,Forward,conferencePaper,2017,"Breiling, Benjamin; Dieber, Bernhard; Schartner, Peter",2017 Annual IEEE International Systems Conference (SysCon),10.1109/SYSCON.2017.7934755,,"The boom for robotics technologies in recent years has also empowered a new generation of robotics software. The Robot Operating System (ROS) is one of the most popular frameworks for robotics researchers and makers which is moving towards commercial and industrial use. Security-wise however, ROS is vulnerable to attacks. It is rather easy to inject or eavesdrop data in a ROS application. This opens many different ways to attack a ROS application resulting in data loss, monetary damage or even physical injury. In this paper we present a secure communication channel enabling ROS-nodes to communicate with authenticity and confidentiality. We secure ROS on a peer-to-peer basis in the direct interaction between publishers and subscribers. We describe the implementation changes we have made to the ROS core and assess the overhead introduced by the new security functions.",Authentication; Authorization; Communication channels; Peer-to-peer computing; Service robots,Secure communication for the robot operating system,,,NO,,YES,,,,,NO,,
S2208,2,Forward,conferencePaper,2017,"Chhetri, Sujit Rokka; Rashid, Nafiul; Faezi, Sina; Al Faruque, Mohammad Abdullah",2017 IEEE/ACM International Conference on Computer-Aided Design (ICCAD),10.1109/ICCAD.2017.8203896,,"The next industrial revolution will incorporate various enabling technologies. These technologies will make the product lifecycle of the manufacturing system efficient, decentralized, and well-connected. However, these technologies have various security issues, and when integrated in the product lifecycle of manufacturing systems can pose various challenges for maintaining the security requirements such as confidentiality, integrity, and availability. In this paper, we will present the various trends and advances in the security of the product lifecycle of the manufacturing system while highlighting the roles played by the major enabling components of Industry 4.0.",Automation; Industries; Intelligent sensors; Manufacturing systems; Robots; Security,Security trends and advances in manufacturing systems in the era of industry 4.0,,NO,,,YES,,,,,NO,,
S2209,2,Forward,conferencePaper,2014,"Bezzo, Nicola; Weimer, James; Pajic, Miroslav; Sokolsky, Oleg; Pappas, George J.; Lee, Insup",2014 IEEE/RSJ International Conference on Intelligent Robots and Systems,10.1109/IROS.2014.6943080,,"In this paper we present a methodology to control ground robots under malicious attack on sensors. Within the term attack we intend any malicious disturbance injection on sensors, actuators, and controller that would compromise the safety of a robot. In order to guarantee resilience against attacks, we use a control-level technique implemented within a recursive algorithm that takes advantage of redundancy in the information received by the controller. We use the case study of a vehicle cruise-control, however, the strategy we present in this work is general for several applications. Our methodology relays on redundancy in the sensor measurements: specifically we consider N velocity measurements and use a recursive filtering technique that estimates the state of the system while being resilient against sensor attacks by acting on the variance of the measurements noise. Finally, we move our focus on hardware validation demonstrating our algorithm through extensive outdoor experiments conducted on two unmanned ground robots.",Noise; Robot sensing systems; Sensor systems; Vectors; Vehicles,Attack resilient state estimation for autonomous robotic systems,,NO,,,YES,,,,,NO,,
S2210,2,Forward,journalArticle,2018,"Chhetri, Sujit Rokka; Faezi, Sina; Rashid, Nafiul; Al Faruque, Mohammad Abdullah",Journal of Hardware and Systems Security,10.1007/s41635-017-0031-0,https://doi.org/10.1007/s41635-017-0031-0,"The next generation of smart manufacturing systems will incorporate various recent enabling technologies. These technologies will aid in ushering the era of the fourth industrial revolution. They will make the supply chain and the product lifecycle of the manufacturing system efficient, decentralized, and well-connected. However, these technologies have various security issues and, when integrated in the supply chain and the product lifecycle of manufacturing systems, can pose various challenges for maintaining the security requirements such as confidentiality, integrity, and availability. In this paper, we will present the various trends and advances in the security of the supply chain and product lifecycle of the manufacturing system while highlighting the roles played by the major enabling components of Industry 4.0.",Industry 4.0; Information; Product lifecycle; Security; Supply chain,Manufacturing Supply Chain and Product Lifecycle Security in the Era of Industry 4.0,,NO,,,YES,,,,,NO,,
S2211,2,Forward,journalArticle,2018,"Bhadani, Rahul Kumar; Sprinkle, Jonathan; Bunting, Matthew",Electronic Proceedings in Theoretical Computer Science,10.4204/EPTCS.269.4,http://arxiv.org/abs/1804.04347,"This paper presents the CAT Vehicle (Cognitive and Autonomous Test Vehicle) Testbed: a research testbed comprised of a distributed simulation-based autonomous vehicle, with straightforward transition to hardware in the loop testing and execution, to support research in autonomous driving technology. The evolution of autonomous driving technology from active safety features and advanced driving assistance systems to full sensor-guided autonomous driving requires testing of every possible scenario. However, researchers who want to demonstrate new results on a physical platform face difficult challenges, if they do not have access to a robotic platform in their own labs. Thus, there is a need for a research testbed where simulation-based results can be rapidly validated through hardware in the loop simulation, in order to test the software on board the physical platform. The CAT Vehicle Testbed offers such a testbed that can mimic dynamics of a real vehicle in simulation and then seamlessly transition to reproduction of use cases with hardware. The simulator utilizes the Robot Operating System (ROS) with a physics-based vehicle model, including simulated sensors and actuators with configurable parameters. The testbed allows multi-vehicle simulation to support vehicle to vehicle interaction. Our testbed also facilitates logging and capturing of the data in the real time that can be played back to examine particular scenarios or use cases, and for regression testing. As part of the demonstration of feasibility, we present a brief description of the CAT Vehicle Challenge, in which student researchers from all over the globe were able to reproduce their simulation results with fewer than 2 days of interfacing with the physical platform.",Computer Science - Robotics; Computer Science - Software Engineering; Electrical Engineering and Systems Science - Systems and Control,The CAT Vehicle Testbed: A Simulator with Hardware in the Loop for Autonomous Vehicle Applications,,NO,,,YES,,NO,,,NO,,
S2212,2,Forward,book,2016,"Matellán, Vicente; Balsa, Jesús; Casado García, Fernando; Fernández, Camino; Martín, Francisco; Rodríguez Lera, Francisco",,,,,,Cybersecurity in Autonomous Systems: Evaluating the performance of hardening ROS,NO,,,,YES,,,,,NO,,
S2213,2,Forward,journalArticle,2018,"Zhou, Xin; Gou, Xiaodong; Huang, Tingting; Yang, Shunkun",IEEE Access,10.1109/ACCESS.2018.2869834,,"Cyber physical systems (CPSs) are rapidly developing, with increasing scale, complexity, and heterogeneity. However, testing CPSs systematically to ensure that they operate with high reliability remains a big challenge. Therefore, it is necessary to summarize existing works and technologies systematically, with the aim of inspiring new inventions for more efficient CPS testing. Accordingly, this paper first investigated the advances in CPS testing methods from ten aspects, including different testing paradigms, technologies, and some non-functional testing methods (including security testing, robust testing, and fragility testing). Then, we further elaborate on the infrastructures of CPS testbeds from the perspectives of their architecture and the corresponding function analyses. Finally, challenges and future research directions are identified and discussed. It can be concluded that future CPS testing should focus more on the combination of different paradigms and technologies for multi-objective by integrating more emerging cutting-edge technologies such as Internet of things, big data, cloud computing, and AI.",Analytical models; Cyber-physical system; Data models; Mathematical model; Monitoring; non-functional testing; robust testing; Security; security testing; testbed; Testing; testing method; Unified modeling language,Review on Testing of Cyber Physical Systems: Methods and Testbeds,,NO,,,YES,,NO,,,NO,,
S2214,2,Forward,conferencePaper,2014,"Toris, Russell; Shue, Craig; Chernova, Sonia",2014 IEEE International Conference on Technologies for Practical Robot Applications (TePRA),10.1109/TePRA.2014.6869141,,"Recent work in the robotics community has lead to the emergence of cloud-based solutions and remote clients. Such work allows robots to effectively distribute complex computations across multiple machines, and allows remote clients, both human and automata, to control robots across the globe. With the increasing use and importance of such ideas, it is crucial not to overlook the critical issue of security in these systems. In this work, we discuss the use of web tokens for achieving secure authentication for remote, non-native clients in the widely-used Robot Operating System (ROS) middleware. Written in a system-independent manner, we demonstrate its use with an application for securing clients within the popular rosbridge protocol.",Authentication; Libraries; Protocols; Robots; Servers; Virtual private networks,Message authentication codes for secure remote non-native client connections to ROS enabled robots,,NO,,,YES,,,,,NO,,
S2215,2,Forward,journalArticle,2018,"Martín, Francisco; Soriano, Enrique; Cañas, José M.",Robotics and Autonomous Systems,10.1016/j.robot.2017.11.002,https://www.sciencedirect.com/science/article/pii/S0921889017303044,"Robotic software frameworks simplify the development of robotic applications. The more powerful ones help to build such applications as a distributed collection of interoperating software nodes. The communications inside those robotic systems are amenable of being attacked and vulnerable to the security threats present on any networked system. With the robots increasingly entering in people’s daily lives, like autonomous cars, drones, etc. security on them is a central issue gaining attention. This paper studies several well known communication middleware used by robotic frameworks running on robots with regular computers, and their support for cybersecurity. It analyzes their performance when transmitting regular robotic data of different sizes, with or without security features, on several network settings. The experiments show that security, when available, does not significantly decrease the quality of the robotic data communication in terms of latency and packet loss rate.",Communications; Frameworks; Middleware; Robotics; Security,Quantitative analysis of security in distributed robotic frameworks,,NO,,,YES,,,,,NO,,
S2216,2,Forward,journalArticle,2018,"Rodríguez-Lera, Francisco J.; Matellán-Olivera, Vicente; Balsa-Comerón, Jesús; Guerrero-Higueras, Ángel Manuel; Fernández-Llamas, Camino",Frontiers in ICT,,https://www.frontiersin.org/articles/10.3389/fict.2018.00002,"In human–robot interaction situations, robot sensors collect huge amounts of data from the environment in order to characterize the situation. Some of the gathered data ought to be treated as private, such as medical data (i.e., medication guidelines), personal, and safety information (i.e., images of children, home habits, alarm codes, etc.). However, most robotic software development frameworks are not designed for securely managing this information. This paper analyzes the scenario of hardening one of the most widely used robotic middlewares, Robot Operating System (ROS). The study investigates a robot’s performance when ciphering the messages interchanged between ROS nodes under the publish/subscribe paradigm. In particular, this research focuses on the nodes that manage cameras and LIDAR sensors, which are two of the most extended sensing solutions in mobile robotics, and analyzes the collateral effects on the robot’s achievement under different computing capabilities and encryption algorithms (3DES, AES, and Blowfish) to robot performance. The findings present empirical evidence that simple encryption algorithms are lightweight enough to provide cyber-security even in low-powered robots when carefully designed and implemented. Nevertheless, these techniques come with a number of serious drawbacks regarding robot autonomy and performance if they are applied randomly. To avoid these issues, we define a taxonomy that links the type of ROS message, computational units, and the encryption methods. As a result, we present a model to select the optimal options for hardening a mobile robot using ROS.",,Message Encryption in Robot Operating System: Collateral Effects of Hardening Mobile Robots,,,,,YES,,NO,,,NO,,
S2217,2,Forward,bookSection,2020,"Dieber, Bernhard; White, Ruffin; Taurer, Sebastian; Breiling, Benjamin; Caiazza, Gianluca; Christensen, Henrik; Cortesi, Agostino",Robot Operating System (ROS): The Complete Reference (Volume 4),,https://doi.org/10.1007/978-3-030-20190-6_8,"ROS is the most popular framework in robotics research and it also grows in terms of industrial use. This makes ROS a worthwhile target for attackers especially since security is not addressed by the core framework itself. Its open architecture and flexibility are also the reasons why ROS suffers from security issues. For example, in ROS it is possible to isolate single nodes from the rest of the application without the ROS master, the other nodes or even the node itself (i.e., its business code) noticing it. This is true for publishers, subscribers and services alike. This makes attacks very difficult to spot at runtime. Penetration testing is the most common security testing practice. The goal is to test an application for possible security flaws. To better facilitate penetration testing for ROS, we introduce ROSPenTo and Roschaos, tools that make use of the vulnerabilities of ROS and demonstrate how ROS applications can be sabotaged by an attacker. In this tutorial you will learn about the ROS XML-RPC API, which is our main attack point. You will see, how API attacks on ROS work in depth. You will get to know Roschaos and ROSPentTo, two tools, which can be used to manipulate running ROS applications.",Penetration testing; ROS; Security,Penetration Testing ROS,,,,,YES,,NO,,,NO,,
S2218,2,Forward,conferencePaper,2017,"Portugal, David; Pereira, Samuel; Couceiro, Micael S.",2017 26th IEEE International Symposium on Robot and Human Interactive Communication (RO-MAN),10.1109/ROMAN.2017.8172422,,"With the growing proliferation of robots in our society comes the natural concern of security. However, this is an often overlooked issue in robotic systems, as the focus is commonly placed in robot functionality and innovation. Unauthorized access to a robot, or a multi-robot network, may seriously compromise the system, potentially leading to unacceptable consequences, such as putting in danger humans that share the environment with the robot(s). In this paper, a deeper look is taken into the security issue in human-robot shared environments by surveying existing work and analyzing security issues in the widely used Robot Operation System (ROS), discussing the different layers of security in a robotic network architecture, and proposing several hierarchical security mechanisms, using the STOP project case study in surveillance robotics.",Authentication; Ports (Computers); Privacy; Robot sensing systems; Service robots,The role of security in human-robot shared environments: A case study in ROS-based surveillance robots,,,,,YES,,NO,,,NO,,
S2219,2,Forward,conferencePaper,2018,"Narayanan, Vedanth; Bobba, Rakesh B.",Proceedings of the 2018 Workshop on Cyber-Physical Systems Security and PrivaCy,10.1145/3264888.3264894,https://doi.org/10.1145/3264888.3264894,"Smart Manufacturing (SM) is envisioned to make manufacturing processes more efficient through automation and integration of networked information systems. Robotic arms are integral to this vision. However the benefits of SM, enabled by automation and networking, also come with cyber risks. In this work, we propose an anomaly detection framework for robotic arms in a manufacturing pipeline and integrate it into Robot Operating System (ROS), a middleware framework whose variants are being considered for deployment in industrial environments for flexible automation. In particular, we explore whether the repetitive behavior of an industrial arm can be leveraged to detect anomalous behaviour that may indicate an intrusion. Based on a learned model, we classify a robot's actions as anomalous or benign. We introduce the notion of a 'tolerance envelope' to train a supervised learning model. Our empirical evaluation shows that anomalies that take the robot out of pre-determined tolerance levels can be detected with high accuracy.",anomaly detection; robot operating system; robotics; smart manufacturing; tolerance envelope,Learning Based Anomaly Detection for Industrial Arm Applications,,NO,,,YES,,NO,,,NO,,
S2220,2,Forward,conferencePaper,2016,"Dóczi, Roland; Kis, Ferenc; Sütő, Balázs; Póser, Valéria; Kronreif, Gernot; Jósvai, Eszter; Kozlovszky, Miklos","2016 IEEE International Conference on Systems, Man, and Cybernetics (SMC)",10.1109/SMC.2016.7844931,,"Robot systems based on ROS are growing in popularity. While they are vulnerable from a cybersecurity perspective, they still provide a solid framework for many research projects. The components can easily communicate with each other, share information and send control commands freely and without major restrictions. In special fields (medical, military, etc.) such freedom is dangerous and not acceptable. To foster the application of ROS in medical research field we are hardening its internal architecture and elevate the software security. In this paper we propose an application layer solution for the dataflow control and protection between the nodes.",Authorization; Cameras; Computer crime; cybersecurity; Databases; medical devices; Middleware; Robot Operating System; Robots; ROS 1.x,Increasing ROS 1.x communication security for medical surgery robot,,,,,YES,,NO,,,NO,,
S2221,2,Forward,conferencePaper,2018,"White, Ruffin; Christensen, Henrik I.; Caiazza, Gianluca; Cortesi, Agostino",2018 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS.2018.8594462,,"Security of robotics systems, as well as of the related middleware infrastructures, is a critical issue for industrial and domestic IoT, and it needs to be continuously assessed throughout the whole development lifecycle. The next generation open source robotic software stack, ROS2, is now targeting support for Secure DDS, providing the community with valuable tools for secure real world robotic deployments. In this work, we introduce a framework for procedural provisioning access control policies for robotic software, as well as for verifying the compliance of generated transport artifacts and decision point implementations.",Access control; Cryptography; Middleware; Service robots; Tools,Procedurally Provisioned Access Control for Robotic Systems,,NO,,,YES,,NO,,,NO,,
S2222,2,Forward,journalArticle,2019,"White, Ruffin; Caiazza, Gianluca; Cortesi, Agostino; Cho, Young Im; Christensen, Henrik I.",IEEE Robotics and Automation Letters,10.1109/LRA.2019.2928780,,"Event data recording is crucial in robotics research, providing prolonged insights into a robot's situational understanding, progression of behavioral state, and resulting outcomes. Such recordings are invaluable when debugging complex robotic applications or profiling experiments ex post facto. As robotic developments mature into production, both the roles and requirements of event logging will broaden, to include serving as evidence for auditors and regulators investigating accidents or fraud. Given the growing number of high profile public incidents involving self-driving automotives resulting in fatality and regulatory policy making, it is paramount that the integrity, authenticity and non-repudiation of such event logs are maintained to ensure accountability. Being mobile cyber-physical systems, robots present new threats, and vulnerabilities beyond traditional IT: unsupervised physical system access or postmortem collusion between robot and OEM could result in the truncation or alteration of prior records. In this letter, we address immutablization of log records via integrity proofs and distributed ledgers with special considerations for mobile and public service robot deployments.",Bitcoin; Blockchain; cryptobotics; Distributed ledger; distributed ledgers; Middleware; networked robots; Robot safety; Robots; software middleware,Black Block Recorder: Immutable Black Box Logging for Robots via Blockchain,,NO,,,YES,,,,,NO,,
S2223,2,Forward,conferencePaper,2019,"Dieber, Bernhard; Breiling, Benjamin",2019 Third IEEE International Conference on Robotic Computing (IRC),10.1109/IRC.2019.00019,,"Mobile manipulation will play an essential role in future production's intralogistics. In addition, it can be assumed that location-independence of manipulation will greatly contribute to flexible production and higher efficiency in robot use. Modular mobile manipulators can be combined from standalone robotic components like mobile platforms and serial arms. This combination enables more flexibility since the robot can be adapted to specific use-cases by exchanging hardware. However, since those robots tend to be very complex systems, their integration into networked Industry 4.0 environments will also cause security risks. In this paper, we present a security architecture and secure interaction workflows for modular mobile manipulators that on the one hand secure the system against unauthorized manipulation and on the other hand enable the integration of mobile manipulators into larger IT infrastructures. Using the example of our inhouse-developed CHIMERA mobile manipulator, we show which architectural means can be considered in order to make a modular mobile manipulator secure. We analyze the expected attack vectors on mobile manipulators and describe their mitigation within our architecture.",Computer architecture; Hardware; Manipulators; mobile manipulation; modularity; robotics; ros; security; Security; Service robots; Software,Security Considerations in Modular Mobile Manipulation,,NO,,,YES,,,,,NO,,
S2224,2,Forward,book,2020,"Liu, Shaoshan",,,,"Offers a step-by-step guide to building autonomous vehicles and robots, with source code and accompanying videos The first book of its kind on the detailed steps for creating an autonomous vehicle or robot, this book provides an overview of the technology and introduction of the key elements involved in developing autonomous vehicles, and offers an excellent introduction to the basics for someone new to the topic of autonomous vehicles and the innovative, modular-based engineering approach called DragonFly. Engineering Autonomous Vehicles and Robots: The DragonFly Modular-based Approach covers everything that technical professionals need to know about: CAN bus, chassis, sonars, radars, GNSS, computer vision, localization, perception, motion planning, and more. Particularly, it covers Computer Vision for active perception and localization, as well as mapping and motion planning. The book offers several case studies on the building of an autonomous passenger pod, bus, and vending robot. It features a large amount of supplementary material, including the standard protocol and sample codes for chassis, sonar, and radar. GPSD protocol/NMEA protocol and GPS deployment methods are also provided. Most importantly, readers will learn the philosophy behind the DragonFly modular-based design approach, which empowers readers to design and build their own autonomous vehicles and robots with flexibility and affordability.  Offers progressive guidance on building autonomous vehicles and robots Provides detailed steps and codes to create an autonomous machine, at affordable cost, and with a modular approach Written by one of the pioneers in the field building autonomous vehicles Includes case studies, source code, and state-of-the art research results Accompanied by a website with supplementary material, including sample code for chassis/sonar/radar; GPS deployment methods; Vision Calibration methods  Engineering Autonomous Vehicles and Robots is an excellent book for students, researchers, and practitioners in the field of autonomous vehicles and robots.",Computers / Artificial Intelligence / Computer Vision & Pattern Recognition; Technology & Engineering / Electrical,Engineering Autonomous Vehicles and Robots: The DragonFly Modular-based Approach,NO,,,,YES,,,,,NO,,
S2225,2,Forward,conferencePaper,2015,"Redwood, Owen; Lawrence, Joshua; Burmester, Mike",Critical Infrastructure Protection IX,10.1007/978-3-319-26567-4_7,,"Current SCADA honeypot technologies present attackers with static or pseudo-random data, and are unlikely to entice attackers to use high value or zero-day attacks. This chapter presents a symbolic cyberphysical honeynet framework that addresses the problem, enhances the screening and coalescence of attack events for analysis, provides attack introspection down to the physics level of a SCADA system and enables forensic replays of attacks. The work extends honeynet methodologies with integrated physics simulation and anomaly detection utilizing a symbolic data flow model of system physics. Attacks that trigger anomalies in the physics of a system are captured and organized via a coalescing algorithm for efficient analysis. Experimental results are presented to demonstrate the effectiveness of the approach.",honeypots; SCADA systems; threat intelligence; visualization,A Symbolic Honeynet Framework for SCADA System Threat Intelligence,,NO,,,YES,,,,,NO,,
S2226,2,Forward,bookSection,2018,"Portugal, David; Santos, Miguel A.; Pereira, Samuel; Couceiro, Micael S.",Artificial Intelligence Safety and Security,,,"The increasing incidence of robots in our society is evident due to the recent advances in the areas of robotics and artificial intelligence. Naturally, this raises the concern of security. Robots that share the environment with humans, need to be intrinsically secure to avoid compromising human physical and data integrity. However, robot cybersecurity is not commonly considered a key area under focus by the research community, despite being vital in several application fields. This chapter discusses security concerns in ROS, the most adopted middleware for robotics, and presents, analyzes, and compares several existing initiatives for securing robot applications in ROS. Results demonstrate important breakthroughs within this domain, room for improvement in the design of robotic solutions regarding cybersecurity, and highlight the need to mature the industry security principles to avoid the penetration of insecure robots into the market.",,On the Security of Robotic Applications Using ROS,,,NO,,YES,,,,,NO,,
S2227,2,Forward,conferencePaper,2018,"Rehman, Shafiq ur; Allgaier, Christopher; Gruhn, Volker",2018 International Conference on Frontiers of Information Technology (FIT),10.1109/FIT.2018.00062,,"Cyber-physical systems (CPS) are complex evolution of classical software systems. These systems integrate the physical layer with software systems, generating the ability for software developers to complete large tasks by combining new aspects of CPS with old design philosophies. These systems offer great potential for many new features and advantages. On the other hand, CPS involves security risks. Many new attack scenarios are made possible by an unsecured and uncharted physical layer. In this paper, we analysed four security requirements engineering methods for software development (UMLsec, CLASP, SQUARE, SREP). The best aspects of these methods are combined and special CPS security parameters are inserted. The main contribution of this research is to develop a security requirements engineering framework for cyber-physical systems. The result is a new methodology designed for the development of a secure CPS, called ""CPS Framework"". The proposed framework is an extension of SREP. Furthermore, the proposed framework is evaluated using a case study and compared to other most important security requirements methods. The promising results are shown in this paper. The achieving results contribute to assist in this research direction. The proposed CPS framework is a good start to focus greater attention on this important aspect of CPS and great support to the research community.","Cyber-physical systems; Medical services; Requirements engineering; Security; Security, security requirements, security requirements engineering (SRE), methodology, framework, security resource repository (SRR), cyber-physical systems (CPS); Sensors; Software; Unified modeling language",Security Requirements Engineering: A Framework for Cyber-Physical Systems,,NO,,,YES,,,,,NO,,
S2228,2,Forward,conferencePaper,2018,"Xu, Zhiheng; Zhu, Quanyan",2018 IEEE Conference on Control Technology and Applications (CCTA),10.1109/CCTA.2018.8511500,,"A Robot Operating System (ROS) plays a significant role in organizing industrial robots for manufacturing. With an increasing number of the robots, the operators integrate a ROS with networked communication to share the data. This cyber-physical nature exposes the ROS to cyber attacks. To this end, this paper proposes a cross-layer approach to achieve secure and resilient control of a ROS. In the physical layer, due to the delay caused by the security mechanism, we design a time-delay controller for the ROS agent. In the cyber layer, we define cyber states and use Markov Decision Process to evaluate the tradeoffs between physical and security performance. Due to the uncertainty of the cyber state, we extend the MDP to a Partially Observed Markov Decision Process (POMDP). We propose a threshold solution based on our theoretical results. Finally, we present numerical examples to evaluate the performance of the secure and resilient mechanism.",Control systems; Cryptography; Delays; Markov processes; Service robots,Cross-Layer Secure and Resilient Control of Delay-Sensitive Networked Robot Operating Systems,,,,,YES,,,,,YES,,
S2229,2,Forward,book,,,,,https://link.springer.com/book/10.1007/978-3-030-60251-2,This book introduces a cross-layer design to achieve security and resilience for CPSs (Cyber-Physical Systems). Part II and Part III of this book bridges the gap between cryptography and control-theoretic tools; and the gap between game theory and control theory,,Cross-Layer Design for Secure and Resilient Cyber-Physical Systems,NO,,,,NO,,,,,NO,,
S2230,2,Forward,webpage,,,,,https://www.ideals.illinois.edu/items/92913,,,Data-driven resiliency assessment of medical cyber-physical systems | IDEALS,NO,,,,NO,,,,,NO,,
S2231,2,Forward,webpage,,,,,https://www.proquest.com/openview/9576abb71833230e96f1c9a2677f8e82/1?pq-origsite=gscholar&cbl=18750,"Explore millions of resources from scholarly journals, books, newspapers, videos and more, on the ProQuest Platform.",,Cyber physical system vulnerability research - ProQuest,NO,,,,NO,,,,,NO,,
S2232,2,Forward,journalArticle,2018,"Amini, Roham; Sulaiman, Rossilawati; Abd Rahman, Abdul Hadi",International Journal of Advanced Computer Science and Applications,10.14569/IJACSA.2018.091022,,"Cyber-attacks are a growing threat to future robots. The shift towards automatization has increased relevance and reliance on robots. Securing robots has been secondary or ternary priority and thus robots are vulnerable to cyber-attacks. Securing robots must become an essential (built-in) part of the design rather than being considered as a subsequent (later) add-on. ROS is a widely used and popular open source framework and robots using ROS are increasing in popularity. However, ROS is vulnerable to cyber-attacks. ROS needs to be secured before robots using ROS reach mass market. This study aims at proposing an architecture to secure ROS, using cryptography mechanism, which addresses the most common ROS safety issues. The advantages of our proposed secure architecture, CryptoROS, is that no changes to ROS software libraries and tools is required, it works with all ROS client libraries (e.g. rospy, roscpp) and rebuilding nodes is not necessary.",,CryptoROS: A Secure Communication Architecture for ROS-Based Applications,,,,,YES,,NO,,,NO,,
S2233,2,Forward,journalArticle,2021,"Xu, Yuan; Deng, Gelei; Zhang, Tianwei; Qiu, Han; Bao, Yungang",Information Sciences,10.1016/j.ins.2021.06.063,https://www.sciencedirect.com/science/article/pii/S002002552100654X,"The development of robotics technology is accelerated by the strong support from cloud computing. Massive computation resources and services from the cloud make modern multi-robot systems more efficient and powerful. However, the introduction of cloud servers to multi-robot systems can also incur potential Denial-of-Service (DoS) threats, where an adversary can utilize the shared cloud resources to degrade or bring down the robot systems. In this paper, we conduct a comprehensive study about this security issue. By analyzing different attack vectors in cloud-robotic platforms, we propose three new DoS attacks, which manipulate the network resources, micro-architecture resources, and function parameters respectively. We conduct extensive evaluations and case studies to demonstrate the feasibility and severity of our techniques. We alert the robotics community to these catastrophic attacks on the safety and performance of cloud-robotic systems, and encourage building better defenses for higher reliability, in addition to automation and intelligence.",Cloud-robotics; Denial-of-Service attacks; Multi-robot Systems,Novel denial-of-service attacks against cloud-based multi-robot systems,,,,,YES,,,,,YES,,
S2234,2,Forward,journalArticle,2021,"Zhu, Quanyan; Rass, Stefan; Dieber, Bernhard; Vilches, Víctor Mayoral",Foundations and Trends® in Robotics,10.1561/2300000061,https://www.nowpublishers.com/article/Details/ROB-061,"Cybersecurity in Robotics: Challenges, Quantitative Modeling, and Practice",,"Cybersecurity in Robotics: Challenges, Quantitative Modeling, and Practice",,,,,YES,,,,,YES,,
S2235,2,Forward,conferencePaper,2020,"Beck, Rakesh Rajan; Vijeev, Abhishek; Ganapathy, Vinod",Proceedings of the 2020 ACM SIGSAC Conference on Computer and Communications Security,10.1145/3372297.3417858,https://doi.org/10.1145/3372297.3417858,"We present Privaros, a framework to enforce privacy policies on drones. Privaros is designed for commercial delivery drones, such as the ones that will likely be used by Amazon Prime Air. Such drones visit various host airspaces, each of which may have different privacy requirements. Privaros uses mandatory access control to enforce the policies of these hosts on guest delivery drones. Privaros is tailored for ROS, a middleware popular in many drone platforms. This paper presents the design and implementation of Privaros's policy-enforcement mechanisms, describes how policies are specified, and shows that policy specification can be integrated with India's Digital Sky portal. Our evaluation shows that a drone running Privaros can robustly enforce various privacy policies specified by hosts, and that its core mechanisms only marginally increase communication latency and power consumption.",drones; mandatory access control; privacy; ros; trusted computing,Privaros: A Framework for Privacy-Compliant Delivery Drones,,,,,YES,,,,,YES,,
S2236,2,Forward,conferencePaper,2019,"Vijeev, Abhishek; Ganapathy, Vinod; Bhattacharyya, Chiranjib",Proceedings of the 20th International Workshop on Mobile Computing Systems and Applications,10.1145/3301293.3302370,https://doi.org/10.1145/3301293.3302370,"Commercial and end-user drones come equipped with a wide array of sensors. Unregulated use of such drones in public airspaces poses a serious threat to the privacy of citizens. We make the case for restricted spaces for drones, which are geographic areas for which a host can specify its privacy policies. Guest drones must prove to the host that they are in compliance with the host's policies before entering the restricted space. We then make the case for an information-flow control-based policy enforcement framework on drones, and sketch the design of a prototype framework atop the Robot Operating System (ROS).",drones; privacy; restricted spaces; trusted hardware,Regulating Drones in Restricted Spaces,,,,,YES,,,,,YES,,
S2237,2,Forward,conferencePaper,2021,"Deng, Gelei; Zhou, Yuan; Xu, Yuan; Zhang, Tianwei; Liu, Yang","24th International Symposium on Research in Attacks, Intrusions and Defenses",10.1145/3471621.3471867,https://doi.org/10.1145/3471621.3471867,"Multi-Robot Systems (MRSs) show significant advantages to deal with complex tasks efficiently. However, the system complexity inevitably enlarges the attack surface and adds difficulty in guaranteeing the security and safety of MRSs. In this paper, we present an in-depth investigation about the Byzantine threats in MRSs, where some robot is untrusted. We design a practical methodology to identify potential Byzantine risks in a given MRS workload built from the Robot Operating System (ROS). It consists of three novel steps (requirement specification using signal temporal logic, attack surface determination via data-flow analysis, attack identification using requirement-driven fuzzing) to thoroughly assess MRS workloads. We use this fuzzing method to inspect five typical MRS workloads from past works and the ROS platform, and identify three novel kinds of attacks that can be launched with five attack strategies. We conduct comprehensive experiments in the Gazebo simulator and a real-world MRS with three TurtlBot3 robots to validate these attacks, which can remarkably decrease the system’s performance, or even cause task failures.",Byzantine threat; fuzzing; multi-robot system,An Investigation of Byzantine Threats in Multi-Robot Systems,,NO,,,YES,,,,,NO,,
S2238,2,Forward,conferencePaper,2021,"Xu, Yuan; Zhang, Tianwei; Bao, Yungang","24th International Symposium on Research in Attacks, Intrusions and Defenses",10.1145/3471621.3471854,https://doi.org/10.1145/3471621.3471854,"Robot apps are becoming more automated, complex and diverse. An app usually consists of many functions, interacting with each other and the environment. This allows robots to conduct various tasks. However, it also opens a new door for cyber attacks: adversaries can leverage these interactions to threaten the safety of robot operations. Unfortunately, this issue is rarely explored in past works. We present the first systematic investigation about the function interactions in common robot apps. First, we disclose the potential risks and damages caused by malicious interactions. By investigating the relationships among different functions, we identify and categorize three types of interaction risks. Second, we propose RTron, a novel system to detect and mitigate these risks and protect the operations of robot apps. We introduce security policies for each type of risks, and design coordination nodes to enforce the policies and regulate the interactions. We conduct extensive experiments on 110 robot apps from the ROS platform and two complex apps (Baidu Apollo and Autoware) widely adopted in industry. Evaluation results indicated RTron can correctly identify and mitigate all potential risks with negligible performance cost. To validate the practicality of the risks and solutions, we implement and evaluate RTron on a physical UGV (Turtlebot) with real-word apps and environments.",Function interaction; Risk analysis and mitigation; Robot apps,Analysis and Mitigation of Function Interaction Risks in Robot Apps,,,,,YES,,,,,YES,,
S2239,2,Forward,conferencePaper,2019,"Jain, Saurabh; Doriya, Rajesh",Next Generation Computing Technologies on Computational Intelligence,10.1007/978-981-15-1718-1_6,,"Reliability comes with security and security comes with latest technology and any technology is best suited for any application area until it possess a high security features. Security is considered to be one of the prominent feature which makes it more acceptable and deployable to diversified and multidisciplinary applications. The paper try to put forth an in depth review on various security aspects confining more on the security details related to cloud robotics. Cloud robotics is a term involved and emerged with the fusion of two dipole concepts namely cloud computing and robotics. Security flaws in these two technologies are the major concerns and can affect the cloud robotics. Cloud computing suffers from various type of vulnerabilities like Network based attacks, Data storage based attacks, Virtualization based attacks is also prone to operating system level attacks. The same way robotics also suffers from attacks namely denial of service attack, and dictionary attack etc. Thus it can be termed as that cloud robotics need to be safeguard from all such threats mentioned above. The draft in particular thus throws light on the different cryptographic algorithms: RSA (Rivest Shamir Andelmen), AES (Advanced Encryption Standard), ECC (Elliptic Curve Cryptography). Exclusive to the algorithms cited above, the article discusses few more methods and techniques concerning to security which can be aptly applied to cloud robotics to make it more safe and secure.",Cloud computing; Cloud robotics; Robotics; ROS; Security,Security Issues and Solutions in Cloud Robotics: A Survey,,,,,YES,,,,,YES,,
S2240,2,Forward,journalArticle,,"Brijacak, Inka; Yahyanejad, Saeed; Reiterer, Bernhard; Hofbaur, Michael",,10.3217/978-3-85125-524-9-15,https://openlib.tugraz.at/download.php?id=5aaa45931232a&location=medra,"Perception is a major component of a system when it comes to the concept of safety in human-robot interaction. Although designing a mechanically safe robot may reduce lots of potential hazards, it is still beneﬁciary or even required to have detailed knowledge of the current status of the robot, human, and other environmental entities. We refer to this knowledge as perceptional awareness, or simply perception, that subsumes: (i) what our system perceives from robot state and its environment, (ii) what our system perceives from human state, and (iii) what a human perceives from the robot state. In this paper we provide requirements for a holistic architecture to construct safe perception using multiple heterogeneous and independent sensors and processing units in any environment that includes both robots and humans. We also illustrate our concepts on the basis of particular instances of this scheme realized in the robotic lab.",,Toward Safe Perception in Human-Robot Interaction,,,,,NO,,,,,NO,,
S2241,2,Forward,journalArticle,2022,"Mayoral-Vilches, Víctor",International Journal of Cyber Forensics and Advanced Threat Investigations,,https://conceptechint.net/index.php/CFATI/article/view/41,"Robots are often shipped insecure and in some cases fully unprotected. The rationale behind is threefold: first, defensive security mechanisms for robots are still in their early stages, not covering the complete threat landscape. Second, the inherent complexity of robotic systems makes their protection costly, both technically and economically. Third, vendors do not generally take responsibility in a timely manner, extending the zero-day exposure window (time until mitigation of a zero-day) to several years on average. Worse, several manufacturers keep forwarding the problem to the end-users of these machines or discarding it. In this article we review the status of robot cybersecurity considering three sources of data: 1) recent literature, 2) questionnaires performed in top robotics forums and 3) recent research results in robot cybersecurity. Building upon a decade of experience in robotics, this article reviews the current status of cybersecurity in robotics and argues about the current challenges to secure robotic systems. Ultimately, based on the empirical results collected over a period of three years performing security assessments in robots, the present text advocates for a complementary offensive approach methodology to protect robots in a feasible and timely manner.",Offensive; Review; Robotics; Security; Survey,"Robot Cybersecurity, a Review",,,,,YES,,,,,YES,,
S2242,2,Forward,conferencePaper,2018,"Muller, Rainer; Scholer, Matthias; Karkowski, Martin","2018 Fifth International Conference on Internet of Things: Systems, Management and Security",10.1109/IoTSMS.2018.8554528,,"Currently used assembly systems require a high level of flexibility and reconfigurability to face the increased requirements for mass customization and frequent technological changes. This results in an increase of the time-to-manufacture and the manufacturing costs which contests with the goals of the manufacturers. To mitigate the challenges caused by this sophistication, we introduce a holistic approach and a standardized control system. Later on we discuss its functionality and validate it. We have found that utilizing these minimizes the implementation effort and supports developing implementations suitable for industrial applications.",assembly systems; Assembly systems; Control systems; Costs; design methodology; Faces; Internet; Mass customization; modularity; petri nets; Security; service based architecture; workflow; workflow-engine,Increasing the Flexibility of Customized Assembly Systems with a Modular Control System,,,,,YES,,NO,,,NO,,
S2243,2,Forward,webpage,,,,,https://www.proquest.com/openview/54711ccd9b480f31eff019b4698085f1/1?pq-origsite=gscholar&cbl=18750&diss=y,"Explore millions of resources from scholarly journals, books, newspapers, videos and more, on the ProQuest Platform.",,A Framework for Test &amp; Evaluation of Autonomous Systems along the Virtuality-Reality Spectrum - ProQuest,NO,,,,NO,,,,,NO,,
S2244,2,Forward,conferencePaper,2019,"Sandoval, Sergio; Thulasiraman, Preetha",2019 IEEE International Systems Conference (SysCon),10.1109/SYSCON.2019.8836824,,"The Robot Operating System (ROS) is a widely adopted standard robotic middleware. However, its preliminary design is devoid of any network security features. Military grade unmanned systems must be guarded against network threats. ROS 2 is built upon the Data Distribution Service (DDS) standard and is designed to provide solutions to identified ROS 1 security vulnerabilities by incorporating authentication, encryption, and process profile features, which rely on public key infrastructure. The Department of Defense is looking to use ROS 2 for its military-centric robotics platform. This paper seeks to demonstrate that ROS 2 and its DDS security architecture can serve as a functional platform for use in military grade unmanned systems, particularly in unmanned Naval aerial swarms. In this paper, we focus on the viability of ROS 2 to safeguard communications between swarms and a ground control station (GCS). We test ROS 2's ability to mitigate and withstand certain cyber threats, specifically that of rogue nodes injecting unauthorized data and accessing services that will disable parts of the UAV swarm. We use the Gazebo robotics simulator to target individual UAVs to ascertain the effectiveness of our attack vectors under specific conditions. We demonstrate the effectiveness of ROS 2 in mitigating the chosen attack vectors but observed a measurable operational delay within our simulations.",Authentication; autonomous systems; cyber security; Drones; Encryption; Robots; ROS; Standards; UAV swarms,Cyber Security Assessment of the Robot Operating System 2 for Aerial Networks,,,,,YES,,NO,,,NO,,
S2245,2,Forward,journalArticle,2022,"Gao, Cong; Wang, Geng; Shi, Weisong; Wang, Zhongmin; Chen, Yanping",IEEE Internet of Things Journal,10.1109/JIOT.2021.3130054,,"The autonomous driving industry has mushroomed over the past decade. Although autonomous driving has undoubtedly become one of the most promising technologies of this century, its development faces multiple challenges, of which security is the major concern. In this article, we present a thorough analysis of autonomous driving security. First, the attack surface of autonomous driving is presented. After an analysis of the operation of autonomous driving in terms of key components and technologies, the security of autonomous driving is elaborated in four dimensions: 1) sensors; 2) operating system; 3) control system; and 4) vehicle-to-everything (V2X) communication. Sensor security is examined from five components, which are mainly responsible for self-positioning and environmental perception. The analysis of operating system security, the second dimension, is concentrated on the robot operating system. Concerning the control system security, the controller area network is approached mainly from vulnerabilities and protection measures. The fourth dimension, V2X communication security, is probed from four categories of attacks: 1) authenticity/identification; 2) availability; 3) data integrity; and 4) confidentiality with corresponding solutions. Moreover, the drawbacks of existing methods adopted in the four dimensions are also provided. Finally, a conceptual multilayer defense framework is proposed to secure the information flow from external communication to the physical autonomous vehicle.",Attack surface; autonomous driving; Autonomous vehicles; control area network; Control systems; data distribution service (DDS); Operating systems; robot operating system; security; Security; sensor; Sensor systems; Sensors; unmanned vehicle; Vehicle-to-everything; vehicle-to-everything (V2X) communication,Autonomous Driving Security: State of the Art and Challenges,,NO,,,YES,,,,,NO,,
S2246,2,Forward,conferencePaper,2021,"Lopez, Martin Andreoni; Baddeley, Michael; Lunardi, Willian T.; Pandey, Anshul; Giacalone, Jean-Pierre",2021 17th International Conference on Distributed Computing in Sensor Systems (DCOSS),10.1109/DCOSS52077.2021.00059,,"UAVs are increasingly appearing in swarms or formations to leverage cooperative behavior, forming flying ad hoc networks. These UAV-enabled networks can meet several complex mission requirements and are seen as a potential enabler for many of the emerging use-cases in future communication networks. Such networks, however, are characterized by a highly dynamic and mobile environment with no guarantee of a central network infrastructure which can cause both connectivity and security issues. While wireless mesh networks are envisioned as a solution for such scenarios, these networks come with their own challenges and security vulnerabilities. In this paper, we analyze the key security and resilience issues resulting from the application of wireless mesh networks within UAV swarms. Specifically, we highlight the main challenges of applying current mesh technologies within the domain of UAV swarms and expose existing vulnerabilities across the communication stack. Based on this analysis, we present a security-focused architecture for UAV mesh communications. Finally, from the identification of these vulnerabilities, we discuss research opportunities posed by the unique challenges of UAV swarm connectivity.",Ad hoc networks; Communication networks; Computer architecture; Distributed computing; Mesh Networks; Security; Sensor systems; Swarm; UAVs; Wireless mesh networks,"Towards Secure Wireless Mesh Networks for UAV Swarm Connectivity: Current Threats, Research, and Opportunities",,NO,,,YES,,,,,NO,,
S2247,2,Forward,report,2018,"Sandoval, Sergio",,,https://apps.dtic.mil/sti/citations/AD1065502,"Unmanned systems have gained in prominence as platforms from which to conduct military operations. The Robot Operating System ROS is a widely adopted standard robotic middleware however, its preliminary design is devoid of any network security features. Military grade unmanned systems must be guarded against network threats. ROS 2.0 is built upon the Data Distribution Service standard and is designed to provide solutions to identified ROS 1.0 security vulnerabilities by incorporating authentication, encryption, and process profile features. The Department of Defense is looking to use ROS 2.0 for its military-centric robotics platform. Through our work, we demonstrated that ROS 2.0 can serve as a functional platform for use in military grade unmanned systems. We tested the viability of ROS 2.0 to safeguard communications between an unmanned aerial swarm and a ground control station against rogue node and message-spoofing attacks. Our experiments employ the PX4 Multi Vehicle Simulation swarming three iris-quadcopter aerial drones within a Gazebo 9 simulation environment, utilizing QGroundControl as our ground control station. Drones were targeted individually to ascertain the effectiveness of our attack vectors under specific conditions. We demonstrated the effectiveness of ROS 2.0 in mitigating the chosen attack vectors but observed a measurable operational delay within our simulations.",,Cyber Security Testing of the Robot Operating System in Unmanned Aerial Systems,NO,,,,YES,,NO,,,NO,,
S2248,2,Forward,journalArticle,,"Edlinger, Raimund; Leimer, Lydia; Zauner, Michael; Froschauer, Roman",,10.3217/978-3-85125-663-5-09,https://openlib.tugraz.at/download.php?id=5d09dba11d343&location=medra,"The present work deals with the recording, transmission and presentation of sensor data, which is transmitted by different sensors mounted on or in mobile robots. Complex, heterogeneous, modular robot systems require manufacturerand user-independent standardized interfaces based on open communication standards and information models to enable interoperability and integration. Cross-system communication and data retrieval from different devices of different manufacturers is complicated by proprietary application programming interfaces (APIs). It is virtually impossible to exchange modules with devices from alternative manufacturers, which makes it difﬁcult to integrate devices that meet the requirements. The OPC-UA communication interface is a platform-independent standard and is widely used in robotics and automation technology to connect compatible devices with different interfaces. In this paper we present the concept and implementation of a standardized communication interface for data exchange and visualization with ROS-based robot systems.",,Towards a flexible industrial robot system architecture,,,,,NO,,,,,NO,,
S2249,2,Forward,journalArticle,2021,"Breiling, Benjamin; Dieber, Bernhard; Pinzger, Martin; Rass, Stefan",Journal of Cybersecurity and Privacy,10.3390/jcp1010006,https://www.mdpi.com/2624-800X/1/1/6,"With the growing popularity of robots, the development of robot applications is subject to an ever increasing number of additional requirements from e.g., safety, legal and ethical sides. The certification of an application for compliance to such requirements is an essential step in the development of a robot program. However, at this point in time it must be ensured that the integrity of this program is preserved meaning that no intentional or unintentional modifications happen to the program until the robot executes it. Based on the abstraction of robot programs as workflows we present in this work a cryptography-powered distributed infrastructure for the preservation of robot workflows. A client composes a robot program and once it is accepted a separate entity provides a digital signature for the workflow and its parameters which can be verified by the robot before executing it. We demonstrate a real-world implementation of this infrastructure using a mobile manipulator and its software stack. We also provide an outlook on the integration of this work into our larger undertaking to provide a distributed ledger-based compliant robot application development environment.",compliance; cryptographic infrastructure; program integrity; robot programming; robotics; security,A Cryptography-Powered Infrastructure to Ensure the Integrity of Robot Workflows,,,,,YES,,,,,YES,,
S2250,2,Forward,document,2013,"Toris, Russell",,,,"Human-Robot Interaction (HRI) is a rapidly expanding field of study that focuses on allow-ing non-roboticist users to naturally and effectively interact with robots. The importance of conducting extensive user studies has become a fundamental component of HRI research; however, due to the nature of robotics research, such studies often become expensive, time consuming, and limited to constrained demographics. This work presents the Robot Man-agement System, a novel framework for bringing robotic experiments to the web. A detailed description of the open source system, an outline of new security measures, and a use case study of the RMS as a means of conducting user studies is presented. Using a series of navi-gation and manipulation tasks with a PR2 robot, three user study conditions are compared: users that are co-present with the robot, users that are recruited to the university lab but control the robot from a different room, and remote web-based users. The findings show lit-tle statistical differences between usability patterns across these groups, further supporting the use of web-based crowdsourcing techniques for certain types of HRI evaluations. i Acknowledgements I would like to thank Prof. Odest Chadwicke Jenkins of Brown University for allowing the use of the PR2 robot throughout this study as well as Willow Garage, Inc. and Robert Bosch, LLC. for their development and support of online robotics tools and software. Furthermore, I would like to thank fellow graduate student David Kent for his help conduction the case study. Additionally, I would like to thank Prof. Craig Shue for his help with the methods used for",,Approved,NO,,,,YES,,,,,NO,,
S2251,2,Forward,conferencePaper,2020,"Amrouche, Faouzi; Lagraa, Sofiane; Frank, Raphaël; State, Radu",2020 IEEE 91st Vehicular Technology Conference (VTC2020-Spring),10.1109/VTC2020-Spring48590.2020.9129461,,"Robot Operating System (ROS) is becoming more and more important and is used widely by developers and researchers in various domains. One of the most important fields where it is being used is the self-driving cars industry. However, this framework is far from being totally secure, and the existing security breaches do not have robust solutions. In this paper we focus on the camera vulnerabilities, as it is often the most important source for the environment discovery and the decision-making process. We propose an unsupervised anomaly detection tool for detecting suspicious frames incoming from camera flows. Our solution is based on spatio-temporal autoencoders used to truthfully reconstruct the camera frames and detect abnormal ones by measuring the difference with the input. We test our approach on a real-word dataset, i.e. flows coming from embedded cameras of self-driving cars. Our solution outperforms the existing works on different scenarios.",Autonomous automobiles; Cameras; Image reconstruction; Robot vision systems; Security; Training,Intrusion detection on robot cameras using spatio-temporal autoencoders: A self-driving car application,,NO,,,YES,,,,,NO,,
S2252,2,Forward,journalArticle,2018,"Hiltscher, Johannes",,,,"The evolution of Advanced Driver Assistance Systems (ADASs) increasingly paves the way towards autonomous driving. The increase in sensor data to be processed as well as the complexity of processing algorithms demands more powerful processing platforms. Additionally, aspects like functional safety and platform security have to be taken into account. Algorithms should be re-usable to facilitate rapid development. Current solutions are very much focused on single sub-systems and incompatible with next generation processing platforms available for ADASs. In this paper we therefore propose a novel architecture for future ADAS development, taking into account the aforementioned aspects. We also outline tools to aid developers in dealing with the real-time and functional safety aspects of ADASs. The utilization of the presented architecture in the EU-funded project ADAS&ME is also described.",,A flexible automotive systems architecture for next generation ADAS,,NO,,,YES,,,,,NO,,
S2253,2,Forward,journalArticle,2021,"Caiazza, Gianluca <1991>",,,http://dspace.unive.it/handle/10579/18475,"Cyber-physical systems (CPS) are increasingly deployed as part of the interconnected robotic cyber-infrastructures which are known as the Industrial Internet of Things (IIoT) network. Those pervasive devices are capable of automatizing various tasks and provide novel functionalities in a wide range of applications. However, this growth made the devices a worthwhile target for attackers and cybercriminals as well. The new frontiers of large-scale deployments of connected smart devices, in which we observed a tremendous growth in the amount of stored and processed sensitive data, have maturated into a widespread suspicion concerning the way in which these flow into the infrastructures. How do we make these devices safe? How can we verify their correct operation? Due to the intrinsic limitations of those devices, either from the power consumption point of view and the actual computational power at our disposal, engineering cybersecurity solutions are not trivial. This thesis focuses on discussing and developing security solutions for those networks by analyzing the application of the security pillars of Confidentiality, Integrity, Availability, Privacy, Authenticity and Trustworthiness, Non-Repudiation, Accountability, and Auditability. We provide an overview of the robotic scene and introduce the Robot Operating System (ROS), the framework we adopted as a testbed of our solutions. More in detail, this work discusses (i) novel solutions in the field of authentication and authorization in access control architectures and policy generation, management, and distribution, (ii) vulnerabilities and countermeasures in robotic frameworks, and (iii) novel approaches of network vulnerabilities excavation and accountability. In order to provide agnostic research tools and results, we develop static solutions at the application-level that could exploit prior offline computation power.    The main results of the thesis can be summarized as follows: (i) a state of the art analysis of application-level threats on a general robotic framework and an in-deep review of the attack surface on ROS (ii) the formalization of novel approaches to access control architectures distribution, and the dissertation of an advanced policy management tooling we developed in the field of authentication and authorization  (iii) the definition of a novel network vulnerability excavation tool and discussion on attribute-based encryption to tackle privacy issues (iv) creation of a blockchain-powered software-based black box for a robotic network to address Accountability and Non-Repudiation    The results discussed in this thesis give a solid base for the definition of the future security mechanisms for robotic devices that could be easily and securely integrated into big-scale deployments spreading security solutions by reducing overall the tradeoff between security and usability.",,Application-level security for robotic networks,,,,,YES,,,,,YES,,
S2254,2,Forward,webpage,,,,,https://www.proquest.com/openview/2a63b6afe512c493fcfce8a1c61d9cef/1?pq-origsite=gscholar&cbl=18750&diss=y,"Explore millions of resources from scholarly journals, books, newspapers, videos and more, on the ProQuest Platform.",,Cross-Layer Design for Secure and Resilient Control of Cyber-Physical Systems in Smart Cities - ProQuest,NO,,,,NO,,,,,NO,,
S2255,2,Forward,conferencePaper,2021,"Rivera, Sean; State, Radu",2021 IFIP/IEEE International Symposium on Integrated Network Management (IM),,,"Robotic systems are becoming an ever-increasing part of everyday life due to their capacity to carry out physical tasks on behalf of human beings. Found in nearly every facet of our lives, robotic systems are used domestically, in small and large-scale factories, for the production and processing of agriculture, for military operations, to name a few. The Robotic Operating System (ROS) is the standard operating system used today for the development of modular robotic systems. However, in its development, ROS has been notorious for the absence of security mechanisms, placing people in danger both physically and digitally. This dissertation summary presents the development of a suite of ROS tools, leading up to the development of a modular, secure framework for ROS. An integrated approach for the security of ROS-enabled robotic systems is described, to set a baseline for the continual development to increase ROS security. The work culminates in the ROS security tool ROS-Immunity, combining internal system defense, external system verification, and automated vulnerability detection in an integrated tool that, in conjunction with Secure-ROS, provides a suite of defenses for ROS systems against malicious attackers.",Agriculture; dissertation; integrated; Operating systems; Production facilities; robotics; ROS; security; Security; System verification; Task analysis; Tools,Securing Robots: An Integrated Approach for Security Challenges and Monitoring for the Robotic Operating System (ROS),,,,,YES,,NO,,,NO,,
S2256,2,Forward,conferencePaper,2021,"Yu, Beibei; Hu, Mingnan; Sun, Zhe; Chen, Bo","2021 International Conference on Control, Automation and Information Sciences (ICCAIS)",10.1109/ICCAIS52680.2021.9624593,,"In the past few years, the functions of robots have been largely enriched and deployed in numerous fields. Advanced robots are equipped with apparatuses such as cameras, radars and servo motors, which enhances the ability to interact with humans and perceive the physical world. With the integration of cloud services, robots are getting highly networked. The utilization of communication networks makes the system more dynamic, but also destroys the closeness of the system and makes the system vulnerable to cyber-attacks. Especially, attackers controlling robots through malicious attacks may damage the physical environment and threaten human life. Robot Operating System (ROS) is one of the most popular frameworks for robot software development. However, ROS has many security problems. In this paper, we study the vulnerabilities of the ROS communication framework and design threat models for the TCPROS protocol and ROS Master/Slave API respectively. TCPROS has the shortcomings of plaintext transmission and is lack of identity verification. To solve this problem, we propose an effective method for tampering with control commands. Then, a tool is designed to destroy the ROS graph through the ROS Master/Slave API. We use ROS-based mobile robots equipped with RGB-D cameras and introduce Yolo, a real-time target detection system based on convolutional neural networks, to build a target detection and tracking platform. The proposed attack strategy is verified on the robotic platform. Experimental results show that the designed attack strategy can effectively tamper the data between nodes and destroy the system's stability.",Authentication; Cameras; Cyber-physical System; Cybersecurity; Object detection; Object Detection and Tracking; Radar tracking; Robot vision systems; Robotics; ROS; Target tracking; Tools; Yolov3,Data Tampering Attack Design for ROS-Based Object Detection and Tracking Robotic Platform,,,,,YES,,,,,YES,,
S2257,2,Forward,journalArticle,,"Breiling, Benjamin; Dieber, Bernhard; Reiterer, Bernhard; Schlotzhauer, Andreas; Taurer, Sebastian",,,,,,Safety nicht ohne Security in der kollaborativen Robotik,,,,,NO,,NO,,,NO,,
S2258,2,Forward,webpage,,,,,https://arc.aiaa.org/doi/abs/10.2514/6.2016-4129,,,Real-Time Safety-Assured Autonomous Aircraft | AIAA AVIATION Forum,NO,,,,NO,,,,,NO,,
S2259,2,Forward,journalArticle,2022,"Alshamrani, Sultan S.; Alkhudadi, Bdour A.; Almtrafi, Sara M.",Security and Communication Networks,10.1155/2022/8045874,https://www.hindawi.com/journals/scn/2022/8045874/,"Robots have improved human life and increased the efficiency of performance in tasks that require precision and effort. For example, surgical robots are now used to perform precise surgical procedures and give accurate results. Moreover, robots are also used in elderly care to ease their lives. Perhaps there can even be self-driving cars that could deliver a person to their destination without the need of a driver. So it is very important to mention that these robots should be secure in terms of security for human life. Hence, this paper aims to explore the published studies on robots and their various security vulnerabilities. We review the most prominent weaknesses in the robotic operating system (ROS) and discuss some types of attacks against these robots. Also, this paper discusses the security enhancements to protect ROS that researchers have suggested protecting against some of the attacks and vulnerabilities that may occur on these robots. The primary findings of this work are to generate system copies for backup as well as encryption to protect against information disclosure. Also, a dynamic model is needed to detect and mitigate attacks that may occur in a physical manner, such as injecting malware into robots.",,Cyberattacks on Self-Driving Cars and Surgical and Eldercare Robots,,,,,YES,,,,,YES,,
S2260,2,Forward,conferencePaper,2021,"Jacobsen, Rune Hylsberg; Marandi, Ali",MILCOM 2021 - 2021 IEEE Military Communications Conference (MILCOM),10.1109/MILCOM52596.2021.9652900,,"Autonomous Unmanned Aerial Vehicles (UAVs) find increasing use in the civil airspace where multi-UAV systems are deployed to perform operations supervised by remote control facilities. Since these multi-UAV systems operate in public locations and connect using open communication standards, it raises significant security concerns. While most UAV designers befittingly deal with the complexity of autonomy, communication, and control, they often ignore to consider system security aspects in the early design phase. To support the security design process of multi-UAV systems, this paper provides an analysis of cybersecurity threats of multi-UAV systems based on the STRIDE model. The identified threats are subsequently linked with a risk assessment to be prioritized according to severity. We conclude by establishing a set of security design recommendations for connected inspection UAVs to contribute with guidance for the design of future multi-UAV systems.",Autonomous aerial vehicles; Conferences; drone; Inspection; Intrusion detection; Military communication; Protocols; risk assessment; Safety; security management; threat model; Unmanned aerial vehicle,Security Threats Analysis of the Unmanned Aerial Vehicle System,,,,,YES,,,,,YES,,
S2261,2,Forward,webpage,,,,,https://www.proquest.com/openview/48398313fdb7cdf6bd5ff1bdc8ce9350/1?pq-origsite=gscholar&cbl=18750&diss=y,"Explore millions of resources from scholarly journals, books, newspapers, videos and more, on the ProQuest Platform.",,Usable Security and Verification for Distributed Robotic Systems - ProQuest,NO,,,,NO,,,,,NO,,
S2262,2,Forward,journalArticle,,"Mayoral-Vilches, Vıctor; White, Ruffin; Caiazza, Gianluca; Arguedas, Mikael",,,,"ROS 2 is rapidly becoming a standard in the robotics industry. Built upon DDS as its default communication middleware and used in safety-critical scenarios, adding security to robots and ROS computational graphs is increasingly becoming a concern. The present work introduces SROS2, a series of developer tools and libraries that facilitate adding security to ROS 2 graphs. Focusing on a usability-centric approach in SROS2, we present a methodology for securing graphs systematically while following the DevSecOps model. We also demonstrate the use of our security tools by presenting an application case study that considers securing a graph using the popular Navigation2 and SLAM Toolbox stacks applied in a TurtleBot3 robot. We analyse the current capabilities of SROS2 and discuss the shortcomings, which provides insights for future contributions and extensions. Ultimately, we present SROS2 as usable security tools for ROS 2 and argue that without usability, security in robotics will be greatly impaired.",,SROS2: Usable Cyber Security Tools for ROS 2,,,,,NO,,,,,NO,,
S2263,2,Forward,conferencePaper,2019,"Thulasiraman, Preetha; Sandoval, Sergio",,,https://calhoun.nps.edu/handle/10945/69141,"The Robot Operating System (ROS) is a widely adopted standard robotic middleware. However, its preliminary design is devoid of any network security features. Military grade unmanned systems must be guarded against network threats. ROS 2 is built upon the Data Distribution Service (DDS) standard and is designed to provide solutions to identified ROS 1 security vulnerabilities by incorporating authentication, encryption, and process profile features, which rely on public key infrastructure. The Department of Defense is looking to use ROS 2 for its military-centric robotics platform. This paper seeks to demonstrate that ROS 2 and its DDS security architecture can serve as a functional platform for use in military grade unmanned systems, particularly in unmanned Naval aerial swarms. In this paper, we focus on the viability of ROS 2 to safeguard communications between swarms and a ground control station (GCS). We test ROS 2’s ability to mitigate and withstand certain cyber threats, specifically that of rogue nodes injecting unauthorized data and accessing services that will disable parts of the UAV swarm. We use the Gazebo robotics simulator to target individual UAVs to ascertain the effectiveness of our attack vectors under specific conditions. We demonstrate the effectiveness of ROS 2 in mitigating the chosen attack vectors but observed a measurable operational delay within our simulations.",,Cyber Security Assessment of the Robot Operating System 2 for Aerial Networks,,,,,YES,,NO,,,NO,,
S2264,2,Forward,webpage,,,,,https://www.proquest.com/openview/e55fe9ac486989126008ad651b6a1f32/1?pq-origsite=gscholar&cbl=18750&diss=y,"Explore millions of resources from scholarly journals, books, newspapers, videos and more, on the ProQuest Platform.",,Advanced Security Analysis for Emergent Software Platforms - ProQuest,NO,,,,NO,,,,,NO,,
S2265,2,Forward,report,2022,"Zhang, Shenhui; Tao, Songjing; Li, Xiulai; Wu, Shuang; Tang, Ming; Tang, Zeping; Liang, Zhixuan; Liu, Bernie",,,https://www.researchsquare.com/article/rs-1667177/v1,"Abstract           Robot Operating System (ROS) has brought great potential for automation in all fields involved in production activities, which greatly improves productivity and simplifies operations that belonged to humans originally. However, ROS is highly dependent on communication but lacks secure data sharing mechanisms. Therefore, when it comes to multi-robots interaction scenarios, there are severe challenges in ensuring the safe and trustworthy exchange of specified confidential data among multi-robots. The reliability of data also needs to be considered carefully. This paper proposes a solution to this problem based on blockchain technology. We present a general secure and convenient authorization framework named AuthROS for ROS nodes with absolute security and high availability based on private Ethereum network and SM algorithms. This framework is capable of meeting the requirements for immutability and security of confidential data exchange in nodes of ROS of any size. An authority granting and identity identifying mechanism is proposed and integrated into the Ethereum smart contract to execute atomically to ensure the trustworthiness exchange of data and no third-party participation. At the same time, a key exchange based on SM2 and plaintext encryption mechanism based on SM4 is proposed to ensure the data transmission security. Furthermore, a data digest uploading scheme is adopted to improve the efficiency of querying and data uploading to the Ethereum network. Based on all of mechanisms mentioned above, AuthROS can play a role in the scenario where data transmitted among robots need to be recorded and maintain immobility. Experimental results demonstrated that AuthROS is equipped with excellent security, good time performance along with Nodes Forging resistance. We believe that AuthROS is the first secure data sharing framework for Robots loaded with ROS. We open sourced AuthROS at https://github.com/RobAI-Lab/ROS-Chain.",,AuthROS: A Secure and Convenient Framework for Data Sharing among Robot Operating Systems (ROS),NO,,,,YES,,,,,NO,,
S2266,2,Forward,book,2018,"Natale, Lorenzo; Asfour, Tamim; Kanehiro, Fumio; Vahrenkamp, Nikolaus",,,,,,Software Architectures for Humanoid Robotics,NO,,,,YES,,,,,NO,,
S2267,2,Forward,journalArticle,2019,"Halloran, Joshua",,,,"Cyber physical systems (CPSs) are rapidly developing, with increasing scale, complexity, and heterogeneity. However, testing CPSs systematically to ensure that they operate with high reliability remains a big challenge. Therefore, it is necessary to summarize existing works and technologies systematically, with the aim of inspiring new inventions for more efficient CPS testing. Accordingly, this paper first investigated the advances in CPS testing methods from ten aspects, including different testing paradigms, technologies, and some non-functional testing methods (including security testing, robust testing, and fragility testing). Then, we further elaborate on the infrastructures of CPS testbeds from the perspectives of their architecture and the corresponding function analyses. Finally, challenges and future research directions are identified and discussed. It can be concluded that future CPS testing should focus more on the combination of different paradigmsandtechnologiesformulti-objectivebyintegratingmoreemergingcutting-edgetechnologiessuch as Internet of things, big data, cloud computing, and AI.",,Review on Testing of Cyber Physical Systems: Methods and Testbeds,,,,,YES,,NO,,,NO,,
S2268,2,Forward,webpage,,,,,https://bibliotekanauki.pl/articles/1857457,,,Bezpieczeństwo aplikacji robotów z wykorzystanie… — Library of Science,NO,,,,NO,,,,,NO,,
S2269,2,Forward,journalArticle,2022,"López Echavarría, Andrés Santiago; León Gualdrón, Daniel Felipe",,,https://repository.eia.edu.co/handle/11190/5288,"RESUMEN: En la actualidad, el uso y las aplicaciones de robots industriales ha aumentado considerablemente dando cabida a la búsqueda de alternativas para el control y la programación de los mismos. En ocasiones, la presencialidad aumenta los costos, riesgos y tiempos de desplazamiento requeridos para la programación y el control de los robots, como sucede en la Universidad EIA, la cual cuenta con un robot SCARA y un ABB IRB 140 para el proceso de aprendizaje de los estudiantes, estos no cuentan con métodos de conexión remota y además se encuentran en desuso, generando que su proceso de innovación y mejora se encuentre detenido. El desarrollo de este proyecto se planteó mediante la metodología de diseño de Karl T. Ulrich, en el cual, mediante un sistema de pasos estructurados de diseño, se creó un método para el control de acceso remoto para el robot SCARA, una interfaz gráfica para la interacción de un usuario y un sistema de pruebas para verificar la llegada y funcionamiento de los comandos que se han enviado remotamente, además de un primer acercamiento a la implementación de este sistema en plataformas ABB el cual se muestra en los anexos del documento. Mediante la implementación de este sistema de teleoperación se ayuda a eliminar las barreras geográficas de los laboratorios universitarios convencionales y se amplía el acceso a las herramientas de aplicación del conocimiento para que la comunidad académica pueda implementarlas en la industria colombiana.",,Sistema de teleoperación para robots de configuración rotacional,,NO,,,YES,,,,,NO,,
S2270,2,Forward,webpage,,,,,https://www.dbpia.co.kr/Journal/articleDetail?nodeId=NODE08763286,,,자동차 시스템을 위한 네트워크 통신에서의 ROS 태스크의 기능성에 대한 연구 - 한국정보과학회 학술발표논문집 - 한국정보과학회 : 논문 - DBpia,NO,,,,NO,,,,,NO,,
S2271,2,Forward,conferencePaper,2018,"Shah, Shital; Dey, Debadeepta; Lovett, Chris; Kapoor, Ashish",Field and Service Robotics,10.1007/978-3-319-67361-5_40,,"Developing and testing algorithms for autonomous vehicles in real world is an expensive and time consuming process. Also, in order to utilize recent advances in machine intelligence and deep learning we need to collect a large amount of annotated training data in a variety of conditions and environments. We present a new simulator built on Unreal Engine that offers physically and visually realistic simulations for both of these goals. Our simulator includes a physics engine that can operate at a high frequency for real-time hardware-in-the-loop (HITL) simulations with support for popular protocols (e.g. MavLink). The simulator is designed from the ground up to be extensible to accommodate new types of vehicles, hardware platforms and software protocols. In addition, the modular design enables various components to be easily usable independently in other projects. We demonstrate the simulator by first implementing a quadrotor as an autonomous vehicle and then experimentally comparing the software components with real-world flights.",,AirSim: High-Fidelity Visual and Physical Simulation for Autonomous Vehicles,,,,,YES,,NO,,,NO,,
S2272,2,Forward,journalArticle,2020,"Radoglou-Grammatikis, Panagiotis; Sarigiannidis, Panagiotis; Lagkas, Thomas; Moscholios, Ioannis",Computer Networks,10.1016/j.comnet.2020.107148,https://www.sciencedirect.com/science/article/pii/S138912862030116X,"Climate change has introduced significant challenges that can affect multiple sectors, including the agricultural one. In particular, according to the Food and Agriculture Organization of the United Nations (FAO) and the International Telecommunication Union (ITU), the world population has to find new solutions to increase the food production by 70% by 2050. The answer to this crucial challenge is the suitable adoption and utilisation of the Information and Communications Technology (ICT) services, offering capabilities that can increase the productivity of the agrochemical products, such as pesticides and fertilisers and at the same time, they should minimise the functional cost. More detailed, the advent of the Internet of Things (IoT) and specifically, the rapid evolution of the Unmanned Aerial Vehicles (UAVs) and Wireless Sensor Networks (WSNs) can lead to valuable and at the same time economic Precision Agriculture (PA) applications, such as aerial crop monitoring and smart spraying tasks. In this paper, we provide a survey regarding the potential use of UAVs in PA, focusing on 20 relevant applications. More specifically, first, we provide a detailed overview of PA, by describing its various aspects and technologies, such as soil mapping and production mapping as well as the role of the Global Positioning Systems (GPS) and Geographical Information Systems (GIS). Then, we discriminate and analyse the various types of UAVs based on their technical characteristics and payload. Finally, we investigate in detail 20 UAV applications that are devoted to either aerial crop monitoring processes or spraying tasks. For each application, we examine the methodology adopted, the proposed UAV architecture, the UAV type, as well as the UAV technical characteristics and payload.",Precision agriculture (PA); Remote sensing (RS); Unmanned aerial vehicle (UAV),A compilation of UAV applications for precision agriculture,,NO,,,YES,,,,,NO,,
S2273,2,Forward,conferencePaper,2016,"Manhães, Musa Morena Marcusso; Scherer, Sebastian A.; Voss, Martin; Douat, Luiz Ricardo; Rauschenbach, Thomas",OCEANS 2016 MTS/IEEE Monterey,10.1109/OCEANS.2016.7761080,,"This paper describes the Unmanned Underwater Vehicle (UUV) Simulator, an extension of the open-source robotics simulator Gazebo to underwater scenarios, that can simulate multiple underwater robots and intervention tasks using robotic manipulators. This is achieved mainly through a set of newly implemented plugins that model underwater hydrostatic and hydrodynamic effects, thrusters, sensors, and external disturbances. In contrast to existing solutions, it reuses and extends a general-purpose robotics simulation platform to underwater environments.",Dynamics; Load modeling; Robot sensing systems; Vehicle dynamics; Vehicles,UUV Simulator: A Gazebo-based package for underwater intervention and multi-robot simulation,,NO,,,YES,,,,,NO,,
S2274,2,Forward,journalArticle,2017,"Zhou, Dingjiang; Wang, Zijian; Bandyopadhyay, Saptarshi; Schwager, Mac",IEEE Robotics and Automation Letters,10.1109/LRA.2017.2656241,,"This letter presents a distributed collision avoidance algorithm for multiple dynamic vehicles moving in arbitrary dimensions. In our algorithm, each robot continually computes its buffered Voronoi cell (BVC) and plans its path within the BVC in a receding horizon fashion. We prove that our algorithm guarantees collision avoidance for robots with single integrator dynamics. We show that our algorithm has computational complexity of O(k), which is the same as that of the optimal reciprocal collision avoidance (ORCA) algorithm, and is considerably faster than model predictive control (MPC) and sequential convex programming (SCP) based approaches. Moreover, ORCA and MPC-SCP require relative position, velocity, and even other information, to be exchanged over a communication network among the robots. Our algorithm only requires the sensed relative position, and therefore is well suited for on-line implementation as it does not require a communication network, and it works well with noisy relative position sensors. Furthermore, we provide an extension of our algorithm to robots with higher-order dynamics like quadrotors. We demonstrate the capabilities of our algorithm by comparing it to ORCA in multiple benchmark simulation scenarios, and we present results of over 70 experimental trials using five quadrotors in a motion capture environment.",Collision avoidance; distributed robot systems; Heuristic algorithms; motion and path planning; Prediction algorithms; Robot sensing systems; Vehicle dynamics; Vehicles,"Fast, On-line Collision Avoidance for Dynamic Vehicles Using Buffered Voronoi Cells",,NO,,,YES,,,,,NO,,
S2275,2,Forward,conferencePaper,2020,"Xiang, Fanbo; Qin, Yuzhe; Mo, Kaichun; Xia, Yikuan; Zhu, Hao; Liu, Fangchen; Liu, Minghua; Jiang, Hanxiao; Yuan, Yifu; Wang, He; Yi, Li; Chang, Angel X.; Guibas, Leonidas J.; Su, Hao",,,https://openaccess.thecvf.com/content_CVPR_2020/html/Xiang_SAPIEN_A_SimulAted_Part-Based_Interactive_ENvironment_CVPR_2020_paper.html,,,SAPIEN: A SimulAted Part-Based Interactive ENvironment,,NO,,,YES,,,,,NO,,
S2276,2,Forward,journalArticle,2017,"Orsag, Matko; Korpela, Christopher; Bogdan, Stjepan; Oh, Paul",IEEE Transactions on Robotics,10.1109/TRO.2017.2750693,,"In this paper, we present selected benchmark aerial manipulation tasks using an aerial vehicle endowed with multi-degree of freedom manipulators. The proposed tasks analyze environmental coupling and are broken into three general categories: momentary, loose, and strong coupling. A classical control structure is derived, tuned, and verified through experiments, conducted for benchmarking purposes to include pick-and-place, insertion, and valve-turning tasks. Although other nonlinear controllers may prove more effective, the classical control approach has been selected in order to analyze contact stability and provide benchmark results for future reference. An analysis of system stability is conducted and implemented into the controller. A vision-based high-level controller fuses motion tracking data in order to provide control of both the aircraft and the manipulators, allowing the system to become coupled to the environment and perform the required operation. We present recent results validating our framework using the proposed aircraft-arm system.",Aerial robots; Benchmark testing; dexterous manipulation; Manipulators; Mathematical model; Position control; stability control; Target tracking; Unmanned aerial vehicles,Dexterous Aerial Robots—Mobile Manipulation Using Unmanned Aerial Systems,,NO,,,YES,,,,,NO,,
S2277,2,Forward,conferencePaper,2019,"Guerra, Winter; Tal, Ezra; Murali, Varun; Ryou, Gilhyun; Karaman, Sertac",2019 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS40897.2019.8968116,,"FlightGoggles is a photorealistic sensor simulator for perception-driven robotic vehicles. The key contributions of FlightGoggles are twofold. First, FlightGoggles provides photorealistic exteroceptive sensor simulation using graphics assets generated with photogrammetry. Second, it provides the ability to combine (i) synthetic exteroceptive measurements generated in silico in real time and (ii) vehicle dynamics and proprioceptive measurements generated in motio by vehicle(s) in flight in a motion-capture facility. FlightGoggles is capable of simulating a virtual-reality environment around autonomous vehicle(s) in flight. While a vehicle is in flight in the Flight-Goggles virtual reality environment, exteroceptive sensors are rendered synthetically in real time while all complex dynamics are generated organically through natural interactions of the vehicle. The FlightGoggles framework allows for researchers to accelerate development by circumventing the need to estimate complex and hard-to-model interactions such as aerodynamics, motor mechanics, battery electrochemistry, and behavior of other agents. The ability to perform vehicle-in-the-loop experiments with photorealistic exteroceptive sensor simulation facilitates novel research directions involving, e.g., fast and agile autonomous flight in obstacle-rich environments, safe human interaction, and flexible sensor selection. FlightGoggles has been utilized as the main test for selecting nine teams that will advance in the AlphaPilot autonomous drone racing challenge. We survey approaches and results from the top AlphaPilot teams, which may be of independent interest. FlightGoggles is distributed as open-source software along with the photorealistic graphics assets for several simulation environments, under the MIT license at http://flightgoggles.mit.edu.",,FlightGoggles: Photorealistic Sensor Simulation for Perception-driven Robotics using Photogrammetry and Virtual Reality,,NO,,,YES,,,,,NO,,
S2278,2,Forward,conferencePaper,2016,"Schäfer, Björn E.; Picchi, Davide; Engelhardt, Thomas; Abel, Dirk",2016 24th Mediterranean Conference on Control and Automation (MED),10.1109/MED.2016.7536055,,"A concept for a multicopter unmanned aerial vehicle (UAV) automatically performing inspection flights at a wind turbine is proposed. Key aspects of the concept are (1) a priori 3D mapping of the plant and (2) spline-based flight path planning as well as (3) a collision avoidance and distance control system. A quadrotor UAV prototype and its dynamical model are presented. Validation of the different aspects is carried out in simulation and partially in indoor tests using Robot Operating System (ROS). Existence of a 3D map is an essential precondition for path planning and collision-free flight. A brief initial flight preceding the actual inspection with a 2D LiDAR sensor yields a point cloud of the plant which is used for 3D mapping. This map is efficiently generated and represented using octrees, a hierarchical data structure that can be used for 3D maps. Subsequently a smooth and collision-free flight path is generated using splines. For redundancy's sake navigation tasks not only rely on GPS but also on the LiDAR sensor mentioned before. The sensor allows for continuous estimation of the distance between multicopter and wind turbine. A distance control algorithm guarantees collision-free flight.",Inspection; Laser radar; Mathematical model; Robot sensing systems; Three-dimensional displays; Unmanned aerial vehicles; Wind turbines,Multicopter unmanned aerial vehicle for automated inspection of wind turbines,,NO,,,YES,,,,,NO,,
S2279,2,Forward,conferencePaper,2016,"Andaluz, Víctor Hugo; Chicaiza, Fernando A.; Gallardo, Cristian; Quevedo, Washington X.; Varela, José; Sánchez, Jorge S.; Arteaga, Oscar","Augmented Reality, Virtual Reality, and Computer Graphics",10.1007/978-3-319-40621-3_19,,"This paper presents the implementation of a new 3D simulator applied to the area of robotics. The simulator allows to analyze the performance of different schemes of autonomous and/or tele-operated control in structured environments, partially structured and unstructured. For robot-environment interaction is considered virtual reality software Unity3D, this software exchanges information with MATLAB to execute different control algorithms proposed through the use of shared memory. The exchange of information in real time between the two software is essential because the advanced control algorithms require a feedback from the robot-environment interaction to close the control loop, while the simulated robot updates its kinematic and dynamic parameters depending on controllability variables calculated by MATLAB. Finally, the 3D simulator is evaluated by implementing an autonomous control scheme to solve the problem of path following of a 6DOF robot arm, also the results obtained by implementing the tele-operation scheme for said robot are presented.",Path following; Shared memory; Simulator 3D; Unity3d-MATLAB; Virtual reality simulator,Unity3D-MatLab Simulator in Real Time for Robotics Applications,,NO,,,YES,,,,,NO,,
S2280,2,Forward,journalArticle,2019,"Esfahlani, Shabnam Sadeghi",Journal of Industrial Information Integration,10.1016/j.jii.2019.04.006,https://www.sciencedirect.com/science/article/pii/S2452414X18300773,"This paper proposes the development of a system incorporating inertial measurement unit (IMU), a consumer-grade digital camera and a fire detection algorithm simultaneously with a nano Unmanned Aerial Vehicle (UAV) for inspection purposes. The video streams are collected through the monocular camera and navigation relied on the state-of-the-art indoor/outdoor Simultaneous Localisation and Mapping (SLAM) system. It implements the robotic operating system (ROS) and computer vision algorithm to provide a robust, accurate and unique inter-frame motion estimation. The collected onboard data are communicated to the ground station and used the SLAM system to generate a map of the environment. A robust and efficient re-localization was performed to recover from tracking failure, motion blur, and frame lost in the data received. The fire detection algorithm was deployed based on the color, movement attributes, temporal variation of fire intensity and its accumulation around a point. The cumulative time derivative matrix was utilized to analyze the frame-by-frame changes and to detect areas with high-frequency luminance flicker (random characteristic). Color, surface coarseness, boundary roughness, and skewness features were perceived as the quadrotor flew autonomously within the clutter and congested area. Mixed Reality system was adopted to visualize and test the proposed system in a physical environment, and the virtual simulation was conducted through the Unity game engine. The results showed that the UAV could successfully detect fire and flame, autonomously fly towards and hover around it, communicate with the ground station and simultaneously generate a map of the environment. There was a slight error between the real and virtual UAV calibration due to the ground truth data and the correlation complexity of tracking real and virtual camera coordinate frames.",Autonomous flight; Computer vision; Crazyflie 2.0; Fire detection; Monocular camera,Mixed reality and remote sensing application of unmanned aerial vehicle in fire and smoke detection,,NO,,,YES,,,,,NO,,
S2281,2,Forward,conferencePaper,2014,"Benavidez, Patrick; Lambert, Josue; Jaimes, Aldo; Jamshidi, Mo",2014 World Automation Congress (WAC),10.1109/WAC.2014.6936156,,"In this paper, a fuzzy control system is presented for an unmanned aerial vehicle (UAV) which provides aerial support for an unmanned ground vehicle (UGV). The UGV acts as a mobile launching pad for the UAV. The UAV provides additional environmental image feedback to the UGV. Our UAV of choice is a Parrot ArDrone 2.0 quadcopter, a small four rotored aerial vehicle, competent for its agile flight and video feedback capabilities. This paper presents design and simulation of fuzzy logic controllers for performing landing and altitude control. Image processing and Mamdani-type inference are used for converting sensor input into control signals used to control the UAV.",Cameras; cooperative robots; fuzzy logic; Fuzzy logic; Hardware; image processing; Quadrotor; ROS; Three-dimensional displays; UAV; UGV,Landing of an Ardrone 2.0 quadcopter on a mobile base using fuzzy logic,,NO,,,YES,,,,,NO,,
S2282,2,Forward,journalArticle,2020,"Odry, Ákos; Kecskes, Istvan; Sarcevic, Peter; Vizvari, Zoltan; Toth, Attila; Odry, Péter",Sensors,10.3390/s20030803,https://www.mdpi.com/1424-8220/20/3/803,"This paper proposes a novel fuzzy-adaptive extended Kalman filter (FAEKF) for the real-time attitude estimation of agile mobile platforms equipped with magnetic, angular rate, and gravity (MARG) sensor arrays. The filter structure employs both a quaternion-based EKF and an adaptive extension, in which novel measurement methods are used to calculate the magnitudes of system vibrations, external accelerations, and magnetic distortions. These magnitudes, as external disturbances, are incorporated into a sophisticated fuzzy inference machine, which executes fuzzy IF-THEN rules-based adaption laws to consistently modify the noise covariance matrices of the filter, thereby providing accurate and robust attitude results. A six-degrees of freedom (6 DOF) test bench is designed for filter performance evaluation, which executes various dynamic behaviors and enables measurement of the true attitude angles (ground truth) along with the raw MARG sensor data. The tuning of filter parameters is performed with numerical optimization based on the collected measurements from the test environment. A comprehensive analysis highlights that the proposed adaptive strategy significantly improves the attitude estimation quality. Moreover, the filter structure successfully rejects the effects of both slow and fast external perturbations. The FAEKF can be applied to any mobile system in which attitude estimation is necessary for localization and external disturbances greatly influence the filter accuracy.",adaptive filter; attitude estimation; extended Kalman filter; fuzzy logic; inertial measurement unit; sensor fusion,A Novel Fuzzy-Adaptive Extended Kalman Filter for Real-Time Attitude Estimation of Mobile Robots,,NO,,,YES,,,,,NO,,
S2283,2,Forward,conferencePaper,2014,"Kermorgant, Olivier","Simulation, Modeling, and Programming for Autonomous Robots",10.1007/978-3-319-11900-7_3,,"In this paper we present a dynamic simulator for intervention autonomous underwater vehicles. Prototyping and testing of such robots is often tedious and costly, and realistic simulation can greatly help validating several aspects of the project. In order to benefit from existing software, the presented system is integrated with ROS, through the Gazebo dynamic simulator, and the underwater image rendering UWSim. The whole approach allows realistic rendering of dynamic multi-robot simulation, with contact physics, buoyancy, hydrodynamic damping and low-level PID control. This paper details the modeling choices that are done and exposes how to build its own AUV model. Integration with other ROS programs is exposed, and a simulation shows an example of behavior during a black box recovery mission.",Autonomous Underwater Vehicle; Kinematic Simulator; Orientation Error; Remotely Operate Vehicle; World Frame,A Dynamic Simulator for Underwater Vehicle-Manipulators,,NO,,,YES,,,,,NO,,
S2284,2,Forward,conferencePaper,2016,"Gómez, Vicenç; Thijssen, Sep; Symington, Andrew; Hailes, Stephen; Kappen, Hilbert J.",Twenty-Sixth International Conference on Automated Planning and Scheduling,,https://www.aaai.org/ocs/index.php/ICAPS/ICAPS16/paper/view/13105,"This paper presents a novel method for controlling teams of unmanned aerial vehicles using Stochastic Optimal Control (SOC) theory. The approach consists of a centralized high-level planner that computes optimal state trajectories as velocity sequences, and a platform-specific low-level controller which ensures that these velocity sequences are met. The planning task is expressed as a centralized path-integral control problem, for which optimal control computation corresponds to a probabilistic inference problem that can be solved by efficient sampling methods. Through simulation we show that our SOC approach (a) has significant benefits compared to deterministic control and other SOC methods in multimodal problems with noise-dependent optimal solutions, (b) is capable of controlling a large number of platforms in real-time, and (c) yields collective emergent behaviour in the form of flight formations. Finally, we show that our approach works for real platforms, by controlling a team of three quadrotors in outdoor conditions.",,Real-Time Stochastic Optimal Control for Multi-Agent Quadrotor Systems,,NO,,,YES,,,,,NO,,
S2285,2,Forward,conferencePaper,2015,"Meger, David; Higuera, Juan Camilo Gamboa; Xu, Anqi; Giguère, Philippe; Dudek, Gregory",2015 IEEE International Conference on Robotics and Automation (ICRA),10.1109/ICRA.2015.7139509,,"We present an end-to-end framework for realizing fully automated gait learning for a complex underwater legged robot. Using this framework, we demonstrate that a hexapod flipper-propelled robot can learn task-specific control policies purely from experience data. Our method couples a state-of-the-art policy search technique with a family of periodic low-level controls that are well suited for underwater propulsion. We demonstrate the practical efficacy of tabula rasa learning, that is, learning without the use of any prior knowledge, of policies for a six-legged swimmer to carry out a variety of acrobatic maneuvers in three dimensional space. We also demonstrate informed learning that relies on simulated experience from a realistic simulator. In numerous cases, novel emergent gait behaviors have arisen from learning, such as the use of one stationary flipper to create drag while another oscillates to create thrust. Similar effective results have been demonstrated in under-actuated configurations, where as few as two flippers are used to maneuver the robot to a desired pose, or through an acrobatic motion such as a corkscrew. The success of our learning framework is assessed both in simulation and in the field using an underwater swimming robot.",Legged locomotion; Robot kinematics; Robot sensing systems; Vehicle dynamics; Vehicles,Learning legged swimming gaits from experience,,NO,,,YES,,,,,NO,,
S2286,2,Forward,journalArticle,2020,"Coppola, Mario; McGuire, Kimberly N.; De Wagter, Christophe; de Croon, Guido C. H. E.",Frontiers in Robotics and AI,,https://www.frontiersin.org/articles/10.3389/frobt.2020.00018,"This work presents a review and discussion of the challenges that must be solved in order to successfully develop swarms of Micro Air Vehicles (MAVs) for real world operations. From the discussion, we extract constraints and links that relate the local level MAV capabilities to the global operations of the swarm. These should be taken into account when designing swarm behaviors in order to maximize the utility of the group. At the lowest level, each MAV should operate safely. Robustness is often hailed as a pillar of swarm robotics, and a minimum level of local reliability is needed for it to propagate to the global level. An MAV must be capable of autonomous navigation within an environment with sufficient trustworthiness before the system can be scaled up. Once the operations of the single MAV are sufficiently secured for a task, the subsequent challenge is to allow the MAVs to sense one another within a neighborhood of interest. Relative localization of neighbors is a fundamental part of self-organizing robotic systems, enabling behaviors ranging from basic relative collision avoidance to higher level coordination. This ability, at times taken for granted, also must be sufficiently reliable. Moreover, herein lies a constraint: the design choice of the relative localization sensor has a direct link to the behaviors that the swarm can (and should) perform. Vision-based systems, for instance, force MAVs to fly within the field of view of their camera. Range or communication-based solutions, alternatively, provide omni-directional relative localization, yet can be victim to unobservable conditions under certain flight behaviors, such as parallel flight, and require constant relative excitation. At the swarm level, the final outcome is thus intrinsically influenced by the on-board abilities and sensors of the individual. The real-world behavior and operations of an MAV swarm intrinsically follow in a bottom-up fashion as a result of the local level limitations in cognition, relative knowledge, communication, power, and safety. Taking these local limitations into account when designing a global swarm behavior is key in order to take full advantage of the system, enabling local limitations to become true strengths of the swarm.",,A Survey on Swarming With Micro Air Vehicles: Fundamental Challenges and Constraints,,NO,,,YES,,,,,NO,,
S2287,2,Forward,conferencePaper,2013,"Santamaria-Navarro, Àngel; Andrade-Cetto, Juan",2013 IEEE International Conference on Robotics and Automation,10.1109/ICRA.2013.6631327,,"This paper develops a new method for uncalibrated image-based visual servoing. In contrast to traditional image-based visual servo, the proposed solution does not require a known value of camera focal length for the computation of the image Jacobian. Instead, it is estimated at run time from the observation of the tracked target. The technique is shown to outperform classical visual servoing schemes in situations with noisy calibration parameters and for unexpected changes in the camera zoom. The method's performance is demonstrated both in simulation experiments and in a ROS implementation of a quadrotor servoing task. The developed solution is tightly integrated with ROS and is made available as part of the IRI ROS stack.",Cameras; Jacobian matrices; Servomotors; Visual servoing; Visualization,Uncalibrated image-based visual servoing,,NO,,,YES,,,,,NO,,
S2288,2,Forward,conferencePaper,2014,"Ling, Kevin; Chow, Derek; Das, Arun; Waslander, Steven L.",2014 Canadian Conference on Computer and Robot Vision,10.1109/CRV.2014.13,,"Autonomous landing of quad rotor UAV on a maritime vessel is a challenging task, as low cost sensors, unknown movements of the landing surface, and external disturbances make it difficult to generate a relative pose estimate with sufficient accuracy for landing. In this work, we propose an architecture that avoids sensor limitations while allowing for accurate relative pose estimation, even in the presence of wind disturbances. The final landing sequence is performed entirely in the body-fixed inertial frame so that noisy measurements from the GPS and magnetometer sensors do not degrade the relative estimation accuracy. Simulation results of the entire system architecture are presented, as well as experimental results of visual landing pad tracking for representative motions, which demonstrate the validity of the approach.",autonomous landing; Cameras; Estimation; Global Positioning System; Marine vehicles; mobile robotics; quadrotor; Sensors; target-tracking; Vectors; Vehicles; vision,Autonomous Maritime Landings for Low-Cost VTOL Aerial Vehicles,,NO,,,YES,,,,,NO,,
S2289,2,Forward,conferencePaper,2018,"Sayre-McCord, Thomas; Guerra, Winter; Antonini, Amado; Arneberg, Jasper; Brown, Austin; Cavalheiro, Guilherme; Fang, Yajun; Gorodetsky, Alex; McCoy, Dave; Quilter, Sebastian; Riether, Fabian; Tal, Ezra; Terzioglu, Yunus; Carlone, Luca; Karaman, Sertac",2018 IEEE International Conference on Robotics and Automation (ICRA),10.1109/ICRA.2018.8460692,,"The development of fast, agile micro Unmanned Aerial Vehicles (UAVs) has been limited by (i) on-board computing hardware restrictions, (ii) the lack of sophisticated vision-based perception and vision-in-the-loop control algorithms, and (iii) the absence of development environments where such systems and algorithms can be rapidly and easily designed, implemented, and validated. Here, we first present a new micro UAV platform that integrates high-rate cameras, inertial sensors, and an NVIDIA Jetson Tegra X1 system-on-chip compute module that boasts 256 GPU cores. The UAV mechanics and electronics were designed and built in house, and are described in detail. Second, we present a novel “virtual reality” development environment, in which photorealistically-rendered synthetic on-board camera images are generated in real time while the UAV is in flight. This development environment allows us to rapidly prototype computing and sensing hardware as well as perception and control algorithms, using real physics, real interoceptive sensor data (e.g., from the on-board inertial measurement unit), and synthetic exteroceptive sensor data (e.g., from synthetic cameras). Third, we demonstrate repeated agile maneuvering with closed-loop vision-based perception and control algorithms, which we have developed using this environment.",Cameras; Navigation; Real-time systems; Sensors; Solid modeling; Unmanned aerial vehicles; Visualization,Visual-Inertial Navigation Algorithm Development Using Photorealistic Camera Simulation in the Loop,,,,,YES,,NO,,,NO,,
S2290,2,Forward,journalArticle,2018,"Coppola, Mario; McGuire, Kimberly N.; Scheper, Kirk Y. W.; de Croon, Guido C. H. E.",Autonomous Robots,10.1007/s10514-018-9760-3,https://doi.org/10.1007/s10514-018-9760-3,"To avoid collisions, Micro Air Vehicles (MAVs) flying in teams require estimates of their relative locations, preferably with minimal mass and processing burden. We present a relative localization method where MAVs need only to communicate with each other using their wireless transceiver. The MAVs exchange on-board states (velocity, height, orientation) while the signal strength indicates range. Fusing these quantities provides a relative location estimate. We used this for collision avoidance in tight areas, testing with up to three AR.Drones in a $$4\,\mathrm{m}~\mathbf {\times }~4\,\mathrm{m}$$area and with two miniature drones ($$\approx 50\,\mathrm{g}$$) in a $$2~\mathrm{m}~\mathbf {\times }~2~\mathrm{m}$$area. The MAVs could localize each other and fly several minutes without collisions. In our implementation, MAVs communicated using Bluetooth antennas. The results were robust to the high noise and disturbances in signal strength. They could improve further by using transceivers with more accurate signal strength readings.",Autonomous flight; Collision avoidance; Indoor exploration; Micro Air Vehicles; Relative localization,On-board communication-based relative localization for collision avoidance in Micro Air Vehicle teams,,NO,,,YES,,,,,NO,,
S2291,2,Forward,conferencePaper,2020,"Abbyasov, Bulat; Lavrenov, Roman; Zakiev, Aufar; Yakovlev, Konstantin; Svinin, Mikhail; Magid, Evgeni",2020 IEEE International Conference on Robotics and Automation (ICRA),10.1109/ICRA40945.2020.9196621,,"Robot simulators provide an easy way for evaluation of new concepts and algorithms in a simulated physical environment reducing development time and cost. Therefore it is convenient to have a tool that quickly creates a 3D landscape from an arbitrary 2D image or 2D laser range finder data. This paper presents a new tool that automatically constructs such landscapes for Gazebo simulator. The tool converts a grayscale image into a 3D Collada format model, which could be directly imported into Gazebo. We run three different simultaneous localization and mapping (SLAM) algorithms within three varying complexity environments that were constructed with our tool. A real-time factor (RTF) was used as an efficiency benchmark. Successfully completed SLAM missions with acceptable RTF levels demonstrated the efficiency of the tool. The source code is available for free academic use.",Collision avoidance; Gray-scale; Robot sensing systems; Solid modeling; Three-dimensional displays; Tools,Automatic tool for Gazebo world construction: from a grayscale image to a 3D solid model,,NO,,,YES,,,,,NO,,
S2292,2,Forward,journalArticle,2014,"Ling, Kevin",,,https://uwspace.uwaterloo.ca/handle/10012/8803,"With the use of unmanned aerial vehicles (UAVs) becoming more widespread, a need for precise autonomous landings has arisen. In the maritime setting, precise autonomous landings will help to provide a safe way to recover UAVs deployed from a ship. On land, numerous applications have been proposed for UAV and unmanned ground vehicle (UGV) teams where autonomous docking is required so that the UGVs can either recover or service a UAV in the ﬁeld. Current state of the art approaches to solving the problem rely on expensive inertial measurement sensors and RTK or diﬀerential GPS systems. However, such a solution is not practical for many UAV systems.    A framework to perform precision landings on a moving target using low-cost sensors is proposed in this thesis. Vision from a downward facing camera is used to track a target on the landing platform and generate high quality relative pose estimates. The landing procedure consists of three stages. First, a rendezvous stage commands the quadrotor on a path to intercept the target. A target acquisition stage then ensures that the quadrotor is tracking the landing target. Finally, visual measurements of the relative pose to the landing target are used in the target tracking stage where control and estimation are performed in a body-planar frame, without the use of GPS or magnetometer measurements. A comprehensive overview of the control and estimation required to realize the three stage landing approach is presented.    Critical parts of the landing framework were implemented on an AscTec Pelican testbed. The AprilTag visual ﬁducial system is chosen for use as the landing target. Implementation details to improve the AprilTag detection pipeline are presented. Simulated and experimen- tal results validate key portions of the landing framework. The novel relative estimation scheme is evaluated in an indoor positioning system. Tracking and landing on a moving target is demonstrated in an indoor environment. Outdoor tests also validate the target tracking performance in the presence of wind.",,Precision Landing of a Quadrotor UAV on a Moving Target Using Low-Cost Sensors,,NO,,,YES,,,,,NO,,
S2293,2,Forward,conferencePaper,2014,"Santamaria-Navarro, Angel; Lippiello, Vincenzo; Andrade-Cetto, Juan","2014 IEEE International Symposium on Safety, Security, and Rescue Robotics (2014)",10.1109/SSRR.2014.7017672,,"This paper presents a task oriented control strategy for aerial vehicles equipped with a manipulator. A camera is attached to the end-effector of the manipulator to perform a primary task consisting on visual servoing towards a desired target. Over-actuation of the whole quadrotor-arm system is exploited to achieve secondary velocity tasks. One subtask is proposed to horizontally stabilize the platform during flight by aligning the arm center of gravity with the quadrotor gravitational vector. The arm singularities and manipulability are addressed by another subtask that leads the arm to a preferable configuration, and also takes into account the arm joint limits. The performance of the whole visual servo and secondary tasks control scheme is shown in a Robot Operating System (ROS) implementation.",Cameras; Jacobian matrices; Joints; Robot vision systems; Servomotors; Visualization,Task priority control for aerial manipulation,,NO,,,YES,,,,,NO,,
S2294,2,Forward,journalArticle,2021,"Collins, Jack; Chand, Shelvin; Vanderkop, Anthony; Howard, David",IEEE Access,10.1109/ACCESS.2021.3068769,,"The use of simulators in robotics research is widespread, underpinning the majority of recent advances in the field. There are now more options available to researchers than ever before, however navigating through the plethora of choices in search of the right simulator is often non-trivial. Depending on the field of research and the scenario to be simulated there will often be a range of suitable physics simulators from which it is difficult to ascertain the most relevant one. We have compiled a broad review of physics simulators for use within the major fields of robotics research. More specifically, we navigate through key sub-domains and discuss the features, benefits, applications and use-cases of the different simulators categorised by the respective research communities. Our review provides an extensive index of the leading physics simulators applicable to robotics researchers and aims to assist them in choosing the best simulator for their use case.",aerial robotics; field robotics; Legged locomotion; manipulation; marine robotics; Mobile robots; Navigation; Physics; review; Robot sensing systems; robotic learning; robotics; Robots; Sensors; Simulation; soft robotics; surgical robotics,A Review of Physics Simulators for Robotic Applications,,NO,,,YES,,,,,NO,,
S2295,2,Forward,conferencePaper,2015,"Zhang, Mengmi; Qin, Hailong; Lan, Menglu; Lin, Jiaxin; Wang, Shuai; Liu, Kaijun; Lin, Feng; Chen, Ben M.",IECON 2015 - 41st Annual Conference of the IEEE Industrial Electronics Society,10.1109/IECON.2015.7392534,,"Flight tests of prototype UAV systems can be restricted by spatial constraints and they may bring risks of damage due to failures. Motivated by these, we presented a simulation approach based on Robot Operating System (ROS) and Gazebo. Unlike other state-of-the-art quadrotor simulators, we implemented the dynamics model of the UAV in ROS to achieve high fidelity behavior of the UAV. A hierarchical navigation system is also presented in our paper. The system layers include simultaneous localization and mapping (SLAM), mapping framework in Cartesian and polar coordinates, A* global path planner, revised vector field histogram plus (VFH+) for optimal local path selection and online trajectory algorithm (OTA) with collision checking for obstacle avoidance. In order to cater for vision-based applications, quadrotor is equipped with a monocular camera in the simulation model. The implementation of circle and landing pad detection and tracking algorithm demonstrates the functionality of vision guidance. In our simulation, various aspects including complex indoor and outdoor environments and on-board sensors are capable of simultaneously interacting with our navigation system to achieve certain surveillance missions. In the end, we demonstrated the applicability of our complex quadrotor systems by performing an autonomous navigation task in simulated complex environments. In comparison with the experimental data, simulation results align with the ones in flight tests in terms of real flight behaviors during navigation tasks in general.",Mathematical model; Navigation; Robot sensing systems; Vehicle dynamics; Vehicles,A high fidelity simulator for a quadrotor UAV using ROS and Gazebo,,,,,YES,NO,,,,NO,,
S2296,2,Forward,conferencePaper,2013,"Akhtar, Adeel; Waslander, Steven L.; Nielsen, Christopher",52nd IEEE Conference on Decision and Control,10.1109/CDC.2013.6759988,,"This paper presents a path following controller for a quadrotor UAV experiencing a single rotor failure. A smooth, dynamic feedback control law is proposed that allows the quadrotor to follow both closed and non-closed embedded curves while maintaining a desired velocity profile along the path when one out of four motors is completely disabled due to failure. The nonlinear model of the quadrotor is transformed into a partially linear model by a coordinate and feedback transformation. A path following controller is designed for transformed system that guarantees invariance of the path. The uncontrolled nonlinear portion of the dynamics (internal dynamics) are shown to be bounded.",Fault tolerance; Fault tolerant systems; Rotors; Trajectory; Vectors; Vehicle dynamics; Vehicles,Fault tolerant path following for a quadrotor,,NO,,,YES,,,,,NO,,
S2297,2,Forward,conferencePaper,2014,"Cacace, Jonathan; Finzi, Alberto; Lippiello, Vincenzo",2014 IEEE/RSJ International Conference on Intelligent Robots and Systems,10.1109/IROS.2014.6942714,,"We present an approach to mixed initiative control for unmanned aerial vehicles (UAVs) where sliding autonomy is supported by mixed-initiative planning and haptic feedback. In the proposed framework, we assume that an autonomous system can plan and execute robotic tasks while a human operator can provide interventions when necessary receiving a force feedback. The haptic feedback is associated with the sensation about how the system is diverging from the planned operations. We tested the system at work in virtual and real environments considering simple navigation tasks. We compared the performance of human operators with or without the assistance of the force feedback. The collected results support the hypothesis that the proposed approach enables effective and intuitive mixed-initiative control.",Force; Force feedback; Planning; Robots; Trajectory; Vectors,A mixed-initiative control system for an Aerial Service Vehicle supported by force feedback,,NO,,,YES,,,,,NO,,
S2298,2,Forward,conferencePaper,2017,"Lopez, Brett T.; How, Jonathan P.",2017 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS.2017.8202314,,"Quadrotors that navigate through unknown, cluttered environments have only recently begun to emerge following the development of small form-factor sensing and computing hardware and computationally efficient collision avoidance algorithms. Computation time of planning algorithms has significantly decreased in part to using local information as opposed to using a global map for collision avoidance. Safe planning with local information, however, restricts the direction of travel to remain within the perception system's field-of-view (FOV). The vehicle's motion becomes more constrained with body-mounted narrow FOV sensors, reducing vehicle maneuverability and speed. This work presents a relaxed-constraint Model Predictive Control framework that allows motions outside the perception FOV with guaranteed safety. The key aspect of this approach is the ability to safely choose a motion primitive generated in the past. Simulation and hardware results shows the new framework improves time to goal and flight path efficiency in environments with varying levels of clutter.",Acceleration; Collision avoidance; Navigation; Planning; Robot sensing systems; Trajectory,Aggressive collision avoidance with limited field-of-view sensing,,NO,,,YES,,,,,NO,,
S2299,2,Forward,journalArticle,2014,"Nobahari, H.; Sharifi, A. R.",Engineering Applications of Artificial Intelligence,10.1016/j.engappai.2014.03.004,https://www.sciencedirect.com/science/article/pii/S0952197614000591,"The automatic landing of a quadrotor is often associated with model uncertainties, measurement noises, and ground effect phenomenon. To mitigate these challenges, the accurate estimation of states especially the height above the ground, and its rate of change is vital. Moreover, the error of ground effect model can also be estimated and compensated during landing. In this paper, the recently developed continuous ant colony filter is implemented for integrated estimation of states and parameters. The estimated states are used in height control loop. To investigate the closed loop performance of the filter, two control strategies, a classical proportional-integral-derivative controller and a sliding mode controller are utilized and their performance are compared in the presence of ground effect compensation and without it. Also, the error of ground effect model is estimated and compensated in landing algorithm. Finally, a landing procedure is proposed including a ground effect estimation phase before the touchdown. The simulation results show that the proposed algorithm effectively improves the landing performance when the ground effect is properly compensated. Moreover, small estimation errors, obtained from the simulations, prove the good performance of the new filter in states and parameters estimation.",Automatic landing; Continuous ant colony filter; Ground effect; Heuristic filter; Quadrotor; State estimation,Continuous ant colony filter applied to online estimation and compensation of ground effect in automatic landing of quadrotor,,NO,,,YES,,,,,NO,,
S2300,2,Forward,journalArticle,2019,"Al-Mousa, Amjed; Sababha, Belal H; Al-Madi, Nailah; Barghouthi, Amro; Younisse, Remah",International Journal of Advanced Robotic Systems,10.1177/1729881419870937,https://doi.org/10.1177/1729881419870937,"The interest in unmanned systems especially unmanned aerial vehicle is continuously increasing. Unmanned aerial vehicles started to become of great benefit in many different fields. It is anticipated that unmanned aerial vehicles will soon become a main component of the future urban air traffic. The integration of unmanned aerial vehicles within existing air traffic environments has started getting the attention of researchers. Integrating unmanned systems in the real-world urban air traffic requires the development of tools and simulators to enable researchers in their ongoing efforts. In this article, a simulator called UTSim is introduced. The proposed simulator is built using the Unity platform. UTSim is capable of simulating unmanned aerial vehicle physical specification, navigation, control, communication, sensing and avoidance in environments with static and moving objects. The simulator enables studying and exploring several unmanned aerial vehicle air traffic integration issues like sense and avoid, communication protocols, navigation algorithms, and much more. UTSim is designed and developed to be easily used. The user can specify the properties of the environment, the number and types of unmanned aerial vehicles in the environment, and specify the algorithm to be used for path planning and collision avoidance. The simulator outputs a log file with a lot of useful information such as the number of sent and received messages, the number of detected objects and collided unmanned aerial vehicles. Three scenarios have been implemented in this article to present the capabilities of UTSim and to illustrate how it can benefit researchers in the field of integrating unmanned aerial vehicles in urban air traffic.",Air traffic integration; control and communication; sense and avoid (S&A); simulation; UAV; Unity; unmanned aerial systems,"UTSim: A framework and simulator for UAV air traffic integration, control, and communication",,NO,,,YES,,,,,NO,,
S2301,2,Forward,journalArticle,2017,"Haus, Tomislav; Orsag, Matko; Bogdan, Stjepan",Journal of Intelligent & Robotic Systems,10.1007/s10846-017-0545-2,https://doi.org/10.1007/s10846-017-0545-2,"In this paper we present a novel concept of attitude control for a multi-rotor unmanned aerial vehicle by actively controlling its center of gravity. This research is a part of our efforts to build a heavy lift multi-rotor platform capable of carrying over 50 kg of payload. To that end, we propose using miniature two-stroke combustion engines to supply the necessary lift and combine them with moving masses used to control the vehicle attitude. In this paper we present a complete nonlinear dynamical model of such a vehicle and use it to derive the transfer functions of roll and pitch dynamics. Furthermore, we formulate a detailed root-locus based stability and sensitivity analysis of the proposed control scheme and discuss its underlining effect on the mechanical parameter design. We present the experimental testbed, consisted of the vehicle mounted on a 2 degrees of freedom gimbal, and derive necessary conditions for testbed parameters in order to match the testbed and free-flight quadrotor dynamics. Finally, we present simulation results from a Gazebo based simulator and experimental results of the testbed. Both results confirm the findings of our mathematical analysis.",Internal combustion engine; Moving mass; Root locus; UAV,Mathematical Modelling and Control of an Unmanned Aerial Vehicle with Moving Mass Control Concept,,NO,,,YES,,,,,NO,,
S2302,2,Forward,conferencePaper,2018,"Jung, Sungwook; Song, Seungwon; Youn, Pillip; Myung, Hyun",2018 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS.2018.8593537,,"In this paper, a novel 3D coverage path planning method, which is efficient and practical for inspection of high-rise structures such as buildings or towers, using an unmanned aerial vehicle (UAV) is presented. Our approach basically focuses on developing a model-based path planner for structural inspection with a prior map, which is opposite to a non-model based exploration. The proposed method uses a volumetric map which is made before the path planning. With the map, the whole structure is divided into several layers for efficient path planning. Firstly, in each layer, a set of the normal vectors of the center point of every voxel is calculated, and then the opposing vectors become viewpoints. Due to too many viewpoints and an overlapped inspection surface, we down-sample them with a voxel grid filter. Then, the shortest tour connecting the reduced viewpoints must be computed with the Traveling Salesman Problem (TSP) solver. Lastly, all the paths in each layer are combined to form the complete path. The results are verified using simulations with a rotary wing UAV and compared with other state-of-the-art algorithm. It is proven that our method performs much better for structural inspection with respect to computation time as well as the coverage completeness.",Inspection; Path planning; Planning; Solid modeling; Spirals; Three-dimensional displays; Unmanned aerial vehicles,Multi-Layer Coverage Path Planner for Autonomous Structural Inspection of High-Rise Structures,,NO,,,YES,,,,,NO,,
S2303,2,Forward,journalArticle,2018,"Ahn, Taemin; Seok, Jihoon; Lee, Inbok; Han, Junghee",Mobile Information Systems,10.1155/2018/2572460,https://www.hindawi.com/journals/misy/2018/2572460/,"Recently, UAVs (unmanned air vehicles) have been developed with high performance, and hence, the range of system utilizing UAVs has also been widening. UAVs are even considered as connected mobile sensors and are claimed to be the future of IoT (Internet of Things). UAVs’ mission fulfillment is relying on the efficiency and performance of communication in a FANET (Flying Ad hoc NETwork) environment where UAVs communicate with each other through an ad hoc network without infrastructure. Especially, for mission-critical applications such as disaster rescue operations, reliable and on-time transmission of rescue information is very critical. To develop the reliable FANETs, a realistic network simulation platform for UAV communication has become an important role. Motivated by this observation, this paper first presents a study on realistic FANET environment simulation platform. On top of the proposed platform, we also design a stable UAV communication protocol with high packet delivery and bounded end-to-end communication delay.",,Reliable Flying IoT Networks for UAV Disaster Rescue Operations,,NO,,,YES,,,,,NO,,
S2304,2,Forward,journalArticle,2019,"Coppola, Mario; Guo, Jian; Gill, Eberhard; de Croon, Guido C. H. E.",Swarm Intelligence,10.1007/s11721-019-00163-0,https://doi.org/10.1007/s11721-019-00163-0,"In this paper we present a procedure to automatically design and verify the local behavior of robots with highly limited cognition. All robots are: anonymous, homogeneous, non-communicating, memoryless, reactive, do not know their global position, do not have global state information, and operate by a local clock. They only know: (1) the relative location of their neighbors within a short range and (2) a common direction (North). We have developed a procedure to generate a local behavior that allows the robots to self-organize into a desired global pattern despite their individual limitations. This is done while also avoiding collisions and keeping the coherence of the swarm at all times. The generated local behavior is a probabilistic local state-action map. The robots follow this stochastic policy to select an action based on their current perception of their neighborhood (i.e., their local state). It is this stochasticity, in fact, that allows the global pattern to eventually emerge. For a generated local behavior, we present a formal proof procedure to verify whether the desired pattern will always eventually emerge from the local actions of the agents. The novelty of the proof procedure is that it is primarily local in nature and focuses on the local states of the robots and the global implications of their local actions. A local approach is of interest to reduce the computational effort as much as possible when verifying the emergence of larger patterns. Finally, we show how the behavior could be implemented on real robots and investigate this with extensive simulations on a realistic robot model. To the best of our knowledge, no other solutions exist for robots with such limited cognition to achieve this level of coordination with proof that the desired global property will emerge.",Emergence; Formal verification; Liveness; Pattern formation; Robot; Safety; Self-organization; Swarm,Provable self-organizing pattern formation by a swarm of robots with limited knowledge,,NO,,,YES,,,,,NO,,
S2305,2,Forward,conferencePaper,2016,"Boudjit, Kamel; Larbes, C.","2016 8th International Conference on Modelling, Identification and Control (ICMIC)",10.1109/ICMIC.2016.7804285,,"In robotics and in many other applications, computer vision, object recognition and object tracking have been subject to a lot of active research with many different approaches and interesting results. In our project, we consider the automatic target-tracking problem in order to find an efficient and useful method for UAV. We use AR.Drone 2.0 as the air platform for tracking a target. In order to guarantee that the AR.Drone can recognize the target for correctly, QR code and ar_track_alvar are used as the target marker. The control of the drone is done using Robot Operating System (ROS). In this paper, we present the tracking-target control law based on a fuzzy logic controller. Input to the fuzzy logic controller is the information acquired from the cameras. Obtained information from vision system can be easily fitted fuzzy logic rules. The proposed algorithm is based on a small number of input parameters, what results in low requirements of computational power. The algorithm was checked during simulation studies. Simulation results prove the efficiency of the proposed intelligent control strategy.",Aircraft; AR.Drone; Cameras; fuzzy logic; Fuzzy logic; Graphical user interfaces; Hardware; Identification; Quadrotor; target tracking; Target tracking; Visualization,Detection and target tracking with a quadrotor using fuzzy logic,,NO,,,YES,,,,,NO,,
S2306,2,Forward,journalArticle,2018,"Kersandt, Kjell",,,https://upcommons.upc.edu/handle/2117/113948,,Àrees temàtiques de la UPC::Aeronàutica i espai::Aeronaus::Avions; Autonomous UAV; Avions no tripulats; Deep learning; Drone aircraft; Neural networks; Optimal control; Reinforcement learning; Simulation,Deep reinforcement learning as control method for autonomous UAVs,,NO,,,YES,,,,,NO,,
S2307,2,Forward,journalArticle,2017,"Raza, Syed Ali; Sutherland, M.; Etele, J.; Fusina, Giovanni",Aerospace Science and Technology,10.1016/j.ast.2017.03.043,https://www.sciencedirect.com/science/article/pii/S1270963816311506,"Experimental test flights are conducted to validate a novel simulation tool capable of predicting the effects of building generated turbulent winds on the flight performance of autonomous quadrotors. Wind conditions are modeled using time accurate Large Eddy Simulations where five representative points within the building wake are used to predict an average position hold deviation. Three control methods for autonomous position control tuned under no wind conditions are evaluated (Proportional Derivative (PD), Integral Backstepping, and Fuzzy Logic). Flight tests using a small (≈2 kg) quadrotor UAV within a building wake show that the simulation tool is able to predict average position deviation to within a single body length (0.55 m) in the horizontal plane for observed freestream wind speeds between 1 and 2 m/s (with predicted gusts of up to ±6 m/s). The simulation tool is also shown to be able to predict relative differences between control methods both overall and specifically along each co-ordinate axis. A PD controller is predicted to hold position more accurately with a building wake in the direction perpendicular to the freestream wind by ≈± half a body length while a Fuzzy controller achieves the same result in the direction parallel to the freestream wind. These results are validated by flight test data where both the most effective control strategy, and the magnitude of the position control difference, are shown to match the simulation results.",Controls; Experimental; Quadrotor; Simulation; Wind,Experimental validation of quadrotor simulation tool for flight within building wakes,,NO,,,YES,,,,,NO,,
S2308,2,Forward,conferencePaper,2016,"Alex, Chandykunju; Vijaychandra, Aditya",2016 International Conference on Robotics and Automation for Humanitarian Applications (RAHA),10.1109/RAHA.2016.7931889,,"In the aftermath of a disaster it is common to see Search and Rescue teams struggle to get to affected areas due to damage to existing lines of access and the lack of accurate maps that reflect the ground reality after disasters. In this paper we introduce a system that makes use of a network of drones where different types of drones are tasked for different applications like 3D mapping of the extent of Damage, locating stranded population and air dropping of supplies. In conventional systems each drone requires a human operator and a variety of sensors to operate safely whereas in our system we use the cloud to transfer the data gained by specialized drones carrying sophisticated sensors onto relatively cheaper drones which allows them to navigate better. Our system consists of a control station and a number of drones which are all networked and each drone is delegated a separate task. There will be drones that create 3D maps using hector slam and other drones that use the created maps to locate stranded people and log their GPS positions and cargo drones that air drop supplies at the logged GPS coordinates.",AMCL; Autonomous Navigation; cloud; Drones; Hector SLAM; Network; Quadrotor; Sensor systems; Simultaneous localization and mapping; Three-dimensional displays; UAV,Autonomous cloud based drone system for disaster response and mitigation,,NO,,,YES,,,,,NO,,
S2309,2,Forward,conferencePaper,2016,"Haus, Tomislav; Orsag, Matko; Bogdan, Stjepan",2016 International Conference on Unmanned Aircraft Systems (ICUAS),10.1109/ICUAS.2016.7502680,,In this paper we present our ongoing efforts to build a heavy lift multirotor platform capable of lifting over 50kg of payload. Such a system requires a paradigm shift in the design of the UAV. Therefore we propose using miniature two stroke internal combustion engines to supply the necessary lift and endurance and combine them with a novel control concept based on the variations of the center of gravity (CoG) of the system. In this paper we present a detailed stability and sensitivity analysis of the proposed control scheme and discuss its underlining effect on the construction design parametrization. We present simulation results from a Gazebo based simulator that confirm the results of our mathematical analysis.,Attitude control; DC motors; Engines; Robots; Rotors; Vehicle dynamics; Vehicles,Design considerations for a large quadrotor with moving mass control,,NO,,,YES,,,,,NO,,
S2310,2,Forward,journalArticle,2018,"Carbone, Carlos; Garibaldi, Oscar; Kurt, Zohre",KnE Engineering,10.18502/keg.v3i1.1459,https://knepublishing.com/index.php/KnE-Engineering/article/view/1459,"This paper summarizes the concept of swarm robotics and its applicability to crop inspections. To increase the agricultural yield it is essential to monitor the crop health. Hence, precision agriculture is becoming a common practice for farmers providing a system that can inspect the state of the plants (Khosla and others, 2010). One of the rising technologies used for agricultural inspections is the use of unmaned air vehicles (UAVs) which are used to take aerial pictures of the farms so that the images could be processed to extract data about the state of the crops (Das et al., 2015). For this process both fixed wings and quadrotors UAVs are used with a preference over the quadrotor since it’s easier to operate and has a milder learning curve compared to fixed wings (Kolodny, 2017). UAVs require battery replacement especially when the environmental conditions result in longer inspection times (“Agriculture - Maximize Yields with Aerial Imaging,” n.d., “Matrice 100 - DJI Wiki,” n.d.). As a result, inspection systems for crops using commercial quadrotors are limited by the quadrotor´s maximum flight speed, maximum flight height, quadrotor´s battery time, crops area, wind conditions, etc. (“Mission Estimates,” n.d.).Keywords: Swarm Robotics, Precision Agriculture, Unmanned Air Vehicle, Quadrotor, inspection.",,Swarm Robotics as a Solution to Crops Inspection for Precision Agriculture,,NO,,,YES,,,,,NO,,
S2311,2,Forward,journalArticle,2018,"Ravankar, Ankit A.; Ravankar, Abhijeet; Kobayashi, Yukinori; Emaru, Takanori",Proceedings,10.3390/ecsa-5-05753,https://www.mdpi.com/2504-3900/4/1/44,"Mapping and exploration are important tasks of mobile robots for various applications such as search and rescue, inspection, and surveillance. Unmanned aerial vehicles (UAVs) are more suited for such tasks because they have a large field of view compared to ground robots. Autonomous operation of UAVs is desirable for exploration in unknown environments. In such environments, the UAV must make a map of the environment and simultaneously localize itself in it which is commonly known as the SLAM (simultaneous localization and mapping) problem. This is also required to safely navigate between open spaces, and make informed decisions about the exploration targets. UAVs have physical constraints including limited payload, and are generally equipped with low-spec embedded computational devices and sensors. Therefore, it is often challenging to achieve robust SLAM on UAVs which also affects exploration. In this paper, we present an autonomous exploration of UAVs in completely unknown environments using low cost sensors such as LIDAR and an RGBD camera. A sensor fusion method is proposed to build a dense 3D map of the environment. Multiple images from the scene are geometrically aligned as the UAV explores the environment, and then a frontier exploration technique is used to search for the next target in the mapped area to explore the maximum area possible. The results show that the proposed algorithm can build precise maps even with low-cost sensors, and explore the environment efficiently.",autonomous mapping and exploration; sensor fusion; UAVs,Autonomous Mapping and Exploration with Unmanned Aerial Vehicles Using Low Cost Sensors,,NO,,,YES,,,,,NO,,
S2312,2,Forward,journalArticle,2014,"Curi, Sebastian; Mas, Ignacio; Sanchez Pena, Ricardo",IEEE Latin America Transactions,10.1109/TLA.2014.6872895,,In this paper we describe a controller and sensor fusion algorithm for a low-cost commercial quadrotor helicopter and its implementation in ROS. The dynamics of the system is assumed decoupled and identified as four SISO systems using subspace state-space system identification methods. A simple PD controller is designed using these open loop transfer functions and evaluated in simulation.,Atmospheric modeling; control system; Global Positioning System; identification; Kalman filters; PD control; quadrotor; robot operating system; Robot sensing systems; sensor fusion algorithm; Vectors,Autonomous Flight of a Commercial Quadrotor,,NO,,,YES,,,,,NO,,
S2313,2,Forward,conferencePaper,2015,"Bu, Qing; Wan, Fuhua; Xie, Zhen; Ren, Qinhu; Zhang, Jianhua; Liu, Sheng",2015 IEEE International Conference on Information and Automation,10.1109/ICInfA.2015.7279708,,"The main purpose of this article is to build a general platform for Unmanned Aerial Vehicle (UAV) simulation especially for vision algorithms. This general simulation platform can also connect to realistic UAVs for further tests. The platform enables UAVs controlled by a variety of advanced vision algorithms to accomplish certain tasks. Unlike the previous simulation systems, which can only achieve tasks with certain drones, we are committed to build a platform to support a variety of vision based UAVs simulation platform. And if the simulation test is successful, we can apply vision algorithms to realistic UAVs' tests based on our platform with little adaption. We use open source Gazebo as a simulator and combined with ROS (Robot Operating System) to implement UAVs simulation. Besides, we build a general UAVs link interface to connect realistic UAVs with ROS. All these works construct the general simulation platform.",Adaptation models; Automation; Computational modeling; Conferences; General Simulator Platform; Geometry; Robot sensing systems; ROS; UAV,General simulation platform for vision based UAV testing,,NO,,,YES,,,,,NO,,
S2314,2,Forward,conferencePaper,2015,"Gautam, Alvika; Sujit, P.B.; Saripalli, Srikanth",2015 International Conference on Unmanned Aircraft Systems (ICUAS),10.1109/ICUAS.2015.7152312,,"Aerial vehicle landing is an open and challenging problem. This paper focuses on development of simple guidance laws for quadrotor landing with known GPS location - stationary and moving. The guidance laws are based on missile guidance principles, namely pure pursuit, line-of-sight, and pure proportional navigation. Comparison on the performance of these guidance laws is presented through Matlab simulations and ROS implementation.",Acceleration; Gold; MATLAB; Navigation; Three-dimensional displays; Trajectory; Vehicles,Application of guidance laws to quadrotor landing,,NO,,,YES,,,,,NO,,
S2315,2,Forward,conferencePaper,2017,"Wang, Chaoqun; Meng, Lili; Li, Teng; De Silva, Clarence W.; Meng, Max Q.-H.",2017 18th International Conference on Advanced Robotics (ICAR),10.1109/ICAR.2017.8023630,,"Autonomous exploration is one of the key components for flying robots in 3D active perception. Fast and accurate exploration algorithms are essential for aerial vehicles due to their limited flight endurance. In this paper, we address the problem of exploring the environment and acquiring information using aerial vehicles within limited flight endurance. We propose an information potential field based method for autonomous exploration in 3D environments. In contrast to the existing approaches that only consider either the traveled distances or the information collected during exploration, our method takes into account both the traveled cost and information-gain. The next best view point is chosen based on a multi-objective function which considers information of several candidate regions and the traveled path cost. The selected goal attracts the robot while the known obstacles form the repulsive force to repel the robot. These combined force drives the robot to explore the environment. Different from planners that use all acquired global information, our planner only considers the goal selected and the nearby obstacles, which is more efficient in high-dimensional environments. Furthermore, we present a method to help the robot escape when it falls into a trapped area. The experimental results demonstrate the efficiency and efficacy of our proposed method.",Force; Planning; Robots; Three-dimensional displays; Trajectory; Uncertainty; Unmanned aerial vehicles,Towards autonomous exploration with information potential field in 3D environments,,NO,,,YES,,,,,NO,,
S2316,2,Forward,journalArticle,2018,"Ore, John-Paul; Detweiler, Carrick",Journal of Field Robotics,10.1002/rob.21807,https://onlinelibrary.wiley.com/doi/abs/10.1002/rob.21807,"Water properties are critical to our understanding and managing of freshwater systems that change rapidly with depth. This work presents an unmanned aerial vehicle (UAV) -based method of keeping a submerged, cable-suspended sensor payload at a precise depth, with 95% of sensor readings within ±8.4 cm of the target depth. We use a depth altimeter attached at the terminus of a 3.5 m semirigid cable as the sole input to a depth controller actuated by the UAV's motors. First, we simulate the UAV-cable-payload system with disturbances of wind, water, signal delay, and GPS drift and then use parameters discovered during simulation to guide implementation. We characterize the depth altimeter during translation and find that 95% of the readings are within ±7 mm of ground truth, with a steady-state error of ±3 mm. In field experiments, we compare the depth precision of our new method to previous methods that used the UAV's altitude as a proxy for submerged sensor depth, specifically 1) only using the UAV's air pressure altimeter; and 2) fusing UAV-mounted ultrasonic sensors with the air pressure altimeter. Our new method reduces the standard deviation of depth readings from 16.1 to 4.2 cm in winds up to 8.0 ms−1. We show the step response of the depth-altimeter method when transitioning between target depths. Finally, we explore a longer, 8.0 m cable and show that our depth controller still outperforms air altimeter and ultrasonic methods and allows scientists to increase the spatiotemporal resolution of water property datasets.",aerial robotics; environmental monitoring; underwater robotics,Sensing water properties at precise depths from the air,,NO,,,YES,,,,,NO,,
S2317,2,Forward,journalArticle,,"Kohlbrecher, Stefan; Meyer, Johannes; Graber, Thorsten; Kurowski, Karen",,,,"This paper describes the approach used by Team Hector Darmstadt for participation in the 2015 RoboCup Rescue Robot League competition. Participating in the RoboCup Rescue competition since 2009, the members of Team Hector Darmstadt focus on exploration of disaster sites using autonomous Unmanned Ground Vehicles (UGVs). The team has been established as part of a PhD program funded by the German Research Foundation at TU Darmstadt and combines expertise from Computer Science and Mechanical Engineering. In 2015, the team won both the champion title and the Best in Class Autonomy award of the RoboCup Rescue Robot League competition.",,RoboCupRescue 2015 - Robot League Team Hector Darmstadt (Germany),,,,,NO,,,,,NO,,
S2318,2,Forward,conferencePaper,2014,"Williams, Richard; Konev, Boris; Coenen, Frans",Advances in Autonomous Robotics Systems,10.1007/978-3-319-10401-0_6,,"This paper describes work on a framework for multi-agent research using low cost Micro Aerial Vehicles (MAV’s). In the past this type of research has required significant investment for both the vehicles themselves and the infrastructure necessary to safely conduct experiments. We present an alternative solution using a robust, low cost, off the shelf platform. We demonstrate the capabilities of our system via two typical multi-robot tasks: obstacle avoidance and exploration. Developing multi-agent applications safely and quickly can be difficult using hardware alone, to address this we also present a multi-quadcopter simulation based around the Gazebo 3D simulator.",Augmented Reality; Collision Avoidance; Extend Kalman Filter; Interest Point; Multiagent System,Multi-agent Environment Exploration with AR.Drones,,NO,,,YES,,,,,NO,,
S2319,2,Forward,conferencePaper,2014,"Cerón, Alexander; Mondragón B., Iván F.; Prieto, Flavio",Advances in Visual Computing,10.1007/978-3-319-14249-4_79,,"Due to the high costs of obtaining images of power lines from different perspectives and the logistic problems of manned flights, it is useful to develop methods for visual based navigation by using UAVs. For this reason, visual based navigation strategies for UAV power line inspection are presented; a virtual environment for real time simulation was developed and a set of line detection methods were integrated and validated within the virtual environment. The first strategy is related with the obtaining of the initial pose of the UAV with respect to the power lines. The second strategy is for navigating over the power lines. The navigation is performed by using the information extracted from a virtual camera in a visual control scheme.",line detection; simulation; UAV navigation; visual control,Towards Visual Based Navigation with Power Line Detection,,NO,,,YES,,,,,NO,,
S2320,2,Forward,conferencePaper,2014,"Kootbally, Zeid; Balakirsky, Stephen; Visser, Arnoud",RoboCup 2013: Robot World Cup XVII,10.1007/978-3-662-44468-9_54,,The Robot Operating System (ROS) has been steadily gaining popularity among robotics researchers as an open source framework for robot control. The Unified System for Automation and Robot Simulation (USARSim) has been used for many years by robotics researchers and developers as a validated framework for simulation. This paper presents a new ROS node that is designed to seamlessly interface between ROS and USARSim. It provides for automatic configuration of ROS transforms and topics to allow for full utilization of the simulated hardware. The design of the new node as well as examples of its use for mobile robot inside the RoboCup Rescue Simulation League are presented.,Game Engine; Game Server; Mobile Robot; Robot Operating System; Virtual Robot,Enabling Codesharing in Rescue Simulation with USARSim/ROS,,,,,YES,NO,,,,NO,,
S2321,2,Forward,conferencePaper,2016,"Haus, Tomislav; Prkut, Nikola; Borovina, Katarina; Marić, Bruno; Orsag, Matko; Bogdan, Stjepan",2016 24th Mediterranean Conference on Control and Automation (MED),10.1109/MED.2016.7536068,,"In this work we aim to explore the concept of using the shift in the center of gravity, which in turn produces roll and pitch moments, to control the attitude of the quadrotor. We propose constructing a UAV with moving masses within each rotor arm. In this paper we show the mathematical equations describing the dynamics of the proposed system, propose a classical PID based control approach and analyze and confirm its stability. Furthermore, we analyze the effectiveness of the proposed controller in a Gazebo based simulation environment. Finally, we build a laboratory testbed that emulates the dynamics of the system and test our proposed control strategy.",Attitude control; Gravity; Mathematical model; Robots; Unmanned aerial vehicles,A novel concept of attitude control for large multirotor-UAVs based on moving mass control,,NO,,,YES,,,,,NO,,
S2322,2,Forward,journalArticle,2019,"Steiner, Jake A.; He, Xiang; Bourne, Joseph R.; Leang, Kam K.",Robotics and Autonomous Systems,10.1016/j.robot.2018.11.016,https://www.sciencedirect.com/science/article/pii/S0921889018303944,"A new reactive collision avoidance method for navigation of aerial robots (such as unmanned aerial vehicles (UAVs)) in unstructured urban/suburban environments is presented. Small form-factor aerial robots, such as quadcopters, often have limited payload capacity, flight time, processing power, and sensing capabilities. To enhance the capabilities of such vehicles without increasing weight or computing power, a reactive collision avoidance method based on open sectors is described. The method utilizes information from a two-dimensional laser scan of the environment and a short-term memory of past actions and can rapidly circumvent obstacles in outdoor urban/suburban environments. With no map required, the method enables the robot to react quickly and navigate even when the enivornment changes. Furthermore, the low computational requirement of the method allows the robot to quickly react to unknown obstacles that may be poorly represented in the scan, such as trees with branches and leaves. The method is validated in simulation results and through physical experiments on a prototype quadcopter system, where results show the robot flying smoothly around obstacles at a relatively high speed (3 m/s).",,Open-sector rapid-reactive collision avoidance: Application in aerial robot navigation through outdoor unstructured environments,,NO,,,YES,,,,,NO,,
S2323,2,Forward,conferencePaper,2021,"Bauersfeld, Leonard; Kaufmann, Elia; Foehn, Philipp; Sun, Sihao; Scaramuzza, Davide",Robotics: Science and Systems XVII,10.15607/RSS.2021.XVII.042,http://arxiv.org/abs/2106.08015,"Quadrotors are extremely agile, so much in fact, that classic first-principle-models come to their limits. Aerodynamic effects, while insignificant at low speeds, become the dominant model defect during high speeds or agile maneuvers. Accurate modeling is needed to design robust high-performance control systems and enable flying close to the platform's physical limits. We propose a hybrid approach fusing first principles and learning to model quadrotors and their aerodynamic effects with unprecedented accuracy. First principles fail to capture such aerodynamic effects, rendering traditional approaches inaccurate when used for simulation or controller tuning. Data-driven approaches try to capture aerodynamic effects with blackbox modeling, such as neural networks; however, they struggle to robustly generalize to arbitrary flight conditions. Our hybrid approach unifies and outperforms both first-principles blade-element theory and learned residual dynamics. It is evaluated in one of the world's largest motion-capture systems, using autonomous-quadrotor-flight data at speeds up to 65km/h. The resulting model captures the aerodynamic thrust, torques, and parasitic effects with astonishing accuracy, outperforming existing models with 50% reduced prediction errors, and shows strong generalization capabilities beyond the training set.",Computer Science - Robotics,NeuroBEM: Hybrid Aerodynamic Quadrotor Model,,NO,,,YES,,,,,NO,,
S2324,2,Forward,conferencePaper,2019,"Ross, Jordan; Lindsay, Joel; Gregson, Edward; Moore, Alexander; Patel, Jay; Seto, Mae",2019 IEEE International Symposium on Robotic and Sensors Environments (ROSE),10.1109/ROSE.2019.8790419,,"This paper reports on a method to obtain a multidomain (environment) awareness on a floating target (non-responsive ship, iceberg, other floating structure) using a heterogeneous collaborative team of above, surface and underwater robots. This allows, for example, a ship approaching a non-responsive floating target to get information from a safe standoff prior to getting closer to further investigate or to attempt a boarding. The above-water unmanned aerial vehicle (UAV), integrated with optical cameras, obtains measurements of the above-water geometry using visual imagery to create an above-water three-dimensional model using photogrammetry methods. The below-water unmanned underwater vehicle is integrated with an imaging and profiling bathymetric sonars to capture the submerged hull geometry and features. An unmanned surface vehicle (USV) hosts an intelligent node which centrally controls the robotic collaboration by autonomously planning and distributing the mission for both the UUV and UAV. The results from the two are fused to yield a more complete picture of the floating target. We present results from simulations and a controlled in-water trial with an UUV, USV and UAV. The contributions from this work includes the robotic collaboration and autonomy across multiple domains, autonomous mission-planning and the fusing of multi-domain data. The scheduling of inter-dependent multi-robot task allocation is addressed in the autonomous mission-planning. The approach is validated in simulations and tested in-water. The in-water trials highlight the challenges and value of integrating sensors on distributed multi-domain robots towards a more complete picture on a floating target.",acoustic propagation; autonomous mission-planning; autonomy; Cameras; Collaboration; marine robotics; Marine vehicles; multi-robot collaboration; Robot kinematics; Sonar; UAV; Unmanned aerial vehicles; USV; UUV,Collaboration of multi-domain marine robots towards above and below-water characterization of floating targets,,NO,,,YES,,,,,NO,,
S2325,2,Forward,conferencePaper,2020,"Soria, Enrica; Schiano, Fabrizio; Floreano, Dario",2020 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS45743.2020.9340854,,"Among the available solutions for drone swarm simulations, we identified a lack of simulation frameworks that allow easy algorithms prototyping, tuning, debugging and performance analysis. Moreover, users who want to dive in the research field of drone swarms often need to interface with multiple programming languages. We present SwarmLab, a software entirely written in MATLAB, that aims at the creation of standardized processes and metrics to quantify the performance and robustness of swarm algorithms, and in particular, it focuses on drones. We showcase the functionalities of SwarmLab by comparing two decentralized algorithms from the state of the art for the navigation of aerial swarms in cluttered environments, Olfati-Saber's and Vasarhelyi's. We analyze the variability of the inter-agent distances and agents' speeds during flight. We also study some of the performance metrics presented, i.e. order, inter- and extra-agent safety, union, and connectivity. While Olfati-Saber's approach results in a faster crossing of the obstacle field, Vasarhelyi's approach allows the agents to fly smoother trajectories, without oscillations. We believe that SwarmLab is relevant for both the biological and robotics research communities, and for education, since it allows fast algorithm development, the automatic collection of simulated data, the systematic analysis of swarming behaviors with performance metrics inherited from the state of the art.",Aerial Systems: Applications; Agent-Based Systems; Analytical models; Drones; Matlab; Measurement; Simulation and Animation; Software algorithms; Swarms; Trajectory; Tuning,SwarmLab: a Matlab Drone Swarm Simulator,,NO,,,YES,,,,,NO,,
S2326,2,Forward,conferencePaper,2015,"Ragel, Ricardo; Maza, Iván; Caballero, Fernando; Ollero, Aníbal","2015 Workshop on Research, Education and Development of Unmanned Aerial Systems (RED-UAS)",10.1109/RED-UAS.2015.7441000,,This paper presents a comparison between different motion planning algorithms for a multi-rotor UAS equipped with a multi-joint robotic arm. This type of platform is considered in the ARCAS European Project for the assembly of a structure by using a team of aerial robots equipped with on-board manipulators. The practical interest of this system can be found in situations where it is required to build a structure in places with difficult access by conventional means. This work explains the simulation framework developed and the results obtained with different motion planning methods within this framework.,Collision avoidance; Load modeling; Manipulators; Planning; Robot kinematics; Robot sensing systems,Comparison of motion planning techniques for a multi-rotor UAS equipped with a multi-joint manipulator Arm,,NO,,,YES,,,,,NO,,
S2327,2,Forward,conferencePaper,2014,"Symington, Andrew; De Nardi, Renzo; Julier, Simon; Hailes, Stephen",2014 IEEE/RSJ International Conference on Intelligent Robots and Systems,10.1109/IROS.2014.6943033,,"Motivated by the risks and costs associated with outdoor experiments, this paper presents a new multi-platform quadrotor simulator. The simulator implements a novel second-order dynamic model for a quadrotor, produced through evolutionary programming, and explained by domain knowledge. The model captures the effects of mechanics, aerodynamics, wind and rotational stabilization control on the flight platform. In addition, the simulator implements military-grade models for wind and turbulence, as well as noise models for satellite navigation, barometric altitude and orientation. The usefulness of the simulator is shown qualitatively by a comparing how coloured and white position noise affect the performance of offline, range-only SLAM. The simulator is intended to be used for planning experiments, or for stress-testing application performance over a wide range of operating conditions.",Aerodynamics; Data models; Global Positioning System; Mathematical model; Noise; Satellites; Simulation; Simultaneous localization and mapping; Unmanned Aerial Systems,Simulating quadrotor UAVs in outdoor scenarios,,NO,,,YES,,,,,NO,,
S2328,2,Forward,conferencePaper,2015,"Orsag, Matko; Haus, Tomislav; Palunko, Ivana; Bogdan, Stjepan",2015 International Conference on Unmanned Aircraft Systems (ICUAS),10.1109/ICUAS.2015.7152323,,"This paper reports the results of the UNIZG-FER team in the third European Robotics Challenge (EuRoC). More precisely, the results of the 1st qualifying stage of the challenge where a micro aerial vehicle (MAV) is tested in realistic simulation scenarios. The paper presents the entire controller setup, starting from the power distribution level, low level cascade controllers with wind disturbance rejection to high level obstacle avoidance algorithms. The proposed controllers were tested in realistic simulations environments where their effectiveness was evaluated based on objective criteria set by the challenge organizers.",Accelerometers; Estimation; Force; Mathematical model; Noise measurement; Sensors; Trajectory,"State estimation, robust control and obstacle avoidance for multicopter in cluttered environments: EuRoC experience and results",,NO,,,YES,,,,,NO,,
S2329,2,Forward,conferencePaper,2019,"Beckers, Guus; Sijs, Joris; Diggelen, Jurriaan van; Dijk, Roelof J. E. van; Bouma, Henri; Lomme, Mathijs; Hommes, Rutger; Hillerstrom, Fieke; Waa, Jasper van der; Velsen, Anna van; Mannucci, Tommaso; Voogd, Jeroen; Staal, Wessel van; Veltman, Kim; Wessels, Peter; Huizing, Albert","Counterterrorism, Crime Fighting, Forensics, and Surveillance Technologies III",10.1117/12.2533740,https://www.spiedigitallibrary.org/conference-proceedings-of-spie/11166/111660C/Intelligent-autonomous-vehicles-with-an-extendable-knowledge-base-under-meaningful/10.1117/12.2533740.full,"Intelligent robotic autonomous systems (unmanned aerial/ground/surface/underwater vehicles) are attractive for military application to relieve humans from tedious or dangerous tasks. These systems require awareness of the environment and their own performance to reach a mission goal. This awareness enables them to adapt their operations to handle unexpected changes in the environment and uncertainty in assessments. Components of the autonomous system cannot rely on perfect awareness or actuator execution, and mistakes of one component can affect the entire system. To obtain a robust system, a system-wide approach is needed and a realistic model of all aspects of the system and its environment. In this paper, we present our study on the design and development of a fully functional autonomous system, consisting of sensors, observation processing and behavior analysis, information database, knowledge base, communication, planning processes, and actuators. The system behaves as a teammate of a human operator and can perform tasks independently with minimal interaction. The system keeps the human informed about relevant developments that may require human assistance, and the human can always redirect the system with high-level instructions. The communication behavior is implemented as a Social AI Layer (SAIL). The autonomous system was tested in a simulation environment to support rapid prototyping and evaluation. The simulation is based on the Robotic Operating System (ROS) with fully modelled sensors and actuators and the 3D graphics-enabled physics simulation software Gazebo. In this simulation, various flying and driving autonomous systems can execute their tasks in a realistic 3D environment with scripted or user-controlled threats. The results show the performance of autonomous operation as well as interaction with humans.",,Intelligent autonomous vehicles with an extendable knowledge base under meaningful human control,,NO,,,YES,,,,,NO,,
S2330,2,Forward,conferencePaper,2018,"Witte, Thomas; Tichy, Matthias",2018 IEEE/ACM 1st International Workshop on Robotics Software Engineering (RoSE),,,"Context: The software architecture of complex robot systems is usually divided into components. The software is then the configuration and combination of those components and their connectors. Objective: In the Robot Operating System (ROS), this architectural configuration, the ROS node graph, is partly defined in code and created at run-time. The static information about the architecture in the configuration is limited and checking the consistency at development time is not possible. The full software has to be manually executed to check the consistency and debug configuration errors. Method: We propose an approach and a corresponding tool to analyze ROS nodes and their launch files to check consistency and issue warnings if potential problems are detected. The approach uses both static analysis of the launch files as well as dynamic analysis of individual ROS nodes to reconstruct the node graph without executing the whole launch configuration. The nodes are executed in a sandbox to prevent side effects and enable the integration of the analysis tool, e.g., into automated testing systems. Results: The evaluation on internal and publicly available ROS projects shows that we are able to reconstruct the complete architecture of the system if the nodes implement a common lifecycle. Conclusion: The approach enables ROS developers to avoid creating incompatible architectures and check consistency already at development time. The approach can be extended to also monitor architectural consistency at run time.",Computer architecture; dynamic analysis; Peer-to-peer computing; Prototypes; Robots; ROS; roslaunch; Software architecture; software architecture description; Testing; Tools,Checking Consistency of Robot Software Architectures in ROS,,,,,YES,,NO,,,NO,,
S2331,2,Forward,journalArticle,2018,"Sharifi, Mostafa; Chen, XiaoQi; Pretty, Christopher; Clucas, Don; Cabon-Lunel, Erwan",Simulation Modelling Practice and Theory,10.1016/j.simpat.2018.06.005,https://www.sciencedirect.com/science/article/pii/S1569190X18300881,"This paper presents 3D modelling and simulation of a non-holonomic omnidirectional mobile robot, MARIO – Mobile Autonomous Rover for Intelligent Operations, using the Gazebo simulator and Robot Operating System (ROS), aiming for offline programming and system performance analysis. For this purpose, MARIO as a four wheel active driving/steering (4WD4S) platform has been modelled and simulated based on the physical developed model. Gazebo enables simulation of the world environment, physical model, sensors and control system through the Unified Robot Description Format (URDF) file. ROS is interfaced with Gazebo which allows utilization and implementation of different robotic software and tools on the simulated robot. This presented approach allows development, testing and validation of MARIO and required software before implementation on the real system. The presented approach also provides the essential theory and practice for robotic system specialists in modelling and simulation of ground mobile robotic systems using Gazebo simulator and ROS.",3D simulation; Gazebo simulator; Kinematic modelling; ROS; State estimation; Wheeled mobile robot,Modelling and simulation of a non-holonomic omnidirectional mobile robot for offline programming and system performance analysis,,NO,,,YES,,,,,NO,,
S2332,2,Forward,journalArticle,2017,"Mas, Ignacio; Kitts, Christopher",Journal of Intelligent & Robotic Systems,10.1007/s10846-016-0445-x,https://doi.org/10.1007/s10846-016-0445-x,"Cluster space control is a method of multirobot formation keeping that considers a group of robots to be a single entity, defining state variables to represent characteristics of the group, such as position, orientation, and shape. This technique, however, suffers from singularities when a minimal state representation is used. This paper presents three alternative implementations of this control approach that eliminate singularities through changes in the control architecture or through redundant formation definitions. These proposed solutions rely on quaternions, dual quaternions, and control implementations that produce singularity-free trajectories while maintaining a cluster level abstraction that allows for simple specification and monitoring. A key component of this work is a novel concept of representing formation shape parameters with dual quaternions. Simulation results show the feasibility of the proposed solutions and illustrate their differences and limitations.",Dual quaternions; Formation control; Mobile robots; Multicopters; Multirobot; UAV,Quaternions and Dual Quaternions: Singularity-Free Multirobot Formation Control,,NO,,,YES,,,,,NO,,
S2333,2,Forward,conferencePaper,2013,"Lichtenstern, Michael; Angermann, Michael; Frassl, Martin; Berthold, Gunther; Julian, Brian J.; Rus, Daniela",2013 IEEE/RSJ International Conference on Intelligent Robots and Systems,10.1109/IROS.2013.6696568,,"We present Pose and Paste (P&P) - an intuitive interface designed to facilitate interaction between a single user and a number of robots equipped with cameras. With this interface, a user wearing a head-mounted display is able to cycle through the real-time video streams originating from the robots' cameras. The user is also able to select a robot and remotely position it by simply walking or turning his/her head, i.e., control the robot's motion in a master/slave-type fashion. We report the results of an initial hardware experiment where a user located in the USA is tasked to position two quadrotor robots within a motion capture laboratory located in Germany. These results suggest that P&P is a feasible approach to remotely inspect disaster affected sites. Lastly, we conduct a user study to compare P&P with a baseline interface composed of a traditional computer monitor and a video game controller. The quantitative results and qualitative discussions resulting from this user study highlight how such multi-robot interfaces can be further improved.",Aerospace electronics; Cameras; Computers; Robot vision systems; Streaming media,Pose and paste — An intuitive interface for remote navigation of a multi-robot system,,NO,,,YES,,,,,NO,,
S2334,2,Forward,journalArticle,2021,"Baltaci, Aygün; Dinc, Ergin; Ozger, Mustafa; Alabbasi, Abdulrahman; Cavdar, Cicek; Schupke, Dominic",IEEE Communications Surveys & Tutorials,10.1109/COMST.2021.3103044,,"Electrification turned over a new leaf in aviation by introducing new types of aerial vehicles along with new means of transportation. Addressing a plethora of use cases, drones are gaining attention in the industry and increasingly appear in the sky. Emerging concepts of flying taxi enable passengers to be transported over several tens of kilometers. Therefore, unmanned traffic management systems are under development to cope with the complexity of future airspace, thereby resulting in unprecedented communication needs. Moreover, the long-term increase in the number of commercial airplanes pushes the limits of voice-oriented communications, and future options such as single-pilot operations demand robust connectivity. In this survey, we provide a comprehensive review and vision for enabling the connectivity applications of aerial vehicles utilizing current and future communication technologies. We begin by categorizing the connectivity use cases per aerial vehicle and analyzing their connectivity requirements. By reviewing more than 500 related studies, we aim for a comprehensive approach to cover wireless communication technologies, and provide an overview of recent findings from the literature toward the possibilities and challenges of employing the wireless communication standards. After analyzing the proposed network architectures, we list the open-source testbed platforms to facilitate future investigations by researchers. This study helped us observe that while numerous works focused on cellular technologies to enable connectivity for aerial platforms, a single wireless technology is not sufficient to meet the stringent connectivity demands of the aerial use cases, especially for the piloting operations. We identified the need of further investigations on multi-technology heterogeneous network architectures to enable robust and real-time connectivity in the sky. Future works should consider suitable technology combinations to develop unified aerial networks that can meet the diverse quality of service demands of the aerial use cases.",Aerial communications; aerial network architectures; aerial simulators; aerial use-cases; Airplanes; cellular networks; control and non-payload communication (CNPC); drone; electrical vertical take-off and landing (eVTOL); flying taxi; high altitude platform (HAP); Protocols; Quality of service; Real-time systems; Reliability; Signal to noise ratio; unmanned aerial vehicle (UAV); unmanned traffic management (UTM); Wireless communication,A Survey of Wireless Networks for Future Aerial Communications (FACOM),,NO,,,YES,,,,,NO,,
S2335,2,Forward,conferencePaper,2017,"Sagitov, Artur; Gerasimov, Yuri",2017 10th International Conference on Developments in eSystems Engineering (DeSE),10.1109/DeSE.2017.40,,"Quadrotor UAVs like DJI Phantom 4 have been successfully used in research and commercial applications in recent years. Although there has been significant progress in the design of control algorithms, testing of UAVs involve risk of damage to the expensive aircraft. To manage this issues systems for the simulation of quadrotor UAVs are available in Gazebo simulator. However existing simulations are simplified and doesn't represent commercially available UAVs completely. As a main option to achieve stability of video feed is the use of a gimbal we improve existing simulation package with DJI Phantom specific gimbal. We also added RC transmitter to provide realistic control to simulated UAV.",Cameras; DJI Phantom 4; Feeds; Gazebo; gimbal modelling; Phantoms; Radio transmitters; RC control; Robot sensing systems; ROS; simulation; Testing; UAV,Towards DJI Phantom 4 Realistic Simulation with Gimbal and RC Controller in ROS/Gazebo Environment,,,,,YES,NO,,,,NO,,
S2336,2,Forward,conferencePaper,2017,"Mahdoui, Nesrine; Fremont, Vincent; Natalizio, Enrico",2017 IEEE International Conference on Multisensor Fusion and Integration for Intelligent Systems (MFI),10.1109/MFI.2017.8170426,,"In this paper, the problem of the exploration of an unknown environment by deploying a fleet of Micro-Aerial Vehicles (MAV) is considered. As a single robot has already proven its efficiency for this task, the challenge is to extend it to a multi-robots system to reduce the exploration time. For this purpose, a cooperative navigation strategy is proposed based on a specific utility function and inter-robots data exchange. The novelty comes from the exchange of the frontiers points instead of maps, which allows to reduce computation and data amount within the network. The proposed system has been implemented and tested under ROS using the Gazebo simulator. The results demonstrate that the proposed navigation strategy efficiently spreads robots over the environment for a faster exploration.",Collision avoidance; Navigation; Robot kinematics; Robot sensing systems,Cooperative exploration strategy for micro-aerial vehicles fleet,,NO,,,YES,,,,,NO,,
S2337,2,Forward,journalArticle,2021,"Odry, Ákos",Sensors,10.3390/s21041183,https://www.mdpi.com/1424-8220/21/4/1183,"This paper presents an open-source environment for development, tuning, and performance evaluation of magnetic, angular rate, and gravity-based (MARG-based) filters, such as pose estimators and classification algorithms. The environment is available in both ROS/Gazebo and MATLAB/Simulink, and it contains a six-degrees of freedom (6 DOF) test bench, which simultaneously moves and rotates an MARG unit in the three-dimensional (3D) space. As the quality of MARG-based estimation becomes crucial in dynamic situations, the proposed test platform intends to simulate different accelerating and vibrating circumstances, along with realistic magnetic perturbation events. Moreover, the simultaneous acquisition of both the real pose states (ground truth) and raw sensor data is supported during these simulated system behaviors. As a result, the test environment executes the desired mixture of static and dynamic system conditions, and the provided database fosters the effective analysis of sensor fusion algorithms. The paper systematically describes the structure of the proposed test platform, from mechanical properties, over mathematical modeling and joint controller synthesis, to implementation results. Additionally, a case study is presented of the tuning of popular attitude estimation algorithms to highlight the advantages of the developed open-source environment.",attitude estimation; complementary filter; inertial measurement unit; Kalman filter; MARG; sensor fusion; test environment,An Open-Source Test Environment for Effective Development of MARG-Based Algorithms,,NO,,,YES,,,,,NO,,
S2338,2,Forward,bookSection,2020,"Silano, Giuseppe; Iannelli, Luigi",Robot Operating System (ROS): The Complete Reference (Volume 4),,https://doi.org/10.1007/978-3-030-20190-6_4,"This chapter proposes a typical use case dealing with the physical simulation of autonomous robots (specifically, quadrotors) and their interfacing through ROS (Robot Operating System). In particular, we propose CrazyS, an extension of the ROS package RotorS, aimed to modeling, developing and integrating the Crazyflie 2.0 nano-quadcopter in the physics based simulation environment Gazebo. Such simulation platform allows to understand quickly the behavior of the flight control system by comparing and evaluating different indoor and outdoor scenarios, with a details level quite close to reality. The proposed extension, running on Kinetic Kame ROS version but fully compatible with the Indigo Igloo one, expands the RotorS capabilities by considering the Crazyflie 2.0 physical model, its flight control system and the Crazyflie’s on-board IMU, as well. A simple case study has been considered in order to show how the package works and how the dynamical model interacts with the control architecture of the quadcopter. The contribution can be also considered as a reference guide for expanding the RotorS functionalities in the UAVs field, by facilitating the integration of new aircrafts. We rel5,eased the software as open-source code, thus making it available for scientific and educational activities.",Continuous integration; Crazyflie 2.0; Gazebo; Robotics System Toolbox; ROS; RotorS; Software-in-the-loop simulation; UAV; Virtual reality,CrazyS: A Software-in-the-Loop Simulation Platform for the Crazyflie 2.0 Nano-Quadcopter,,NO,,,YES,,,,,NO,,
S2339,2,Forward,conferencePaper,2014,"Gaujens, A.; Benini, A.; Mancini, A.; Longhi, S.",2014 IEEE/ASME 10th International Conference on Mechatronic and Embedded Systems and Applications (MESA),10.1109/MESA.2014.6935621,,"In the last years the Model Based Design for Unmanned Systems aided the safe and rational release of applications running on unmanned systems. In particular in this paper we focus on a hybrid methodology that merges Software in the Loop (SIL) and Model in the Loop (MIL) strategies for cooperative tasks performed by aerial and ground autonomous vehicles. The proposed work flow covers the design and testing of Ground Control Station (GCS) modelled by a finite state machine, the design and testing of navigation code running on UAV and UGV and the testing of cooperative missions. The work-flow is based on a realistic 3D physical simulator interfaced with Matlab-Simulink-Stafeflow. The proposed approach has been successfully tested and evaluated allowing to release runnable and safe code on real targets.",Libraries; Mathematical model; MATLAB; Solid modeling; Testing,Testing of cooperative tasks for Unmanned Aerial and ground platforms,,NO,,,YES,,,,,NO,,
S2340,2,Forward,conferencePaper,2020,"Cheraghi, Ahmad Reza; Actun, Karol; Shahzad, Sahdia; Graffi, Kalman",2020 3rd International Conference on Intelligent Robotic and Control Engineering (IRCE),10.1109/IRCE50905.2020.9199255,,"(Robot) swarm networks are consisting of magnitudes of individual agents that are capable to move in a world and interact with each other or with passive items. Through local, individual algorithms applied in the agents desired properties of the swarm can emerge. In this paper, we present Swarm-Sim, a round-based simulator that supports the evaluation of such large scaled swarms in a 2D and 3D world. Agents can move in the simulated world, perceive their surroundings, carry other agents and items, as well as communicate with the position they stand on through pheromones or markings as well as with other agents and items in this world. Through this, many swarm-related use cases are supported. Implementing swarm algorithms is easy as the simulator is completely written in python and its code is open source. This allows also to simulate large swarms due to the good performance of the simulator. Thorough analysis of the swarm behavior is supported through plots and visualizations.",2D Simulator; 3D Simulator; Agent; Evaluation Tool; Mathematical model; Robots; Shape; Swarm; Task analysis; Three-dimensional displays; Two dimensional displays; Visualization,Swarm-Sim: A 2D & 3D Simulation Core for Swarm Agents,,NO,,,YES,,,,,NO,,
S2341,2,Forward,conferencePaper,2018,"Lopez, Brett T.; Slotine, Jean-Jacques; How, Jonathan P.",2018 IEEE International Conference on Robotics and Automation (ICRA),10.1109/ICRA.2018.8460817,,"Recent advances in perception and planning algorithms have enabled robots to navigate autonomously through unknown, cluttered environments at high-speeds. A key component of these systems is the ability to identify, select, and execute a safe trajectory around obstacles. Many of these systems, however, lack performance guarantees because model uncertainty and external disturbances are ignored when a trajectory is selected for execution. This work leverages results from nonlinear control theory to establish a bound on tracking performance that can be used to select a provably safe trajectory. The Composite Adaptive Sliding Controller (CASC) provides robustness to disturbances and reduces model uncertainty through high-rate parameter estimation. CASC is demonstrated in simulation and hardware to significantly improve the performance of a quadrotor navigating through unknown environments with external disturbances and unknown model parameters.",Adaptation models; Electron tubes; Optimization; Robustness; Trajectory; Uncertainty,Robust Collision Avoidance via Sliding Control,,NO,,,YES,,,,,NO,,
S2342,2,Forward,journalArticle,2019,"Smith, Andrew J.; Best, Graeme; Yu, Javier; Hollinger, Geoffrey A.",Autonomous Robots,10.1007/s10514-018-9811-9,https://doi.org/10.1007/s10514-018-9811-9,"In this paper we introduce a novel algorithm for online distributed non-myopic task-selection in heterogeneous robotic teams. Our algorithm uses a temporal probabilistic representation that allows agents to evaluate their actions in the team’s joint action space while robots individually search their own action space. We use Monte-Carlo tree search to asymmetrically search through the robot’s individual action space while accounting for the probable future actions of their team members using the condensed temporal representation. This allows a distributed team of robots to non-myopically coordinate their actions in real-time. Our developed method can be applied across a wide range of tasks, robot team compositions, and reward functions. To evaluate our coordination method, we implemented it for a series of simulated and fielded hardware trials where we found that our coordination method is able to increase the cumulative team reward by a maximum of $$47.2\%$$in the simulated trials versus a distributed auction-based coordination. We also performed several outdoor hardware trials with a team of three quadcopters that increased the maximum cumulative reward by $$24.5\%$$versus a distributed auction-based coordination.",Heterogeneous robotic teams; Non-myopic coordination; Robotic coordination; Robotic fielded hardware trials; Robotic planning,Real-time distributed non-myopic task selection for heterogeneous robotic teams,,NO,,,YES,,,,,NO,,
S2343,2,Forward,journalArticle,2018,"Aminzadeh, Ali; Atashgah, Mohammadali Amiri; Roudbari, Alireza",IEEE Aerospace and Electronic Systems Magazine,10.1109/MAES.2018.160219,,"The use of autonomous vehicles is currently a growing trend, particularly in applications such as manufacturing, hazardous material handling, and surveillance [1]. A quadcopter is an emerging rotorcraft concept for an unmanned aerial vehicle (UAV) that is equipped with four rotors, two pairs of counter-rotating, and fixedpitch blades located at the four corners of the vehicle [2]. In a quadcopter system, yaw is controlled by increasing the angular velocity of rotors that spin in the same direction to a level higher than the velocity of other rotor pairs, and pitch or roll is controlled by increasing the angular velocity of a rotor to a level greater than the velocity of a diametrically opposite rotor (Figure 1) [3].",Autonomous vehicles; Control systems; Global Positioning System; Mathematical model; Noise measurement; Rotors,Software in the loop framework for the performance assessment of a navigation and control system of an unmanned aerial vehicle,,NO,,,YES,,,,,NO,,
S2344,2,Forward,conferencePaper,2019,"Mehrooz, Golizheh; Ebeid, Emad; Schneider-Kamp, Peter",2019 22nd Euromicro Conference on Digital System Design (DSD),10.1109/DSD.2019.00087,,"Unmanned Aerial Vehicles (UAV) are increasingly gaining interest in Internet of Drones (IoD) applications for automatizing the labor-intensive tasks. They are used in various areas such as infrastructure inspection. However, UAVs have limited energy resources and computational processing capabilities, which prevents them from running applications onboard and accessing the internet for gaining knowledge about their mission. In order to address these challenges imposed by limited resource on the drone, we propose a new cloud system infrastructure for building open-source IoD applications. We have designed a client-server architecture which hosts the drone as a client and the cloud as a scalable server. For validating the developed IoD application, an open-source drone simulator and flight controller are adopted to perform the tests. The overall architecture of a drone-cloud framework is presented along with a use case to show the applicability of the proposed framework.",Cloud computing; Containers; Docker; Drone; Drones; Kubernetes cluster; Open source software; Protocols; Robots; ROS/ROS2; Simple object access protocol; Simulation,System Design of an Open-Source Cloud-Based Framework for Internet of Drones Application,,NO,,,YES,,,,,NO,,
S2345,2,Forward,journalArticle,2018,"Khalaf, Ahmed S.; Pianpak, Poom; Alharthi, Sultan A.; NaminiMianji, Zahra; Torres, Ruth; Tran, Son; Dolgov, Igor; Toups, Zachary O.",Proceedings of the ... International ISCRAM Conference,,https://par.nsf.gov/biblio/10061144-architecture-simulating-drones-mixed-reality-games-explore-future-search-rescue-scenarios,"The proliferation of unmanned aerial systems (i.e., drones) can provide great value to the future of search and rescue. However, with the increase adoption of such systems, issues around hybrid human-drone team coordination and planning will arise. To address these early challenges, we provide insights into the development of testbeds in the form of mixed reality games with simulated drones. This research presents an architecture to address challenges and opportunities in using drones for search and rescue. On this architecture, we develop a mixed reality game in which human players engage with the physical world and with gameplay that is purely virtual. We expect the architecture to be useful to a range of researchers an practitioners, forming the basis for investigating and training within this unique, new domain.",,An Architecture for Simulating Drones in Mixed Reality Games to Explore Future Search and Rescue Scenarios,,NO,,,YES,,,,,NO,,
S2346,2,Forward,bookSection,,"Ippolito, Corey A.; Hening, Sebastian; Sankararaman, Shankar; Stepanyan, Vahram",2018 AIAA Modeling and Simulation Technologies Conference,,https://arc.aiaa.org/doi/abs/10.2514/6.2018-1915,,,"A Modeling, Simulation and Control Framework for Small Unmanned Multicopter Platforms in Urban Environments",,,,,NO,,,,,NO,,
S2347,2,Forward,conferencePaper,2018,"Yan, Peng; Yan, Zhuo; Zheng, Hongxing; Guo, Jifeng",2018 37th Chinese Control Conference (CCC),10.23919/ChiCC.2018.8482571,,"Artificial potential field method is a common method to solve real time path planning problems of robots, but this method has inherent problems: local minima traps and oscillations in the presence of obstacles and narrow passages. To overcome these two problems, this paper proposes an improved artificial potential method. A new form of repulsive force is established, which includes radial repulsive force and tangential repulsive force. The movement of the robot is controlled by velocity command where the direction of the resultant force on the robot denotes the desired direction of the robot's velocity. The parameters of the attractive force and the repulsive force are analyzed and the range of the ratio of the repulsive coefficient to the attractive coefficient is determined. The method was tested by three stages: tests by a 6DOF Simulink model of quadrotor in MAT LAB environment, tests by a 6DOF C++ model of quadrotor in gazebo and ROS environment, and tests by a DJ M100 quadrotor in experiment environment. The results show that the proposed method can avoid local minima traps and eliminate oscillations compared with traditional artificial potential field method.",Force; improved artificial potential field method; local minima traps and oscillations; Mathematical model; Oscillators; Path planning; Robot kinematics; Robot sensing systems; robots path planning,Real Time Robot Path Planning Method Based on Improved Artificial Potential Field Method,,NO,,,YES,,,,,NO,,
S2348,2,Forward,conferencePaper,2017,"Hulse, Daniel; Gigous, Brandon; Tumer, Kagan; Hoyle, Christopher; Tumer, Irem Y.",,10.1115/DETC2017-68042,https://asmedigitalcollection.asme.org/IDETC-CIE/proceedings/IDETC-CIE2017/58127/V02AT03A008/258724,,,Towards a Distributed Multiagent Learning-Based Design Optimization Method,,NO,,,YES,,,,,NO,,
S2349,2,Forward,journalArticle,2018,"Lavigne, Emilien; Guillou, Goulven; Babau, Jean-Philippe",IFAC-PapersOnLine,10.1016/j.ifacol.2018.06.242,https://www.sciencedirect.com/science/article/pii/S2405896318305627,"Racing sailboats are becoming more and more complex systems, especially with the increasing interest in total 3D attitude control. In such competitive context, realistic simulation appears as a key point for new developments. This paper presents AVS, a framework dedicated to sailboat simulation, integrating both requirements of a generic simulation framework and domain-specific aspects. The AVS framework provides a collection of models and tools to design, generate and evaluate racing sailboat simulations. Tools are also provided to integrate heterogeneous wind sources in simulation. Thanks to component-based approach, different simulation scenarios can be considered by adding or configuring components. Two simulation examples illustrate the AVS framework agility to evaluate sailing boat control law.",Cyber-physical systems; Model-Driven Engineering; Simulation,"AVS, a model-based racing sailboat simulator: application to wind integration",,,,,YES,,NO,,,NO,,
S2350,2,Forward,bookSection,,"Akcakoca, Mehmet; Atici, Bilge Mirac; Gever, Basak; Oguz, Sinan; Demirezen, Umut; Demir, Mustafa; Saldiran, Emre; Yuksek, Burak; Koyuncu, Emre; Yeniceri, Ramazan; Inalhan, Gokhan",AIAA Scitech 2019 Forum,,https://arc.aiaa.org/doi/abs/10.2514/6.2019-1979,,,A Simulation-Based Development and Verification Architecture for Micro UAV Teams and Swarms,,,,,NO,,,,,NO,,
S2351,2,Forward,journalArticle,2021,"Biundini, Iago Z.; Pinto, Milena F.; Melo, Aurelio G.; Marcato, Andre L. M.; Honório, Leonardo M.; Aguiar, Maria J. R.",Sensors,10.3390/s21020570,https://www.mdpi.com/1424-8220/21/2/570,"Different practical applications have emerged in the last few years, requiring periodic and detailed inspections to verify possible structural changes. Inspections using Unmanned Aerial Vehicles (UAVs) should minimize flight time due to battery time restrictions and identify the terrain’s topographic features. In this sense, Coverage Path Planning (CPP) aims at finding the best path to coverage of a determined area respecting the operation’s restrictions. Photometric information from the terrain is used to create routes or even refine paths already created. Therefore, this research’s main contribution is developing a methodology that uses a metaheuristic algorithm based on point cloud data to inspect slope and dams structures. The technique was applied in a simulated and real scenario to verify its effectiveness. The results showed an increasing 3D reconstructions’ quality observing optimizing photometric and mission time criteria.",3D inspection; coverage path planning; optimization; point cloud analysis; UAV,A Framework for Coverage Path Planning Optimization Based on Point Cloud for Structural Inspection,,NO,,,YES,,,,,NO,,
S2352,2,Forward,journalArticle,2019,"Welburn, Elisabeth; Khalili, Hassan Hakim; Gupta, Ananya; Watson, Simon; Carrasco, Joaquin",The Fifteenth International Conference on Autonomic and Autonomous Systems 2019,,https://www.research.manchester.ac.uk/portal/en/publications/a-navigational-system-for-quadcopter-remote-inspection-of-offshore-substations(6931ea92-70fa-4ea4-973d-d1e83c8081c0).html,,,A Navigational System for Quadcopter Remote Inspection of Offshore Substations,,NO,,,YES,,,,,NO,,
S2353,2,Forward,journalArticle,2019,"Welburn, Elisabeth; Khalili, Hassan Hakim; Gupta, Ananya; Watson, Simon; Carrasco, Joaquin",The Fifteenth International Conference on Autonomic and Autonomous Systems 2019,,https://www.research.manchester.ac.uk/portal/en/publications/a-navigational-system-for-quadcopter-remote-inspection-of-offshore-substations(6931ea92-70fa-4ea4-973d-d1e83c8081c0).html,,,A Navigational System for Quadcopter Remote Inspection of Offshore Substations,,NO,,,YES,,NO,,,NO,,
S2354,2,Forward,journalArticle,2021,"Casado, Rafael; Bermúdez, Aurelio",Electronics,10.3390/electronics10010007,https://www.mdpi.com/2079-9292/10/1/7,"Unmanned aerial vehicles are gaining popularity in an ever-increasing range of applications, mainly because they are able to navigate autonomously. In this work, we describe a simulation framework that can help engineering students who are starting out in the field of aerial robotics to acquire the necessary competences and skills for the development of autonomous drone navigation systems. In our framework, drone behavior is defined in a graphical way, by means of very intuitive state machines, whereas low-level control details have been abstracted. We show how the framework can be used to develop a navigation system proposal according to the rules of the “ESII Drone Challenge” student competition. We also show how the proposal can be evaluated in different test scenarios.",aerial vehicles; autonomous navigation systems; mobile robots; path planning; simulation framework,A Simulation Framework for Developing Autonomous Drone Navigation Systems,,NO,,,YES,,,,,NO,,
S2355,2,Forward,journalArticle,2020,"Gonçalves, Vinicius Mariano; McLaughlin, Ryan; Pereira, Guilherme A. S.",IEEE Robotics and Automation Letters,10.1109/LRA.2020.2994485,,"This letter proposes a strategy for autonomous precision landing of aerial vehicles in fixed pads or runways. Our approach is based on a velocity vector field, which is a closed-loop strategy that guides the vehicle towards the landing point and simultaneously enforces the shape of its trajectory. Relative position between the vehicle and the landing zone, which can be easily determined using visual sensors installed on-board, is the only information necessary to perform the landing. We present vector fields that can be used to land both fixed- and rotary-wing autonomous aircrafts. We also show experiments and simulations with a quadrotor equipped with a monocular camera to illustrate the characteristics of the proposed approach.",Aerial systems: perception and autonomy; Aircraft; Cameras; field robots; motion and path planning; Robots; Sensors; Shape; Task analysis; Trajectory,Precise Landing of Autonomous Aerial Vehicles Using Vector Fields,,NO,,,YES,,,,,NO,,
S2356,2,Forward,conferencePaper,2016,"Bender, Daniel; Rouatbi, Fahmi; Schikora, Marek; Cremersy, Daniel; Koch, Wolfgang",2016 19th International Conference on Information Fusion (FUSION),,,"The usage of a global positioning system (GPS) corrected inertial navigation system (INS) seems to be advantageous to camera-based pose estimation algorithms for outdoor navigation. The GPS signals lead to a geographical location with an accuracy of a few meters or even up to some centimeters in a setup utilizing correction data. Performing the pose estimation with a camera system has several disadvantages. The high amount of data has to be processed and the robustness may vary because of different environment and weather conditions. Nevertheless, cameras are the most used sensors for various tasks with unmanned aerial systems (UAS) because of their low cost and weight. The research results for vision-based simultaneous localization and mapping (SLAM) algorithms show the great capabilities of vision-based navigation. Therefore, the possibilities of cameras should be investigated for outdoor navigation in conjunction with an INS or as standalone backup solution in the case of an INS failure. The vision-based pose estimation using a SLAM algorithm provides considerable additional value by providing a map of the observed area. In contrast to keypoint-based approaches, the usage of a semi-dense formulation leads to 3D information for all image regions with gradients and results in a detailed 3D reconstruction. However, the main problem of the monocular SLAM remains the same. The visual pose estimations, and consequently the generated world, suffer from the unknown scale and the corresponding scale drift. In this work we develop a large scale semi-dense SLAM algorithm for the outdoor navigation of UAS equipped with a camera and an INS. This sensor combination increases the robustness of the visual pose estimation process and enables the generation of a very detailed, metric scaled map.",Cameras; Global Positioning System; Pose estimation; Robustness; Simultaneous localization and mapping; Three-dimensional displays,Scaling the world of monocular SLAM with INS-measurements for UAS navigation,,NO,,,YES,,,,,NO,,
S2357,2,Forward,conferencePaper,2016,"Lan, Menglu; Lai, Shupeng; Bi, Yingcai; Qin, Hailong; Li, Jiaxin; Lin, Feng; Chen, Ben M.",IECON 2016 - 42nd Annual Conference of the IEEE Industrial Electronics Society,10.1109/IECON.2016.7792953,,"This paper presents a 3D on-line path planning algorithm for micro sized aerial vehicles (MAVs). The proposed approach adopts a two-layered planning framework. The first layer of the algorithm utilizes a sampling-based planner named Batch Informed Trees (BIT*) to quickly find an geometric obstacle-free passage. The second layer takes into account the dynamic constrains of the vehicle. By adopting a two-point boundary value problems (TPBVPs) approach, dynamically feasible trajectories can be generated efficiently within the previously found passage for lower-level controller. The main contribution of this work is proposing a complete on-line 3D path planning algorithm which can be implemented on the MAV with limited computational power.",Heuristic algorithms; Lattices; Planning; Three-dimensional displays; Trajectory; Vehicles,BIT-based path planning for micro aerial vehicles,,NO,,,YES,,,,,NO,,
S2358,2,Forward,conferencePaper,2016,"Fu, Yu; Wang, XiangKe; Huan, Liu; Zhu, HuaYong",2016 Chinese Control and Decision Conference (CCDC),10.1109/CCDC.2016.7531409,,"This paper proposed a formation control method based on the modified artificial physics for the multiple Unmanned Aerial Vehicles(UAVs) formation control problem. The formation control method based on basic artificial physics has a shortcoming of easily plunging into a local optimal solution, which will result in some unexpected formation. So we improved the existing artificial physics method using interaction scheme to avoid the local optimum. In our formation control method based on modified artificial physics, interaction forces are applied on the UAVs to make the system escape from local optimum and achieve global optimum. Meanwhile we have constructed a distributed multi-UAVs coordination simulation framework based on the Robot Operating System(ROS) and Gazebo 3D simulator. The simulation results using our simulation framework are presented to verify the effectiveness of our formation control method.",artificial physics; Force; formation control; Gazebo; Robot kinematics; ROS; Standards; Three-dimensional displays; unmanned aerial vehicle(UAV); Unmanned aerial vehicles,Multi-UAV formation control method based on modified artificial physics,,NO,,,YES,,,,,NO,,
S2359,2,Forward,conferencePaper,2017,"Bender, Daniel; Koch, Wolfgang; Cremers, Daniel",2017 IEEE International Conference on Multisensor Fusion and Integration for Intelligent Systems (MFI),10.1109/MFI.2017.8170371,,"Up to the present day, GPS signals are the key component in almost all outdoor navigation tasks of robotic platforms. To obtain the platform pose, comprising the position as well as the orientation, and receive information at a higher frequency, the GPS signals are commonly used in a GPS-corrected inertial navigation system (INS). The GPS is a critical single point of failure, especially for autonomous drones. We propose an approach which creates a metric map of the observed area by fusing camera images with inertial and GPS data during its normal operation and use this map to steer a drone efficiently to its home position in the case of an GPS outage. A naive approach would follow the previously traveled path and get accurate pose estimates by comparing the current camera image with the previously created map. The presented procedure allows the usage of shortcuts through unexplored areas to minimize the travel distance. Thereby, we ensure to reach the starting point by taking into consideration the maximal positional drift while performing pure visual navigation in unknown areas. We achieved close to optimal results in intensive numerical studies and we demonstrate the usability of the algorithm in a realistic simulation environment.",Cameras; Drones; Global Positioning System; Measurement; Simultaneous localization and mapping,Map-based drone homing using shortcuts,,NO,,,YES,,,,,NO,,
S2360,2,Forward,conferencePaper,2016,"Berger, Cyrille; Rudol, Piotr; Wzorek, Mariusz; Kleiner, Alexander","2016 14th International Conference on Control, Automation, Robotics and Vision (ICARCV)",10.1109/ICARCV.2016.7838803,,"In this work we are investigating reactive avoidance techniques which can be used on board of a small quadcopter and which do not require absolute localization. We propose a local map representation which can be updated with proprioceptive sensors. The local map is centred around the robot and uses spherical coordinates to represent a point cloud. The local map is updated using a depth sensor, the Inertial Measurement Unit and a registration algorithm. We propose an extension of the Dynamic Window Approach to compute a velocity vector based on the current local map. We propose to use an OctoMap structure to compute a 2-pass A* which provide a path which is converted to a velocity vector. Both approaches are reactive as they only make use of local information. The algorithms were evaluated in a simulator which offers a realistic environment, both in terms of control and sensors. The results obtained were also validated by running the algorithms on a real platform.",Collision avoidance; Path planning; Robot kinematics; Robot sensing systems; Three-dimensional displays,Evaluation of reactive obstacle avoidance algorithms for a quadcopter,,NO,,,YES,,,,,NO,,
S2361,2,Forward,webpage,,,,,http://103.226.139.203/index.php/ILKOM/article/view/365,,,ROBOT OPERATING SYSTEM (ROS) DAN GAZEBO SEBAGAI MEDIA PEMBELAJARAN ROBOT INTERAKTIF | Jalil | ILKOM Jurnal Ilmiah,NO,,,,NO,,,,,NO,,
S2362,2,Forward,bookSection,2021,"Jagannath, Jithin; Jagannath, Anu; Furman, Sean; Gwin, Tyler",Deep Learning for Unmanned Systems,,https://doi.org/10.1007/978-3-030-77939-9_2,"Unmanned Aerial Systems (UASs) are being increasingly deployed for commercial, civilian, and military applications. The current UAS state-of-the-art still depends on a remote human controller with robust wireless links to perform several of these applications. The lack of autonomy restricts the domains of application and tasks for which a UAS can be deployed. This is even more relevant in tactical and rescue scenarios where the UAS needs to operate in a harsh operating environment with unreliable wireless links. Enabling autonomy and intelligence to the UAS will help overcome this hurdle and expand its use improving safety and efficiency. The exponential increase in computing resources and the availability of large amount of data in this digital era has led to the resurgence of machine learning from its last winter. Therefore, in this chapter, we discuss how some of the advances in machine learning, specifically deep learning and reinforcement learning can be leveraged to develop next-generation autonomous UAS. We first begin motivating this chapter by discussing the application, challenges, and opportunities of the current UAS in the introductory section. We then provide an overview of some of the key deep learning and reinforcement learning techniques discussed throughout this chapter. A key area of focus that will be essential to enable autonomy to UAS is computer vision. Accordingly, we discuss how deep learning approaches have been used to accomplish some of the basic tasks that contribute to providing UAS autonomy. Then we discuss how reinforcement learning is explored for using this information to provide autonomous control and navigation for UAS. Next, we provide the reader with directions to choose appropriate simulation suites and hardware platforms that will help to rapidly prototype novel machine learning based solutions for UAS. We additionally discuss the open problems and challenges pertaining to each aspect of developing autonomous UAS solutions to shine light on potential research areas. Finally, we provide a brief account of the UAS safety and regulations prior to concluding the chapter.",,Deep Learning and Reinforcement Learning for Autonomous Unmanned Aerial Systems: Roadmap for Theory to Deployment,,NO,,,YES,,,,,NO,,
S2363,2,Forward,conferencePaper,2019,"Okoli, Franklin; Lang, Yuchuan; Kermorgant, Olivier; Caro, Stéphane","ROMANSY 22 – Robot Design, Dynamics and Control",10.1007/978-3-319-78963-7_37,,"In this paper, we present a simulator that has been developed using Gazebo and ROS to study cable-driven parallel robots. Real-time dynamic simulation of such robots is an efficient approach to develop new control laws that may integrate various sensors. The limitations of Gazebo are dealt with, as we model the cables under tension as massless $$U-\underline{P}-S$$U-P̲-Slinks with the prismatic joint actuated. We illustrate the proposed simulator with a dynamic controller, detailing the tension distribution and performing various trajectories.",Cable Tension; Cable-driven Parallel Robots; Gazebo Simulator; Prismatic Joint; Real-time Dynamic Simulation,Cable-Driven Parallel Robot Simulation Using Gazebo and ROS,,NO,,,YES,,,,,NO,,
S2364,2,Forward,conferencePaper,2022,"Cheraghi, Ahmad Reza; Shahzad, Sahdia; Graffi, Kalman",Intelligent Systems and Applications,10.1007/978-3-030-82199-9_13,,"Swarm Robotics is an emerging field of adapting the phenomenon of natural swarms to robotics and a study of robots to mimic natural swarms, like ants and birds, to form a scalable, flexible, and robust system. These robots show self-organization, autonomy, cooperation, and coordination amongst themselves. Additionally, their cost and design complexity factor must be as low as possible to reach systems similar to natural swarms. Further, the communication amongst the robots can either be direct (robot-to-robot) or indirect (robot-to-environment) and without any central entity to control them. Swarm robotics has a wide range of application fields, from simple household tasks to military missions. This paper reviews the swarm robotics approaches from its history to its future based on 217 references. It highlights the prominent pioneers of swarm robotics and enlights the initial swarm robotics methods. The presence of swarm robotics is shown based on simulators, projects, and real-life applications. For the future, this paper presents visions and ideas of swarm robotics.",Robot; Robot swarms; Survey; Swarm robotics; Swarms,"Past, Present, and Future of Swarm Robotics",,NO,,,YES,,,,,NO,,
S2365,2,Forward,conferencePaper,2018,"Haus, Tomislav; Ivanovic, Antun; Car, Marko; Orsag, Matko; Bogdan, Stjepan",2018 26th Mediterranean Conference on Control and Automation (MED),10.1109/MED.2018.8442640,,"This paper addresses the problem of actuators saturation that occur when one applies a moving mass concept to control the attitude of a mul-tirotor UAV. In particular, we propose to combine the moving mass control (MMC) with rotors' variations in a paradigm known as a mid-ranging control. We show that this control structure ensures reference tracking and disturbance rejection with the moving masses operating in the middle of their range, which eventually reduces the possibility to violate their saturation limits. We also address the stability and design of the proposed controller by employing Routh-Hourwitz criterion and root-locus analysis. The controller is verified within a simulation environment, where we test its performance and compare it with a basic MMC concept under various disturbances. Finally, we present experimental results that we obtained with a modified ArduCopter vehicle, which serves as an experimental platform for the MMC verification.",Actuators; Robots; Rotors; Stability analysis; Transfer functions; Unmanned aerial vehicles; Valves,Mid-Ranging Control Concept for a Multirotor UAV with Moving Masses,,NO,,,YES,,,,,NO,,
S2366,2,Forward,conferencePaper,2019,"Nakamura, Masanao; Takaya, Kenta; Ohta, Hiroshi; Shibayama, Keishi; Kroumov, Valeri","2019 23rd International Conference on System Theory, Control and Computing (ICSTCC)",10.1109/ICSTCC.2019.8885708,,This paper presents a modeling and simulation of quadrotor helicopter in outdoor environment. The purpose of the developed simulation environment is to provide a tool for evaluation of quadrotor systems under development and/or manufacturing. Such tool allows to perform parameter tunung and flight verification under simulation before evaluation of the rotorcraft in real working conditions. The model adopted in the presented simulation environment is similar to the model used in the flight controller and allows direct usage of the control parameters adjusted under simulation. Several experimental examples prove the capabilities and usability of the proposed simulation environment.,"Aerospace control; Aircraft; Atmospheric modeling; Brushless DC motors; control systems design; industrial applications; modeling, simulation and CAD tools; Solid modeling; Tuning",Quadrotor Modeling and Simulation for Industrial Application,,NO,,,YES,,,,,NO,,
S2367,2,Forward,conferencePaper,2019,"Bernardeschi, Cinzia; Fagiolini, Adriano; Palmieri, Maurizio; Scrima, Giulio; Sofia, Fabio",Modelling and Simulation for Autonomous Systems,10.1007/978-3-030-14984-0_24,,"UAVs can be assigned different tasks such as e.g., rendez-vous and space coverage, which require processing and communication capabilities. This work extends the architecture ROS/Gazebo with the possibility of simulation of co-operative UAVs. We assume UAV with the underlying attitude controller based on the open-source Ardupilot software. The integration of the co-ordination algorithm in Gazebo is implemented with software modules extending Ardupilot with the capability of sending/receiving messages to/from drones, and executing the co-ordination protocol. As far as it concerns the simulation environment, we have extended the world in Gazebo to hold more than one drone and to open a specific communication port per drone. In the paper, results on the simulation of a representative co-ordination algorithm are shown and discussed, in a scenario where a small number of Iris Quadcopters are deployed.",Co-operative UAVs; ROS/Gazebo; Simulation,ROS/Gazebo Based Simulation of Co-operative UAVs,,,NO,,YES,,,,,NO,,
S2368,2,Forward,journalArticle,2020,"Yang, Jun; Thomas, Arun Geo; Singh, Satish; Baldi, Simone; Wang, Ximan",Sensors,10.3390/s20041136,https://www.mdpi.com/1424-8220/20/4/1136,"Unmanned Aerial Vehicles (UAVs) have multi-domain applications, fixed-wing UAVs being a widely used class. Despite the ongoing research on the topics of guidance and formation control of fixed-wing UAVs, little progress is known on implementation of semi-physical validation platforms (software-in-the-loop or hardware-in-the-loop) for such complex autonomous systems. A semi-physical simulation platform should capture not only the physical aspects of UAV dynamics, but also the cybernetics aspects such as the autopilot and the communication layers connecting the different components. Such a cyber-physical integration would allow validation of guidance and formation control algorithms in the presence of uncertainties, unmodelled dynamics, low-level control loops, communication protocols and unreliable communication: These aspects are often neglected in the design of guidance and formation control laws for fixed-wing UAVs. This paper describes the development of a semi-physical platform for multi-fixed wing UAVs where all the aforementioned points are carefully integrated. The environment adopts Raspberry Pi’s programmed in C++, which can be interfaced to standard autopilots (PX4) as a companion computer. Simulations are done in a distributed setting with a server program designed for the purpose of routing data between nodes, handling the user inputs and configurations of the UAVs. Gazebo-ROS is used as a 3D visualization tool.",cyber-physical systems; fixed-wing UAVs; formation control; guidance law; smart sensor systems; Unmanned Aerial Vehicles (UAVs),A Semi-Physical Platform for Guidance and Formations of Fixed-Wing Unmanned Aerial Vehicles,,NO,,,YES,,,,,NO,,
S2369,2,Forward,conferencePaper,2020,"Bai, Yang; Asami, Koki; Svinin, Mikhail; Magid, Evgeni",2020 17th International Conference on Ubiquitous Robots (UR),10.1109/UR49135.2020.9144931,,"In this paper, a control strategy is developed for tracking the propagation of an expanding flood zone by using a group of unmanned aerial vehicles (UAVs). The strategy consists of two stages: a caging stage and a covering stage. In the caging stage, a group of UAVs, referring to the boundary drones, are averagely distributed along the boundary of the flood zone, tracking its propagation. In the covering stage, another group of UAVs, referring to the inner drones, are allocated among the interior region of the flood zone, covering the region as much as possible with less overlapping of the UAVs' field of view. Corresponding control algorithms are proposed for the aforementioned types of UAVs to implement the control strategy. The feasibility of the control strategy is verified under simulations.",Cameras; Drones; Global Positioning System; Monitoring; Robots; Tracking,Cooperative Multi-Robot Control for Monitoring an Expanding Flood Area,,NO,,,YES,,,,,NO,,
S2370,2,Forward,conferencePaper,2015,"Gupta, Neerja; Vijay, Ritukar; Korupolu, Pradyot V. N.; Bansal, Jayant; Kapuria, Anuj",Proceedings of the 2015 Conference on Advances In Robotics,10.1145/2783449.2783515,https://doi.org/10.1145/2783449.2783515,"With the current advances in Autonomous Navigation Systems for Self Driving Vehicles, there is a need for specialized and focused software architecture for ease in simulating the vehicle behavior and associated modules such as perception, drive by wire system, obstacle detection and path planning. In addition, testing algorithms on real vehicles during development takes enormous effort, time and also contains risk to the vehicle and its corresponding surroundings. Having a software architecture that is very similar to the target autonomous system combined with a fairly accurate simulator, reduces this risk and eases the development process. In this paper, we propose an integrated software architecture using ROS and Gazebo that is compliant to JAUS standards, which is scalable and easy to use. The proposed architecture uses Gazebo that is equipped with the Open Dynamics Engine providing realism to the simulation along with sensors perception, path planning and vehicle control using a Drive-by-Wire system. The results of using the proposed software architecture are shown for Autonomous and Tele-operated navigation missions on an all-terrain vehicle.",autonomous navigation; autonomous navigation system; gazebo; JAUS; ROS; self driving vehicles; simulation; unmanned ground vehicles,Architecture of autonomous vehicle simulation and control framework,,NO,,,YES,,,,,NO,,
S2371,2,Forward,journalArticle,2021,"Pairet, Èric; Hernández, Juan David; Carreras, Marc; Petillot, Yvan; Lahijanian, Morteza",IEEE Transactions on Automation Science and Engineering,10.1109/TASE.2021.3118737,,"Safe autonomous navigation is an essential and challenging problem for robots operating in highly unstructured or completely unknown environments. Under these conditions, not only robotic systems must deal with limited localization information but also their maneuverability is constrained by their dynamics and often suffers from uncertainty. In order to cope with these constraints, this article proposes an uncertainty-based framework for mapping and planning feasible motions online with probabilistic safety guarantees. The proposed approach deals with the motion, probabilistic safety, and online computation constraints by: 1) incrementally mapping the surroundings to build an uncertainty-aware representation of the environment and 2) iteratively (re)planning trajectories to goal that is kinodynamically feasible and probabilistically safe through a multilayered sampling-based planner in the belief space. In-depth empirical analyses illustrate some important properties of this approach, namely: 1) the multilayered planning strategy enables rapid exploration of the high-dimensional belief space while preserving asymptotic optimality and completeness guarantees and 2) the proposed routine for probabilistic collision checking results in tighter probability bounds in comparison to other uncertainty-aware planners in the literature. Furthermore, real-world in-water experimental evaluation on a nonholonomic torpedo-shaped",Field robotics; Lattices; Navigation; online mapping; online motion planning under uncertainty; Planning; Probabilistic logic; Robots; safe autonomous navigation in unknown environments; Safety; sampling-based motion planning; Uncertainty,Online Mapping and Motion Planning Under Uncertainty for Safe Navigation in Unknown Environments,,NO,,,YES,,,,,NO,,
S2372,2,Forward,journalArticle,2017,"Wei, Yusheng; Lin, Zongli",IFAC-PapersOnLine,10.1016/j.ifacol.2017.08.1814,https://www.sciencedirect.com/science/article/pii/S2405896317324369,"Real-time following of a moving target by a flying tracker without radar detection and GPS reception inspires vision-based tracking through the use of surveillance camera, laser-scanned lidar, and SLAM (simultaneous localization and mapping). In this paper, we propose vision-based tracking of a moving target in three consecutive steps, image processing, coordinate transformation and trajectory following. A testing platform containing two spawned quadrotors as target and tracker is developed on ROS, from which sequence of images are generated by an on-board camera of the tracker while the target moves along a rectangular path on the ground. An image processing algorithm based on target recognition is proposed to achieve visual tracking on image frames. Coordinate transformation is established to recover the original target trajectory as the desired path of the tracker in the real world from the image processing algorithm. The target following control law then moves the tracker along the desired trajectory point-by-point through velocity control.",quadrotor; ROS; Tracking; vision-based,Vision-based Tracking by a Quadrotor on ROS**This work was supported in part by the U.S. Army Research Office under grant W911NF1510275.,,NO,,,YES,,,,,NO,,
S2373,2,Forward,journalArticle,2021,"Testa, Andrea; Camisa, Andrea; Notarstefano, Giuseppe",IEEE Robotics and Automation Letters,10.1109/LRA.2021.3061366,,"In this letter, we introduce ChoiRbot, a toolbox for distributed cooperative robotics based on the novel Robot Operating System (ROS) 2. ChoiRbot provides a fully-functional toolset to execute complex distributed multi-robot tasks, either in simulation or experimentally, with a particular focus on networks of heterogeneous robots without a central coordinator. Thanks to its modular structure, ChoiRbot allows for a highly straight implementation of optimization-based distributed control schemes, such as distributed optimal control, model predictive control, task assignment, in which local computation and communication with neighboring robots are alternated. To this end, the toolbox provides functionalities for the solution of distributed optimization problems. The package can be also used to implement distributed feedback laws that do not need optimization features but do require the exchange of information among robots. The potential of the toolbox is illustrated with simulations and experiments on distributed robotics scenarios with mobile ground robots. The ChoiRbot toolbox is available at https://github.com/OPT4SMART/choirbot.",Computer architecture; Decentralized control; Distributed robot systems; Optimization; optimization and optimal control; Predictive control; Python; Robot kinematics; software architecture for robotic and automation; Task analysis,ChoiRbot: A ROS 2 Toolbox for Cooperative Robotics,,,,,YES,,,,,YES,,
S2374,2,Forward,conferencePaper,2017,"Joshi, Apurva; Wala, Ankit; Ludhiyani, Mohit; Singh, Saksham; Gagrani, Mohit; Hazra, Subhadip; Chakraborty, Debraj; Manjunath, D.; Chung, Hoam",2017 IEEE 56th Annual Conference on Decision and Control (CDC),10.1109/CDC.2017.8263964,,"This article describes the outdoor implementation of a decentralized consensus algorithm which drives multiple quadrotors to an autonomously decided consensus point. The quadrotors use a GPS module for localization and Xbee modules for data exchange in order to autonomously achieve consensus. A novel synchronized, time-slotted and scalable communication protocol is proposed, which avoids data packet collisions and ensures real-time connectivity between agents. This protocol can address changing communication graph topologies and temporary link breaks and additions. The performance of this protocol and its effect on consensus performance is characterized. The consensus and communication experiments are implemented on a testbed of six quadrotors in an outdoor environment. Details regarding the consensus experiment and communication protocol are presented.",Delays; Global Positioning System; Microcontrollers; Protocols; Real-time systems; Synchronization,Implementation of distributed consensus with guaranteed real-time communication on an outdoor quadrotor testbed,,NO,,,YES,,,,,NO,,
S2375,2,Forward,conferencePaper,2020,"Biundini, Iago Z.; Melo, Aurelio G.; Pinto, Milena F.; Marins, Guilherme M.; Marcato, Andre L. M.; Honorio, Leonardo M.",Robot 2019: Fourth Iberian Robotics Conference,10.1007/978-3-030-36150-1_42,,"In the last decades, there is a growing in the use of UAVs for inspection applications due to their maneuverability, flexibility, and efficiency. UAVs can be used for regular inspections to verify deformities, reconstruct 3D spaces, and mapping through aerial photogrammetry. An important aspect when inspecting buildings and structures is to cover the entire structure as efficiently as possible. Some applications, such as the inspection of electric power generation facilities, demand security constraints to ensure safety in their big structures like slopes and dams. Those inspections will be repeated regularly to ensure that changes in the structures are not occurring over time. The determination of the optimal path planning for those structures can be quite complex. This is due to the presence of obstacles and safety restrictions, such as high voltage power lines, transformers, and water outlets that will be present and can not be modeled previous to the first inspection. Thus, these initial inspections are performed manually by a skilled operator. However, this first path is performed without considering mission time and optimal trajectory. Therefore, this research work proposes a methodology to maximize coverage inspection trajectories generated manually. The results proved the algorithm capacity of optimizing trajectories performed manually by an operator.",Inspection; Optimized Path Planning; Surface Deformation Analysis; Unmanned Aerial Vehicle,Coverage Path Planning Optimization for Slopes and Dams Inspection,,NO,,,YES,,,,,NO,,
S2376,2,Forward,conferencePaper,2014,"Dias, André; Almeida, Jose; Dias, Nuno; Lima, Pedro; Silva, Eduardo","Simulation, Modeling, and Programming for Autonomous Robots",10.1007/978-3-319-11900-7_9,,"Field experiments with a team of heterogeneous robots require human and hardware resources which cannot be implemented in a straightforward manner. Therefore, simulation environments are viewed by the robotic community as a powerful tool that can be used as an intermediate step to evaluate and validate the developments prior to their integration in real robots. This paper evaluates a novel multi-robot heterogeneous cooperative perception framework based on monocular measurements under the MORSE robotic simulation environment. The simulations are performed in an outdoor environment using a team of Micro Aerial Vehicles (MAV) and an Unmanned Ground Vehicle (UGV) performing distributed cooperative perception based on monocular measurements. The goal is to estimate the 3D target position.",Aerial Robot; Global Frame; Real Robot; Simulation Environment; Unmanned Ground Vehicle,Simulation Environment for Multi-robot Cooperative 3D Target Perception,,NO,,,YES,,,,,NO,,
S2377,2,Forward,conferencePaper,2019,"Izadi Moud, Hashem; Razkenari, Mohamad A.; Flood, Ian; Kibert, Charles",Advances in Informatics and Computing in Civil and Construction Engineering,10.1007/978-3-030-00220-6_73,,"In 2015, the construction had the highest rate of fatalities among all industries in the United States. Unsafe operation of construction equipment is one of the main causes of fatal incidents. Operation, management and interactions between construction equipment and construction crews should be thoroughly regulated to minimize the risk of fatal incidents on job sites. While use of most traditional construction equipment is regulated, the construction industry has struggled with regulating new, innovative and smart equipment such as Unmanned Aerial Vehicles (UAVs) that have recently been introduced to construction job sites. In this paper, collision avoidance and spatial safety theories in construction are discussed. The bases of these theories are extended to UAV operation in order to establish the first known theory on safe use and operation of UAVs in construction. Also, basic principles of UAV flights are discussed. By applying the basic principles of UAV flights and construction spatial safety theories, a UAV flight simulator in construction environments has been developed in Unity game engine. The flight simulator is designed for UAV pilots, construction managers and safety managers, and enables users to fly a UAV within a simulated environment extracted from a BIM model. This UAV flight simulator is tested in a case study of a building currently under construction. This simulator can be used to assess UAV pilots’ capabilities, test the risks of UAV flights in any construction environment, and UAV safe flight path planning.",Flight simulation; Flight simulator; UAV; Unmanned aerial vehicle,A Flight Simulator for Unmanned Aerial Vehicle Flights Over Construction Job Sites,,NO,,,YES,,,,,NO,,
S2378,2,Forward,conferencePaper,2017,"Rojas, Juan; Martinez, Carol; Mondragon, Ivan; Colorado, Julian",Advances in Automation and Robotics Research in Latin America,10.1007/978-3-319-54377-2_24,,"Around 8 to 10 million Ton of rice are required in the following years to be able to supply the demand of the overall population. Analysis and monitoring of rice crops becomes nowadays very important issue for farmers, for ensuring a rice production level to cope this demand. This paper presents simulation results of an algorithm that allows to plan and create 2D maps using the technique of image mosaicking with multiple geo-referenced aerial images (multispectral images in the scope of the project). The planning algorithm is called Image Capture algorithm. It takes into account the area the UAV has to cover, the camera configuration, and the state of the UAV in order to define where to take the pictures to build the mosaic. The algorithm presented in this paper was developed in ROS (Indigo) and simulated in Gazebo. The results of this first approach to the 2D mapping of a rice crop allows to see that using the proposed algorithm, it is possible to automate the process of acquiring the pictures for creating the mosaic, ensuring that all the area of interest is covered. By using this algorithm, pictures will be acquired only in specific areas. Therefore, keeping the storage capacity on-board, under control.",Computer vision; Homography; Image mosaicking; Stitching; Unmanned Aerial Vehicles,Towards Image Mosaicking with Aerial Images for Monitoring Rice Crops,,NO,,,YES,,,,,NO,,
S2379,2,Forward,conferencePaper,2015,"Williams, Richard; Konev, Boris; Coenen, Frans",2015 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS.2015.7353804,,This paper describes work on a distributed framework for collaborative multi-robot localisation and mapping with large teams of Micro Aerial Vehicles (MAVs). We demonstrate the benefits of running both image capture and frame-to-frame tracking on the same device while offloading the more computationally intensive aspects of map creation and optimization to an off-board computer. We show no impact on the accuracy of pose estimates of this distributed approach and indeed demonstrate a robustness to delay that improves localisation performance. The bandwidth requirements of our system are much lower than similar systems which enables us to accommodate larger teams of MAVs. In the results section we demonstrate the performance of our system in both simulated and real-world environments.,Bandwidth; Cameras; Computers; Robot kinematics; Sensors; Tracking,Scalable distributed collaborative tracking and mapping with Micro Aerial Vehicles,,NO,,,YES,,,,,NO,,
S2380,2,Forward,conferencePaper,2020,"Alborzi, Y.; Jalal, B. Safari; Najafi, E.",2020 21st International Conference on Research and Education in Mechatronics (REM),10.1109/REM49740.2020.9313875,,"Effective robot navigation is crucial for the proper implementation of a mobile robot. To navigate a robot in an indoor or outdoor environment, a map of the surrounding obstacles is required. In order to acquire this map, the robot uses sensors to collect information about its surroundings and its own location. This paper presents a robotic operating system based on autonomous simultaneous localization and mapping (SLAM), and robot navigation implementation of a Parrot AR. Drone 2.0 quadrotor, which is equipped with a laser scanner and inertial measurement unit. For autonomous mapping, SLAM along with frontier type exploration has been used to acquire a full 2D map of the environment in Gazebo. The A* search algorithm is utilized for the global planner, while the dynamic window approach has been implemented for the local planner. The Gazebo-simulated results validate the competent performance of the underlying structure of both the proposed SLAM as well as the provided navigation algorithm.",Drones; Navigation; Robot sensing systems; Robots; Sensors; Simultaneous localization and mapping; Task analysis,ROS-based SLAM and Navigation for a Gazebo-Simulated Autonomous Quadrotor,,,,,YES,NO,,,,NO,,
S2381,2,Forward,conferencePaper,2019,"Kassab, Mohamed A.; Maher, Ali; Elkazzaz, Fathy; Baochang, Zhang",2019 IEEE International Conference on Multimedia and Expo (ICME),10.1109/ICME.2019.00032,,"This paper introduces an Image Based Visual Servoing (IBVS) system to track a ground target from a flying UAV. We implement a tracking system via two deep neural networks; approaching network and chasing network. In the approaching network, the UAV-target relative distance is estimated through the tracked target state to drive the UAV to a desired distance. In the chasing network, the tracked target orientation is used in resolving the ambiguity between the UAV's yawing and lateral movements and aligning the UAV with the tracked target heading to ease the tracking task. The detection accuracy for both networks has been validated and a series of real flight data, which has been conducted on ground targets and persons showed the proposed system efficiency in target tracking and following.",approaching and chasing; Cameras; IBVS; Neural networks; Target tracking; Task analysis; Training; two deep networks; UAV-target following; Visualization,UAV Target Tracking By Detection via Deep Neural Networks,,NO,,,YES,,,,,NO,,
S2382,2,Forward,book,,,,,https://link.springer.com/book/10.1007/978-3-319-96580-2,This monograph covers a hot topic in the fast evolving field of flying robot manipulators. It is well written and mathematically profound and complete and can be used as a concise and solid introduction to the field of visual guidance and control of aerial manipulators.,,Visual Guidance of Unmanned Aerial Manipulators,NO,,,,NO,,,,,NO,,
S2383,2,Forward,conferencePaper,2020,"Ghosh, Ritwika; Jansch-Porto, Joao P.; Hsieh, Chiao; Gosse, Amelia; Jiang, Minghao; Taylor, Hebron; Du, Peter; Mitra, Sayan; Dullerud, Geir",2020 IEEE International Conference on Robotics and Automation (ICRA),10.1109/ICRA40945.2020.9196513,,"Programming languages, libraries, and development tools have transformed the application development processes for mobile computing and machine learning. This paper introduces CyPhyHouse-a toolchain that aims to provide similar programming, debugging, and deployment benefits for distributed mobile robotic applications. Users can develop hardware-agnostic, distributed applications using the high-level, event driven Koord programming language, without requiring expertise in controller design or distributed network protocols. The modular, platform-independent middleware of CyPhyHouse implements these functionalities using standard algorithms for path planning (RRT), control (MPC), mutual exclusion, etc. A high-fidelity, scalable, multi-threaded simulator for Koord applications is developed to simulate the same application code for dozens of heterogeneous agents. The same compiled code can also be deployed on heterogeneous mobile platforms. The effectiveness of CyPhyHouse in improving the design cycles is explicitly illustrated in a robotic testbed through development, simulation, and deployment of a distributed task allocation application on in-house ground and aerial vehicles.",Collision avoidance; Middleware; Python; Robot kinematics; Task analysis,"CyPhyHouse: A programming, simulation, and deployment toolchain for heterogeneous distributed coordination",,NO,,,YES,,,,,NO,,
S2384,2,Forward,bookSection,2019,"Al-Kaff, Abdulla; Moreno, Francisco Miguel; Hussein, Ahmed",Robot Operating System (ROS): The Complete Reference (Volume 3),,https://doi.org/10.1007/978-3-319-91590-6_5,"Unmanned vehicle is the term that describes any platform without a human operator on-board. These vehicles can be either tele-operated remotely through a control station, or autonomously driven using on-board sensors and controllers. With the advances in micro and nano electronics, the increase in computing efficiency, and the ability to work in dull, dirty and dangerous environments, modern unmanned vehicles aim at higher levels of autonomy. This is through development of accurate control systems and a high-level environment understanding, in order to perform complex tasks. The main part of autonomous vehicles is the navigation system, along with the supporting subsystems. The navigation system utilizes information from various sensors, in order to estimate the position and orientation of the vehicle, sense the surrounding environment and perform the correct maneuver to achieve its assigned task. Accordingly, this chapter presents a ROS-based architecture for two different unmanned vehicles to be used in civil applications, which are constrained by Size, Weight and Power (SWap). This architecture includes the algorithms for control, localization, perception, planning, communication and cooperation tasks. In addition, in order to validate the robustness of the presented vehicles, different experiments have been carried out in real world applications with two different types of Unmanned Aerial Vehicle (UAV). The experiments cover applications in various fields; for instance, search and rescue missions, environment exploration, transportation and inspection. The obtained results demonstrates the effectiveness of the proposed architecture and validates its functionality on actual platforms.",Hexacopter; Management Node; Pixhawk; Quadcopter; Unmanned Vehicles,ROS-Based Approach for Unmanned Vehicles in Civil Applications,,,,,YES,NO,,,,NO,,
S2385,2,Forward,conferencePaper,2017,"Mas, Ignacio; Moreno, Patricio; Giribet, Juan; Barzi, Diego Valentino",2017 International Conference on Unmanned Aircraft Systems (ICUAS),10.1109/ICUAS.2017.7991315,,"Unmanned networked multirobot systems have the potential to accomplish complex field tasks with minimum human intervention. Motion coordination of vehicles that operate in different domains (land, sea, air) is one of the problems that need to be addressed to achieve such a goal. This article presents a representation method based on dual quaternions for leader-follower formation control architectures. This representation offers the most compact and computationally efficient screw transformation formalism and can be used to describe rigid body motions because they simultaneously describe positions and orientations with only eight parameters. A controller in dual quaternion formation space is proposed and analyzed. Computer simulation results and experimental tests applied to the task of escorting an UGV with UAVs are shown to verify the functionality of the proposed system.",Aerospace electronics; Computer simulation; Kinematics; Quaternions; Robot kinematics; Space vehicles,Formation control for multi-domain autonomous vehicles based on dual quaternions,,NO,,,YES,,,,,NO,,
S2386,2,Forward,journalArticle,2014,"G.~Antonelli; Baizid, Khelifa; Caccavale, Fabrizio; Giglio, G; Pierri, Francesco",19th IFAC World Congress,,,"In this paper a Control software Architecture for Cooperative multiple unmanned aerial VehIcle-manipulator Systems (CAVIS) is presented. The core of the architecture is a set of software components, communicating each other through a set of defined messages. To handle multiple control objectives simultaneously, a library of elementary behaviors is defined; then, multiple elementary behaviors are combined, in a given priority order, into tasks (compound behaviors); to this aim the Null-Space-based Behavioral (NSB) approach has been adopted. An application example, involving a cooperative transportation of a bar by two aerial vehicle manipulator systems, is developed to assess the performance of the proposed architecture",,Cooperative unmanned aerial vehicles manipulator systems: a control software architecture,,NO,,,YES,,,,,NO,,
S2387,2,Forward,bookSection,,"Acharya, Aditya D.; Bhandari, Subodh; Aliyazicioglu, Zekeriya",AIAA Scitech 2019 Forum,,https://arc.aiaa.org/doi/abs/10.2514/6.2019-1057,,,Autonomous Navigation of a Quadcopter in Indoor Environments,,,,,NO,,,,,NO,,
S2388,2,Forward,journalArticle,2021,"Belmonte, Lidia M.; García, Arturo S.; Segura, Eva; Novais, Paulo; Morales, Rafael; Fernández-Caballero, Antonio",IEEE Transactions on Emerging Topics in Computing,10.1109/TETC.2020.3000352,,"Unmanned aerial vehicles (UAVs) represent an assistance solution for home care of dependent persons. These aircraft can cover the home, accompany the person, and position themselves to take photographs that can be analyzed to determine the person’s mood and the assistance needed. In this context, this work principally aims to design a tool to aid in the development and validation of the navigation algorithms of an autonomous vision-based UAV for monitoring dependent people. For that, a distributed architecture has been proposed based on the real-time communication of two modules, one of them in charge of the dynamics of the UAV, the trajectory planning and the control algorithms, and the other devoted to visualizing the simulation in an immersive virtual environment. Thus, a system has been developed that allows the evaluation of the behavior of the assistant UAV from a technological point of view, as well as to carry out studies from the assisted person’s viewpoint. An initial validation of a quadrotor model monitoring a virtual character demonstrates the advantages of the proposed system, which is an effective, safe and adaptable tool for the development of vision-based UAVs to help dependents at home.",Heuristic algorithms; I.2.9.a autonomous vehicles; K.4.2.b assistive technologies for persons with disabilities; L.2.0.k virtual reality; Monitoring; Real-time systems; Solid modeling; Tools; Trajectory; Virtual reality,Virtual Reality Simulation of a Quadrotor to Monitor Dependent People at Home,,NO,,,YES,,,,,NO,,
S2389,2,Forward,conferencePaper,2018,"Car, Marko; Ivanovic, Antun; Orsag, Matko; Bogdan, Stjepan",2018 International Conference on Unmanned Aircraft Systems (ICUAS),10.1109/ICUAS.2018.8453397,,"In this paper, we demonstrate a force tracking impedance control of a unmanned aerial vehicle's (UAV's) end effector, which is the foundation of compliant interaction with the environment. Using proposed scheme the UAV is able to accomplish physical interaction with the environment while maintaining a stable contact force. After introducing the impedance control, we address an issue of unknown environmental parameters. Here, we introduce the adaptive control which generates the reference position required to produce the desired contact force. Finally, the performance of impedance and adaptive impedance control for the UAV is analyzed through conducted simulation experiments.",Adaptation models; Force; Impedance; Manipulators; Mathematical model; Task analysis; Unmanned aerial vehicles,Position-based adaptive impedance control for a UAV,,NO,,,YES,,,,,NO,,
S2390,2,Forward,journalArticle,2019,"Freimuth, Henk; König, Markus",Sensors,10.3390/s19204513,https://www.mdpi.com/1424-8220/19/20/4513,"Planning and scheduling in construction heavily depend on current information about the state of construction processes. However, the acquisition process for visual data requires human personnel to take photographs of construction objects. We propose using unmanned aerial vehicle (UAVs) for automated creation of images and point cloud data of particular construction objects. The method extracts locations of objects that require inspection from Four Dimensional Building Information Modelling (4D-BIM). With this information at hand viable flight missions around the known structures of the construction site are computed. During flight, the UAV uses stereo cameras to detect and avoid any obstacles that are not known to the model, for example moving humans or machinery. The combination of pre-computed waypoint missions and reactive avoidance ensures deterministic routing from takeoff to landing and operational safety for humans and machines. During flight, an additional software component compares the captured point cloud data with the model data, enabling automatic per-object completion checking or reconstruction. The prototype is developed in the Robot Operating System (ROS) and evaluated in Software-In-The-Loop (SITL) simulations for the sake of being executable on real UAVs.",as-built; BIM; data acquisition; depth camera; obstacle avoidance; octree; point cloud; ROS; UAV,A Framework for Automated Acquisition and Processing of As-Built Data with Autonomous Unmanned Aerial Vehicles,,NO,,,YES,,,,,NO,,
S2391,2,Forward,journalArticle,2020,"St-Onge, David; Varadharajan, Vivek Shankar; Švogor, Ivan; Beltrame, Giovanni",Frontiers in Robotics and AI,,https://www.frontiersin.org/articles/10.3389/frobt.2020.00051,"Many applications benefit from the use of multiple robots, but their scalability and applicability are fundamentally limited when relying on a central control station. Getting beyond the centralized approach can increase the complexity of the embedded software, the sensitivity to the network topology, and render the deployment on physical devices tedious and error-prone. This work introduces a software-based solution to cope with these challenges on commercial hardware. We bring together our previous work on Buzz, the swarm-oriented programming language, and the many contributions of the Robotic Operating System (ROS) community into a reliable workflow, from rapid prototyping of decentralized behaviors up to robust field deployment. The Buzz programming language is a hardware independent, domain-specific (swarm-oriented), and composable language. From simulation to the field, a Buzz script can stay unmodified and almost seamlessly applicable to all units of a heterogeneous robotic team. We present the software structure of our solution, and the swarm-oriented paradigms it encompasses. While the design of a new behavior can be achieved on a lightweight simulator, we show how our security mechanisms enhance field deployment robustness. In addition, developers can update their scripts in the field using a safe software release mechanism. Integrating Buzz in ROS, adding safety mechanisms and granting field updates are core contributions essential to swarm robotics deployment: from simulation to the field. We show the applicability of our work with the implementation of two practical decentralized scenarios: a robust generic task allocation strategy and an optimized area coverage algorithm. Both behaviors are explained and tested with simulations, then experimented with heterogeneous ground-and-air robotic teams.",,From Design to Deployment: Decentralized Coordination of Heterogeneous Robotic Teams,,NO,,,YES,,,,,NO,,
S2392,2,Forward,thesis,2019,"Bhushan, Neha",,,https://rc.library.uta.edu/uta-ir/handle/10106/28092,"Unmanned Aerial Vehicles (UAVs) have gained mass popularity in fields such as Defense,  Agriculture, Sport and Photography etc. Their wide adoption in such research projects have  opened new horizons for opportunities. However, UAVs operate in a rather dynamic environment  since various factors such as airspeed, temperature, pressure, turbulence etc. are capable  of hampering the flight operation. There is a need for rather robust trajectory generation algorithm  and system such that it provides an easy user interface to specify the path of UAV  through space, alongside making the UAV capable enough to maneuver itself from the initial  to final position. This project focuses on two aspects of UAV control, the first part focuses  on trajectory generation using various mathematically modeled techniques for the position,  velocity and acceleration expressed as a function of time. Their comparison is done based on  the constraint-based optimization techniques followed by some discussions. The second part  focuses on UAV simulators and lays out the foundations and requirements for them, followed  by some proposed simulators and their comparison, which could be used not only for flight  control simulation, but also have potential to integrate Reinforcement Learning techniques  for Autonomous flight control and Autopilot systems. Finally, in-depth analysis of AirSim  simulator is carried out along with its environment setup process which may be used as an  Interfacing, Installation and set-up documentation for future work.",,UAV: Trajectory Generation and Simulation,NO,,,,YES,,,,,NO,,
S2393,2,Forward,journalArticle,2020,"Oh, Donggeun; Han, Junghee",Sensors,10.3390/s20247321,https://www.mdpi.com/1424-8220/20/24/7321,"Recently, as UAVs (unmanned aerial vehicles) have become smaller and higher-performance, they play a very important role in the Internet of Things (IoT). Especially, UAVs are currently used not only in military fields but also in various private sectors such as IT, agriculture, logistics, construction, etc. The range is further expected to increase. Drone-related techniques need to evolve along with this change. In particular, there is a need for the development of an autonomous system in which a drone can determine and accomplish its mission even in the absence of remote control from a GCS (Ground Control Station). Responding to such requirements, there have been various studies and algorithms developed for autonomous flight systems. Especially, many ML-based (Machine-Learning-based) methods have been proposed for autonomous path finding. Unlike other studies, the proposed mechanism could enable autonomous drone path finding over a large target area without size limitations, one of the challenges of ML-based autonomous flight or driving in the real world. Specifically, we devised Multi-Layer HVIN (Hierarchical VIN) methods that increase the area applicable to autonomous flight by overlaying multiple layers. To further improve this, we developed Fisheye HVIN, which applied an adaptive map compression ratio according to the drone’s location. We also built an autonomous flight training and verification platform. Through the proposed simulation platform, it is possible to train ML-based path planning algorithms in a realistic environment that takes into account the physical characteristics of UAV movements.",autonomous flight; Fisheye; IoTs; machine-learning; UAVs; VIN,Fisheye-Based Smart Control System for Autonomous UAV Operation,,NO,,,YES,,,,,NO,,
S2394,2,Forward,journalArticle,2020,"Ghosh, Ritwika; Hsieh, Chiao; Misailovic, Sasa; Mitra, Sayan",Proceedings of the ACM on Programming Languages,10.1145/3428300,https://doi.org/10.1145/3428300,"A robot’s code needs to sense the environment, control the hardware, and communicate with other robots. Current programming languages do not provide suitable abstractions that are independent of hardware platforms. Currently, developing robot applications requires detailed knowledge of signal processing, control, path planning, network protocols, and various platform-specific details. Further, porting applications across hardware platforms remains tedious. We present Koord—a domain specific language for distributed robotics—which abstracts platform-specific functions for sensing, communication, and low-level control. Koord makes the platform-independent control and coordination code portable and modularly verifiable. Koord raises the level of abstraction in programming by providing distributed shared memory for coordination and port interfaces for sensing and control. We have developed the formal executable semantics of Koord in the K framework. With this symbolic execution engine, we can identify assumptions (proof obligations) needed for gaining high assurance from Koord applications. We illustrate the power of Koord through three applications: formation flight, distributed delivery, and distributed mapping. We also use the three applications to demonstrate how platform-independent proof obligations can be discharged using the Koord Prover while platform-specific proof obligations can be checked by verifying the obligations using physics-based models and hybrid verification tools.",Distributed Robotics; Programming Language for Robotics,Koord: a language for programming and verifying distributed robotics application,,NO,,,YES,,NO,,,NO,,
S2395,2,Forward,journalArticle,2020,"Rekabi, Fateme; Shirazi, Farzad A.; Sadigh, Mohammad Jafar; Saadat, Mahmood",Journal of the Franklin Institute,10.1016/j.jfranklin.2020.04.056,https://www.sciencedirect.com/science/article/pii/S0016003220303136,"This paper presents a new framework to solve the position tracking problem of a quadrotor helicopter. This algorithm consists of a cascade architecture which employs a measurement feedback nonlinear H∞ algorithm in the outer-loop to track the reference trajectory via noisy measurements, and a state-feedback nonlinear H∞ in the inner-loop to stabilize the attitude dynamics. The obtained structure for the outer-loop includes a robust controller-estimator combination which satisfies the stability and convergence of both parts. Analytical results show the asymptotic stability and output boundedness for both inner and outer loops and consequently the cascade system. The Monte-Carlo simulations are performed to numerically examine the robust performance and the region of attraction of the overall system. Different environmental disturbances and modeling uncertainties are considered in 1000 simulations to verify the robust performance and boundedness of all states. Moreover, to quantify the performance of the algorithm, two numerical indexes; Integrated Square error (ISE), and Integral of the Absolute value of the control Derivative (IADU) are suggested and utilized for statistical analysis of the state tracking performance and control effort, respectively. Finally, a Software-in-the-Loop (SIL) test is performed using PX4-FMU open source autopilot and Raspberry-Pi 3 as an auxiliary processor to show the capability of the algorithm for hardware implementation.",,Nonlinear H∞ Measurement Feedback Control Algorithm for Quadrotor Position Tracking,,NO,,,YES,,,,,NO,,
S2396,2,Forward,conferencePaper,2020,"Zhao, Q.; Hughes, J.; Lyons, D.",Unmanned Systems Technology XXII,10.1117/12.2556385,https://www.spiedigitallibrary.org/conference-proceedings-of-spie/11425/114250L/Drone-proximity-detection-via-air-disturbance-analysis/10.1117/12.2556385.full,"The use of unmanned aerial vehicles (drones) is expanding to commercial, scientific, and agriculture applications, including surveillance, product deliveries and aerial photography. One challenge for applications of drones is detecting obstacles and avoiding collisions. A typical solution to this issue is the use of camera sensors or ultrasonic sensors for obstacle detection or sometimes just manual control (teleoperation). However, these solutions have costs in battery lifetime, payload, operator skill. We note that there will be an air disturbance in the vicinity of the drone when it’s moving close to obstacles or other drones. Our objective is to detect obstacles from monitoring the aforementioned air disturbance, by analyzing the data from the drone’s gyroscope and accelerometer. Results from three experiments using the Crazyflie 2 micro drone are reported here. We show that it is possible to reliably detect when a drone is passing under another using by using data mining algorithms to recognize the air disturbance caused by the other drone.",,Drone proximity detection via air disturbance analysis,,NO,,,YES,,,,,NO,,
S2397,2,Forward,conferencePaper,2020,"Wang, Min; Voos, Holger",2020 17th International Conference on Ubiquitous Robots (UR),10.1109/UR49135.2020.9144902,,"UAV teleoperation is a demanding task, especially for amateur operators who wish to successfully accomplish their mission without collision. In this work we present an integrated 2D LIDAR based Sense-and-Avoid system which actively assists unskilled human operator in obstacle avoidance, so that the operator can focus on higher-level decisions and global objectives in UAV applications such as search and rescue, farming etc. Specifically, with our perception-assistive vehicle control design, novel adaptive virtual cushion force field (AVCFF) based avoidance strategy, and integrated sensing solution, the proposed UAV teleoperation assistance system is capable of obstacle detection and tracking, as well as automatic avoidance in complex environment where both static and dynamic objects are present. The proposed system is constructed on the basis of Hector Quadrotor open source framework [1], and its effectiveness is demonstrated and validated on a realistic simulated UAV platform in Gazebo simulations where the UAV is operated at a high speed.",Collision avoidance; Laser radar; Robot sensing systems; Two dimensional displays; Unmanned aerial vehicles; Vehicle dynamics,An Integrated Teleoperation Assistance System for Collision Avoidance of High-speed UAVs in Complex Environments,,NO,,,YES,,,,,NO,,
S2398,2,Forward,conferencePaper,2020,"Dhami, Harnaik; Yu, Kevin; Xu, Tianshu; Zhu, Qian; Dhakal, Kshitiz; Friel, James; Li, Song; Tokekar, Pratap",2020 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS45743.2020.9341343,,"We present techniques to measure crop heights using a 3D Light Detection and Ranging (LiDAR) sensor mounted on an Unmanned Aerial Vehicle (UAV). Knowing the height of plants is crucial to monitor their overall health and growth cycles, especially for high-throughput plant phenotyping. We present a methodology for extracting plant heights from 3D LiDAR point clouds, specifically focusing on plot-based phenotyping environments. We also present a toolchain that can be used to create phenotyping farms for use in Gazebo simulations. The tool creates a randomized farm with realistic 3D plant and terrain models. We conducted a series of simulations and hardware experiments in controlled and natural settings. Our algorithm was able to estimate the plant heights in a field with 112 plots with a root mean square error (RMSE) of 6.1 cm. This is the first such dataset for 3D LiDAR from an airborne robot over a wheat field. The developed simulation toolchain, algorithmic implementation, and datasets can be found on our GitHub repository.1",Agriculture; Atmospheric modeling; Laser radar; Solid modeling; Three-dimensional displays; Tools; Unmanned aerial vehicles,Crop Height and Plot Estimation for Phenotyping from Unmanned Aerial Vehicles using 3D LiDAR,,NO,,,YES,,NO,,,NO,,
S2399,2,Forward,conferencePaper,2020,"Dhami, Harnaik; Yu, Kevin; Xu, Tianshu; Zhu, Qian; Dhakal, Kshitiz; Friel, James; Li, Song; Tokekar, Pratap",2020 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS45743.2020.9341343,,"We present techniques to measure crop heights using a 3D Light Detection and Ranging (LiDAR) sensor mounted on an Unmanned Aerial Vehicle (UAV). Knowing the height of plants is crucial to monitor their overall health and growth cycles, especially for high-throughput plant phenotyping. We present a methodology for extracting plant heights from 3D LiDAR point clouds, specifically focusing on plot-based phenotyping environments. We also present a toolchain that can be used to create phenotyping farms for use in Gazebo simulations. The tool creates a randomized farm with realistic 3D plant and terrain models. We conducted a series of simulations and hardware experiments in controlled and natural settings. Our algorithm was able to estimate the plant heights in a field with 112 plots with a root mean square error (RMSE) of 6.1 cm. This is the first such dataset for 3D LiDAR from an airborne robot over a wheat field. The developed simulation toolchain, algorithmic implementation, and datasets can be found on our GitHub repository.1",Agriculture; Atmospheric modeling; Laser radar; Solid modeling; Three-dimensional displays; Tools; Unmanned aerial vehicles,Crop Height and Plot Estimation for Phenotyping from Unmanned Aerial Vehicles using 3D LiDAR,,NO,,,YES,,,,,NO,,
S2400,2,Forward,conferencePaper,2016,"de Roo, Martijn; Frasca, Paolo; Carloni, Raffaella",2016 IEEE International Conference on Robotics and Automation (ICRA),10.1109/ICRA.2016.7487253,,"This paper proposes a control architecture for a fleet of unmanned aerial vehicles that is responsible for handling the events that take place in a given area. The architecture guarantees that each event is handled by the required number of vehicles in the shortest time, while the rest of the fleet is optimally distributed in order to achieve an optimal coverage of the area. Each vehicle is steered to the specified location by a path planner that follows the shortest path while avoiding collisions. The control architecture has been validated both in simulations and in experiments on a fleet of three vehicles.",Computer architecture; Control systems; Convergence; Generators; Optimization; Unmanned aerial vehicles,Optimal event handling by multiple unmanned aerial vehicles,,NO,,,YES,,,,,NO,,
S2401,2,Forward,conferencePaper,2019,"Afanasov, Mikhail; Djordjevic, Alessandro; Lui, Feng; Mottola, Luca","Proceedings of the 17th Annual International Conference on Mobile Systems, Applications, and Services",10.1145/3307334.3326106,https://doi.org/10.1145/3307334.3326106,"FlyZone is a testbed architecture to experiment with aerial drone applications. Unlike most existing drone testbeds that focus on low-level mechanical control, FlyZone offers a high-level API and features geared towards experimenting with application-level functionality. These include the emulation of environment influences, such as wind, and the automatic monitoring of developer-provided safety constraints, for example, to mimic obstacles. We conceive novel solutions to achieve this functionality, including a hardware/software architecture that maximizes decoupling from the main application and a custom visual localization technique expressly designed for testbed operation. We deploy two instances of FlyZone and study performance and effectiveness. We demonstrate that we realistically emulate the environment influence with a positioning error bound by the size of the smallest drone we test, that our localization technique provides a root mean square error of 9.2cm, and that detection of violations to safety constraints happens with a 50ms worst-case latency. We also report on how FlyZone supported developing three real-world drone applications, and discuss a user study demonstrating the benefits of FlyZone compared to drone simulators.",dependability; drones; localization; testbeds,FlyZone: A Testbed for Experimenting with Aerial Drone Applications,,NO,,,YES,,,,,NO,,
S2402,2,Forward,conferencePaper,2018,"McFadyen, Aaron; Dayoub, Feras; Martin, Steve; Ford, Jason; Corke, Peter",2018 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS.2018.8593529,,"This paper presents the design and implementation of an assisted control technology for a small multirotor platform for aerial inspection of fixed energy infrastructure. Sensor placement is supported by a theoretical analysis of expected sensor performance and constrained platform behaviour to speed up implementation. The optical sensors provide relative position information between the platform and the asset, which enables human operator inputs to be autonomously adjusted to ensure safe separation. The assisted control approach is designed to reduced operator workload during close proximity inspection tasks, with collision avoidance and safe separation managed autonomously. The energy infrastructure includes single vertical wooden poles and crossarm with attached overhead wires. Simulated and real experimental results are provided.",Collision avoidance; Inspection; Measurement; Robot sensing systems; Task analysis; Unmanned aerial vehicles; Wires,Assisted Control for Semi-Autonomous Power Infrastructure Inspection Using Aerial Vehicles,,NO,,,YES,,,,,NO,,
S2403,2,Forward,conferencePaper,2019,"Bai, Yang; Asami, Koki; Svinin, Mikhail",2019 12th International Conference on Developments in eSystems Engineering (DeSE),10.1109/DeSE.2019.00016,,"This position paper deals with formalization of a practical scenario of using multiple aerial robots for monitoring an expanding area, which is a part of an operational framework and a global information system for real-time management of flood disasters caused by torrential rains. Two typical tasks of the optimal information coverage problem, represented by caging the disaster area and tracking its dynamic expansion are sketched. Three basic component of the minimal configuration of the control system-the image segmentation, Kalman filtering based tracking, and distributed formation control-are identified and reviewed.",Control systems; disaster monitoring; Drones; Kalman filters; multi-robot control; Robot sensing systems; Target tracking,Toward Cooperative Multi-robot Control for Detecting and Tracking an Expanding Flood Area,,NO,,,YES,,,,,NO,,
S2404,2,Forward,journalArticle,2018,"Akhtar, Adeel",,,https://uwspace.uwaterloo.ca/handle/10012/14006,"In this thesis we investigate the motion control problem for a class of vehicles C V , which includes  satellites, quadrotors, underwater vehicles, and tailsitters. Given a globally represented model of  C V , and a curve, the motion control problem entails following the curve using control inputs. In  this thesis the motion control problem is viewed under two settings, 1) as a local path following  problem, 2) as a geometric trajectory tracking problem. We provide solutions to both problems  by designing controllers based on the concept of feedback linearization.  In the local path following problem, the C V class of vehicles is represented by a local chart.  The problem is solved in a monolithic control setting, and the path that needs to be followed is  treated as a set to be stabilized. The nonlinear model under study is first dynamically extended  and then converted into a fully linear form through a coordinate transformation and smooth feed-  back. This approach achieves path invariance. We also design a fault tolerant local controller that  ensure path following and path invariance in the presence of a one rotor failure for a quadrotor.  The second major problem addressed is the geometric trajectory tracking problem, which is  treated in an inner-outer loop setting. Specifically, we design a controller class for the attitude dy-  namics of the C V class of vehicles. The novel notion of Lie algebra valued functions are defined  on the Special Orthogonal group SO(3), which constitutes a family of functions. This family  of functions induces a novel geometric controller class, which consists of almost globally stable  and locally stable controllers. This class is designed using the idea of feedback linearization, and  is proven to be asymptotically stable through a Lyapunov-like argument. This allows the system  to perform multiple flips. We also design geometric controllers for the position loop, which are  demonstrated to work with the attitude controller class through simulations with noisy sensor  data.",,Nonlinear and Geometric Controllers for Rigid Body Vehicles,,NO,,,YES,,,,,NO,,
S2405,2,Forward,journalArticle,2019,"Wei, Yusheng; Lin, Zongli",Unmanned Systems,10.1142/S2301385019500080,https://www.worldscientific.com/doi/abs/10.1142/S2301385019500080,"Vision-based tracking of a moving target is achieved in three steps: image processing, coordinate recovery and trajectory following. A testing platform containing two spawned quadrotors as the target and the tracker is developed on ROS, from which sequences of image frames are generated by an on-board camera while the target moves along a given path on the ground. A simple image processing algorithm is developed that achieves visual tracking and is robust to image blur and other background noises. Coordinate recovery recovers the original target trajectory as the desired path of the tracker in the real-world. A target following control law moves the tracker along the desired trajectory point-by-point. An analysis of the robustness of the tracking approach with respect to image blur and measurement noise of the tracker position is carried out to assure the applicability of the approach to real-world scenarios.",image processing; quadrotor; ROS; Tracking; vision-based tracking,Vision-based Tracking by a Quadrotor on ROS,,,,,YES,NO,,,,NO,,
S2406,2,Forward,thesis,2014,"Klaser, Rafael Luiz",,,http://www.teses.usp.br/teses/disponiveis/55/55134/tde-22092014-095209/,"Este trabalho apresenta um sistema de navegação autônoma para veículos terrestres com foco em ambientes não estruturados, tendo como principal meta aplicações em campos abertos com vegetação esparsa e em cenário agrícola. É aplicada visão computacional como sistema de percepção principal utilizando uma câmera estéreo em um veículo com modelo cinemático de Ackermann. A navegação é executada de forma deliberativa por um planejador baseado em malha de estados sobre um mapa de custos e localização por odometria e GPS. O mapa de custos é obtido através de um modelo de ocupação probabilístico desenvolvido fazendo uso de uma OctoMap. É descrito um modelo sensorial para atualizar esta OctoMap a partir da informação espacial proveniente de nuvens de pontos obtidas a partir do método de visão estéreo. Os pontos são segmentados e filtrados levando em consideração os ruídos inerentes da aquisição de imagens e do processo de cálculo de disparidade para obter a distância dos pontos. Os testes foram executados em ambiente de simulação, permitindo a replicação e repetição dos experimentos. A modelagem do veículo foi descrita para o simulador físico Gazebo de acordo com a plataforma real CaRINA I (veículo elétrico automatizado do LRM-ICMC/USP), levando-se em consideração o modelo cinemático e as limitações deste veículo. O desenvolvimento foi baseado no ROS (Robot Operating System) sendo utilizada a arquitetura básica de navegação deste framework a partir da customização dos seus componentes. Foi executada a validação do sistema no ambiente real em cenários com terreno irregular e obstáculos diversos. O sistema apresentou um desempenho satisfatório tendo em vista a utilização de uma abordagem baseada em apenas uma câmera estéreo. Nesta dissertação são apresentados os principais componentes de um sistema de navegação autônoma e as etapas necessárias para a sua concepção, assim como resultados de experimentos simulados e com o uso de um veículo autônomo real",,Navegação de veículos autônomos em ambientes externos não estruturados baseada em visão computacional,NO,,,,YES,,,,,NO,,
S2407,2,Forward,journalArticle,2021,"Albeaino, Gilles; Eiris, Ricardo; Gheisari, Masoud; Issa, Raja Raymond",Construction Innovation,10.1108/CI-03-2021-0049,https://doi.org/10.1108/CI-03-2021-0049,"Purpose This study aims to explore DroneSim, a virtual reality (VR)-based flight training simulator, as an alternative for real-world drone-mediated building inspection training. Design/methodology/approach Construction, engineering and management students were asked to pilot drones in the VR-based DroneSim space and perform common flight operations and inspection tasks within the spatiotemporal context of a building construction project. Another student group was also recruited and asked to perform a similar building inspection task in real world. The National Aeronautics and Space Administration (NASA)–Task Load Index (TLX) survey was used to assess students’ inflight workload demand under both Real and DroneSim conditions. Post-assessment questionnaires were also used to analyze students’ feedback regarding the usability and presence of DroneSim for drone building inspection training. Findings None of the NASA–TLX task load levels under Real and DroneSim conditions were highly rated by students, and both groups experienced comparable drone-building inspection training. Students perceived DroneSim positively and found the VR experience stimulating. Originality/value This study’s contribution is twofold: to better understand the development stages involved in the design of a VR-based drone flight training simulator, specifically for building inspection tasks; and to improve construction students’ drone operational and flight training skills by offering them the opportunity to enhance their drone navigation skills in a risk-free, repeatable yet realistic environment. Such contributions ultimately pave the way for better integration of drone-mediated building inspection training in construction education while meeting industry needs.",Construction building inspection; Drones; Unmanned aerial systems (UASs); Unmanned aerial vehicles (UAVs); Virtual reality and visualisation; VR-based drone flight simulator,DroneSim: a VR-based flight training simulator for drone-mediated building inspections,,NO,,,YES,,,,,NO,,
S2408,2,Forward,journalArticle,2015,"Nixon, G. a. N.",,,https://repository.tudelft.nl/islandora/object/uuid%3Ae08183cf-8fe9-4c9b-a6de-9d6b11130b20,"Most ground robots deployed in disaster areas have been of limited use mainly because of their reduced mobility in degraded environments. Unmanned Aerial Vehicles (UAVs) have considerable mobility benefits over ground robots, however they are currently only used for providing aerial views and often lack any manipulation capabilities, despite their proven ability to perform small force tasks. Research in ground robots has repeatedly stated that there is need for better human-machine interaction, while interface design for aerial robots is an unexplored area where generally primitive interfaces are used. The objective of this study is to understand what type of interface design is most beneficial for telemanipulation with a UAV. In a human factors experiment, subjects (N = 14) were instructed to open and flip a safety switch in a virtual reality environment using a bumper surrounding the UAV and to do so as fast and careful as possible. Five different interface designs were compared in this study. First, a 3 degrees-of-freedom (DoF) manipulator with position control was compared to the typical baseline interface: a gamepad with rate control. Second, the effect of having haptic feedback on the manipulator was tested. And finally performance on both the manipulator, with and without haptic feedback, was compared to having a fully actuated, grounded slave, with and without haptic feedback. Results show that a 3-DoF manipulator with position control substantially outperforms a gamepad with rate control. Haptic feedback had no significant influence on the task execution of the operator. Using a grounded slave was significantly more effective than using an aerial slave though there was no relative effect of haptic feedback between the grounded and the aerial slave. This study has shown that interface design can have a significant effect on performing remote manipulation tasks with UAVs.",,Effective Human-Machine Interfaces for Aerial Telemanipulation,,NO,,,YES,,,,,NO,,
S2409,2,Forward,conferencePaper,2020,"Palomino-Suarez, Daniel; Pérez-Ruiz, Alexander",Advances in Automation and Robotics Research,10.1007/978-3-030-40309-6_3,,"By 2050, growth population worldwide will demand a great amount of resources, specially in agricultural sector. In order to supply such resources, farmers will need advance tools and techniques to improve the efficiency along all farming processes e.g. precision farming, Unmanned Vehicles Systems (UVS). This paper shows the simulation results of an algorithm developed to perform the path planning process for Unmanned Aerial Vehicles (UAVs) autonomously, in agricultural environments. The aim of this project is to automate such process and provide the appropriate conditions to execute further supervision activities. The algorithm takes into account photogrammetric parameters such as the ground sample distance (GSD) and the overlap between photos. Image processing techniques are implemented to identify the crop boundary and rows’ orientation. The project was developed using open-source tools such as OpenCV, ROS and Gazebo. The paths generated by this algorithm allow the UAV not only to go across the identified crop following the row orientation, but also to guarantee the desired resolution, specified by the GSD.",Image processing; Path planning; Photogrammetry; Precision agriculture; ROS; Unmanned Aerial Vehicles,Towards Automatic UAV Path Planning in Agriculture Oversight Activities,,NO,,,YES,,,,,NO,,
S2410,2,Forward,conferencePaper,2019,"Ferreira, Leonardo; Câmara, Álvaro; Silva, Daniel Castro",New Knowledge in Information Systems and Technologies,10.1007/978-3-030-16184-2_2,,"Unmanned Aerial Vehicles or UAVs have been growing at a rapid pace due to the huge range of operations they can perform on the field. These vehicles are currently present in military applications, agricultural, rescue missions or telecommunications, among many other fields. However, some of the existing UAV solutions in the market are quite costly, not only monetarily but also in the complexity they entail.",Autonomous vehicles; Quadcopter; Simulation; Unmanned Aerial System (UAS); Unmanned Aerial Vehicles (UAVs),Construction and Integration of a Quadcopter in a Simulation Platform for Multi-vehicle Missions,,NO,,,YES,,,,,NO,,
S2411,2,Forward,conferencePaper,2019,"Nieto-Hernández, L.; Gómez-Casasola, Angel A.; Rodríguez-Cortés, H.",2019 International Conference on Unmanned Aircraft Systems (ICUAS),10.1109/ICUAS.2019.8797951,,"Monocular Simultaneous Localization and Mapping (SLAM) provides a position estimation with an unknown scale factor. The scale factor depends on the initial conditions of the SLAM algorithm so that it is always different. This paper presents a scale factor estimator based on the Immersion and Invariance technique for quadrotor autonomous navigation. The estimator assumes that the quadrotor's linear velocity, attitude and the applied total thrust are measurable. The estimator performance is validated using numerical simulations and experiments.",Cameras; Estimation error; Mathematical model; Numerical models; Numerical simulation; Simultaneous localization and mapping,Monocular SLAM Position Scale Estimation for Quadrotor Autonomous Navigation,,NO,,,YES,,,,,NO,,
S2412,2,Forward,conferencePaper,2019,"Bandala, Argel A.; Maningo, Jose Martin Z.; Sybingco, Edwin; Vicerra, Ryan Rhay P.; Dadios, Elmer P.; Guillarte, Joshua Daniel D.; Salting, Julius Oigimer P.; Santos, Ma. Joyce Anne S.; Sarmiento, Basil Anton E.",2019 7th International Conference on Robot Intelligence Technology and Applications (RiTA),10.1109/RITAPP.2019.8932800,,"This paper presents an interactive drone game which is controlled by bare hand gestures. A typical handheld or gamepad remote controller bids inconvenience due to unnatural hand movements of the pilot. This study removes the use of handheld controllers and instead employ a contact less hand gesture device for drone control. Several applications can be explored like task designation in a multi-drone system for construction, inspection and relief operations. The drone is controlled using a PID controller which maintains a given trajectory which is determined by the hand gesture of the controller. The platform chosen by this research is an interactive game of two drones which fire IR lasers. The objective of the game is to hit the opponent with the laser emission. This platform showcases the accurateness and reliability of the hand gesture control system by controlling a real time drone application. The accuracy and precision of the movements based on the gesture of the pilot will be tested through simulations and actual implementations.",Control systems; Drones; Games; Mathematical model; Robot kinematics; Task analysis,Development of Leap Motion Capture Based - Hand Gesture Controlled Interactive Quadrotor Drone Game,,NO,,,YES,,,,,NO,,
S2413,2,Forward,journalArticle,2018,"Viña, Carlos; Morin, Pascal",International Journal of Micro Air Vehicles,10.1177/1756829317745316,https://doi.org/10.1177/1756829317745316,"Automation of inspection tasks is crucial for the development of the power industry, where micro air vehicles have shown a great potential. Self-localization in this context remains a key issue and is the main subject of this work. This article presents a methodology to obtain complete three-dimensional local pose estimates in electric tower inspection tasks with micro air vehicles, using an on-board sensor set-up consisting of a two-dimensional light detection and ranging, a barometer sensor and an inertial measurement unit. First, we present a method to track the tower’s cross-sections in the laser scans and give insights on how this can be used to model electric towers. Then, we show how the popular iterative closest point algorithm, that is typically limited to indoor navigation, can be adapted to this scenario and propose two different implementations to retrieve pose information. This is complemented with attitude estimates from the inertial measurement unit measurements, based on a gain-scheduled non-linear observer formulation. An altitude observer to compensate for barometer drift is also presented. Finally, we address velocity estimation with views to feedback position control. Validations based on simulations and experimental data are presented.",airborne laser scanning; barometer; inertial measurement unit; iterative closest point; Micro air vehicle; state estimation; two-dimensional light detection and ranging,Micro air vehicle local pose estimation with a two-dimensional laser scanner: A case study for electric tower inspection,,NO,,,YES,,,,,NO,,
S2414,2,Forward,journalArticle,2014,"Cerón, Alexander; Mondragón, Iván; Prieto, Flavio",Research in Computing Science,10.13053/rcs-71-1-3,http://rcs.cic.ipn.mx/2014_71/Research%20on%20Power%20Line%20Inspection%20by%20Visual%20Based%20Navigation.pdf,"In this paper, the advances obtained through a research process based on the development of a visual based navigation model for an UAV (Unmanned aerial vehicle) with application in power line tracking for inspection are presented. The main contribution expected is the method for line tracking through UAV navigation. In this process, a new line detection method based on a computer graphics process was created. The method is validated with synthetic and real images. Additionally, a virtual environment for real time simulation and line detection was created. The results obtained in the line detection process are promising.",,Research on Power Line Inspection by Visual Based Navigation,,NO,,,YES,,,,,NO,,
S2415,2,Forward,conferencePaper,2017,"Riestock, Maik; Engelhardt, Frank; Zug, Sebastian; Hochgeschwender, Nico",2017 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS.2017.8206179,,"The successes of teleoperation scenarios for mobile robots depends on a stable and reliable communication link. The environment information collected by the robot - represented by 2D or 3D images - has to be provided with a high resolution and a low delay to ensure a fast and precise system response. But in most realistic applications, the communication parameters fluctuate strongly over time. It is necessary to monitor the communication link continuously to react in case of reduced bandwidth and increased delay. But which environment information and correspondingly which bandwidth is necessary to control a robot safely? Due to a missing reliable rule set we investigated this question for a UAV scenario based on two different environment representations (camera images, gridmaps). We designed a simulator based study and evaluated the capability of the participants to control a robot in case of delayed or coarsely rasterized information. Although our study involved only non-experts, we found some interesting first results. While the performance of our participants depends strongly on the delay, it is nearly independent on the image resolution, which suggests downsampling as a valid response for bandwidth decrease. We also found that participants generally struggle with using grid map for controlling the robot. However, this type of interfaces requires far less bandwidth than images. They also excel in situations with higher delays, which makes them the tool of choice when there are really bad channel conditions.",Bandwidth; Cameras; Delays; Robot sensing systems; Three-dimensional displays,User study on remotely controlled UAVs with focus on interfaces and data link quality,,NO,,,YES,,,,,NO,,
S2416,2,Forward,book,2020,"Hsieh, Chiao; Sibai, Hussein; Taylor, Hebron; Mitra, Sayan",,,,"Unmanned Aircraft Systems (UAS) are being increasingly used in delivery, infrastructure surveillance, fire-fighting, and agriculture. According to the Federal Aviation Administration (FAA), the number of active small commercial unmanned aircraft is going to grow from 385K in 2019 to 828K by 2024. UAS traffic management (UTM) system for low-altitude airspace is therefore immediately necessary for its safe and high-density use. In this paper, we propose the first formalization of FAA's Concept of Operations for UTM for building and analyzing traffic management protocols and systems. We formalize FAA's notion of operation volumes (OVs) that express aircraft intent in terms of 4D blocks of airspace and associated real-time deadlines. We present a prototype coordination protocol using OVs, involving participating aircraft and an airspace manager. We formally analyze the safe separation and liveness properties of the protocol. Our analyses showcase how the de-conflicting and liveness of the system can be proven assuming each aircraft conforms to the deadlines specified by OVs. Through extensive simulations, we evaluate the performance of the protocol in terms of workload and response delays. Our experiments show that the workload on the airspace manager and the response time of each aircraft grow linearly with respect to the number of aircraft. The experiments also delineate the trade-off between performance, workload, and violation rate across different strategies for generating OVs. Lastly, we implement a UTM violation detection and resolution mechanism on top of our protocol. We include a simple fault injection technique that introduces failures with different probabilities. We demonstrate how to use it to empirically evaluate the impact of aircraft failure on the safety of surrounding aircraft, and how the performance of the airspace manager changes under different failure probabilities.",,"Unmanned air-traffic management (UTM): Formalization, a prototype implementation, and performance evaluation",NO,,,,YES,,,,,NO,,
S2417,2,Forward,conferencePaper,2020,"Zenkin, Artemii; Berman, Ivan; Pachkouski, Kanstantsin; Pantiukhin, Igor; Rzhevskiy, Vyacheslav",2020 26th Conference of Open Innovations Association (FRUCT),10.23919/FRUCT48808.2020.9087391,,"The article describe a simulation of the drone designed to monitor a large area. Three scenarios are considered: detection of the fire source in the forest, detection of intruders in the forbidden territory and detection 0 their cars. Open source software is used for the simulation: robotic simulator Gazebo, framework for robotic applications Robot Operating System, communication protocol for small unmanned vehicles MAVLink and autopilot system PX4. Iris+ quadcopter is chosen as a prototype for the simulation, its mathematical model is presented as well as the vision model based on the PX4FLOW monocular camera and optical flow. Algorithms for detecting objects of interest are described. As a result, the successful tests of simulation are presented, in which the classification and localization accuracy is tested.",,Quadcopter Simulation Model for Research of Monitoring Tasks,,NO,,,YES,,,,,NO,,
S2418,2,Forward,journalArticle,2018,"Ivanovic, Antun; Polic, Marsela; Salah, Omar; Orsag, Matko; Bogdan, Stjepan",IFAC-PapersOnLine,10.1016/j.ifacol.2018.09.449,https://www.sciencedirect.com/science/article/pii/S2405896318321384,"This paper addresses the problem of retrieving an autonomous underwater vehicle (AUV) with an unmanned aerial vehicle (UAV). The design of the compliant net that naturally adapts to the payload morphology is proposed as a retrieval tool. We constructed the proposed compliant net and conducted experiments with an underwater vehicle model as payload. Furthermore, mathematical model of a system comprised of the UAV and the payload is presented and a mid-ranging controller is utilized for such a system. We also present simulation results and analyze the stability of the UAV with the cable attached payload.",Autonomous underwater vehicles; Marine systems; Mechanical design; Soft robotics; Unmanned aerial vehicles,Compliant net for AUV retrieval using a UAV,,NO,,,YES,,,,,NO,,
S2419,2,Forward,journalArticle,2017,"Sharifi, Mostafa",,10.26021/1732,https://ir.canterbury.ac.nz/handle/10092/14660,"New Zealand’s economy relies on primary production to a great extent, where use of the technological  advances can have a significant impact on the productivity. Robotics and automation  can play a key role in increasing productivity in primary sector, leading to a boost in national  economy. This thesis investigates novel methodologies for design, control, and navigation  of a mobile robotic platform, aimed for field service applications, specifically in agricultural  environments such as orchards to automate the agricultural tasks.    The design process of this robotic platform as a non-holonomic omnidirectional mobile  robot, includes an innovative integrated application of CAD, CAM, CAE, and RP for development  and manufacturing of the platform. Robot Operating System (ROS) is employed for  the optimum embedded software system design and development to enable control, sensing,  and navigation of the platform.    3D modelling and simulation of the robotic system is performed through interfacing ROS  and Gazebo simulator, aiming for off-line programming, optimal control system design, and  system performance analysis. Gazebo simulator provides 3D simulation of the robotic system,  sensors, and control interfaces. It also enables simulation of the world environment, allowing  the simulated robot to operate in a modelled environment. The model based controller for kinematic  control of the non-holonomic omnidirectional platform is tested and validated through  experimental results obtained from the simulated and the physical robot.    The challenges of the kinematic model based controller including the mathematical and  kinematic singularities are discussed and the solution to enable an optimal kinematic model based controller is presented. The kinematic singularity associated with the non-holonomic  omnidirectional robots is solved using a novel fuzzy logic based approach. The proposed  approach is successfully validated and tested through the simulation and experimental results.    Development of a reliable localization system is aimed to enable navigation of the platform  in GPS-denied environments such as orchards. For this aim, stereo visual odometry (SVO) is  considered as the core of the non-GPS localization system. Challenges of SVO are introduced  and the SVO accumulative drift is considered as the main challenge to overcome. SVO drift is  identified in form of rotational and translational drift. Sensor fusion is employed to improve  the SVO rotational drift through the integration of IMU and SVO.    A novel machine learning approach is proposed to improve the SVO translational drift  using Neural-Fuzzy system and RBF neural network. The machine learning system is formulated  as a drift estimator for each image frame, then correction is applied at that frame to avoid  the accumulation of the drift over time. The experimental results and analyses are presented  to validate the effectiveness of the methodology in improving the SVO accuracy.    An enhanced SVO is aimed through combination of sensor fusion and machine learning  methods to improve the SVO rotational and translational drifts. Furthermore, to achieve a  robust non-GPS localization system for the platform, sensor fusion of the wheel odometry  and the enhanced SVO is performed to increase the accuracy of the overall system, as well as  the robustness of the non-GPS localization system. The experimental results and analyses are  conducted to support the methodology.",,Enhanced vision-based localization and control for navigation of non-holonomic omnidirectional mobile robots in GPS-denied environments,,NO,,,YES,,,,,NO,,
S2420,2,Forward,conferencePaper,2018,"Priyasad, Darshana; Jayasanka, Yohan; Udayanath, Hareen; Jayawardhana, Danuja; Sooriyaarachchi, Sulochana; Gamage, Chandana; Kottege, Navinda",2018 Moratuwa Engineering Research Conference (MERCon),10.1109/MERCon.2018.8421954,,"Autonomous navigation is highly important in robotics, especially when it comes to the robotic applications in disaster management etc. There are many algorithms to implement autonomous navigation and most of them are dependent on prior knowledge of the environment and apriori maps. Although they are effective in some scenarios, these algorithms fail to perform when the environment has been subjected to changes that might invalidate the prior map. This paper presents a point cloud based algorithm which can be used in a situation where the prior knowledge of the environment is highly inaccurate. The proposed algorithm uses depth images to get a local map, which it expands by searching for uncharted areas picking the next best location to explore using a breadth first approach given a set of constraints. The proposed algorithm exploits the maps in the 3D space allowing the navigation system to perform effectively in uneven terrains and use inclined planes for its advantage.",3D Mapping; Autonomous Area Exploration; Autonomous robots; Collision avoidance; Navigation; Navigation Algorithm; Path planning; Path Planning; Point Cloud; Robot sensing systems; Three-dimensional displays,Point Cloud Based Autonomous Area Exploration Algorithm,,NO,,,YES,,,,,NO,,
S2421,2,Forward,journalArticle,2018,"Brothers, Robert",,,,"This paper provides a comparison of the Gazebo and ANVEL simulators and analyzes the aspects of vehicle modeling fidelity that are critical to the design of unmanned ground vehicle (UGV) control and estimation algorithms. The robotic simulators Gazebo [1], from the Open Source Robotics Foundation (OSRF), and Autonomous Navigation Virtual Environment Laboratory (ANVEL) [2], from Quantum Signal, are two popular new tools that are being used extensively in academic, commercial, and military development of perception, navigation, and control algorithms for UGVs. Despite the similarities between Gazebo and ANVEL there has been no direct comparison between the two simulators with respect to their validity as vehicle dynamics simulators.",,A COMPARISON OF VEHICLE HANDLING FIDELITY BETWEEN THE GAZEBO AND ANVEL SIMULATORS,,NO,,,YES,,,,,NO,,
S2422,2,Forward,journalArticle,2021,"Sadeghzadeh-Nokhodberiz, Nargess; Can, Aydin; Stolkin, Rustam; Montazeri, Allahyar",IEEE Access,10.1109/ACCESS.2021.3106864,,"In this paper, the problem of simultaneous localization and mapping (SLAM) using a modified Rao Blackwellized Particle Filter (RBPF) (a modified FastSLAM) is developed for a quadcopter system. It is intended to overcome the problem of inaccurate localization and mapping caused by inertial sensory faulty measurements (due to biases, drifts and noises) injected in the kinematics (odometery based) which is commonly used as a motion model in FastSLAM approaches. In this paper, the quadcopter's dynamics with augmented bias and drift models is employed to eliminate these faults from the localization and mapping process. A modified FastSLAM is then developed in which both Kalman Filter (KF) and Extended Kalman Filter (EKF) algorithms are embedded in a PF with modified particles weights to estimate biases, drifts and landmark locations, respectively. In order to make the SLAM process robust to model mismatches due to parameter uncertainties in the dynamics, measurements are incorporated in the PF and in the particle generation process. This leads to a cascaded two-stage modified FastSLAM in which the extended FastSLAM 1.0 (to include dynamics and sensory faults) is employed in first stage and the results are used in second stage in which probabilistic inverse sensor models are incorporated in the particle generation process of the PF. The efficiency of the proposed approach is demonstrated through a co-simulation between MATLAB-2019b and Gazebo in the robotic operating system (ROS) in which the quadcopter model is simulated in Gazebo in ROS using a modified version of the Hector quadcopter ROS package. The collected pointcloud data using LiDAR is then utilised for feature extraction in the Gazebo. The simulation environment used to this aim is validated based on experimental data.",Atmospheric measurements; Cameras; FastSLAM; inertial sensors; Kinematics; Particle measurements; Rao Blackwellized particle filtering (RBPF); robot operating system (ROS); Robots; sensor calibration; Simultaneous localization and mapping; simultaneous localization and mapping (SLAM); Solid modeling; Unmanned aerial vehicle (UAV),Dynamics-Based Modified Fast Simultaneous Localization and Mapping for Unmanned Aerial Vehicles With Joint Inertial Sensor Bias and Drift Estimation,,NO,,,YES,,,,,NO,,
S2423,2,Forward,journalArticle,2017,"Николаевич, Казьмин Вячеслав",Известия Южного федерального университета. Технические науки,,https://cyberleninka.ru/article/n/veroyatnostnyy-podhod-k-resheniyu-zadachi-slam-v-tryohmernom-prostranstve,"Approach for solving central in autonomous robotics SLAM problem for moving robotic objects using data of onboard sensors, based on Monte Carlo localization, proposed and considered. In this method the particle filter is used to recursively construct posterior conditional probability density function from previous robot’s state and sensors measurement. A feature of the implementation of the method is the use of the detected in rangefinder data planes for measuring the robot position relative to the map, by comparing them with those already in the database and solve a system of equations constructed on the parameters of found pairs corresponding to each other plane. When navigating, in addition to the space geometry, brightness coloring of segmented planes is used in order to improve the accuracy and resolution of geometrically uncertain situations. After determining the position of the robot, founded in the frame planes are entered into the database and averaged with the existing information, and they are used for navigation in the subsequent cycles of the algorithm. The results of the work of created algorithms and software, solving the task in the rate of motion of the robot in the real world, are shown; errors and performance are estimated. Based on the analysis of theoretical and experimental studies it concluded that the proposed approach provides a transition from large amounts of original range-finder data to a compact description of an environment and can effectively solve the problem of autonomous motion control of mobile robots and unmanned aerial vehicles.",,Вероятностный подход к решению задачи SLAM в трёхмерном пространстве,,,,NO,YES,,,,,NO,,
S2424,2,Forward,journalArticle,,"Graber, Thorsten; Kohlbrecher, Stefan; Meyer, Johannes; Petersen, Karen",,,,"This paper describes the approach used by Team Hector Darmstadt for participation in the 2012 RoboCup Rescue League competition. Participating in the RoboCup Rescue competition since 2009, the members of Team Hector Darmstadt focus on exploration of disaster sites using autonomous Unmanned Ground Vehicles (UGVs). The team has been established as part of a PhD program funded by the German Research Foundation at TU Darmstadt and combines expertise from Computer Science and Mechanical Engineering. We give an overview of the complete system used to solve the problem of reliably ﬁnding victims in harsh USAR environments. This includes hardware as well as software solutions and diverse topics like locomotion, SLAM, pose estimation, human robot interaction and victim detection. As a contribution to the RoboCup Rescue community, major parts of the used software have been released and documented as open source software for ROS.",,RoboCupRescue 2012 - Robot League Team,,,,,NO,,,,,NO,,
S2425,2,Forward,thesis,2018,"Euler, Juliane",,,https://tuprints.ulb.tu-darmstadt.de/7163/,"In recent years, there has been an immense improvement of methods and technology for Unmanned Aerial Vehicles (UAVs). By now, a steadily growing number of affordable platforms, as well as accurate onboard sensors, are available, which enables the use of UAVs as a remote sensing tool in various monitoring, surveillance, and disaster response tasks. This thesis deals with the challenging application scenario of monitoring atmospheric dispersion processes using multiple sensor-equipped UAVs. The idea is to enable the UAVs to autonomously move through the domain such that the utility of measurements taken along the way is maximized and cooperation among the team members is exploited. A three-part solution to this problem is developed. For cooperative control of multiple vehicles, a decentralized model-predictive control approach is proposed that is based on a mixed-integer linear system description. As data-driven adaptive sensing strategy, a sequential optimum design approach for the computation of vehicle-specific sensing trajectories with maximized information value is presented. In the last step, both approaches are combined to form a decentralized dynamic data-driven cooperative feedback control scheme. During development and implementation of all parts, particular attention is paid to efficiency and adaptability in order for the proposed scheme to be applied decentralized in possibly changing heterogeneous vehicle team constellations. Though atmospheric dispersion monitoring by UAVs serves as the motivating use case throughout this thesis, the developed solution is not limited to this specific scenario. In fact, it can easily be modified to deal with other kinds of unmanned vehicles or dynamic processes, and can, therefore, be applied to many other related problem types. Applicability, versatility, and effectiveness of the approach are successfully evaluated based on physics simulations of representative multi-objective monitoring scenarios.",,Optimal Cooperative Control of UAVs for Dynamic Data-Driven Monitoring Tasks,NO,,,,YES,,,,,NO,,
S2426,2,Forward,conferencePaper,2017,"Zhu, Jiangcheng; Xu, Chao",2017 Chinese Automation Congress (CAC),10.1109/CAC.2017.8244165,,"Aerial Robot is a new category of intelligent flying machines, which combines smart aerial platform with powerful sensoring and computation capability. Due to the high uncertainty and risk exiting in flight test, simulation is important in the development process. In this paper, we propose a simulation platform with dynamic scenario, based on the Robot Operating System (ROS) and Gazebo. Multiple moving targets and obstacles are installed, while vision and laser sensor are activated as navigation setup.",Acceleration; Hardware; Land vehicles; Mathematical model; Robot sensing systems; Unmanned aerial vehicles; Vehicle dynamics,A comprehensive simulation testbench for aerial robot in dynamic scenario using gazebo-ros,,NO,,,YES,,,,,NO,,
S2427,2,Forward,book,2018,"Rencüzoğulları, Ender; Kılıç, Ali; Kapucu, Sadettin",,,,"Unmanned aerial vehicle (UAV) systems are flexible platforms for many real-time applications in civil and military operations such as surveillance, autonomous navigation and precision agriculture. Their most significant benefit is the ability to easily operate in places where it would turn out more dangerous and time-consuming for human to work. Therefore, system architecture of a UAV should be meticulously designed for particular tasks. The scope of this work is the design consideration of a UAV platform that is produced, with a 3D printer, to work autonomously in wide variety of areas. Also, the software system is specifically built in regard to deep-learningoriented applications. In this purpose, entire system is equipped with off-the-shelf hardware which are actuators, sensing elements, flight controller, GPS, camera, companion computer and complementary components. Details to hardware, software and production of a UAV are explained. A multipurpose and an adaptive system are provided for smart applications by means of open source software. Furthermore, stable flight without oscillations is achieved since structure of the UAV is dynamically well-designed for operating in six degrees of freedom. Experiments about autonomous flight, in addition to real world, in a simulation program for safety reasons and quick monitoring purpose are carried out. This paper presents design details, hardware integration and production details of a UAV system for autonomous flight applications.",,Design Consideration: UAV System Architecture for Smart Applications,NO,,,,YES,,,,,NO,,
S2428,2,Forward,journalArticle,2021,"Baheti, Shrey; Badiger, Shreyas; Simmhan, Yogesh",ACM Transactions on Cyber-Physical Systems,10.1145/3446346,https://doi.org/10.1145/3446346,"Internet of Things (IoT) deployments have been growing manifold, encompassing sensors, networks, edge, fog, and cloud resources. Despite the intense interest from researchers and practitioners, most do not have access to large-scale IoT testbeds for validation. Simulation environments that allow analytical modeling are a poor substitute for evaluating software platforms or application workloads in realistic computing environments. Here, we propose a virtual environment for validating Internet of Things at large scales (VIoLET), an emulator for defining and launching large-scale IoT deployments within cloud VMs. It allows users to declaratively specify container-based compute resources that match the performance of native IoT compute devices using Docker. These can be inter-connected by complex topologies on which bandwidth and latency rules are enforced. Users can configure synthetic sensors for data generation as well. We also incorporate models for CPU resource dynamism, and for failure and recovery of the underlying devices. We offer a detailed comparison of VIoLET’s compute and network performance between the virtual and physical deployments, evaluate its scaling with deployments with up to 1, 000 devices and 4, 000 device-cores, and validate its ability to model resource dynamism. Our extensive experiments show that the performance of the virtual IoT environment accurately matches the expected behavior, with deviations levels within what is seen in actual physical devices. It also scales to 1, 000s of devices and at a modest cloud computing costs of under 0.15% of the actual hardware cost, per hour of use, with minimal management effort. This IoT emulation environment fills an essential gap between IoT simulators and real deployments.",cloud computing; distributed systems; edge computing; emulation; fog computing; Internet of Things; scalability; virtual environment,VIoLET: An Emulation Environment for Validating IoT Deployments at Large Scales,,NO,,,YES,,,,,NO,,
S2429,2,Forward,conferencePaper,2021,"Hsieh, Chiao; Sibai, Hussein; Taylor, Hebron; Ni, Yifeng; Mitra, Sayan",2021 IEEE International Intelligent Transportation Systems Conference (ITSC),10.1109/ITSC48978.2021.9564492,,"The key concept for safe and efficient traffic management for Unmanned Aircraft Systems (UAS) is the notion of operation volume (OV). An OV is a 4-dimensional block of airspace and time, which can express an aircraft's intent, and can be used for planning, de-confliction, and traffic management. While there are several high-level simulators for UAS Traffic Management (UTM), we are lacking a framework for creating, manipulating, and reasoning about OVs for heterogeneous air vehicles. In this paper, we address this and present SkyTrakx-a software toolkit for simulation and verification of UTM scenarios based on OVs. First, we illustrate a use case of SkyTrakx by presenting a specific air traffic coordination protocol. This protocol communicates OVs between participating aircraft and an airspace manager for traffic routing. We show how existing formal verification tools, Dafny and Dione, can assist in automatically checking key properties of the protocol. Second, we show how the OVs can be computed for heterogeneous air vehicles like quadcopters and fixed-wing aircraft using another verification technique, namely reachability analysis. Finally, we show that SkyTrakx can be used to simulate complex scenarios involving heterogeneous vehicles, for testing and performance evaluation in terms of workload and response delays analysis. Our experiments delineate the trade-off between performance and workload across different strategies for generating OVs.",Air traffic control; Atmospheric modeling; Planning; Protocols; Routing; Software; Tools,SkyTrakx: A Toolkit for Simulation and Verification of Unmanned Air-Traffic Management Systems,,NO,,,YES,,,,,NO,,
S2430,2,Forward,conferencePaper,2020,"Karras, George C.; Bechlioulis, Charalampos P.; Fourlas, George K.; Kyriakopoulos, Kostas J.",2020 International Conference on Unmanned Aircraft Systems (ICUAS),10.1109/ICUAS48674.2020.9213887,,"In this paper, we present a distance-based formation control strategy for multiple multi-rotor aerial vehicles participating in a target interception mission. The target moves arbitrarily, following a smooth 3D trajectory, while the intercepting vehicles aim at establishing a predefined enclosing formation around it, by attaining specific distances among them and simultaneously avoiding inter-agent collisions and connectivity breaks. More specifically, we propose a decentralized motion control protocol based on the prescribed performance control notion, which is of low computational complexity and is able to achieve robust and accurate formation establishment. Each agent requires local and relative state feedback, which can be acquired by a common onboard sensor suite without necessitating for explicit network communication. A realistic simulation study with one target and four multi-rotor interceptors was conducted to prove the efficacy of the proposed strategy.",Drag; Multi-agent systems; Robustness; Task analysis; Torque; Trajectory; Vehicle dynamics,Formation Control and Target Interception for Multiple Multi-rotor Aerial Vehicles,,NO,,,YES,,,,,NO,,
S2431,2,Forward,conferencePaper,2019,"Deeb, A.; Seto, M. L.; Pan, Y.J.",2019 19th International Conference on Advanced Robotics (ICAR),10.1109/ICAR46387.2019.8981632,,"Navigation in dynamic environments is a challenge for autonomous vehicles operating without prior maps or global position references. This poses high risk to vehicles that perform scientific studies and monitoring missions in marine Arctic environments characterized by slowly moving sea ice with few truly static landmarks. Whereas mature simultaneous localization and mapping (SLAM) approaches assume a static environment, this work extends pose graph SLAM to spatiotemporally evolving environments. A novel model-based dynamic factor is proposed to capture a landmark's state transition model - whether the state be kinematic, appearance or otherwise. The structure of the state transition model is assumed to be known a priori, while the parameters are estimated on-line. Expectation maximization is used to avoid adding variables to the graph. Proof-of-concept results are shown in small- and medium-scale simulation, and small-scale laboratory environments for a small quadrotor. Preliminary laboratory validation results shows the effect of mechanical limitations of the quadrotor platform and increased uncertainties associated with the model-based dynamic factors on the SLAM estimate. Simulation results are encouraging for the application of model-based dynamic factors to dynamic landmarks with a constant-velocity kinematic model.",,Model-based Dynamic Pose Graph SLAM in Unstructured Dynamic Environments,,NO,,,YES,,,,,NO,,
S2432,2,Forward,journalArticle,2017,"Durand, Jean Guillaume Dominique Sebastien",,,https://smartech.gatech.edu/handle/1853/58285,"The exponential growth experienced by the robotics sector over the past decade has fostered the proliferation of new architectures. Optimized for specific missions, these platforms are in most cases limited by their embarked computational power and a lack of full situational awareness. More robust, flexible, scalable, and inspired by nature, group robotics represent an interesting approach to overcome some limitations of these single agents and take advantage of the heterogeneity of the current robotics fleet. Their essence lies in accomplishing more complex synergistic behaviors through diversity, simple rules, and local interactions. However, the design of robotic groups is complex as decision-makers have to optimize the group operation as well as the performance of each individual unit, for the group performance. In particular, key questions arise to know whether resources should be allocated to the characteristics of the group, or to the individual capabilities of its agents in order to meet the established requirements. Current methods of swarm engineering tend to perform sequential optimization of the microscopic level (the agents) and then the macroscopic level (the group), which results in suboptimal architectures. In this context, efficiently comparing two different groups or quantifying the superiority of a group versus a single-robot design may prove impossible. Same goes of the determination of an optimal architecture for a given mission. With a special emphasis on aerial vehicles, the present research proposes to establish a methodology to achieve microscopic/macroscopic configuration tradeoffs in the design of cooperative multi-robot systems. The resulting product is the MASDeM: Multi-Agent Systems Design Methodology. A novel multi-level multi-architecture morphological approach is first introduced to facilitate design space exploration, and a mesoscopic level simulation-based design method is used to bridge the gap between microscopic and macroscopic levels. Using these first blocks, an innovative optimization technique is suggested based on two interconnected loops which differs from the classical sequential approach presently used by the research community. Results of this research show that simultaneous optimization can have clear benefits if applied to the design of multi-robot systems and on particular cases, average improvements of 16 percent were observed on the main performance metric. The proposed optimizer proves to be a key enabler for fully heterogeneous swarms, a capability which is not possible in the current paradigm. Moreover, the optimization algorithm was efficiently designed and exhibits a speedup of at least 50 percent when compared to current techniques. Finally, the exploration of the design space is effectively carried out with a combination of morphological reduction, morphological tree representation, and mesoscopic modeling. Indeed, applied to multi-robot systems, such models prove being several times faster than usual simulation approaches while remaining in the same range of accuracy.",,A methodology to achieve microscopic/macroscopic configuration tradeoffs in cooperative multi-robot systems design,,NO,,,YES,,,,,NO,,
S2433,2,Forward,conferencePaper,2016,"Bender, Daniel; Cremers, Daniel; Koch, Wolfgang",2016 IEEE International Conference on Multisensor Fusion and Integration for Intelligent Systems (MFI),10.1109/MFI.2016.7849466,,"In this paper, we present an innovative calibration procedure to determine the angle misalignments, also known as boresight, between the coordinate systems of an inertial navigation system (INS) and a camera. All currently known approaches integrate positional information from the INS in the optimization process. Thereby, the position errors in the range of a few meters of most INS devices negatively influence the accuracy of the boresight estimation in state-of-the-art calibration methods. By using line instead of classical point features within the calibration process, we are able to perform the optimization without positional information and avoid being affected by the corresponding noisy data. This can improve the calibration results for systems of all accuracy levels. For the first time, a reliable calibration for systems with poor positional estimations is possible. The presented approach can be applied to images observing a checkerboard, which allows the calibration of the intrinsic camera parameters and boresight misalignment angles from the same dataset. We confirm the high performance of the presented procedure by evaluating simulated and real-world experiments. The achieved results show the capability to reduce the boresight errors to small sub-degree values.",Calibration; Cameras; Estimation; Global Positioning System; Optimization; Position measurement; Robot sensing systems,A position free boresight calibration for INS-camera systems,,NO,,,YES,,,,,NO,,
S2434,2,Forward,conferencePaper,2020,"Bai, Yang; Svinin, Mikhail; Magid, Evgeni",2020 59th Annual Conference of the Society of Instrument and Control Engineers of Japan (SICE),10.23919/SICE48898.2020.9240385,,"In this paper, a control strategy for tracking the propagation of an expanding flood zone by using a group of unmanned aerial vehicles (UAVs), is developed. The control strategy addresses the following two issues. One is to averagely distribute a group of UAVs along the expanding boundary of the flood zone without collisions among each other. The other is to track the propagation of the flood region by keeping its boundary within the field of vision for each UAV. A combined control algorithm is proposed for dealing with both the flocking-based control and adaptive vision-based tracking problems. The feasibility of the algorithm is verified under simulations in the ROS/Gazebo environment.",Adaptation models; disaster robotics; Floods; Rescue systems; Robots; Statistics; Tracking; Unmanned aerial vehicles; User interfaces,Multi-Robot Control for Adaptive Caging and Tracking of a Flood Area,,NO,,,YES,,,,,NO,,
S2435,2,Forward,journalArticle,2022,"Omar, Hanafy M.",Applied Sciences,10.3390/app12031706,https://www.mdpi.com/2076-3417/12/3/1706,"Quadrotor flying vehicles with suspended loads have a lot of applications, such as mine detection and transferring loads for delivery, or through places where ground vehicles cannot reach. In these applications, the payload will be suspended underneath the vehicle and it is subjected to large oscillations due to external disturbances or the acceleration of the vehicle itself. These oscillations add additional forces and moments to the quadrotor, and this deteriorates its performance and stability. In this paper, we developed a hardware-in-the-loop (HIL) simulation platform for a quadrotor with a suspended load system using Gazebo. The developed platform can be used to understand the dynamics of the system and design control systems to suppress the oscillation of the suspended load. An anti-swing controller that is based on time-delayed feedback of the load swing angles is implemented in the designed HIL environment to show the usefulness of the newly developed system and the effectiveness of the anti-swing controller.",anti-swing; autopilot; hardware-in-the-loop—HIL; PX4; quadrotor; suspended load,Hardware-In-the-Loop Simulation of Time-Delayed Anti-Swing Controller for Quadrotor with Suspended Load,,NO,,,YES,,,,,NO,,
S2436,2,Forward,book,2019,"Marton, Apolo; Paiva, Ely; Fioravanti, André; Nogueira, Lucas",,,,"This work presents a comparative study between three approaches of pose and velocity estimation for an robotic airship. The first approach is composed of multiples second order Low-pass filters applied to GPS and IMU measured data. The second approach consists of the sensor fusion between GPS, IMU, Barometer and Thermometer with an Extended Kalman Filter (EKF) based in the kinematic equations of motion for a six degrees of freedom (6-DOF) vehicle. Finally, the same 6-DOF equations of motion and sensors are used for the design of an Unscented Kalman Filter (UKF) as a third estimation approach. As result, we obtain greater precision with EKF with a minor advantage over the UKF.",,"Comparative study for Robotic Airship State estimation with LPF, EKF and UKF",NO,,,,YES,,,,,NO,,
S2437,2,Forward,journalArticle,2015,"Amaral, Guilherme; Costa, Paulo",U.Porto Journal of Engineering,10.24840/2183-6493_001.001_0008,https://journalsojs3.fe.up.pt/index.php/upjeng/article/view/2183-6493_001.001_0008,Aerial Robots has become very popular in robotics groups. This ongoing interest is driven by a significant number of potential end-user applications where it is necessary to reduce human intervention. The validation of control/cooperation algorithms not always is an easy task and requires a large number of humans to keep tests safety. Is present in this paper the simulation of a quadrotor model in SimTwo simulation environment and evaluated the flight dynamic of the robot. To do that was developed a control layer responsible to the hovering maneuver and “go to” position function. The results prove that the objectives were achieved successfully and the simulation was validated. The navigation simulation is left as future work.,Digital control; Robotics; Simulation model,SimTwo as a simulation environment for flight robot dynamics evaluation,,NO,,,YES,,,,,NO,,
S2438,2,Forward,journalArticle,2019,"Joshi, Apurva; Wala, Ankit; Ludhiyani, Mohit; Chakraborty, Debraj; Chung, Hoam; Manjunath, D.",Control Engineering Practice,10.1016/j.conengprac.2019.05.002,https://www.sciencedirect.com/science/article/pii/S0967066118303757,"This paper describes the implementation of a decentralized consensus law with theoretically provable convergence properties on a multi-agent testbed comprising of quadrotors. It is shown that for small roll and pitch angles and well-tuned control loops, the quadrotor dynamics can be approximated as a pair of double integrators. Several experiments are carried out in an outdoor environment for validation of the consensus law which is based on double integrator dynamics. For any arbitrary initial positions of the quadrotors, the consensus law is able to drive them to an autonomously decided common point, given that the communication graph is connected at each instant of time. The resulting experimental trajectories and the consensus point matches with theoretical predictions. For guaranteeing real-time reliability required for such coordinated motion, a novel synchronized, time-slotted, scalable and fully airborne communication protocol is proposed. The protocol avoids data collisions and ensures real-time, reliable communication between agents. It can also address changing communication graph topologies, temporary link-breaks and additions. Using this underlying protocol, the quadrotors attain consensus for static and dynamic communication graphs. Experiments to observe the effect of communication rate on consensus performance are also conducted.",Autonomous robots; Cooperative systems; Decentralized control; Unmanned aerial vehicles; Wireless networks,Outdoor cooperative flight using decentralized consensus algorithm and a guaranteed real-time communication protocol,,NO,,,YES,,,,,NO,,
S2439,2,Forward,journalArticle,2021,"Balaji, A.; Mithil, J.; Gousanal, J. Jason",IOP Conference Series: Materials Science and Engineering,10.1088/1757-899X/1012/1/012021,https://doi.org/10.1088/1757-899x/1012/1/012021,"In this paper, an innovative design model of autonomous aerial vehicle is designed and fabricated with dual rotor setup. Nowadays, innovative unmanned aerial vehicles (UAVs) are widely required for surveillance, monitoring, data collection, reconnaissance and generally in places where humans face hazardous. In this model and design of UAVs, aero dynamic principles are adopted through reasonable design considerations and assumptions. Most of the researchers and academicians are currently pursuing research on AVs with various structures, wing designs, fabrication methods, controllers and materials to increase the efficeincy as well as for various applications. In this proposed work, an effort is made to design and fabricate the dual copter with wide moving ranges for surveillance applications in military intelligence system. This proposed design will be suited for all environmental conditions to collect the data as well as monitoring the system. Dual copter chassis are fabricated using 3D printer after the validation and analysis the proposed design using Solidworks CAD tool. The chassis are fabricated with the provision of space where the required sensors, actuators and controllers can be assembled. Lithium polymer batteries are employed to achieve the better performance for copter. The fabricated setup is integrated with radio frequency controller to achieve the flight control through RF transmitter. Hence the performance of the fabricated device is validated and analyzed through various performance measures of dual copter.",,Design of Dual Copter for Surveillance Applications,,NO,,,YES,,,,,NO,,
S2440,2,Forward,journalArticle,2020,"Tavakoli, Daniel",,,https://ntnuopen.ntnu.no/ntnu-xmlui/handle/11250/2780911,"Landingsproblemet har lenge vært et omdiskutert forskningstema i reguleringsteknikkmiljøet. Et flertall av utviklede systemer har vært sterkt avhengig av omfattende modellering av den kontrollerte prosessen før man utnytter etablerte reguleringsmetoder som har som mål å påtrykke kontrollover som gir ønsket atferd relativt til et spesifisert mål. Som følge av den fornyede tilliten maskinlæring (eng. machine learning, ML) opplever takket være eksponentiell vekst i datamaskiners regnekraft og -kapasitet i senere år, har omfangsrik forskning blitt gjort for å utforske potensialet til ML. Særlig forsterkende læring (eng. reinforcement learning, RL), en gren innen ML, har dratt nytte fra denne fremgangen. Sammen med kunstige nevrale nettverk (eng. artificial neural network, ANN) har klassisk RL blitt utvidet, som har gitt opphav til fremveksten av dyp forsterkende læring (eng. deep reinforcement learning, DRL). I og med at slike DRL-metoder på det generelle plan ikke behøver en modell av prosessen, ble det dermed ansett som interessant å undersøke potensialet til slike teknikker i robotikkapplikasjoner hvor både prosessen og omgivelsene er nevneverdig utfordrende å modellere og predikere. Til tross for at forskningsmiljøer utført omfattende studier rundt temaet, forblir regulering av en drone med fire rotorer en utfordrende oppgave som følge av en rekke grunner. Modellering av tidsavhengige og fluktuerende aerodynamiske krefter, posisjonering i områder hvor man opplever restriksjoner på GPS-signaler, begrensede alternativer for tilstandsestimering og faktum at en drone generelt sett er underaktuert er noen av disse.  Følgelig foreslår denne masteroppgaven et generelt rammeverk for å bruke en DRL-metode for å optimere regulering av en drone for autonom landing. En drone bestående av fire rotorer som prosess ble valgt, hovedsakelig grunnet dens anvendbarhet og bevegelighet, som tillater et bredt spekter av bruksområder. Ved å anvende en DRL-metode som tilbyr ny tilnærming til å løse dronelandingsproblemet, samt et rudimentært planleggingssystem, undersøker oppgaven potensialet DRL har relativt til regulering av droner. To DRL-agenter med spesifikke mål, henholdsvis hovere og synke, ble utformet, trent og testet for trygg, effektiv og kravoppfyllende landing på en landingsplattform i et simulert miljø. Basert på resultatene denne masteroppgaven har kommet frem til viser DRL dens evne til å regulere komplekse, høyt ulineære robotikksystemer uten forhåndskunnskaper om prosessen, ei heller informasjon om det rundtomliggende miljøet. Oppgavens funn fremstiller i tilstrekkelig grad nøyaktig regulering i ukjente omgivelser og bygger under påstanden om at dyp forsterkende læring kan utvikle seg til å bli et rammeverk som erstatter mer tradisjonelle reguleringsmetoder når dette forskningsområdet utvikler seg ytterligere.",,Autonomous Drone Landing using Deep Reinforcement Learning,,NO,,,YES,,,,,NO,,
S2441,2,Forward,webpage,,,,,https://www.politesi.polimi.it/handle/10589/149491,,,A computer vision line-tracking algorithm for UAV GNSS-aided guidance,NO,,,,NO,,,,,NO,,
S2442,2,Forward,conferencePaper,2020,"Karras, George C.; Bechlioulis, Charalampos P.; Fourlas, George K.; Kyriakopoulos, Kostas J.",2020 International Conference on Unmanned Aircraft Systems (ICUAS),10.1109/ICUAS48674.2020.9213893,,"In this paper, we present an image-based visual servo control scheme for tracking a moving target using a multirotor aerial vehicle. The proposed scheme is based on the prescribed performance control notion and it is able to impose appropriately selected performance specifications on the image feature errors to satisfy visibility constraints arising from the camera limited field of view, while exhibiting robustness against calibration and depth estimation errors. The proposed controller is of low complexity and computational cost and thus can be easily implemented on the embedded control unit of an autonomous aerial vehicle. The resulting scheme has analytically guaranteed stability and convergence properties, while its applicability and performance are verified via a realistic simulation scenario, where a quadrotor successfully tracks a visual target located on top of a moving mobile robot.",Cameras; Robustness; Servosystems; Target tracking; Torque; Visual servoing; Visualization,Target Tracking with Multi-rotor Aerial Vehicles based on a Robust Visual Servo Controller with Prescribed Performance,,NO,,,YES,,,,,NO,,
S2443,2,Forward,webpage,2015,"Roo, M. de",,,http://essay.utwente.nl/67949/,"In this paper a control architecture is presented, designed for event handling by a UAV (Unmanned Aerial Vehicle) network with an optimal approach. The architecture allows the calculations for the placement of UAVs in an area for tasks that need to be served by more than one UAV at the same time. The feasibility of this method is shown in simulations and is made ready for a test setup consisting out of several quadcopters.",,Optimal Event Handling by Multiple UAVs,NO,,,,YES,,,,,NO,,
S2444,2,Forward,journalArticle,2020,"Wolfe, Sean",,,https://espace.rmc.ca:8443/jspui/handle/11264/1861,"In this thesis, the idea of using teams of Unmanned Aerial Vehicles (UAVs) to track a ground vehicle and exploiting the benefits of multiple UAVs is considered. First, a novel state estimation algorithm is developed using the standard Extended Kalman filter (EKF). This filter is distributed over a team of three UAVs, each adopting a different model for the target's motion. The Distributed EKF (DEKF) is then paired with the T Test model selection criteria, which decides which UAV has the best estimate at each iteration. The algorithm is validated in a real-time indoor flight environment and compared against the single model equivalents, as well as compared to other multi model variants. Furthermore, an analysis of different selection methods to use in times of occlusions is done. The second part of the thesis involves the design and testing of a multiple model Distributed Model Predictive Controller (DMPC) for tracking in formation flight. Using information from state estimation about which target model is performing best, the DMPC changes its target motion model accordingly. The MPC controller is first implemented for a single UAV, then tested in both a real-time simulation environment and in an indoor flight. This MPC is then expanded to the multi-UAV scenario, which is tested in the same real-time simulation environment.",,Cooperative Multi Model State Estimation and Control for Target Tracking UAVs,,NO,,,YES,,,,,NO,,
S2445,2,Forward,conferencePaper,2020,"Shaqura, Mohammad; Shamma, Jeff S.","Informatics in Control, Automation and Robotics",10.1007/978-3-030-11292-9_23,,"Multicoptor unmanned aerial vehicles (UAVs) are popular robotics platforms in various research and applications fields. Research in robotics, control, estimation and computer vision relies heavily on open-source software and hardware to build custom UAV. This is motivated by lower cost of material and rapid development desire. The presented tool automates the task of obtaining realistic models for simulation and visualization of multicoptors using state-of-the-art Computer Aided Design engineering tools (CAD). Users interact with the software through a desktop application that offers interface to CAD tools, hardware database and simulation files generation. Custom models can be generated for three popular multirotor simulators. Modeling parameters accuracy has been validated using data of IRIS+ quadcopter model.",Aerial robots; Dynamic assembly; Flight control; Robot visualization; SolidWorks API; System ID; UAV simulation,A Multicopter Design Software Tool for Automated Generation of Simulation and Visualization Models,,NO,,,YES,,,,,NO,,
S2446,2,Forward,conferencePaper,2020,"Vancin, Paulo H.; Domingues, Anderson R. P.; Paravisi, Marcelo; Johann, Sergio F.; Calazans, Ney L. V.; Amory, Alexandre M.",2020 IEEE International Symposium on Circuits and Systems (ISCAS),10.1109/ISCAS45731.2020.9181265,,"Multi-processor Systems-on-Chip (MPSoCs) have been proposed to tackle embedded systems' requirements due to their potential for low-power consumption and high scalability. These systems fit the needs of many application domains, including robotics and autonomous vehicles, in which reliability, performance, and timeliness are critical to operation. In this paper, we propose an integrated environment for the development of robotic applications targeting MPSoCs. The proposed environment eases the evaluation of non-functional requirements by combining cycle-accurate simulations from RTL models with behavioral simulations from robotics. We present a case study of the proposed environment in the context of a UAV (unmanned aerial vehicle) stabilization software, providing performance and energy estimations for different software implementations.",Autonomous Vehicles; Computer architecture; Hardware; MPSoCs; Robot sensing systems; Robotics; Software; Software Development Environment; Task analysis; UAV; Unmanned aerial vehicles,Towards an Integrated Software Development Environment for Robotic Applications in MPSoCs with Support for Energy Estimations,,NO,,,YES,,,,,NO,,
S2447,2,Forward,webpage,,,,,https://www.ideals.illinois.edu/items/116127,,,Separation of distributed coordination and control for programming reliable robotics | IDEALS,NO,,,,NO,,,,,NO,,
S2448,2,Forward,journalArticle,2016,"Coppola, Mario; Mcguire, Kimberly; Scheper, Kirk; Croon, Guido",,,,"A current limitation of using Micro Air Vehicles (MAVs) in teams is the high risk of collisions between members. Knowledge of relative location is needed in order to facilitate evasive maneuvers. We propose an on-board Bluetooth-based relative localization method. Bluetooth is a light-weight and energy efficient communication technology that is readily available on even the smallest MAV units. In this work, it is exploited for communication between team members to exchange on-board states (velocity, height, and orientation), while the strength of the communication signal is used to infer relative range. The data is fused on-board by each drone to obtain a relative estimate of the location and motion of all other team members. Furthermore, a collision avoidance controller is proposed based on collision cones. It is designed to deal with the expected relative localization errors by adapting the collision cones during flight and enforcing a clock-wise evasion maneuver. The system was tested with a team of AR-Drones 2.0 flying in a 4mx4m arena at the same height. The system showed promising results. When using two AR-Drones and off-board velocity/orientation estimates, the drones were able to fly around the arena for a cumulative time of 25 minutes with only one collision. With three AR-Drones under the same conditions, flight time to collision was 3 minutes. With two AR-Drones flying with on-board velocity estimation, the time to collision was approximately 3 minutes due to the disturbances in velocity estimates. Simulations show that even better results can be expected with smaller MAVs.",,On-board Bluetooth-based Relative Localization for Collision Avoidance in Micro Air Vehicle Swarms,,NO,,,YES,,,,,NO,,
S2449,2,Forward,conferencePaper,2020,"Makadia, Jeet; Pashchapur, Ravi; Dhulasawant, Tushar; Gopal G, Yakshith,; Raj P.Y., Deepak",2020 International Conference on Computational Performance Evaluation (ComPE),10.1109/ComPE49325.2020.9200061,,"The integration of Artificial Intelligence with the aircraft or an Unmanned Ariel Vehicles that could automate the task of manual flight and navigation would be considered a milestone in the field of Aeronautics. The idea of an autonomous flight vehicle isn't novel. It has been cited into various papers decades ago. In the subject of prior art, though, there have been a very few advancement in the development of such technology. The major challenge encountered by the individuals involved in the development of such a system was the integration of multidisciplinary domains specifically with the backgrounds of Computer Science and Aeronautics. The research work will contribute to the advancement in the incorporation of Artificial Intelligence to achieve a simulated autonomous flight vehicle.",AI; artificial intelligence; Artificial intelligence; autonomous; flight; flight controller; Kinematics; Mathematical model; MAV-Link; Micro Air Vehicle Link; microcontroller; Microcontrollers; Process control; robotic operating system; ROS; Sensors; Task analysis; vehicle,Autonomous Flight Vehicle Incorporating Artificial Intelligence,,NO,,,YES,,,,,NO,,
S2450,2,Forward,bookSection,2021,"Filho, Enio Vasconcelos; Severino, Ricardo; Rodrigues, Joao; Gonçalves, Bruno; Koubaa, Anis; Tovar, Eduardo",Robot Operating System (ROS): The Complete Reference (Volume 6),,https://doi.org/10.1007/978-3-030-75472-3_4,"The development of critical cooperative autonomous vehicle systems is increasingly complex due to the inherent multidimensional problem that encompasses control, communications, and safety. These Cooperating Cyber-Physical Systems (Co-CPS) impose an unprecedented integration between communication, sensing, and actuation actions, alongside the impact of the particular characteristics of the vehicle dynamics and the environment. This significantly increases the complexity of these systems, which, due to their critical safety requirements, must undergo extensive testing and validation to delimit the optimal safety bounds. In this chapter, we present CopaDrive, a cooperative driving framework that uses ROS as an enabler and integrator, to support the development and test of cooperative driving systems in a continuous fashion. CopaDrive integrates a physical simulator (Gazebo) with a traffic generator (Sumo) and a network simulator (OmNet++) to analyze a cooperative driving system. An On-board Unit (OBU) can also replace the network simulator, to create a Hardware in the Loop (HIL) simulation and test the communications’ platforms and safety systems in a simulated scenario. Finally, the developed systems are integrated in the on-board computing platforms that will be deployed at the final prototype vehicles, and validated and demonstrated over a robotic testbed. CopaDrive enabled us to reuse software components and evaluate the cooperative driving system in each step of the development process. In this chapter, the framework’s performance and its potential is demonstrated for each configuration, in line with the development of a cooperative driving system.",Cooperating cyber-physical systems; Driving systems; Network; Safety,CopaDrive: An Integrated ROS Cooperative Driving Test and Validation Framework,,,,,YES,NO,,,,NO,,
S2451,2,Forward,journalArticle,2020,"Velasco, Omar; Valente, João; Alhama Blanco, Pablo J.; Abderrahim, Mohammed",Drones,10.3390/drones4030037,https://www.mdpi.com/2504-446X/4/3/37,"The deployment of robot controllers into the real robotic platform is cumbersome and time consuming, especially when testing scenarios involve several robots or are sites not easily accessible. Besides this, most of the time, testing on the real platforms or real conditions provides little value in the early stages of controller design and prototype, phases where debugging and suitability of the controller are the main objectives. This paper proposes a simulation strategy for developing and testing controllers for Unmanned Aerial and Surface Vehicle coordination and interaction with the environment. The simulation strategy is based on V-REP and Matlab/Simulink which provide a large set of features, modularity and compatibility across platforms. Results show that this approach significantly reduces development and delivery times by providing an off-the-shelf simulation environment and a step-by-step implementation guidelines. The source code to deploy the simulations is available in an open-source repository.",limnology; multi-robot system; open source; robotic simulation; unmanned aerial vehicle; unmanned surface vehicle; water drone,An Open Simulation Strategy for Rapid Control Design in Aerial and Maritime Drone Teams: A Comprehensive Tutorial,,NO,,,YES,,,,,NO,,
S2452,2,Forward,webpage,,,,,https://www.proquest.com/openview/3c25c6c5ddf26576dd1da6252b6d6eda/1?pq-origsite=gscholar&cbl=18750,"Explore millions of resources from scholarly journals, books, newspapers, videos and more, on the ProQuest Platform.",,Lyapunov-based switched systems control - ProQuest,NO,,,,NO,,,,,NO,,
S2453,2,Forward,conferencePaper,2021,"S, Abhinay N; Sridhar, Nithya; Shobhit, Shubhankar; Das, Kaushik",2021 American Control Conference (ACC),10.23919/ACC50511.2021.9483290,,"In this work, the design and analysis of a Neural Adaptive Super-Twisting Sliding Mode Controller is presented. Radial Basis Function Neural Network (RBFNN) is used to estimate the model uncertainties and an adaptive super-twisting sliding mode controller is designed to provide robustness against the external disturbances. The stability of the proposed controller is proven and the adaptive laws are derived from the Lyapunov stability condition. The performance of the proposed controller is compared with an existing work using a numerical example and as a case study the controller is applied to the problem of slung load carrying using an aerial vehicle and the corresponding simulation results are presented.",Adaptive systems; Control systems; Radial basis function networks; Simulation; Stability analysis; Uncertain systems; Uncertainty,Design and Analysis of a Novel Neural Adaptive Super-Twisting Sliding Mode Controller For Uncertain Systems,,NO,,,YES,,,,,NO,,
S2454,2,Forward,conferencePaper,2021,"Peake, Ian; La Delfa, Joseph; Bejarano, Ronal; Blech, Jan Olaf",2021 22nd IEEE International Conference on Industrial Technology (ICIT),10.1109/ICIT46573.2021.9453594,,"We present work on structuring robotics simulation scenarios into components. Components can comprise simulation entities with a physical counterpart such as automated guided vehicles, drones, robots and machines. Components are typically further structured into sub-components, e.g., a robot arm or a gripper, and can be used to build digital twins. Different aspects for classifying components can be distinguished; here we concentrate on composability, performance and fidelity.In this paper, we are mainly concerned with components in the robotics simulation tool Gazebo used with Robot Operating System. Several structured scenario case studies are described. We investigate how these scenarios behave in Gazebo with respect to performance and fidelity for selected cases.",Conferences; Delays; Digital twin; Manipulators; Operating systems; Real-time systems; Tools,Simulation Components in Gazebo,,,NO,,YES,,,,,NO,,
S2455,2,Forward,webpage,,,,,https://www.proquest.com/openview/bb31101c24dfadb11b29f394019c88e5/1?pq-origsite=gscholar&cbl=18750,"Explore millions of resources from scholarly journals, books, newspapers, videos and more, on the ProQuest Platform.",,Autonomous Quadrotor Navigation by Detecting Vanishing Points in Indoor Environments - ProQuest,NO,,,,NO,,,,,NO,,
S2456,2,Forward,bookSection,2021,"Lange, Ralph; Traversaro, Silvio; Lenord, Oliver; Bertsch, Christian",Robot Operating System (ROS): The Complete Reference (Volume 5),,https://doi.org/10.1007/978-3-030-45956-7_7,"The Functional Mock-up Interface (FMI) is a widely used industry standard for exchange and co-simulation of dynamic models as Functional Mock-up Units (FMU). It is supported by more than 100 modeling and simulation tools. In this chapter, we present two implementations of FMI that bridge the gap between these tools and the ROS and Gazebo community: First, the fmi_adapter package for running/simulating FMUs in ROS nodes, from https://github.com/boschresearch/fmi_adapter_ros2. Second, the gazebo-fmi package for integrating FMUs with Gazebo, from https://github.com/robotology/gazebo-fmi. After an introduction to the FMI standard, this chapter provides step-by-step, hands-on examples for both packages, followed by interface descriptions and selected implementation details. In addition to these tutorial-style sections, the chapter also provides comprehensive descriptions of two use-cases. First, it explains how the fmi_adapter enabled a convenient model-based control design workflow for a self-driving vehicle for industrial logistics. Second, it reports on the simulation of electrical actuators in Gazebo from a Modelica model.",FMI; fmi_adapter; FMU; Functional mock-up interface; Gazebo; gazebo-fmi; ROS; ROS 2,Integrating the Functional Mock-Up Interface with ROS and Gazebo,,,,,YES,NO,,,,NO,,
S2457,2,Forward,webpage,,,,,https://koreascience.kr/article/JAKO201919033493413.page,,,Autonomous Flight System of UAV through Global and Local Path Generation -Journal of Aerospace System Engineering | Korea Science,NO,,,,NO,,,,,NO,,
S2458,2,Forward,journalArticle,2021,"Gago, Reynaldo M.; Pereira, Matheus Y. A.; Pereira, Guilherme A. S.",Engineering Reports,10.1002/eng2.12396,https://onlinelibrary.wiley.com/doi/abs/10.1002/eng2.12396,"This article describes the development and evaluation of an aerial robotic system for smart inventory of stockpile warehouses. The system was developed to automatically measure piles of different bulk materials, such as phosphorus and potassium compounds, which are stored in bays of different sizes inside a warehouse. This warehouse configuration is very common among fertilizer and animal food industries in Brazil. While an inventory can be executed by a human technician, the insalubrious environment, the imprecision of the manual volume estimation, and the time spent by the technician to access the information motivate the automation of the process. The proposed system uses a multirotor electrical drone that navigates autonomously inside the warehouse while it acquires light detection and ranging (LIDAR) point cloud data. This data is used to build a three-dimensional (3D) model of the environment, which is then processed to identify the stockpiles of material and calculate their volumes. Since the environment is GPS-denied and its characteristics, including symmetry, illumination and texture, do not favor visual- or LIDAR-based localization, a drone navigation strategy that relies on relative positioning with respect to simple structures of the warehouse was developed. This article also presents our approach for autonomous stockpile volume estimation, which was numerically evaluated both in simulation and with real data, yielding in accuracy and precision of about 98%. The results presented in the article show that the aerial system is able to substitute the previously adopted manual procedure, highly increasing its accuracy, repeatably and safety, and drastically reducing its time of execution and cost.",drone; LiDAR; UAS; volume estimation; warehouse automation,An aerial robotic system for inventory of stockpile warehouses,,NO,,,YES,,,,,NO,,
S2459,2,Forward,journalArticle,2020,"Rendón, Manuel A.; Martins, Felipe F.; Ganimi, Luis Gustavo",Journal of Intelligent & Robotic Systems,10.1007/s10846-019-01142-7,https://doi.org/10.1007/s10846-019-01142-7,"Quadrotor control is an exciting research area due to its inherent non-linearity, the variety of tasks to be performed, and the wide scope of control strategies. Despite several works have been published, some aspects must be considered before implementation: How a quadrotor will operate in challenging trajectories, how to define trajectory limits, or how changing the device size will affect its performance. A complete user-friendly development platform is presented, where any device may be tested just by setting a few parameters. Typing a set of waypoints and their corresponding times, the tool calculates the optimal trajectory with minimum snap. For the defined waypoints, the control gains are tuned for a chosen control strategy using Particle Swarm Optimization (PSO). Three control strategies are available, but the tool was developed in modular form and opened to others. After tuned the gains the control performance may be visually evaluated through a graphical user interface (GUI). The quadrotor model considers the effect of air drag and propellers’ speed dynamics. Measurement noise and limits for propeller speeds were also considered. Results demonstrate how this tool helps to initiate undergraduate and beginner graduate students in this research area, testing new control strategies, defining limits in challenging trajectories, and determining quadrotor characteristics for specific applications. The tool is available in GitHub (Martins and Rendón 2019).",Graphical user interfaces; Nonlinear control systems; Unmanned aerial vehicles,A Visual Interface Tool for Development of Quadrotor Control Strategies,,NO,,,YES,,,,,NO,,
S2460,2,Forward,conferencePaper,2019,"Guerra, Winter; Tal, Ezra; Murali, Varun; Ryou, Gilhyun; Karaman, Sertac",2019 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),10.1109/IROS40897.2019.8968116,http://arxiv.org/abs/1905.11377,"FlightGoggles is a photorealistic sensor simulator for perception-driven robotic vehicles. The key contributions of FlightGoggles are twofold. First, FlightGoggles provides photorealistic exteroceptive sensor simulation using graphics assets generated with photogrammetry. Second, it provides the ability to combine (i) synthetic exteroceptive measurements generated in silico in real time and (ii) vehicle dynamics and proprioceptive measurements generated in motio by vehicle(s) in a motion-capture facility. FlightGoggles is capable of simulating a virtual-reality environment around autonomous vehicle(s). While a vehicle is in flight in the FlightGoggles virtual reality environment, exteroceptive sensors are rendered synthetically in real time while all complex extrinsic dynamics are generated organically through the natural interactions of the vehicle. The FlightGoggles framework allows for researchers to accelerate development by circumventing the need to estimate complex and hard-to-model interactions such as aerodynamics, motor mechanics, battery electrochemistry, and behavior of other agents. The ability to perform vehicle-in-the-loop experiments with photorealistic exteroceptive sensor simulation facilitates novel research directions involving, e.g., fast and agile autonomous flight in obstacle-rich environments, safe human interaction, and flexible sensor selection. FlightGoggles has been utilized as the main test for selecting nine teams that will advance in the AlphaPilot autonomous drone racing challenge. We survey approaches and results from the top AlphaPilot teams, which may be of independent interest.",Computer Science - Robotics,"FlightGoggles: A Modular Framework for Photorealistic Camera, Exteroceptive Sensor, and Dynamics Simulation",,,,,YES,,NO,,,NO,,
S2461,2,Forward,conferencePaper,2021,"Fornasier, Alessandro; Scheiber, Martin; Hardt-Stremayr, Alexander; Jung, Roland; Weiss, Stephan",2021 IEEE International Conference on Robotics and Automation (ICRA),10.1109/ICRA48506.2021.9561382,,"The research community presented significant advances in many different Visual-Inertial Navigation System (VINS) algorithms to localize mobile robots or hand-held devices in a 3D environment. While authors of the algorithms of-ten do compare to, at that time, existing competing approaches, their comparison methods, rigor, depth, and repeatability at later points in time have a large spread. Further, with existing simulators and photo-realistic frameworks, the user is not able to easily test the sensitivity of the algorithm under examination with respect to specific environmental conditions and sensor specifications. Rather, tests often include unwillingly many polluting effects falsifying the analysis and interpretations. In addition, edge cases and corresponding failure modes often remain undiscovered due to the limited breadth of the test sequences. Our unified evaluation framework allows, in a fully automated fashion, a reproducible analysis of different VINS methods with respect to specific environmental and sensor parameters. The analyses per parameter are done over a multitude of test sets to obtain both statistically valid results and an average over other, potentially polluting effects with respect to the one parameter under test to mitigate biased interpretations. The automated performance results per method over all tested parameters are then summarized in unified radar charts for a fair comparison across authors and institutions.",Feature extraction; Image edge detection; Navigation; Robot sensing systems; Sensitivity; Three-dimensional displays; Tools,VINSEval: Evaluation Framework for Unified Testing of Consistency and Robustness of Visual-Inertial Navigation System Algorithms,,NO,,,YES,,,,,NO,,
S2462,2,Forward,journalArticle,2020,"Haddeler, Garen; Aybakan, Abdulbaki; Akay, M. Caner; Temeltas, Hakan",Journal of Intelligent & Robotic Systems,10.1007/s10846-020-01207-y,https://doi.org/10.1007/s10846-020-01207-y,"We encounter a world where the role of robots has increased in society. Day by day, we can observe that problems related to autonomous vehicles are being solved. The focused problem that we have recently confronted is based on collaborative mapping with multi-robots since collaboratively generated map provides more information about the environment than with a single robot. Moreover, the mapping framework for robot team can be more efficient if 3D laser sensors are placed to cover wider area. However, laser sensors are commonly positioned intuitively and depended mostly on the designer’s choice. To overcome designer-independent laser sensor setup for efficient collaborative mapping, a subjective evaluation of laser sensor placement is developed as another key aspect. This paper proposed a collaborative mapping framework for heterogeneous robot teams to make full use of collected information from different viewpoints and explore large areas more efficiently. It’s comprised of two modules, localization of multi-robots and collaborative map construction. In addition, to avoid arbitrary setup of laser sensors in existing methods whose performance is heavily affected by designers’ experience, a metric evaluation system was defined to determine the optimal placements of laser sensors and achieve maximum sweep area. The proposed methods were verified on both simulation and experiments which were carried out on a heterogeneous robot team (including an unmanned aerial vehicle and a ground vehicle). According to the metric evaluation, best placements were chosen for the laser sensors, and presented collaborative mapping technique was shown to work more efficiently compared with existing methods.",3D laser sensor positioning; Collaborative mapping; Heterogeneous robot team; ICP; LiDAR configurations for multi agent robot systems; LiDAR sensor setup; Localization for multi-robots; Map merging from different sources; Occupancy metrics for point clouds; OctoMap; Performance metrics for point clouds; ROS,Evaluation of 3D LiDAR Sensor Setup for Heterogeneous Robot Team,,NO,,,YES,,,,,NO,,
S2463,2,Forward,webpage,,,,,https://www.proquest.com/openview/dfa2890a9c50390e07d4e49f49c6d5d4/1?pq-origsite=gscholar&cbl=18750&diss=y,"Explore millions of resources from scholarly journals, books, newspapers, videos and more, on the ProQuest Platform.",,Multi-Robot Collaborative Visual Navigation with Micro Aerial Vehicles - ProQuest,NO,,,,NO,,,,,NO,,
S2464,2,Forward,report,2021,"Sun, Yufeng; Ma, Ou",,,https://www.researchsquare.com/article/rs-1193469/v1,"Abstract           Visual inspections of aircraft exterior surface are usually required in aircraft maintenance routine. It becomes a trend to use mobile robots equipped with sensors to perform automatic inspections as a replacement of manual inspections which are time-consuming and error-prone. The sensed data such as images and point cloud can be used for further defect characterization leveraging the power of machine learning and data science. In such a robotic inspection procedure, a precise digital model of the aircraft is required for planning the inspection path, however, the original CAD model of the aircraft is often inaccessible to aircraft maintenance shops. Thus, sensors such as 3D Laser scanners and RGB-D (Red, Green, Blue, and Depth) cameras are used because of their capability of generating a 3D model of an interested object in an efficient manner. This paper presents a two-stage approach of automating aircraft scanning with a UAV (Unmanned Aerial Vehicle) equipped with an RGB-D camera for reconstructing a digital replica of the aircraft when its original CAD model is not available. In the first stage, the UAVcamera system follows a predefined path to quickly scan the aircraft and generate a coarse model of the aircraft. Then, a full-coverage scanning path is computed based on the coarse model of the aircraft. In the second stage, the UAV-Camera system follows the computed path to closely scan the aircraft for generating a dense and precise model of the aircraft. We solved the Coverage Path Planning (CPP) problem for the aircraft scanning using Monte Carlo Tree Search (MCTS) which is a reinforcement learning technique. We also implemented the Max-Min Ant System (MMAS) strategy, a population-based optimization algorithm, to solve the CPP problem and demonstrate the effectiveness of our approach.",,Automating Aircraft Scanning For Inspection With A UAV And Reinforcement Learning Technique,NO,,,,YES,,,,,NO,,
S2465,2,Forward,conferencePaper,2019,"Nguyen, Khoa Dang; Nguyen, Trong-Thang; Ha, Cheolkeun",Intelligent Computing Theories and Application,10.1007/978-3-030-26969-2_58,,"This paper presents a method to simulate the graph simultaneous localization and mapping (Graph-SLAM) for a Unmanned Aerial vehicle (UAV) by using the hard-in-the-loop-simulation (HILS). This method uses the Gazebo software to render six-degree-of-freedom (6 DOF) UAV model, the virtual sensor model and virtual RGB-D camera model. To drive the UAV in Gazebo, the flight control based on PX4 open source code is performed on the Pixhawk board hardware. A Graph-SLAM algorithm open source named RTAB-MAP which is modified and installed on the Raspberry board, is used to estimate the 3D mapping of the environment and localization of UAV in map. A control application software (CAS) is developed to connect all parts of HILS such as the Gazebo, Pixhawk and Raspberry by using the multithread architecture. Numerical simulation has been performed to demonstrate the effectiveness of the HILS configuration approach.",Graph-SLAM; HILS; UAV,Graph-SLAM Based Hardware-in-the-Loop-Simulation for Unmanned Aerial Vehicles Using Gazebo and PX4 Open Source,,NO,,,YES,,,,,NO,,
S2466,2,Forward,journalArticle,2022,"Kim, Minwoo; Kim, Jongyun; Jung, Minjae; Oh, Hyondong",Expert Systems with Applications,10.1016/j.eswa.2022.116742,https://www.sciencedirect.com/science/article/pii/S0957417422002111,"This paper proposes an obstacle avoidance strategy for small multi-rotor drones with a monocular camera using deep reinforcement learning. The proposed method is composed of two steps: depth estimation and navigation decision making. For the depth estimation step, a pre-trained depth estimation algorithm based on the convolutional neural network is used. On the navigation decision making step, a dueling double deep Q-network is employed with a well-designed reward function. The network is trained using the robot operating system and Gazebo simulation environment. To validate the performance and robustness of the proposed approach, simulations and real experiments have been carried out using a Parrot Bebop2 drone in various complex indoor environments. We demonstrate that the proposed algorithm successfully travels along the narrow corridors with the texture free walls, people, and boxes.",Deep reinforcement learning; Depth estimation; Navigation decision making; Obstacle avoidance; Q-learning; Vision-based,Towards monocular vision-based autonomous flight through deep reinforcement learning,,NO,,,YES,,,,,NO,,
S2467,2,Forward,journalArticle,2021,"Karras, George C.; Bechlioulis, Charalampos P.; Fourlas, George K.; Kyriakopoulos, Kostas J.",Robotics,10.3390/robotics10040116,https://www.mdpi.com/2218-6581/10/4/116,"In this paper, we present a mixed-initiative motion control strategy for multiple quadrotor aerial vehicles. The proposed approach incorporates formation specifications and motion-planning commands as well as inputs by a human operator. More specifically, we consider a leader–follower aerial robotic system, which autonomously attains a specific geometrical formation, by regulating the distances among neighboring agents while avoiding inter-robot collisions. The desired formation is realized by a decentralized prescribed performance control strategy, resulting in a low computational complexity implementation with guaranteed robustness and accurate formation establishment. The multi-robot system is safely guided towards goal configurations, by employing a properly defined navigation function that provides appropriate motion commands to the leading vehicle, which is the only one that has knowledge of the workspace and the goal configurations. Additionally, the overall framework incorporates human commands that dictate the motion of the leader via a teleoperation interface. The resulting mixed-initiative control system has analytically guaranteed stability and convergence properties. A realistic simulation study, considering a team of five quadrotors operating in a cluttered environment, was carried out to demonstrate the performance of the proposed strategy.",aerial vehicles; formation control; mixed-initiative control; navigation functions; prescribed performance control,A Mixed-Initiative Formation Control Strategy for Multiple Quadrotors,,NO,,,YES,,,,,NO,,
S2468,2,Forward,conferencePaper,2017,"Nakamura, Takuma; Haviland, Stephen; Bershadsky, Dmitry; Magree, Daniel; Johnson, Erie N.",2017 International Conference on Unmanned Aircraft Systems (ICUAS),10.1109/ICUAS.2017.7991474,,"This paper describes a novel vision-based target tracking and landing method that uses aerial images from an on-board camera. The proposed method explicitly deals with occlusions that often occur during these maneuvers. Normalized cross correlation (NCC) is used to locate an image patch in a reference image with a measure of certainty. The key insight is that over the course of the vehicle approach, there is a transition between the target being contained in the camera images, and camera images being contained in the target image. When a vehicle is at high altitude, the NCC of the target over an entire camera image is computed. When at low altitude, the reverse operation is performed: the NCC of the camera images is computed over the target image. Additionally, at both high and low altitude, we find interesting region using contour trees, and the NCC of the template with the region is calculated. This way, we can recognize a target even when it is only partly in view. A particle filter is used to fuse highly multi-modal measurements from the three techniques. Each particle chooses its update measurement using a roulette wheel selection with the size of the slice being proportional to the measurement's NCC and, therefore, converges to a location that has a greater NCC and numerous positive hits. The particle filter allows estimation of target position and velocity states, which are used to determine criteria for safe landing. We evaluate our system with an image-in-the-loop simulation and closed-loop flight tests with a quadrotor.",Atmospheric measurements; Cameras; Machine vision; Particle measurements; Size measurement; Visualization; Wheels,Particle filter for closed-loop detection and tracking from occluded airborne images,,NO,,,YES,,,,,NO,,
S2469,2,Forward,journalArticle,,"Lis, Krzysztof",,,,,,Quadrotor pilot training using augmented reality,,,,,NO,,,,,NO,,
S2470,2,Forward,journalArticle,,"Gao, Ming",,,,,,Adaptive Shared Autonomy between Human and Robot to Assist Mobile Robot Teleoperation,,,,,NO,,,,,NO,,
S2471,2,Forward,conferencePaper,2019,"Irani, Behnam; Chen, Weidong; Wang, Jingchuan",Intelligent Autonomous Systems 15,10.1007/978-3-030-01370-7_71,,"As unmanned aerial vehicles (UAVs) are used in challenging environments to carry out various complex tasks, a satisfactory level of localization performance is required to ensure safe and reliable operations. 3D laser range finder (LRF)-based localization is a suitable approach in areas where GPS signal is not accesible or unreliable. During navigation, environmental information and map noises at different locations may contribute differently to a UAV’s localization process, causing it to have dissimilar ability to localize itself using LRF readings, which is referred to as localizability in this paper. We propose a localizability constraint (LC) based path planning method for UAV, which plans the navigation path according to LRF sensor model to achieve higher localization performance throughout the path. Paths planned with and without LC are compared and discussed through simulations in outdoor urban and wilderness environemnts. We show that the proposed method effectively reduces the localization error along the planned paths.",Localizability; Localization; Navigation; Path planning; Unmanned aerial vehicle,A Localizability Constraint-Based Path Planning Method for Unmanned Aerial Vehicle,,NO,,,YES,,,,,NO,,
S2472,2,Forward,conferencePaper,2019,"Pieber, Thomas W.; Ulz, Thomas; Steger, Christian","Simulation and Modeling Methodologies, Technologies and Applications",10.1007/978-3-030-01470-4_13,,"Realistic simulations of new hardware are of utmost importance to achieve good results. The current approach to such simulations is that the Device under Test is exposed to stimuli that are either generated randomly, or that are generated by engineers reverse engineering the use cases and extending the inputs by some extreme cases. In this paper we describe an approach to generate useful stimuli for a SystemC simulation directly from a simulation of the use case. In this approach the use case is simulated using the Gazebo simulator. The stimuli for the Device under Test are then extracted and sent to the SystemC simulation.",Gazebo Plugin; Gazebo Simulator; JavaScript Object Notation (JSON); Simulation Need; SystemC Simulation,Using Gazebo to Generate Use Case Based Stimuli for SystemC,,NO,,,YES,,,,,NO,,
S2473,2,Forward,conferencePaper,2017,"Боковой, А. В.",,,https://elibrary.ru/item.asp?id=32438481,"В статье рассматривается метод решения задачи одновременного картирования и локализации малого беспилотного летательного аппарата по данным, полученным с единственной камеры и датчиков инерциальной навигационной системы. Приведено экспериментальное исследование разработанного алгоритма и проведен анализ полученных результатов на актуальных коллекциях данных",Видеопоток; Единственная Камера; Инс; Методы Одновременного Картирования И Локализации,Метод Решения Задачи Одновременного Картирования И Локализации По Видеопотоку И Данным Инерциальной Навигационной Системы Для Малых Бпла,,,,NO,YES,,,,,NO,,
S2474,2,Forward,journalArticle,2018,"Billdal, David Chen",117,,https://ntnuopen.ntnu.no/ntnu-xmlui/handle/11250/2616149,"The use of unmanned aerial drones for inspection of industrial environments have great potential in lowering both cost and risk. Development of such systems are going on at full speed, but many hurdles remain, especially that of creating robust sensors for object detection. The main obstacle is to find a sensor for object detection that is small, cheap, accurate and can fit on a small flying drone. Radar is proposed for this purpose, but little testing has been performed on smaller flying drones to either confirm or deny this prospect. New tools will need to be developed to increase the development process. In this thesis, a simulation framework has been implemented that allows for real-time testing of radar sensors within a 3D environment. The system is based on the software packages of ROS and Gazebo, using the ray-tracing technique to simulate the effects of electromagnetic waves on the environment. A radar sensor model was developed in Gazebo based on a 3D scanning lidar. The radar performed well through designed simulations, providing similar output to that of the radar sensor it simulates. In addition, a mapping technique called Occupancy Grid Mapping was implemented to complement the radar sensor, expanding its application area. The mapping technique showed good results, mapping clustered environments with low uncertainty.",,Sensor Simulation and Environment Mapping using UWB Radar for Industrial Drone Inspection,,NO,,,YES,,,,,NO,,
S2475,2,Forward,thesis,2017,"Pestana Puerta, Jesús; Campoy Cervera, Pascual; Domínguez Cabrerizo, Sergio",,,https://oa.upm.es/47726/,"El objetivo de esta tesis es conseguir una navegación basada en visión fiable y explorar el potencial de los algoritmos del estado del arte moderno en visión por computador para la robótica aérea, y especialmente aplicados a drones de tipo multirotor. Dado que las cámaras digitales pueden proveer potencialmente de una cantidad enorme de información al robot, que son menos costosas que otras alternativas de sensado y que son muy ligeras; los métodos de estimación basados en visión son muy prometedores para el desarrollo de aplicaciones civiles con drones. La parte principal de esta tesis consiste en el diseño, la implementación y la evaluación de tres módulos nóveles de propósito general para multirotores que utilizan métodos basados en visión para tomar decisiones de navegación. El primer módulo propuesto es un controlador de navegación para multirotores que fue diseñado para conseguir un vuelo fiable en entornos sin disponibilidad de señal GPS por medio del uso de la visión por computador. Con este objetivo en mente, la estimación de velocidad basada en el flujo óptico del suelo fue seleccionada para explorar las implicaciones de la utilización de métodos basados en la visión como principal sistema de medida para la retroalimentación del controlador. Fijar y respetar una limitación en la velocidad de navegación fue identificada como una manera fiable de asegurar que la estimación de velocidad basada en flujo óptico no falle. El controlador propuesto tiene en cuenta las limitaciones de velocidad establecidas por el uso de un método de estimación de la posición basado en odometría visual. Esta capacidad del controlador de respetar una velocidad máxima preconfigurada ha sido utilizada con éxito para realizar investigación en la navegación descentralizada simultánea de múltiples drones. Una capacidad comúnmente buscada en drones, es la realización de un seguimiento visual y la estabilización del vuelo mientras se adquieren imágenes de un objeto de interés. El segundo módulo propuesto en esta tesis es una arquitectura para el seguimiento en vuelo de objetos. Esta arquitectura fue desarrollada con el propósito de explorar el potencial de los métodos modernos de seguimiento visual basados en aprendizaje de máquina, o “machine learning” en inglés. Este tipo de algoritmos tienen como objeto determinar la posición de un objeto en el flujo de imágenes. Los métodos de seguimiento visual tradicionales funcionan correctamente en las condiciones para las cuales fueron originalmente diseñados, pero a menudo fallan en situaciones reales. La solución propuesta ha demostrado que los métodos actuales de seguimiento visual basados en aprendizaje de máquina permiten conseguir un seguimiento en vuelo fiable de una gran variedad de objetos. El despliegue rápido de drones autónomos en entornos desconocidos es todavía un problema actual en investigación. Uno de los principales desafíos es el cálculo de trayectorias que permitan una navegación rápida en dichos entornos. Con este problema en mente, el tercer módulo propuesto permite la generación automática de trayectorias seguras en entornos abarrotados de obstáculos. Este módulo ha sido probado utilizando mapas adquiridos en tiempo real a bordo del dron mediante el uso de algoritmos de fotogrametría basados en la visión por computador. Aun usando navegación basada en GPS, mediante la realización de experimentos se ha mostrado que el despliegue rápido de drones es factible incluso utilizando solo el ordenador y los sensores a bordo del dron. Parte de los módulos desarrollados han sido liberados en código abierto, contribuyendo al entorno de desarrollo “Aerostack” de código abierto del CVAR, previamente CVG, (UPM). Los módulos propuestos en esta tesis han sido repetidamente probados con éxito en experimentos fuera del laboratorio y en eventos públicos, demostrando su fiabilidad y potencial, y promoviendo su evaluación en diferentes escenarios. ----------ABSTRACT---------- The aim of this thesis is to attain reliable vision-based navigation and explore the potential of state of the art Computer Vision algorithms in Aerial Robotics, and specifically for multirotor drones. Since digital cameras can potentially provide a vast amount of information to the robot, are less expensive than their alternatives and are very lightweight, vision-based estimation methods are very promising for the development of civilian applications for drones. The main part of this thesis consists on the design, implementation and evaluation of three novel general purpose modules for multirotors that utilize visionbased methods to make navigation decisions. The first proposed module is a novel multirotor navigation controller that was designed to achieve reliable flight in GPS-denied environments by using Computer Vision. With this objective in mind, ground optical flow speed estimation was selected to explore the implications of using vision-based methods as the main measurement feedback for the controller. Setting and enforcing a speed limitation during navigation was identified as a reliable way to ensure that the optical flow speed estimation method does not malfunction. The proposed controller takes into account the speed limitations established by the vision-based odometry estimation method. In addition, by leveraging this capability of the controller to ensure navigation respecting the preconfigured maximum speed, it has also been successfully utilized to research on decentralized multi-drone navigation. A common objective for drones is to be able to fly and stabilize looking at and close-by to an object of interest. The second module proposed in this thesis is a novel vision-based object tracking architecture for multirotor drones, which was designed to explore the reliability of machine learning based visual trackers to provide feedback to an object following controller. Visual trackers have the purpose to determine the position of an object in an image stream and are, therefore, good candidates to achieve this objective. However traditional visual tracking methods, though very effective in the specific conditions for which they were designed, have the drawback of not generalizing well to the myriad of different visual appearances that real objects exhibit. The proposed architecture has demonstrated that current machine learning based visual tracking algorithms can reliably provide feedback to a visual servoing controller. The fast deployment of autonomous drones in unknown environments is still an ongoing research problem. One of the main challenges to achieve it is the calculation of trajectories that allow fast navigation in such areas. With this problem in mind, the third proposed module is a trajectory planner that delivers smooth safe trajectories in relatively cluttered environments. The algorithm has been tested experimentally on maps obtained using an on-board real-time capable Computer Vision mapping method. Although other modules would be needed to decide the exact navigation objectives of the drone, using this planner we have shown that it is feasible to deploy drones in unknown outdoors environments, by leveraging the good qualities of maps obtained using state of the art photogrammetry methods. Part of these modules have been released as open-source, contributing to the CVAR’s, previously CVG, (UPM) Open-Source Aerial Robotics Framework “Aerostack”, which main purpose is enabling drone civilian applications. The proposed modules have been repeatedly evaluated with successful results in several out-of-the-lab demonstrations, therefore showing their potential and good qualities. The utilization of the proposed modules in public events has promoted their further testing in different settings and applications, e. g. indoors and outdoors flight, narrow corridors, passage through windows and landing in different conditions.",,Vision-Based Autonomous Navigation of Multirotor Micro Aerial Vehicles,NO,,,,YES,,,,,NO,,
S2476,2,Forward,webpage,,,,,https://www.proquest.com/openview/6d9aeac25328589cc3e48584021023f1/1?pq-origsite=gscholar&cbl=2026366&diss=y,"Explore millions of resources from scholarly journals, books, newspapers, videos and more, on the ProQuest Platform.",,Planeamento de Trajetória Para Operações de Busca e Salvamento com UAVs - ProQuest,NO,,,,NO,,,,,NO,,
S2477,2,Forward,thesis,2018,"Kancir, Pierre",,,https://tel.archives-ouvertes.fr/tel-02347005,"Méthodologie de Conception de Système Multi-robots : de la Simulation à la Démonstration. Les systèmes multi-robots sont des systèmes complexes mais prometteurs dans de nombreux domaines, les nombreux travaux académiques dans ce domaine attestent de l'importance qu'ils auront dans le futur. Cependant, si ces promesses sont réelles, elles ne sont pas encore réalisées comme en témoigne le faible nombre de systèmes multi-robots utilisés dans l'industrie. Pourtant des solutions existent afin de permettre aux industriels et académiques de travailler ensemble à cette problématique. Nous proposons un état de l'art et les défis associés à la conception des systèmes multi-robots d'un point de vue académique et industriel. Nous présentons ensuite trois contributions pour la conception de ces systèmes : une réalisation d'un essaim hétérogène en tant que cas d'étude pratique afin de mettre en évidence les obstacles de conception. La modification d'un autopilote et d'un simulateur pour les rendre compatibles aux développements des systèmes multi-robots. La démonstration d'un outil d'évaluation sur la base des deux contributions précédentes. Enfin, nous concluons sur la portée de ces travaux et des perspectives à venir sur la base de l'open source",,Méthodologie de conception de système multi-robots : de la simulation à la démonstration,NO,,,,YES,,,,,NO,,
S2478,2,Forward,webpage,,,,,http://www.cqvip.com/qk/98245x/201511/74688472504849534949484852.html,,,移动机器人三维地图创建的仿真研究-【维普官方网站】-www.cqvip.com-维普网,NO,,,,NO,,,,,NO,,
S2479,2,Forward,thesis,2017,"Puerta, Jesús Pestana",,,https://dialnet.unirioja.es/servlet/tesis?codigo=156073,"Autoría: Jesús Pestana Puerta. Dirección de la Tesis: Pascual Campoy Cervera, Sergio Domínguez Cabrerizo. Lectura: Universidad Politécnica de Madrid en 2017. Tesis doctoral en Dialnet.",,Vision-Based Autonomous Navigation of Multirotor Micro Aerial Vehicles,NO,,,,YES,,,,,NO,,
S2480,2,Forward,thesis,2015,"Sanz Muñoz, David; Barrientos Cruz, Antonio; Cerro Giner, Jaime del",,,https://oa.upm.es/37224/,"La robótica ha evolucionado exponencialmente en las últimas décadas, permitiendo a los sistemas actuales realizar tareas sumamente complejas con gran precisión, fiabilidad y velocidad. Sin embargo, este desarrollo ha estado asociado a un mayor grado de especialización y particularización de las tecnologías implicadas, siendo estas muy eficientes en situaciones concretas y controladas, pero incapaces en entornos cambiantes, dinámicos y desestructurados. Por eso, el desarrollo de la robótica debe pasar por dotar a los sistemas de capacidad de adaptación a las circunstancias, de entendedimiento sobre los cambios observados y de flexibilidad a la hora de interactuar con el entorno. Estas son las caracteristicas propias de la interacción del ser humano con su entorno, las que le permiten sobrevivir y las que pueden proporcionar a un sistema inteligencia y capacidad suficientes para desenvolverse en un entorno real de forma autónoma e independiente. Esta adaptabilidad es especialmente importante en el manejo de riesgos e incetidumbres, puesto que es el mecanismo que permite contextualizar y evaluar las amenazas para proporcionar una respuesta adecuada. Así, por ejemplo, cuando una persona se mueve e interactua con su entorno, no evalúa los obstáculos en función de su posición, velocidad o dinámica (como hacen los sistemas robóticos tradicionales), sino mediante la estimación del riesgo potencial que estos elementos suponen para la persona. Esta evaluación se consigue combinando dos procesos psicofísicos del ser humano: por un lado, la percepción humana analiza los elementos relevantes del entorno, tratando de entender su naturaleza a partir de patrones de comportamiento, propiedades asociadas u otros rasgos distintivos. Por otro lado, como segundo nivel de evaluación, el entendimiento de esta naturaleza permite al ser humano conocer/estimar la relación de los elementos con él mismo, así como sus implicaciones en cuanto a nivel de riesgo se refiere. El establecimiento de estas relaciones semánticas -llamado cognición- es la única forma de definir el nivel de riesgo de manera absoluta y de generar una respuesta adecuada al mismo. No necesariamente proporcional, sino coherente con el riesgo al que se enfrenta. La investigación que presenta esta tesis describe el trabajo realizado para trasladar esta metodología de análisis y funcionamiento a la robótica. Este se ha centrado especialmente en la nevegación de los robots aéreos, diseñando e implementado procedimientos de inspiración humana para garantizar la seguridad de la misma. Para ello se han estudiado y evaluado los mecanismos de percepción, cognición y reacción humanas en relación al manejo de riesgos. También se ha analizado como los estímulos son capturados, procesados y transformados por condicionantes psicológicos, sociológicos y antropológicos de los seres humanos. Finalmente, también se ha analizado como estos factores motivan y descandenan las reacciones humanas frente a los peligros. Como resultado de este estudio, todos estos procesos, comportamientos y condicionantes de la conducta humana se han reproducido en un framework que se ha estructurado basadandose en factores análogos. Este emplea el conocimiento obtenido experimentalmente en forma de algoritmos, técnicas y estrategias, emulando el comportamiento humano en las mismas circunstancias. Diseñado, implementeado y validado tanto en simulación como con datos reales, este framework propone una manera innovadora -tanto en metodología como en procedimiento- de entender y reaccionar frente a las amenazas potenciales de una misión robótica. ABSTRACT Robotics has undergone a great revolution in the last decades. Nowadays this technology is able to perform really complex tasks with a high degree of accuracy and speed, however this is only true in precisely defined situations with fully controlled variables. Since the real world is dynamic, changing and unstructured, flexible and non context-dependent systems are required. The ability to understand situations, acknowledge changes and balance reactions is required by robots to successfully interact with their surroundings in a fully autonomous fashion. In fact, it is those very processes that define human interactions with the environment. Social relationships, driving or risk/incertitude management... in all these activities and systems, context understanding and adaptability are what allow human beings to survive: contrarily to the traditional robotics, people do not evaluate obstacles according to their position but according to the potential risk their presence imply. In this sense, human perception looks for information which goes beyond location, speed and dynamics (the usual data used in traditional obstacle avoidance systems). Specific features in the behaviour of a particular element allows the understanding of that element’s nature and therefore the comprehension of the risk posed by it. This process defines the second main difference between traditional obstacle avoidance systems and human behaviour: the ability to understand a situation/scenario allows to get to know the implications of the elements and their relationship with the observer. Establishing these semantic relationships -named cognition- is the only way to estimate the actual danger level of an element. Furthermore, only the application of this knowledge allows the generation of coherent, suitable and adjusted responses to deal with any risk faced. The research presented in this thesis summarizes the work done towards translating these human cognitive/reasoning procedures to the field of robotics. More specifically, the work done has been focused on employing human-based methodologies to enable aerial robots to navigate safely. To this effect, human perception, cognition and reaction processes concerning risk management have been experimentally studied; as well as the acquisition and processing of stimuli. How psychological, sociological and anthropological factors modify, balance and give shape to those stimuli has been researched. And finally, the way in which these factors motivate the human behaviour according to different mindsets and priorities has been established. This associative workflow has been reproduced by establishing an equivalent structure and defining similar factors and sources. Besides, all the knowledge obtained experimentally has been applied in the form of algorithms, techniques and strategies which emulate the analogous human behaviours. As a result, a framework capable of understanding and reacting in response to stimuli has been implemented and validated.",,Cognitive risk perception system for obstacle avoidance in outdoor mUAV missions,NO,,,,YES,,,,,NO,,
S2481,2,Forward,conferencePaper,2021,"Sadhu, Arup Kumar; Shukla, Shubham; Sortee, Sarvesh; Ludhiyani, Mohit; Dasgupta, Ranjan",2021 International Conference on Unmanned Aircraft Systems (ICUAS),10.1109/ICUAS51884.2021.9476861,,"The paper proposes an approach to learn and plan simultaneously in a partially known environment. The proposed framework exploits the Voronoi bias property of Rapidly exploring Random Tree* (RRT*), which balances the exploration-exploitation in Reinforcement Learning (RL). RL is employed to learn policy (sequence of actions), while RRT* is planning simultaneously. Once policy is learned for a fixed start and goal, repeated planing for identical start and goal can be avoided. In case of any environmental uncertainties, RL dynamically adapts the learned policy with the help of RRT*. Apparently, both learning and planning complement each other to handle environmental uncertainties dynamically in real-time and online. Interestingly, more the proposed algorithm runs, its efficiency increases in terms of planning time and uncertainty handling capability over the contender algorithm (i.e., RRT*). Simulation results are shown to demonstrate the efficacy of the proposed approach.",Heuristic algorithms; Planing; Planning; Real-time systems; Reinforcement learning; Simulation; Uncertainty,Simultaneous Learning and Planning using Rapidly Exploring Random Tree and Reinforcement Learning,,NO,,,YES,,,,,NO,,
S2482,2,Forward,journalArticle,2018,"Silva, Joana; Silva, A. Martins da; Coelho, Luís",U.Porto Journal of Engineering,10.24840/2183-6493_004.001_0001,https://journalengineering.fe.up.pt/index.php/upjeng/article/view/2183-6493_004.001_0001,"The processing of motor, sensory and cognitive information by the brain can result in changes of the electroencephalogram (EEG) by Event Related Desynchronization (ERD) or Event Related Synchronization (ERS). The first one concerns a decrease in the amplitude of a rhythmic activity while the second corresponds to its increase. The analysis of these two phenomena in specific frequency bands - alpha (8-13 Hz) and beta (14-30 Hz) - allows the understanding of the cerebral activity. This study focuses on the quantification of cerebral activity by determining the ERD and ERS on the referred band, induced by self-paced movements, by using EEGLAB and MATLAB tools. This was achieved by the creation of a new and automatic quantification algorithm. The results indicate that a greater desynchronization of the signal is accompanied by a decrease in the amplitude of the same. As a conclusion, the cerebral activity varies in terms of synchronization and desynchronization among certain frequency bands in several zones, according to the tasks performed.",Alfa Band; Beta Band; Electroencephalogram (EEG); Event Related Desynchronization (ERD); Event Related Synchronization (ERD); Self-Pacing,Quantification of EEG Brain Activity in the Self-Paced Regime,,NO,,,YES,,,,,NO,,
S2483,2,Forward,journalArticle,2022,"Huang, Haiming; Wu, Di’en; Liang, Zehao; Sun, Fuchun; Dong, Mingjie",Robotica,10.1017/S0263574722000972,https://www.cambridge.org/core/journals/robotica/article/abs/virtual-interaction-and-manipulation-control-of-a-hexacopter-through-hand-gesture-recognition-from-a-data-glove/B0A7208EC57D1FF87686E65626699C89,"The purpose of this study is to realize virtual interaction and manipulation control of a hexacopter based on hand gesture recognition from a designed data glove, to provide an intuitive and visual real-time simulation system for flight control algorithm verification and external control equipment testing. First, the hand gesture recognition from a designed data glove is studied, which can recognize different actions, such as mobile ready, grab, loosen, landing, take-off, and hover. Then, the design of virtual simulation system for hexacopter capture is completed, with the model design of hexacopter and manipulator, and the simulation software design with  CoppeliaSimCoppeliaSimCoppeliaSim . Finally, virtual simulation experiment of hexacopter grasping and virtual flight control experiment based on data glove are tested, respectively, and quantitatively described. The overall recognition rate is 84.3%, indicating that the data glove produced has the ability to recognize gestures, but its recognition performance is not superior. In gesture recognition, the recognition rate of static gestures is relatively higher than that of dynamic gestures. Among the static gestures, the hover gesture has the highest recognition rate. The average correct rate of static gestures can reach 94%. The lowest recognition rate of dynamic gestures is upward movement, and the average recognition rate of dynamic gestures is 76.1%. The research can be used to remotely operate hexacopter using a data glove in the future and improve the control performance through virtual interaction and manipulation simulation before actual application.",CoppeliaSim; data glove; hand gesture recognition; hexacopter; virtual simulation control,Virtual interaction and manipulation control of a hexacopter through hand gesture recognition from a data glove,,NO,,,YES,,,,,NO,,
S2484,2,Forward,webpage,,"Smith, Andrew",,,,,,Non-Myopic Distributed Coordination and Planning for Robotic Teams,NO,,,,NO,,,,,NO,,
S2485,2,Forward,conferencePaper,2022,"Aspragkathos, Sotirios N.; Karras, George C.; Kyriakopoulos, Kostas J.",2022 30th Mediterranean Conference on Control and Automation (MED),10.1109/MED54222.2022.9837275,,"In this paper, an Image-based Visual Servo (IBVS) Control strategy for the autonomous surveillance of coastlines using an octocopter aerial vehicle is proposed. The implemented strategy is focused on the vision-based detection and tracking of dynamic coastlines and in the presence of waves while flying in low altitudes. For this purpose, a Deep Neural Network (DNN) for the detection of the coastline is employed. The DNN is ac-companied by an analytical formulation of an Extended Kalman Filter (EKF), which considers an approximate periodical wave motion model to provide an online estimate of the coastline motion directly in image space. The estimated feedback is provided to an appropriately formulated IBVS tracking controller for the autonomous guidance of the octocopter along the coastline, ensuring the latter is always kept inside the camera’s field of view. The efficacy of the proposed scheme is demonstrated via a set of comparative outdoor experiments using an octocopter flying along the coastline on various weather and beach settings.",Estimation; Neural networks; Surveillance; Tracking; Trajectory planning; Visual servoing; Visualization,A Visual Servoing Strategy for Coastline Tracking using an Unmanned Aerial Vehicle,,NO,,,YES,,,,,NO,,
S2486,2,Forward,webpage,,,,,https://www.proquest.com/openview/a1b1f454542fc6281d9b3d716e67f941/1?pq-origsite=gscholar&cbl=18750&diss=y,"Explore millions of resources from scholarly journals, books, newspapers, videos and more, on the ProQuest Platform.",,Autonomous Aerial Search and Mapping of Unknown Built Environments - ProQuest,NO,,,,NO,,,,,NO,,
S2487,2,Forward,conferencePaper,2022,"Zaier, Mayssa; Miled, Wided; Akhloufi, Moulay A.","Autonomous Systems: Sensors, Processing and Security for Ground, Air, Sea and Space Vehicles and Infrastructure 2022",10.1117/12.2619250,https://www.spiedigitallibrary.org/conference-proceedings-of-spie/12115/121150C/Vision-based-UAV-tracking-using-deep-reinforcement-learning-with-simulated/10.1117/12.2619250.full,"In recent years, Unmanned Aerial Vehicles (UAVs) have seen significant technological advances, with a wide range of applications. However, their arbitrary uses continue to pose a great threat to public safety and privacy. This has sparked the interest of the research community, which is developing solutions based on Artificial Intelligence (AI) to detect and track in real time these unmanned flying objects in sensitive areas. In this paper, we propose a vision-based Deep Reinforcement Learning (DRL) algorithm to track drones in various simulated scenarios, within the Microsoft AirSim simulator. The proposed approach is promising and achieves high tracking accuracy in different realistic simulated environments. It allowed to process videos at high frame rates and achieved a mean average precision (mAP) above 80%.",,Vision-based UAV tracking using deep reinforcement learning with simulated data,,NO,,,YES,,,,,NO,,
S2488,2,Forward,journalArticle,2022,"Sun, Yufeng; Ma, Ou",Drones,10.3390/drones6040087,https://www.mdpi.com/2504-446X/6/4/87,"Visual inspections of aircraft exterior surfaces are required in aircraft maintenance routines for identifying possible defects such as dents, cracks, leaking, broken or missing parts, etc. This process is time-consuming and is also prone to error if performed manually. Therefore, it has become a trend to use mobile robots equipped with visual sensors to perform automated inspections. For such a robotic inspection, a digital model of the aircraft is usually required for planning the robot’s path, but a CAD model of the entire aircraft is usually inaccessible to most maintenance shops. It is very labor-intensive and time-consuming to generate an accurate digital model of an aircraft, or even a large portion of it, because the scanning work still must be performed manually or by a manually controlled robotic system. This paper presents a two-stage approach of automating aircraft scanning with an unmanned aerial vehicle (UAV) or autonomous drone equipped with a red–green–blue and depth (RGB-D) camera for detailed inspection or for reconstructing a digital replica of the aircraft when its original CAD model is unavailable. In the first stage, the UAV–camera system follows a predefined path far from the aircraft surface (for safety) to quickly scan the aircraft and generate a coarse model of the aircraft. Then, an optimal scanning path (much closer to the surface) in the sense of the shortest flying distance for full coverage is computed based on the coarse model. In the second stage, the UAV–camera system follows the computed path to closely inspect the surface for possible defects or scan the surface for generating a dense and precise model of the aircraft. We solved the coverage path planning (CPP) problem for the aircraft inspection or scanning using a Monte Carlo tree search (MCTS) algorithm. We also implemented the max–min ant system (MMAS) strategy to demonstrate the effectiveness of our approach. We carried out a digital experiment and the results showed that our approach can scan 70% of the aircraft surface within one hour, which is much more efficient than manual scanning.",3D digitizing; aircraft inspection; aircraft scanning; optimization; path planning; UAV,Automating Aircraft Scanning for Inspection or 3D Model Creation with a UAV and Optimal Path Planning,,NO,,,YES,,,,,NO,,
S2489,2,Forward,bookSection,,"Razzak, Md Abdur; Damodaran, M.",AIAA AVIATION 2022 Forum,,https://arc.aiaa.org/doi/abs/10.2514/6.2022-4018,View Video Presentation: https://doi.org/10.2514/6.2022-4018.vidThe integration of a high-fidelity computational fluid dynamics (CFD) coupled with a six-degree of freedom rigid-body dynamics (6-DOF) and a flight controller model form the basis of a computational multi-physics model to model the real-time flight dynamics and control of unmanned aerial vehicles (qUAV) is addressed in this work. The ambient unsteady aerodynamic flowfield to model the operating environment of the qUAV is computed using a finite volume Navier-Stokes flow solver. The 6-DOF dynamic fluid body interaction (DFBI) equations are coupled with the CFD solver to obtain the positions and orientation (Euler Angles) of the qUAV to enable its controlled virtual flight. The corrected thrusts from each rotor blade to the qUAV at a given orientation serve as inputs to the flight controller which is integrated to the aero-mechanical model obtain the speeds for the qUAV for the desired maneuver. The control is achieved by controlling the angular speeds of its four propellers (rotors). A Proportional-Integral-Derivative (PID) controller is used to obtain the controlled trajectory of the qUAV by interfacing with the flow solver. The model is used in selected qUAV maneuvers to simulate and to gauge its performance during takeoff from the ground to hover at an altitude and also to assess the possibility of its sustained flight in the event of a rotor malfunction during the flight.,,Computational Multiphysics Platform for Virtual Controlled Flight of Quadrotor Unmanned Aerial Vehicles,,,,,NO,,,,,NO,,
S2490,2,Forward,conferencePaper,2017,"Viña, Carlos; Morin, Pascal",2017 11th International Workshop on Robot Motion and Control (RoMoCo),10.1109/RoMoCo.2017.8003895,,"We propose a model-based approach to obtain local pose estimates of micro aerial vehicles (MAVs), with respect to electric towers, using 2D laser scanners. A simple planar model for the body of an electric tower is presented, which is used in an iterative closest point (ICP) framework to register incoming laser scans. This is complemented with attitude estimates from IMU measurements to obtain a complete 3D pose estimation. Finally, a velocity observer is proposed to provide speed estimates with a view to feedback control. Validations based on simulations are presented.",2D laser scanner; airborne laser scanning; Laser modes; MAV; Measurement by laser beam; model-based pose estimation; Poles and towers; Sensors; Solid modeling; Three-dimensional displays; Two dimensional displays,Model-based pose estimation on-board MAVs equipped with 2D laser scanners for the automatic inspection of electric towers,,NO,,,YES,,,,,NO,,
S2491,2,Forward,journalArticle,2022,"Delgado-Reyes, Gustavo; Valdez-Martínez, Jorge Salvador; Hernández-Pérez, Miguel Ángel; Pérez-Daniel, Karina Ruby; García-Ramírez, Pedro Javier",Mathematics,10.3390/math10122032,https://www.mdpi.com/2227-7390/10/12/2032,"The interaction of digital systems with dynamic systems requires synchrony and the accomplishment of time constrains, so the simulation of physical processes needs an implementation by means of real-time systems (RTS). However, as it can be expected, every simulation and/or implementation might demand too many computational resources, surpassing the capacity of the processor used by computational systems. This is the reason for the need to perform a temporary computational complexity analysis based on the study of the behavior of the execution times of the implemented simulation. In this regard, the Real-Time Operating Systems (RTOS) feature time managing tools, which allow their precise measurement and the establishment of scheduling criteria in process execution. Therefore, this research proposes accomplishing a temporary computational complexity analysis of the real-time simulation by an embedded system (ES) of an unmanned aerial vehicle (UAV) propelled by four rotors. Derived from this analysis, formal definitions are elaborated and proposed, which establish a close relationship between the temporary computational complexity and typical real-time temporary constraints. To the best of the author’s knowledge, the definitions presented in this article have not been reported in the literature. Furthermore, to perform the temporary computational complexity analysis of the UAV, the mathematical modeling based on the Euler–Lagrange approach is presented in detail. Finally, simulations were performed using a real-time system implemented on the Embedded Computer System (ECS) Raspberry Pi 2 Model B+, in order to validate the suggested definitions.",embedded computers; real-time simulation; real-time systems; temporary computational complexity; UAV modeling,Quadrotor Real-Time Simulation: A Temporary Computational Complexity-Based Approach,,NO,,,YES,,,,,NO,,
S2492,2,Forward,journalArticle,2019,"Esfahlani, Shabnam Sadeghi",Journal of Industrial Information Integration,10.1016/j.jii.2019.04.006,https://linkinghub.elsevier.com/retrieve/pii/S2452414X18300773,"This paper proposes the development of a system incorporating inertial measurement unit (IMU), a consumergrade digital camera and a fire detection algorithm simultaneously with a nano Unmanned Aerial Vehicle (UAV) for inspection purposes. The video streams are collected through the monocular camera and navigation relied on the state-of-the-art indoor/outdoor Simultaneous Localisation and Mapping (SLAM) system. It implements the robotic operating system (ROS) and computer vision algorithm to provide a robust, accurate and unique interframe motion estimation. The collected onboard data are communicated to the ground station and used the SLAM system to generate a map of the environment. A robust and efficient re-localization was performed to recover from tracking failure, motion blur, and frame lost in the data received. The fire detection algorithm was deployed based on the color, movement attributes, temporal variation of fire intensity and its accumulation around a point. The cumulative time derivative matrix was utilized to analyze the frame-by-frame changes and to detect areas with high-frequency luminance flicker (random characteristic). Color, surface coarseness, boundary roughness, and skewness features were perceived as the quadrotor flew autonomously within the clutter and congested area. Mixed Reality system was adopted to visualize and test the proposed system in a physical environment, and the virtual simulation was conducted through the Unity game engine. The results showed that the UAV could successfully detect fire and flame, autonomously fly towards and hover around it, communicate with the ground station and simultaneously generate a map of the environment. There was a slight error between the real and virtual UAV calibration due to the ground truth data and the correlation complexity of tracking real and virtual camera coordinate frames.",,Mixed reality and remote sensing application of unmanned aerial vehicle in fire and smoke detection,,NO,,,YES,,,,,NO,,
S2493,2,Forward,conferencePaper,2019,"Mejias, Luis; Campoy, Pascual",2019 International Conference on Unmanned Aircraft Systems (ICUAS),10.1109/ICUAS.2019.8797954,,"This paper presents an approach to visually control a quadrotor relative to known landmarks. Relative positioning is achieved here by a new decoupled approach to image based visual servoing (IBVS), in which rotational and translational coupling is minimised by introducing a decay function that is proportional to feature location in the image. Simulations and experiments were conducted to validate the proposed method. Results show that our method has benefits over standard decoupled IBVS by ensuring smoother trajectories in the image plane as well as in task space, minimising the risk of features leaving the image plane.",Cameras; Navigation; Task analysis; Three-dimensional displays; Trajectory; Visual servoing; Visualization,Visual Controllers for Relative Positioning in Indoor Settings,,NO,,,YES,,,,,NO,,
S2494,2,Forward,journalArticle,,"Hardes, Tobias; Logan, Dalisha; Pritom, Touhid Hossain; Sommer, Christoph; Dresden, TU",,,,"With the trend towards smart cities, the use of Unmanned Aerial Vehicles (UAVs) is becoming more and more diverse. An economical and insightful way to study the use of UAVs in cities is through the utilization of computer simulations. However, currently available simulators are only of limited use to investigate such scenarios: often they have been developed for a dedicated use case, can only handle single UAVs, or the software was not made available with an open license. In this paper, we present AirMobiSim, a modular and microscopic UAV simulation framework, which is available under a GPLv2 license. AirMobiSim provides the basis for the creation of kinematic and energy models for different UAV types. It can support an arbitrary number of UAVs and can be coupled with other simulators via open interfaces, for example to examine systems using wireless communication between UAVs. We furthermore present our approach for model-building and show that AirMobiSim can already accurately reproduce existing work. We also highlight current limitations and show prospects for future work.",,Towards an Open Source Fully Modular Multi Unmanned Aerial Vehicle Simulation Framework,,,,,NO,,,,,NO,,
S2495,2,Forward,conferencePaper,2022,"Hematulin, Warunyu; Kamsing, Patcharin; Torteeka, Peerapong; Somjit, Thanaporn; Phisannupawong, Thaweerath; Jarawan, Tanatthep",2022 24th International Conference on Advanced Communication Technology (ICACT),10.23919/ICACT53585.2022.9728782,,"Multiple motion planning plays an essential role in several vehicle motions. This paper proposes a cooperative method between the Line of Sight techniques and the Bézier curve, applying this to motion planning for unmanned aerial vehicles. The experiment is implemented using the AirSim plugin on Unreal Engine 4. The results of the proposed method are compared with those for the conventional Line of Sight techniques to control multiple unmanned aerial vehicles. The results illustrate that the proposed method takes more time to process than the conventional one. However, the proposed method can reach a higher performance by addressing the target unmanned aerial vehicles and the pre-defining path more than the conventional method does, which is shown in all three simulation cases.",AirSim; Autonomous aerial vehicles; Bézier curve; Communications technology; Engines; Guidance Law; Industries; LOS(Line-of-Sight); motion planning; Multiple UAVs; Planning; Process control; Software,Cooperative Motion Planning for Multiple UAVs via the Bézier Curve Guided Line of Sight Techniques,,NO,,,YES,,,,,NO,,
S2496,2,Forward,conferencePaper,2021,"Deeb, Amy; Pan, Ya-Jun; Seto, Mae L.",2021 IEEE 17th International Conference on Automation Science and Engineering (CASE),10.1109/CASE49439.2021.9551623,,"Inspired by the application of unmanned aerial vehicles to ship mapping and navigation in the Canadian Arctic, this paper proposes model-based quasi-static simultaneous localization and mapping (MBQS-SLAM). It extends the authors' earlier work on model-based dynamic SLAM, to the specific challenges of marine Arctic environments where landmarks move at speeds that cannot be detected in consecutive observations - defining quasi-static motion. After developing model-based quasi-static factors and the MBQS-SLAM algorithm, encouraging performance is shown for both simulations and laboratory experiments in quasi-static environments.",Arctic; Dynamics; Heuristic algorithms; Laboratories; Navigation; Simultaneous localization and mapping; Unmanned aerial vehicles,Model-based Quasi-static SLAM in Unstructured Dynamic Environments,,NO,,,YES,,,,,NO,,
S2497,2,Forward,journalArticle,2015,"Babu, Vignesh",,,https://DalSpace.library.dal.ca//handle/10222/59144,"Unmanned aerial vehicles commercially called quadcopters or drones have become  increasingly popular over recent years, delving into wide range of fields from medicine  for providing immediate health care or in agriculture for locating damaged crops using  special sensors to being used in quarries for 3d mapping.    We focus on the application of drones in adaptive long term tracking of an object-of-interest  and following it with necessary collision avoidance. For this we have implemented a tracking  framework called TLD, employing an integrated stereo camera on-board the commercial  drone Spiri as the sensor to perform long-term tracking of a target object and use the depth  map generated from the disparity of the stereo camera to maintain necessary distance from  the target. This is built over the ROS framework. We examine and demonstrate this design  in real-time on a commercial drone with monocular camera and in simulation on a model   drone integrated with stereo camera. We further refined the tracking process by remodeling  TLDs tracker to work with SIFT features supplemented by depth information.    We present the evaluation results to show the improvements achieved by our algorithm to   autonomously maneuver the drone in making smooth and rapid transitions and then provide  comparisons to show improved tracking resilience against modest change in object appearance  immediately following system initialization.",,ADAPTIVE LONG TERM TRACKING AND AUTONOMOUS FOLLOWING USING STEREO-CAMERA OF AN UNMANNED AERIAL VEHICLE WITH COLLISION AVOIDANCE,,NO,,,YES,,,,,NO,,
S2498,2,Forward,thesis,2021,"Shrit, Omar; Martin, Steven",,,https://www.theses.fr/2021UPASG108,"Dans cette thèse, nous étudions la conception d’un contrôleur décentralisé pour un ensemble de quadrotors. Les quadrotors sont organisés en leader et suiveurs. Le leader est piloté par l’homme, tandis que les suiveurs utilisent le contrôleur décentralisé pour suivre le leader. Les suiveurs sont autonomes et n’ont pas conscience du comportement du leader. La nouveauté de cette thèse est de s’appuyer sur des capteurs peu coûteux tels que des modules WiFi pour estimer les distances vers les quadrotors voisins. Afin de concevoir le contrôleur décentralisé, l’apprentissage itératif est utilisé et combiné à un apprentissage supervisé et par imitation, à travers plusieurs phases, notamment la collecte de journaux, la formation de modèles avancés et la conception d’un contrôleur sur celui-ci. Ensuite, le contrôleur est intégré dans les suiveurs, les rendant autonomes. Le principal avantage des méthodes d’apprentissage est de déplacer le fardeau de l’optimisation de l’étape des tests en ligne à l’étape de la collecte des données. Par conséquent, cette approche convient aux robots Commerical Of The Shelf (COTS) tels que les micro et nano quadrotors qui ne disposent pas de ressources de calcul considérables à bord. Nos méthodes ont été validées à l’aide de MagicFlock, un framework de construction maison pour essaim de quadrotors qui étend RotorS, un framework de simulation Software In The Loop (SITL) construit sur le simulateur basé sur la physique Gazebo. Nos résultats ont démontré que le comportement de l’essaim est obtenu lorsqu’il est intégré à un ensemble de quadrotors à l’intérieur de Gazebo en utilisant les méthodes d’apprentissage itératif proposées avec une performance similaire à un modèle d’essaim qui utilise les positions absolues des robots.",Apprentissage interactif; Apprentissage itératif; Apprentissage par imitation; Apprentissage supervisé (intelligence artificielle); Commande intelligente; Conception de contrôleur; Contrôleur décentralisé; Controller design; Decentralized controller; Drones; Flotte de quadrotors; Imitation learning; Iterative learning; Leader suiveur; Leader-Follower; Quadrotors swarm; Traitement réparti,Automatic coordination of a quadcopters fleet using ad hoc communications,NO,,,,YES,,,,,NO,,
S2499,2,Forward,webpage,,,,,https://www.proquest.com/openview/cb185d2728f0fb739dd193f89cea252e/1?pq-origsite=gscholar&cbl=18750&diss=y,"Explore millions of resources from scholarly journals, books, newspapers, videos and more, on the ProQuest Platform.",,Efficiency Based Flight Analysis for a Novel Quadcopter System - ProQuest,NO,,,,NO,,,,,NO,,
S2500,2,Forward,conferencePaper,2022,"Rocha, Lidia; Vivaldini, Kelen",2022 International Conference on Unmanned Aircraft Systems (ICUAS),10.1109/ICUAS54217.2022.9836102,,"Over the years, research has enabled robots to become more autonomous, determining their trajectories. Thus, path planning is an important area in autonomous robots. With the growing number of path planning algorithms, it is essential to have a framework capable of analyzing several algorithms in the same scenario to assess their capabilities. This paper presents Plannie, a framework to develop, simulate, benchmark, and test path planning algorithms in 2D and 3D environments in the real world. It supports many path planning algorithms, such as classic, metaheuristic, and machine learning. Furthermore, this framework offers several maps from an external database. However, it is also possible the build new maps in addition to having control, mapping, and localization techniques available for testing in a real environment. Plannie also offers planning modules that involve dynamic obstacle avoidance, coverage, traveling salesman problems, and multi-robot algorithms. Finally, we demonstrate the capability of the Plannie benchmarking several path planning algorithms in different maps. Plannie is open-source 1.",Benchmark testing; Heuristic algorithms; Location awareness; Machine learning algorithms; Metaheuristics; Three-dimensional displays; Traveling salesman problems,Plannie: A Benchmark Framework for Autonomous Robots Path Planning Algorithms Integrated to Simulated and Real Environments,,NO,,,YES,,,,,NO,,
S2501,2,Forward,journalArticle,,"Bender, Daniel",,,,,,Airborne Navigation by Fusing Inertial and Camera Data,,,,,NO,,,,,NO,,
S2502,2,Forward,conferencePaper,2017,"Paiva-Peredo, Ernesto; Soto, Juan; Ipanaqué, William; Cherre, Cesar; Yañez, Oscar; Silva, Gustavo","2017 CHILEAN Conference on Electrical, Electronics Engineering, Information and Communication Technologies (CHILECON)",10.1109/CHILECON.2017.8229696,,"Currently the use of quad-rotors that perform the navigation indoors requires large and stationary equipment such as the cameras, as well as a specific space to install these equipment and thus to track the position of the vehicle. Another disadvantage lies in the fact that the quad-rotor can only navigate in the space limited by this vision technology. This work proposes the use of an optical flow sensor and a LIDAR to develop an autonomous quadrotor, which is not confined to a fixed space, and is able to move freely recognizing the environment in which it moves.",artificial vision; Automation; Color; Hardware; Laser radar; LIDAR; navigation; Navigation; quad-rotor; Rotors,Design of the position control of a quad-rotor using optical flow sensor and LIDAR,,NO,,,YES,,,,,NO,,
S2503,2,Forward,journalArticle,2021,"Deeb, Amy",,,https://DalSpace.library.dal.ca//handle/10222/80332,"Mapping and tracking Arctic sea ice is critical to protecting the people and animals that inhabit and transit the Canadian Arctic.  Unmanned aerial vehicles (UAVs) are well suited to these activities given the vast area of interest, the remote, potentially dangerous environment, and the need to persistently capture the most current state of the map.  The scarcity of reliable global position references at high latitudes means that a UAV must localize itself within a map it is in the process of building -- a problem called Simultaneous Localization and Mapping (SLAM).  While traditional SLAM assumes all landmarks are static, UAVs in marine Arctic environments must perform persistent mapping while coping with the motion of ice masses in the dynamic environment.  This research proposes piecewise-deterministic quasi-static pose graph SLAM (PDQS-SLAM) to exploit landmark motion information during graph construction.  This will contribute to persistent mapping in a dynamic environment.     The primary contribution of this thesis is the relaxation of the static assumption inherent to traditional SLAM algorithms.  This is achieved by assigning a kinematic motion model to each landmark, proposing a new loop closure factor structure, and estimating the landmark motion alongside the UAV trajectory in the pose graph.  Applicability to a general dynamic environment is achieved by augmenting loop closure edges with a state, governed by a finite state machine (FSM), that captures the edge's behaviour over time.  This FSM captures edge behaviours during constant-velocity epochs, and across disrupting events detected using score-based structure learning.      The resulting PDQS-SLAM is validated in both simulations and laboratory experiments.  The localization and mapping performance of PDQS-SLAM in a dynamic environment including two mobile landmarks that experience events, is shown to have similar performance when compared to the baseline static SLAM in a static environment.  This demonstrates that the static assumption can be relaxed by modelling landmark motion and responding appropriately to inevitable disruptions to that motion.  This is a step towards persistent mapping by UAVs in a complex, quasi-static environment inspired by the Canadian marine Arctic.",,Persistent Mapping in Quasi-static Dynamic Environments using Unmanned Aerial Vehicles,,NO,,,YES,,,,,NO,,
S2504,2,Forward,journalArticle,2015,"Vemprala, Sai; Saripalli, Srikanth","American Helicopter Society International - 6th AHS International Specialists' Meeting on Unmanned Rotorcraft System 2015: Platform Design, Autonomy, Operator Workload Reduction and Network Centric Operations",,http://www.scopus.com/inward/record.url?scp=84969913466&partnerID=8YFLogxK,"Micro Aerial Vehicles (MAV) are becoming increasingly popular as widely applicable robotic platforms for various tasks. For effectively complementing human tasks, a strong layer of autonomy is important for the platform. Unlike ground robots, MAVs are not limited to two dimensions, but this advantage also creates additional complexity in implementing various concepts such as estimation and control as well as linking them together. This paper outlines a solution pipeline that provides an integrated and modular framework for achieving state estimation, mapping and navigation capabilities, which can be used for a complete autonomous exploration capacity on a MAV platform. The implementation was tested both in simulation and partly on a real MAV that was custom built with off-the-shelf equipment for this purpose.",,"Autonomous exploration and navigation strategies for MAVs: 6th AHS International Specialists' Meeting on Unmanned Rotorcraft System 2015: Platform Design, Autonomy, Operator Workload Reduction and Network Centric Operations",,NO,,,YES,,,,,NO,,
S2505,2,Forward,book,2020,"Wang, Min; Voos, Holger",,,,"UAV teleoperation is a demanding task, especially for amateur operators who wish to successfully accomplish their mission without collision. In this work we present an integrated 2D LIDAR based Sense-and-Avoid system which actively assists unskilled human operator in obstacle avoidance, so that the operator can focus on higher-level decisions and global objectives in UAV applications such as search and rescue, farming etc. Specifically, with our perception-assistive vehicle control design, novel adaptive virtual cushion force field (AVCFF) based avoidance strategy, and integrated sensing solution, the proposed UAV teleoperation assistance system is capable of obstacle detection and tracking, as well as automatic avoidance in complex environment where both static and dynamic objects are present. The proposed system is constructed on the basis of Hector Quadrotor open source framework [1], and its effectiveness is demonstrated and validated on a realistic simulated UAV platform in Gazebo simulations where the UAV is operated at a high speed.",,An Integrated Teleoperation Assistance System for Collision Avoidance of High-speed UAVs in Complex Environments,NO,,,,YES,,,,,NO,,
S2506,2,Forward,journalArticle,2017,"Spyker, Jamie",,10.26021/2952,https://ir.canterbury.ac.nz/handle/10092/14546,"This thesis provides extensive research and development for autonomous  control of a quadrotor system using low-cost proximity sensors. Investigations towards this are   completed in the areas of quadrotor simulation, control algorithm development and prototype system   construction.    Autonomous UAV systems can be highly useful for a variety of applications and are becoming more   widespread in modern society. Reviewing current techniques for autonomous control showed that most   commonly computer vision and GPS methods are utilized, with their key downsides being high   complexity and cost. It was proposed that creating a simplified autonomous control system using   proximity sensors could be option for reducing these problems.    The use for such a system was identified to have a potential application within the areas of   commercial inspections, where a nearby surface would constantly be present for ranging data. A   literature review was completed into current similar applications and methods providing a basis to   build off. Further background research was completed into UAV dynamics and relevant hardware for   proximity sensor tracking.    To enable the development of algorithms with use of proximity sensors, simulation software was   created. The base simulation implementation included dynamic modelling of a quadrotor and   localized control methods. Following this virtual sensors and surfaces were designed and   implemented into the simulation software. The developed software was functionally tested and worked   as expected comparing well to results of similar research.    With use of the built simulator, research was undertaken into potential control algorithms   utilizing proximity sensors. The intention of this exploration is to confirm the viability of   proximity sensor control and to provides potential algorithm options that can be extended upon in   the future. Control algorithms were developed which focused on automating a singular control   channels - for roll, pitch and yaw of a quadrotor system. Options were presented for both flat and   varied vertical surfaces proving the potential viability for such methods.    Development for a prototype system was completed that can control a UAV with autonomous isolated   channels, for the purpose of real-world testing of algorithms. The system was validated by testing   a prior control algorithm created within the simulator. The results of the functional tests   showed the the system successfully tracking a vertical surface with autonomous pitch control.   Further investigation into the performance results showed that improvements should be focused on   reducing system noise as significant fluctuations were present reducing control accuracy.    In summary, this study provides a comprehensive overview of the potential options for autonomous   control of a quadrotor using proximity sensors and proves their viability. Key contributions   include the addition of virtual sensors in a simulation environment, algorithm options for autonomous control and the development of autonomous control hardware. This investigation provides a solid basis for future researchers with wide possibilities of potential future work that could be completed.",,Development of an autonomous surface tracking quadrotor system utilizing low-cost proximity sensors,,NO,,,YES,,,,,NO,,
S2507,2,Forward,journalArticle,,"Gupta, Siddhartha; Durak, Umut; Hartmann, Sven",,,,"Aircraft are extremely complex CyberPyhsical Systems (CPS) with many component interactions to control the ﬂight and provide rich functionality. The rise in the utilization of modelling and simulation based approaches for CPS development is phenomenal. The Model-Based Design (MBD) brought the system models in the center of the development process. Simulation-based veriﬁcation established the practice for executing system models as the native mechanisms of testing. Model-in-the-loop, software-in-the-loop and hardware-in-the-loop, commonly named as x-in-the-loop testing became the main steps of simulation-based veriﬁcation. Feedback loops make the controller and plant interaction crucial in CPS. In order to create an execution of a credible test case, the plant and controller models are simulated in a scenario is in a closed-loop fashion. This is called scenario testing. Simulation scenario is a speciﬁcation for the initial and terminal conditions, signiﬁcant events and the environment as well as the major entities, their capabilities, behavior and interactions over time. Scenario development is an extensive process beginning with the stakeholders’ descriptions of the scenario and ﬁnishing with the generation of the corresponding executable speciﬁcations. This paper discusses the development and use of scenarios for testing airborne CPS.",,Simulation Scenarios for Testing Airborne Cyber-Physical Systems,,,,,NO,,,,,NO,,
S2508,2,Forward,conferencePaper,2020,"Cagara, Daniel; Dunbabin, Matthew; Rigby, Paul",2020 IEEE International Conference on Robotics and Automation (ICRA),10.1109/ICRA40945.2020.9196680,,"This paper presents a path planning methodology which enables Autonomous Underwater Vehicles (AUVs) to navigate in shallow complex environments such as coral reefs. The approach leverages prior information from an aerial photographic survey, and derived bathymetric information of the corresponding area. From these prior maps, a set of features is obtained which define an expected arrangement of objects and bathymetry likely to be perceived by the AUV when underwater. A navigation graph is then constructed by predicting the arrangement of features visible from a set of test points within the prior, which allows the calculation of the shortest paths from any pair of start and destination points. A maximum likelihood function is defined which allows the AUV to match its observations to the navigation graph as it undertakes its mission. To improve robustness, the history of observed features are retained to facilitate possible recovery from non-detectable or misclassified objects. The approach is evaluated using a photo-realistic simulated environment, and results illustrate the merits of the approach even when only a relatively small number of features can be identified from the prior map.",Cameras; Feature extraction; Image segmentation; Navigation; Robots; Sensors; Uncertainty,A Feature-Based Underwater Path Planning Approach using Multiple Perspective Prior Maps,,NO,,,YES,,,,,NO,,
S2509,2,Forward,journalArticle,2021,"Micklisch, Christian; Hilliard, Nathan; ElAarag, Hala",SIMULATION,10.1177/0037549720974753,https://doi.org/10.1177/0037549720974753,"Simulators are valuable tools to evaluate autonomous systems and methods of their control in a cost-effective and safe fashion. There are several implementations of simulators for autonomous systems in the literature. However, they provide limited capabilities in terms of the simulation of specific autonomous methods, for example control, flight, or sensor dynamics. In this paper, we present our design of a simulator for an environment that handles multiple quadrotors with their own set of sensors. We simulate three main sensors to get spatial and environmental information: an Inertial Measurement System that contains a three-axis gyroscope and an accelerometer; a pressure sensor; and ultrasonic sensors. To provide a realistic environment, we implement the thrust force, hub force, total torque, rolling moments, and equations of motion. We provide several attitude controllers, altitude controllers, obstacle detection methods, positioning methods, and flocking methods. We then present a comparison of their performance and behavior. Until the writing of this paper, there were no other simulators that provide this number of various autonomous methods. Moreover, the object-oriented design of our simulator makes it easy to support the addition of any other controller or method. Our simulator provides a comprehensive testbed for current and future methods for autonomous quadrotors.",altitude control; attitude control; Autonomous systems; flocking; obstacle detection; quadrotor; sensor simulation,Modeling and simulation of autonomous quadrotor systems and their onboard sensors,,NO,,,YES,,,,,NO,,
S2510,2,Forward,bookSection,2022,"Biundini, Iago Z.; Pinto, Milena F.; Melo, Aurelio G.; Marcato, Andre L. M.; Honorio, Leonardo M.",Frontiers in Nature-Inspired Industrial Optimization,,https://doi.org/10.1007/978-981-16-3128-3_8,"In the last years, Unmanned Aerial Vehicles (UAVs) are being increasingly used in different kinds of inspections due to their maneuverability, flexibility, and efficiency. When deployed in the inspection of large structures, such as dam and slopes, the UAV must cover the largest possible area in the most efficient way. This task is denominated Coverage Path Planning (CPP). Determining the ideal path planning in CPP applications is complex due to dynamic obstacles that cannot be modeled beforehand or when a structural problem is identified, making the UAV to re-plain its trajectory. Therefore, this research proposes the use of bio-inspired metaheuristic techniques for real-time coverage path planning. The methodology dynamically adapts the UAV trajectory when structure failures and obstacles are found. The obtained results showed that the system is efficient, and it has adequate performance for large structures inspections.",Coverage Path Planning; Inspection; Optimization; Point Cloud; UAV,Coverage Path Planning Optimization Based on Point Cloud for Structural Inspection,,NO,,,YES,,,,,NO,,
S2511,2,Forward,conferencePaper,2021,"Mazzilli, Irene; Mirabile, Gianmario; Lino, Paolo; Maione, Guido; Rybakov, Alexey V.; Svishchev, Nikolai; Blanco, Ileana; De Bellis, Luigi; Luvisi, Andrea",2021 17th International Workshop on Cellular Nanoscale Networks and their Applications (CNNA),10.1109/CNNA49188.2021.9610752,,This paper presents a fully automated procedure for the detection of trees affected by Xylella Fastidiosa using UAVs and convolutional neural networks. Drones are able to collect an adequate number of olive leaf images to detect the presence of disease symptoms. Several neural networks are trained to compare results and determine the best solution.,Conferences; Convolutional Neural Network; Convolutional neural networks; Diseases; Drones; EfficientDet; Inspection; Nanoscale devices; Neural networks; Xylella Fastidiosa,UAV Inspection of Olive Trees for the Detection of Xylella Fastidiosa Disease Using Neural Networks,,NO,,,YES,,,,,NO,,
S2512,2,Forward,journalArticle,,"Niaraki, Amir; Roghair, Jeremy; Jannesari, Ali",,,,"Smart data collection via UAV systems is an attractive topic in various disciplines. Disturbances such as intense wind can significantly hinder the operational time of drones. This work demonstrates a reinforcement learning approach for the optimization of power consumption in a UAV system for data collection in sparse locations. Two common reinforcement learning algorithms, Q-learning and SARSA, are implemented in a simulation environment, utilizing a combination of robot operating system (ROS) and Gazebo. The effect of time-varying wind fields and timedependency of the tasks were simulated and the developed framework showed reliable adaptability in various scenarios. This framework can result in 30% power consumption improvement for intense wind conditions in comparison to naïve control algorithms.",,Energy-aware Goal Selection and Path Planning of UAV Systems via Reinforcement Learning,,,,,NO,,,,,NO,,
S2513,2,Forward,journalArticle,2022,"Panetsos, Fotis; Rousseas, Panagiotis; Karras, George; Bechlioulis, Charalampos; Kyriakopoulos, Kostas J.",Sustainability,10.3390/su14116502,https://www.mdpi.com/2071-1050/14/11/6502,"In this paper, we present a vision-aided motion planning and control framework for the efficient monitoring and surveillance of water surfaces using an Unmanned Aerial Vehicle (UAV). The ultimate goal of the proposed strategy is to equip the UAV with the necessary autonomy and decision-making capabilities to support First Responders during emergency water contamination incidents. Toward this direction, we propose an end-to-end solution, based on which the First Responder indicates visiting and landing waypoints, while the envisioned strategy is responsible for the safe and autonomous navigation of the UAV, the refinement of the way-point locations that maximize the visible water surface area from the onboard camera, as well as the on-site refinement of the appropriate landing region in harsh environments. More specifically, we develop an efficient waypoint-tracking motion-planning scheme with guaranteed collision avoidance, a local autonomous exploration algorithm for refining the way-point location with respect to the areas visible to the drone’s camera, water, a vision-based algorithm for the on-site area selection for feasible landing and finally, a model predictive motion controller for the landing procedure. The efficacy of the proposed framework is demonstrated via a set of simulated and experimental scenarios using an octorotor UAV.",autonomy; UAV,A Vision-Based Motion Control Framework for Water Quality Monitoring Using an Unmanned Aerial Vehicle,,NO,,,YES,,,,,NO,,
S2514,2,Forward,bookSection,,"Fang, Jie; Zhang, Hanqing; Cowlagi, Raghvendra V.",AIAA Scitech 2021 Forum,,https://arc.aiaa.org/doi/abs/10.2514/6.2021-0865,"View Video Presentation: https://doi.org/10.2514/6.2021-0865.vidWe study the problem of decentralized route-planning of a team of multiple mobile robotic actors in an unknown environment. Mobile sensors such as aerial surveillance vehicles can be deployed to learn the environment map, which leads to a sensor placement problem. A traditional solution to this problem is to decouple sensor placement and route-planning. We show that this decoupled approach can be wasteful in sensory resources (numbers of sensors and measurements). Instead, we propose a bootstrapping, iterative, and interactive route-planning and sensor placement technique that finds near-optimal routes for actors that are required to work collaboratively to satisfy a global task. To this end, a task-driven information gain is defined based on entropy reduction over a subregion “near” current estimates of optimal routes. The crucial innovation is that the proposed sensor placement attempts to reduce the entropy of the actors’ route cost rather than that of the entire map. Sensors are placed to maximize the task-driven information gain. The iterations of route-planning and sensor placement terminate when the entropy of each actor’s route cost reduces below a desired threshold. Numerical simulations demonstrate significant reductions in the number of measurements required to find near-optimal actor routes.",,Interactive Route-Planning and Mobile Sensing with a Team of Robotic Vehicles in an Unknown Environment,,,,,NO,,,,,NO,,
S2515,2,Forward,webpage,,,,,https://www.proquest.com/openview/2acf40dfeca05b44659fadd993559e99/1?pq-origsite=gscholar&cbl=18750&diss=y,"Explore millions of resources from scholarly journals, books, newspapers, videos and more, on the ProQuest Platform.",,Design and Analysis of Interactive Multi-Robot Systems without Explicit Communication - ProQuest,NO,,,,NO,,,,,NO,,
S2516,2,Forward,manuscript,2019,"Tamali, Mohammed; Mohammed, Tamali; Abderrahmane, Tamali; Soumia, Mekhfi",,,https://hal.archives-ouvertes.fr/hal-02192541,,3D digitisation; Hostile site; LiDAR; Point- Cloud; Robotics; Transmission,Development of a 3D digitisation system for hostile sites,NO,,,,YES,,,,,NO,,
S2517,2,Forward,conferencePaper,2019,"Yang, Xinglong; Zou, Danping; Pei, Ling; Sartori, Daniele; Yu, Wenxian",China Satellite Navigation Conference (CSNC) 2019 Proceedings,10.1007/978-981-13-7759-4_46,,"Developing autonomous navigation algorithms without using extern positioning signals is the key to allow Multi-rotor UAVs to fly in complex environments where the GNSS signals are week or invalid. However, it is an expensive and time consuming process to develop and test autonomous navigation algorithms with real UAV platforms in the real world. It becomes even more difficult when developing autonomous navigation algorithms based on deep learning techniques, since it requires to collect a large amount of annotated training data. To address such problem, we developed a simulation platform based on Unreal Engine, providing physically and visually realistic simulations, to validate and test navigation algorithms for Multi-rotor UAVs.",Autonomous navigation; Multi-rotor UAVs; Simulation platform; Unreal Engine,An Efficient Simulation Platform for Testing and Validating Autonomous Navigation Algorithms for Multi-rotor UAVs Based on Unreal Engine,,NO,,,YES,,,,,NO,,
S2518,2,Forward,report,2022,"Safarijalal, Behzad; Alborzi, Yousef; Najafi, Esmaeil",,,https://www.researchsquare.com/article/rs-1251771/v1,"With the increase in world population, food resources have to be modiﬁed to be more productive, resistive, and reliable. Wheat is one of the most important food resources in the world, mainly because of the variety of wheat-based products. Wheat crops are threatened by three main types of diseases which cause large amounts of annual damage in crop yield. These diseases can be eliminated by using pesticides at the right time. While the task of manually spraying pesticides is burdensome and expensive, agricultural robotics can aid farmers by increasing the speed and decreasing the amount of chemicals. In this work, a smart autonomous system has been implemented on an unmanned aerial vehicle to automate the task of monitoring wheat ﬁelds. First, an image-based deep learning approach is used to detect and classify disease-infected wheat plants. To ﬁnd the most optimal method, different approaches have been studied. Because of the lack of a public wheat-disease dataset, a custom dataset has been created and labeled. Second, an efﬁcient mapping and navigation system is presented using a simulation in the robot operating system and Gazebo environments. A 2D simultaneous localization and mapping algorithm is used for mapping the workspace autonomously with the help of a frontier-based exploration method.",,Automated Wheat Disease Detection Using A ROS-Based Autonomous Guided UAV,NO,,,,YES,,,,,NO,,
S2519,2,Forward,book,2018,"Arakelian, Vigen; Wenger, Philippe",,,,"This proceedings volume contains papers that have been selected after review for oral presentation at ROMANSY 2018, the 22nd CISM-IFToMM Symposium on Theory and Practice of Robots and Manipulators. These papers cover advances on several aspects of the wide field of Robotics as concerning Theory and Practice of Robots and Manipulators.ROMANSY 2018 is the 22nd event in a series that started in 1973 as one of the first conference activities in the world on Robotics. The first event was held at CISM (International Centre for Mechanical Science) in Udine, Italy on 5-8 September 1973. It was also the first topic conference of IFToMM (International Federation for the Promotion of Mechanism and Machine Science) and it was directed not only to the IFToMM community.",Technology & Engineering / Automation; Technology & Engineering / Electrical; Technology & Engineering / Industrial Design / General; Technology & Engineering / Industrial Design / Product; Technology & Engineering / Manufacturing,"ROMANSY 22 – Robot Design, Dynamics and Control: Proceedings of the 22nd CISM IFToMM Symposium, June 25-28, 2018, Rennes, France",NO,,,,YES,,,,,NO,,
S2520,2,Forward,conferencePaper,2021,"Coutinho, Artur Duarte",Fault Injector for Autonomous Quadrotors,,https://estudogeral.sib.uc.pt/handle/10316/95542,"Actualmente, dadas as capacidades que os UAVs possuem e a grande variedade de missões que foram reinventadas com o uso dos mesmos, desde serviços de entrega a operações militares, o interesse neles tem aumentado. Assegurar a segurança de missões que envolvem UAVs é especialmente importante, dada a escalabilidade destas missões e, consequentemente, o aumento de possíveis cenários de falha. Apesar disto, os UAVs comerciais não dispõem, em geral, das capacidades necessárias para tolerar possíveis falhas, ao contrário de aviações tripuladas. Isto implica que os possíveis benefícios que os UAVs podem trazer no futuro são prejudicados pela falta de regulamentos de segurança uniformes e dos meios para defini-los. Este trabalho pretende resolver o problema previamente apresentado, desenvolvendo uma ferramenta de injecção de falhas num sistema de quadricópteros autónomos e demonstrando todos os passos necessários para a sua utilização para avaliação do impacto das falhas em drones. É esperado que a ferramenta auxilie esta avaliação, providenciando um ambiente simulado, mas realista, que possa ser usado para medir a eficácia de UAVs comerciais. O nosso objectivo é criar uma ferramenta que suporte uma vasta quantidade de modelos de UAVs diferentes, e os seus respectivos software, de modo a que se possa centralizar e uniformizar um conjunto de tácticas de avaliação de segurança.Pretendemos também demonstrar a eficácia do injector de falhas desenvolvido na avaliação de processos e mecanismos de tolerância a falhas em drones. Isto é realizado usando uma variedade de falhas, implementadas por nós dentro do ambiente definido, e a análise das mesmas.",,Fault Injector for Autonomous Quadrotors,,NO,,,YES,,,,,NO,,
S2521,2,Forward,conferencePaper,2017,"Harris, Christopher B.; Bahar, R. Iris",2017 New Generation of CAS (NGCAS),10.1109/NGCAS.2017.25,,"Contemporary sensor-based robotic systems tend to use an ad-hoc combination of off-the-shelf components for onboard computational needs. The number and type of sensors present, the number and organization of the onboard processors, and the algorithms utilized for processing high bandwidth real-time sensor data present researchers and designers with a wide range of choices for which they are currently ill-equipped to evaluate the best options. We present a co-simulation framework for sensor-based mobile robots that allows for the power and performance analysis of custom embedded computing platforms for mobile robots with a range of onboard sensors. We demonstrate the utility of our co-simulation framework by analyzing the power and performance tradeoffs for the computational subsystem of a quadrotor unmanned aerial vehicle (UAV) with onboard camera sensor performing image processing tasks while operating in a custom virtual testbed.",Cameras; Computational modeling; Electronic design automation; Embedded and cyber-physical systems; Image sensors; Robot sensing systems; Robotics; Solid modeling,A Research Tool for the Power and Performance Analysis of Sensor-Based Mobile Robots,,NO,,,YES,,,,,NO,,
S2522,2,Forward,conferencePaper,2022,"Li, Mengxuan; Wang, Hongwei",2022 IEEE 25th International Conference on Computer Supported Cooperative Work in Design (CSCWD),10.1109/CSCWD54268.2022.9776063,,"Industry 4.0 has transformed the traditional production paradigm, leading to the applications of a range of industrial robotic arms for various purposes and in varied scenarios. The control and cooperation of these robots hold the key to swift reaction to uncertain needs from the market place, for which digital twins has become a promising technology. This paper aims to adding an intelligence dimension to digital twins by enabling learning capability for industrial robots using knowledge graph. Specifically, useful information about the operation scene and processing logic of a robot is collected and converted into graphical knowledge which will be accumulated and updated as a knowledge base for the operation of industrial robots. In our preliminary work, we evaluate the model on a simulation platform and demonstrate the potential of achieving learning capability for the robots through linking the physical world and the cyber world underpinned by knowledge graphs.",digital twins; industrial robots; Input devices; intelligent manufacturing; Knowledge based systems; knowledge graph; Machine vision; Manipulators; Production facilities; Robot control; Service robots,Enabling Improved Learning Capability of Industrial Robots with Knowledge Graph Towards Intelligent Digital Twins,,NO,,,YES,,,,,NO,,
S2523,2,Forward,journalArticle,2021,"Jr, Mayalu; Kulua, Alfred",,,https://vtechworks.lib.vt.edu/handle/10919/104024,"Finding lost persons, collecting information in disturbed communities, efficiently traversing urban areas after a blast or similar catastrophic events have motivated researchers to develop intelligent sensor frameworks to aid law enforcement, first responders, and military personnel with situational awareness. This dissertation consists of a two-part framework for providing situational awareness using both acoustic ground sensors and aerial sensing modalities. Ground sensors in the field of data-driven detection and classification approaches typically rely on computationally expensive inputs such as image or video-based methods [6, 91]. However, the information given by an acoustic signal offers several advantages, such as low computational needs and possible classification of occluded events including gunshots or explosions. Once an event is identified, responding to real-time events in urban areas is difficult using an Unmanned Aerial Vehicle (UAV) especially when GPS is unreliable due to coverage blackouts and/or GPS degradation [10].     Furthermore, if it is possible to deploy multiple in-situ static intelligent acoustic autonomous sensors that can identify anomalous sounds given context, then the sensors can communicate with an autonomous UAV that can navigate in a GPS-denied urban environment for investigation of the event; this could offer several advantages for time-critical and precise, localized response information necessary for life-saving decision-making.    Thus, in order to implement a complete intelligent sensor framework, the need for both an intelligent static ground acoustic autonomous unattended sensors (AAUS) and improvements to GPS-degraded localization has become apparent for applications such as anomaly detection, public safety, as well as intelligence surveillance and reconnaissance (ISR) operations. Distributed AAUS networks could provide end-users with near real-time actionable information for large urban environments with limited resources. Complete ISR mission profiles require a UAV to fly in GPS challenging or denied environments such as natural or urban canyons, at least in a part of a mission.     This dissertation addresses, 1) the development of intelligent sensor framework through the development of a static ground AAUS capable of machine learning for audio feature classification and 2) GPS impaired localization through a formal framework for trajectory-based flight navigation for unmanned aircraft systems (UAS) operating BVLOS in low-altitude urban airspace. Our AAUS sensor method utilizes monophonic sound event detection in which the sensor detects, records, and classifies each event utilizing supervised machine learning techniques [90]. We propose a simulated framework to enhance the performance of localization in GPS-denied environments. We do this by using a new representation of 3D geospatial data using planar features that efficiently capture the amount of information required for sensor-based GPS navigation in obstacle-rich environments. The results from this dissertation would impact both military and civilian areas of research with the ability to react to events and navigate in an urban environment.",,Beyond LiDAR for Unmanned Aerial Event-Based Localization in GPS Denied Environments,,NO,,,YES,,,,,NO,,
S2524,2,Forward,conferencePaper,2022,"Ipas, O.; Przylecki, M.; Soria, E.; Albéniz, A.; Bernardini, A.; Barrio, A.",2022 International Conference on Unmanned Aircraft Systems (ICUAS),10.1109/ICUAS54217.2022.9836209,,"The use of UAS has increased exponentially in the recent years. Precise agriculture, people search and rescue, road surveillance and control are just some of the civil applications. However, to be used with these purposes, UAS must gain regulatory approval. This paper proposes the implementation of virtual tools to reduce real testing, facilitating both the design and certification of UAS. The benefits of the approach are shown with the application to a landing and avoidance system. The project hardware is illustrated at first, including UAV hardware and software structure. Then the Optical Systems to be validated are detailed in terms of hardware and implementation approach. Finally, the tools for virtual simulation (Matlab and Gazebo) are detailed, showing the intermediate results obtained, leading to an UAS plant design. Those results are correlated with a final in flight campaign, showing the correctness of the proposed approach",Hardware; Integrated optics; Optical sensors; Profitability; Roads; Software; Surveillance,Autonomous landing and avoidance system virtual validation approach,,NO,,,YES,,,,,NO,,
S2525,2,Forward,journalArticle,2022,"Aspragkathos, Sotirios N.; Karras, George C.; Kyriakopoulos, Kostas J.",Drones,10.3390/drones6060146,https://www.mdpi.com/2504-446X/6/6/146,"A hybrid model-based and data-driven framework is proposed in this paper for autonomous coastline surveillance using an unmanned aerial vehicle. The proposed approach comprises three individual neural network-assisted modules that work together to estimate the state of the target (i.e., shoreline) to contribute to its identification and tracking. The shoreline is first detected through image segmentation using a Convolutional Neural Network. The part of the segmented image that includes the detected shoreline is then fed into a CNN real-time optical flow estimator. The position of pixels belonging to the detected shoreline, as well as the initial approximation of the shoreline motion, are incorporated into a neural network-aided Extended Kalman Filter that learns from data and can provide on-line motion estimation of the shoreline (i.e., position and velocity in the presence of waves) using the system and measurement models with partial knowledge. Finally, the estimated feedback is provided to a Partitioned Visual Servo tracking controller for autonomous multirotor navigation along the coast, ensuring that the latter will always remain inside the onboard camera field of view. A series of outdoor comparative studies using an octocopter flying along the shoreline in various weather and beach settings demonstrate the effectiveness of the suggested architecture.",autonomy; coastline surveillance; target tracking; UAV; visual servo control,"A Hybrid Model and Data-Driven Vision-Based Framework for the Detection, Tracking and Surveillance of Dynamic Coastlines Using a Multirotor UAV",,NO,,,YES,,,,,NO,,
S2526,2,Forward,book,2021,"Medeiros, Raphael; Ximenes, Felipe; Melo, Aurelio; Rodrigues, Jose Antonio; Dias, Joao; Faletti, Luciana; Faria Pinto, Milena",,,,,,Photovoltaic panels identification in aerial images,NO,,,,YES,,,,,NO,,
S2527,2,Forward,bookSection,,"Tabassum, Asma; DeSantis, Max; Bai, He; Fala, Nicoletta",AIAA AVIATION 2022 Forum,,https://arc.aiaa.org/doi/abs/10.2514/6.2022-3872,"View Video Presentation: https://doi.org/10.2514/6.2022-3872.vidWe introduce and propose a wind-aware small unmanned aircraft system human-in-the loop simulation pipeline for operations in low-altitude urban airspace. To complement the Urban Air Mobility concept that envisions safe, sustainable, and accessible air transportation, we design an aggregated simulation pipeline so that Human Machine Interaction during operations in turbulent windy conditions can be studied. In this work, we primarily identify the lack of wind-awareness in the current user interface designs available for small unmanned aircraft system. After a small research group study, we recognize the information components that are crucial in the operational context and integrate specific display information in an extended wind-aware user interface which includes real time wind velocity display and trajectory management features. Additionally, we extend the capability of an existing simulator to simulate spatial-temporal wind data in real time. The simulation pipeline provides a comprehensive structure for wind-aware sUAS simulations which can be used for mission design experiments in the presence of wind and evaluation of pilot response to increased wind situational awareness.",,Preliminary Design of Wind-Aware sUAS Simulation Pipeline for Urban Air Mobility,,,,,NO,,,,,NO,,
S2528,2,Forward,thesis,2017,"Viña, Carlos",,,https://tel.archives-ouvertes.fr/tel-01882687,"Aerial robotics is a prominent field of research that has seen great commercial success during the last years due to the development of highly efficient and affordable small-sized airborne platforms, commonly referred to as mini-drones. This has opened the way to promising new applications in surveillance and inspection tasks. In recent years, this has been a key subject of research in the power industry, where power utilities are subject to deterioration due to atmospheric conditions and require extensive monitoring programs. Mini-drones have the potential of fully automating the inspection process, further reducing costs and inspection times. In this context, this thesis addresses autonomous electric tower inspections with mini-drones. Namely, self-localization, the first step in a long series of tasks towards achieving fully autonomous capabilities, is the main focus of this work. We explore how 2D laser scanners can be coupled with commonly available sensors to estimate a mini-drone's 6 degree of freedom pose in real-time, using uniquely on-board sensing and processing capabilities. This thesis develops topics from classic scan matching algorithms, such as the iterative closest point (ICP) algorithm and proposed adaptations to the electric tower scene, to sensor fusion and feed-back control. Validations based on experimental flights and extensive simulations are presented.",,Laser based sensor fusion and control for the tele-operation of minidrones,NO,,,,YES,,,,,NO,,
S2529,2,Forward,conferencePaper,2021,"Smirnov, Alexander; Teslya, Nikolay",Enterprise Information Systems,10.1007/978-3-030-75418-1_22,,"Modelling of interaction of intelligent agents is one of the urgent topics for verifying interaction models of joint task solving. It includes platform selection or new platform development that will provide functions for coalition formation, task decomposition and distribution, winnings sharing, and implementation of proposed techniques and models. This work focuses on modeling and visualizing the interaction of intelligent robots using open software Gazebo, and Robotic Operation System with information exchange between coalition members through distributed ledger technology and smart contracts using the Hyperledger Fabric platform. To adjust robot actions the ontologies of robot and context are used. Context ontology combines environmental characteristics with robots and task descriptions to provide a full situation context. The ontology of robot provides description of main robot functions and characteristics. The architecture of the modeling environment is described as the result of existing solutions overview and task required, as well as an example of modeling and visualization based on precision agriculture scenario.",Blockchain; Coalition; Intelligent agent; Modelling; Robot; Smart space; Visualization,Modeling of Robot Interaction in Coalition Through Smart Space and Blockchain: Precision Agriculture Scenario,,NO,,,YES,,,,,NO,,
S2530,2,Forward,journalArticle,,"Targhagh, O",,,,"Recently, there has been a lot of interest in the application of autonomous flight with small unmanned aerial vehicles (UAV’s). Research was taken with the Robotics and Automation Labratory at the University of Western Australiain this area with a Hexacopter UAV to see if such a platform could be developed for various Search and Rescue applications, building upon work started last year.",,Autonomous Navigation of Unmanned Aerial Vehicles (October 2014),,,,,NO,,,,,NO,,
S2531,2,Forward,journalArticle,2018,"Harris, Christopher B.; Bahar, R. Iris",Journal of Low Power Electronics,10.1166/jolpe.2018.1540,,"Mobile robotic cyber-physical systems tend to be made using an ad-hoc combination of off-the-shelf components for onboard computational needs. The number and type of sensors present, the number and organization of the onboard processors, and the algorithms utilized for processing high bandwidth real-time sensor data present researchers and designers with a wide range of choices for which they are currently ill-equipped to evaluate the best options. We present a co-simulation framework that allows for the system level power and performance analysis of robotic CPS with a range of onboard sensors. We characterize an embedded computer model using a popular benchmark and use this embedded system model in a simulated unmanned aerial vehicle (UAV). We then validate the simulation framework by modeling a quadrotor UAV operating in a virtual testbed with the modeled embedded computer executing an image processing kernel. Results show that our embedded system model performance is accurate to within 7% of real world values. Quadrotor image processing performance is shown to be limited by the movement of sensor data in the onboard computer. This high bandwidth data movement also dominates the power consumption.",ELECTRONIC DESIGN AUTOMATION; EMBEDDED AND CYBER-PHYSICAL SYSTEMS; ROBOTICS,Towards the Simulation Based Design and Validation of Mobile Robotic Cyber-Physical Systems,,NO,,,YES,,,,,NO,,
S2532,2,Forward,webpage,2020,"Martinez-Garcia, Edgar",,,http://cathi.uacj.mx/handle/20.500.11961/16024,"Unmanned Aerial Vehicle (UAV) is a flying robot that acts without a constant human pilot involvement. UAVs are applied in military and civilian areas, in search and rescue operations, 3D mapping, simultaneous localization and mapping (SLAM) and other tasks. SLAM approaches are based on various sensors usage including lidars and cameras. Visual SLAM approaches rely on visual sensing systems and successfully operate within GPS-denied environments. Further, applying several UAVs allows for complex tasks that cannot be handled by a single robot, minimizes exploration time and adds a security level for a case of a single robot failure. This paper presents a comparison of two most applicable vision-based collaborative monocular SLAM methods in Robot  operating system, CORB-SLAM and CCM-SLAM, that run on a pair of UAVs. The evaluation is performed on preassembled datasets that correspond to a virtual environment in the Gazebo simulator. The error estimation in virtual experiments demonstrated that CCM-SLAM has a higher global localization accuracy than CORB-SLAM.",,Comparative analysis of ROS-based centralized methods for conducting collaborative monocular visual SLAM using a pair of UAVs,NO,,,,YES,,,,,NO,,
S2533,2,Forward,conferencePaper,2017,"Gómez-Chabla, Raquel; Real-Avilés, Karina; Hidalgo, Jorge",Technologies and Innovation,10.1007/978-3-319-67283-0_17,,"Nowadays, robotics plays a very important role in the improvement of the quality of life, because it helps to automate tasks from several fields such as services, production, housing, and education. However, robotics projects in Higher Education require a big investment. To save resources, a big group of students must work on the same project. This fact does not allow students to develop their abilities because they are not involved in all the stages of the project. Thanks to the advance of technology, learning trends such as virtual laboratories have arisen. These laboratories bring advantages such as flexibility, scalability, collaborative tools, and better communication among students. In this work, we propose a three-layer architecture for virtual laboratories which uses basic principles of Cloud computing and virtualization. This platform was used for the development of robotics projects within the Agrarian University of Ecuador. The platform has proven to be creative, modern, and accessible for universities.",Architecture; Robotics; Simulators; Virtual laboratories,A Cloud-Based Architecture for Robotics Virtual Laboratories,,NO,,,YES,,,,,NO,,
S2534,2,Forward,thesis,2015,"Agarwal, Siddharth",,,https://oaktrust.library.tamu.edu/handle/1969.1/155690,"This thesis explores the use of small unmanned aerial systems (SUASs) for mapping of unknown disaster environments and investigates the impact of characteristics of such challenging environments on simultaneous localization and mapping (SLAM) algorithm. It provides a formal analysis of indoor disaster environments and identifies four characteristics of a region of space: scale, degree of deconstruction, location of obstacles, and tortuosity. The analysis compares the value of these characteristics for Prop 133 at Disaster City and develops computer simulated environments. Furthermore, a SLAM algorithm for SUAS flying in indoor disaster environments is developed and the system is tested in these virtual environments. Three different environments with increasing deconstruction are designed. For each type of environment, 10 different maps with a common floor plan are simulated with randomly placed obstacles. For each map, three trials with varying flight paths are run, thus conducting 90 trials of experimentation. As verified from the statistical testing, there is a convincing increase of 26.36% in the average value of RMSE as the deconstruction changes from Group 1 to Group 3. But, the change in value of error is not statistically convincing when Group 1 and 2 and, Group 2 and 3 are respectively compared. Hence, though the result suggest that the value of error increases between different groups, it cannot be claimed that the RMSE in localization will always increase with deconstruction. The tortuosity increases with deconstruction and this value is empirically calculated. The average RMSE in localization does not change as the Agent to Environment ratio changes. These results can help identify the remaining gaps in the state of the art indoor SUAS for disasters.",,Characteristics of Indoor Disaster Environments and their impact on Simultaneous Localization and Mapping for Small Unmanned Aerial Systems,NO,,,,YES,,,,,NO,,
S2535,2,Forward,webpage,,,,,https://www.proquest.com/openview/daacc5e74e41137e9c43834fa44b7ecf/1?pq-origsite=gscholar&cbl=18750&diss=y,"Explore millions of resources from scholarly journals, books, newspapers, videos and more, on the ProQuest Platform.",,Machine Learning-Based Robotic Design: A Case Study on Fin-Based Amphibious Robots - ProQuest,NO,,,,NO,,,,,NO,,
S2536,2,Forward,webpage,,,,,https://www.proquest.com/openview/e326ba999df8065ecc75b292b1fa90bd/1?pq-origsite=gscholar&cbl=18750&diss=y,"Explore millions of resources from scholarly journals, books, newspapers, videos and more, on the ProQuest Platform.",,Development of a Multi-Robotic Exploration System for Power Plants - ProQuest,NO,,,,NO,,,,,NO,,
S2537,2,Forward,conferencePaper,2021,"Cappuzzo, Federico; Matiasso Portella, Kenedy; Mascomère, Jean-Patrick; Thalmann, Guillaume; Lallement, Raphael",Proceedings of the 2021 Drone Systems Engineering and Rapid Simulation and Performance Evaluation: Methods and Tools Proceedings,10.1145/3444950.3444952,https://doi.org/10.1145/3444950.3444952,"The use of drones or Unmanned Aerial Vehicles (UAVs) in commercial applications has the potential to disrupt several industries. To cover effectively such a broad spectrum of applications, UAV integrators require the ability to develop drone platforms that meet the requirements specified for the missions to accomplish. Simulation-based analysis are essential to this extent, as they provide useful means to explore the design space and select the most promising concepts that comply with requirements and specifications. This paper presents the use of system simulation techniques to model the performance of an octocopter UAV following specifications shared in the frame of the European research project COMP4DRONES. Batteries, electric motors, propulsion and flight behavior are simulated in the context of a mission including seismic sensors droppings. The performance model was then integrated in a co-simulation framework to include navigation sensors, mission environment, and guidance and control algorithms to simulate the drone's behavior when faced with obstacles avoidance and cluster flight.",,System Simulation for Autonomous UAV Design*,,NO,,,YES,,,,,NO,,
S2538,2,Forward,conferencePaper,2021,"Ma, Ji; Guo, Dongfeng; Bai, Yang; Svinin, Mikhail; Magid, Evgeni",2021 18th International Conference on Ubiquitous Robots (UR),10.1109/UR52253.2021.9494698,,"This paper presents a control strategy for caging a flood area via multiple UAVs. The strategy consists of the following parts. A novel architecture for video segmentation, Multiscale Features Fusion based MobileNet (MFFM-Net), is constructed to detect the flood boundary. A Function Approximation Technique based Immersion and Invariance (FATII) tracking controller is employed to constrain a single UAV on the flood boundary in the presence of external disturbances. A flocking based formation controller is designed to uniformly distribute UAVs along the flood boundary without collisions among neighbours. The proposed strategy has been verified through simulations under the ROS/Gazebo environment.",Adaptation models; Adaptive control; Feature extraction; Floods; Function approximation; Lakes; Robots,A Vision-Based Robust Adaptive Control for Caging a Flood Area via Multiple UAVs,,NO,,,YES,,,,,NO,,
S2539,2,Forward,journalArticle,2017,"Küçüksubaşı, Fatih",,,https://open.metu.edu.tr/handle/11511/27066,"Inspection of buildings throughout their lifecycle is vital in terms of human safety as the number of structures increases expeditiously. However, it is not easy to perform inspections for all cases. Physical reachability and complexity of the buildings are major problems along with the safety of inspectors during on-site operations. In this context, Unmanned Aerial Vehicles (UAV) have recently shown great performance collecting visual data through autonomous exploration and mapping in building inspection. Yet, the number of studies is limited considering the post processing of the data and its integration with autonomous UAVs. These will enable huge steps onward into full automation of building inspection. In this regard, this work presents a decision making tool for revisiting tasks in visual building inspection by autonomous UAVs. The tool is an implementation of fine-tuning a pretrained Convolutional Neural Network for surface crack detection. It offers an optional mechanism for task planning of revisiting pinpoint locations during inspection. It is integrated to a quadrotor UAV system that can autonomously navigate in GPSdenied environments. The UAV is equipped with onboard sensors and computers for autonomous localization, mapping and motion planning. Additionally, a Graphical User Interface is developed in order to wrap the high-level features of the system for users. The integrated system is tested through simulations and real-world experiments. The results show that the system achieves crack detection and autonomous navigation in GPS-denied environments for building inspection.",,An integrated system design for building inspection by autonomous UAVs,,NO,,,YES,,,,,NO,,
S2540,2,Forward,conferencePaper,2020,"Pellegrino, Grazieno; Mota, Gustavo; Assis, Flávio; Gorender, Sérgio; Sá, Alirio",2020 X Brazilian Symposium on Computing Systems Engineering (SBESC),10.1109/SBESC51047.2020.9277866,,"The coordination of cooperating Unmanned Aerial Vehicles (UAVs) has become an active area of research. The approaches to coordinate these so-called swarms generally include a solution to a class of problems called Area Coverage as a building block. Area coverage problems consist in obtaining information about a certain interest area (commonly a polygon or a polyhedron) using a set of UAVs, generally with decentralized coordination and minimal human intervention. This problem models the requirements of different types of applications, such as in the case of emergencies and disasters, gas leak detection, seeking lost people, among many others. In this paper we describe a specific strategy to coordinate dynamic sets of UAVs to solve a specific area coverage problem. Existing solutions to the problem typically consider a fixed set of UAVs. In dynamic sets, UAVs might enter or leave the set. Beyond describing a specific strategy to the problem, we introduce the framework we are building on top of ROS/Gazebo to implement it. This framework eases the implementation of different strategies for multiple UAVs coordination and the assessment of their quality.",area coverage; Base stations; dynamic swarms; heat map; Sensors; Software; Surveillance; Systems operation; Task analysis; UAV; Vehicle dynamics,Simple Area Coverage by a Dynamic Set of Unmanned Aerial Vehicles,,NO,,,YES,,,,,NO,,
S2541,2,Forward,book,2022,"García, Edgar A. Martínez",,,,"Motion planning is a fundamental function in robotics and numerous intelligent machines. The global concept of planning involves multiple capabilities, such as path generation, dynamic planning, optimization, tracking, and control. This book has organized different planning topics into three general perspectives that are classified by the type of robotic applications. The chapters are a selection of recent developments in a) planning and tracking methods for unmanned aerial vehicles, b) heuristically based methods for navigation planning and routes optimization, and c) control techniques developed for path planning of autonomous wheeled platforms.",Science / Research & Methodology; Social Science / Research,Motion Planning,NO,,,,YES,,,,,NO,,
S2542,2,Forward,conferencePaper,2020,"Milroy, Roger",2020 AIAA/IEEE 39th Digital Avionics Systems Conference (DASC),10.1109/DASC50938.2020.9256712,,"Pose estimation is a core competence for cyber-physical systems and is all the more important where there is any element of autonomy. In the context of Micro Air Vehicles (MAVs) this task is more challenging due to weight and cost restrictions. These restrictions dictate that MAVs usually have noisy sensors and limited computational capacity. There are many different approaches to solving this problem but the standard approach is to use the Kalman Filter (KF) [1], or it's nonlinear variant the Extended Kalman Filter (EKF) [2], in order to fuse sensor data and provide optimal estimates of state. While the KF is an optimal estimator of linear systems given some assumptions, most systems are non-linear so the EKF is used. In either case the estimates rely on assumptions that may not always hold. This allows room for improvement. This paper implements the newly proposed technique of Hybrid Inference (HI) [3] on a model of an MAV simulated in Gazebo [4] and explores its performance as compared to the EKF which is used as the standard. HI is a framework for combining graphical models, like the KF, with inverse models which are learned with a Recurrent Message Passing Neural Network (MPNN) [5] [6]. This paper evaluates the technique in a more challenging domain than has previously been implemented. It explores the challenges of implementing the technique, analyses its computational performance and discusses its suitability for use at this time with a strong practical focus. The main findings are that it is too challenging to implement correctly to take full advantage of its proposed benefits. And that it is too computationally inefficient in its current form for it to be suitable for use in real time systems with current technology.",Filtering; Graph Neural Networks; Graphical models; Kalman filters; MAV; Neural models; Neural nets; Optimization; Pose estimation; Standards; Testing; Training; UAV,Where's WALL-E? A Comparison of the Extended Kalman Filter and Hybrid Inference for Pose Estimation in MAVs,,NO,,,YES,,,,,NO,,
S2543,2,Forward,webpage,,,,,https://www.proquest.com/openview/dc408981a2c75343ed7252c9d7c6a746/1?pq-origsite=gscholar&cbl=18750,"Explore millions of resources from scholarly journals, books, newspapers, videos and more, on the ProQuest Platform.",,"A control architecture and human interface for agile, reconfigurable micro aerial vehicle formations - ProQuest",NO,,,,NO,,,,,NO,,
S2544,2,Forward,thesis,2017,"Sánchez López, José Luis; Campoy Cervera, Pascual; Molina González, Martín",,,https://oa.upm.es/46302/,"La navegación totalmente autónoma de una flota de robots aéreos realizando misiones dinámicas complejas en entornos desafiantes no estructurados, es necesaria para simplificar el uso de los vehículos aéreos y extender su utilización a un mayor número de aplicaciones, es necesaria. El desarrollo de un sistema inteligente multi-robot completamente autónomo sigue siendo un problema abierto con soluciones parciales e incompletas en robótica aérea, habiéndose sólo desarrollado algunas arquitectura abiertas para sistemas aéreos, las cuales presentan limitaciones en su nivel de autonomía y versatilidad. Esta tesis presenta una arquitectura de sistema versátil para robótica aérea que permite el funcionamiento totalmente autónomo de un sistema multi-robot aéreo, cumpliendo con los requisitos de ser agnóstico a nivel de misión, plataforma y entorno. Se ha caracterizado a nivel abstracto y general, definiendo sus siete subsistemas, sus funcionalidades, y sus interfaces a alto nivel, garantizándose la versatilidad y flexibilidad. Los siete subsistemas propuestos son: Sistema de Extracción de Características, Sistema Motriz, Sistema de Conciencia Situacional, Sistema Ejecutivo, Sistema de Planificación, Sistema de Supervisión y Sistema de Comunicación. Esta arquitectura de sistema proporciona a los diseñadores una arquitectura inicial de la que partir cuando desarrollan sus propios sistemas inteligentes totalmente autónomos multi-robots aéreo. La validación de la arquitectura propuesta del sistema es una tarea compleja ya que el rendimiento del sistema completo depende de la misión, el entorno, la configuración del hardware, los algoritmos empleados y su implementation software. Tres tipos de escenarios se utilizaron con éxito para proporcionar una evaluación global del sistema completo, validando el desempeño de la arquitectura de sistema propuesta: (1) competiciones internacionales de robótica aérea, (2) desafíos auto-propuestos y (3) demostraciones públicas. Además, la tesis presenta varios algoritmos que permiten un aumento del nivel de autonomía de los sistemas robóticos aéreos, desarrollados en el contexto de una aplicación particular. Estos algoritmos se pueden agrupar en: (1) percepción, (2) control, (3) planificación y ejecución de tareas, (4) inteligencia y cognición, y (5) comunicación e interacción. Todos estos componentes han sido evaluados individualmente, demostrando su desempeño. Sin embargo, su importancia aparece cuando se integran en el sistema completo. Los componentes propuestos más destacados, presentados con un alto nivel de detalle, son los siguientes: (1) detección y reconstrucción de helipuertos, (2) percepción basada en odometría y marcadores visuales con reconstrucción del entorno, (3) percepción basada en odometría y visión por computador para mapas con cuadrícula, (4) percepción basada en la fusión de múltiples sensores con reconstrucción del entorno, y (5) planificación de trayectorias libre de colisión para entornos dinámicos. La tesis presenta también un entorno de software de código abierto, llamado Aerostack, que facilita la implementation eficiente de la arquitectura de sistema y los algoritmos desarrollados por medio de componentes de software. Este software se organiza de forma modular mediante paquetes agrupados por su funcionalidad, sus dependencias y su ciclo de vida. El entorno de software propuesto se basa en el middleware ROS para la comunicación interprocesos y utiliza un paradigma asincrono multiproceso en el que cada funcionalidad elemental se implementa como un solo proceso, facilitando el desarrollo y permitiendo un procesamiento distribuido. El entorno de software propuesto ha demostrado ser versátil y escalable, siendo los desarrolladores capaces de reutilizar tantos módulos de software como sea necesario, y de modificar o desarrollar nuevos módulos sin necesidad de adaptar otros componentes. ABSTRACT Achieving a fully autonomous navigation of a fleet of aerial robots when performing complex dynamic missions in challenging unstructured environments is an essential requirement to simplify the use of micro aerial vehicles and to extend their utilization to a greater number of applications. The development of a multi-robot fully autonomous intelligent system is still an open problem with partial and incomplete solutions in aerial robotics, and only some open source architecture frameworks for aerial systems have been developed so far, which present limitations in their autonomy level and in their versatility. This thesis presents a versatile system architecture for aerial robotics that enables the fully autonomous operation of an aerial multi-robot system and fulfills the requirements of being mission, platform, and environment agnostic. It has been characterized in an abstract and general level, defining its seven subsystems, their functionalities, and their interfaces in a top-level way that guarantees the versatility and flexibility. The seven proposed subsystems are: Feature Extraction System, Motor System, Situation Awareness System, Executive System, Planning System, Supervision System, and Communication System. This system architecture provides system designers the initial architecture for developing their own fully autonomous intelligent aerial multi-robot systems. The validation of the proposed system architecture is a complex task since the performance of the complete system is highly dependent on the mission, the environment, the hardware setup, the employed algorithms, and their software implementation. Three kinds of scenarios were successfully used to provide a global evaluation of the complete system, validating the performance of the proposed system architecture: (1) international aerial robotics competitions, (2) self-proposed challenges, and (3) public demonstrations. In addition, this thesis presents several algorithms, with different level of detail, that yield to an increased level of autonomy of the aerial robotic systems, developed in the context of particular applications. These algorithms can be gathered in the following five groups: (1) perception, (2) control, (3) planning and task execution, (4) intelligence and cognition, and (5) communication and interaction. All these components have been evaluated isolatedly, demonstrating their individual performance. Nevertheless, their importance stands out when integrated into the complete system. The most important components presented in this thesis, analyzed with a high level of detail, are the following: (1) helipad detection and reconstruction for shipboard landing, (2) perception based on odometry and visual markers with environment reconstruction, (3) perception based on odometry and computer vision for gridded maps, (4) perception based on multi-sensor fusion with environment reconstruction, and (5) collision-free path planning for dynamic environments. This thesis presents as well, an open-source software framework, called Aerostack, that facilitates a cost and time effective implementation of the designed system architecture and the developed algorithms by means of software components. This framework is modularly organized in software packages gathered by their functionality, their dependencies, and their life state. The proposed software framework relies on the widely used ROS middleware for interprocess communication and uses an asynchronous multiprocess paradigm where every elementary functionality is implemented as a single process, easing the development and allowing a distributed processing. The proposed software framework has demonstrated to be versatile and scalable, being the developers capable of reusing its software modules as needed, and modifying or developing new modules without adaptations of any other components.",,A General Architecture for Autonomous Navigation of Unmanned Aerial Systems,NO,,,,YES,,,,,NO,,
S2545,2,Forward,journalArticle,2022,"Masnavi, Houman; Adajania, Vivek Kantilal; Kruusamäe, Karl; Singh, Arun Kumar",IEEE Access,10.1109/ACCESS.2022.3157977,,"This paper proposes a Model Predictive Control (MPC) algorithm for target tracking amongst static and dynamic obstacles. Our main contribution lies in improving the computational tractability and reliability of the underlying non-convex trajectory optimization. The result is an MPC algorithm that runs real-time on laptops and embedded hardware devices such as Jetson TX2. Our approach relies on novel reformulations for the tracking, collision, and occlusion constraints that induce a multi-convex structure in the resulting trajectory optimization. We exploit these mathematical structures using the split Bregman Iteration technique, eventually reducing our MPC to a series of convex Quadratic Programs solvable in a few milliseconds. The fast re-planning of our MPC allows for occlusion and collision-free tracking in complex environments even while considering a simple constant-velocity prediction for the target trajectory and dynamic obstacles. We perform extensive bench-marking in a realistic physics engine and show that our MPC outperforms the state-of-the-art algorithms in visibility, smoothness, and computation-time metrics.",collision avoidance; Costs; dynamic obstacles; Heuristic algorithms; occlusion; Prediction algorithms; Predictive control; Quadrotors; Real-time systems; Target tracking; target-tracking; Trajectory optimization,Real-Time Multi-Convex Model Predictive Control for Occlusion-Free Target Tracking With Quadrotors,,NO,,,YES,,,,,NO,,
S2546,2,Forward,thesis,2020,"TOUIL, DJAMEL EDDINE",,,http://thesis.univ-biskra.dz/4755/,"Visual servoing has undergone major developments in recent years in the field of robotics. Since digital cameras are less expensive, lighter, and can potentially provide the robot equipments with a lot of information, which potentially promotes visual object tracking methods to be very promising for implementation in real-time applications. Through this thesis, we focus on the development system for a real tracking application basing on a visual servoing approach and of new visual tracking methods. To reach this goal, we draw two essential sub-objectives distributed into two parts. The first part is dedicated to the presentation of two object tracking methods that can determine the object’s trajectory over a sequence of images, whatever its shape. Although many object tracking methods have been developed over the last few years, some difficulties such as occlusion, fast motion, scale variation, and illumination variation can lead these methods to fall into tracking failure cases. We are particularly interested in improving the correlation filter-based method, which is one of the most effective tracking methods for real-time applications thanks to its simplicity. The main principle of these methods relies on the learning of the filter model in the frequency domain by using the Fourier transform to obtain a high precision with a reduced calculation complexity. However, Fourier transformation can cause undesirable effects, which can degrade the tracking quality. This makes these methods unable to distinguish between the target and its background. In this context, the first proposed method treats this limit by learning models of correlation filters via a convolutional neural network (CNN) features in the spatial domain using the PSO algorithm. In addition, we propose the HSV-based energy condition that has enriched the learning task by combining the RGB and HSV color bases. The second method learns the filter’s model in the frequency domain using the histogram of gradient (HOG) features to enable their implementation in real-time. We treat the drawback of boundaries in the frequency domain by applying a cosine window on feature channels. Furthermore, we adopt a re-detection module to improve the quality of tracking aginst the precited challenging cases The two proposed methods are validated on three reference datasets, OTB-50, VOT 2016 in the case of short-term tracking and UAV20L in the case of long-term tracking. The second part is dedicated to the design of an image-based controller taking into account both the quadrotor’s dynamics and the target’s motion during the tracking process, to accurately preserve it in the field of view (FOV). We adopt the concept of image-based visual servoing (IBVS) in which the computation of the control law is achieved by minimizing the error between the desired visual primitives and current primitives extracted from the image information. Lastly, we demonstrate through a virtual application that the proposed HOG-based tracking method can work reliably using the quadrotor’s camera to track two targets of variable sizes and distances, also the efficiency of our system in dealing with occlusion, and scale variation, demonstrating the applicability of the IBVS-HOG system. يمر موضوع الصيانة البصرية بتطورات كبيرة في السنوات الأخيرة في مجالات الروبوتات، ونظرًا لأن الكاميرات الرقمية يمكن أن تزود الروبوت بالكثير من المعلومات، فهي أقل تكلفة وخفيفة للغاية، ما يعزز طرق تتبع الأشياء المرئية ليكون واعدا للغاية ليطبق في الوقت الحقيقي. من خلال هذه الأطروحة، نركز على تطوير نظام موجه لتطبيق تتبع حقيقي يستند إلى منهج التحكم المرئي وطرق تتبع بصرية جديدة. لتحقيق هذا الهدف، نرسم هدفين فرعيين أساسيين يتم توزيعهما في جزأين. يخصص الجزء الأول لتقديم طريقتين لتتبع الكائنات يمكنهما تحديد مسار الكائن بمرور الوقت في سلسلة من الصور، أيا كان شكلها. على الرغم من أنه تم تطوير العديد من طرق تتبع الكائنات على مدار السنوات القليلة الماضية، إلا أن بع الصعوبات مثل الانسداد، الحركة السريعة، تغيير المقياس وتغيير الإضاءة قد تؤدي إلى سقوط هذه الطرق في فشل التتبع. نحن مهتمون بشكل خاص بتحسين الطريقة القائمة على عامل تصفية الارتباط، والتي تعد واحدة من أكثر طرق التتبع فعالية للتطبيقات في الوقت الفعلي بفضل بساطتها. يعتمد جانب هذه الطرق على معرفة نموذج المرشح في مجال التردد باستخدام تحويل فورييه للحصول على دقة عالية مع تعقيد حساب منخف . ومع ذلك، يمكن أن يتسبب تحويل فورييه في تأثيرات غير مرغوب فيها، والتي يمكن أن تتسبب في انخفاض جودة نموذج التتبع. هذا يجعل هذه الطرق غير قادرة على التمييز بين الهدف وخلفيته. في هذا السياق، تتعامل الطريقة الأولى المقترحة مع هذا الحد من خلال تعليم نماذج لمرشحات الارتباط عبر ميزات بالإضافة إلى ذلك، نقترح أن شرط الطاقة .PSO في المجال المكاني باستخدام خوارزمية )CNN( الشبكة العصبية التلافيفية .HSV و RGB قد ساعدت في مهمة التعلم من خلال الجمع بين قواعد الألوان HSV المستندة إلى لاستغلالها )HOG( الطريقة الثانية تعلم النموذج المرشح في مجال التردد باستخدام الرسم البياني لميزات التدرج في الوقت الحقيقي. نتعامل مع عيوب الحدود في مجال التردد من خلال تطبيق نافذة جيب التمام على قنوات الخصائص. علاوة على ذلك، فإننا نعتمد وحدة إعادة اكتشاف لتحسين جودة التتبع بين الحالات الصعبة المحددة. يتم التحقق من صحة في حالة التتبع على المدى VOT 2016 ،OTB- الطريقتين المقترحتين باستخدام ثلاث مجموعات بيانات مرجعية، 50 في حالة التتبع طويل الأجل. UAV20L القصير و الجزء الثاني، مخصص لتصميم وحدة تحكم قائمة على الصور مع مراعاة كل من ديناميكيات الطائرة رباعية الدوار وحركة الهدف أثناء عملية التتبع، للحفاظ عليها بدقة في مجال الرؤية. نعتمد مفهوم التحكم البصري المرتكزة على الصور والذي يتحقق فيه حساب قانون التحكم عن طريق تقليل الخطأ بين الخصائص المرئية المرغوبة والخصائص المرئية الحالية المستخرجة من معلومات الصورة. في الأخير، نوضح من خلال تطبيق افتراضي أن طريقة التتبع المعتمدة على خصائص الرسم البياني المتدرج يمكن أن تعمل بشكل موثوق على الطائرة رباعية المحرك ذات الكاميرا الثابتة لتتبع هدفين بأحجام و مسافات متغيرة، مما يدل على مدى قوة نظامنا في التعامل مع التغطية واختلاف أبعاد الشيء، مما يثبت قابلية تطبيق وفعالية النظام المقترح.",,Control of Nonlinear Systems by Visual Servoing: Visual object tracking for a quadrotor using image-based visual servoing,NO,,,,YES,,,,,NO,,
S2547,2,Forward,journalArticle,2020,"Nakamura, Takuma; Johnson, Eric N.",Journal of Aerospace Information Systems,10.2514/1.I010712,https://doi.org/10.2514/1.I010712,"This paper presents a novel state estimation system for unmanned aerial vehicle landing. A novel vision algorithm that detects a portion of the marker is developed, and this algorithm extends the detectable range of the vision system for any known marker. A vision-aided navigation algorithm is derived within extended Kalman particle filter and Rao–Blackwellized particle filter frameworks in addition to a standard extended Kalman filter framework. These multihypothesis approaches not only deal well with a highly nonlinear and non-Gaussian distribution of the measurement errors of vision but also result in numerically stable filters. The computational costs are reduced compared to a naive implementation of particle filter, and these algorithms run in real time. This system is validated through numerical simulation, image-in-the-loop simulation, and flight tests.",,Multiple-Hypothesis Vision-Based Landing Autonomy,,NO,,,YES,,,,,NO,,
S2548,2,Forward,webpage,,,,,https://repository.kaust.edu.sa/handle/10754/629870,,,Robotic Manipulation and Control for Mobile Autonomous Platforms: Design and Implementation,NO,,,,NO,,,,,NO,,
S2549,2,Forward,webpage,,,,,https://www.proquest.com/openview/afe81a25cfde656d18e817aee66f37b4/1?pq-origsite=gscholar&cbl=2026366&diss=y,"Explore millions of resources from scholarly journals, books, newspapers, videos and more, on the ProQuest Platform.",,Mixed-Reality and High-Fidelity Simulation in Autonomous Unmanned Aerial Systems - ProQuest,NO,,,,NO,,,,,NO,,
S2550,2,Forward,conferencePaper,2018,"Pianpak, Poom; Son, Tran Cao; Toups, Zachary O.",PRIMA 2018: Principles and Practice of Multi-Agent Systems,10.1007/978-3-030-03098-8_48,,"This paper describes a simulator environment for humans to direct a team of independent drones by allowing humans to issue high-level goals to the teams or drones. Given a goal, the environment will generate plans for the drones and monitor their execution while attending to humans requests (e.g., aborting a goal, introducing a new goal). For this reason, the environment includes two specific modules, a planning module and an execution and monitoring module, besides the modules for simulation and control of drones. The environment is implemented on the Robot Operating System (ROS), a well-known framework for the development of robotic applications, that facilitates the communication between its components. Experiments are included to highlight the applicability of the environment.",Drone Activity; Drone Control; Human-robot Interaction Applications; Planning Domain Description Language (PDDL); Robot Operating System (ROS),A Multi-agent Simulator Environment Based on the Robot Operating System for Human-Robot Interaction Applications,,NO,,,YES,,,,,NO,,
S2551,2,Forward,conferencePaper,2018,"Bender, Daniel; Koch, Wolfgang; Cremers, Daniel","Multisensor Fusion and Integration in the Wake of Big Data, Deep Learning and Cyber Physical System",10.1007/978-3-319-90509-9_10,,"Up to the present day, GPS signals are the key component in almost all outdoor navigation tasks of robotic platforms. To obtain the platform pose, comprising the position as well as the orientation, and receive information at a higher frequency, the GPS signals are commonly used in a GPS-corrected inertial navigation system (INS). However, the GPS is a critical single point of failure for unmanned aircraft systems (UAS). We propose an approach which creates a metric map of the overflown area by fusing camera images with inertial and GPS data during normal UAS operation and use this map to steer the system efficiently to its home position in the case of an GPS outage. A naive approach would follow the previously traveled path and get accurate pose estimates by comparing the current camera image with the previously created map. The presented procedure allows the usage of shortcuts through unexplored areas to minimize the travel distance. Thereby, we ensure to reach the starting point by taking into consideration the maximal positional drift while performing pure visual navigation in unknown areas. We achieved close to optimal results in intensive numerical studies and demonstrate the usage of the algorithm in a realistic simulation environment and the real-world.",Drone; Navigation; Path planning; SLAM; UAS,SLAM-Based Return to Take-Off Point for UAS,,NO,,,YES,,,,,NO,,
S2552,2,Forward,bookSection,2019,"Santamaria-Navarro, Angel; Solà, Joan; Andrade-Cetto, Juan",Visual Guidance of Unmanned Aerial Manipulators,,https://doi.org/10.1007/978-3-319-96580-2_4,"Multirotors, and in particular quadrotors such as the ones used in this book, are underactuated platforms. That is, they can change their torque load and thrust/lift by altering the velocity of the propellers, with only four DoFs (e.g., one for the thrust and three torques). But, as shown in this Chapter, the attachment of a manipulator arm to the base of the robot can be seen as a strategy to alleviate underactuation allowing UAMs to perform complex tasks.",Controllable DoFs; Inflation Radius; Quadrotor; Task Jacobian; Visual Servoing,Task Control,,NO,,,YES,,,,,NO,,
S2553,2,Forward,journalArticle,2018,"Armijos, Andres",PhD Dissertations and Master's Theses,,https://commons.erau.edu/edt/396,,,Homography-Based State Estimation for Autonomous Exploration in Unknown Environments,,NO,,,YES,,,,,NO,,
S2554,2,Forward,journalArticle,2022,"Asami, Koki; Bai, Yang; Svinin, Mikhail; Hatayama, Michinori",Artificial Life and Robotics,10.1007/s10015-022-00755-w,https://doi.org/10.1007/s10015-022-00755-w,"This paper presents a control strategy for survivor searching in a dynamically changing flood zone using a group of unmanned aerial vehicles (UAVs). Assuming that there are multiple groups of the survivors, the positions which are time-varying and cannot be accurately located, the control strategy requires the UAVs to optimally cover possible locations of survivors in the flood zone. A robust adaptive controller has been proposed to implement the strategy, the feasibility of which is verified under simulations in the presence of time-varying uncertainties.",Multi-agent coverage control; Robust adaptive control,Survivor searching in a dynamically changing flood zone by multiple unmanned aerial vehicles,,NO,,,YES,,,,,NO,,
S2555,2,Forward,journalArticle,2021,"Takayama, Yusuke; Ratsamee, Photchara; Mashita, Tomohiro",Robotics,10.3390/robotics10040131,https://www.mdpi.com/2218-6581/10/4/131,"Recently, several deep-learning based navigation methods have been achieved because of a high quality dataset collected from high-quality simulated environments. However, the cost of creating high-quality simulated environments is high. In this paper, we present a concept of the reduced simulation, which can serve as a simplified version of a simulated environment yet be efficient enough for training deep-learning based UAV collision avoidance approaches. Our approach deals with the reality gap between a reduced simulation dataset and real world dataset and can provide a clear guideline for reduced simulation design. Our experimental result confirmed that the reduction in visual features provided by textures and lighting does not affect operating performance with the user study. Moreover, by conducting collision detection experiments, we verified that our reduced simulation outperforms the conventional cost-effective simulations in adaptation capability with respect to realistic simulation and real-world scenario.",collision detection; micro aerial vehicles; reduced simulation,Reduced Simulation: Real-to-Sim Approach toward Collision Detection in Narrowly Confined Environments,,NO,,,YES,,,,,NO,,
S2556,2,Forward,thesis,2014,"Nguyen, Trung",,,https://research.library.mun.ca/8283/,"The objective of this thesis is to develop a vision-based navigation and control technique for quadrotor to operate in GPS-denied environments. The navigating technique has been developed while using Visual-Teach-and-Repeat (VT&R) method. This method is qualitative where the position of the quadrotor is estimated based on a set of reference images. These reference images are collected while taking the quadrotor manually along a desired route. Each image, collected in the database, represents one segment of the desired route. The features are extracted from these images using a well-known method, Speeded-Up Robust Features (SURF) [1]. When the quadrotor is navigated along the desired route (repeat mode), the quadrotor performs self-localization. Three methods of self-localization are presented. In method I, the SURF features observed on the current image are matched with the SURF features of the reference images to compute the probability value of each segment in the desired route. The segment that provides the best probability value is chosen as the current segment of the quadrotor. To improve the accuracy of localization, in the method II, the condition of feature-size relation with spatial distance is imposed. In the method III, the estimation of the current segment of the quadrotor is built on Bayes’s rule. Based on the appearance-based error of feature coordinates, the system computes qualitative motion control commands (desired yaw and height) for the next movement in order to control the quadrotor to follow the desired route. This computation is developed on Funnel Lane theory, which was originally proposed in [2], in order to 2D navigate ground vehicle following the desired route. The thesis extends it to 3D navigation for the quadrotor. Funnel Lane theory qualitatively defines possible positions where the vehicle can fly straight by the constraints of features coordinates between the current image and the reference image. If the quadrotor locates outside the funnel lane, it will be navigated back to the funnel lane. A nonlinear geometric controller has been developed to convert the motion control commands, generated basing on VT&R technique, into control inputs necessary for the four rotors in the quadrotor. The design of proposed controller is simplified by concentrating on the errors of rotational matrix, instead of attempting to access the errors of each degree of freedom. The quadrotor for this thesis is chosen as the well-known AR.Drone model [3]. The whole system is modeled and simulated in Gazebo simulator using Robot Operating System (ROS). Four image databases have been used for testing self-localization: two databases around Engineering building of Memorial University of Newfoundland, COLD database and New College database. With proposed VT&R technique, the quadrotor is able to independently follow a long route without GPS-information or the support from an external tracking system. The proposed system has a simple implementation, inexpensive computation and high potential for exploring and searching-and-rescuing missions.",,Development of a visual-teach-and-repeat based navigation technique on quadrotor aerial vehicle,NO,,,,YES,,,,,NO,,
S2557,2,Forward,journalArticle,2017,백동훈; 배동성; 강태구; 임묘택,제어로봇시스템학회 국내학술대회 논문집,,https://www.dbpia.co.kr/journal/articleDetail?nodeId=NODE07186133,"논문, 학술저널 검색 플랫폼 서비스",,모바일 로봇 제어를 위한 ROS 기반 실시간 손 동작 인식 시스템 개발,,,NO,NO,YES,,,,,NO,,
S2558,2,Forward,thesis,2020,"Gartner, Nicolas; Hugel, Vincent",,,https://www.theses.fr/2020TOUL0004,"Cette thèse porte sur les techniques de simulations des interactions dynamiques entre un véhicule sous-marin et l'eau qui l'entoure. L'objectif principal est de proposer une solution satisfaisante pour pouvoir, en amont du processus de conception, tester des algorithmes de contrôle et des formes de coques pour véhicules sous-marins. Il serait alors intéressant de pouvoir simuler en même temps la dynamique du solide et celle du fluide. L'idée développée dans cette thèse est d'utiliser la technique Smoothed Particles Hydrodynamics (SPH), qui est très récente et qui modélise le fluide comme un ensemble de particules sans maillage. Afin de valider les résultats de simulations une première étude a été réalisée avec un balancier hydrodynamique. Cette étude a permis la mise au point d'une méthode innovante d'estimation de paramètre hydrodynamique (forces de frottement et masse ajoutée) qui est plus robuste que les méthodes existantes lorsqu'il est nécessaire d'utiliser des dérivées numériques du signal mesuré. Ensuite, l'utilisation de deux types de solveur SPH : Weakly Compressible SPH et Incompressible SPH, est validée en suivant la démarche de validation proposée dans cette thèse. Sont étudiés, premièrement, le comportement du fluide seul, deuxièmement, un cas hydrostatique, et enfin un cas dynamique. L'utilisation de deux méthodes de modélisation de l'interaction fluide-solide : la méthode de réflexion de la pression et la méthode d'extrapolation est étudiée. La capacité d'atteindre une vitesse limite due aux forces de frottement est démontrée. Les résultats d'estimation des paramètres hydrodynamiques à partir des essais de simulation est finalement discutée. La masse ajoutée simulée du solide s'approche de la réalité, mais les forces de frottement semblent actuellement ne pas correspondre à la réalité. Des pistes d'améliorations pour pallier à ce problème sont proposées.","Analyse numérique; Écoulement incompressible; Fluid-solid interaction; Fluid-structure; Fluides incompressibles; Fluides, Dynamique des; Frottement; Hydraulique; Hydrodynamic; Hydrodynamic parameters; Hydrodynamique; Incompressible flow; Interaction fluide-solide; Interaction fluide-structure; Modèles théoriques; Numerical methods; Paramètres hydrodynamique; Robotique; Simulation numérique; Smoothed Particles Hydrodynamics; Sous-marins; Submarine; Underwater robotics",Identification de paramètres hydrodynamiques par simulation avec Smoothed Particle Hydrodynamics,NO,,,,YES,,,,,NO,,
S2559,2,Forward,journalArticle,2017,남해운,한국통신학회 하계종합학술발표회,,https://scholarworks.bwise.kr/erica/handle/2021.sw.erica/9561,무인 비행체의 효과적인 개발을 위해서 시뮬레이션은 필수적이라 할 수 있다 그러나 단순히 그래픽의 위치 제어를 통한 군집 시뮬레이션은 실제 비행체에 적용시키는 상황과 차이가 있다 . 본 논문에서는 실제 다수의 무인 비행체의 통신에서 활용되는 MAVLink 메시지를 ROS 환경에서 활용하여 여러 대의 가상 UAV 인스턴스를 제어함으로서 실제 환경과 거의 같은 구조에서 시뮬레이션을 함으로써 실제 무인 비행체의 더 높은 테스트 안정성을 기대할 수 있다.,,MAVLink 메세지를 활용한 드론 군집제어 시뮬레이션,,,NO,NO,YES,,,,,NO,,
S2560,2,Forward,webpage,2019,"Canada, Library and Archives",,,https://www.bac-lac.gc.ca/eng/services/theses/Pages/item.aspx?idNumber=1132126189,Search - Theses Canada - Library and Archives Canada,,Search - Theses Canada,NO,,,,YES,,,,,NO,,
S2561,2,Forward,journalArticle,,"Lupu, Ilan",,,,,,Optimal Construction of Control Graphs in Multi-Robot Systems,,,,,NO,,,,,NO,,
S2562,2,Forward,thesis,2020,"Pinheiro Saraiva, Henrique",,,http://www.maxwell.vrac.puc-rio.br/Busca_etds.php?strSecao=resultado&nrSeq=51224@1,,,PROJETO E AVALIAÇÃO DE DESEMPENHO DE CONTROLADORES PARA QUADRICÓPTEROS,NO,,,NO,YES,,,,,NO,,
S2563,2,Forward,journalArticle,,"Linkugel, Thomas; Tübingen, Eberhard Karls Universität; Fakultät, Mathematisch-Naturwissenschaftliche",,,,,,Ein modellbasiertes Verfahren zur Entwicklung von VTOL-MAVs mittels einer 3D-Echtzeit-Simulation,,,,,NO,,,,,NO,,
S2564,2,Forward,journalArticle,2016,나웅규; 박성준; 김황남,한국통신학회 학술대회논문집,,https://www.dbpia.co.kr/journal/articleDetail?nodeId=NODE06739940,"논문, 학술저널 검색 플랫폼 서비스",,드론 편대 네트워크 시뮬레이터,,,,NO,YES,,,,,NO,,
S2565,2,Forward,journalArticle,2018,이수전; 이병선; 안재영,한국항공우주학회 학술발표회 초록집,,https://www.dbpia.co.kr/journal/articleDetail?nodeId=NODE07619783,"논문, 학술저널 검색 플랫폼 서비스",,대단위 다중 드론 시뮬레이션 아키텍처,,,,NO,YES,,,,,NO,,
S2566,2,Forward,journalArticle,,"Schäfer, Björn Erwin",,,,,,Automatisierte Befliegung von Windenergieanlagen mit einem Multikopter zu Inspektionszwecken,,NO,,,NO,,,,,NO,,
S2567,2,Forward,book,2014,"Lundin, Zacharias; Eriksson, Johan",,,http://urn.kb.se/resolve?urn=urn:nbn:se:oru:diva-41989,DiVA portal is a finding tool for research publications and student theses written at the following 50 universities and research institutions.,,Datorsimulering av gruvlastare för funktionell testning,,,,NO,YES,,,,,NO,,
S2568,2,Forward,journalArticle,2022,"Padilla Mendoza, Sebastián Andrés; Medina Palacio, Esteban",,,https://repository.eia.edu.co/handle/11190/5285,"RESUMEN: En este trabajo se presenta el diseño y construcción de un prototipo Quadrotor y una primera aproximación de su sistema de control basado en software open-source, para el uso de estudiantes en sus prácticas de laboratorio, presentando su modelación matemática para 6DOF y un sistema de control implementado mediante el modelo teórico en dos grados de libertad Pitch y Roll, para el cual se usa como unidad de procesamiento el microcontrolador Teensy 4.0 en conjunto de una unidad inercial BNO055 que permite la obtención de ángulos de Euler y la orientación del dispositivo en quaterniones para futuras implementaciones. Previo a la construcción del quadrotor se desarrolla la metodología de diseño propuesta por George E. Dieter y Linda C. Schmidt, mediante una identificación de necesidades, uso de herramientas como PDS, casas de la calidad, matriz morfológica y matrices de PUGH, que ayudarán a escoger los debidos materiales y componentes para la construcción del dispositivo, adicionalmente se describe la cinemática y dinámica del multirotor, siendo esta última desarrollada mediante la formulación de Newton-Euler. El modelo de entrada y salida del quadrotor para la implementación de una estrategia de control fue hallada de forma teórica haciendo uso del modelo dinámico, posteriormente el cálculo del coeficiente de empuje de los rotores se realizó empíricamente realizando una aproximación lineal del mismo, mediante la toma de datos del empuje en diferentes valores de la señal de control. El controlador implementado para el acercamiento del sistema de control será un control PID por ganancia fija. Este controlador fue sintonizado mediante el modelo de entrada y salida con simplificación de dos grados de libertad en sus ángulos Pitch y Roll, aprovechando la capacidad de desacoplo de ángulos que proporciona la aproximación de ángulos pequeños, trabajando como sistema SISO (Single Input, Single Output) cada ángulo. La implementación del sistema de control y el sistema de interacción con el dispositivo (interfaz gráfica), se desarrolló de tal modo que cualquier persona pueda acceder a este (código abierto). Lo anterior, mediante la IDE Arduino con código C++ y Python 3.10.4, proporcionando plantillas de control para los estudiantes. Por último, se realizan pruebas de funcionamiento y análisis de respuesta del sistema de control implementado, además se proponen guías de laboratorio para desarrollar el planteamiento del sistema de control.",,Diseño y construcción de un dispositivo Quadrotor open-source para el desarrollo de prácticas de laboratorio en la Universidad EIA,,,,NO,YES,,,,,NO,,
S2569,2,Forward,webpage,,,,,https://escuelaing-dspace.metabiblioteca.com.co/handle/001/1130,,,Supervisión autónoma de cultivos agrícolas por medio de vehículos aéreos no tripulados (UAV) usando técnicas de procesamiento de imágenes y fotogrametría,NO,,,,NO,,,,,NO,,
S2570,2,Forward,thesis,2020,"Vidaković, Josip",,,https://urn.nsk.hr/urn:nbn:hr:235:132746,"Chapter 1: Introduction. This section is concerned with giving the research context of the thesis. It gives the motivation behind developing learning capabilities for technical systems, especially robotic systems. The one emphasized are the need for higher flexibility and autonomy of such systems in order to remove the barrier of highly specialized knowledge needed during the application of robots in the industry or in the service robotics field. The problem of task-oriented behavior is viewed from the programming and learning perspectives. Three common approaches for accomplishing such high-level behavior have been addressed: learning from demonstration, reinforcement learning and task-oriented motion planning. Current accomplishments in all three fields are referenced and specific advantages and disadvantages of each approach are covered. Based on this, the motivation for the research direction taken in this thesis is pointed out. The research hypothesis and goals are defined. On the end of this section, the structure of the thesis is given.  Chapter 2: Learning from demonstration. On the beginning of this section, a broader overview of learning from demonstration (LfD) specific problems is given. The correspondence problem is pointed out together with most frequent demonstration mechanisms. Methods for encoding demonstrated trajectories are covered in both the statistical modeling aspect and encoding based on dynamical systems. The DMP parametrization and its characteristics are covered in detail as it is used for trajectory encoding in other parts of the thesis. Two main approaches for encoding generalizability into learning from demonstration methods are covered – task parametrization and inverse reinforcement learning. A novel methodology for the analysis of demonstrations based on trajectories obtained by kinesthetic teaching is proposed and covered. The method uses a novel classification mechanism in order to determine attracting points, non-attracting points and obstacle points in the working environment of the robot. Experimental results of this methodology are presented and commented on the end of this section. Chapter 3: Task-oriented trajectory planning. Demonstration sampling and analysis by the methodology from the previous section is performed in Cartesian space. In this section, task-oriented reproduction of trajectories in the same domain is performed. Common trajectory representations used in robotics that can be used both for planning in configuration space and operational space and their parametrizations are covered. As the thesis focuses on the application of primitive motions in task-oriented programming, this section gives an overview of the application of primitive motions in task-oriented scenarios. A modified DMP representation is presented which is capable of explicitly using the information obtained by the demonstration analysis. It has the capability of encoding variational information in the low level DMP trajectory definition and achieves this by introducing a modified time function instead of the standard exponential decay function. The methodology is originally presented in the conference paper: Task Dependent Trajectory Learning from Multiple Demonstrations Using Movement Primitives. After this, a Cartesian optimization-based path planning model is proposed, based on the following paper: Learning from Demonstration Based on a Classification of Task Parameters and Trajectory Optimization. The model is capable of encoding the information from the demonstration analysis by approximating identified via-points and avoiding identified obstacles. The path planning model is transferred into a DMP trajectory using the special DMP state representation presented earlier. The trajectory planning approach is verified on a presented experimental setup.  Chapter 4: Reinforcement learning in continuous environments. As models learned from demonstrations often fail to produce completely accurate task solution in the extrapolation phase, the idea of local trajectory improvement through self-exploration has been considered in this section. Reinforcement learning provides the general framework for achieving this. This section therefore covers the theoretical overview of RL, which provides the basis for explaining the methodology seen in the continuous space scenario. Policy search methods are identified as the most suitable when performing improvements on the trajectory level with continuous parametrization. Two main approaches for policy search are covered: critic-based approaches and “black-box” optimization (BBO). Both perform learning directly in the parameters space by observing and evaluating agent’s interactions with the environment. However, BBO approaches simplify the required evaluation mechanism while having comparable performance to critic-based approaches. Possible policy representations in the trajectory domain are covered in a special subsection. The application of a BBO algorithm together with a DMP policy parametrization is demonstrated at the end of this section.  Chapter 5: Iterative learning for stochastic tasks. The BBO policy search methodology presented in the previous section implies the direct interaction of the agent (robot) with the environment. As searching in the parameter space of the trajectory policy in real environments is very dangerous and can lead to physical damages of both the robot and environment, a simulation setup is here introduced, suitable for robot learning. The setup is based on the ROS based physics simulator Gazebo. Based on this, a task-oriented iterative learning setup is proposed. At its core, the setup consists of black-box optimization which is given in the form of the evolutionary CMA-ES algorithm. The policy parametrization responsible for the execution of trajectories in the simulation environment is in the DMP form. The CMA-ES algorithm is responsible for updating the policy weight parameters with respect to a task-oriented cost-function. This closes the policy search loop which is performed in an iterative manner in order to achieve task learning convergence. The methodology was tested on two tasks: a peg-in-hole task and a sweeping task. Since the tasks showed high stochasticity with respect to the goal-oriented cost functions, two criteria to evaluate such learning processes where proposed. A best-current solution metric and a current average metric. The first one keeps track of the best solution achieved in the policy search process, while the later gives information about the overall quality of the learning process.  Chapter 6: LfD as a basis for iterative learning. The iterative learning algorithm presented in the previous section was initialized by an empirical strategy which used a linear trajectory. Previous research suggested that the search in big parameter spaces is very dependent on the initial conditions and exploration is mostly only locally oriented. In this section, results of the iterative learning algorithm are given, when initialized from demonstrations. The demonstration methodology followed the one presented in section two, which involved kinesthetic guidance for demonstration collection and the coordinate frame classification methodology for extracting useful via-points. The initial cartesian DMP trajectories where constructed using the optimization-based methodology from section three. The obtained results showed that the LfD initialization strategy lead to significantly better results in terms of the quality of the searched solutions as well as faster convergence to applicable solutions. Findings presented in this section are based on the following paper: Accelerating Robot Trajectory Learning for Stochastic Tasks.  Chapter 7: Conclusion This section discusses the summary and the main achievements of the doctoral thesis. The main contributions can be viewed as: I) a novel learning from demonstration method for the analysis of trajectory level demonstrations, based on the classification of coordinate frames, II) an optimization-based cartesian trajectory planning algorithm with coordinate frame approximation and obstacle avoiding capabilities, III) a simulation based, iterative learning framework for task-oriented trajectory learning compatible with the LfD methodology. Future research will be focused on finding more efficient algorithms for policy search with sparse evaluation and testing the applicability of different policy representation. The possibilities for automatic estimation of exploration rates will be explored, as well as the automatic extraction of end-result-oriented cost/reward functions in order to remove the need for hand crafted functions.",,Model učenja robotskog zadatka zasnovan na interakciji s čovjekom,NO,,,,YES,,,,,NO,,
S2571,2,Forward,conferencePaper,2020,"Simões, Gustavo Mota; Sá, Alirio Santos de",Anais Estendidos do Simpósio Brasileiro de Redes de Computadores e Sistemas Distribuídos (SBRC),10.5753/sbrc_estendido.2020.12422,https://sol.sbc.org.br/index.php/sbrc_estendido/article/view/12422,"Este artigo apresenta um framework baseado em middleware de robótica e um simulador físico, que provê funcionalidades adequadas à simulação física de cenários com múltiplos veículos aéreos não tripulados (VANT), permitindo obter informações e controlar o movimento de tais veículos e o fluxo do tempo simulado. O objetivo dessa aplicação é atuar cooperando com outros softwares, fornecendo uma camada de abstração, facilitando o processo de monitoramento e manipulação do ambiente virtual.",,Um Framework para Simulação de Sistemas Robóticos baseados em Múltiplos Veículos Aéreos Não Tripulados,,,,NO,YES,,,,,NO,,
S2572,2,Forward,journalArticle,2016,"Barros, Jessé Barreto de",,,https://bdm.unb.br/handle/10483/17074,"Este trabalho possui como objetivo a implementação de uma técnica para a localização e o mapeamento simultâneos de um robô aéreo (VANT) do tipo quadrirrotor dentro de um local de ambiente fechado (indoor), através da utilização dos dados provenientes dos seus sensores inerciais e das imagens obtidas pelas suas câmeras embutidas. O projeto foi baseado na utilização de uma técnica para a localização e o mapeamento visual monocular (PTAM) aliado à um filtro de kalman estendido para efetuar a fusão de dados e predizer a posição do VANT em tempo real. O desenvolvimento foi feito utilizando recursos da plataforma ROS. Foram efetuados experimentos com um AR.Drone como VANT e com o ambiente de simulação Gazebo que é compatível para utilizar recursos do ROS. Adicionalmente, buscou-se a utilização de uma placa de desenvolvimento do tipo SoC para atuar como computador remoto para processamento dos algoritmos do sistema. Espera-se que esse trabalho venha contribuir com a adição de conhecimentos sobre plataforma ROS para o laboratório LEIA e também a utilização de técnicas de localização e mapeamento para robôs móveis.",,Localização e mapeamento de VANT quadrirrotor indoor,,,,NO,YES,,,,,NO,,
S2573,2,Forward,journalArticle,,,,,http://seer.spo.ifsp.edu.br/index.php/posgere/article/view/199,"Resumo      O estudo de robôs tem se tornou recorrente no ambiente acadêmico, em setores profissionais e amadores, isto é alavancado pela redução dos custos de componentes e da disponibilidade de ferramentas gratuitas, tais como: ROS; Arduíno; e Linux. Um dos grandes obstáculos dessa tarefa de elaborar sistemas robóticos é a integração dos diversos componentes construtivos, estes fabricados por diferentes empresas e com metodologias de uso diversos. Este trabalho visa a elaboração de um sistema operacional utilizando o ambiente de desenvolvimento ROS (Robot Operating System – Sistema Operacional para Robôs), o qual propõe a melhora da integração de subsistemas e componentes pertencentes aos robôs. Este ambiente favorece a concepção em diversas frentes concomitantes, mantendo a coesão do sistema. Outro fator fundamental é que ROS é um ambiente gratuito com grande comunidade colaborativa, oferecendo diversos módulos de funcionalidades específicas (operação remota, controle de posição) e exemplos disponíveis para o uso. A maior contribuição desse trabalho é a elaboração de um sistema que possa auxiliar na expansão de tecnologias aplicadas para robôs do tipo quad-rotor, possibilitando avanços mais rápidos e em harmonia com o que tem sido utilizado por outros pesquisadores.",,DESENVOLVIMENTO DE AMBIENTE OPERACIONAL ROS PARA QUAD-ROTORES | POSGERE - Pós-Graduação em Revista / IFSP - Campus São Paulo,,,,NO,NO,,,,,NO,,
S2574,2,Forward,journalArticle,2019,"Hansen Henriksen, Lasse",,,https://ntnuopen.ntnu.no/ntnu-xmlui/handle/11250/2625755,"I de siste årene har fagfeltet forsterkendelæring opplevd en renessanse på grunn av gjennombrudd i feltet selv, og på grunn av andre muliggjørende teknologier slik som effektive software verktøy, beregningskraft og særlig forskning på kunstige nevrale nettverk. Bruk av nevrale nettverk sammen med forstærkende læring har utviklet seg til å være regelen i stedet for unntaket, og det finnes flere eksempler som viser denne teknologiens imponerende problemløsningsevner som et generelt rammeverk for å løse komplekse problemer. På grunn av hvor generelt dette rammeverket er kan det brukes på et stort utvalg av problemer, inkludert robotteknikk og kontroll. Et problem innenfor robotteknikk av interesse er kontroll av quadcoptere, som på samme måte har sett en gjenoppblomstring av interesse på grunn av dets anvendelighet til en rekke oppgaver inkludert overvåking, transport og kommersielle leveringstjenester. Selv om kontroll av quadcopters er et godt studert problem i litteraturen, er det fortsatt vanskelig på grunn av dets underaktuerte natur, vanskeligheten ved å modellere krefter relatert til aerodynamikk, og navigering i områder uten GPS dekning. I denne oppgaven studeres oppgaven med å holde et quadcopter svevende i et gitt 3-dimensjonalt referanse punkt, og ett kontroller design som forsøker å forene tilnærminger fra forsterkende læring, datasyn og tradisjonell kontrollteori presenteres. Ved å bruke denne kontrolleren i et simulert miljø viser vi at styreenheten er i stand til å løse problemet både ved bruk av de sanne posisjoneringsvariablene og ved hjelp av indikative tilstandsvariabler basert på en enkel datasyn algoritme. Videre overføres kontrolleren som er blitt testet i simulering til et virkelig quadcopter-system hvor kontrolleren testes på samme problem. Vi demonstrerer så hvordan kontrolleren generaliserer med hensyn til hva den har lært i simulering, og hvordan trening av kontrolleren for å tilpasse seg den virkelige verden kan oppnås gjennom en praktisk metode. Til sist vises kontrollerens evne til å kontrollere quadcopteret etter at den har fått trent i den virkelige verden.",,Hovering Control of a Quadrotor Using Monocular Images and Deep Reinforcement Learning,,NO,,,YES,,,,,NO,,
S2575,2,Forward,conferencePaper,2017,"Викторов, Александр Сергеевич",,,https://elibrary.ru/item.asp?id=29305661,"В статье предлагается к рассмотрению алгоритм, предназначенный для реализации системы планирования траектории полета и автономной навигации беспилотного летательного аппарата. Для реализации подобной навигационной системы способной работать автономно, анализируя поток данных, генерируемый сенсорной системой аппарата, используются программные компоненты фреймворка для программирования роботов ROS.",Беспилотный Летательный Аппарат Бпла; Навигация; Планирование Траектории; Уклонение От Столкновения,Реализация алгоритма автономной навигации беспилотного летательного аппарата,,,,NO,YES,,,,,NO,,
S2576,2,Forward,journalArticle,2017,"Cerón Correa, Alexander",,,https://repositorio.unal.edu.co/handle/unal/58625,"Abstract. In this work, a set of vision techniques applied to a UAV (Unmanned Aerial Vehicle) images is presented.  The techniques are used to detect electrical lines and towers which are used in vision based navigation and for 3D associated terrain reconstruction. The developed work aims to be a previous stage for autonomous electrical infrastructure inspection. This work is divided in four stages: power line detection,  transmission tower detection, UAV navigation and 3D reconstruction of associated terrain.  In the first stage, a study of algorithms for line detection was performed. After that, an algorithm for line detection called CBS (Circle Based Search) which presented good results with azimuthal images was developed. This method offers a shorter response time in comparison with the Hough transform and the LSD (Line Segment Detector) algorithm, and a similar response to EDLines which is one of the fastest and most trustful algorithms for line detection.  Given that most of the works related with line detection are focused in straight lines, an algorithm for catenary detection based on a concatenation process was developed. This algorithm was validated using real power line inspection images with catenaries.  Additionally, in this work a tower detection method based on a feature descriptor with the capacity of detecting towers in times close to 100 ms was developed.    Navigation over power lines by using UAVs requires a lot of tests because of the risk of failures and accidents.  For this reason, a virtual environment for real time UAV simulation of visual navigation was developed by using ROS (Robot Operative System), which is open source. An onboard visual navigation system for UAV was also developed. This system allows the UAV to navigate following a power line in real sceneries by using the developed techniques. In the last part a 3D tower reconstruction that uses images obtained with UAVs is presented.},      keywordenglish = {line detection, inspection, navigation, tower detection, onboard vision system, UAV.",,UAV vision system: Application in electric line following and 3D reconstruction of associated terrain,,NO,,,YES,,,,,NO,,
S2577,2,Forward,journalArticle,2022,"Maldonado Valencia, Ronald",Ingeniería en Automatización,,https://ciencia.lasalle.edu.co/ing_automatizacion/813,,,Planeador servo visual de trayectorias para manipulación robótica,,,,NO,YES,,,,,NO,,
S2578,2,Forward,journalArticle,2020,"Patík, Vladimír",,,https://dspace.cuni.cz/handle/20.500.11956/120926,"V této diplomové práci navrhujeme řešení problému vyhledávání a sledování vzdušným pronásledovatelem unikajícího pozemního objektu v 3D prostředí. Kromě statických překážek se mohou v prostředí vyskytovat překážky dynamické, které nejsou zakresleny na dronovi poskytnuté mapě. Aby nedošlo ke srážce, byla navržena bezpečnostní metoda založená na zpracování obrazu ze vstupní kamery neuronovou sítí. Podúloha sledování je řešena reaktivním algoritmem uzpůsobeným pro pohyb v zastavěném území. Pravděpodobnostní algoritmus pro vyhledávání je založen na řešení Art Gallery a Orienteering problémů pomocí přírodou inspirovaných algoritmů. Všechny algoritmy a postupy jsou evaluovány v simulovaném prostředí na náhodně vygenerovaných mapách.",,Vyhledávání a sledování objektů autonomním dronem,,,,NO,YES,,,,,NO,,
S2579,2,Forward,journalArticle,2018,"Lien, Tran Van; Thang, Nguyen Viet; Hoang, Quach Cong; Hieu, Phan Xuan; Trien, Pham Minh",,,,"How can we eﬃciently search an object in a room? This report introduces a method for a single indoor mobile robot to ﬁnd a hidden item based on states of the room when the robot is moving. A 2D distribution, called cognitive map, is built during robot movements to boost the exploring time. It is known that in the ﬁled of exploring algorithms, A∗ usually takes more time to reach the target than recent invented algorithms such as rapidly-exploring random trees (RRT) and probabilistic roadmap (PRM). However, by adapting the cognitive map as a cost map, the A∗ algorithm is signiﬁcantly improved and surpasses the two algorithms in Scannet 3D dataset. We also introduce application of depth sensors and SLAM solvers on reconstructing the room and updating cognitive map. By running a virtual robot in Gazebo simulator, it is proved that our method can work well on synthetic environment and hence, is very promising to be worked on real-life environment.",,Depth camera based navigation algorithms for indoor mobile robot,,NO,,,YES,,,,,NO,,